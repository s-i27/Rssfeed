{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/mimitako/articles/python_list_combination_gen",
          "author": "mimitako",
          "description": "Python でリストの組合せを作成する\n大した技術ではありませんが、地味に使っているので公開します。\n\n モチベーション\nStable Diffusion で Prompt の組合せ評価を行っているとき、いろいろ組合せがあると面倒だからなんとかならんかなぁ？と考えていました。\n調べれば itertools というライブラリで目的は達成できるのですが、ベースを Json にしていたので、辞書キー:リストの形でうまく使えるようにしたかったです。\n\n 使い方\nコードは下記の通り簡単です。\n\nkey:list の形で形成された辞書を作成します。\n各 key のリストを大きいリストでネストし...",
          "link": "https://zenn.dev/mimitako/articles/python_list_combination_gen",
          "publishedOn": "2022-11-12T23:47:00.000Z",
          "wordCount": 306,
          "title": "Pythonでリストの組合せを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--q9wkqyy_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E7%25B5%2584%25E5%2590%2588%25E3%2581%259B%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--q9wkqyy_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E7%25B5%2584%25E5%2590%2588%25E3%2581%259B%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/neomocha/articles/2bc426bf067ef1",
          "author": "mocha",
          "description": "まとめると\n!\n有価証券報告書からのテキスト分析&財務分析をする準備として、EDINET APIから取得した有価証券報告書のテキストデータと財務データをGoogle Driveへ保存します🐱\n\n!\nGoogle Colabで動かしています。\n\nつぎの流れでやっていきます。\n\nライブラリのインポート\n有価証券報告書のdocIDを取得\n有価証券報告書が入ったzipファイルを取得\nzipファイルを解凍\nXBRLファイルからテキストデータと財務データを取得\n取得したデータをGoogle Driveに保存\n\n作成にあたっては次の記事を参考にしました。とても役立つ内容をありがとうございま...",
          "link": "https://zenn.dev/neomocha/articles/2bc426bf067ef1",
          "publishedOn": "2022-11-12T16:06:22.000Z",
          "wordCount": 2494,
          "title": "【Python】EDINET APIから取得した有価証券報告書のテキストデータと財務データを保存【Google Colab】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--23chLHVY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mocha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590Python%25E3%2580%2591EDINET%2520API%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E8%25B2%25A1%25E5%258B%2599%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2580%2590Google%2520Colab%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zWjIxb3pvOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1MjY1ZTk5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--23chLHVY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mocha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590Python%25E3%2580%2591EDINET%2520API%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E8%25B2%25A1%25E5%258B%2599%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2580%2590Google%2520Colab%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zWjIxb3pvOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1MjY1ZTk5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kokopi/articles/fd4ebe665b157b",
          "author": "ここぴのパパ",
          "description": "解決したい問題\n通常、ExcelのSheet内に画像を取り込みたいときは、メニューの挿入から画像を選択します。\nしかし、それが何枚もとなると面倒臭いですよね？\nさらに、業務などで日常的にとなると費やす時間は計り知れません。\n今回はそんな方に向けた記事を紹介していきます。\n\n\n 対象となる人\nプログラミングって何？なんか英語でつらつらと書くやつ？？\nそんなのさっぱりわからないしやりたくない、できない。というノンプログラマーの方に向けて丁寧に説明していきます。\n\n\n 解決策\nPython(パイソン)というプログラム言語を使って、Excelへの画像貼り付けを自動化します。\n待て待て、さっき...",
          "link": "https://zenn.dev/kokopi/articles/fd4ebe665b157b",
          "publishedOn": "2022-11-12T15:57:56.000Z",
          "wordCount": 761,
          "title": "Excelにまとめて画像ファイルを挿入する方法 Python編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--V0QQoQ6n--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25B4%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2591%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Excel%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2520Python%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzZNV054RGIwMnhtcWh1S3UwR2NMNlRGbXhHQkJJWm1sazlOaDM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--V0QQoQ6n--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25B4%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2591%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Excel%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2520Python%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzZNV054RGIwMnhtcWh1S3UwR2NMNlRGbXhHQkJJWm1sazlOaDM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/img2text_trial1",
          "author": "mimitako",
          "description": "画像からテキストを生成してみた\nさて、今回は画像からテキストを生成してみようと思います。画像には CC0 のものとそうでないものが混在したため、ここに貼付けせず、リンクで表記しています。\n\n モチベーション\nこの作業を行ったモチベーションは Stable Diffusion で遊ぶのは良いが、逆生成(img to prompt)はできないものかと思い実行しました。結果は散々なものです。ここには画像ありませんが、気になった方は読み進めてもらえると嬉しいです。\n\n img2text の中身\nほぼ Hugging Face にあったコードを利用させていただいています。Link\n修正したとこ...",
          "link": "https://zenn.dev/mimitako/articles/img2text_trial1",
          "publishedOn": "2022-11-12T14:34:56.000Z",
          "wordCount": 1208,
          "title": "画像からテキストを生成してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jxpd7TZN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jxpd7TZN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/100ba5ebfc19cb",
          "author": "ShunDev",
          "description": "確率質量関数\n確率質量関数は下記のように定義される.\n\n\\begin{align*}\nBern(x|\\mu) &= \\mu^x (1-x)^{(1-x)}\\\\\nx&=\\{0,1\\},\\; \\mu=(0,1)\n\\end{align*}\n\nただし, \\mu は平均である.\n\n 期待値・分散\n確率変数のとる値が0と1の二つで和の計算が簡単である.\n\n 期待値\n\n\\begin{align*}\n\\mathbb{E}(X)\n &= \\sum_{x=0}^1 x\\mu^x(1-\\mu)^{(1-x)}\\\\\n&=\n0\\cdot\\mu^0 (1-\\mu)^1 + 1 \\...",
          "link": "https://zenn.dev/shundeveloper/articles/100ba5ebfc19cb",
          "publishedOn": "2022-11-12T13:00:00.000Z",
          "wordCount": 1646,
          "title": "ベルヌーイ分布の期待値と分散, ベイズ推定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1QUSlYwL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%258C%25E3%2583%25BC%25E3%2582%25A4%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E3%2581%25A8%25E5%2588%2586%25E6%2595%25A3%252C%2520%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E6%258E%25A8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1QUSlYwL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%258C%25E3%2583%25BC%25E3%2582%25A4%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E3%2581%25A8%25E5%2588%2586%25E6%2595%25A3%252C%2520%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E6%258E%25A8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/canard0328/articles/memorandum-of-matplotlib",
          "author": "canard0328",
          "description": "毎回ググってるし、必要な情報は一か所にまとまっていて欲しいという、自分のための備忘録です。\n\n plt.plotか、ax.plotか\nimport matplotlib.pyplot as plt\nした後、簡単なグラフを書くには大きく2つの方法があります。一つ目は、\nplt.plot(...)\nplt.sho()\nとする方法です。もう一つは、\nfig, ax = plt.subplots()\nax.plot(...)\nplt.show()\nと書く方法です。\nグラフを１つ描画する場合にはどちらでもよいのですが、前者は後者の簡易的な記述方法ですので、後者の書き方で覚えておいたほうが応用が利く...",
          "link": "https://zenn.dev/canard0328/articles/memorandum-of-matplotlib",
          "publishedOn": "2022-11-12T08:57:31.000Z",
          "wordCount": 4324,
          "title": "matplotlibの備忘録",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZVXbz2Ln--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:canard0328%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:matplotlib%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeWI1NU40WlU4M2h0TDJiLXU5bXBsemctaEdkSmc1R3JzNndWSWY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZVXbz2Ln--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:canard0328%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:matplotlib%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeWI1NU40WlU4M2h0TDJiLXU5bXBsemctaEdkSmc1R3JzNndWSWY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/subaru_hello/articles/73253a46a76f7f",
          "author": "subaru-hello",
          "description": "陸上競技場が個人向けに開放されている日を調べるために、毎回サイトへ訪問して、PDFリンクをクリックして、今日が空いているのか、を確認するのって億劫ですよね。\n例えばこんな感じです。\n\nそこで、サイト内に存在するPDFをスクレイピングして中身をCSVへ保存するプログラムを作ろうと考えました。\n今回は、プログラム作成における戦略と戦術をまとめていきたいと思います。\n\n 本記事で作るプログラム\n長すぎるので二つの記事に分けたいと思います。\n本記事では、URLからHTMLを取得し、PDFファイルをスクレイピングしてローカルへ保存するまでを扱いたいと考えています。\nそして、出来上がるのは下記プログ...",
          "link": "https://zenn.dev/subaru_hello/articles/73253a46a76f7f",
          "publishedOn": "2022-11-12T08:54:43.000Z",
          "wordCount": 1675,
          "title": "【python】PDFをスクレイピングして中身をCSVへ出力する（前編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hfGRj8pW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:subaru-hello%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590python%25E3%2580%2591PDF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592CSV%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSU1ZEOHhyNG5oSFhxczdwcE5vSWx3MThxMGdaai1ETHh5a3RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hfGRj8pW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:subaru-hello%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590python%25E3%2580%2591PDF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592CSV%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSU1ZEOHhyNG5oSFhxczdwcE5vSWx3MThxMGdaai1ETHh5a3RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221112_python_csv_output",
          "author": "SiganAI",
          "description": "CSVファイルにデータを書き出す方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法１：pandas\nデータフレーム（表形式）のデータをCSVに保存しやすい．\npandasのto_csv関数を使用．\nCSVに保存されているデータをデータフレーム（表形式）で読み込むことが可能．\n引数path_or_bufにCSVファイルのパス（本記事では変数output_path）を渡す．\n\n インストール方法\n\nterminal\npip install pandas\n\n\n 実際の使用例\n\npandas_test.p...",
          "link": "https://zenn.dev/siganai/articles/20221112_python_csv_output",
          "publishedOn": "2022-11-12T08:18:48.000Z",
          "wordCount": 1256,
          "title": "【Python】CSVファイルへの書き出しについて【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PZwQ2h6s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25B8%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PZwQ2h6s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25B8%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nek0n0mimi/articles/4f461c2e3ebc45",
          "author": "calcifer",
          "description": "背景\n\nImportError: No module named bpy\n\nとなったので、pip install bpyとしたら\n\nERROR: Could not find a version that satisfies the requirement bpy\n\nと怒られた。\n\n 実行環境\n\nmacOS M1\nPython 3.9\n\n\n インストール\npipのアップグレード後、以下を実行する。\npip install fake-bpy-module-2.82\n※ バージョンを指定する",
          "link": "https://zenn.dev/nek0n0mimi/articles/4f461c2e3ebc45",
          "publishedOn": "2022-11-12T06:07:55.000Z",
          "wordCount": 132,
          "title": "macOS に bpy をインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M5Od34_R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:calcifer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:macOS%2520%25E3%2581%25AB%2520bpy%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SWnhXTXFySC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3MmQ1YzM4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M5Od34_R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:calcifer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:macOS%2520%25E3%2581%25AB%2520bpy%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SWnhXTXFySC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3MmQ1YzM4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sugyan/articles/5f45e4808ffc95",
          "author": "sugyan",
          "description": "きっかけ\n最近 @yanecoder さんが AtCoder の問題を解きまくっていて、さらにshortest記録更新にも熱心に取り組んでいるので、自分も以前に多少は嗜んでいたしと対抗心を燃やして挑んでみたところ、多くの学びがあったので記録として残しておく。\n※使用言語はPython3です\n\n Code Golf とは\nとにかく短いコード(byte数)で目的を達成するプログラムを書くこと。\nhttps://ja.wikipedia.org/wiki/コードゴルフ\nAtCoder では AC をとれれば目的達成といえるし、言語別にすべての提出のコード長も表示されるので分かりやすい。\n\n...",
          "link": "https://zenn.dev/sugyan/articles/5f45e4808ffc95",
          "publishedOn": "2022-11-11T09:16:00.000Z",
          "wordCount": 3540,
          "title": "AtCoderのとある問題でCode Golfに挑戦した記録 (Python3)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fup8iLUX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sugyan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E3%2581%25AE%25E3%2581%25A8%25E3%2581%2582%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A7Code%2520Golf%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E9%258C%25B2%2520%2528Python3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hsYm9tX200WEFYRkxPQUM3a3pmaW5zZG81NG9RZU5PMUgtV2hQbjNJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fup8iLUX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sugyan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E3%2581%25AE%25E3%2581%25A8%25E3%2581%2582%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A7Code%2520Golf%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E9%258C%25B2%2520%2528Python3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hsYm9tX200WEFYRkxPQUM3a3pmaW5zZG81NG9RZU5PMUgtV2hQbjNJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221106_python_csv_input",
          "author": "SiganAI",
          "description": "CSVファイルに保存されたデータを読み込む方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法１：pandasの使用\n個人的に一番使っている方法．\npandasのread_csv関数を使用．\nCSVに保存されているデータをデータフレーム（表形式）で読み込むことが可能．\n引数filepath_or_bufferにCSVファイルのパス（本記事では変数path）を渡す．\n\n インストール方法\n\nterminal\npip install pandas\n\n\n 実際の使用例\n\npandas_test.py\nim...",
          "link": "https://zenn.dev/siganai/articles/20221106_python_csv_input",
          "publishedOn": "2022-11-11T09:02:59.000Z",
          "wordCount": 1412,
          "title": "【Python】CSVファイルの読み込みについて【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/c58b4a16269bad",
          "author": "Tokoroteen",
          "description": "1. 概要\nhttps://zenn.dev/tokoroteen/articles/113ed90c5eefb6\nこちらの続き\n普段MacでAnacondaを使っているので、ラズパイでもcondaを使えるようにしようと思いましたが、Raspberry Pi 4でMinicondaは上手く動かないみたいです。\n参考：https://qiita.com/hanaata/items/39ada844c7c292d2fef1#python\nラズパイ用にberrycondaというものもあるようですが、こちらも\n\nThis project is no longer active\nhttps:/...",
          "link": "https://zenn.dev/tokoroteen/articles/c58b4a16269bad",
          "publishedOn": "2022-11-10T14:48:34.000Z",
          "wordCount": 234,
          "title": "Raspberry Pi 4 model Bで仮想環境をつくる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--e40eoBLY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%25204%2520model%2520B%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--e40eoBLY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%25204%2520model%2520B%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/honehone/articles/482f9a3b5ca481",
          "author": "プロトケラトプス",
          "description": "最近はJavaScriptを使ったサイトがほとんどなのでPythonのrequestsライブラリだけでスクレイピングなんかをするのは難しくなってきていますね。\nそんなときにはSelenumでブラウザを操作する必要があるのですが、Selenum`はrequestsと違い使うのに準備が必要です。\nというわけでこの記事ではSeleniumを使い始めるまでの方法を残します。\n\n 環境\n\nUbuntu 20.04\nPython 3.8.6\nGoogle Chrome 107.0.5304.110\nSelenium 4.6.0\nchromedriver-binary 107.0.5304.62.0\n...",
          "link": "https://zenn.dev/honehone/articles/482f9a3b5ca481",
          "publishedOn": "2022-11-10T12:00:48.000Z",
          "wordCount": 485,
          "title": "Python+selenumでchromeを動かすまで（Ubuntu）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9ue6ZZJP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25B1%25E3%2583%25A9%25E3%2583%2588%25E3%2583%2597%25E3%2582%25B9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%252Bselenum%25E3%2581%25A7chrome%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2588Ubuntu%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nRmFLWmVibi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYjg5YjA0NzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9ue6ZZJP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25B1%25E3%2583%25A9%25E3%2583%2588%25E3%2583%2597%25E3%2582%25B9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%252Bselenum%25E3%2581%25A7chrome%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2588Ubuntu%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nRmFLWmVibi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYjg5YjA0NzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/books/python_contents",
          "author": "SiganAI",
          "description": "Pythonを使ったデータ処理に関する簡単なコードをまとめていく本",
          "link": "https://zenn.dev/siganai/books/python_contents",
          "publishedOn": "2022-11-10T05:27:59.000Z",
          "wordCount": 53,
          "title": "Python入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uDo1yHlA--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hMGMyYTY4ZDJhLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uDo1yHlA--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hMGMyYTY4ZDJhLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221106_python_csv_output",
          "author": "SiganAI",
          "description": "CSVファイルに保存されたデータを読み込む方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法１：pandasの使用\n個人的に一番使っている方法．\npandasのread_csv関数を使用．\nCSVに保存されているデータをデータフレーム（表形式）で読み込むことが可能．\n引数filepath_or_bufferにCSVファイルのパス（本記事では変数path）を渡す．\n\n インストール方法\n\nterminal\npip install pandas\n\n\n 実際の使用例\n\npandas_test.py\nim...",
          "link": "https://zenn.dev/siganai/articles/20221106_python_csv_output",
          "publishedOn": "2022-11-10T04:54:24.000Z",
          "wordCount": 1412,
          "title": "【Python】CSVファイルの読み込みについて【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/luup/articles/data-oshima-20221105",
          "author": "Luup Developers Blog",
          "description": "こんにちは！\nLuupのData Strategy部（Data Scienceチーム所属）の大島です。ここでは、LuupのData Scienceチームと、Luupのデータ分析の醍醐味である地理空間データを使ったポート密度に関する分析をご紹介します。\n\n LuupのData Scienceチームの紹介\nLuupの事業では、電動アシスト自転車や電動キックボードを停めるポートの獲得、アプリや車両などのプロダクトの設計・開発・運用、車両の充電・再配置といったオペレーション、社会への発信・広報活動など、様々な取り組みが必要です。これらの取り組みをデータドリブンで推進していくのがLuupのData...",
          "link": "https://zenn.dev/luup/articles/data-oshima-20221105",
          "publishedOn": "2022-11-10T03:57:48.000Z",
          "wordCount": 962,
          "title": "エリア面積計算の多面的アプローチ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WT3StYCP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Luup%2520Developers...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%25A2%25E9%259D%25A2%25E7%25A9%258D%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E5%25A4%259A%25E9%259D%25A2%25E7%259A%2584%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS12QkY3OGdoRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NTAyYzg5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WT3StYCP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Luup%2520Developers...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%25A2%25E9%259D%25A2%25E7%25A9%258D%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E5%25A4%259A%25E9%259D%25A2%25E7%259A%2584%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS12QkY3OGdoRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NTAyYzg5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryuta_kojima/articles/671e374268f8b4",
          "author": "ryuta_kojima",
          "description": "はじめに\nはい、今回は有名なタイタニックデータで教師あり学習の分類を行っていきます！\nタイタニックの乗客が生存したかどうか判定してもらいましょう！\n初心者でも実装できて、評価指標などを考察してみるのを目標にします！\n※僕自身も初心者のため、間違っている部分があればコメントにてご指摘いただければ、幸いです。\n今回の流れは\nデータ読み込み => 加工 => モデル作成 => 推論\nで行っていきます！\n\n 環境\n\ncolab\n\n\n 準備\n今回使うのは有名なデータセットでタイタニックデータです。\nまずはデータを読み込みましょう！ってことで、あらかじめgoogle drive...",
          "link": "https://zenn.dev/ryuta_kojima/articles/671e374268f8b4",
          "publishedOn": "2022-11-10T02:26:42.000Z",
          "wordCount": 1233,
          "title": "【教師あり学習・分類】タイタニックデータで生存者分析をやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XJH89E7c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuta_kojima%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%2595%2599%25E5%25B8%25AB%25E3%2581%2582%25E3%2582%258A%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25BB%25E5%2588%2586%25E9%25A1%259E%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25A4%25E3%2582%25BF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7%25E7%2594%259F%25E5%25AD%2598%25E8%2580%2585%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MGpPMUNYQ08xRGtfNjFMTW56M09PTDhHNFFwaEQxdF82YmNnRUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XJH89E7c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuta_kojima%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%2595%2599%25E5%25B8%25AB%25E3%2581%2582%25E3%2582%258A%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25BB%25E5%2588%2586%25E9%25A1%259E%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25A4%25E3%2582%25BF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7%25E7%2594%259F%25E5%25AD%2598%25E8%2580%2585%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MGpPMUNYQ08xRGtfNjFMTW56M09PTDhHNFFwaEQxdF82YmNnRUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/sklearn-nn-mlpclf02",
          "author": "NekoAllergy",
          "description": "この記事は、\nhttps://zenn.dev/nekoallergy/articles/sklearn-nn-mlpclf01\nの続きです。\n上記の記事を読んでからだと、理解がより進むと思います。\n\n!\n\n 対象読者\n\n機械学習、ニューラルネットワーク、ディープラーニングがしたい方\nPython が何となく分かる方\nMLPClassifier を使いこなしたい方\n\n\n!\n\n この記事で分かること\n\nMLPClassifier の使い方とパラメータ調整の仕方\n\n\n\nPython の基礎を本にまとめています。併せてご覧いただけるととても嬉しいです ↓\nhttps://zenn.dev/ne...",
          "link": "https://zenn.dev/nekoallergy/articles/sklearn-nn-mlpclf02",
          "publishedOn": "2022-11-09T23:11:59.000Z",
          "wordCount": 1285,
          "title": "【図解】MLPClassifierの使い方まとめ【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KtWuVRbA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591MLPClassifier%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KtWuVRbA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591MLPClassifier%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/lgb_parameters_list",
          "author": "mimitako",
          "description": "LightGBM のパラメータ一覧\nここを見れば OK...\nそうは言っても、英語だし、意外と見づらいので自分の勉強も兼ねて一度まとめてみました。ちなみに、各パラメータについて説明をしているわけではないので、あしからず。各パラメータの後ろのコメントは他の機械学習などでの別名、一般名だったり、説明だったりします。別名を入れても動くというわけではないのでお気をつけください。\nまた、ここで紹介する params の記法は辞書の特性上 NG（キーの重複）ですが、見やすく紹介する上で必要な表現方法だとご理解ください。\n!\n今回紹介しているパラメータは document v3.3.3 を参照して...",
          "link": "https://zenn.dev/mimitako/articles/lgb_parameters_list",
          "publishedOn": "2022-11-09T23:05:59.000Z",
          "wordCount": 1659,
          "title": "LightGBMのParameter List",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yyqEiWEY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:LightGBM%25E3%2581%25AEParameter%2520List%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yyqEiWEY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:LightGBM%25E3%2581%25AEParameter%2520List%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/atfujita/articles/0db060faf1f17d",
          "author": "atfujita",
          "description": "3Dの姿勢推定が簡単にできるライブラリを探していたのですが、任意の動画を対象としたチュートリアルが充実したものが少なかったです。\nVideoPose3Dは最新ではないですが、そうした中でも簡単に任意の画像で3Dの姿勢推定ができるいいライブラリだったので備忘録も兼ねて手順をまとめます。\n公式な手順は↓のINFERENCE.md内にあります。\nhttps://github.com/facebookresearch/VideoPose3D\n\n 実行環境\n\nAmazon EC2 p3.2xlarge\nUbuntu20.04\n\n\n 環境構築\n\nCondaでも何でもいいので仮想環境を作ります。\nff...",
          "link": "https://zenn.dev/atfujita/articles/0db060faf1f17d",
          "publishedOn": "2022-11-09T14:30:12.000Z",
          "wordCount": 651,
          "title": "VideoPose3Dをサクッと動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EkrOF6He--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:atfujita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:VideoPose3D%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ncU1FUnBVOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YjI0ZWUyZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EkrOF6He--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:atfujita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:VideoPose3D%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ncU1FUnBVOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YjI0ZWUyZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/irugo/articles/06a67373aa713a",
          "author": "いるんご",
          "description": "これは何？\nこの記事は、東京大学工学部電子情報工学科/電気電子工学科の後期実験「大規模ソフトウェアを手探る」のレポートとして作成されました。この実験では、各班がOSSを1つ選び、開発技法を学びながら新たな機能追加やバグ修正などを試みます。私たちの班(@irungo_ic, @yutyan_ut, @ncrpy)はCPython を選びました。\nhttps://github.com/python/cpython\n\n CPythonとは\nプログラミング言語であるPythonの、C言語による実装です。つまり、C言語で書かれたPythonのインタプリタです。\n\n CPythonを選んだ理由\n...",
          "link": "https://zenn.dev/irugo/articles/06a67373aa713a",
          "publishedOn": "2022-11-09T13:17:29.000Z",
          "wordCount": 2701,
          "title": "Pythonのlistをもっと便利に +α 【大規模ソフトウェアを手探る】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hBO0C2Sz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2582%258B%25E3%2582%2593%25E3%2581%2594%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AElist%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%2520%252B%25CE%25B1%2520%25E3%2580%2590%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%2592%25E6%2589%258B%25E6%258E%25A2%25E3%2582%258B%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IZXpQaW9uWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NDg1YzczYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hBO0C2Sz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2582%258B%25E3%2582%2593%25E3%2581%2594%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AElist%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%2520%252B%25CE%25B1%2520%25E3%2580%2590%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%2592%25E6%2589%258B%25E6%258E%25A2%25E3%2582%258B%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IZXpQaW9uWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NDg1YzczYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/isuya1992/articles/cmd-check-pycode",
          "author": "isuya1992",
          "description": "はじめに\nFlake8やmypyは、Pythonのコードを静的解析するツールである。Flake8はPEP8のコーディング規約、mypyは型ヒントのミスをチェックする。\nただし、全ての規約に従ってコーディングするのはナンセンスなケースもあり得る。この場合、コマンドを追記することで、一部の規約を無視できる。\nflake8 [.pyファイル/ディレクトリのパス] --ignore=E501\nmypy [.pyファイルの/ディレクトリのパス]  --ignore-missing-imports\nPEP8のE501は1行の文字数を79文字以下に制限する規則であり、一般的には不要だろう。\nmyp...",
          "link": "https://zenn.dev/isuya1992/articles/cmd-check-pycode",
          "publishedOn": "2022-11-09T10:37:06.000Z",
          "wordCount": 1856,
          "title": "自作コマンドでFlake8やmypyを一気に行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---3RJRREC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:isuya1992%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%2587%25AA%25E4%25BD%259C%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7Flake8%25E3%2582%2584mypy%25E3%2582%2592%25E4%25B8%2580%25E6%25B0%2597%25E3%2581%25AB%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MU9fdTlOeWlMRldPdzAyRlF2cDNHQmdycGxFamxTdGdFVENyMUs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---3RJRREC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:isuya1992%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%2587%25AA%25E4%25BD%259C%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7Flake8%25E3%2582%2584mypy%25E3%2582%2592%25E4%25B8%2580%25E6%25B0%2597%25E3%2581%25AB%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MU9fdTlOeWlMRldPdzAyRlF2cDNHQmdycGxFamxTdGdFVENyMUs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/d308d408a1803c",
          "author": "banananeko",
          "description": "今回比較するエディタ\n今回比較するエディタは\nこちらです↓\n\nIDLE\nvisual studio code(以下、VScodeとします)\npycharm\n\n\n IDLE\n公式サイト\nhttps://docs.python.org/ja/3/library/idle.html\n\n IDLEとは\nIDLEとは pythonに標準で搭載されているエディタでシンプルなデザインが特徴です\n\n IDLEの機能\n\n 色分け機能\nIDLEには色分け機能があります\n\n 赤色\nエラーの時の文字\n\n 青色\n出力時の文字\n\n 緑色\n「”」でかこまれた文字列\n\n オレンジ色\nキーワードimportやforな...",
          "link": "https://zenn.dev/banananeko/articles/d308d408a1803c",
          "publishedOn": "2022-11-09T08:48:40.000Z",
          "wordCount": 322,
          "title": "pythonのエディタを比較してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iXUXGRUw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iXUXGRUw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/ba57a187654bce",
          "author": "よしだ",
          "description": "import os\nimport time\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.datasets import make_regression\nfrom cmdstanpy import CmdStanModel\n\n データの読み込み\n以下のデータを使用しています。\nx, y, true_coef = make_regression(random_state=12, \n                       n_samples=100, \n  ...",
          "link": "https://zenn.dev/yoshida0312/articles/ba57a187654bce",
          "publishedOn": "2022-11-09T08:35:47.000Z",
          "wordCount": 2184,
          "title": "cmdstanpy : スパースモデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vKdYEawV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E3%2582%25B9%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vKdYEawV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E3%2582%25B9%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mksh/articles/reasons-for-selecting-sendgrid-d39648e23bf398",
          "author": "mksh",
          "description": "概要\nとあるプロジェクトのメール通知機能にてSendGridを採用した理由に関する社内向けの備忘録。実際のプロジェクトに関する情報は抽象化している。\n\n プロジェクトの規模感\nSendGridを採用したプロジェクトでの見積もりは大まかに以下の通りとなる。\n\nユーザ数120名（リリース初期）\n1回/日の定時連絡メール\n10回/月程度（平均）の不定期通知メール（リリース初期）\n\nなお定時連絡および不定期の連絡はユーザそれぞれに対してメールが送信される。\nまたユーザ数は120名単位で増加する見込みあり。\n上記より、リリース初期段階では3,730通/月のメール配信が見込まれる。\n\n メール通...",
          "link": "https://zenn.dev/mksh/articles/reasons-for-selecting-sendgrid-d39648e23bf398",
          "publishedOn": "2022-11-09T00:41:36.000Z",
          "wordCount": 772,
          "title": "【備忘録】SendGrid選定理由",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lS4TQjKV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mksh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591SendGrid%25E9%2581%25B8%25E5%25AE%259A%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lS4TQjKV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mksh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591SendGrid%25E9%2581%25B8%25E5%25AE%259A%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/bugph0bia/articles/dcecf44e4d2082",
          "author": "bugph0bia",
          "description": "はじめに\nPython でログ出力を行う場合、標準ライブラリの logging を使用することが多いと思います。\nlogging モジュールに用意されている既定のハンドラの中の RotatingFlieHander を使用するとファイルのログローテーションが簡単に行えて便利なのですが、ローテーションした古いログファイルを圧縮したい場合はひと手間加える必要があります。\n!\nsyslog を利用したロギングを行うのであれば syslogd の設定でファイルを圧縮することができますが、ここでは、あくまで RotatingFlieHander を使用したログファイル出力におけるファイル圧縮に...",
          "link": "https://zenn.dev/bugph0bia/articles/dcecf44e4d2082",
          "publishedOn": "2022-11-08T14:51:32.000Z",
          "wordCount": 1295,
          "title": "Python でログファイルを圧縮する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QiHnATBX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bugph0bia%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xQWlxYkhjeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3M2MxZWE0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QiHnATBX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bugph0bia%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xQWlxYkhjeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3M2MxZWE0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/harurow/articles/c903de5f479a57",
          "author": "www.harurow",
          "description": "今回やったこと\n開発環境をコンテナに構築しホストのVisual Studio Codeからイジイジできるようにした。\n動作検証環境は Mac mini 2020(Apple M1), MacBook Pro 2019(Intel Core)で検証しています。Windows, Linux では試せていません。\n\n メリット\n開発環境の再現性が高いため以下のようなメリットが得られます。\n\n同じ開発環境をすぐに提供できる[1]\n\nツール・ライブラリのバージョンをプロジェクト毎に決められる\nホストの環境を汚さずにちょっとお試しができる\nDockerの設定によっては構築時の最新バージョンのツー...",
          "link": "https://zenn.dev/harurow/articles/c903de5f479a57",
          "publishedOn": "2022-11-08T13:51:39.000Z",
          "wordCount": 1652,
          "title": "VSCode+Docker+Dev Containerを使って開発環境をコンテナに作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EAkH6Qj---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:www.harurow%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:VSCode%252BDocker%252BDev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HT1FmVUU4bS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3OTViZWQ1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EAkH6Qj---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:www.harurow%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:VSCode%252BDocker%252BDev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HT1FmVUU4bS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3OTViZWQ1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k41531/articles/f47f536a18491a",
          "author": "kaisei",
          "description": "初心に還ってパーセプトロンを実装します。\n\n 単純パーセプトロンがANDを学習している様子\n\n\n パーセプトロンとは\n1958年、Rosenblattによって提案されたネットワークモデル。\n脳の中の生物学的なニューロンを単純化したモデルで、最も単純なニューラルネットワークです。\n線形分離可能な問題であれば解くことができます。\nここではパーセプトロンの中でも単純パーセプトロンを取り扱います。\nパーセプトロンは、ニューロンを次のようなステップでモデル化している。\n（入力がn個で出力が1個のパーセプトロン）\n\n入力信号を受け取る。（入力：x_i）\n入力の重み付きの和を計算（重み：w_i）\n2の...",
          "link": "https://zenn.dev/k41531/articles/f47f536a18491a",
          "publishedOn": "2022-11-08T13:29:00.000Z",
          "wordCount": 704,
          "title": "【Python】単純パーセプトロンを理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--an0B3yHQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaisei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E5%258D%2598%25E7%25B4%2594%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BB%25E3%2583%2597%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dOQ1hOY3JPWXQzaFBqWTkyM255eG8yVkQyczdsNWFfOVlERmxqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--an0B3yHQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaisei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E5%258D%2598%25E7%25B4%2594%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BB%25E3%2583%2597%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dOQ1hOY3JPWXQzaFBqWTkyM255eG8yVkQyczdsNWFfOVlERmxqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/imksoo/articles/81645222f9f30b",
          "author": "きりの",
          "description": "Installing Ansible に従って入れるのだが、標準だと python3-pip がないので python3 -m pip の部分で \"/usr/bin/python3: No module named pip\" になる。\n\nなので、最初に python3-pip をインストールする。\nsudo apt install -y python3-pip\n\n改めて sudo python3 -m pip install ansible を実行する。\nsudo python3 -m pip install ansible",
          "link": "https://zenn.dev/imksoo/articles/81645222f9f30b",
          "publishedOn": "2022-11-08T05:40:27.000Z",
          "wordCount": 166,
          "title": "Ubuntu 22.04 に Ansible をインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d7uCu-3Y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2582%258A%25E3%2581%25AE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ubuntu%252022.04%2520%25E3%2581%25AB%2520Ansible%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2ppZDk3WFBfT29yZjdGUjcwYnMxRmpOU0pnVHZTbXcwdTlwUTlNQW89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d7uCu-3Y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2582%258A%25E3%2581%25AE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ubuntu%252022.04%2520%25E3%2581%25AB%2520Ansible%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2ppZDk3WFBfT29yZjdGUjcwYnMxRmpOU0pnVHZTbXcwdTlwUTlNQW89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yutafujiwara/articles/2d568f168c2e65",
          "author": "フジワラユウタ",
          "description": "概要\nRaspberry Pi × 電子ペーパーで最新のお天気情報を表示する電子版を作りました！！ 初めてRaspberryを触ってみたので、環境構築から開発するまでの取り組みをZennにまとめました！！\nRaspberryPiを購入して何かを作ろうとしている人、夏休みの工作で何か作ろうと考えている人向けの内容になっております。\n\n 作ったもの\n\n\n ソース\nhttps://github.com/FujiyamaYuta/e_paper_weather_display\n\n 使っているデバイス\n\nRaspberry Pi 3 Model B\nMicro SDカード（32GB）\n電子ペー...",
          "link": "https://zenn.dev/yutafujiwara/articles/2d568f168c2e65",
          "publishedOn": "2022-11-08T03:21:52.000Z",
          "wordCount": 4617,
          "title": "Raspberry Pi  × 電子ペーパーで最新のお天気情報を表示する電子版を作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1Froc5vd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2595%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25A9%25E3%2583%25A6%25E3%2582%25A6%25E3%2582%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Raspberry%2520Pi%2520%2520%25C3%2597%2520%25E9%259B%25BB%25E5%25AD%2590%25E3%2583%259A%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%25E3%2581%25A7%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AE%25E3%2581%258A%25E5%25A4%25A9%25E6%25B0%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E9%259B%25BB%25E5%25AD%2590%25E7%2589%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNdFlrLTVLbUZvVk41X2MzREgtYXNHcTJ2RHB6UnRKTDhhdXpjSEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1Froc5vd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2595%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25A9%25E3%2583%25A6%25E3%2582%25A6%25E3%2582%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Raspberry%2520Pi%2520%2520%25C3%2597%2520%25E9%259B%25BB%25E5%25AD%2590%25E3%2583%259A%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%25E3%2581%25A7%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AE%25E3%2581%258A%25E5%25A4%25A9%25E6%25B0%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E9%259B%25BB%25E5%25AD%2590%25E7%2589%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNdFlrLTVLbUZvVk41X2MzREgtYXNHcTJ2RHB6UnRKTDhhdXpjSEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/e82f4c94d62b4b",
          "author": "Tokoroteen",
          "description": "1. 概要\n研究で実験装置からたくさんのテキストファイルが出てきます。\nこれらのグラフ化する上で、1つずつExcelにインポートするのがめんどくさいので一気にExcel化できるようにしようと考えました。\n完成品はこちら↓\nhttps://colab.research.google.com/drive/1H_83P0nVApHKIQvfUVAyOAgPqxxx85nf?usp=sharing\n区切り文字を選んで、実行し、\n\nファイルを選んで、\n\nExcelファイルにつけたい名前を入力すれば、\n\n出来上がり！！\n\n\n 2. 機能\n\nテキストファイルの区切り文字を選ぶ\n（複数の）テキストフ...",
          "link": "https://zenn.dev/tokoroteen/articles/e82f4c94d62b4b",
          "publishedOn": "2022-11-07T23:00:00.000Z",
          "wordCount": 1321,
          "title": "複数のテキストファイルを１つのExcelファイルにまとめたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--O1aBGvm3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25EF%25BC%2591%25E3%2581%25A4%25E3%2581%25AEExcel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--O1aBGvm3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25EF%25BC%2591%25E3%2581%25A4%25E3%2581%25AEExcel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tatsuya4499/articles/880db89990a73e",
          "author": "Tatsuya",
          "description": "はじめに\n普段は主に機械学習のコードはPyTorchで書いています。とりあえず書きやすいですよね。\nPyTorchは 「Define by Run」 と言われ、計算グラフとデータを流すタイミング同時で、何が良いかと言うと、途中の計算結果を確認できてデバックが楽です。そんなPyTorch信者の私ですが、今回TensorFlowでコードを書く必要性が出てきたのでその時のノウハウを忘れないようにメモとして残しておきます。\nもともとPyTorchを触る前までは、TensorFlowやkerasを触っていたのでなんとなくは把握できていましたが、TensorFlow2になってからの内容はあまり把...",
          "link": "https://zenn.dev/tatsuya4499/articles/880db89990a73e",
          "publishedOn": "2022-11-07T13:45:31.000Z",
          "wordCount": 2370,
          "title": "TensorFlow2で機械学習をはじめたいと思ってる方へ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--avGDOwCj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TensorFlow2%25E3%2581%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E6%2596%25B9%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d5THBtT0M5X2tFdmYyVG9kWHpmcUd5MXI1aFJ1ay1MR3gweXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--avGDOwCj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TensorFlow2%25E3%2581%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E6%2596%25B9%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d5THBtT0M5X2tFdmYyVG9kWHpmcUd5MXI1aFJ1ay1MR3gweXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/940cf394efc85f",
          "author": "nakamura196",
          "description": "概要\nOmeka SのREST APIをPythonから操作可能なパッケージが開発されています。\nhttps://github.com/wragge/omeka_s_tools\nさらに、上記のリポジトリをベースとして、いくつかの機能追加を行なったリポジトリを作成しています。\nhttps://github.com/nakamura196/omeka_s_tools2\n本稿では、このリポジトリについて紹介します。\n\n 使い方\n以下のページを参考にしてください。\nhttps://nakamura196.github.io/omeka_s_tools2/\n本リポジトリはnbdevを用いて開発...",
          "link": "https://zenn.dev/nakamura196/articles/940cf394efc85f",
          "publishedOn": "2022-11-07T09:34:28.000Z",
          "wordCount": 203,
          "title": "Omeka SのREST APIとやりとりするためのPythonパッケージ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FRn__V1r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Omeka%2520S%25E3%2581%25AEREST%2520API%25E3%2581%25A8%25E3%2582%2584%25E3%2582%258A%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FRn__V1r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Omeka%2520S%25E3%2581%25AEREST%2520API%25E3%2581%25A8%25E3%2582%2584%25E3%2582%258A%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tamanugi/articles/b74138a13d0399",
          "author": "たまぬぎ",
          "description": "Amazon Linux2にデフォルトで入っているPythonのバージョンは3.7と少し古く、またyumで入れられるバージョンも3.8と最新バージョンには少し古いです。\nPython3.10とPoetryをインストールする必要があったので手順を忘れないようにメモシておきたいと思います。\n(本当はAnsibleなどで自動化すべきなんでしょうか・・・)\n\n 必要なライブラリのインストール\nyumで必要なライブラリをインストールしておきます。\nopenssl-develは古いものが入っている場合があるので削除して、openssl11をインストールするようにします\n$ sudo yum remo...",
          "link": "https://zenn.dev/tamanugi/articles/b74138a13d0399",
          "publishedOn": "2022-11-07T07:46:42.000Z",
          "wordCount": 312,
          "title": "Amazon Linux2にPython3.10とPoetryをインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FJllKYcB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25AC%25E3%2581%258E%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amazon%2520Linux2%25E3%2581%25ABPython3.10%25E3%2581%25A8Poetry%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11YzJYNnhFZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5OTI0MDY3NWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FJllKYcB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25AC%25E3%2581%258E%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amazon%2520Linux2%25E3%2581%25ABPython3.10%25E3%2581%25A8Poetry%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11YzJYNnhFZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5OTI0MDY3NWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/arkwknsk/articles/cc9d77bddeecf7",
          "author": "アラカワケンスケ",
          "description": "Pythonコードから、パフォーマンスモードに切り替える方法\n\n 動作環境\nBuild 2022.29850\n\n コード\nui.performMode = True",
          "link": "https://zenn.dev/arkwknsk/articles/cc9d77bddeecf7",
          "publishedOn": "2022-11-07T00:03:40.000Z",
          "wordCount": 83,
          "title": "[TouchDesigner]Pythonから、パフォーマンスモードに切替",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LofZ5dEk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25AB%25E3%2583%25AF%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BTouchDesigner%255DPython%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E5%2588%2587%25E6%259B%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tM0pyWW9vOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjUzZDI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LofZ5dEk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25AB%25E3%2583%25AF%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BTouchDesigner%255DPython%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E5%2588%2587%25E6%259B%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tM0pyWW9vOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjUzZDI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/ab31ea782df6ec",
          "author": "Tokoroteen",
          "description": "1. 概要\nこの記事は第４回の続きです。\nhttps://zenn.dev/tokoroteen/articles/28ad4b0c2ec178/\n第４回ではこれまで集めてきたデータを使って、Doc2Vecでモデル構築を行いました。今回はそのモデルをチューニングしつつ、アクティビティーのレコメンド機能を実装していきます。\n完成したアプリはこちら↓\nhttps://lifac.herokuapp.com/\n例えば「空を飛びたい」とき（検索後に海要素を足して、山要素を引くこともできます！！）\n\n例えば「動物に癒されたい」とき\n\n\n 2. 前回のモデルの確認\nまずは前回作ったモデルでアクテ...",
          "link": "https://zenn.dev/tokoroteen/articles/ab31ea782df6ec",
          "publishedOn": "2022-11-06T23:00:00.000Z",
          "wordCount": 2295,
          "title": "第５回 【Python】まだ見ぬアクティビティーを求めてアソビュー ！Doc2Vecモデルチューニング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cIbFyMre--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E7%25AC%25AC%25EF%25BC%2595%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581Doc2Vec%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cIbFyMre--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E7%25AC%25AC%25EF%25BC%2595%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581Doc2Vec%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/red_picmin/articles/1f0679d32877da",
          "author": "アカピクミン",
          "description": "概要\nGoogle Cloud Translation を利用してテキストを翻訳する手順を解説します。\nGoogle Cloud Translation は課金設定が必要ですが、月あたり500,000 文字まで無料です。\nGoogle Cloud Translation は有料サービスだけに、高品質で高速な翻訳結果が得られます。\n[利用までの手順]\n\nGoogle Cloud プロジェクトの作成\nCloud Translation API の有効化\nサービス アカウントとキーの作成\nサービス アカウント キー ファイルの適用\nクライアント ライブラリのインストール\n翻訳実行\n\n\n G...",
          "link": "https://zenn.dev/red_picmin/articles/1f0679d32877da",
          "publishedOn": "2022-11-06T09:34:41.000Z",
          "wordCount": 521,
          "title": "Google Cloud Translation を利用したテキスト翻訳",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2YHPOi6W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2594%25E3%2582%25AF%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cloud%2520Translation%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E7%25BF%25BB%25E8%25A8%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZkUF9NWmExN2ZBamtPcVlGNXU0RE1xWjdTS0lDelhIdGdKb3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2YHPOi6W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2594%25E3%2582%25AF%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cloud%2520Translation%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E7%25BF%25BB%25E8%25A8%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZkUF9NWmExN2ZBamtPcVlGNXU0RE1xWjdTS0lDelhIdGdKb3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/red_picmin/articles/cf230ca762f04e",
          "author": "アカピクミン",
          "description": "pythonで日付の取得、タイムゾーンの扱い、日付フォーマット等の扱い方を解説します。\n\n import\nfrom datetime import timezone,timedelta,datetime\n\n 日付の扱い一式\n\n    # タイムゾーン定義\n    UTC = timezone(timedelta(hours=0), 'UTC')\n    EST = timezone(timedelta(hours=-5), 'EST')\n    JST = timezone(timedelta(hours=+9), 'JST')\n\n    # 現在時刻取得   \n    now = da...",
          "link": "https://zenn.dev/red_picmin/articles/cf230ca762f04e",
          "publishedOn": "2022-11-06T09:33:38.000Z",
          "wordCount": 632,
          "title": "pythonでの日付の扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X_3fiSLt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2594%25E3%2582%25AF%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A7%25E3%2581%25AE%25E6%2597%25A5%25E4%25BB%2598%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZkUF9NWmExN2ZBamtPcVlGNXU0RE1xWjdTS0lDelhIdGdKb3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X_3fiSLt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2594%25E3%2582%25AF%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A7%25E3%2581%25AE%25E6%2597%25A5%25E4%25BB%2598%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZkUF9NWmExN2ZBamtPcVlGNXU0RE1xWjdTS0lDelhIdGdKb3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221106_python_csv",
          "author": "SiganAI",
          "description": "CSVファイルに保存されたデータを読み込む方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法１：pandasの使用\n個人的に一番使っている方法．\npandasのread_csv関数を使用．\nCSVに保存されているデータをデータフレーム（表形式）で読み込むことが可能．\n引数filepath_or_bufferにCSVファイルのパス（本記事では変数path）を渡す．\n\n インストール方法\n\nterminal\npip install pandas\n\n\n 実際の使用例\n\npandas_test.py\nim...",
          "link": "https://zenn.dev/siganai/articles/20221106_python_csv",
          "publishedOn": "2022-11-06T09:30:43.000Z",
          "wordCount": 1412,
          "title": "【Python】CSVファイルの読み込みについて【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/horitaka/articles/4fc4a5c19bee22",
          "author": "horitaka",
          "description": "概要\n最近、Pythonの開発で使用するエディタをVSCodeからPyCharmに乗り換えたので、PyCharmの設定をしました。\nファイルを保存したときにlinterとformatterが自動実行されるように設定しました。\n!\n普段のチーム開発ではPyCharm以外のエディタを使用しているメンバーもいます。そのため、pre-commitを使ってcommit時にlinterとformatterが実行されるようにしてコードスタイルがチーム内で統一できるようにしています。\n\nPyCharmのバージョン\n\nCommunity Edition\nバージョン: 2022.2.3\nビルド: 222...",
          "link": "https://zenn.dev/horitaka/articles/4fc4a5c19bee22",
          "publishedOn": "2022-11-06T09:21:03.000Z",
          "wordCount": 927,
          "title": "【PyCharm】ファイル保存時にlinterとformatterが自動実行されるように設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3JG9jjuP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:horitaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590PyCharm%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E4%25BF%259D%25E5%25AD%2598%25E6%2599%2582%25E3%2581%25ABlinter%25E3%2581%25A8formatter%25E3%2581%258C%25E8%2587%25AA%25E5%258B%2595%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UTkJVV28tVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyOGM4OTg3ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3JG9jjuP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:horitaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590PyCharm%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E4%25BF%259D%25E5%25AD%2598%25E6%2599%2582%25E3%2581%25ABlinter%25E3%2581%25A8formatter%25E3%2581%258C%25E8%2587%25AA%25E5%258B%2595%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UTkJVV28tVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyOGM4OTg3ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takeguchi/articles/f6b4530d57177e",
          "author": "HTake",
          "description": "はじめに\npytorch で ResNet50, ResNet101, ResNet152 の実装をしてみました！\nimport torch\nimport torch.nn as nn\n\n 残差ブロックの実装\n#残差ブロックを作成するクラス\nclass Resblock(nn.Module):\n  def __init__(self, in_channels, out_channels, identity_downsample=None, stride=1):\n    super(Resblock, self).__init__()\n\n    self.expansion = 4\n ...",
          "link": "https://zenn.dev/takeguchi/articles/f6b4530d57177e",
          "publishedOn": "2022-11-06T08:22:23.000Z",
          "wordCount": 2219,
          "title": "pytorch で ResNet50, ResNet101, ResNet152 の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qguz_eoy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:HTake%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:pytorch%2520%25E3%2581%25A7%2520ResNet50%252C%2520ResNet101%252C%2520ResNet152%2520%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MG9xSkRkS3lXRFNjZkU4QW93X0RUV0dqdFl1VE1jNFU1YzBKd1A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qguz_eoy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:HTake%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:pytorch%2520%25E3%2581%25A7%2520ResNet50%252C%2520ResNet101%252C%2520ResNet152%2520%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MG9xSkRkS3lXRFNjZkU4QW93X0RUV0dqdFl1VE1jNFU1YzBKd1A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yukisatoblog/articles/4b3d1379b56106",
          "author": "yuki satou",
          "description": "本日行ったハンズオンはこちら\n\n\n 大まかな流れ\n\nLambda Function を作成する\nLambdaとAmazon Translateを連携させる\nAPI Gatewayを作成する\nAPI GatewayとLambdaを連携させる\nDynamoDBを作成する\nDynamoDBとLambdaを連携させる(完成)\n\n※Amazon Translateの無料枠: 1ヶ月に200万文字まで翻訳無料\n※ハンズオンのLambdaはpythonで記述\n\n lambdaの特徴\n\nec2はサーバー管理を意識しないといけないが、lambdaはコードのみ記述すればよい。\nサーバーのプロビジョニング管理...",
          "link": "https://zenn.dev/yukisatoblog/articles/4b3d1379b56106",
          "publishedOn": "2022-11-06T07:00:28.000Z",
          "wordCount": 479,
          "title": "awsで翻訳web apiを作る方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vbe4tPjg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuki%2520satou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:aws%25E3%2581%25A7%25E7%25BF%25BB%25E8%25A8%25B3web%2520api%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Dd0hVUmg4bi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1OTIxZDc4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Vbe4tPjg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuki%2520satou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:aws%25E3%2581%25A7%25E7%25BF%25BB%25E8%25A8%25B3web%2520api%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Dd0hVUmg4bi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1OTIxZDc4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/naminodarie/articles/467ce8672d4e0b",
          "author": "KZRNM",
          "description": "Pythonは動的型付けなのでダックタイピング(同名で呼び出せるなら)が可能です。\nしかし、型ヒントの需要が増している現在ではインターフェイス的な型定義が欲しくなってきます。\nそんなときに使えるのが typing.Protocol です。\nhttps://docs.python.org/ja/3.8/library/typing.html#typing.Protocol\n\n 使い方\nfrom typing import Protocol\n\nclass Proto(Protocol):\n    def meth(self) -> int:\n        ...\n\n\nclass C:...",
          "link": "https://zenn.dev/naminodarie/articles/467ce8672d4e0b",
          "publishedOn": "2022-11-06T02:43:22.000Z",
          "wordCount": 321,
          "title": "【Python】インターフェイスの型ヒントを実現する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bjE-Ku-y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KZRNM%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MbENEVHVUXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZDYxMGJkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bjE-Ku-y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KZRNM%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MbENEVHVUXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZDYxMGJkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/28ad4b0c2ec178",
          "author": "Tokoroteen",
          "description": "1. 概要\nこの記事は第3回の続きです。\nhttps://zenn.dev/tokoroteen/articles/4d4e5dbfd8d845\n第3回ではアクティビティー予約サイト「アソビュー!」から各アクティビティー施設の口コミをスクレイピングしました。\n休日への想いをアクティビティーという形にするという目的を達成するため、今回は口コミデータを使って、アクティビティーをレコメンドしてくれるモデルを構築していきたいと思います。\n完成したものはこちら↓\nhttps://lifac.herokuapp.com/\n例えば「空を飛びたい」とき（検索後に海要素を足して、山要素を引くこともでき...",
          "link": "https://zenn.dev/tokoroteen/articles/28ad4b0c2ec178",
          "publishedOn": "2022-11-05T23:00:00.000Z",
          "wordCount": 1964,
          "title": "第４回 【Python】まだ見ぬアクティビティーを求めてアソビュー ！機械学習(Doc2Vec)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pKXRuoEl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AC%25AC%25EF%25BC%2594%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%2528Doc2Vec%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pKXRuoEl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AC%25AC%25EF%25BC%2594%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%2528Doc2Vec%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/naminodarie/articles/9a03fba5f6cdbe",
          "author": "KZRNM",
          "description": "前置き\n「コマンドライン引数か環境変数で値を受け取る」という状況があります。\nここでは\npython main.py --foo hoge --bar piyo\nというようなコマンドを考えます。\n\n\nfoo\n\nコマンドラインで値を受け取る\nコマンドラインがなく環境変数 FOO があればその値を使う\nコマンドラインがなく環境変数 FOO もなければエラーとする\n\n\n\nbar\n\nコマンドラインで値を受け取る\nコマンドラインがなく環境変数 BAR があればその値を使う\nコマンドラインがなく環境変数 BAR もなければ defaultbar とする\n\n\n\n\n 実装\n\n bar\nbar の方は...",
          "link": "https://zenn.dev/naminodarie/articles/9a03fba5f6cdbe",
          "publishedOn": "2022-11-05T18:57:04.000Z",
          "wordCount": 1067,
          "title": "【Python】argparse で「環境変数にあればそれを使う」を実現する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--K1n_llYU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KZRNM%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591argparse%2520%25E3%2581%25A7%25E3%2580%258C%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258C%25E3%2581%25B0%25E3%2581%259D%25E3%2582%258C%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%258D%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MbENEVHVUXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZDYxMGJkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--K1n_llYU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KZRNM%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591argparse%2520%25E3%2581%25A7%25E3%2580%258C%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258C%25E3%2581%25B0%25E3%2581%259D%25E3%2582%258C%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%258D%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MbENEVHVUXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZDYxMGJkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum03",
          "author": "derwind",
          "description": "目的\n引き続き cuQuantum で遊んでみるのだが、今回は Qiskit も Cirq も使わずに直接 cuQuantum の Python ラッパを叩いてみたい。\n\n ハミルトニアン\n期待値を計算する対象のハミルトニアンはお馴染みの Pauli Z 演算子とする。\\ket{0} と \\ket{1} で期待値を計算してみたい。\n\n\n 早速計算\nexpectation_pauli.py を参考にするのだが、なかなか C++ なので一部 Python っぽく書き換えて使う。\nimport numpy as np\nimport cupy as cp\n\nimport cuquantum\n...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum03",
          "publishedOn": "2022-11-05T18:10:44.000Z",
          "wordCount": 952,
          "title": "cuQuantum で遊んでみる (3) — 期待値計算",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5STHPLsw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25283%2529%2520%25E2%2580%2594%2520%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5STHPLsw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25283%2529%2520%25E2%2580%2594%2520%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/masaru21/articles/285ff4c3e0d123",
          "author": "lonely_creator_m",
          "description": "先日GitHubにアップロードしたPythonのプログラムで、ウェブアプリにしたいと思い、Web開発のフレームワークを探していました。\n今回は小規模なので、flaskを使ってみることにしました。\n今回は、virtualboxにインストールしたUbuntu22.04に、インストールしました。\n下記の記事で、作業を進めました。\nhttps://sync-g.co.jp/sjobs/python-flask-biginner/\nですが、下記のコマンドを実行するとエラーになりました。\n>>> import Flask\n>>> Flask.__version\nこ...",
          "link": "https://zenn.dev/masaru21/articles/285ff4c3e0d123",
          "publishedOn": "2022-11-05T16:44:44.000Z",
          "wordCount": 523,
          "title": "flaskがインストールできたか確かめるときにハマったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wSBrAfA8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:flask%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E3%2581%258B%25E7%25A2%25BA%25E3%2581%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wSBrAfA8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:flask%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E3%2581%258B%25E7%25A2%25BA%25E3%2581%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sugac/articles/3d2cb78e765d23",
          "author": "須賀",
          "description": "はじめに\nどうやらpythonにおいてローカル変数の情報は関数オブジェクトが所持していないらしく、\nスマートに取得する方法は見つかりませんでした。\n自分はどうしてもローカル変数名を取得したかったので、astモジュールを使って取得を行いましたが、今回のコードだと漏れが生じる可能性もあるので完璧ではないです。\n\n 環境\npython 3.9.12\nwindows\n\n astモジュールとは\n抽象構文木を作成するモジュールです。詳しいことは私も理解していませんが、pythonプログラムの文字列からpythonで実行できるようなデータ形式への変換を行っているっぽいです。\nhttps://doc...",
          "link": "https://zenn.dev/sugac/articles/3d2cb78e765d23",
          "publishedOn": "2022-11-05T12:27:56.000Z",
          "wordCount": 1963,
          "title": "【Python】関数内のローカル変数名を無理やり取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KthhKlBk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%25A0%2588%25E8%25B3%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E9%2596%25A2%25E6%2595%25B0%25E5%2586%2585%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E5%25A4%2589%25E6%2595%25B0%25E5%2590%258D%25E3%2582%2592%25E7%2584%25A1%25E7%2590%2586%25E3%2582%2584%25E3%2582%258A%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15aTh5UGc5SS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWUxNWY0ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KthhKlBk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%25A0%2588%25E8%25B3%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E9%2596%25A2%25E6%2595%25B0%25E5%2586%2585%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E5%25A4%2589%25E6%2595%25B0%25E5%2590%258D%25E3%2582%2592%25E7%2584%25A1%25E7%2590%2586%25E3%2582%2584%25E3%2582%258A%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15aTh5UGc5SS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWUxNWY0ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/def_yuisato/articles/algorithm-divisor-enumeration",
          "author": "佐藤 優偉(Yui Sato)",
          "description": "約数列挙とは\n正の約数 N において、N の約数を全て求めること。\n例) 12 の約数列挙　 → 1,2,3,4,6,12\n\n 通常の実装(O(N))\n\n 【方針】\n\n1 以上 n 以下の整数を i として順番に見ていき、割り切れたら(n % i == 0)i は n の約数と判定する\n時間計算量は 1 から n まで全てを見ていくため O(N)になる。\n\n\n 【実装】\nn = int(input())\nresult = []\nfor i in range(1, n+1):\n    if n % i == 0:\n        result.append(i)\nprint(*resu...",
          "link": "https://zenn.dev/def_yuisato/articles/algorithm-divisor-enumeration",
          "publishedOn": "2022-11-05T11:11:52.000Z",
          "wordCount": 614,
          "title": "約数列挙のアルゴリズムの実装と改善",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9IWbzq0R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E4%25BD%2590%25E8%2597%25A4%2520%25E5%2584%25AA%25E5%2581%2589%2528Yui%2520Sato%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%25B4%2584%25E6%2595%25B0%25E5%2588%2597%25E6%258C%2599%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E6%2594%25B9%25E5%2596%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1QQVU5Q1J4bC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzMyMDk2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9IWbzq0R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E4%25BD%2590%25E8%2597%25A4%2520%25E5%2584%25AA%25E5%2581%2589%2528Yui%2520Sato%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%25B4%2584%25E6%2595%25B0%25E5%2588%2597%25E6%258C%2599%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E6%2594%25B9%25E5%2596%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1QQVU5Q1J4bC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzMyMDk2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hassaku63/articles/75bc1b56b94528",
          "author": "hassaku63",
          "description": "おことわり\n「はじめに」で書く用事を満たしたいなら find - xargs grep で十分です。ここで紹介するツールを使う必要は一切ないです。\nfind . -name \"*.py\" | xargs grep -n 'import'\nast のお勉強がてら作ってみました。\n\n はじめに\n引き継いで以降ずっと塩漬けしてた古いプロジェクトの依存関係を更新しよう、という仕事が発生したのですが、依存関係の定義である requirements.txt が pip freeze の出力そのままリダイレクトしたような内容になっていて少々困りました。\n# 依存関係は明示的に書いてほしい...\np...",
          "link": "https://zenn.dev/hassaku63/articles/75bc1b56b94528",
          "publishedOn": "2022-11-05T09:21:56.000Z",
          "wordCount": 585,
          "title": "[python] import 宣言を複数行またぐケース含めて grep 風出力で検索できるツールを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X-N0EBzu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hassaku63%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255Bpython%255D%2520import%2520%25E5%25AE%25A3%25E8%25A8%2580%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E8%25A1%258C%25E3%2581%25BE%25E3%2581%259F%25E3%2581%2590%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%2520grep%2520%25E9%25A2%25A8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25A7%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1sTzJaUzFTMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDM3YWIzZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X-N0EBzu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hassaku63%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255Bpython%255D%2520import%2520%25E5%25AE%25A3%25E8%25A8%2580%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E8%25A1%258C%25E3%2581%25BE%25E3%2581%259F%25E3%2581%2590%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%2520grep%2520%25E9%25A2%25A8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25A7%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1sTzJaUzFTMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDM3YWIzZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/recommended_vscode",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、主にバックエンド(PythonとTypeScript中心)を開発している私が使っているVSCodeの拡張機能を紹介する。\n\n 拡張機能\n基本的にどのような言語でも対応できる拡張機能を紹介する。\n\n Japanese Language Pack for Visual Studio Code\n\nVSCodeを日本語にできる。\n\n REST Client\n\nVSCode上でgetやpostなどのHTTPリクエストを送信できる。GraphQLにも対応している。\n\n GitLens — Git supercharged\n\ncommit単位でファイルを比較したり、最新の...",
          "link": "https://zenn.dev/nameless_sn/articles/recommended_vscode",
          "publishedOn": "2022-11-05T03:00:00.000Z",
          "wordCount": 512,
          "title": "【VSCode】おすすめの拡張機能 21選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C9Y9RQT6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nukumizu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590VSCode%25E3%2580%2591%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%252021%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C9Y9RQT6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nukumizu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590VSCode%25E3%2580%2591%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%252021%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/9f486cfee75edc",
          "author": "shimo",
          "description": "pytest、unittest.mock.patchらへんでハマっていたのでメモ。\n\n 整理したかったこと\n\n同じ機能で、書き方が何種類もあること\n引数の使い分け\n\n注: このページでは同じものを別の名前で指しているかもしれないです(例:package, module, library という単語は同じものを指すことがある)\n\n テストモジュールについて\n\nunittest ... Pythonビルトインのテストpackage\npytest ... 3rd partyのテストpackage。unittestよりよく使われていて主流らしい\n\nunittestをそのまま使える\nimportし...",
          "link": "https://zenn.dev/shimo_s3/articles/9f486cfee75edc",
          "publishedOn": "2022-11-05T01:27:42.000Z",
          "wordCount": 1656,
          "title": "pytest, mock, patchについて整理したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6_dtiKyL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pytest%252C%2520mock%252C%2520patch%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6_dtiKyL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pytest%252C%2520mock%252C%2520patch%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/4d4e5dbfd8d845",
          "author": "Tokoroteen",
          "description": "1. 概要\nこの記事は第２回の続きです。\nhttps://zenn.dev/tokoroteen/articles/61892df019f6d9\n第１回および第２回で、アクティビティー予約サイトであるアソビュー!から掲載されている施設の基本情報を取得しました。\nそこで、本来の目的である口コミ情報を学習し、オススメのアクティビティーを提示するモデルを構築するために口コミ集めの作業に入っていきます！\n完成したアプリはこちら↓\nhttps://lifac.herokuapp.com/\n例えば「空を飛びたい」とき（検索後に海要素を足して、山要素を引くこともできます！！）\n\n例えば「動物に癒さ...",
          "link": "https://zenn.dev/tokoroteen/articles/4d4e5dbfd8d845",
          "publishedOn": "2022-11-04T23:00:00.000Z",
          "wordCount": 2601,
          "title": "第３回 【Python】まだ見ぬアクティビティーを求めてアソビュー ！口コミ スクレイピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d0xg3xBM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AC%25AC%25EF%25BC%2593%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E5%258F%25A3%25E3%2582%25B3%25E3%2583%259F%2520%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d0xg3xBM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AC%25AC%25EF%25BC%2593%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E5%258F%25A3%25E3%2582%25B3%25E3%2583%259F%2520%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kamotan/articles/43c5e3ecde1ed0",
          "author": "かもたん",
          "description": "調べても出てこなかったので垢作って書いておきます。\ndiscord.py 1.7.3\n\n そもそもメッセージリンクって何？\nこの記事読んでる人は取得方法が知りたいでしょうけどちょっとだけ説明させてください。\nメッセージリンクとは、\nhttps://discord.com/channels/xxxxxxxxxx/xxxxxxxxxx/xxxxxxxxxxxxx\nこういつやつです。\n\nDiscord内でメッセージリンクを取得する場合\n!\nメッセージリンクはhttps://discord.com/channels/サーバーID/メッセージチャンネルID/メッセージIDという構成になっています。...",
          "link": "https://zenn.dev/kamotan/articles/43c5e3ecde1ed0",
          "publishedOn": "2022-11-04T14:35:36.000Z",
          "wordCount": 321,
          "title": "Discord.pyでメッセージリンクを取得する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sAlOiKEd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2582%2582%25E3%2581%259F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Discord.py%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0l4VlhqSzFFTmRaem1aQjBaYlRiZHB2Sk5BaGxGVzhfeXBEMms9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sAlOiKEd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2582%2582%25E3%2581%259F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Discord.py%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0l4VlhqSzFFTmRaem1aQjBaYlRiZHB2Sk5BaGxGVzhfeXBEMms9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/soh92/articles/f20994e755974f",
          "author": "ソウ",
          "description": "ns0=Namespace\nCityGMLをElementTreeでパースした時に現れるns0やns1が一体何者なのかというと、Namespace(名前空間)のことです。\nそんな怖いものではありません。鬱陶しいですが。\nこれが\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<core:CityModel xmlns:brid=\"http://www.opengis.net/citygml/bridge/2.0\" xmlns:wtr=\"http://www.opengis.net/citygml/waterbody/2.0\" xmlns...",
          "link": "https://zenn.dev/soh92/articles/f20994e755974f",
          "publishedOn": "2022-11-04T13:52:39.000Z",
          "wordCount": 1100,
          "title": "PlateauのCityGMLをPythonのElementTreeでパースした時に出るns0とかいう邪魔者をぶっ潰す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VRMaT0If--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25BD%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Plateau%25E3%2581%25AECityGML%25E3%2582%2592Python%25E3%2581%25AEElementTree%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E5%2587%25BA%25E3%2582%258Bns0%25E3%2581%25A8%25E3%2581%258B%25E3%2581%2584%25E3%2581%2586%25E9%2582%25AA%25E9%25AD%2594%25E8%2580%2585%25E3%2582%2592%25E3%2581%25B6%25E3%2581%25A3%25E6%25BD%25B0%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1reVgxTmQwXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmYTYxNzRiNDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VRMaT0If--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25BD%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Plateau%25E3%2581%25AECityGML%25E3%2582%2592Python%25E3%2581%25AEElementTree%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E5%2587%25BA%25E3%2582%258Bns0%25E3%2581%25A8%25E3%2581%258B%25E3%2581%2584%25E3%2581%2586%25E9%2582%25AA%25E9%25AD%2594%25E8%2580%2585%25E3%2582%2592%25E3%2581%25B6%25E3%2581%25A3%25E6%25BD%25B0%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1reVgxTmQwXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmYTYxNzRiNDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yag_ays/articles/65a4154d0dedfa",
          "author": "yag_ays",
          "description": "概要\nFaissは、FaceBook Research (現Meta Research) が開発した近似最近傍探索 (Approximate Nearest Neighbor: ANN) のライブラリです。C++で実装されており、GPUでの実行にも対応しているほか、PythonのWrapperも提供されいます。Pythonパッケージではfaiss-cpuとfaiss-gpuの2種類が存在し、公式ではAnacondaでのインストールを推奨しているのですが、PyPIからもパッケージがインストール可能です。\nGPU環境でのFaiss実行を試みたのですが、現在PyPIで提供されているfais...",
          "link": "https://zenn.dev/yag_ays/articles/65a4154d0dedfa",
          "publishedOn": "2022-11-04T07:26:28.000Z",
          "wordCount": 1409,
          "title": "FaissをソースコードからビルドしてGPUで利用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GwCZhHY---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yag_ays%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Faiss%25E3%2582%2592%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%25A6GPU%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KV0FNVXZlQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMWRjYWIzODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GwCZhHY---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yag_ays%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Faiss%25E3%2582%2592%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%25A6GPU%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KV0FNVXZlQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMWRjYWIzODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kumamoto/articles/d0fb1208c47365",
          "author": "Kumamoto-Hamachi",
          "description": "1. はじめに 🚀\n\n 1-1. dataclassってなに\nみなさんPythonのdataclass使ってますか？\ndataclassは真新しい機能ではなくPython3.7からある[1]標準ライブラリです。\ndataclassの解説記事ではよく『dataclassとはデータを保持のためのclassである』という説明がされていることが多いです。これはPEP557にある\n\nstore values which are accessible by attribute lookup\nアトリビュート検索でアクセス可能な値の保持\n\n\nData Classes can be thought o...",
          "link": "https://zenn.dev/kumamoto/articles/d0fb1208c47365",
          "publishedOn": "2022-11-04T02:34:32.000Z",
          "wordCount": 2485,
          "title": "PEP557から読み解くPythonのdataclassの嬉しさと他手段との比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X_6vUDPY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kumamoto-Hamachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PEP557%25E3%2581%258B%25E3%2582%2589%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258FPython%25E3%2581%25AEdataclass%25E3%2581%25AE%25E5%25AC%2589%25E3%2581%2597%25E3%2581%2595%25E3%2581%25A8%25E4%25BB%2596%25E6%2589%258B%25E6%25AE%25B5%25E3%2581%25A8%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0ycDhvc0FrWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzM2JiOGEyZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X_6vUDPY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kumamoto-Hamachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PEP557%25E3%2581%258B%25E3%2582%2589%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258FPython%25E3%2581%25AEdataclass%25E3%2581%25AE%25E5%25AC%2589%25E3%2581%2597%25E3%2581%2595%25E3%2581%25A8%25E4%25BB%2596%25E6%2589%258B%25E6%25AE%25B5%25E3%2581%25A8%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0ycDhvc0FrWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzM2JiOGEyZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/61892df019f6d9",
          "author": "Tokoroteen",
          "description": "1. 概要\nこの記事は第１回の続きです。\nhttps://zenn.dev/tokoroteen/articles/0d1599540dce00\n第１回ではアクティビティー検索サイトであるアソビュー！に掲載されているアクティビティーの基本情報を取得しました。\n今回はそのデータを解析することでアソビュー！内のアクティビティーの特徴に迫っていきたいと思います。\n完成したアプリはこちら\nhttps://lifac.herokuapp.com/\n例えば「空を飛びたい」とき（検索後に海要素を足して、山要素を引くこともできます！！）\n\n例えば「動物に癒されたい」とき\n\n\n 2. 前回取得したデー...",
          "link": "https://zenn.dev/tokoroteen/articles/61892df019f6d9",
          "publishedOn": "2022-11-03T23:30:00.000Z",
          "wordCount": 1400,
          "title": "第２回 【Python】まだ見ぬアクティビティーを求めてアソビュー ！分析",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fXLSKgPj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25AC%25AC%25EF%25BC%2592%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fXLSKgPj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25AC%25AC%25EF%25BC%2592%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/geb/articles/221103_django_model_summarize",
          "author": "Geb",
          "description": "モデルとは\nDBのテーブル定義とデータの操作を行うクラス\nhttps://docs.djangoproject.com/ja/4.1/topics/db/models/#module-django.db.models\n\n モデル定義\nDBテーブル1つにつきModelクラスを一つ作成し、そのクラスのクラス変数としてフィールドを定義する。\n以下の例では、ある会社の従業員テーブルPersonと部署テーブルDivisionを定義している。\nfrom django.db import models\n\nclass Division(models.Model):\n    name = models...",
          "link": "https://zenn.dev/geb/articles/221103_django_model_summarize",
          "publishedOn": "2022-11-03T23:18:01.000Z",
          "wordCount": 677,
          "title": "Model編 -- 忙しい人のためのDjango + DjangoRestFramework",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2spTC3QJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Geb%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Model%25E7%25B7%25A8%2520--%2520%25E5%25BF%2599%25E3%2581%2597%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEDjango%2520%252B%2520DjangoRestFramework%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ozYWdhdlNoZ1o1Y3NxTUJ6WVNyRnFkZnFfMjZHMWg4d0N4anhLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2spTC3QJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Geb%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Model%25E7%25B7%25A8%2520--%2520%25E5%25BF%2599%25E3%2581%2597%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEDjango%2520%252B%2520DjangoRestFramework%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ozYWdhdlNoZ1o1Y3NxTUJ6WVNyRnFkZnFfMjZHMWg4d0N4anhLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cirq-qsim02",
          "author": "derwind",
          "description": "目的\nGoogle Cirq で遊んでみる (1) — グローバー探索アルゴリズム に引き続き、Google Cirq を使ってグローバー探索アルゴリズムを実行してみたい。のだが、今回はさらに cuQuantum を用いてみたい。\n\n cuQuantum 対応 qsim のビルド\ncuQuantum 対応の qsim を使いたい場合、自分で qsim をビルドしないとならない様子。\nGPU-based quantum simulation on Google Cloud に従う。\n\n 想定環境\n\nUbuntu 18.04\nPython 3.8\nCUDA 11.2\nNVIDIA T4\n...",
          "link": "https://zenn.dev/derwind/articles/dwd-cirq-qsim02",
          "publishedOn": "2022-11-03T17:21:50.000Z",
          "wordCount": 2468,
          "title": "Google Cirq + cuQuantum で遊んでみる (2) — グローバー探索アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--knXFkxFw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Cirq%2520%252B%2520cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--knXFkxFw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Cirq%2520%252B%2520cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/alcnaka/articles/e16eed5c8e291e",
          "author": "alcnaka",
          "description": "はじめに\nせっかくORMを使っているのであれば、いちいち手動で設定しなくても、insertやupdateしたタイミングで、created_atやupdated_atカラムをいい感じにセットして欲しいですよね。\nLaravel(PHP)で使われているEloquentなどではデフォルトの機能としてありますが、SQLModelではドキュメントに記述を見つけられず少し悩みました。また悩むのも嫌なので備忘録として。\n\n 環境\nM1 MBA、macOS 13で、HomebrewでインストールしたPython3.10.8を使用しています。\nPC: MacBook Air M1 2020\nOS: m...",
          "link": "https://zenn.dev/alcnaka/articles/e16eed5c8e291e",
          "publishedOn": "2022-11-03T16:37:46.000Z",
          "wordCount": 1237,
          "title": "SQLModelでcreated_at とupdated_atカラムを自動で更新する【Python3】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vUjl-VYo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:alcnaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:SQLModel%25E3%2581%25A7created_at%2520%25E3%2581%25A8updated_at%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14LVlwc1JoMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmVjODEwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vUjl-VYo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:alcnaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:SQLModel%25E3%2581%25A7created_at%2520%25E3%2581%25A8updated_at%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14LVlwc1JoMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmVjODEwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/a3bb9d8634ca19",
          "author": "ShunDev",
          "description": "概要\n\n はじめに\nShunです. 統計や機械学習を勉強しています. 正規分布を計算上使うことが多いのでよく使う式をまとめてみました.\n\n 機械学習・統計学における位置づけ\n正規分布(normal distribution)※1は連続型確率変数の分布のモデルとして広く利用されている.  出典(1), (2)によれば統計学上きわめて重要な確率分布と位置付けられている.\n\n 確率密度関数\n正規分布の確率密度関数は以下のように書ける.\n\n\\mathcal{N}(x| \\mu, \\sigma^2) = \n\\frac{1}{\\sqrt{2\\pi \\sigma^2}}\n\\exp \\biggl\\{...",
          "link": "https://zenn.dev/shundeveloper/articles/a3bb9d8634ca19",
          "publishedOn": "2022-11-03T13:01:55.000Z",
          "wordCount": 1704,
          "title": "正規分布(1次元)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--u-Ctn2hs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%25AD%25A3%25E8%25A6%258F%25E5%2588%2586%25E5%25B8%2583%25281%25E6%25AC%25A1%25E5%2585%2583%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--u-Ctn2hs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%25AD%25A3%25E8%25A6%258F%25E5%2588%2586%25E5%25B8%2583%25281%25E6%25AC%25A1%25E5%2585%2583%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takunari_jp/articles/9ca79687737b12",
          "author": "Omori Takuya",
          "description": "この記事では、Djangoが備えている「2つ以上のクエリセットを結合する方法」について解説します。\n\n 公式ドキュメントを覗く 🫣\n公式ドキュメントにはこのように書かれています。\n\n union(*other_qs, all=False)\n\nSQLのUNION演算子を使用して、2つ以上のQuerySetの結果を結合します。\n重複する値を許可する場合は、引数allに対してTrueをセットします。\n\nqs1.union(qs_2, qs_3)\n\nunion()は、引数が他のモデルのクエリセットであっても、最初のクエリセットの型のモデルインスタンスを返します。異なるモデルを渡しても、同じフィー...",
          "link": "https://zenn.dev/takunari_jp/articles/9ca79687737b12",
          "publishedOn": "2022-11-03T10:30:00.000Z",
          "wordCount": 687,
          "title": "【Django】2つ以上のクエリセットを結合する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tRxXnOzB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%25912%25E3%2581%25A4%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%25B5%2590%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tRxXnOzB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%25912%25E3%2581%25A4%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%25B5%2590%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takunari_jp/articles/5744f9691bbeef",
          "author": "Omori Takuya",
          "description": "この記事では、Djangoがデフォルトで備えている「新しいQuerySetsを返すメソッド」のうち、「exclude()」について解説します。\n\n 公式ドキュメントを覗く 🫣\n公式ドキュメントにはこのように書かれています。\n\n exclude(*args, **kwargs)\n\n与えられたルックアップ・パラメータにマッチしないオブジェクトを含む新しいQuerySetを返します。複数のパラメータは、SQL文の中でANDで結合され、全体はNOT()で囲まれます。\n\n\n 結論 ⚖️\nexclude()を使うことで、除外条件を指定することができます。\n\n 使い方 💪\n\n 通常\n次の例では、下記2...",
          "link": "https://zenn.dev/takunari_jp/articles/5744f9691bbeef",
          "publishedOn": "2022-11-03T10:30:00.000Z",
          "wordCount": 397,
          "title": "【Django】モデル検索で除外条件を指定する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YrtlQLb6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25A7%25E9%2599%25A4%25E5%25A4%2596%25E6%259D%25A1%25E4%25BB%25B6%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YrtlQLb6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25A7%25E9%2599%25A4%25E5%25A4%2596%25E6%259D%25A1%25E4%25BB%25B6%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/piroshiki/articles/8b69c848b61ff5",
          "author": "piroshiki",
          "description": "目的：VScode上で予め用意されたdocker環境でデバッグを行えるようにする\n※基本的には参考記事①に従うとリモートデバッグ可能となるため、主に詰まった箇所を補足いたします。\n\n実行環境\nM-1 Mac\nVScode\n\n実行手順\n任意のディレクトリ（ここではvscode-python）に「.devcontainer」ディレクトリを作成する。\n次にdevcontainer.jsonを作成する。これによりDockerFileを参照しイメージコンテナが作られる。\n参考記事①より\n\ndevcontainer.json\n{\n\t\"name\": \"Python Sample\",\n\t// Doc...",
          "link": "https://zenn.dev/piroshiki/articles/8b69c848b61ff5",
          "publishedOn": "2022-11-03T09:11:45.000Z",
          "wordCount": 250,
          "title": "VS code上でdocker環境をつなげてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aySZbkzN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:piroshiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VS%2520code%25E4%25B8%258A%25E3%2581%25A7docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%2592%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mkk0TmpVdkU5TGlVRC03TTdQWjcyRUNvdWYzZFZIV3BHYk44Z3o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aySZbkzN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:piroshiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VS%2520code%25E4%25B8%258A%25E3%2581%25A7docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%2592%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mkk0TmpVdkU5TGlVRC03TTdQWjcyRUNvdWYzZFZIV3BHYk44Z3o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mima_ita/articles/0a3afd5db596ee",
          "author": "mima_ita",
          "description": "目的\nKNPはJuman++の解析結果(形態素列)を入力とし、文節および基本句間の係り受け関係、格関係、照応関係を出力する。\n今回はGoogle ColaboratoryでKNPを動作させる方法について記述する\nこの記事は2022/11/03時点のもので、今後のバージョンアップで動作しなくなる可能性がある。\n\n juman++のインストール\n!wget http://lotus.kuee.kyoto-u.ac.jp/nl-resource/jumanpp/jumanpp-1.02.tar.xz\n!tar xJvf jumanpp-1.02.tar.xz\n%cd jumanpp-1.0...",
          "link": "https://zenn.dev/mima_ita/articles/0a3afd5db596ee",
          "publishedOn": "2022-11-03T08:46:03.000Z",
          "wordCount": 1228,
          "title": "Google Colaboratoryで日本語構文・格・照応解析システムKNPを動作させてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4lnoGmEZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mima_ita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Colaboratory%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E6%25A7%258B%25E6%2596%2587%25E3%2583%25BB%25E6%25A0%25BC%25E3%2583%25BB%25E7%2585%25A7%25E5%25BF%259C%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0KNP%25E3%2582%2592%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pjcDFUQmpUT3lBUnl4aHM3aVk1MEg2b0JZZ3FrRzFjTTZVblJMPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4lnoGmEZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mima_ita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Colaboratory%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E6%25A7%258B%25E6%2596%2587%25E3%2583%25BB%25E6%25A0%25BC%25E3%2583%25BB%25E7%2585%25A7%25E5%25BF%259C%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0KNP%25E3%2582%2592%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pjcDFUQmpUT3lBUnl4aHM3aVk1MEg2b0JZZ3FrRzFjTTZVblJMPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/jcc/articles/4e87dc71f89ba7",
          "author": "jc",
          "description": "先日多言語ニュースWebアプリを作りました。\n通勤電車で当日のニュースをチェックしながら、外国語を勉強できるので、まあまあ使いやすかったです。\nhttps://zenn.dev/jcc/articles/e672181fd7b174\nhttps://zenn.dev/jcc/articles/36f7d95114fc39\n実はこのWebを開発する1年ほど前に、一度Telegram botで多言語ニュースチャットボットを開発していました。今日はそれについて紹介したいと思います。\nhttps://github.com/aibazhang/multitrue-bot\n\n 事前準備\n\n Tele...",
          "link": "https://zenn.dev/jcc/articles/4e87dc71f89ba7",
          "publishedOn": "2022-11-03T08:15:39.000Z",
          "wordCount": 1815,
          "title": "Telegramで多言語ニュースチャットボットを作った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0kjgZNGR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Telegram%25E3%2581%25A7%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Qd0ZXRHU1NC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0kjgZNGR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Telegram%25E3%2581%25A7%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Qd0ZXRHU1NC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tatsuya4499/articles/cc74dec7ddcb9b",
          "author": "Tatsuya",
          "description": "はじめに\nPyTorchを普段触っているのですが、細かいところをなんとなくで今まで過ごしてきたので、今回しっかりまとめていきたいと思います。自分の備忘録になっていますが、少しでも参考になればと思います。\n(Qiitaで書いていたものを引っ越してきたものです)\n\n この記事の対象者\n\n\n.copy(), .detach(), .bachward()がよくわかっていない方\n\nnn.Conv2dのweightやbiasの取得ってどうやんの？\n\nmodel.eval()って結局何してる？って方\n\ntorch.no_grad(), torch.set_grad_enabled()の区別がわから...",
          "link": "https://zenn.dev/tatsuya4499/articles/cc74dec7ddcb9b",
          "publishedOn": "2022-11-03T07:37:00.000Z",
          "wordCount": 1518,
          "title": "PyTorchの気になるところ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dEg0HVxT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:PyTorch%25E3%2581%25AE%25E6%25B0%2597%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d5THBtT0M5X2tFdmYyVG9kWHpmcUd5MXI1aFJ1ay1MR3gweXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dEg0HVxT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:PyTorch%25E3%2581%25AE%25E6%25B0%2597%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d5THBtT0M5X2tFdmYyVG9kWHpmcUd5MXI1aFJ1ay1MR3gweXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taxio/articles/01e198b1e9062a",
          "author": "taxio",
          "description": "Pillow(PIL) でこんな感じに画像を border-radius したい。\n\n\n\nBefore\nAfter\n\n\n\n\n\n\n\n\n\n\n コードの全体像\nfrom PIL import Image, ImageDraw\n\n\nimg = Image.open(\"./lenna.png\")\nradius = 50\n\nmask = Image.new(\"L\", img.size, 0)\nmask_draw = ImageDraw.Draw(mask)\nmask_draw.rounded_rectangle((0, 0, img.width, img.height), radius, fill=...",
          "link": "https://zenn.dev/taxio/articles/01e198b1e9062a",
          "publishedOn": "2022-11-03T06:03:00.000Z",
          "wordCount": 351,
          "title": "Pillow(PIL)でborder-radius",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jvjk_swk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taxio%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Pillow%2528PIL%2529%25E3%2581%25A7border-radius%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PZ1N5SmJ4cC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1MmQyMTNhMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jvjk_swk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taxio%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Pillow%2528PIL%2529%25E3%2581%25A7border-radius%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PZ1N5SmJ4cC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1MmQyMTNhMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/0d1599540dce00",
          "author": "Tokoroteen",
          "description": "1. 概要\n突然ですが私は体験型のアクティビティーが大好きです。サーフィン体験をしたり、屋久杉を見に行ったり、スノードームを作ったり、香水を調製してみたり、、、。\nそんな私が食べログの情報から機械学習でラーメンレコメンドをする記事をみて、これのアクティビティー版をやったら面白いのでは！！と考えました笑\nアクティビティーを探すとき、人は3ステップの思考フローを辿るのではないかと思います。\n\n「ストレスが溜まっているからスカッとしたい」など休みへの想いを考える\n「スカッとするためにはバンジージャンプだな」等、過ごし方を考える\nアクティビティーを探して予約する\n\nこの思考フローの中で、1→...",
          "link": "https://zenn.dev/tokoroteen/articles/0d1599540dce00",
          "publishedOn": "2022-11-03T05:37:01.000Z",
          "wordCount": 1585,
          "title": "【Python】まだ見ぬアクティビティーを求めてアソビュー ！スクレイピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SVPH9kw4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SVPH9kw4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k_neko3/articles/8b89b0ab1c29f8",
          "author": "k_neko3",
          "description": "opencvをpythonで触っていたのでその時に作ったもろもろをメモしていく。\n今回は特定のフォルダに入っている複数の画像をforループで開いて、何がしかの処理をするもの。\nやることは以下。\n\nglobでフォルダ内のjpgファイル名を取得しリスト化\nリストの配列数分for inでループ\n\nファイル名を取得\n画像をnumpyでバイナリで開く\n取り込んだバイナリをopencv形式に変更\nopencv形式の画像をグレースケール化\n実際は最後に何がしかの処理をする（トリミングとか）\n\n\n\n\n ソースコード\nimport pathlib\nimport cv2\nimport numpy as np...",
          "link": "https://zenn.dev/k_neko3/articles/8b89b0ab1c29f8",
          "publishedOn": "2022-11-03T03:44:18.000Z",
          "wordCount": 522,
          "title": "opencv+python フォルダ内の全てのjpg画像をforループで処理する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JZtJtHxf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:opencv%252Bpython%2520%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E5%2586%2585%25E3%2581%25AE%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AEjpg%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592for%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JZtJtHxf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:opencv%252Bpython%2520%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E5%2586%2585%25E3%2581%25AE%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AEjpg%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592for%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yuki_f/articles/29614ff655de90",
          "author": "Yuki Fujita",
          "description": "はじめに\nFlaskを用いて簡単なCRUDを再現することができたのでその方法を備忘録的に記事に残そうかと思います！\nもし、誤りや補足などあればコメントしていただければありがたいです！\nこちらの記事は Qiitaに以前投稿した以下の記事と同一の内容となっています。練習がてらzennに投稿してみたものなので、その点ご了承ください🙇\nhttps://qiita.com/Yu_unI1/items/316e03d94f276695ff13\n\n 開発環境\npython 3.7\nanaconda\n\n 作成\n\n フォルダの作成\n以下のような構成で作業を進めていきます！\n.\n└── CRUD\n   ...",
          "link": "https://zenn.dev/yuki_f/articles/29614ff655de90",
          "publishedOn": "2022-11-03T02:51:26.000Z",
          "wordCount": 2654,
          "title": "flask_SQLAlchemyを使ってCRUDを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MzvX3v0k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuki%2520Fujita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:flask_SQLAlchemy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6CRUD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2FkNTJmNGZ3dEowZU5iUTk0clM3TEJlN3NGd1Z3ZzNMMWZmOGM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MzvX3v0k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuki%2520Fujita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:flask_SQLAlchemy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6CRUD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2FkNTJmNGZ3dEowZU5iUTk0clM3TEJlN3NGd1Z3ZzNMMWZmOGM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zenizeni/books/a64578f98450c2",
          "author": "ZeniZeni",
          "description": "注：本書籍は執筆途中です。\nこの書籍は、とにかく筆者の知りえる研究開発関連の知識をすべて吐き出すことを目的に書かれています。\nPythonを用いた研究を進めるのに必須の環境構築＆開発手法の個人的ベストプラクティスをまとめました。\n実行環境の構築/ディレクトリ構成/プログラムの整備/vscodeでのデバッグなど、とにかく知っておくと余計な苦しみから解放される情報を共有します。\n可能な限り継続的にアップデートしていこうと思っています。",
          "link": "https://zenn.dev/zenizeni/books/a64578f98450c2",
          "publishedOn": "2022-11-02T23:47:11.000Z",
          "wordCount": 77,
          "title": "研究のためのPython開発環境",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/kotaproj/articles/pi_remo2meross",
          "author": "kotaproj",
          "description": "犬を飼っているのですが、寒い日は電気毛布で暖をとっています。\nちょっとした組み合わせで自動化できそうです。\n室内温度と連動させて電気毛布をオンオフするよう作ってみました。\n\n やったこと\n\n今回は、nature remoとwifiタップの組み合わせで行いました。\n\n1時間毎に以下を実施する\nnature remoから温度を取得する\n温度からタップを制御\n\n\n温度が10度未満なら、wifiタップを通電する\n温度が10度以上なら、wifiタップを切る\n\n\nwifiタップには、電気毛布が接続されている\n\n\n 機材一覧\n\n\n\nno\n部品名\n個数\n備考\n\n\n\n\n1\nラズベリーパイ\n1\n今回は、4B...",
          "link": "https://zenn.dev/kotaproj/articles/pi_remo2meross",
          "publishedOn": "2022-11-02T22:45:45.000Z",
          "wordCount": 2446,
          "title": "ペットのための暖房システムをつくったよ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--U8St_6hU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kotaproj%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%259A%2596%25E6%2588%25BF%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1TX1BkcXNfRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyNWExMWJmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--U8St_6hU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kotaproj%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%259A%2596%25E6%2588%25BF%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1TX1BkcXNfRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyNWExMWJmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cirq-qsim01",
          "author": "derwind",
          "description": "目的\nQiskit で遊んでみる (4) と cuQuantum で遊んでみる (2) — グローバー探索アルゴリズム に引き続き、Google Cirq を使ってグローバー探索アルゴリズムを実行してみたい。\n別にグローバー探索アルゴリズムに特別な思い入れがあるわけではなくて、フレームワークの試運転の題材として使っているだけなので、それ自身にはそれほどの意味はない[1]。\n\n 基本的なパッケージのインポート\nとりあえず以下くらいをインポートしておく。SVGCircuit を使わないと回路の可視化がかなり素っ気なくなるので、これは使っていきたい。\nimport numpy as np\n...",
          "link": "https://zenn.dev/derwind/articles/dwd-cirq-qsim01",
          "publishedOn": "2022-11-02T17:17:56.000Z",
          "wordCount": 1836,
          "title": "Google Cirq で遊んでみる (1) — グローバー探索アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j-PmxnDy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cirq%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25281%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j-PmxnDy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cirq%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25281%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/1b2f7e245c78cd",
          "author": "たきろぐ",
          "description": "背景\n\nこの使い方でJuliaが別に高速じゃないのは分かっていますが…。\n\n 処理の概要\n\nディレクトリにgzファイルが置かれている（000からfffまで4096ファイル分）\ngzファイルの中身は文字列で、各行が1つのJSON文字列になっている\n1つ1つgzを開いて、今探索しているキーと同じキーが含まれているJSON文字列を探す\n抽出したJSON文字列に含まれているデータを集合に保存する\n\n\n 実装\n大まかにこのような感じの実装になっています。Pythonとほぼ同じ処理をそのままJuliaでも書いています。Juliaで書くときは、最初にググって出てきた GZip.jl を使う実装と、...",
          "link": "https://zenn.dev/takilog/articles/1b2f7e245c78cd",
          "publishedOn": "2022-11-02T12:05:34.000Z",
          "wordCount": 656,
          "title": "gzファイルの読み込みパフォーマンス比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QnvFIzl_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:gz%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QnvFIzl_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:gz%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/73585569e2584b",
          "author": "banananeko",
          "description": "IDLEとは\nIDLEとはpythonに標準で搭載されているエディタです。\n公式ドキュメントにも載っていますが以下の特徴があります\n\n\nクロスプラットフォーム\npythonで作られている\ncodeウィンドウとshellウィンドウがある\n\n\n公式ドキュメントはこちら↓\nhttps://docs.python.org/ja/3.10/library/idle.html\n\n IDLEのお勧めする理由\n私がIDLEをお勧めする理由はいくつかあります\nとりあえずはじめにその理由をざっとみてください\n\nデザインがシンプル\n予測変換機能がある\nコードを色分けしてくれる\n動作が軽い\n\n\n 詳しくみて...",
          "link": "https://zenn.dev/banananeko/articles/73585569e2584b",
          "publishedOn": "2022-11-02T11:59:13.000Z",
          "wordCount": 174,
          "title": "IDLE最強説を立ててみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---_Bnwcbz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:IDLE%25E6%259C%2580%25E5%25BC%25B7%25E8%25AA%25AC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---_Bnwcbz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:IDLE%25E6%259C%2580%25E5%25BC%25B7%25E8%25AA%25AC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/akaneiy/articles/f8e928e23ead60",
          "author": "akane",
          "description": "KingOFTimeの勤怠データをスプレッドシートに出力するというだけの処理です。\nUipathで実行していましたが、朝、昼、夜間と定期的に実行したいのと、UI操作もなく明らかにUipathである必要がないと感じていてpythonに書き換えましたので備忘録残します。\n\n anacondaで行う処理\n\n 新しい仮想環境を作成\nconda create -n 仮想環境名\n\n 作成した仮想環境へ移動する\nconda activate 仮想環境名\n\n 必要なライブラリをインストールする\n今回使用するライブラリは下記の通りです。\n●requests・・・KingOfTimeのAPIを叩く\n●mat...",
          "link": "https://zenn.dev/akaneiy/articles/f8e928e23ead60",
          "publishedOn": "2022-11-02T07:24:02.000Z",
          "wordCount": 2188,
          "title": "python スプレッドシートへ出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--35w8Qwd2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:akane%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%2520%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKejhnY3R1WW51TFhvUEN5WlJDZ0Y4WWppcE93N2hZWmUtTklmeDk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--35w8Qwd2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:akane%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%2520%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKejhnY3R1WW51TFhvUEN5WlJDZ0Y4WWppcE93N2hZWmUtTklmeDk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/toccaduong/articles/27a682b6ff8092",
          "author": "DuongLE",
          "description": "Django + Dockerよく使うコマンド（メモ）\n# バージョン確認\ndocker-compose exec web ./manage.py --version\n\n# プロジェクトをスタート\ndocker-compose up -d --build\ndocker-compose run web django-admin.py startproject 【project_name】 .\n\n# 全て削除\n・（コンテナを止めて、ネットワーク、ボリュームもイメージを削除）\ndocker-compose down --rmi all --volumes\n\n# アプリ作成\ndocker-c...",
          "link": "https://zenn.dev/toccaduong/articles/27a682b6ff8092",
          "publishedOn": "2022-11-02T07:21:35.000Z",
          "wordCount": 2839,
          "title": "Django Crud Example",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8ylMcyUr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:DuongLE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Django%2520Crud%2520Example%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15bGQzaEJxLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NDgxNDAxOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8ylMcyUr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:DuongLE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Django%2520Crud%2520Example%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15bGQzaEJxLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NDgxNDAxOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k_neko3/articles/af447fa4240771",
          "author": "k_neko3",
          "description": "PythonのOpenCVをインストール\npip install opencv-python\nNumpyは入ってたので割愛。\n以下、公式のチュートリアル。\nhttps://docs.opencv.org/4.x/d6/d00/tutorial_py_root.html\nmatplotlibのインストール\npip install matplotlib",
          "link": "https://zenn.dev/k_neko3/articles/af447fa4240771",
          "publishedOn": "2022-11-02T04:11:47.000Z",
          "wordCount": 88,
          "title": "Pythonのopencvをインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tvxXRFRQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AEopencv%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tvxXRFRQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AEopencv%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k_neko3/articles/47fc0c9594f5dd",
          "author": "k_neko3",
          "description": "病気から復活…！\nまだ療養中。\nいろいろ苦しんでいた間に世の中が少しずつ変わって、pythonで少し作りたいものができたので、ちょっとpipを更新したという単なるメモ。\nバージョン確認は以下。\npip --version\nアップグレードは以下。\npy -m pip install --upgrade pip\nインストールしてあるライブラリの確認。\npip list\npythonのバージョンアップなどで色々苦戦したので、またメモしておきたい。",
          "link": "https://zenn.dev/k_neko3/articles/47fc0c9594f5dd",
          "publishedOn": "2022-11-01T13:09:05.000Z",
          "wordCount": 79,
          "title": "pipのバージョン確認とアップグレードコマンドのメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2k517XgK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pip%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2k517XgK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pip%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/marketer/articles/84cb594e4182bf",
          "author": "marketer",
          "description": "公式サイトの説明によると：\n「2captcha.comは手動の画像認識によるCAPTCHA突破サービスです。こちらではスキャンしたドキュメント、レターヘッド、CAPTCHAからリアルタイムでテキストを認識する必要がある人と、画面からテキストを入力してお金を稼ぎたい人を見つけることができます。\nThe system employs English-speaking and Russian-speaking workers.\nこのシステムでは英語を話す作業者とロシア語を話す作業者が働いています。\nアンチCAPTCHAサービス、2captcha.comは、pixodrom、antigate、a...",
          "link": "https://zenn.dev/marketer/articles/84cb594e4182bf",
          "publishedOn": "2022-11-01T07:02:25.000Z",
          "wordCount": 1864,
          "title": "CAPTCHAソリューションの自動化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VOq4Czq3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:marketer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:CAPTCHA%25E3%2582%25BD%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oYXVBZVhsQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3Yzk0YmJjMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VOq4Czq3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:marketer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:CAPTCHA%25E3%2582%25BD%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oYXVBZVhsQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3Yzk0YmJjMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ibaraki/articles/74f9cd726d5885",
          "author": "いばらき",
          "description": "はじめに\nパーソルのブログによると、2022年プログラミング言語おすすめランキング1位はPythonらしいです。\nhttps://persol-tech-s.co.jp/hatalabo/it_engineer/607.html#_1-1\n実際にPythonは人気の言語なので、ここ数年「Pythonでコードを書いたからアプリに組み込んで欲しい」という依頼がそれなりにあります。\nしかし実際にコードを貰うと、可読性が低かったり、そもそも環境依存が強すぎてまともに動かなかったりするケースが多くて対応に苦労することが多いです。\nということで、仕事で人に渡すPythonのコードを書くなら最低限...",
          "link": "https://zenn.dev/ibaraki/articles/74f9cd726d5885",
          "publishedOn": "2022-11-01T06:00:01.000Z",
          "wordCount": 490,
          "title": "Pythonで書いたコードを人に渡す前に、最低限やって欲しいこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WHjNKzvL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BA%25BA%25E3%2581%25AB%25E6%25B8%25A1%25E3%2581%2599%25E5%2589%258D%25E3%2581%25AB%25E3%2580%2581%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%25AC%25B2%25E3%2581%2597%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WHjNKzvL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BA%25BA%25E3%2581%25AB%25E6%25B8%25A1%25E3%2581%2599%25E5%2589%258D%25E3%2581%25AB%25E3%2580%2581%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%25AC%25B2%25E3%2581%2597%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hibikine/articles/1febb4eb03b604",
          "author": "響音カゲ",
          "description": "※サードパーティのソフトウェアを使用します。本記事の内容を実行する場合は自己責任でお願いします。\n\nみなさん、イカしてますか？　ようやくS+0に上がった響音カゲです。\nスプラトゥーン3の戦績分析って楽しいですよね。自分のその日の動きが数字で見えるので、試合動画と一緒に見返すとすごく勉強になります。\nスプラトゥーンの戦績ログを管理できる stat.ink というサービスに自動で戦績をアップロードできる s3s というスクリプトが公開されていたので、Ubuntuサーバー上にserviceとしてセットアップするまでのやり方を解説します。\n\n 実行環境\n\n ソフトウェア\n\n\ns3s@2d59ff...",
          "link": "https://zenn.dev/hibikine/articles/1febb4eb03b604",
          "publishedOn": "2022-11-01T04:52:47.000Z",
          "wordCount": 1003,
          "title": "【Splatoon3】s3sを立てて戦績をstat.inkに自動アップする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iFR9OBmZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%259F%25BF%25E9%259F%25B3%25E3%2582%25AB%25E3%2582%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Splatoon3%25E3%2580%2591s3s%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E6%2588%25A6%25E7%25B8%25BE%25E3%2582%2592stat.ink%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pFYWotVkFHaEJ0OEFJX1ZFZ01uQTVsamt1aG5BQXdrU0hLaHFNVDFvPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iFR9OBmZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%259F%25BF%25E9%259F%25B3%25E3%2582%25AB%25E3%2582%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Splatoon3%25E3%2580%2591s3s%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E6%2588%25A6%25E7%25B8%25BE%25E3%2582%2592stat.ink%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pFYWotVkFHaEJ0OEFJX1ZFZ01uQTVsamt1aG5BQXdrU0hLaHFNVDFvPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taketooon/articles/c46b6ebef46117",
          "author": "taketooon",
          "description": "introduction\nやっぱりブラックボックス化がお得意なpythonさん。今回はあんまり体系化されていないxmlモジュールの使い方についてお話する。今回もこの記事の目的は研究にxml解析が必要になったので、その理解を深めるため。参考サイトは以下のものになる。\nhttps://pg-chain.com/python-xml-elementtree\nhttps://marusankakusikaku.jp/python/standard-library/xml.etree.ElementTree/\n\n xml内のnodeを取得する操作\n\n xmlの解析\n\nxmlの構造解析\nimpo...",
          "link": "https://zenn.dev/taketooon/articles/c46b6ebef46117",
          "publishedOn": "2022-10-31T17:53:53.000Z",
          "wordCount": 417,
          "title": "pythonでxmlの解析を0から学んでいく",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SZrswar4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7xml%25E3%2581%25AE%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SZrswar4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7xml%25E3%2581%25AE%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum02",
          "author": "derwind",
          "description": "目的\n引き続き cuQuantum で遊んでみたい。適当な題材が思いつかないので、Qiskit で遊んでみる (4) を元にグローバー探索アルゴリズムを実行したみたい。\n\n コンテンツ\nQiskit で遊んでみる (4) に対応させる形で用意した、GitHub のこちら をそのまま利用する。\n解説はすべて前回の記事に譲ることにして、今回も 2 つの解を持つオラクルを作成して探索を実行する。\n\n 基本的な回路（オラクル/Diffuser）の実装\n\n 基本的なパッケージのインポート\nまずは基本的なパッケージをインポートする。cuQuantum を使うのだが、デフォルトのバックエンド Cu...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum02",
          "publishedOn": "2022-10-31T17:48:36.000Z",
          "wordCount": 2092,
          "title": "cuQuantum で遊んでみる (2) — グローバー探索アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LBgy_PIN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LBgy_PIN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taketooon/articles/7789f634d52e6d",
          "author": "taketooon",
          "description": "introduction\n自分の研究でOSモジュールを使う事になり、なんか中身が見えなくて気持ち悪い、、、と思いながら適当に使っていたんだけど、前もグラフの使い方をまとめたら簡単に使えるようになったから、ファイル操作も記事を書いたら簡単に理解できるんじゃね？と思ってこれを書いていく。基本的にはkinocodeさんの動画をみつつ、そこから自分なりに考えたことを付け足していく方式でやっていくので、もしも分かりづらいなぁ...とおもったらkinocodeさんの動画を見るといい。\nhttps://www.youtube.com/watch?v=PV53-nTFE0w\n\n ディレクトリ名・フォ...",
          "link": "https://zenn.dev/taketooon/articles/7789f634d52e6d",
          "publishedOn": "2022-10-31T16:58:07.000Z",
          "wordCount": 460,
          "title": "pythonでのファイル操作を0から学んでいく",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f-rlUKci--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%2593%258D%25E4%25BD%259C%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f-rlUKci--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%2593%258D%25E4%25BD%259C%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/8a99818767a5f0",
          "author": "たきろぐ",
          "description": "はじめに\n普段体調を整えるために筋トレやジョギングをしており、それぞれアプリに運動が記録されているのですが、githubみたいなカレンダー（草）にして確認するとやる気が出るかな？と思って可視化してみることにしました。\n自作しようと思ったらちゃんと calmap というものが作られていたので使ってみます。\n\nCalendar heatmaps from Pandas time series data https://pythonhosted.org/calmap/\n\n\n\n 実装\n上の公式ドキュメントに従って、yearplot を使ってデータを描画しています。雰囲気このような実装です。\n...",
          "link": "https://zenn.dev/takilog/articles/8a99818767a5f0",
          "publishedOn": "2022-10-31T13:35:49.000Z",
          "wordCount": 271,
          "title": "PythonのCalmapを使ってトレーニング記録を可視化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AwhRCoK6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AECalmap%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2598%25E9%258C%25B2%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AwhRCoK6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AECalmap%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2598%25E9%258C%25B2%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/momiji777/articles/aae52473c0255d",
          "author": "momiji777",
          "description": "ライブラリのインストール\npip install yt-dlp\n\n コーディング\nfrom yt_dlp import YoutubeDL\n\nydl_opts = {'format': 'best'}\nwith YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https://www.youtube.com/watch?v=47Jl-_0wQHM&t=1s'])\n\n 実行結果\n[youtube] 47Jl-_0wQHM: Downloading webpage\n[youtube] 47Jl-_0wQHM: Downloading a...",
          "link": "https://zenn.dev/momiji777/articles/aae52473c0255d",
          "publishedOn": "2022-10-31T12:51:27.000Z",
          "wordCount": 275,
          "title": "pythonを使ってyoutubeをダウンロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cJFCxojb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6youtube%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cJFCxojb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6youtube%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/duke13/articles/81b75c22f373fc7",
          "author": "duke13",
          "description": "前説\n風俗を利用するならば可愛い女性のほうが望ましい！！\n男性諸君なら誰しもがそう願う。しかし、可愛い嬢は得てして人気であり、予約を取ることは非常に難しい。\nそこで、男性諸君の願いを叶えられるように人気嬢を予約できる確率を少しでも高められプログラムを組んでみた。\n\n 概要\nやりたいことはシンプルである。\n\n風俗サイトをスクレイピング\n出勤データを蓄積する\n空いている日があれば自分のLINE通知を出す\n\nなお、スクレイピングするにあたり、対象サイトはスクレイピングが可能かどうかを必ず許可をとってほうが賢明である。\n\n 事前準備\n通知システム作成にあたり以下の環境を用意する必要がある。\n...",
          "link": "https://zenn.dev/duke13/articles/81b75c22f373fc7",
          "publishedOn": "2022-10-31T09:08:09.000Z",
          "wordCount": 2251,
          "title": "風俗の人気嬢の空き予約を確認して自分のLine通知する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--452kQEhC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:duke13%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%25A2%25A8%25E4%25BF%2597%25E3%2581%25AE%25E4%25BA%25BA%25E6%25B0%2597%25E5%25AC%25A2%25E3%2581%25AE%25E7%25A9%25BA%25E3%2581%258D%25E4%25BA%2588%25E7%25B4%2584%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AELine%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290SmJQZ1gxdlZ0UWdlVE5lQUlWRmQ3a2Y5c0dEQWMwRnJ3ZlhrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--452kQEhC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:duke13%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%25A2%25A8%25E4%25BF%2597%25E3%2581%25AE%25E4%25BA%25BA%25E6%25B0%2597%25E5%25AC%25A2%25E3%2581%25AE%25E7%25A9%25BA%25E3%2581%258D%25E4%25BA%2588%25E7%25B4%2584%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AELine%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290SmJQZ1gxdlZ0UWdlVE5lQUlWRmQ3a2Y5c0dEQWMwRnJ3ZlhrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/dfb788343291fe",
          "author": "banananeko",
          "description": "pythonモジュール制作\nこの記事ではいくつかの種類に分けて\n解説していこうと思っています\n\n引数:なし　return:なし\n引数:あり　return:なし\n引数:なし　return:あり\n引数:あり　return:あり\n\nまずはじめに1番目の引数:なし　return:なし\nをしようと思います\n\n 引数:なし　return:なし\nこのような関数は最も基本的で\n関数を実行するとその関数の中に書かれている\n内容を実行すると終了して元のコードに戻ります\n\n 例\n\nmymodule.py\ndef hello():\n    print(\"hello\")\n\n\nmain.py\nimport my...",
          "link": "https://zenn.dev/banananeko/articles/dfb788343291fe",
          "publishedOn": "2022-10-31T07:31:55.000Z",
          "wordCount": 440,
          "title": "pythonで pythonのモジュールを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RgDFl1wF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7%2520python%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RgDFl1wF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7%2520python%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kasega0/articles/869d7965097520",
          "author": "かせがお",
          "description": "結論\nencorder として PyYAML の safe_dump(sort_keys=False) を渡す。\nimport yaml as pyyaml\n\ndef encorder(data, **kw):\n    return pyyaml.safe_dump(data, sort_keys=False, **kw)\n\nobj.to_yaml_file(\"obj.yml\", encoder=encorder)\n\n 背景\nPython で dataclass を yaml で serialize/deserialize したいなと思っていたら dataclass-wizard な...",
          "link": "https://zenn.dev/kasega0/articles/869d7965097520",
          "publishedOn": "2022-10-31T05:11:45.000Z",
          "wordCount": 576,
          "title": "YAMLWizard で順序を保ってシリアライズする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--czfB-ILO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%259B%25E3%2581%258C%25E3%2581%258A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:YAMLWizard%2520%25E3%2581%25A7%25E9%25A0%2586%25E5%25BA%258F%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvU0E4MmFVbUhJQTNFblBIb01zd0dBblFodDJ0OFpiODlzbTMwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--czfB-ILO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%259B%25E3%2581%258C%25E3%2581%258A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:YAMLWizard%2520%25E3%2581%25A7%25E9%25A0%2586%25E5%25BA%258F%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvU0E4MmFVbUhJQTNFblBIb01zd0dBblFodDJ0OFpiODlzbTMwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ekusiadadus/articles/twitter_bigquery_jupyterlab1",
          "author": "ekusiadadus",
          "description": "Twitter を BigQuery と JupyterLab で分析してみた ~ Twitter API v2 ~\n\n はじめに\n最近、Twitter のデータを分析してみたいと思い、Twitter のデータを取得する方法を調べてみました。\nTwitter API というものがあるらしく、Twitter APIを見てみると、結構面白そうだったので、Twitter API に申し込んでみました。\n申し込みが通ったので、Twitter API を使って、Twitter のデータを取得してみました。\nhttps://twitter.com/ekusiadadus/status/15867...",
          "link": "https://zenn.dev/ekusiadadus/articles/twitter_bigquery_jupyterlab1",
          "publishedOn": "2022-10-30T20:45:41.000Z",
          "wordCount": 3322,
          "title": "Twitter を BigQuery と JupyterLab で分析してみた ~ Twitter API v2 ~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0-kH0O0a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ekusiadadus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Twitter%2520%25E3%2582%2592%2520BigQuery%2520%25E3%2581%25A8%2520JupyterLab%2520%25E3%2581%25A7%25E5%2588%2586%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%7E%2520Twitter%2520API%2520v2%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQTdHV3Q0eUx2U1dIamZ5eVhhSjNMSWpaUVJ4MlNxTFNvMzExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0-kH0O0a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ekusiadadus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Twitter%2520%25E3%2582%2592%2520BigQuery%2520%25E3%2581%25A8%2520JupyterLab%2520%25E3%2581%25A7%25E5%2588%2586%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%7E%2520Twitter%2520API%2520v2%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQTdHV3Q0eUx2U1dIamZ5eVhhSjNMSWpaUVJ4MlNxTFNvMzExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gyabi/articles/3d2b3fb4e5bf23",
          "author": "Kano",
          "description": "はじめに\nOpenAIより公開されている翻訳AIであるWhisperをDocker+WSL+GPUで動かしてみたので備忘録。\nhttps://openai.com/blog/whisper/\n※WSL＋Docker環境でのGPU有効化はすでに可能なものとする。もし必要だったらコメントください。\n全体の流れは以下の記事を参考にさせていただきました。\nhttps://zenn.dev/kento1109/articles/d7d8f512802935\n\n そもそもWhisperとは？\nこちらの記事が非常に細かく解説されており参考になりました。\nhttps://zenn.dev/kwash...",
          "link": "https://zenn.dev/gyabi/articles/3d2b3fb4e5bf23",
          "publishedOn": "2022-10-30T15:01:47.000Z",
          "wordCount": 217,
          "title": "Docker＋WSL＋GPUでWhisperを動かしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vzZtSwiW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25EF%25BC%258BWSL%25EF%25BC%258BGPU%25E3%2581%25A7Whisper%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Mcmg0ZUUtYy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlMmVhMWE1YWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vzZtSwiW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25EF%25BC%258BWSL%25EF%25BC%258BGPU%25E3%2581%25A7Whisper%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Mcmg0ZUUtYy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlMmVhMWE1YWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/cdb555d6124a2a",
          "author": "Tanny",
          "description": "この記事は何？\nPythonでよく使われるリンター・フォーマッターについて「しっかり」理解するために整理した情報をまとめました。\n📋書いてあること\n\nリンターとフォーマッターの違いと役割\nPythonで用いられるリンター・フォーマッターの概要と使い方\nVS Codeでの利用方法\n\n🧑‍💻対象としたリンター・フォーマッター\n\n\n\nツール名\n種別\n概要\n\n\n\n\nFlake8\nリンター\n論理エラー・PEP8スタイルなどのチェック\n\n\nBlack\nフォーマッター\nPEP8に従ったスタイルフォーマット\n\n\nisort\nフォーマッター\nモジュールのインポート順のフォーマット\n\n\nmypy\nリンタ...",
          "link": "https://zenn.dev/tanny/articles/cdb555d6124a2a",
          "publishedOn": "2022-10-30T14:54:41.000Z",
          "wordCount": 1156,
          "title": "Pythonのリンター・フォーマッターをしっかりと理解する（Flake8, Black, isort, mypy）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LLBT7gsC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tanny%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Python%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25BB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A3%25E3%2581%258B%25E3%2582%258A%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Flake8%252C%2520Black%252C%2520isort%252C%2520mypy%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1uQXJxQmY3OS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4ZGJmODc0NjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LLBT7gsC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tanny%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Python%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25BB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A3%25E3%2581%258B%25E3%2582%258A%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Flake8%252C%2520Black%252C%2520isort%252C%2520mypy%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1uQXJxQmY3OS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4ZGJmODc0NjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/choshicure/articles/364875750f8888",
          "author": "choshicure",
          "description": "はじめに\nPythonで記述するAzure FunctionsにV2 modelというものがpreviewで公開されました。\n一番の変更点としては関数アプリの設定ファイルであるfunction.jsonがなくなったことです。\n設定ファイルの代わりにデコレータを利用してトリガーやバインディングの設定を行うようになりました。\n\n まずは試す\n\n 要件\nV2 modelをローカルで試すには以下の要件を満たしている必要があります。\nバージョンが古い、そもそもインストールしていないといった場合は要件を満たすバージョンをインストールしてください。\n\nPython 3.7以降\nAzure Func...",
          "link": "https://zenn.dev/choshicure/articles/364875750f8888",
          "publishedOn": "2022-10-30T13:26:50.000Z",
          "wordCount": 925,
          "title": "Pythonで記述するAzure FunctionsのV2 modelを試してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6U9o8DSV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:choshicure%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2581%25A7%25E8%25A8%2598%25E8%25BF%25B0%25E3%2581%2599%25E3%2582%258BAzure%2520Functions%25E3%2581%25AEV2%2520model%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1rNmppOGpBVy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NGM0NDA5M2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6U9o8DSV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:choshicure%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2581%25A7%25E8%25A8%2598%25E8%25BF%25B0%25E3%2581%2599%25E3%2582%258BAzure%2520Functions%25E3%2581%25AEV2%2520model%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1rNmppOGpBVy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NGM0NDA5M2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/pluck/articles/299ead20e6ab50",
          "author": "pluck",
          "description": "はじめに\n「AIエンジニアのための機械学習システムデザインパターン」という本読んでいて，パイプライン自体の管理もMLflowでやっていたのがいいなと思ったのでそれについて備忘録という意味でも書いていきます．\nhttps://www.amazon.co.jp/AIエンジニアのための機械学習システムデザインパターン-AI-TECHNOLOGY-澁井-雄介/dp/4798169447\n\n MLflow\nMLfLowは機械学習用の実験管理ツールで，主に実験のトラッキングやモデルファイルの保存（実際のストレージはS3やGCSなど）に使用することが多いと思います．\nhttps://mlflow....",
          "link": "https://zenn.dev/pluck/articles/299ead20e6ab50",
          "publishedOn": "2022-10-30T08:07:39.000Z",
          "wordCount": 779,
          "title": "MLflowで機械学習パイプラインの管理（1）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--slqBh4QJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:pluck%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:MLflow%25E3%2581%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%25EF%25BC%25881%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MVZwTzhBcVdXT0g1cHlDSjlHa1E3VkhzNXNtUXBSdGpGTHFvQWkwdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--slqBh4QJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:pluck%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:MLflow%25E3%2581%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%25EF%25BC%25881%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MVZwTzhBcVdXT0g1cHlDSjlHa1E3VkhzNXNtUXBSdGpGTHFvQWkwdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tamagoo/articles/6c5ca0d595961c",
          "author": "たまごぉ",
          "description": "やりたいこと\n画像のファイルサイズを特定の値にしたい。\n入力ファイルサイズに制限のあるシステムである場合には、ファイルサイズの境界値テストをしたいことがあると思います。\nファイルの形式が問われないのであればfsutilでバイナリ生成ができるのですが、特に画像ファイルに限定される場合、ましてや縦幅/横幅が指定される場合には生成が難しいです。\n実際にその辺りで痛い目を見たので、ファイルサイズを指定して、画像ファイルを作れるようになっておきたいなと思いました。\n\n PNGファイルの概要\n出力する画像ファイルを.pngに限定します。\nというのも、PNGの仕様が都合がいいのですが、その辺りの説...",
          "link": "https://zenn.dev/tamagoo/articles/6c5ca0d595961c",
          "publishedOn": "2022-10-30T07:39:50.000Z",
          "wordCount": 150,
          "title": "任意のファイルサイズの画像を生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BlwmcZQ0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%25BE%25E3%2581%2594%25E3%2581%2589%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hPcnJOOXZMTFBTSGVtSkZsVUtUNG1ad1E3YnZiQzhIWHZ2VlhLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BlwmcZQ0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%25BE%25E3%2581%2594%25E3%2581%2589%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hPcnJOOXZMTFBTSGVtSkZsVUtUNG1ad1E3YnZiQzhIWHZ2VlhLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/senbei139/articles/079a5e72ba83d9",
          "author": "senbei139",
          "description": "EDAでよく使うものをまとめていきます。\n\n 必要ライブラリのインポート\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n データファイル（csv)をdataframeとして読み込む\ndf = pd.read_csv(\"path_file.csv\")\n\n データセットのカラム確認\ndf.columns\n\n\"\"\"\nIndex(['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species'], dtype='o...",
          "link": "https://zenn.dev/senbei139/articles/079a5e72ba83d9",
          "publishedOn": "2022-10-30T05:30:25.000Z",
          "wordCount": 503,
          "title": "データ分析でのEDAチートシート（python/基本編）※随時更新",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fLk2D561--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:senbei139%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A7%25E3%2581%25AEEDA%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2588python%252F%25E5%259F%25BA%25E6%259C%25AC%25E7%25B7%25A8%25EF%25BC%2589%25E2%2580%25BB%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1icERVOU5aeS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYzc1N2EzMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fLk2D561--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:senbei139%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A7%25E3%2581%25AEEDA%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2588python%252F%25E5%259F%25BA%25E6%259C%25AC%25E7%25B7%25A8%25EF%25BC%2589%25E2%2580%25BB%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1icERVOU5aeS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYzc1N2EzMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/subaru_hello/articles/38624760719abf",
          "author": "subaru-hello",
          "description": "「今日個人で使用できる陸上競技場を検索するアプリ」を作っています。\nいちいちデータを調べてCSVにまとめるのが面倒だったので、スクレイピングしてきたデータをCSVに保存する処理をpythonで実装しました。\n開発環境\n\n\n\npip\npython\nchromedriver\n\n\n\n\n22.3\n3.9.10\n102.0.5005.27\n\n\n\n\n 戦略\nすでに競技場情報がまとまっているサイトがあったので、以下の手順で取得しようと考えています。\n\nサイトをクローリング\n競技場の名前と住所をスクレイピング\nCSVに出力\n\n本当は使用料金や開放時間も取得したかったのですが、平日と休日で料金や開放時間が...",
          "link": "https://zenn.dev/subaru_hello/articles/38624760719abf",
          "publishedOn": "2022-10-30T00:28:42.000Z",
          "wordCount": 1621,
          "title": "【python】スクレイピングしたデータをcsvに出力する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GCUCjx8s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:subaru-hello%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590python%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592csv%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSU1ZEOHhyNG5oSFhxczdwcE5vSWx3MThxMGdaai1ETHh5a3RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GCUCjx8s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:subaru-hello%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590python%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592csv%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSU1ZEOHhyNG5oSFhxczdwcE5vSWx3MThxMGdaai1ETHh5a3RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/f44621d18826c4",
          "author": "banananeko",
          "description": "注意書き\nこれはあくまでも英語ができなくても pythonができるようになることを保証はしませんあくまで僕の独り言だと思って聞いてください\n\n はじめに\nこの記事では英語ができないけど pythonを\nやりたいという人や過去の自分を思い出したい\nという人向けに書いています。\nはじめにも書きましたが\n\npythonができるようになることを保証はしません\n\nのでご注意ください\n\n 方法その1 スペル丸暗記\n英語ができる人のとってはものすごく効率の悪いことなのですが英語ができない人にとっては\nまあまあ有効な手段です\nたとえば\nprint(“hello world\")\nにあるprintも昔は...",
          "link": "https://zenn.dev/banananeko/articles/f44621d18826c4",
          "publishedOn": "2022-10-28T22:39:17.000Z",
          "wordCount": 211,
          "title": "英語ができない人の pythonのマスター方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lTYvpK1P--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%258B%25B1%25E8%25AA%259E%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%2520python%25E3%2581%25AE%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lTYvpK1P--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%258B%25B1%25E8%25AA%259E%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%2520python%25E3%2581%25AE%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sasshu/articles/fc3caa06d7a799",
          "author": "sasshu",
          "description": "はじめに\nこの記事は、JavaScriptに触ってきた（といっても1年くらい）者がPythonも使うようになったので、JavaScriptとPythonの相互変換を目指し、その備忘録として書いています。\n今回は、文字列（配列・リスト）の切り出しについてです。\n\n 文字列の切り出し\n\n JavaScript\nconst str = 'abcdef';\n// start: 切り出し開始位置, end: 切り出し終了位置（自分自身は含まない）\n// slice(start, end)\n// endのみ省略可\n\n// 3文字目以降\nconsole.log(str.slice(2));   /...",
          "link": "https://zenn.dev/sasshu/articles/fc3caa06d7a799",
          "publishedOn": "2022-10-27T18:39:49.000Z",
          "wordCount": 1100,
          "title": "JavaScriptとPythonにおける文字列（配列・リスト）の切り出し",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b4ZFz6J2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sasshu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JavaScript%25E3%2581%25A8Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25EF%25BC%2588%25E9%2585%258D%25E5%2588%2597%25E3%2583%25BB%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25EF%25BC%2589%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E5%2587%25BA%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JFOExHdElTNUZnUjdOS0V3QmdBMnlCZ2ROc1V4VVpIRjA2RE1SWmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b4ZFz6J2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sasshu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JavaScript%25E3%2581%25A8Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25EF%25BC%2588%25E9%2585%258D%25E5%2588%2597%25E3%2583%25BB%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25EF%25BC%2589%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E5%2587%25BA%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JFOExHdElTNUZnUjdOS0V3QmdBMnlCZ2ROc1V4VVpIRjA2RE1SWmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kazaki/articles/893b37b1d1c78c",
          "author": "菊谷　知真",
          "description": "openCVのcv2.matchTemplate()によるテンプレートマッチングでは、アルファ値が使えないことで有名ですが、実はマスク付きテンプレートマッチングで透過処理もどきが可能です。\n公式ドキュメント：https://docs.opencv.org/4.x/d4/dc6/tutorial_py_template_matching.html\nオライリー・ジャパンから出版されてるあの「詳解OpenCV 3」にもこのことは書かれて無かったので知らなかった・・・😇\nかなり便利なのですが、よくあるopenCVの基礎だけを簡単に解説した記事などでは取り上げられてないので本記事でご紹介したいと思...",
          "link": "https://zenn.dev/kazaki/articles/893b37b1d1c78c",
          "publishedOn": "2022-10-27T16:32:14.000Z",
          "wordCount": 437,
          "title": "マスク付きテンプレートマッチングでスプラトゥーン3のイカランプを認識させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6RBTWsq8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%258F%258A%25E8%25B0%25B7%25E3%2580%2580%25E7%259F%25A5%25E7%259C%259F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%258D%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25A9%25E3%2583%2588%25E3%2582%25A5%25E3%2583%25BC%25E3%2583%25B33%25E3%2581%25AE%25E3%2582%25A4%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2597%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15Q1RCMmZtUC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTZlZTg2N2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6RBTWsq8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%258F%258A%25E8%25B0%25B7%25E3%2580%2580%25E7%259F%25A5%25E7%259C%259F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%258D%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25A9%25E3%2583%2588%25E3%2582%25A5%25E3%2583%25BC%25E3%2583%25B33%25E3%2581%25AE%25E3%2582%25A4%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2597%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15Q1RCMmZtUC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTZlZTg2N2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shiroqujira/articles/00ea833a7b11a4",
          "author": "shiroqujira",
          "description": "はじめに\nGoogle Analytics 4のデータをpythonで処理したいなーと思い、Analytics Data APIを使ってみました。使ってみて思ったことをまとめたので、このAPIを利用する参考になれば幸いです。\n使用したコードこちらからダウンロードできます.\nhttps://github.com/gradus-AP/python-ga4-tips\n\n\n まずは使ってみる\n\n 準備\n公式のクイックスタートに沿って以下の準備を行います。\n<手順1> Google Analytics Data APIを有効にする\nクイックスタートのページの[Enable the ...",
          "link": "https://zenn.dev/shiroqujira/articles/00ea833a7b11a4",
          "publishedOn": "2022-10-27T13:41:38.000Z",
          "wordCount": 2451,
          "title": "【GA4】Google Analytics 4のデータをPythonで取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xZjv_Riv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shiroqujira%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590GA4%25E3%2580%2591Google%2520Analytics%25204%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Python%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00dVhsdXVGTC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4OGMxOTVkODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xZjv_Riv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shiroqujira%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590GA4%25E3%2580%2591Google%2520Analytics%25204%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Python%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00dVhsdXVGTC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4OGMxOTVkODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/optfit/articles/f10da036402cb8",
          "author": "OptFit",
          "description": "Opt FitエンジニアのURUSHIです！\n先日大量のライフサイクル設定を依頼されて泣き出しそうだったので、その際に利用した解決策を共有します。\n\n 概要\nBoto3のResource APIを利用してAmazon S3 バケットのPrefixごとにライフサイクル設定をする\n\n 対象読者\n\n大量のライフサイクル設定を依頼されて泣きそうな方\nAmazon S3 バケットにライフサイクル設定をしたい方\nライフサイクル設定をAmazon S3 コンソールからポチポチ頑張りたくない方\nAWS CLIではなくBoto3を利用してライフサイクル設定をしたい方\n\n\n できるようになること\n\n\n\n 内...",
          "link": "https://zenn.dev/optfit/articles/f10da036402cb8",
          "publishedOn": "2022-10-27T03:00:00.000Z",
          "wordCount": 1182,
          "title": "AWS SDK for Python (Boto3) を用いてプレフィックスごとにS3ライフサイクルルールを一括設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qNc30dc---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:OptFit%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:AWS%2520SDK%2520for%2520Python%2520%2528Boto3%2529%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25ABS3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2595%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AB%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1DYzJZdjJTRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTNkYmUyMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qNc30dc---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:OptFit%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:AWS%2520SDK%2520for%2520Python%2520%2528Boto3%2529%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25ABS3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2595%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AB%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1DYzJZdjJTRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTNkYmUyMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/m_cre/articles/address-printing-on-jp-postcards",
          "author": "mcre (FUJITA Shinya)",
          "description": "はじめに\n毎年年末に悩まされる年賀状、近年の傾向のとおり私も基本的には止めてしまったのですが、親戚だけには出すことにしています。\nWindowsであれば手頃な宛名印刷ソフトがいくつかあったと思うのですが、Macに乗り換えてからは定番のものがみつからず、困っていたものです。\nそれであれば、自分でつくろうと考えました。\nMacだけでなく、DockerさえインストールできればWindowsでもLinuxでもラズパイでもうごくはずです。たぶん。\n\n つかいかた\n\n Dockerのインストール\nDockerをインストールしたことがない場合は、公式サイトなどを参考にまずインストールしてください。...",
          "link": "https://zenn.dev/m_cre/articles/address-printing-on-jp-postcards",
          "publishedOn": "2022-10-26T16:09:52.000Z",
          "wordCount": 405,
          "title": "年賀状の宛名印刷難民の救済",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ptnOFW9---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mcre%2520%2528FUJITA%2520Sh...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E5%25B9%25B4%25E8%25B3%2580%25E7%258A%25B6%25E3%2581%25AE%25E5%25AE%259B%25E5%2590%258D%25E5%258D%25B0%25E5%2588%25B7%25E9%259B%25A3%25E6%25B0%2591%25E3%2581%25AE%25E6%2595%2591%25E6%25B8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KV0JoSXNFSS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2MmJiMTQ0MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ptnOFW9---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mcre%2520%2528FUJITA%2520Sh...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E5%25B9%25B4%25E8%25B3%2580%25E7%258A%25B6%25E3%2581%25AE%25E5%25AE%259B%25E5%2590%258D%25E5%258D%25B0%25E5%2588%25B7%25E9%259B%25A3%25E6%25B0%2591%25E3%2581%25AE%25E6%2595%2591%25E6%25B8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KV0JoSXNFSS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2MmJiMTQ0MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/78d996128f3335",
          "author": "よしだ",
          "description": "import os\nimport time\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom cmdstanpy import CmdStanModel\n\n データの読み込み\n以下のデータを使用しています。\nhttps://github.com/MatsuuraKentaro/RStanBook/blob/master/chap05/input/data-attendance-1.txt\ndf = pd.read_csv(\"./data-attendance-1.txt\")\npr...",
          "link": "https://zenn.dev/yoshida0312/articles/78d996128f3335",
          "publishedOn": "2022-10-26T13:05:07.000Z",
          "wordCount": 1963,
          "title": "cmdstanpy : 重回帰",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3H-LHrE2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E9%2587%258D%25E5%259B%259E%25E5%25B8%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3H-LHrE2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E9%2587%258D%25E5%259B%259E%25E5%25B8%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/termoshtt/articles/numpy-einsum",
          "author": "termoshtt",
          "description": "rust-ndarray用の einsum! マクロを作るためにまずNumPyの実装を調べたので、その内容をまとめていく。\n\n subscripts\nnumpy.einsumの引数はのうち、Optionalで無いのは次の2つ：\n\n\nsubscripts: str\n\noperands: list of array_like\n\neinsum はこの subscripts で与えられた文字列に応じて operands で与えられたテンソルに対して操作しその結果を返します。\nこの記事では subscripts の仕様をまとめていきます。\n\n Implicit mode\nsubscripts には...",
          "link": "https://zenn.dev/termoshtt/articles/numpy-einsum",
          "publishedOn": "2022-10-26T09:18:33.000Z",
          "wordCount": 1774,
          "title": "numpy.einsumの仕様",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qY1Ufelv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:termoshtt%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:numpy.einsum%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lfdUM4LVBtaVF5cjN4UjBLdWMzN2t3ZDF2cGlsaUZWV25MbzhDS1E9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qY1Ufelv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:termoshtt%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:numpy.einsum%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lfdUM4LVBtaVF5cjN4UjBLdWMzN2t3ZDF2cGlsaUZWV25MbzhDS1E9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/db0688fc341655",
          "author": "banananeko",
          "description": "labelウィジェットとは\n名前の通りテキストを表示するためのウィジェットです。\nこのウィジェットがなければGUIアプリケーションが成り立つことはまずありません\n\n labelウィジェットの表示方法\nlabelウィジェットはButtonと同じように\n表示することができます\nラベル名　= tk.Label(表示するWindow名, text = \"表示するテキスト\").pack()\nひとまずこれでlabelを表示させることはできます\n\n labelの色の変更\n\n 文字の色\nこのラベルの色は実は変更することができます変更するためにはtk.Labelの後の\n()に\nforeground=\"...",
          "link": "https://zenn.dev/banananeko/articles/db0688fc341655",
          "publishedOn": "2022-10-26T07:08:41.000Z",
          "wordCount": 138,
          "title": "tkinterのlabelウィジェットの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UlMzMNcj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:tkinter%25E3%2581%25AElabel%25E3%2582%25A6%25E3%2582%25A3%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UlMzMNcj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:tkinter%25E3%2581%25AElabel%25E3%2582%25A6%25E3%2582%25A3%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hashito/articles/e47166c4a0bfd0",
          "author": "hashito",
          "description": "問題\n例えば、下記のようなHTMLがある場合で、すべての文字列を取得したい場合。\n<p>\n    これは\n    <b style=\"font-weight:bold;\">\n        テスト\n    </b>\n    です。\n</p>\nPythonのlxmlを利用すると下記のような手順で取得する事ができる。\n\n これはを取得する\nlxmlで解析して、xptahという指定文でテキストを取得できる\nfrom lxml import etree\n\nhtml_data=\"\"\"\n<p>\n    これは\n    <b sty...",
          "link": "https://zenn.dev/hashito/articles/e47166c4a0bfd0",
          "publishedOn": "2022-10-26T05:39:42.000Z",
          "wordCount": 876,
          "title": "lxmlで子要素の後ろ側にある文字列を取得する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zPW2PgS9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:lxml%25E3%2581%25A7%25E5%25AD%2590%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AE%25E5%25BE%258C%25E3%2582%258D%25E5%2581%25B4%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oRkRmUXQ5Ni0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMmRhOTE0MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zPW2PgS9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:lxml%25E3%2581%25A7%25E5%25AD%2590%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AE%25E5%25BE%258C%25E3%2582%258D%25E5%2581%25B4%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oRkRmUXQ5Ni0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMmRhOTE0MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yag_ays/articles/a6c84622f558ee",
          "author": "yag_ays",
          "description": "概要\nPyTorchからGPUを利用するためには、CUDAのバージョンに合ったパッケージをインストールする必要があります。PyTorchの\"Get Started\"ページでは、プラットフォームやバージョン、パッケージマネージャーを選択すると、それに応じたインストールコマンドが表示される仕組みがありますが、ここにはPoetryは含まれていません。\n\nそこでこの記事では、Poetryを利用しているプロジェクトにおいて、任意のCUDAバージョンのPyTorchパッケージをインストールする方法を解説します。\n\n 方法\n実現する方法はいくつか存在するので、それぞれ解説していきます。ここでは、例...",
          "link": "https://zenn.dev/yag_ays/articles/a6c84622f558ee",
          "publishedOn": "2022-10-26T04:35:14.000Z",
          "wordCount": 1265,
          "title": "任意のCUDAバージョンのPyTorchをPoetryでインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C5E_fe3L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yag_ays%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AECUDA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AEPyTorch%25E3%2582%2592Poetry%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KV0FNVXZlQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMWRjYWIzODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C5E_fe3L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yag_ays%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AECUDA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AEPyTorch%25E3%2582%2592Poetry%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KV0FNVXZlQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMWRjYWIzODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/manuriya/articles/49a02bb2a13b84",
          "author": "manuriya",
          "description": "記事要約\n\n指定したキーワードが含まれるarXiv上の論文をSlack上に投げるbotを作成\n内容を簡単に把握するためDeepLの翻訳結果をつけた\nGitHub Actionsで指定時間にbotを起動するようにした\n\n\n 完成イメージ\nタイトルとURL、著者に加えて日英の概要を表示\n\n\n リポジトリ\nhttps://github.com/manuriya/arxiv-satellite\n\n 使い方\n\n 準備\n\nSlackのIncoming Webhookを使用してbotを作成、APIトークンを確認する\n\nDeepLのアカウントを作成、DeepL APIの認証キーを確認する\n\n\n Gi...",
          "link": "https://zenn.dev/manuriya/articles/49a02bb2a13b84",
          "publishedOn": "2022-10-25T15:00:00.000Z",
          "wordCount": 307,
          "title": "DeepL + Slack + GitHub Actionsでリモセン論文取得Botの作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ti5zSTxh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:manuriya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:DeepL%2520%252B%2520Slack%2520%252B%2520GitHub%2520Actions%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25A2%25E3%2582%25BB%25E3%2583%25B3%25E8%25AB%2596%25E6%2596%2587%25E5%258F%2596%25E5%25BE%2597Bot%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0xbERmMzJpVS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYjM1Nzk5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ti5zSTxh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:manuriya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:DeepL%2520%252B%2520Slack%2520%252B%2520GitHub%2520Actions%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25A2%25E3%2582%25BB%25E3%2583%25B3%25E8%25AB%2596%25E6%2596%2587%25E5%258F%2596%25E5%25BE%2597Bot%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0xbERmMzJpVS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYjM1Nzk5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shui2022/articles/86452f30aed64f",
          "author": "shui2022",
          "description": "はじめに\n浮動小数点数に関わる計算の実装について、一度は悩まされた人も多いと思いますので、自分が良く使うPython、Java、C#での実装方法を備忘録代わりに執筆します。\n浮動小数点数についての教科書的な知識は、以下のリンクを参照して下さい。\nhttps://workteria.forward-soft.co.jp/blog/detail/10401\nAtCoderという競技プログラミングのサイトで浮動小数点数を扱っている問題があるので、今回はここで通るコードを紹介したいと思います。\nhttps://atcoder.jp/contests/abc169/tasks/abc169_c...",
          "link": "https://zenn.dev/shui2022/articles/86452f30aed64f",
          "publishedOn": "2022-10-25T14:54:54.000Z",
          "wordCount": 582,
          "title": "浮動小数点数計算のPython、Java、C#での実装について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ECj1lemu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shui2022%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%25B5%25AE%25E5%258B%2595%25E5%25B0%258F%25E6%2595%25B0%25E7%2582%25B9%25E6%2595%25B0%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AEPython%25E3%2580%2581Java%25E3%2580%2581C%2523%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MVpxaUNacFE5dE56NmRwb0llSE5CSHhiNmNPTXNDaXlrNllIZTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ECj1lemu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shui2022%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%25B5%25AE%25E5%258B%2595%25E5%25B0%258F%25E6%2595%25B0%25E7%2582%25B9%25E6%2595%25B0%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AEPython%25E3%2580%2581Java%25E3%2580%2581C%2523%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MVpxaUNacFE5dE56NmRwb0llSE5CSHhiNmNPTXNDaXlrNllIZTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/4050sktrmt/articles/6f0998c6ba5436",
          "author": "4050sktrmt",
          "description": "経緯\nMac環境において、「Pythonでカメラのデバイス一覧を取得したいなぁ」と思いながらググると、次の記事に辿り着いた。\nhttps://qiita.com/sutoh/items/fddefe130eae3bba946f\n最近、趣味でOBSを触り始めてみて、OBSの仮想カメラからの映像出力をOpenCVでアレコレしたくなった。\nしかし、上記記事の手法だと、少なくとも筆者の環境ではOBSの仮想カメラ情報を出力することが出来なかった。\n直接的な解決策をググっても見つからなかったため、自身でなんとか解決してみることにした。\n\n やりたいことの整理\n\nPythonで、OBSの仮想カメラ...",
          "link": "https://zenn.dev/4050sktrmt/articles/6f0998c6ba5436",
          "publishedOn": "2022-10-25T13:38:01.000Z",
          "wordCount": 494,
          "title": "Mac＆Pythonで、OBSの仮想カメラ情報を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zhT14ZeQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:4050sktrmt%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Mac%25EF%25BC%2586Python%25E3%2581%25A7%25E3%2580%2581OBS%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29Fb2ZIQW5YTEtxeTRSX004QlBfSTZ2a1lqaHdfX2JYdm9haGZ2PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zhT14ZeQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:4050sktrmt%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Mac%25EF%25BC%2586Python%25E3%2581%25A7%25E3%2580%2581OBS%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29Fb2ZIQW5YTEtxeTRSX004QlBfSTZ2a1lqaHdfX2JYdm9haGZ2PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/e31570b1b29114",
          "author": "たきろぐ",
          "description": "背景\n以前このような記事を書きました。\nhttps://zenn.dev/takilog/articles/0d355bbb80f79848da8d\n国土地理院データのシェープファイル (*.shp) の外周部をPython+Geopandasで読み込む方法を説明しました。この実装を久しぶりに試したら、長野以外の都道府県だとPolygonがMultiPolygonになることが結構あって、ムムムとなったので追加の記事を書くことにしました。\n\n やったこと\n基本的にやったことは以前の記事の処理を同じですが、Polygon or MultiPolygonの判定をやります。内陸の都道府県は比...",
          "link": "https://zenn.dev/takilog/articles/e31570b1b29114",
          "publishedOn": "2022-10-25T12:01:37.000Z",
          "wordCount": 364,
          "title": "Python+Geopandasでシェープファイル(shpファイル)を処理した (PolygonとMultiPolygonの分岐)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EF9C7jIj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Python%252BGeopandas%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%2597%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%2528shp%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%2529%25E3%2582%2592%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2597%25E3%2581%259F%2520%2528Polygon%25E3%2581%25A8MultiPolygon%25E3%2581%25AE%25E5%2588%2586%25E5%25B2%2590%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EF9C7jIj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Python%252BGeopandas%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%2597%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%2528shp%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%2529%25E3%2582%2592%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2597%25E3%2581%259F%2520%2528Polygon%25E3%2581%25A8MultiPolygon%25E3%2581%25AE%25E5%2588%2586%25E5%25B2%2590%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nyo3q1/articles/python-auto-logger",
          "author": "nyo3q1",
          "description": "関数単体へのデコレーターの適用すぐ出るけど、今回の使い方は中々無いので忘れないように残しておく。\nhttps://stackoverflow.com/a/23726462\ndef for_all_methods(decorator):\n    def decorate(cls):\n        for attr in cls.__dict__: # there's propably a better way to do this\n            if callable(getattr(cls, attr)):\n                setattr(cls, attr,...",
          "link": "https://zenn.dev/nyo3q1/articles/python-auto-logger",
          "publishedOn": "2022-10-25T10:25:54.000Z",
          "wordCount": 299,
          "title": "Pythonのクラスのメソッド全てに自動でデコレーターを適用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QLKiyzRt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nyo3q1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS02M0J3cHBmQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjM2E3ZWQ3NDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QLKiyzRt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nyo3q1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS02M0J3cHBmQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjM2E3ZWQ3NDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yukku/articles/cf1dbb60f040d6",
          "author": "ユック",
          "description": "Windows11のローカルでDreamboothを動かす環境構築を行います。\n今回紹介しているJoePenna版のDreamboothは、成功事例が多く精度が高いと評価を受けています。また、ckptファイルを出力してくれるので、変換することなくAUTOMATIC1111などで使用できます。\nただし最低VRAM24GB必要なので注意してください。\n筆者のPCの環境は以下の通りです。\n\n\n\n項目\n内容\n\n\n\n\nOS\nWindows11 22H2\n\n\nCPU\nIntel Core i7-11700k\n\n\nメモリ\nDDR4-3200 64GB\n\n\nGPU\nNVIDIA RTX3090Ti\n\n\n...",
          "link": "https://zenn.dev/yukku/articles/cf1dbb60f040d6",
          "publishedOn": "2022-10-25T10:00:00.000Z",
          "wordCount": 1986,
          "title": "WSL2でJoePenna版のDreamboothを動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fiYQWgtd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A6%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:WSL2%25E3%2581%25A7JoePenna%25E7%2589%2588%25E3%2581%25AEDreambooth%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1QWGVaUmt2bi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5OTJhY2FhODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fiYQWgtd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A6%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:WSL2%25E3%2581%25A7JoePenna%25E7%2589%2588%25E3%2581%25AEDreambooth%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1QWGVaUmt2bi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5OTJhY2FhODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/atu4403/articles/python_fire_2022",
          "author": "atu4403",
          "description": "定型作業や自作ツールを使うときにコマンド1発で使用できると便利です。\n例えば、URLにアクセスしてデータをダウンロードしDBにぶち込むなどなど。\n以前にこのような記事を投稿したことがあるのですが欠点がありました。\nhttps://zenn.dev/atu4403/articles/b776a9f2b7a516d195d1\n公開できるCLIアプリケーションという前提でしたので、汎用的に使える一方で細かな修正が面倒でした。\nなので今回は「自分が使えればOK」という観点で書き直してみたいと思います。\n\n プロジェクト作成\n例としてmyappというコマンドを作成します。myappの部分は好きに命...",
          "link": "https://zenn.dev/atu4403/articles/python_fire_2022",
          "publishedOn": "2022-10-25T07:44:49.000Z",
          "wordCount": 665,
          "title": "fireとpoetryで作る自分用cliアプリケーション(2022)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--My-vaNQ0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:atu4403%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:fire%25E3%2581%25A8poetry%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8cli%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25282022%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XN1JlNTRMdC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhYmI2YjcxOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--My-vaNQ0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:atu4403%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:fire%25E3%2581%25A8poetry%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8cli%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25282022%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XN1JlNTRMdC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhYmI2YjcxOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/teba_eleven/articles/d318ccf5f8f729",
          "author": "手羽先",
          "description": "現象\n\nターミナルを開くと勝手にcondaの仮想環境がactivateされる\n\n\n 筆者の環境\nconda 22.9.0\ncondaはMiniforge3で入れました。\n\n 結論\n\nターミナル\nconda config --set auto_activate_base false\n\nターミナルでこちらを実行。\n\n 関連ページ\nhttps://www.chickensblog.com/vscode-runcode-run/\nhttps://www.chickensblog.com/vscode-not-path/\nhttps://zenn.dev/teba_eleven/article...",
          "link": "https://zenn.dev/teba_eleven/articles/d318ccf5f8f729",
          "publishedOn": "2022-10-25T04:42:26.000Z",
          "wordCount": 187,
          "title": "【M1/Mac】毎回勝手にCondaが起動されるのを止める方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FDeq1omI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%2589%258B%25E7%25BE%25BD%25E5%2585%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590M1%252FMac%25E3%2580%2591%25E6%25AF%258E%25E5%259B%259E%25E5%258B%259D%25E6%2589%258B%25E3%2581%25ABConda%25E3%2581%258C%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2581%25AE%25E3%2582%2592%25E6%25AD%25A2%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1JT2VLZ3BYbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjRmMWJiZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FDeq1omI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%2589%258B%25E7%25BE%25BD%25E5%2585%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590M1%252FMac%25E3%2580%2591%25E6%25AF%258E%25E5%259B%259E%25E5%258B%259D%25E6%2589%258B%25E3%2581%25ABConda%25E3%2581%258C%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2581%25AE%25E3%2582%2592%25E6%25AD%25A2%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1JT2VLZ3BYbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjRmMWJiZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kazu_gor/articles/9c26774e2802b9",
          "author": "kazu-gor",
          "description": "Python3.8以降で使えるf-stringsの小技です。\n\ntest.py\nx = 10\nprint(f'{x=}')\n\n↑こうすると、こう↓\n\nCLI\n$ python test.py\n>>> x=10\n\nなかなか便利。\n\n\ntest.py\nprint(f'{x  =  }')\n\n↑こうしても、こう↓\n\nCLI\n$ python test.py\n>>> x  =  10\n\n便利ですねえ。",
          "link": "https://zenn.dev/kazu_gor/articles/9c26774e2802b9",
          "publishedOn": "2022-10-25T02:00:00.000Z",
          "wordCount": 175,
          "title": "最近見つけたPythonの小技",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uUSBJ_8U--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazu-gor%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%259C%2580%25E8%25BF%2591%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%2591%25E3%2581%259FPython%25E3%2581%25AE%25E5%25B0%258F%25E6%258A%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00VkYwMXlLMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3Nzg2MjgyMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uUSBJ_8U--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazu-gor%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%259C%2580%25E8%25BF%2591%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%2591%25E3%2581%259FPython%25E3%2581%25AE%25E5%25B0%258F%25E6%258A%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00VkYwMXlLMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3Nzg2MjgyMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ymiz/articles/ffbdcd9e26a3a3",
          "author": "ymiz",
          "description": "問題\n\npytestを使っている\nテストカバレッジを計りながら開発したい\nどうするか？\n\n\n 対応\npytest-cov を使う。\nhttps://pypi.org/project/pytest-cov/\n例えば、\n├─src\n│  └─domains\n│      └─foo\n└─test\nimport pytest\n\nfrom src.domains.foo.domain import Domain as Foo\n\n\ndef test_foo():\n    Foo()\nclass Domain:\n    pass\nの時、\n> pytest --cov=src test\n==...",
          "link": "https://zenn.dev/ymiz/articles/ffbdcd9e26a3a3",
          "publishedOn": "2022-10-24T20:49:13.000Z",
          "wordCount": 359,
          "title": "pytestでカバレッジを計りながら開発したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kdmMFa4O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymiz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pytest%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%2590%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2582%2592%25E8%25A8%2588%25E3%2582%258A%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kdmMFa4O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymiz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pytest%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%2590%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2582%2592%25E8%25A8%2588%25E3%2582%258A%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/eito_blog/articles/f65e9994fdebc7",
          "author": "エイト",
          "description": "案件でSP-APIを利用するために必要な設定を行う機会がありました。\nこのページではその備忘録としてAmazon Marketplace SP-APIを利用するまでの手順について解説いたします。\nSP-APIを利用するために下記6つのデータを取得します。\n\nリフレッシュトークン\nクライアントID\nクライアント機密情報\nシークレットアクセスキー\nアクセスキーID\nロールのARN\n\n\n IAMユーザーの作成\nIAMに遷移します。\n\nユーザー > ユーザーを追加をクリックします。\n\n任意のユーザー名（添付画像ではAmazonSPAPIUser）を入力し、アクセスキー-プログラムによるア...",
          "link": "https://zenn.dev/eito_blog/articles/f65e9994fdebc7",
          "publishedOn": "2022-10-24T13:26:00.000Z",
          "wordCount": 402,
          "title": "【SP-API】Amazon Marketplace SP-APIを利用するまでの手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Mq4jkEmq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590SP-API%25E3%2580%2591Amazon%2520Marketplace%2520SP-API%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fZG9XSFdDLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Mq4jkEmq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590SP-API%25E3%2580%2591Amazon%2520Marketplace%2520SP-API%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fZG9XSFdDLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/34f3d93f860266",
          "author": "よしだ",
          "description": "import os\nimport time\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom cmdstanpy import CmdStanModel\n\n データの読み込み\n以下のデータを使用しています。\nhttps://github.com/MatsuuraKentaro/RStanBook/blob/master/chap04/input/data-salary.txt\ndf = pd.read_csv(\"./data-salary.txt\")\nplt.scatter(df[\"X\"], df[\"Y\"])\nplt.xl...",
          "link": "https://zenn.dev/yoshida0312/articles/34f3d93f860266",
          "publishedOn": "2022-10-23T13:44:14.000Z",
          "wordCount": 1837,
          "title": "cmdstanpy : 単回帰",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BDeoSuKD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E5%258D%2598%25E5%259B%259E%25E5%25B8%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BDeoSuKD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E5%258D%2598%25E5%259B%259E%25E5%25B8%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/13cc3ce1c61d28",
          "author": "banananeko",
          "description": "tkinterとは\ntkinterとは pythonの標準モジュールで\ntcl/tkというプログラミング言語の　　\nGUIツールのtkを pythonで使えるようにしたものです\n\n pyqtとは\npyqtとは　pipで追加できるモジュールで\nqtというc++で使用されている GUI\nツールを pythonで使えるようにしたものです\n\n それぞれのメリット　デメリット\n\n tkinterのメリット\n\nインストール不要\nコードが短い\n商用利用可\n\n\n tkinterのデメリット\n\nデザインがダサい\n機能が少ない\n\n\n pyqtのメリット\n\n多機能\nデザインがいい\n\n\n pyqtのデメリッ...",
          "link": "https://zenn.dev/banananeko/articles/13cc3ce1c61d28",
          "publishedOn": "2022-10-23T13:33:47.000Z",
          "wordCount": 142,
          "title": "python  tkinterとpyqtの比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--z6TL7I6h--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520%2520tkinter%25E3%2581%25A8pyqt%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--z6TL7I6h--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520%2520tkinter%25E3%2581%25A8pyqt%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/bugph0bia/articles/e53198bb384cb8",
          "author": "bugph0bia",
          "description": "はじめに\ntelnet を利用してコマンドを送信する場合、使用すべきリターンコードは <CR><LF> か <CR><NUL> のどちらかのようです。安直に <LF> 単独で送ってもうまくいきません。\nこのことは、telnet コマンドのマニュアル にも説明されています（toggle crlf の説明部分）。\n通常、何らかの telnet クライアントを使用して接続している場合、普通に Enter キーを押せば現在のモードに従って適切なリターンコードが送られるので、この点を意識する必要は特に無いのだと思いますが、自作のスクリ...",
          "link": "https://zenn.dev/bugph0bia/articles/e53198bb384cb8",
          "publishedOn": "2022-10-23T13:32:45.000Z",
          "wordCount": 368,
          "title": "telnet 接続中のリターンコードにご注意",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l-LfTFuv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bugph0bia%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:telnet%2520%25E6%258E%25A5%25E7%25B6%259A%25E4%25B8%25AD%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2581%2594%25E6%25B3%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xQWlxYkhjeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3M2MxZWE0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l-LfTFuv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bugph0bia%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:telnet%2520%25E6%258E%25A5%25E7%25B6%259A%25E4%25B8%25AD%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2581%2594%25E6%25B3%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xQWlxYkhjeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3M2MxZWE0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/turtleeen/articles/3ecc77780f5bfb",
          "author": "turtleeen",
          "description": "症状\nUbuntuでPython3, Pygameを使って音が出なかった\n以下のようなエラーが出ていた\nXDG_RUNTIME_DIR (/usr/lib/) is not owned by us (uid 1000), but by uid 0! (This could e.g. happen if you try to connect to a non-root PulseAudio as a root user, over the native protocol. Don't do that.)\n\n\n 解決法\nhttps://stackoverflow.com/question...",
          "link": "https://zenn.dev/turtleeen/articles/3ecc77780f5bfb",
          "publishedOn": "2022-10-23T13:31:10.000Z",
          "wordCount": 176,
          "title": "UbuntuでPython・Pygameを使って音が出せない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gKiGbMlu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:turtleeen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ubuntu%25E3%2581%25A7Python%25E3%2583%25BBPygame%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%259F%25B3%25E3%2581%258C%25E5%2587%25BA%25E3%2581%259B%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkFKZmh0UW1xUkJ0Rk96akNfeUJwRURvRkRaeWp0WFpTRWVManE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gKiGbMlu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:turtleeen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ubuntu%25E3%2581%25A7Python%25E3%2583%25BBPygame%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%259F%25B3%25E3%2581%258C%25E5%2587%25BA%25E3%2581%259B%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkFKZmh0UW1xUkJ0Rk96akNfeUJwRURvRkRaeWp0WFpTRWVManE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/9fc582e1ee7c8d",
          "author": "banananeko",
          "description": "準備\nまず初めにtkinter\nをimportします\n import tkinter as tk\n次にbuttonを表示するためのWindowを作成します\n import tkinter as tk\n root = tk.Tk()\nこれで準備は終了です\n\n コードを書こう！\nではコードを書いていこうと思います\nボタンを作るには\nボタン名　= tk.Button(表示数Window名, text=\"表示するテキスト, command = ボタンが押されたとき実行する関数名).pack\nとすればボタンを作成することができます\n\n 例\n import tkinter as tk\n \n de...",
          "link": "https://zenn.dev/banananeko/articles/9fc582e1ee7c8d",
          "publishedOn": "2022-10-23T11:41:58.000Z",
          "wordCount": 260,
          "title": "tkinterのbuttonを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1hkiopQx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:tkinter%25E3%2581%25AEbutton%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1hkiopQx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:tkinter%25E3%2581%25AEbutton%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/b6708032855a9c",
          "author": "osn_Lofi",
          "description": "BERTすごいですね。\n \nBERTモデルは、2018年にGoogle社が開発し、自然言語処理の世界でブレークスルーをつくったと言われています。\nBERTはGLUEという英語の言語理解を評価するタスクにおいて、当時の記録を一気に塗り替えました。また、Google検索においてもBERTを導入したことにより、飛躍的に精度が上がりました。\n \nこんな素晴らしいBERTですが、初心者が一発で理解するのは少し大変な印象をもっています。\nそこで、BERTを初めて扱う方に向けて、以下の書籍を参考にしながら、基本的なコードの書き方と、それぞれのコードが具体的にどのような処理を行っているのかを丁寧に解説し...",
          "link": "https://zenn.dev/robes/articles/b6708032855a9c",
          "publishedOn": "2022-10-23T08:58:05.000Z",
          "wordCount": 620,
          "title": "【初心者向け】BERTのtokenizerについて理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Es2DDvSP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591BERT%25E3%2581%25AEtokenizer%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Es2DDvSP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591BERT%25E3%2581%25AEtokenizer%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kuru_teo/articles/507eeab4cf9080",
          "author": "kuruteo",
          "description": "mayaで複数シーンに対し一括で処理したい...。自分の作成したツールを色んなデータでテストしたい...ってとき一度はあるかと思います。\n今回は複数のmaya・FBXデータに対し特定の処理を行うツールを作ってみました。\nhttps://github.com/Kuru-teo/PythonCollection/tree/master/ScriptLoopCheck\n\n 【できること】\n複数のMayaBinaryもしくはFBXデータを一括で読み込み、特定の処理を行います。処理したデータとログファイルが保存されます。元データの別名保存です。\n\n 【事前準備】\n\nmm_script_loopCh...",
          "link": "https://zenn.dev/kuru_teo/articles/507eeab4cf9080",
          "publishedOn": "2022-10-23T07:17:16.000Z",
          "wordCount": 148,
          "title": "【MAYA】複数のmb・FBXデータに対し特定の処理を行うツール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7f-MSV0L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kuruteo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590MAYA%25E3%2580%2591%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEmb%25E3%2583%25BBFBX%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2597%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2paTVRScFFDTU5JemF4LThWZGl3bHlJSFNydDBIc2xzQUE0UjdkMXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7f-MSV0L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kuruteo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590MAYA%25E3%2580%2591%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEmb%25E3%2583%25BBFBX%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2597%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2paTVRScFFDTU5JemF4LThWZGl3bHlJSFNydDBIc2xzQUE0UjdkMXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/3582deda168f90",
          "author": "よしだ",
          "description": "https://mc-stan.org/cmdstanpy/installation.html\n\n CmdStanPy\npythonでStanを行う際はpystanなどがありますが、最近は速度の面からCmdStanPyが注目されつつあるため、CmdStanPyを使用して解析を行いたいと思います。\n\n インストール\n\n CmdStanPyのインストール\n今回はPoetryでインストールしました。\n\npyproject.toml\n[tool.poetry]\nname = \"bayesianstatistics\"\nversion = \"0.1.0\"\ndescription = \"\"\nautho...",
          "link": "https://zenn.dev/yoshida0312/articles/3582deda168f90",
          "publishedOn": "2022-10-23T07:15:19.000Z",
          "wordCount": 308,
          "title": "cmdstanpy : インストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3u3aathD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3u3aathD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/momiji777/articles/2cc0a368317c2f",
          "author": "momiji777",
          "description": "はじめに\n先日OpenAIから公開された多言語音声認識を行うことができるマルチタスクモデルであるWhisperを利用して音声データから音声認識、言語識別、翻訳を検証してみました。\n\n whispaerのインストール\npip install git+https://github.com/openai/whisper.git\n\n whisperを読み込みモデルをダウンロード\nimport whisper\nmodel = whisper.load_model(\"large\")\n動画内では、「large」モデルを利用しましたが、様々なモデルが存在します。\n\n\n 音声認識\nresult = m...",
          "link": "https://zenn.dev/momiji777/articles/2cc0a368317c2f",
          "publishedOn": "2022-10-23T04:46:08.000Z",
          "wordCount": 143,
          "title": "whisperを利用して音声データから音声抽出翻訳する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7K74cJ0k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:whisper%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E9%259F%25B3%25E5%25A3%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E5%25A3%25B0%25E6%258A%25BD%25E5%2587%25BA%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7K74cJ0k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:whisper%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E9%259F%25B3%25E5%25A3%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E5%25A3%25B0%25E6%258A%25BD%25E5%2587%25BA%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/b0542824ec61a6",
          "author": "osn_Lofi",
          "description": "はじめに\nGoogleColaboratory（Googleコラボ）使ってますか。\nGoogleコラボは、Googleアカウントさえあれば、簡単にPythonの実行環境を構築できるうえに、GPUも無料で使えて、最強のサービスだと思います。\n私自身、Pythonは、Googleコラボで実行していますが、これまで、ブラウザを操作するSelenium　はGoogleコラボでは「できない」と思い込んでいました。\n今回、GoogleコラボでもSeleniumが扱えることを知ったので、その方法について、ご紹介したいと思います。\nAnacondaやVS-codeよりずっと簡単にSeleniumを扱...",
          "link": "https://zenn.dev/robes/articles/b0542824ec61a6",
          "publishedOn": "2022-10-23T04:45:56.000Z",
          "wordCount": 624,
          "title": "GoogleColaboratoryでseleniumを使ってスクレイピングする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xuCL4lS8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GoogleColaboratory%25E3%2581%25A7selenium%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xuCL4lS8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GoogleColaboratory%25E3%2581%25A7selenium%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kwashizzz/articles/python-class-load-from-setting",
          "author": "わっしー",
          "description": "MMDetectionやEasyCVでは、データ処理のパイプラインを設定ファイルに書くことで、処理の内容、順序を定義することができます。\n例えば、データ読み込み後の処理パイプラインは、以下のように書かれています。\n\n EasyCV/blob/master/configs/detection/common/dataset/autoaug_coco_detection.py\ntrain_pipeline = [\n    dict(type='MMRandomFlip', flip_ratio=0.5),\n    dict(type='MMNormalize', **img_norm_cfg)...",
          "link": "https://zenn.dev/kwashizzz/articles/python-class-load-from-setting",
          "publishedOn": "2022-10-23T04:03:02.000Z",
          "wordCount": 1895,
          "title": "Python 設定ファイルを用いて処理を呼び出す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tinMl6f_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tinMl6f_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fastriver/articles/wt901blecl_change_settings",
          "author": "fastriver",
          "description": "WitMotionのWT901BLECLをBLEで接続したときに、設定をいじったり他のデータを取る方法を考えます。\nBLE接続をする方法はこちら:\nhttps://zenn.dev/fastriver/articles/wt901blecl_read_data\n\n 設定を送信する場所\n設定の変更や指示などは、あるCharacteristicにデータを書き込むことで実現できます。\nWT901BLECLの持つCharacteristic一覧はこちらから入手できることがわかっています。\nその中でnotifyと同じServiceに含まれwriteコマンドを持つもの、つまり0000ffe9で始まる...",
          "link": "https://zenn.dev/fastriver/articles/wt901blecl_change_settings",
          "publishedOn": "2022-10-23T02:40:21.000Z",
          "wordCount": 2685,
          "title": "WT901BLECLにBLE接続して設定をいじる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LNd86YJe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:fastriver%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:WT901BLECL%25E3%2581%25ABBLE%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2597%25E3%2581%25A6%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jUHhSVjlZei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3OTZiYTczZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LNd86YJe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:fastriver%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:WT901BLECL%25E3%2581%25ABBLE%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2597%25E3%2581%25A6%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jUHhSVjlZei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3OTZiYTczZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/ce29b02ac40226",
          "author": "osn_Lofi",
          "description": "PythonもしくはLinuxで、複数zipファイルを解凍する方法のご紹介です。\ncontentディレクトリ配下に複数zipファイルがあるとします。\n解凍後にzipファイルを格納する各ディレクトリの名称は、解凍前のzipファイルの名称と同じにします。\n\n 解凍前\n<content>\n   ├── S100OCJ8.zip \n   ├── S100OBWX.zip\n   ├── S100O98X.zip\n   ├── S100OLCJ.zip\n\n 解凍後\n<content>\n   ├── S100OCJ8\n   ├── S100OBWX\n   ├── S100O98...",
          "link": "https://zenn.dev/robes/articles/ce29b02ac40226",
          "publishedOn": "2022-10-23T01:29:58.000Z",
          "wordCount": 266,
          "title": "【Python】【Linux】複数のzipファイルを解凍する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aGxr8SR2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2580%2590Linux%25E3%2580%2591%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEzip%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25A7%25A3%25E5%2587%258D%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aGxr8SR2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2580%2590Linux%25E3%2580%2591%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEzip%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25A7%25A3%25E5%2587%258D%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zgw426/articles/baabeec88900b1",
          "author": "suo-takefumi",
          "description": "Windowsサービスを監視したい\nEC2(Windows)のWindowsサービスをCloudWatchで監視する仕組みを作りました。\n現在のCloudWatch Agentはプロセス監視はできますが、サービス監視はできないようです。\nサービスに紐づくプロセスを監視する方法もありますが、プロセスの起動数などの仕様がわからないと適切な監視設定ができません。\nそこで、サービスの状態はPowerShellコマンドで取得し、その結果をもとにCloudWatchのカスタムメトリクスとしてCloudWatchに出力することにしました。\n\n 構成\n構成はこのようになります。\n\nWindows S...",
          "link": "https://zenn.dev/zgw426/articles/baabeec88900b1",
          "publishedOn": "2022-10-23T00:43:20.000Z",
          "wordCount": 1985,
          "title": "EC2(Windows)のサービスをCloudWatchで監視したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZfjSAhx9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:suo-takefumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:EC2%2528Windows%2529%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592CloudWatch%25E3%2581%25A7%25E7%259B%25A3%25E8%25A6%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycHpTZF9NNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1M2E2OTUzMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZfjSAhx9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:suo-takefumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:EC2%2528Windows%2529%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592CloudWatch%25E3%2581%25A7%25E7%259B%25A3%25E8%25A6%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycHpTZF9NNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1M2E2OTUzMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/harukaze/articles/946e434f9c4c8e",
          "author": "haru01",
          "description": "皆様は曜日効果についてご存知でしょうか？\n曜日効果とは、\"特定の曜日の収益率が他の曜日よりも低く、または高くなりやすい現象のこと。\"とありますが、本当に存在するのでしょうか？\n今現在も存在しているかもしれませんし、していないかもしれません。\nしていなくても、これから曜日効果が発生する可能性もあります。\nそこで、この記事ではビットコインには曜日効果が存在しているか？を調査するためのプログラム（Python3）を提供します。\n実際にこちらを参考に行った取引および記事のプログラムを利用したことによるいかなる損害も作者は一切の責任を負いません。自己の責任の上で使用してください。\nプログラムの実行...",
          "link": "https://zenn.dev/harukaze/articles/946e434f9c4c8e",
          "publishedOn": "2022-10-22T13:58:57.000Z",
          "wordCount": 1440,
          "title": "ビットコインの曜日効果を調べるプログラム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OadzS3-y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:haru01%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E6%259B%259C%25E6%2597%25A5%25E5%258A%25B9%25E6%259E%259C%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lzRVdJTWd6bG1ORnZ1elZhUjdWeTVMdm91MFNCejNhd3NpcHc5PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OadzS3-y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:haru01%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E6%259B%259C%25E6%2597%25A5%25E5%258A%25B9%25E6%259E%259C%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lzRVdJTWd6bG1ORnZ1elZhUjdWeTVMdm91MFNCejNhd3NpcHc5PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/harukaze/articles/c10101b39bd3e0",
          "author": "haru01",
          "description": "よくちょっとしたファイルをColaboratoryで集計してドライブに入出力したいときがあるのでメモ。Pythonを使用。\n\n ドライブのマウント\n実行後、ドライブにアクセス許可をもとめるダイアログがでるので許可する。\nfrom google.colab import drive\ndrive.mount('/content/drive')\n\n CSVファイルの読み込み\nあらかじめドライブにおいておいたCSVファイルをpandasで読み込む。\nパス、ファイル名は適宜変更する。\nimport pandas as pd\n\nbase_path = r\"/content/drive/test_fo...",
          "link": "https://zenn.dev/harukaze/articles/c10101b39bd3e0",
          "publishedOn": "2022-10-22T08:50:50.000Z",
          "wordCount": 285,
          "title": "Google Colaboratoryのファイル入出力方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CKYwgAoa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:haru01%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Colaboratory%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lzRVdJTWd6bG1ORnZ1elZhUjdWeTVMdm91MFNCejNhd3NpcHc5PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CKYwgAoa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:haru01%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Colaboratory%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lzRVdJTWd6bG1ORnZ1elZhUjdWeTVMdm91MFNCejNhd3NpcHc5PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/b5e099fb923262",
          "author": "banananeko",
          "description": "tkinterのimport\n import tkinter as tk\n!\nas tk とは　tkinterを略してtkと呼ぶ　　\nということを定義するものです。\n\n\n\n Window表示\nWindowの名前　= tk.Tk()\nとすることでWindowを作れます。\n例\n import tkinter as tk\n root = tk.Tk()\n\n\n Windowにタイトルを設定\nWindow名.title(タイトル名)\nのようにするとWindowのタイトルを設定できます。。\n例\n import tkinter as tk\n root = tk.Tk()\n root.title(\"...",
          "link": "https://zenn.dev/banananeko/articles/b5e099fb923262",
          "publishedOn": "2022-10-22T08:30:11.000Z",
          "wordCount": 311,
          "title": "python tkinterのWindow表示",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9MO0QTl9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520tkinter%25E3%2581%25AEWindow%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9MO0QTl9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520tkinter%25E3%2581%25AEWindow%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/573cc42382a1ea",
          "author": "banananeko",
          "description": "プログラムの流れ\n\nおみくじ　と出力する\n3秒待つ\nランダムな数を指定する\nif分岐でランダムな数に対するものを当てはめる\n\n\n コードを書く\nfrom time import sleep\nfrom random import randint\nprint(\"おみくじ\")\nprint(\"けっかは...\", end=\" \")\nsleep(3)\na = randint(1, 10)\nif a == 10:\n    print(\"大吉\")\nif a < 10 and a > 7:\n    print(\"中吉\")\nif a < 7 and a > 1:\n    prin...",
          "link": "https://zenn.dev/banananeko/articles/573cc42382a1ea",
          "publishedOn": "2022-10-22T06:03:57.000Z",
          "wordCount": 279,
          "title": "pythonでおみくじを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oFsvp9zC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A7%25E3%2581%258A%25E3%2581%25BF%25E3%2581%258F%25E3%2581%2598%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oFsvp9zC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A7%25E3%2581%258A%25E3%2581%25BF%25E3%2581%258F%25E3%2581%2598%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mory22k/articles/c9b1c14c3616a3",
          "author": "mory22k",
          "description": "ニューラルネットワークと混合整数線形計画法を用いたブラックボックス最適化 (NN+MILP) が 完全に馬鹿なアルゴリズムではないこと を確認します。\n\n 元論文\nPapalexopoulos, Theodore P., Christian Tjandraatmadja, Ross Anderson, Juan Pablo Vielma, and David Belanger. “Constrained Discrete Black-Box Optimization Using Mixed-Integer Programming.” In Proceedings of the 39th ...",
          "link": "https://zenn.dev/mory22k/articles/c9b1c14c3616a3",
          "publishedOn": "2022-10-21T10:31:56.000Z",
          "wordCount": 5524,
          "title": "[NN+MILP] ランダム多層パーセプトロンを用いた検証",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gvrFEeGD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BNN%252BMILP%255D%2520%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E5%25A4%259A%25E5%25B1%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BB%25E3%2583%2597%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gvrFEeGD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BNN%252BMILP%255D%2520%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E5%25A4%259A%25E5%25B1%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BB%25E3%2583%2597%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yuya_sato/articles/cf32c1248db9ef",
          "author": "Yuya Sato / 佐藤優矢",
          "description": "A/Bテスト投入前にはオフラインテストをする\nNetflixなどの企業では、レコメンドエンジンなどのA/Bテスト前にオフラインテストにより実際に顧客に試す前にコンバージョンレートなどの点で効果がある施作なのかどうかを判断するということが行われている。\n\n 現状のオフラインテストの手法\n大きく分けて２つの手法がある。\n一つは古典的な offline replay という手法で、ランダムな要素をユーザーに提示して、そこで実際に発生した遷移を正解データとして用いる手法である。Netflix などが採用しているようだ。\nhttps://arxiv.org/abs/1003.5956\nこの手法...",
          "link": "https://zenn.dev/yuya_sato/articles/cf32c1248db9ef",
          "publishedOn": "2022-10-21T10:16:26.000Z",
          "wordCount": 160,
          "title": "A/Bテスト前に行うオフラインテストは、doubly robust よりシンプルな手法で十分なのではという提案",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4fy3FMeq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Sato%2520%252F%2520%25E4%25BD%2590%25E8%2597%25A4%25E5%2584%25AA%25E7%259F%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:A%252FB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E5%2589%258D%25E3%2581%25AB%25E8%25A1%258C%25E3%2581%2586%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AF%25E3%2580%2581doubly%2520robust%2520%25E3%2582%2588%25E3%2582%258A%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AA%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25A7%25E5%258D%2581%25E5%2588%2586%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E6%258F%2590%25E6%25A1%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MR3lENnllVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYWZhMDAyOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4fy3FMeq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Sato%2520%252F%2520%25E4%25BD%2590%25E8%2597%25A4%25E5%2584%25AA%25E7%259F%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:A%252FB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E5%2589%258D%25E3%2581%25AB%25E8%25A1%258C%25E3%2581%2586%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AF%25E3%2580%2581doubly%2520robust%2520%25E3%2582%2588%25E3%2582%258A%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AA%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25A7%25E5%258D%2581%25E5%2588%2586%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E6%258F%2590%25E6%25A1%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MR3lENnllVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYWZhMDAyOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kumasun/articles/5fa34c7029d1da",
          "author": "Kumasun Morino",
          "description": "はじめに\nOutlookで受信したメールのうち、特定のメーリングリスト宛に誰からどのくらいの頻度でメールが来ているか調べて欲しいと言われた。\n調査用データとして、過去数年分のメールデータ（Outlook .msg形式）数千件が提供された。\nOutlookに取り込んでルールで振り分けを試みたが、メーリングリストに投稿したユーザーで振り分けることができないことが分かった。\n（やり方が悪いのかもしれないが…）\nmsgファイルを1通ごと開いて調べるのは非現実的なので、Pythonの力を借りて自動化した。\n\n コード\n\n 実証実験コード\n「.msg」形式を読むためのパッケージは複数存在するが、...",
          "link": "https://zenn.dev/kumasun/articles/5fa34c7029d1da",
          "publishedOn": "2022-10-21T00:19:10.000Z",
          "wordCount": 722,
          "title": "PythonでMS Outlookのmsgファイルを読む（msg_parser）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5fg_HuIi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kumasun%2520Morino%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7MS%2520Outlook%25E3%2581%25AEmsg%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%25EF%25BC%2588msg_parser%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwMUFRUjNkVVAzSExWb3pNOUk0RnBjT2VFa1JDcGV0TVFOY2hYd0E9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5fg_HuIi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kumasun%2520Morino%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7MS%2520Outlook%25E3%2581%25AEmsg%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%25EF%25BC%2588msg_parser%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwMUFRUjNkVVAzSExWb3pNOUk0RnBjT2VFa1JDcGV0TVFOY2hYd0E9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/libertym/articles/84b41b0229041e",
          "author": "Libertym",
          "description": "記事について\n一部単語の意味や表現が正確でない可能性がありますがご了承ください。\n基本的に自分の環境の言語は英語です。\nWindowsとIntellij ideaでPythonの環境構築がうまくできない人をターゲットにしています。\n\n SDKが設定できない問題が発生\nWindows上でIntellij ideaからpoetryで新規プロジェクトを作成しようとするとSDKが無効(SDK seems invalid)というエラーが発生して正常に設定できませんでした。(VScodeなら問題なし？)\n\n 原因調査\nIntellij idea上部の「help > show log in...",
          "link": "https://zenn.dev/libertym/articles/84b41b0229041e",
          "publishedOn": "2022-10-20T12:04:55.000Z",
          "wordCount": 165,
          "title": "Python + IntellijのSDK seems invalidエラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NSEF2Shr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Libertym%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%252B%2520Intellij%25E3%2581%25AESDK%2520seems%2520invalid%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29aME44ZG9IOXcxSUllRmR0QVEzQ3kyZW1RdldpNlpxUWFNajR5PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NSEF2Shr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Libertym%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%252B%2520Intellij%25E3%2581%25AESDK%2520seems%2520invalid%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29aME44ZG9IOXcxSUllRmR0QVEzQ3kyZW1RdldpNlpxUWFNajR5PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kanaotto/articles/a0d6e4a661fb56",
          "author": "かなおっと",
          "description": "poetryとVSCodeで仮想環境の構築（Windows10）\n\n 1. poetryとは\nPoetryはPythonのパッケージマネージャの一つです。\n次のようなことができます。\n\nパッケージ管理ファイルの生成・変更\nインストールされているパッケージのアップデート\nプロジェクトごとの仮想環境のセットアップ\n\nなどなど...\n\n 2. インストール\n\n 基本\n\n - Python のセットアップ\nPoetryのインストールにPythonが必要なので既に入っている前提ですが、一応。\nPython JapanのサイトからWindows版Pythonをインストール\n\n\nhttps://w...",
          "link": "https://zenn.dev/kanaotto/articles/a0d6e4a661fb56",
          "publishedOn": "2022-10-20T11:07:53.000Z",
          "wordCount": 587,
          "title": "poetryとVSCodeで仮想環境の構築（Windows10）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TOya1JVE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%25AA%25E3%2581%258A%25E3%2581%25A3%25E3%2581%25A8%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:poetry%25E3%2581%25A8VSCode%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%2588Windows10%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5Q1Zka1FDZy1pNGx6RnMzc2VleU5UU1dxbENmRmRaWlFvZXo0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TOya1JVE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%25AA%25E3%2581%258A%25E3%2581%25A3%25E3%2581%25A8%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:poetry%25E3%2581%25A8VSCode%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%2588Windows10%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5Q1Zka1FDZy1pNGx6RnMzc2VleU5UU1dxbENmRmRaWlFvZXo0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ymiz/articles/c25dcddfedd7c3",
          "author": "ymiz",
          "description": "問題\n\npytestを使ってテストしている\nある条件の場合のテストスイートをまとめたい\n\njestでいうところの describe のようなことをしたい\n\nhttps://jestjs.io/ja/docs/api#describename-fn\n\n\n\n\n\n\n 対応\nclassでグループ化する。\nドキュメントは https://docs.pytest.org/en/7.1.x/getting-started.html#group-multiple-tests-in-a-class\nclass Test_指標が閾値Aを超えた場合:\n    def test_在庫を追加する(self):...",
          "link": "https://zenn.dev/ymiz/articles/c25dcddfedd7c3",
          "publishedOn": "2022-10-20T11:02:03.000Z",
          "wordCount": 218,
          "title": "pytestでテストをグループ化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XTidetun--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymiz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:pytest%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XTidetun--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymiz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:pytest%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/penguincabinet/articles/d765da03bf66f5",
          "author": "PenguinCabinet",
          "description": "はじめに\n近年FaaSが流行しています。\n僕も試してみたいと考えていたため、今回FizzBuzz判定APIを作ってみようと思います。\n\n 完成品\nhttps://github.com/PenguinCabinet/FizzBuzz_Google_Cloud_Functions\n\n 環境構築\ngcloud CLIを使用していますので、インストールしてください。\nhttps://cloud.google.com/sdk/docs/install?hl=ja\n念のため、その他のバージョン環境。\nOS:Windows 11\n言語処理系:Python 3.10.5\n\nGoogle Cloud ...",
          "link": "https://zenn.dev/penguincabinet/articles/d765da03bf66f5",
          "publishedOn": "2022-10-20T05:12:52.000Z",
          "wordCount": 421,
          "title": "Google Cloud FunctionsでFizzBuzzを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qmB3nO8A--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:PenguinCabinet%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cloud%2520Functions%25E3%2581%25A7FizzBuzz%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XVjB5ZTJUOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3NzYzNDVhNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qmB3nO8A--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:PenguinCabinet%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cloud%2520Functions%25E3%2581%25A7FizzBuzz%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XVjB5ZTJUOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3NzYzNDVhNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/h_kishimoto/articles/5f0a6639c0fd8d",
          "author": "h_kishimoto",
          "description": "Pythonでコントロールリグを云々する時のメモです。\n\n\n アセットの取得\nプロジェクト内のアセットを取得するとき\nunreal.EditorAssetLibrary.load_asset( asset_path )\nasset_path にはいろいろな書き方があてはめられます。\nasset_path = \"/Script/ControlRigDeveloper.ControlRigBlueprint'/Game/Characters/Mannequins/Rigs/CR_Mannequin_Body.CR_Mannequin_Body'\"\nasset_path = \"/Game/Ch...",
          "link": "https://zenn.dev/h_kishimoto/articles/5f0a6639c0fd8d",
          "publishedOn": "2022-10-19T17:36:15.000Z",
          "wordCount": 1336,
          "title": "[UE5] Control Rig をPythonから使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BlDBagQY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:h_kishimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BUE5%255D%2520Control%2520Rig%2520%25E3%2582%2592Python%25E3%2581%258B%25E3%2582%2589%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKemNZZE9FRk44LU56YWc2ekdNQTltMXNQVzItVFBjNEhoVTg1cmU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BlDBagQY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:h_kishimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BUE5%255D%2520Control%2520Rig%2520%25E3%2582%2592Python%25E3%2581%258B%25E3%2582%2589%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKemNZZE9FRk44LU56YWc2ekdNQTltMXNQVzItVFBjNEhoVTg1cmU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tasada038/articles/5d8ba66aa34b85",
          "author": "Takumi Asada",
          "description": "海洋ロボコンをやっている人です。\n今回は、pythonでROS2ノードをつくるときに、別のPythonファイルからクラスや関数をインポートするときの記述方法について知見をまとめておきます。\n経緯としては、pythonで書かれたROS2プログラムに、別のpythonファイルの関数を読み込む方法が記事にまとまっておらず、わからないという意見を頂いたためです。\nなお、本記事はROS2でpythonを使ったプログラムを書く必要性がある方を対象としており、C++でのプログラムで良い場合は依存関係の観点からも、C++での記述が良いと思います。\nこの記事が皆様のお力添えになれば幸いです。\n\n 別のpy...",
          "link": "https://zenn.dev/tasada038/articles/5d8ba66aa34b85",
          "publishedOn": "2022-10-19T16:28:31.000Z",
          "wordCount": 756,
          "title": "ROS2: 別のpythonファイルからインポートしてノードをつくる手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SxhGkIX3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takumi%2520Asada%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ROS2%253A%2520%25E5%2588%25A5%25E3%2581%25AEpython%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS02UlRlclRjeFNkX3dsSDk4WE1LY1dHNDJ3b2ZoR1ZmUWNDdVhlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SxhGkIX3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takumi%2520Asada%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ROS2%253A%2520%25E5%2588%25A5%25E3%2581%25AEpython%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS02UlRlclRjeFNkX3dsSDk4WE1LY1dHNDJ3b2ZoR1ZmUWNDdVhlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/almon/articles/2ba0aed751002b",
          "author": "アルモン",
          "description": "!\nこの記事はPythonとSeleniumの使い方、及び学習用に作成したものであり、自動購入や転売活動を推奨しているわけではありません。また、本プログラムの利用でどのようなトラブル(アカウントのBANや意図しない購入など)が発生したとしても筆者は一切責任を負いません。\n\n\n はじめに\nプロコンが品薄で全く買えません…😭\nこちらの入荷速報アプリによると、特にAmazonではほぼ毎日入荷されているようなのですが、通知直後であってもカートに入れることすらままならない状況が続いています。\nそこで、PythonとSleniumを使い簡単な自動購入プログラムを作ってみたいと思います。\nなお、自分は...",
          "link": "https://zenn.dev/almon/articles/2ba0aed751002b",
          "publishedOn": "2022-10-19T14:20:27.000Z",
          "wordCount": 1473,
          "title": "PythonとSeleniumでAmazon自動購入botを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jM0UuwKl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%25A2%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A8Selenium%25E3%2581%25A7Amazon%25E8%2587%25AA%25E5%258B%2595%25E8%25B3%25BC%25E5%2585%25A5bot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1WbXZLVlRxTS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmYWM3NzMyMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jM0UuwKl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%25A2%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A8Selenium%25E3%2581%25A7Amazon%25E8%2587%25AA%25E5%258B%2595%25E8%25B3%25BC%25E5%2585%25A5bot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1WbXZLVlRxTS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmYWM3NzMyMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taketooon/articles/11e3722ad3aadb",
          "author": "taketooon",
          "description": "introduction\npythonでグラフを書こう！おら！pyplotをつかうぞおおお！ax?fig?しらねぇ！plotメソッドで適当に出力！！ってやってたら、グラフの書き方一生わからずに毎回適当に調べて適当にうまくいって終わるだけになってた。それじゃもったいないので体系化します。\n\n plotするためのライブラリ-matplotlib\n参考文献には、matplotlibはPythonで静的なプロットやアニメーション、インタラクティブな可視化を実現するための包括的なライブラリであると書いている。まぁ要するにグラフを書く時にはこのライブラリが必要ですねって話。ライブラリが何かわかん...",
          "link": "https://zenn.dev/taketooon/articles/11e3722ad3aadb",
          "publishedOn": "2022-10-19T12:28:07.000Z",
          "wordCount": 1878,
          "title": "pythonでグラフを書こう-(基礎)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a-2bNwly--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2593%25E3%2581%2586-%2528%25E5%259F%25BA%25E7%25A4%258E%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a-2bNwly--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2593%25E3%2581%2586-%2528%25E5%259F%25BA%25E7%25A4%258E%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yuya_sato/articles/06af75f16f446a",
          "author": "Yuya Sato / 佐藤優矢",
          "description": "バグ\npython の Big Query ラッパーでレコードをインサートしようとしたところ、\nField has changed type from STRING to INTEGER\nと言われてインサートできなかった。\n\n 調べたこと\nカラムは定義、実データ共に STRING であり、INTEGER のデータは一件もなかった。\npip のバージョンを最新にしろと言っている人がいたので最新にしたが状況は変わらなかった。\n\n 解決法\nBig Query へインサートする際、 schema を定義してからインサートすることができる。\n具体的には、\nfilename = \"test.cs...",
          "link": "https://zenn.dev/yuya_sato/articles/06af75f16f446a",
          "publishedOn": "2022-10-19T09:20:05.000Z",
          "wordCount": 365,
          "title": "Big Query のラッパーでインサートする際のバグと対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c_dr5QAo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Sato%2520%252F%2520%25E4%25BD%2590%25E8%2597%25A4%25E5%2584%25AA%25E7%259F%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Big%2520Query%2520%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2590%25E3%2582%25B0%25E3%2581%25A8%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MR3lENnllVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYWZhMDAyOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c_dr5QAo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Sato%2520%252F%2520%25E4%25BD%2590%25E8%2597%25A4%25E5%2584%25AA%25E7%259F%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Big%2520Query%2520%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2590%25E3%2582%25B0%25E3%2581%25A8%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MR3lENnllVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYWZhMDAyOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kazuhito/articles/dbe6bbf8ce3ef2",
          "author": "kazuhito",
          "description": "ちょいちょいググったり、自前実装したりするのですが、、、\nアレやコレや試した感じ、以下のクラスを作るのが一番お手軽な気がする👻\nclass DictDotNotation(dict): \n    def __init__(self, *args, **kwargs): \n        super().__init__(*args, **kwargs) \n        self.__dict__ = self \n\n以下、使い方メモ👀\n\n 新規作成\ndict_sample = DictDotNotation()\nprint(dict_sample)\n{}\n\n 値追加\nドットアクセスでの追...",
          "link": "https://zenn.dev/kazuhito/articles/dbe6bbf8ce3ef2",
          "publishedOn": "2022-10-19T06:24:30.000Z",
          "wordCount": 937,
          "title": "Pythonの辞書型(dict)でドットアクセス(dot notation)するメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wUX6BmTA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuhito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%2528dict%2529%25E3%2581%25A7%25E3%2583%2589%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%2528dot%2520notation%2529%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wUX6BmTA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuhito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%2528dict%2529%25E3%2581%25A7%25E3%2583%2589%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%2528dot%2520notation%2529%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/krap/articles/606327a74d5eb4",
          "author": "倉嶋将矢",
          "description": "seleniumを使用していて出会ったエラーの対処法です。\n【環境】\n\nMacBook Air (M1, 2020)\npython 3.9.9\nselenium == 4.5.0\nchromedriver-binary == 105.0.5195.52\nwebdriver_manager == 3.8.3\n\n\n エラー内容\nValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/106.0.5249.61/chromedriver_mac64_m1.zip\nこんなドライバ...",
          "link": "https://zenn.dev/krap/articles/606327a74d5eb4",
          "publishedOn": "2022-10-19T05:48:06.000Z",
          "wordCount": 1588,
          "title": "[m1Mac]Seleniumのドライバーのエラー|ValueError: There is no such driver by url",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WJKwzAxP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%2580%2589%25E5%25B6%258B%25E5%25B0%2586%25E7%259F%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%255Bm1Mac%255DSelenium%25E3%2581%25AE%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%257CValueError%253A%2520There%2520is%2520no%2520such%2520driver%2520by%2520url%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xdDVQejY5MS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhZjRiYjczMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WJKwzAxP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%2580%2589%25E5%25B6%258B%25E5%25B0%2586%25E7%259F%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%255Bm1Mac%255DSelenium%25E3%2581%25AE%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%257CValueError%253A%2520There%2520is%2520no%2520such%2520driver%2520by%2520url%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xdDVQejY5MS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhZjRiYjczMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/awesome_python_github_repo",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、学習・開発でPythonを使うプログラマーが必ず確認するべきGitHubリポジトリを10個紹介する。本記事の対象は主に以下の通り。\n\n実務でPythonを使っているプログラマー\nPythonの情報収集に困っている人\nPythonの学習・開発の効率をアップさせたい人\nPythonのフレームワーク・ライブラリを確認しておきたい初心者\n\nPythonは1991年にリリースされてから今年で30年以上も経過している歴史のあるプログラミング言語なので、情報量が非常に多くどのように開発を進めればよいかわからない人も少なくないだろう。\nそこで、本記事では個人の独断と偏見で学...",
          "link": "https://zenn.dev/nameless_sn/articles/awesome_python_github_repo",
          "publishedOn": "2022-10-19T00:15:12.000Z",
          "wordCount": 479,
          "title": "【必見】Pythonプログラマーが必ず確認するべきGitHubリポジトリ 10選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tKTOzGcK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nukumizu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%25BF%2585%25E8%25A6%258B%25E3%2580%2591Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2583%25BC%25E3%2581%258C%25E5%25BF%2585%25E3%2581%259A%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258DGitHub%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%252010%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tKTOzGcK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nukumizu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%25BF%2585%25E8%25A6%258B%25E3%2580%2591Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2583%25BC%25E3%2581%258C%25E5%25BF%2585%25E3%2581%259A%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258DGitHub%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%252010%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qsvm-blueqat",
          "author": "derwind",
          "description": "目的\n量子カーネル SVM で遊んでみる — Qiskit の内容を更に Blueqat でも実装してみようというもの。\n\n データセット\n毎回毎回同じであるが前回と同様に以下のデータセットを使いたい。\n\n前回と同様に以下で訓練セット (train_data, train_labels) とテストセット (test_data, test_labels) が準備されているとする。\nfrom sklearn.datasets import make_circles\n\nX, Y = make_circles(n_samples=200, noise=0.05, factor=0.4)\n\nA...",
          "link": "https://zenn.dev/derwind/articles/dwd-qsvm-blueqat",
          "publishedOn": "2022-10-18T17:00:19.000Z",
          "wordCount": 2162,
          "title": "量子カーネル SVM で遊んでみる — Blueqat",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hmBiXsIC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%2520SVM%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25E2%2580%2594%2520Blueqat%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hmBiXsIC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%2520SVM%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25E2%2580%2594%2520Blueqat%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/f003e73658ce6f",
          "author": "ShunDev",
          "description": "概要\nPythonのライブラリであるStreamlitを用いて麻雀サークル向けのアプリケーションを作成しました. その経緯やStreamlitの特徴, アプリケーションを作成して感じたこと等をまとめています.\n\n 作成した経緯\n私が運営している麻雀サークルには以前から点数計算が苦手な人がある程度の人数いました. そこで以前にLineBotを作成したのですが, デプロイ先のHerokuが無料サービスを終了するとのことで, デプロイ先を変えるか, 別のアプリケーションをつくるかの選択を迫られていました.\n自分の考えを整理してみたところ以下が要件でした.\n\n時間の都合上HTML/CSS J...",
          "link": "https://zenn.dev/shundeveloper/articles/f003e73658ce6f",
          "publishedOn": "2022-10-18T08:10:25.000Z",
          "wordCount": 457,
          "title": "Streamlitのアプリケーションを作った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S0HHQt8K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Streamlit%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S0HHQt8K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Streamlit%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/inunekousapon/books/be6b8817061883",
          "author": "inunekousapion",
          "description": "ChaliceとCDKを使って気軽にサーバーアプリケーションを作成してみませんか。Pythonで本格的にサーバーレスアプリケーションを組もうとしても情報がなかったり、期待通りに動かなかったりしていませんか。\n本書はChaliceとCDKを使ってAWSを制限なく利用する方法についてテーマ別に書いています。もし情報を探して手間取っていたら、本書で解決できるかもしれません。",
          "link": "https://zenn.dev/inunekousapon/books/be6b8817061883",
          "publishedOn": "2022-10-18T07:42:47.000Z",
          "wordCount": 71,
          "title": "[WIP] 仕事で使うためのChalice/CDKガイド",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/akirakido/articles/ff9212c1a30f23",
          "author": "木戸明",
          "description": "2018年ごろ、「データの処理であれば、C#のLinq よりも Pythonの方が2倍速くなる」という記事が公開され、青々な若造な私が絡んじゃったことがありました。\n記録として2018/4/19の記事と2018/4/25の記事をまとめました。\n生暖かい目で読んでいただけますと幸いです。\n\n\n C# の Linq が python の２倍遅い、は嘘\n2018/4/19\nC#でLinqを使うよりPythonの方が2倍速かったのでベンチマークをしてみた\nうん、まあ Linq はそこそこリッチなので、こういう使い方したらそこそこ遅くなるよね。特に GroupBy は遅い。\nでもそんなことより T...",
          "link": "https://zenn.dev/akirakido/articles/ff9212c1a30f23",
          "publishedOn": "2022-10-18T05:24:59.000Z",
          "wordCount": 2309,
          "title": "C# vs Python 実行速度論争",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---Lt15woH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%259C%25A8%25E6%2588%25B8%25E6%2598%258E%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:C%2523%2520vs%2520Python%2520%25E5%25AE%259F%25E8%25A1%258C%25E9%2580%259F%25E5%25BA%25A6%25E8%25AB%2596%25E4%25BA%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---Lt15woH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%259C%25A8%25E6%2588%25B8%25E6%2598%258E%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:C%2523%2520vs%2520Python%2520%25E5%25AE%259F%25E8%25A1%258C%25E9%2580%259F%25E5%25BA%25A6%25E8%25AB%2596%25E4%25BA%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k41531/articles/3ce8f558ae5161",
          "author": "kaisei",
          "description": "f-string(フォーマット済み文字列リテラル)の便利な使い方を知ったので、まとめてみました。\nおそらく一般的な使い方は、\ntext = \"world\"\nprint(f\"hello {text}\")\nhello world\n\n =を使ったデバッグに便利な例\nバージョン3.8で追加された=を使うことで、変数名 = 値という形で文字列を表示できる。\ntext = 'world'\nprint(f\"{text = }\")\ntext = 'world'\n計算もできます。\nprint(f\"{1 + 1 = }\")\n1 + 1 = 2\n関数も使えます。\nprint(f\"{sum([1,2,3]) =...",
          "link": "https://zenn.dev/k41531/articles/3ce8f558ae5161",
          "publishedOn": "2022-10-18T01:55:38.000Z",
          "wordCount": 1051,
          "title": "【Python】f-stringを使いこなして、快適なprintデバッグを",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9lB17cLW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaisei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591f-string%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%25BF%25AB%25E9%2581%25A9%25E3%2581%25AAprint%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dOQ1hOY3JPWXQzaFBqWTkyM255eG8yVkQyczdsNWFfOVlERmxqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9lB17cLW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaisei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591f-string%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%25BF%25AB%25E9%2581%25A9%25E3%2581%25AAprint%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dOQ1hOY3JPWXQzaFBqWTkyM255eG8yVkQyczdsNWFfOVlERmxqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qsvm-qiskit",
          "author": "derwind",
          "description": "目的\nカーネル SVM を眺めてみる で触れたように、Quantum feature maps and kernels を思いっきり劣化させることで、ブラックボックス度を低下させ、toy-problem なデータセットを解かせることで簡単なコンテンツを目指したい。\n\n データセット\n前回と同様に以下のデータセットを使いたい。\n\nこれは前回と同様に以下で訓練セット (train_data, train_labels) とテストセット (test_data, test_labels) が準備されているとする。\nfrom sklearn.datasets import make_circl...",
          "link": "https://zenn.dev/derwind/articles/dwd-qsvm-qiskit",
          "publishedOn": "2022-10-17T17:42:44.000Z",
          "wordCount": 2555,
          "title": "量子カーネル SVM で遊んでみる — Qiskit",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MhnQId9a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%2520SVM%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25E2%2580%2594%2520Qiskit%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MhnQId9a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%2520SVM%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25E2%2580%2594%2520Qiskit%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/koji9412/articles/70e57cd1dd4159",
          "author": "koji9412",
          "description": "AnacondaとかMinicondaとか使わずpipで環境構築した。\n環境確認\nimport torch\nprint(torch.__version__)\nprint(torch.cuda.is_available())\nprint(torch.cuda.device_count())\nprint(torch.version.cuda)\n結果\n$ python a.py\n1.12.1+cu116\nTrue\n1\n11.6\n\n$ python -V\nPython 3.10.8\n\n 参考\nCUDA+cuDNNをインストールしPyTorchでGPUを認識させるまでの手順(Window11)\n\n...",
          "link": "https://zenn.dev/koji9412/articles/70e57cd1dd4159",
          "publishedOn": "2022-10-17T17:10:02.000Z",
          "wordCount": 122,
          "title": "Windows11にPython3.10.8+CUDA11.6+cuDNN8.5+PyTorch1.12.1(GPU版:cu116)環境作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZJbbnhJS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koji9412%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Windows11%25E3%2581%25ABPython3.10.8%252BCUDA11.6%252BcuDNN8.5%252BPyTorch1.12.1%2528GPU%25E7%2589%2588%253Acu116%2529%25E7%2592%25B0%25E5%25A2%2583%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HV2V3ZUE5LS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5MjMwODFmOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZJbbnhJS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koji9412%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Windows11%25E3%2581%25ABPython3.10.8%252BCUDA11.6%252BcuDNN8.5%252BPyTorch1.12.1%2528GPU%25E7%2589%2588%253Acu116%2529%25E7%2592%25B0%25E5%25A2%2583%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HV2V3ZUE5LS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5MjMwODFmOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/o_kai/articles/d51d9025d5e526",
          "author": "o_kai",
          "description": "本投稿では、Pythonを用いて画像にノイズを加えていきます。\n\n 加えるノイズ\n今回実装するノイズは、塩ごまノイズです。\n\n 塩ごまノイズとは?\n塩ごまノイズは、インパルスノイズの確率pの値が0.5の時のノイズである\n\n# ライブラリ読み込み\nimport cv2\nimport numpy as np\nimport random\n\n# ノイズ付与用のクラス\nclass NoiseImage:\n    def __init__(self):\n        self.img = None\n\n    # 画像読み込み\n    def image_read(self, filename, g...",
          "link": "https://zenn.dev/o_kai/articles/d51d9025d5e526",
          "publishedOn": "2022-10-17T16:08:50.000Z",
          "wordCount": 1049,
          "title": "画像にノイズを加える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--atnCgsVR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:o_kai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E3%2583%258E%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E5%258A%25A0%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1YZE54VE5xUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNTk5NDA1MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--atnCgsVR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:o_kai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E3%2583%258E%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E5%258A%25A0%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1YZE54VE5xUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNTk5NDA1MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shotaro_tsuji/articles/38d5c48ca021d5",
          "author": "Shotaro Tsuji",
          "description": "はじめに\nこの記事ではDockerイメージをテストする方法を簡単に模索します。といってもtestinfraやory/dockettestのようなフレームワークを使うわけではなくPythonでテストコードを書いていきます。\n\n Dockerイメージを用意する\nテスト対象のDockerイメージを作成し、テストしたい動作を考え、テストコードの実装方針を決めます。\n\n テスト対象のイメージ\n私が作ったリポジトリhoratos/docker-imagesのcluttexイメージをテスト対象とします。cluttexイメージはtexlive/texliveをベースとしたイメージです。cluttex...",
          "link": "https://zenn.dev/shotaro_tsuji/articles/38d5c48ca021d5",
          "publishedOn": "2022-10-17T12:35:44.000Z",
          "wordCount": 2208,
          "title": "DockerイメージをPythonでテストする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qBRWh9ja--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shotaro%2520Tsuji%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592Python%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hN3AxSnlPYy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNjVhNzMxMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qBRWh9ja--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shotaro%2520Tsuji%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592Python%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hN3AxSnlPYy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNjVhNzMxMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tsuji_u/articles/0db56a35afcbe6",
          "author": "t_u",
          "description": "環境\n\nWindows 11 Pro\n\n21H2\n\n\n\n\n 参考\n\nwindows-11への最新版pythonのインストール\nWindows版Pythonのインストール\n\n\n Pythonのダウンロードとインストール\n\n exeファイルのダウンロード\n公式サイトからexeファイルをダウンロードします。\n\n\n インストール\nダウンロードしたexeファイルをダブルクリックして実行するとwindowが開くので「Install Now」をクリックします。\nまたこれはどちらでもよいですが、パスを通したい場合は「Add python.exe PATH」にチェックを付けます。\n私は何かと楽そうだっ...",
          "link": "https://zenn.dev/tsuji_u/articles/0db56a35afcbe6",
          "publishedOn": "2022-10-17T09:35:36.000Z",
          "wordCount": 142,
          "title": "【Python環境構築】Windows11 ProにPythonをインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zjTmo6wQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:t_u%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2591Windows11%2520Pro%25E3%2581%25ABPython%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1vWlBvRGRJLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNzNhZWRhOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zjTmo6wQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:t_u%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2591Windows11%2520Pro%25E3%2581%25ABPython%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1vWlBvRGRJLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNzNhZWRhOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/niccari/articles/41b393bc5d506a",
          "author": "niccari",
          "description": "Cloud Run + Cloud Buildを使ったインフラで動くHTTPサーバを自動構築できるよう、Terraformを使って構築する方法を調査しました。\n\n\n 全体フロー\n\n\n サンプルコード\n実装したコードを以下に保存していますので、ご参考ください。\nhttps://github.com/Niccari/cloud_run_http_server_terraform_example\n\n HTTPサーバ\n以下の形で、FastAPIを使って疎通確認用のAPIのみ定義しておきます。\n\nmain.py\nfrom fastapi import FastAPI\n\napp = FastAPI(...",
          "link": "https://zenn.dev/niccari/articles/41b393bc5d506a",
          "publishedOn": "2022-10-17T02:30:00.000Z",
          "wordCount": 1573,
          "title": "Cloud Run + Cloud Build + TerraformでCI/CDビルドに対応したHTTPサーバを立てる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UOpkLEvD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:niccari%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Cloud%2520Run%2520%252B%2520Cloud%2520Build%2520%252B%2520Terraform%25E3%2581%25A7CI%252FCD%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259FHTTP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1iaXZlcDZPaS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNjM3OTdiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UOpkLEvD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:niccari%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Cloud%2520Run%2520%252B%2520Cloud%2520Build%2520%252B%2520Terraform%25E3%2581%25A7CI%252FCD%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259FHTTP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1iaXZlcDZPaS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNjM3OTdiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-kernel-svm",
          "author": "derwind",
          "description": "目的\nQuantum feature maps and kernels に「量子カーネル」のコンテンツがあるが、これはかなり見た目が難しいのでまずは古典的なカーネル SVM を扱いたいというもの。最適化について考える (2) — SVM は実はさらに手前の “カーネル法を使わない素朴な SVM” として書いた記事であったのだが、これの続きからいきたい。\n\n 分類問題の定義とデータセット\n大変使いやすい絵が多いので、文献 Quantum feature maps and kernels の絵とデータセットの作り方をそのまま拝借したい。\n名称は知らないが、文献 [PML] を含め機械学習...",
          "link": "https://zenn.dev/derwind/articles/dwd-kernel-svm",
          "publishedOn": "2022-10-16T16:03:16.000Z",
          "wordCount": 2567,
          "title": "カーネル SVM を眺めてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TlCpiaPy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%2520SVM%2520%25E3%2582%2592%25E7%259C%25BA%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TlCpiaPy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%2520SVM%2520%25E3%2582%2592%25E7%259C%25BA%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/michy/articles/08513aa6e545d9",
          "author": "zaiwa",
          "description": "はじめに\nこの記事ではM1/M2環境でローカルで処理できるStableDiffusionのGUI環境の構築方法を解説します。\n2022/10現在ではGUIの動作環境はautomatic1111が有名ですが、機能が複雑になり利用のハードルが日に日に上がってきています。本記事ではUIがシンプルかつ利用しやすいInvokeAIの利用方法を解説します。\n\n InvokeAIとは？\nStableDiffuisonのサポートツールです。本家よりもかなり使いやすく、GUI/CUI両方で利用が可能な便利ツールになっています。\nインストールの簡易さが非常に魅力的でautomatic1111よりもインス...",
          "link": "https://zenn.dev/michy/articles/08513aa6e545d9",
          "publishedOn": "2022-10-16T12:17:52.000Z",
          "wordCount": 234,
          "title": "M1/M2 MacのローカルにStableDffusionのGUI環境を作る(InvokeAI編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tbZ5C5uo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zaiwa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:M1%252FM2%2520Mac%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25ABStableDffusion%25E3%2581%25AEGUI%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2528InvokeAI%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HbTdEeDZfZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhMDFjNTg2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tbZ5C5uo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zaiwa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:M1%252FM2%2520Mac%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25ABStableDffusion%25E3%2581%25AEGUI%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2528InvokeAI%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HbTdEeDZfZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhMDFjNTg2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/wattak777/articles/9d6f85e3ad160e",
          "author": "わたる",
          "description": "こんにちは、わたる です。\n\n いきさつ\nひょんなことから BLF ファイルを解析することになりまして。\nところが手元に CANalizer も無く、さてどげんしたら…と、途方に暮れていたら、\n【完全版】pythonでblfファイルのCANデータをcsv化する【詳細解説付き】\nというページを発見。google センセイは便利ですね。\nしかし、サンプルを見るとどうやら dbc というデータベースファイルが必要らしく、かつ、指定した特定の MSG ID しか取ってこず、本来欲しかったダンプでは残念ながら無く。\n\n ええい、作っちゃえ\n…と、いうことでみんな大好き Python で作ってみまし...",
          "link": "https://zenn.dev/wattak777/articles/9d6f85e3ad160e",
          "publishedOn": "2022-10-16T11:56:33.000Z",
          "wordCount": 376,
          "title": "blf ファイルのダンプを取ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fscBdCCm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%259F%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:blf%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2597%25E3%2582%2592%25E5%258F%2596%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y293dG9OWHo5X1EtZjhIS0dWcVAyMkM4b2trMVZpSlVVTzdyX1JRUEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fscBdCCm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%259F%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:blf%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2597%25E3%2582%2592%25E5%258F%2596%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y293dG9OWHo5X1EtZjhIS0dWcVAyMkM4b2trMVZpSlVVTzdyX1JRUEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/attakei/articles/sphinx-custom-role-for-pypi",
          "author": "Takei Kazuya",
          "description": "タイトルのとおりなのですが、PyPIに登録されているパッケージへのリンクを簡単にセットするSphinxロールを書いてみました。\nソース全体を見たい場合は、 GitHubのスライド用リポジトリので参照してください。\n\n そもそもロールって？\nSphinx(ひいてはreStructuredText)における、ディレクティブとは別の拡張手法です。\nディレクティブがブロックレベルでの拡張を実現するのに対して、ロールはインラインの構成要素を拡張するような役割を持ちます。\n例えば、Sphinxのプロジェクトでドキュメントへのリレーションを書きたいときは :doc:`other-doc` と記述するこ...",
          "link": "https://zenn.dev/attakei/articles/sphinx-custom-role-for-pypi",
          "publishedOn": "2022-10-16T11:31:13.000Z",
          "wordCount": 577,
          "title": "Sphinxのカスタムロールを即席で作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cg4tldyZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takei%2520Kazuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Sphinx%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%258D%25B3%25E5%25B8%25AD%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKSXpPS3RSeThDU0ZoaWpHeklQSWk1Mkl2ZHRwVTB5aE1tTWJhbEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cg4tldyZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takei%2520Kazuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Sphinx%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%258D%25B3%25E5%25B8%25AD%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKSXpPS3RSeThDU0ZoaWpHeklQSWk1Mkl2ZHRwVTB5aE1tTWJhbEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tarowhitey/articles/68567387234459",
          "author": "たろー",
          "description": "こんにちは。たろーです。\nPythonのWeb開発フレームワークであるDjangoを利用する際、毎回調べながら初期設定をしてしまいまうので、メモがてら設定の手順を記しておきます。\n少しでも参考になれば幸いです。\n\n この記事の対象者\n\nPython, Django初心者\nDjangoを使ったことがあるが毎回初期設定で躓いてしまう方\n\n\n 環境\nOS : MacOS Monterey 12.6 (M1)\nPython : 3.10.5\nDjango : 4.1.2 *後ほどインストール手順を記載しています\n\n Django導入手順\nここから、Djangoの導入手順を記載します。\n\n 仮想環...",
          "link": "https://zenn.dev/tarowhitey/articles/68567387234459",
          "publishedOn": "2022-10-16T10:36:32.000Z",
          "wordCount": 467,
          "title": "Djangoの初期設定（Python、Djangoの超初心者向け）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g5O2UAgx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2582%258D%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E8%25A8%25AD%25E5%25AE%259A%25EF%25BC%2588Python%25E3%2580%2581Django%25E3%2581%25AE%25E8%25B6%2585%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdTgzRDVPOEV4OTc1bU5PV0dyVVBTRnJrZ1hjNmIwc3lSUzVFSXVBSHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g5O2UAgx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2582%258D%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E8%25A8%25AD%25E5%25AE%259A%25EF%25BC%2588Python%25E3%2580%2581Django%25E3%2581%25AE%25E8%25B6%2585%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdTgzRDVPOEV4OTc1bU5PV0dyVVBTRnJrZ1hjNmIwc3lSUzVFSXVBSHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/eito_blog/articles/9c2c241432ad7f",
          "author": "エイト",
          "description": "WindowsからMacへの移行に伴いPythonの環境構築を行いました。\nこのページではその備忘録として、M1 MacでPythonの環境構築をする手順について解説します。\n\n Anacondaインストール\n\n インストーラをダウンロード\n下記URLにアクセスします。\nhttps://www.anaconda.com/products/distribution\n添付画像のDownloadをクリックし、インストーラをダウンロードします。\n\n\n インストーラを起動\nダウンロードしたインストーラを起動します。\n続けるやインストールボタン等をクリックし、インストールを完了させます。\n\n最後の...",
          "link": "https://zenn.dev/eito_blog/articles/9c2c241432ad7f",
          "publishedOn": "2022-10-16T10:06:00.000Z",
          "wordCount": 283,
          "title": "MacでPython環境構築(Anaconda編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GmA2V_fk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Mac%25E3%2581%25A7Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2528Anaconda%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fZG9XSFdDLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GmA2V_fk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Mac%25E3%2581%25A7Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2528Anaconda%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fZG9XSFdDLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/piment/articles/2c7a8a7d2abe1c",
          "author": "ぴーまん",
          "description": "200以上の言語の任意の翻訳ができるFacebookのNo Language Left Behindを試してみます。\nHuggingFaceのtransformersで動かしました。\n本当は、facebookresearchのgithubのインストールを試みていましたが、Google ColabでApexのインストールでエラーになり、断念しました。\nRuntimeError: Cuda extensions are being compiled with a version of Cuda that does not match the version used to compile P...",
          "link": "https://zenn.dev/piment/articles/2c7a8a7d2abe1c",
          "publishedOn": "2022-10-16T05:35:16.000Z",
          "wordCount": 1126,
          "title": "Hugging FaceのNLLB",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PYPESXuw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Hugging%2520Face%25E3%2581%25AENLLB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1JUi1yTnFRNS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PYPESXuw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Hugging%2520Face%25E3%2581%25AENLLB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1JUi1yTnFRNS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/converghub/articles/cbdd2deb8907e2",
          "author": "converghub",
          "description": "制御振幅エンコーディング\n前回は、データ木構造を用いた振幅エンコーディングについて記載しました。\nVQLS(Variational Quantum Linear Solver)でこれを用いるにあたり、制御振幅エンコーディング回路を実装する必要があります。\nVQLSについて日本語の参考になる解説記事がありますので、VQLSについてはそちらを参照ください。\n\n\n 制御ビットの指定\n例として、データ木の一番深いところで考えます。\n疑似コードのとおり、制御回転ゲート CRy および CCX 、 CCZ を適用する際のフラグとして制御ビットを利用することにしました。\nCRy について、Ry も...",
          "link": "https://zenn.dev/converghub/articles/cbdd2deb8907e2",
          "publishedOn": "2022-10-16T03:22:14.000Z",
          "wordCount": 1824,
          "title": "振幅エンコーディング（３）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KxQRlPik--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:converghub%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%258C%25AF%25E5%25B9%2585%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588%25EF%25BC%2593%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1EZzNFUGxvUi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExOGU0MGE5OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KxQRlPik--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:converghub%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%258C%25AF%25E5%25B9%2585%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588%25EF%25BC%2593%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1EZzNFUGxvUi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExOGU0MGE5OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/c31dc875ae29c3",
          "author": "osn_Lofi",
          "description": "Youtube動画から音声ファイルのみをダウンロードする方法です。\nGoogleColaboratoryで簡単に実装できます。\n\n 1. ライブラリーをインストール\n!pip install yt-dlp\n\n 2. コマンドラインで実行\nhttps://youtu.be/vR5GXyklvm4のところに、ダウンロードしたいYouTubeのアドレスを入力します。\nGoogleColaboratoryですと、contentディレクトリにmp3ファイルが保存されます。\n以下は首相官邸のYouTubeになります。\n!yt-dlp -x --audio-format mp3 https://you...",
          "link": "https://zenn.dev/robes/articles/c31dc875ae29c3",
          "publishedOn": "2022-10-16T03:12:30.000Z",
          "wordCount": 141,
          "title": "【Python】Youtube動画から音声ファイルを取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VD4Zvq61--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Youtube%25E5%258B%2595%25E7%2594%25BB%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E5%25A3%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VD4Zvq61--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Youtube%25E5%258B%2595%25E7%2594%25BB%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E5%25A3%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mnagaa/articles/3a02ebc0431f36",
          "author": "nagahama",
          "description": "Hatch\nHatch is a modern, extensible Python project manager.\nPythonのプロジェクトマネージャです。ドキュメントの通りにやってみる。\n\n(かわいい...)\nhttps://hatch.pypa.io/latest/\n!\n全て執筆時点での内容になります。変更等については、公式ドキュメントを確認してください。\n\nhttps://packaging.python.org/ja/latest/key_projects/#hatch\n\nHatch は、 Python での開発者向けに依存関係の管理や環境の分離を便利に行うための統合さ...",
          "link": "https://zenn.dev/mnagaa/articles/3a02ebc0431f36",
          "publishedOn": "2022-10-16T03:05:50.000Z",
          "wordCount": 1832,
          "title": "Hatch is a modern, extensible Python project manager",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--plprARpV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nagahama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Hatch%2520is%2520a%2520modern%252C%2520extensible%2520Python%2520project%2520manager%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUjRWaHJ5ci0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNmJmNmExOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--plprARpV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nagahama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Hatch%2520is%2520a%2520modern%252C%2520extensible%2520Python%2520project%2520manager%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUjRWaHJ5ci0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNmJmNmExOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k0kishima/articles/b8292314c16b5e",
          "author": "k0kishima",
          "description": "概要\nPython Packaging User Guide と エキスパートPythonプログラミング 改訂3版 を読みました。\nhttps://packaging.python.org/en/latest/\nパッケージの生成や配布には様々なプラクティスがあるように思えたので個人的に印象的だったものを抜粋してまとめました。\n中には古い情報もありそうでしたが、新しいツールを理解する下地としては使えそうだったのでそう言うものも含めて記録してます。\n\n 前提\n以下のような経験や知識があること\n\nPyPIへのパッケージ登録を行ったことがある、もしくは大まかな手順は把握している\n\nhttps...",
          "link": "https://zenn.dev/k0kishima/articles/b8292314c16b5e",
          "publishedOn": "2022-10-16T02:49:55.000Z",
          "wordCount": 1371,
          "title": "PyPIでパッケージを配布するときのプラクティス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Js9N920Z--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k0kishima%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PyPI%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E9%2585%258D%25E5%25B8%2583%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yQUpoSTZRcC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlZGQxYzU0ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Js9N920Z--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k0kishima%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PyPI%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E9%2585%258D%25E5%25B8%2583%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yQUpoSTZRcC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlZGQxYzU0ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/a72b95f9f76c39",
          "author": "osn_Lofi",
          "description": "はじめに\n画像生成AIのDALL・E2や文章生成AIのGPT-3で何かと話題のOpenAIですが、今度は、音声認識の世界でもやってくれました。\n2022年9月22日に高性能な音声認識AIのWhisperを発表したのです。日本語にも対応していたので、早速、GoogleColaboratoryで実装してみました。\n驚くほど簡単に実装でき、かつ、驚くほど精度が高くて、びっくりしました。\nここでは、Whisperの概要について簡単に触れた上で、GoogleColaboratoryでの実装方法、精度をお示ししたいと思います。\n\n Whisperについて\nOpenAIの公式サイトから、概要をご紹...",
          "link": "https://zenn.dev/robes/articles/a72b95f9f76c39",
          "publishedOn": "2022-10-16T02:31:44.000Z",
          "wordCount": 395,
          "title": "【簡単かつ高精度】音声認識AIのWhisperを実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5X8AE7Km--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%258B%25E3%2581%25A4%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2580%2591%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598AI%25E3%2581%25AEWhisper%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5X8AE7Km--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%258B%25E3%2581%25A4%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2580%2591%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598AI%25E3%2581%25AEWhisper%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gamera/articles/46b7deb0beca0c",
          "author": "gamera",
          "description": "概要\n言葉でうまく説明できそうに無いのでコードをどうぞ\n\nmain.py\nclass ClassA:\n    def __init__(self):\n        self.a = 1\n\n    def method_a(self):\n        print(self.a)\n\n\nclass ClassB(ClassA):\n    def __init__(self):\n        super().__init__()\n        self.b = 2\n\n    def method_b(self):\n        print(self.b)\n\n\ninstance_a ...",
          "link": "https://zenn.dev/gamera/articles/46b7deb0beca0c",
          "publishedOn": "2022-10-15T11:22:28.000Z",
          "wordCount": 873,
          "title": "Pythonでインスタンスオブジェクトをサブクラスのものに変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PnDNHHcv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamera%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%2582%25E3%2581%25AE%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wbXdTSHF3VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyY2Y1NjBlMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PnDNHHcv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamera%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%2582%25E3%2581%25AE%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wbXdTSHF3VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyY2Y1NjBlMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/stable_diffusion_trial_1",
          "author": "mimitako",
          "description": "Stable Diffusion と形容詞\nStable Diffusion のひとつの機能に言葉から画像の生成するものがあります。最近はやっているので聞いたことがある人も多いのではないでしょうか？\n言葉または単語から画像を生成していくのですが、軽く使った感じだと、ちょっとしたニュアンスの違いでも生成される画像に違いがあることがわかりました。\nそこで、少しずつ単語と形容詞を変えながら生成される画像の傾向を見てみようと思います。\nちなみに、今回は女の子をメインにしています。\n\n girl での結果\n女の子なのでとりあえず最初に考えたのが girl です。それに形容詞等をつけていきます。...",
          "link": "https://zenn.dev/mimitako/articles/stable_diffusion_trial_1",
          "publishedOn": "2022-10-15T11:15:23.000Z",
          "wordCount": 303,
          "title": "Stable Diffisionで形容詞ごとに違いが出るのか？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yNmJXK1E--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffision%25E3%2581%25A7%25E5%25BD%25A2%25E5%25AE%25B9%25E8%25A9%259E%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AB%25E9%2581%2595%25E3%2581%2584%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yNmJXK1E--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffision%25E3%2581%25A7%25E5%25BD%25A2%25E5%25AE%25B9%25E8%25A9%259E%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AB%25E9%2581%2595%25E3%2581%2584%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/koichiba/articles/01e89d515e9518",
          "author": "koichi",
          "description": "モチベーション\nマークダウンで何かを書く時に、動画を載せたいが対応していないのでGifアニメーションに変換して載せたい時があります。\nそんな時、いちいち外部サービス開くのも面倒ですし、知らないサービスにアップするのもなんか嫌だって人もいると思います。\nそこで、自分で変換しちゃおう！というわけです。\n\n 作ったもの\n\npythonで動画をgifに変換するスクリプト\nAlfredのワークフロー\n\n\n\n pythonで動画をgifにする\n今回はMoviePyというライブラリを使用します。\nコード\n\nscript.py\nimport sys\nfrom moviepy.editor impor...",
          "link": "https://zenn.dev/koichiba/articles/01e89d515e9518",
          "publishedOn": "2022-10-15T08:06:18.000Z",
          "wordCount": 389,
          "title": "Alfred + Pythonで動画をgifに変換するワークフローを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rGdMCnFu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koichi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Alfred%2520%252B%2520Python%25E3%2581%25A7%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592gif%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1uVGtPUWZwMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNTFjZmQ5OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rGdMCnFu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koichi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Alfred%2520%252B%2520Python%25E3%2581%25A7%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592gif%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1uVGtPUWZwMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNTFjZmQ5OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/admo/articles/59606ce0d19356",
          "author": "admo",
          "description": "初Zenn。\nWeb3が流行ってますがDecentralizedなImplementationを考えた場合、極力GAFAMに代表されるSaasサービスを使わず、もっと言えば真の意味でサーバレスで分散された何かを目指すということで、プライベートで使ってたフィード更新通知ボットをDecentralizedに?作ってみました。\nhttps://github.com/admogh/dsfeed\nDBにはsqliteを使い、ひとまずscpによりファイル転送して複数のPC(今確認しているのはMAC）で動くような実装を考えました。\nいろいろ使ってみて直していけるといいですね。",
          "link": "https://zenn.dev/admo/articles/59606ce0d19356",
          "publishedOn": "2022-10-15T06:19:26.000Z",
          "wordCount": 73,
          "title": "Sustainableなフィードを考える〜サイト更新をDiscord通知",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mMdcJ0aG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:admo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Sustainable%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2580%259C%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E6%259B%25B4%25E6%2596%25B0%25E3%2582%2592Discord%25E9%2580%259A%25E7%259F%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MEVQcTFyMW5kUE5ZYkFTSi0xMFd3cHNCeXYwVEVqWkliMS1CNDk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mMdcJ0aG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:admo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Sustainable%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2580%259C%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E6%259B%25B4%25E6%2596%25B0%25E3%2582%2592Discord%25E9%2580%259A%25E7%259F%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MEVQcTFyMW5kUE5ZYkFTSi0xMFd3cHNCeXYwVEVqWkliMS1CNDk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/e15fac5b62af48",
          "author": "shimo",
          "description": "LambdaのタイムゾーンはデフォルトではUTCなのですが、JSTのつもりで気づかず失敗したことがあります。変更も少し手間だったのですが、Python3.9以降はzoneinfoでいいのでは、という話。\n\n Python3.8まで\nこんな感じで変えても良いみたいですが(実際変えられる)・・・\nos.putenv('TZ', 'Asia/Tokyo')\ntime.tzset()\nprint(datetime.datetime.now())\n環境変数TZを使うのが、あまりよろしくなさそう。\n\nえ、変更できているけど？ と思ってしまうのですが、予約済みと AWS が言っている以上、ここを書き換...",
          "link": "https://zenn.dev/shimo_s3/articles/e15fac5b62af48",
          "publishedOn": "2022-10-15T06:17:14.000Z",
          "wordCount": 526,
          "title": "Lambda(Python3.9)でzoneinfoを使ってタイムゾーン設定するとかんたん",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WkgtpyBV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Lambda%2528Python3.9%2529%25E3%2581%25A7zoneinfo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258B%25E3%2582%2593%25E3%2581%259F%25E3%2582%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WkgtpyBV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Lambda%2528Python3.9%2529%25E3%2581%25A7zoneinfo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258B%25E3%2582%2593%25E3%2581%259F%25E3%2582%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gamera/articles/859a0a5554d47f",
          "author": "gamera",
          "description": "概要\nデスクトップやらノートパソコンだったりで競プロに取り組んでいると、自分の書いたコードがいろんな所に散らばってしまい、めちゃくちゃ見返しにくいという問題が起こりました。\nというわけで作ったツールがこちら\nhttps://github.com/yu7400ki/atcoder-dumper\n名をatcoder-dumperと言います。\n\n 言語\n\nPython(3.10)\n\n\n 依存関係\n\nGitPython\nfire\nrequests\nbeautifulsoup4\ntqdm\n\n\n 使い方\n\n インストール方法\npip install git+https://github.com/...",
          "link": "https://zenn.dev/gamera/articles/859a0a5554d47f",
          "publishedOn": "2022-10-15T05:36:37.000Z",
          "wordCount": 400,
          "title": "AtCoderの提出をコミットして保存してくれるCUIツールを作った！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dF0jB0WL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamera%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E3%2581%25AE%25E6%258F%2590%25E5%2587%25BA%25E3%2582%2592%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BCUI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wbXdTSHF3VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyY2Y1NjBlMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dF0jB0WL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamera%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E3%2581%25AE%25E6%258F%2590%25E5%2587%25BA%25E3%2582%2592%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BCUI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wbXdTSHF3VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyY2Y1NjBlMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/welliving/articles/924f79be5a4446",
          "author": "Ryo YOSHI",
          "description": "はじめに\n公的統計APIからデータ取得するPythonのライブラリを作りました。サンプルnotebookをGitHubにアップしています。\nPyCon JP 2022で「Pythonで公的統計APIのオープンデータ活用」というタイトルで発表しました。発表資料はこちら\n\n 公的統計APIについて\n公的統計とは、国の行政機関・地方公共団体などが作成する統計のことです。統計法で定義されています。\n日本の公的統計は、e-Stat 政府統計の総合窓口で見ることができます。\n\n e-Stat 政府統計の総合窓口\ne-Statは、日本の統計が閲覧できる政府統計ポータルサイトです。\n総務省統計局が管...",
          "link": "https://zenn.dev/welliving/articles/924f79be5a4446",
          "publishedOn": "2022-10-15T03:00:00.000Z",
          "wordCount": 1521,
          "title": "公的統計APIからデータ取得するPythonのライブラリを作りました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EVhis_DL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2585%25AC%25E7%259A%2584%25E7%25B5%25B1%25E8%25A8%2588API%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EVhis_DL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2585%25AC%25E7%259A%2584%25E7%25B5%25B1%25E8%25A8%2588API%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yosemat/books/bd28014f2e882e",
          "author": "Yosemat",
          "description": "大学の研究にPythonを使った人、業務でスクリプトを書き始めた人などPythonをちょっと使い慣れてきた中級者の皆さんが、そこを脱して上級者になるための一助を担うべく書かれた本。執筆中ですが公開。",
          "link": "https://zenn.dev/yosemat/books/bd28014f2e882e",
          "publishedOn": "2022-10-15T02:57:38.000Z",
          "wordCount": 54,
          "title": "Python中級者を脱して上級者になるための本",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/ymiz/articles/2109498f97cd34",
          "author": "ymiz",
          "description": "問題\n\npythonのコードベース\ndataclass使って値オブジェクトを表現している\n\ndataclassとは\n\nhttps://docs.python.org/ja/3.10/library/dataclasses.html\n\n\n\n\n完全コンストラクタを使いたい\n\n\n\n完全コンストラクタとは、不正状態から防護するための設計パターンです。（中略）インスタンス変数をすべて初期化できるだけの引数を持ったコンストラクタを用意します。そしてコンストラクタ内では、ガード節で不正値を弾きます。このように設計することで、生成された段階で正常値だけをもつ完全なインスタンスが生成されます。（『良い...",
          "link": "https://zenn.dev/ymiz/articles/2109498f97cd34",
          "publishedOn": "2022-10-14T22:41:48.000Z",
          "wordCount": 346,
          "title": "python dataclassでpost_initを使って完全コンストラクタ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Dz7uGAxg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymiz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520dataclass%25E3%2581%25A7post_init%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Dz7uGAxg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymiz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520dataclass%25E3%2581%25A7post_init%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/capybara_alt/articles/12692f45e1a209",
          "author": "capybara-alt",
          "description": "このツールを作った背景\ndraw.ioのライブラリを作ったので、実践編として投稿することにした。\n前職がSIerでお客様に見せる画面イメージをdraw.ioで作成し、それを画面レイアウト定義(画面仕様書)に貼り付けて、番号や画面部品の詳細な説明などをつけていた。ただ、お客様とのミーティングで要望などを取り入れるたびにdraw.ioを修正→画面仕様書に貼り付け→画面部品の説明などの更新をしなければならなかった。この作業を少しでも楽にしたいという思いで中途半端な状態ではあるが、このツールを作成した。\n\n draw.ioを使う理由\ndraw.ioをプロジェクトで使うことになったのがきっかけ...",
          "link": "https://zenn.dev/capybara_alt/articles/12692f45e1a209",
          "publishedOn": "2022-10-14T14:43:52.000Z",
          "wordCount": 128,
          "title": "draw.ioで作成した画面レイアウトから仕様書を自動で生成するツールを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gTvhrJFE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:capybara-alt%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:draw.iow_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05eEpMV0ExYi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNmVjNDE4ZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gTvhrJFE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:capybara-alt%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:draw.iow_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05eEpMV0ExYi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNmVjNDE4ZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}