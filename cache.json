{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/robon/articles/c943cc4740bffb",
          "author": "荒木 岳夫",
          "description": "前回まで\nhttps://zenn.dev/robon/articles/bb17fd07739519\ncustomerで1 schema = 1 modelの実装ができました。\n\n 仕上げ\n\n productsの追加\ncustomersと同様に実装できました。\nschema単位のモジュール化も問題ありませんでしたし、こちらの方が凝集度が高く、拡張も容易な気がします。同じような設計思想で開発されているところもありました。\nhttps://github.com/zhanymkanov/fastapi-best-practices\nhttps://github.com/Netflix/d...",
          "link": "https://zenn.dev/robon/articles/c943cc4740bffb",
          "publishedOn": "2023-04-19T01:02:27.000Z",
          "wordCount": 2409,
          "title": "FastAPIでREST（その３）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5AMaKq1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5AMaKq1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryutaro_h/articles/cd170fcb5d229e",
          "author": "Ryutaro",
          "description": "初めに\n直近でAppEngine + Pythonの2系から3系への移行を経験しました。その際以前の環境で使用されていたライブラリも移行する必要が出てきており、今回はその中でAppEngineNDBからPython Client for Google Cloud Datastore(以後 Datastore API)の移行について、知っておきたかったことなど簡単に取り上げたいと思います。\n\n\n 前提\nAppEngine + Python2系 → 3系への移行作業は、2系でサポートされていたAppEngine系のライブラリが3系では対応外であることがあるため、言語のバージョンアップと共...",
          "link": "https://zenn.dev/ryutaro_h/articles/cd170fcb5d229e",
          "publishedOn": "2023-04-19T00:38:36.000Z",
          "wordCount": 458,
          "title": "AppEngineNDB → Python Client for Google Cloud Datastore API 移行まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_WAPIoph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppEngineNDB%2520%25E2%2586%2592%2520Python%2520Client%2520for%2520Google%2520Cloud%2520Datastore%2520A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryutaro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_WAPIoph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppEngineNDB%2520%25E2%2586%2592%2520Python%2520Client%2520for%2520Google%2520Cloud%2520Datastore%2520A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryutaro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/3799c1569768ca",
          "author": "nakamura196",
          "description": "以前に以下の記事を執筆しました。JPCOARスキーマを用いたxmlファイルのバリデーションを試しました。\nhttps://zenn.dev/nakamura196/articles/3c91cd443e084c\n今回は、上記の記事での検証を元に、Google Colabを用いた検証ツールを作成しました。以下のURLからお試しいただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/JPCOARスキーマ_v1を用いたxmlファイルのバリデーション.ipynb\n公開済みのxmlファイルのURL...",
          "link": "https://zenn.dev/nakamura196/articles/3799c1569768ca",
          "publishedOn": "2023-04-18T21:29:24.000Z",
          "wordCount": 83,
          "title": "JPCOARスキーマ（v1）を用いたxmlファイルのバリデーションツールの試作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c0G9KbSt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JPCOAR%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25EF%25BC%2588v1%25EF%25BC%2589%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fxml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%25A9%25A6%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c0G9KbSt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JPCOAR%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25EF%25BC%2588v1%25EF%25BC%2589%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fxml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%25A9%25A6%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/f5579f88e22b22",
          "author": "よしだ",
          "description": "はじめに\n前回までで単回帰やNumPyro特有の内容を見てきたので、それらを少し応用して基本的なモデルを実装していきます。理論的な内容は世の中にある優れた本にお任せし、実装中心の内容です。\nまた、前回までで出てきた内容は極力説明を省いて進行します。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimpo...",
          "link": "https://zenn.dev/yoshida0312/articles/f5579f88e22b22",
          "publishedOn": "2023-04-18T14:38:06.000Z",
          "wordCount": 5089,
          "title": "NumPyro：基本のモデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8uUFByH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8uUFByH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/de7079cbd9a2d3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-205 B - Permutation Check\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    a.sort()\n    b = [i + 1 for i in range(n)]\n\n    print('Yes' if a == b else 'No')\n\n\nif __nam...",
          "link": "https://zenn.dev/hyperdb/articles/de7079cbd9a2d3",
          "publishedOn": "2023-04-18T04:35:46.000Z",
          "wordCount": 331,
          "title": "［AtCoder］ABC-205｜B - Permutation Check",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lSiDC3AN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CB%2520-%2520Permutation%2520Check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lSiDC3AN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CB%2520-%2520Permutation%2520Check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/129fa030a0077c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-205 A - kcal\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    c = b / 100 * a\n    print(\"%d\" % c if c.is_integer() else c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/129fa030a0077c",
          "publishedOn": "2023-04-18T04:35:46.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-205｜A - kcal",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--np-AJjtK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CA%2520-%2520kcal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--np-AJjtK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CA%2520-%2520kcal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-framework",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonフレームワークについて解説します。\n\n はじめに\nPythonは、初心者からプロまで多くの人に愛されるプログラミング言語です。Pythonは、シンプルで読みやすいコードを書くことができます。また、Pythonには豊富なライブラリが用意されており、様々な分野での開発に利用されています。Pythonの魅力は、これだけではありません。Pythonには多数のフレームワークがあり、Webアプリケーションを構築することができます。\nここでは、Pythonフレームワークの概要と、代表的なフレームワークであるDjangoとFlaskの紹介を行い...",
          "link": "https://zenn.dev/gk12/articles/python-framework",
          "publishedOn": "2023-04-18T04:33:50.000Z",
          "wordCount": 378,
          "title": "Pythonフレームワーク入門 ~初心者向け~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MoP5Cnw4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2585%25A5%25E9%2596%2580%2520%7E%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MoP5Cnw4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2585%25A5%25E9%2596%2580%2520%7E%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-for-statement",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、for文の使い方について説明します。\n\n for文とは？\nfor文とは、ある範囲内の値を順番に取り出して処理を行うための構文です。Pythonのfor文は、以下のように書きます。\nfor 変数 in イテラブル:\n    処理\nここで、変数とは、イテラブルから取り出した要素が格納される変数のことです。イテラブルとは、複数の要素を持つデータ構造のことで、例えば、リストやタプル、文字列などが該当します。\n\n for文の使い方\nfor文を使うには、まず、イテラブルを用意し、for文の中で処理したい操作を記述します。以下は、リストの要素を順番に取り...",
          "link": "https://zenn.dev/gk12/articles/python-for-statement",
          "publishedOn": "2023-04-18T04:27:10.000Z",
          "wordCount": 316,
          "title": "Pythonのfor文を使いこなそう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Uc9SCdED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEfor%25E6%2596%2587%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%259D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Uc9SCdED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEfor%25E6%2596%2587%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%259D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-comparison-operator",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、比較演算子の使い方について説明します。\n\n 比較演算子とは？\n比較演算子とは、2つの値の大小関係を比較するために使用される演算子のことです。Pythonには、以下のような比較演算子があります。\n\n\n> : 大なり\n\n< : 小なり\n\n>= : 大なりイコール\n\n<= : 小なりイコール\n\n== : 等しい\n\n!= : 等しくない\n\nこれらの演算子を使うことで、2つの値がどのような関係にあるかを判定することができます。\n\n 比較演算子の使い方\n比較演算子を使うには、比較したい2つの値を取得し、演算子で比較します。比較演...",
          "link": "https://zenn.dev/gk12/articles/python-comparison-operator",
          "publishedOn": "2023-04-18T04:23:45.000Z",
          "wordCount": 445,
          "title": "Pythonで比較演算子を使おう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nPJu3YO5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nPJu3YO5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-exercises",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、練習問題を解いて学ぶ方法について説明します。\n\n はじめに\nプログラミングを学ぶ上で、練習問題を解くことは非常に重要です。練習問題を解くことで、プログラムの書き方や思考方法を身に付けることができます。また、練習問題を解くことで、実際に動くプログラムを作ることができるため、モチベーションも高まります。\nPythonは初心者にも優しいプログラミング言語として人気があります。Pythonのコードは読みやすく、学習曲線も比較的緩やかです。Pythonを学ぶ初心者にとって、練習問題を解くことは、Pythonの理解を深めるために必要不可欠です。\n本記事...",
          "link": "https://zenn.dev/gk12/articles/python-exercises",
          "publishedOn": "2023-04-18T04:20:14.000Z",
          "wordCount": 340,
          "title": "Python初心者向け：練習問題を解いて学ぶ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i1QO5Wi3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E7%25B7%25B4%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i1QO5Wi3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E7%25B7%25B4%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-use-class",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonのクラスについて解説していきます。クラスは、Pythonの中でも非常に重要な概念であり、プログラムをより効率的かつ柔軟に作成することができます。本記事では、Pythonのクラスの基本的な使い方について説明し、サンプルコードを交えて解説します。\n\n はじめに\nPythonは、オブジェクト指向プログラミング（OOP）をサポートしており、クラスを定義することができます。クラスは、属性（データ）とメソッド（関数）をまとめたもので、同じ構造のオブジェクトを複数作成することができます。クラスを使うことで、コードの再利用性が高まり、保守しやす...",
          "link": "https://zenn.dev/gk12/articles/python-use-class",
          "publishedOn": "2023-04-18T04:16:29.000Z",
          "wordCount": 509,
          "title": "Python初心者向け：クラスの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FVpdj0BH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FVpdj0BH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-editor",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、おすすめのエディタを紹介します。\n\n はじめに\nPythonを学ぶ上で、エディタの選択は非常に重要です。エディタは、プログラムの編集を行うために欠かせないツールであり、使いやすいものを選ぶことで、開発速度が大幅に向上することができます。ただし、初心者にとっては、どのエディタを選ぶべきか迷ってしまうこともあるかもしれません。そこで、本記事では、Python初心者におすすめのエディタを紹介します。\n\n PyCharm\nPyCharmは、Python開発に特化した統合開発環境（IDE）です。Pythonの構文解析機能が強力で、コードの自動補完やシ...",
          "link": "https://zenn.dev/gk12/articles/python-editor",
          "publishedOn": "2023-04-18T04:10:07.000Z",
          "wordCount": 190,
          "title": "Python初心者におすすめのエディタ一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JSzMkCok--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JSzMkCok--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-library",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonでよく使われるライブラリの一覧を紹介します。\n\n はじめに\nPythonは、様々な分野で利用されているプログラミング言語です。その中でも特に、データ分析や機械学習などの分野でよく使われるのが、Pythonのライブラリです。ライブラリを利用することで、より高度な処理が簡単に行えるようになります。\nこの記事では、Python初心者の方に向けて、よく使われるライブラリを紹介します。まずは、Pythonでのライブラリのインストール方法から説明していきます。\n\n ライブラリのインストール方法\nPythonのライブラリは、pipというパッケ...",
          "link": "https://zenn.dev/gk12/articles/python-library",
          "publishedOn": "2023-04-18T04:06:00.000Z",
          "wordCount": 619,
          "title": "Pythonでよく使われるライブラリ一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--46DYpDyZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--46DYpDyZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-scraping",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、スクレイピングの入門記事を書いていきます。\n\n はじめに\nWebサイト上の情報を取得するスクレイピングは、Pythonを使ったデータ取得の方法として非常に有用です。Pythonにはスクレイピングに必要なライブラリが豊富にあり、簡単にスクレイピングができるため、初心者でも始めやすいと言われています。本記事では、Pythonでスクレイピングを行う方法を、基本的なコードを交えて解説していきます。\n\n スクレイピングに必要なライブラリのインストール\nPythonでスクレイピングを行うには、以下のライブラリをインストールする必要があります。\n\nreq...",
          "link": "https://zenn.dev/gk12/articles/python-scraping",
          "publishedOn": "2023-04-18T04:00:19.000Z",
          "wordCount": 202,
          "title": "Python初心者のためのスクレイピング入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WHOBqPXt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WHOBqPXt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-generate-exe",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonプログラムをexeファイルに変換する方法について解説します。\n\n exe化とは\nexe化とは、PythonプログラムをWindowsの実行ファイルであるexeファイルに変換することです。exeファイルに変換することで、Python環境がない他のコンピュータでもPythonプログラムを実行することができます。\n\n PyInstallerを使用したexe化方法\nPythonプログラムをexeファイルに変換する方法はいくつかありますが、ここでは、PyInstallerを使用する方法を紹介します。PyInstallerは、Pythonの...",
          "link": "https://zenn.dev/gk12/articles/python-generate-exe",
          "publishedOn": "2023-04-18T03:54:01.000Z",
          "wordCount": 387,
          "title": "Pythonでexe化する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tt7oXy2---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7exe%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tt7oXy2---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7exe%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-add-array",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、配列に要素を追加する方法について解説します。\n\n 配列とは\n配列とは、複数の要素をまとめたデータ構造のことです。Pythonでは、リスト(List)と呼ばれます。リストは、角括弧([])で要素を囲み、カンマ(,)で区切ります。\n以下は、リストの例です。\nfruits = [\"apple\", \"banana\", \"orange\"]\n\n リストへの要素追加方法\nリストに要素を追加する方法には、以下の2つがあります。\n\n\nappend()メソッドを使用する方法\n\n+演算子を使用する方法\n\n\n append()メソッドを使用する方法\nappend(...",
          "link": "https://zenn.dev/gk12/articles/python-add-array",
          "publishedOn": "2023-04-18T02:22:37.000Z",
          "wordCount": 429,
          "title": "Pythonで配列に要素を追加する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KgUbpklX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KgUbpklX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-logger-output",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\nこんにちは。今回は、Python初心者に向けて、ログを出力する方法について解説します。Pythonには、ログを出力するための標準ライブラリであるloggingが用意されています。\n以下では、実際のコード例を交えて、ログを出力する方法について解説していきます。\n\n loggingモジュールを使った方法\nloggingモジュールを使うことで、簡単にログを出力することができます。loggingモジュールは、ログレベルによって、出力する情報の詳細度を設定...",
          "link": "https://zenn.dev/gk12/articles/python-logger-output",
          "publishedOn": "2023-04-18T02:16:37.000Z",
          "wordCount": 272,
          "title": "Pythonでログを出力する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CQzlH3t2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CQzlH3t2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-square-root",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\nこんにちは。今回は、Python初心者に向けて、ルートを求める方法について解説します。ルートとは、数値の平方根のことを指します。Pythonには、ルートを求めるための機能が標準で用意されています。\n以下では、実際のコード例を交えて、ルートを求める方法について解説していきます。\n\n mathモジュールを使った方法\nPythonの標準ライブラリに含まれるmathモジュールを使うことで、ルートを求めることができます。mathモジュールのsqrt関数を使...",
          "link": "https://zenn.dev/gk12/articles/python-square-root",
          "publishedOn": "2023-04-18T02:06:47.000Z",
          "wordCount": 209,
          "title": "Pythonのルートを求める方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7yq9Diuv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7yq9Diuv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-replace",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\n\n はじめに\nこんにちは。今回は、Python初心者に向けて、文字列の置換処理について解説します。Pythonでは、文字列を簡単に置換することができる「replace」メソッドが用意されています。\n文字列の置換処理は、テキスト処理において非常に重要な機能です。Pythonには、文字列の置換処理を行う「replace」メソッドが用意されています。このメソッドを使うことで、簡単に文字列を置換することができます。\n以下では、実際のコード例を交えて、re...",
          "link": "https://zenn.dev/gk12/articles/python-replace",
          "publishedOn": "2023-04-18T02:02:52.000Z",
          "wordCount": 369,
          "title": "Python初心者のための文字列置換処理の使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ktKURLyU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%25BD%25AE%25E6%258F%259B%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ktKURLyU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%25BD%25AE%25E6%258F%259B%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-openpyxl-work",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\n\n はじめに\nこんにちは。今回は、Python初心者に向けて、Excelファイルを操作するためのライブラリである「openpyxl」について解説します。\nExcelファイルは、ビジネスなどで頻繁に利用されるデータ形式の一つです。Pythonでも、Excelファイルを操作することができる「openpyxl」というライブラリがあります。このライブラリを利用することで、PythonでExcelファイルの読み込みや編集ができます。\n以下では、実際のコード...",
          "link": "https://zenn.dev/gk12/articles/python-openpyxl-work",
          "publishedOn": "2023-04-18T01:49:22.000Z",
          "wordCount": 291,
          "title": "Python初心者のためのopenpyxlの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S2tsLFJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEopenpyxl%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S2tsLFJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEopenpyxl%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-image-recognition",
          "author": "gk12",
          "description": "はじめに\nこんにちは。今回は、Python初心者に向けて、Pythonと画像認識について解説します。Pythonは、シンプルでわかりやすく、初心者でも学びやすいプログラミング言語です。また、近年では画像認識技術が注目されており、Pythonを使った画像認識の実装も可能になっています。本記事では、Pythonと画像認識の基礎から具体的な実装方法までを解説します。\n\n Pythonとは\nPythonは、広く使われているプログラミング言語で、シンプルでわかりやすい文法が特徴です。また、多くのライブラリが用意されており、様々な分野で使用されています。Pythonは、データサイエンスや機械学習...",
          "link": "https://zenn.dev/gk12/articles/python-image-recognition",
          "publishedOn": "2023-04-18T01:18:27.000Z",
          "wordCount": 238,
          "title": "Python初心者のための画像認識入門ガイド",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l_vK7SSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l_vK7SSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robon/articles/bb17fd07739519",
          "author": "荒木 岳夫",
          "description": "前回まで\nhttps://zenn.dev/robon/articles/aa7ba513b3bdb3\nFastAPIも導入すれば、とりあえず動くところまでは簡単でした。\n\n 設計と実装\n\n プロジェクトの構造はどうする？\nNestJSはCLIでひな型の自動生成をしてくれたので、それに乗っかることにしました。スキーマ単位の構造は、スキーマ駆動でマイクロサービスな感じで、これからはこういう構造になっていくのかなぁと思いました。\nで、FastAPIです。公式では、どうやらレイヤ構造を推奨しているようです。\nhttps://fastapi.tiangolo.com/tutorial/big...",
          "link": "https://zenn.dev/robon/articles/bb17fd07739519",
          "publishedOn": "2023-04-18T01:03:49.000Z",
          "wordCount": 1909,
          "title": "FastAPIでREST（その２）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eDiA4gpH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eDiA4gpH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/3b554cc522788b",
          "author": "よしだ",
          "description": "はじめに\nNumPyroを用いてモデリングを実装する上で必要な知識をまとめて説明します。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport numpyro\nfrom numpyro.diagnostics import hpdi\nimport numpyro.distributions as ...",
          "link": "https://zenn.dev/yoshida0312/articles/3b554cc522788b",
          "publishedOn": "2023-04-17T16:24:10.000Z",
          "wordCount": 5991,
          "title": "NumPyro：NumPyro特有の関数などまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wtAPQcvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259ANumPyro%25E7%2589%25B9%25E6%259C%2589%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wtAPQcvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259ANumPyro%25E7%2589%25B9%25E6%259C%2589%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/d8b105286407b6",
          "author": "Darman",
          "description": "はじめに\nQueue（キュー）は、データ構造の一つで、要素を先入れ先出し（FIFO: First-In-First-Out）の順序で追加・取り出しを行うことができます。この記事では、Queueの基本概念とPythonでの実装方法について解説します。\n\n キューの基本概念\nキューは、要素が一列に並んでいて、新しい要素が末尾に追加され、先頭の要素が取り出されるデータ構造です。主な操作は以下の2つです。\n\n\nenqueue: キューの末尾に要素を追加する操作です。\n\ndequeue: キューの先頭の要素を取り出す操作です。\n\nキューは、待ち行列やバッファなど、さまざまなシチュエーションで使...",
          "link": "https://zenn.dev/yutabeee/articles/d8b105286407b6",
          "publishedOn": "2023-04-17T15:30:21.000Z",
          "wordCount": 707,
          "title": "Queueの解説: 基本概念とPythonでの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m52vrNSd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Queue%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%253A%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m52vrNSd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Queue%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%253A%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bonsai_engineer/articles/3cd836a5c649fe",
          "author": "盆栽エンジニア",
          "description": "RaspberryPi起動時に自動でPythonを実行する方法を共有します。\n\n\n実行するPythonスクリプトを作成\nvim /home/pi/Desktop/raspberrypi.py\n\n\nsystemd/systemフォルダに移動\n\n\ncd /etc/systemd/system/\n\n定義ファイルを作成\n\nsudo vim raspberrypi.service\n※ファイル名は任意\n\n設定を書き込む\n\n[Unit]\nDescription=起動テスト\n\n[Service]\nExecStart=/usr/bin/python3 /home/pi/Desktop/raspberryp...",
          "link": "https://zenn.dev/bonsai_engineer/articles/3cd836a5c649fe",
          "publishedOn": "2023-04-17T15:21:00.000Z",
          "wordCount": 173,
          "title": "RaspberryPiで起動時にPythonスクリプトを実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6jdC8mjK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RaspberryPi%25E3%2581%25A7%25E8%25B5%25B7%25E5%258B%2595%25E6%2599%2582%25E3%2581%25ABPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6jdC8mjK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RaspberryPi%25E3%2581%25A7%25E8%25B5%25B7%25E5%258B%2595%25E6%2599%2582%25E3%2581%25ABPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/823a5ceb3d76e9",
          "author": "Darman",
          "description": "Pythonの型付けについて\nPythonは動的型付け言語ですが、型ヒント（type hinting）を使用することで、コードの可読性やエラーの予防に役立ちます。Pythonの型ヒントは、Python 3.5で導入された「PEP 484」という機能で、Pythonの標準ライブラリであるtypingを使って型情報を付与することができます。\n\n 型ヒントの基本\n型ヒントを使用するには、関数の引数や戻り値に対して型情報を記述します。例えば、以下のように型ヒントを追加することができます。\ndef greet(name: str) -> str:\n    return \"Hello, \"...",
          "link": "https://zenn.dev/yutabeee/articles/823a5ceb3d76e9",
          "publishedOn": "2023-04-17T14:34:00.000Z",
          "wordCount": 611,
          "title": "Pythonでの型付けのやり方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rtMY9ZCe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25AE%25E3%2582%2584%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rtMY9ZCe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25AE%25E3%2582%2584%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/fbc5410fd509b7",
          "author": "laiso",
          "description": "開発中にChat completion APIやEmbeddings APIを過渡に呼び出して課金されてしまうことを回避します。\nまた自動テスト内でOpenAI APIを呼び出す時も有効です。\nhttps://github.com/openai/openai-openapi/\nOpenAI公式リポジトリにOpenAPI仕様書が公開されているのでStoplight Prismでモックサーバーを実行します。\n> npm install -g @stoplight/prism-cli\n> prism mock https://raw.githubusercontent.com/op...",
          "link": "https://zenn.dev/laiso/articles/fbc5410fd509b7",
          "publishedOn": "2023-04-17T12:02:47.000Z",
          "wordCount": 871,
          "title": "開発時にモック版OpenAI APIサーバーを使用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AFIHm-mN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E7%2589%2588OpenAI%2520API%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AFIHm-mN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E7%2589%2588OpenAI%2520API%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daddy_yukio/articles/8c6a15fc09548a",
          "author": "Yukio Ichikawa",
          "description": "はじめに\nこんにちは。Daddy's Officeの市川です。\n今回はGmailサーバーをSMTPサーバーとしてメールを送信するプログラムをPythonで書いてみます。\nGmailサーバーへのログインは、GoogleアカウントでログインというOAuth認証が基本になっていますが、アカウント設定を行うことで、ユーザ/パスワードの認証でログインすることができます。\nただ、この方法が最近変更されたりと、いまいちまとまった情報がなかったので、備忘録として記事に残しておこうと思います。\n\n メール送信の仕組み\nメールは、送った人の端末から受信する人の端末へ直接送られているわけではありません。\n...",
          "link": "https://zenn.dev/daddy_yukio/articles/8c6a15fc09548a",
          "publishedOn": "2023-04-17T06:52:50.000Z",
          "wordCount": 348,
          "title": "【Python】Gmailサーバを使ってメールを送信する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qvNzFTd2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Gmail%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yukio%2520Ichikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZmZiNTY4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qvNzFTd2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Gmail%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yukio%2520Ichikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZmZiNTY4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b11f8ca4de5f6f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-203 B - AtCoder Condominium\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, k = getIntMap()\n\n    a = (1 + k) * k // 2\n    b = k * 100\n\n    t = 0\n    for i in range(1, n + 1):\n        t += (a + b * i)\n    print(t)\n\n\nif __name__ == \"__main__\":\n    m...",
          "link": "https://zenn.dev/hyperdb/articles/b11f8ca4de5f6f",
          "publishedOn": "2023-04-17T03:57:15.000Z",
          "wordCount": 336,
          "title": "［AtCoder］ABC-203｜B - AtCoder Condominium",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JpYEnrg4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CB%2520-%2520AtCoder%2520Condominium%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JpYEnrg4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CB%2520-%2520AtCoder%2520Condominium%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/537f90229bc800",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-204 A - Rock-paper-scissors\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x, y = getIntMap()\n\n    print(x if x == y else 3 - (x + y))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/537f90229bc800",
          "publishedOn": "2023-04-17T03:57:15.000Z",
          "wordCount": 249,
          "title": "［AtCoder］ABC-204｜A - Rock-paper-scissors",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6lgbXtf---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CA%2520-%2520Rock-paper-scissors%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6lgbXtf---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CA%2520-%2520Rock-paper-scissors%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/331d96ab0d8812",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-203 A - Chinchirorin\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    l = getIntList()\n\n    l.sort()\n    c = len(set(l))\n\n    if c == 3:\n        print(0)\n    elif c == 1:\n        print(l[0])\n    else:\n        print(l[2] if l[0] == l[1] else l[0...",
          "link": "https://zenn.dev/hyperdb/articles/331d96ab0d8812",
          "publishedOn": "2023-04-17T03:57:14.000Z",
          "wordCount": 347,
          "title": "［AtCoder］ABC-203｜A - Chinchirorin",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dthCkq8B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CA%2520-%2520Chinchirorin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dthCkq8B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CA%2520-%2520Chinchirorin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/04ef0ae7d37776",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-204 B - Nuts\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    print(sum([i - 10 for i in a if i > 10]))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/04ef0ae7d37776",
          "publishedOn": "2023-04-17T03:57:14.000Z",
          "wordCount": 302,
          "title": "［AtCoder］ABC-204｜B - Nuts",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cd_lTpLI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CB%2520-%2520Nuts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cd_lTpLI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CB%2520-%2520Nuts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/e8fb2847cfc980",
          "author": "Darman",
          "description": "クイックソートの概要\nクイックソートは、高速な比較ベースのソートアルゴリズムで、データをピボット（基準値）を中心に分割し、再帰的にソートを行います。平均計算時間は O(n log n) で、最悪の場合は O(n^2) ですが、実際には非常に高速で動作することが多いです。\n\n クイックソートの手順\n\nピボットを選択する（例：配列の中央値）。\n左側からピボットより大きい要素を探す。\n右側からピボットより小さい要素を探す。\n2 と 3 で見つかった要素を交換する。\n2 から 4 を繰り返し、左側にはピボットより小さい要素、右側にはピボットより大きい要素が集まる。\n再帰的に左側の部分配列と右...",
          "link": "https://zenn.dev/yutabeee/articles/e8fb2847cfc980",
          "publishedOn": "2023-04-17T03:27:00.000Z",
          "wordCount": 743,
          "title": "Pythonでクイックソート完全解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gZ52wsPY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gZ52wsPY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robon/articles/aa7ba513b3bdb3",
          "author": "荒木 岳夫",
          "description": "はじめに\n当社では、クラウドネイティブなSaaSの開発をしており、いつもはWebAPIの実装ならサーバーレスで。となるのですが、今回は、サーバーレスでないWebAPIの実現方法として、NestJSに続き、FastAPIを動かしてみましたという内容です。\nhttps://zenn.dev/robon/articles/76d4ec767b72ae\n上記のNestJSの記事と同じお題を実装してみます。\n\n 環境構築\n\n Python\nFastAPIはPythonの型ヒントを活用していて、Pythonのバージョンが異なると型ヒントの書き方や範囲がかわるようです。このため、Pythonのバー...",
          "link": "https://zenn.dev/robon/articles/aa7ba513b3bdb3",
          "publishedOn": "2023-04-17T01:14:23.000Z",
          "wordCount": 939,
          "title": "FastAPIでREST（その１）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d7K9MRdh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d7K9MRdh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/23dc52cb1576c4",
          "author": "よしだ",
          "description": "はじめに\nPPLの中ではStanが使用されることが多いですが、「Stan言語で書かないといけない」「コンパイルに時間がかかる」等によりストレスがかかることが多かったので、PythonのNumpyライクに書くことができるNumPyroを触っています。個人的にNumpyを触っていればとっつきやすいため良いライブラリだと思うのですが、ネットの記事がほとんどないことがあまり広がらない要因の１つかなと思います。（また記事も古く情報が更新されてないこともあります）\nそこで、日本語のNumPyroの記事が増えることに期待して、ドキュメント読んでもいまいち分からないところをカバーしながらまとめていき...",
          "link": "https://zenn.dev/yoshida0312/articles/23dc52cb1576c4",
          "publishedOn": "2023-04-16T15:39:47.000Z",
          "wordCount": 3569,
          "title": "NumPyro：インストール方法と基本操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aSIPevK7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aSIPevK7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ekke/articles/ec07943d678340",
          "author": "Ekke",
          "description": "本記事は，日比谷高校文化祭「第46回星陵祭」（2022年9月開催）に向けて開発されたオンライン整理券システム\"Quaint\"の主な機能や開発の経過を紹介するものです．文化祭前々日に発生したシステム障害が原因で，Quaintは実際の文化祭で使用されていません．本記事では”Quaint”開発の経過とともに，システム障害の原因を検証します．書けば書くほど書き足りないし失敗談を公開するのはとても恥ずかしいんですが，このままだといつまで経っても公開できないので，同じようなことを考えてる人の役に少しでも立てればという思いから公開します．\n!\n本記事は知見の共有を目的として個人的に執筆されたものです．...",
          "link": "https://zenn.dev/ekke/articles/ec07943d678340",
          "publishedOn": "2023-04-16T14:19:11.000Z",
          "wordCount": 451,
          "title": "【失敗記】日比谷高校星陵祭2022のオンライン整理券システムを制作しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vjqj2r0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25A4%25B1%25E6%2595%2597%25E8%25A8%2598%25E3%2580%2591%25E6%2597%25A5%25E6%25AF%2594%25E8%25B0%25B7%25E9%25AB%2598%25E6%25A0%25A1%25E6%2598%259F%25E9%2599%25B5%25E7%25A5%25AD2022%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E6%2595%25B4%25E7%2590%2586%25E5%2588%25B8%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ekke%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MjgwOWFhZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Vjqj2r0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25A4%25B1%25E6%2595%2597%25E8%25A8%2598%25E3%2580%2591%25E6%2597%25A5%25E6%25AF%2594%25E8%25B0%25B7%25E9%25AB%2598%25E6%25A0%25A1%25E6%2598%259F%25E9%2599%25B5%25E7%25A5%25AD2022%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E6%2595%25B4%25E7%2590%2586%25E5%2588%25B8%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ekke%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MjgwOWFhZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3fae373f254a06",
          "author": "Darman",
          "description": "データ構造の超基本、ハッシュ表についてPythonを用いて解説します。\n\n ハッシュ表（ハッシュマップ）\nハッシュ表は、キーと値のペアを効率的に格納・検索できるデータ構造です。Pythonでは辞書型（dict）がハッシュ表として実装されています。\nハッシュ表の特徴：\n\n平均的にO(1)でアクセス可能\nハッシュ関数を使用して、キーを配列のインデックスに変換\n\n\n ハッシュ関数\nハッシュ関数は、あるデータ（キー）を受け取り、固定長の数値（ハッシュ値）を生成します。ハッシュ関数の性質により、同じキーに対しては常に同じハッシュ値が生成され、異なるキーに対しては異なるハッシュ値が生成されることが望...",
          "link": "https://zenn.dev/yutabeee/articles/3fae373f254a06",
          "publishedOn": "2023-04-16T11:16:42.000Z",
          "wordCount": 521,
          "title": "Pythonのハッシュテーブル(辞書型)完全に理解した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R0WP2sl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%2528%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%2529%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R0WP2sl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%2528%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%2529%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fura2/articles/c97c8a59f3cc19",
          "author": "fura2",
          "description": "これはなに？\n\n二つの日本語の単語がどれくらい似て聞こえるかを測る方法を考えました。\nそれを応用して、特定の辞書に含まれる単語だけを使った替え歌の歌詞を生成するプログラムを作成しました。(umimi氏との共同プロジェクト)\n\n同氏の2023年2月3日の記事の続きにあたる内容ですが、この記事単体で完結しています。\n\n\n\n\n デモ\n難しい話の前に、まずは聞いてください。\n【自動作詞】Magic: The Gathering[1]のカード名で「勇気100%」歌ってもらった\nhttps://youtu.be/tIXsMYVUjAM\n\n 成果物\n今回の手法を用いた替え歌制作の支援ツールをStr...",
          "link": "https://zenn.dev/fura2/articles/c97c8a59f3cc19",
          "publishedOn": "2023-04-16T11:00:59.000Z",
          "wordCount": 3076,
          "title": "日本語の響きの近さを測る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YyPhae1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E9%259F%25BF%25E3%2581%258D%25E3%2581%25AE%25E8%25BF%2591%25E3%2581%2595%25E3%2582%2592%25E6%25B8%25AC%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fura2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4MDc3OWZiNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YyPhae1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E9%259F%25BF%25E3%2581%258D%25E3%2581%25AE%25E8%25BF%2591%25E3%2581%2595%25E3%2582%2592%25E6%25B8%25AC%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fura2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4MDc3OWZiNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/77f3739af0214b",
          "author": "ShunDev",
          "description": "はじめに\nこの記事はポアソンの小数法則の証明と可視化を行なっている. なお, ポアソン分布の性質については下記の記事にまとめている.\n\nポアソン分布の期待値, 分散, 積率母関数, 最尤推定, 可視化\n\n\n ポアソンの小数法則\n以下が成り立つ.\n\n\\lim_{np=\\lambda, n\\rightarrow \\infty} \\binom{n}{x} p^x (1-p)^{n-x} \\rightarrow \\frac{\\lambda^x}{x!} e^{-\\lambda}.\n\n\n 証明\n\n 注意\n以下に注意する.\n\\lambda = np と固定するとき, n \\rightarrow ...",
          "link": "https://zenn.dev/shundeveloper/articles/77f3739af0214b",
          "publishedOn": "2023-04-16T11:00:00.000Z",
          "wordCount": 1478,
          "title": "[統計学] ポアソンの小数法則の証明と可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jbsJLHiv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%2520%25E3%2583%259D%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25AE%25E5%25B0%258F%25E6%2595%25B0%25E6%25B3%2595%25E5%2589%2587%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jbsJLHiv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%2520%25E3%2583%259D%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25AE%25E5%25B0%258F%25E6%2595%25B0%25E6%25B3%2595%25E5%2589%2587%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/6f601978f032f3",
          "author": "Darman",
          "description": "Visual Studio Code で Python のテストを実行する方法\nVisual Studio Code (VSCode) には Python のテストを実行するための機能があります。本記事では手順を1から解説します。\n\n 1. 必要な拡張機能をインストールする\nVSCode で Python のテストを実行するには、Python 拡張機能をインストールする必要があります。\n\nVSCode を開き、左サイドバーの拡張機能アイコンをクリックします。\n検索ボックスに「Python」と入力し、Microsoft が提供する Python 拡張機能を見つけます。\n「Install...",
          "link": "https://zenn.dev/yutabeee/articles/6f601978f032f3",
          "publishedOn": "2023-04-16T09:57:28.000Z",
          "wordCount": 357,
          "title": "Visual Studio Code で Python のテストを実行する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hHeb0lVc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Visual%2520Studio%2520Code%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hHeb0lVc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Visual%2520Studio%2520Code%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kevinrobot34/articles/python-asyncio-memo",
          "author": "けびん",
          "description": "用語\n\n ブロッキング・ノンブロッキング\n\nブロッキング\n\nプログラムのある処理が完了するのを待っており、他の処理は行えない状態のこと\nCPU等のリソースを占有してしまうが、入出力などの場合にはレスポンスをただ待っているだけということがあり、勿体無い\n\n\nノンブロッキング\n\nプログラムのある処理の待機時に、ブロッキングせず途中で他の処理に移ることが可能な状態のこと\n適切にノンブロッキングなコードを書き、リソースの使用率を高めたり無駄な待機時間をなくしたりすることで、処理の高速化を狙う\n\n\n\n\n 並行処理と並列処理\n似た単語だけど意味するところは結構違うので注意\n\n並行処理 (Conc...",
          "link": "https://zenn.dev/kevinrobot34/articles/python-asyncio-memo",
          "publishedOn": "2023-04-16T07:01:58.000Z",
          "wordCount": 2268,
          "title": "Pythonで非同期処理をやる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Gv8sbSeY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%25B3%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZDNjMWIxNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Gv8sbSeY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%25B3%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZDNjMWIxNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/0f1b828dde7893",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100本ノック(自作)21本目~30本目の問題とPythonのサンプルコードです．\n問題の不備や内容の誤り等がありましたら，ご指摘いただけますと幸いです．\n\n 設定\nオフラインの店舗を構える化粧品会社で地域を絞って広告をうつケースを考えます．\n広告をうった地域において，オフライン店舗の売上がどれくらい増加したかという効果を推定します．\n利用するデータは，下記のファイルです．\nhttps://github.com/s1ok69oo/causal_inference_100knock/blob/main/data/causal_knock3.csv\nデータは，index...",
          "link": "https://zenn.dev/s1ok69oo/articles/0f1b828dde7893",
          "publishedOn": "2023-04-16T06:58:25.000Z",
          "wordCount": 2749,
          "title": "因果推論100本ノック(3)差分の差分法(DID)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wXkIDaT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25283%2529%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%25AE%25E5%25B7%25AE%25E5%2588%2586%25E6%25B3%2595%2528DID%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wXkIDaT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25283%2529%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%25AE%25E5%25B7%25AE%25E5%2588%2586%25E6%25B3%2595%2528DID%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kecy/articles/b019e91d5698fc",
          "author": "kecy",
          "description": "いま「自律駆動AI」として話題のAuto-GPT。自分のPCをコマンドラインツールとしてAIに使わせて思考させるという発想には興味がわきつつちょっとした怖さも憶えます。\nAuto-GPTがどんな仕組みになっているかはこちらの記事で紹介しています。\nhttps://zenn.dev/kecy/articles/7349a3969e2de6\n自分のPCで直接動かすのは怖いので、Dockerコンテナ内で動かしてみました。公式のソースコードのままだと自分の環境では動かなくて、いくつか調整を加えてようやく動かせたというところなので、その手順をまとめておきます。\n（Auto-GPTリポジトリは現在盛...",
          "link": "https://zenn.dev/kecy/articles/b019e91d5698fc",
          "publishedOn": "2023-04-16T04:29:29.000Z",
          "wordCount": 1363,
          "title": "Dockerコンテナの中でAutoGPTを動かしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--E2QJkb6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7AutoGPT%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--E2QJkb6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7AutoGPT%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daon/articles/f6c81659ffc14b",
          "author": "daichi",
          "description": "title: \"OpenAI API research\"\n\n 方針\nプロダクトを作りながら学ぶ\n\n\n 計画\n\nアイデア出し\n実装\n\n\n\n\n 1. アイデア出し\n\n ブレーンストーミングの実施\n\n 事例調査\n\n\nOpenAI Cookbook\n\nOpenAI Documentation\n\n\n\nChatGPT Plugins\n\nChatGPT plugins\nChatGPTをサードパーティのアプリケーションと繋げるためのもの\n\n\n\n\n ChatGPT(GPT-4)を用いた案出し\n\n\nインターネット上で得やすいデータは何ですか？\nインターネット上で得やすいデータは多岐にわたりますが、以下...",
          "link": "https://zenn.dev/daon/articles/f6c81659ffc14b",
          "publishedOn": "2023-04-16T02:35:56.000Z",
          "wordCount": 3050,
          "title": "OpenAI APIの調査",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cLsuT9TH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:OpenAI%2520API%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5ZmFiNGFjMTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cLsuT9TH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:OpenAI%2520API%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5ZmFiNGFjMTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ironmask/articles/856aba21769fd0",
          "author": "鉄仮面",
          "description": "Wagtailブログを試してみた\nDjangoでブログを作るのは形だけなら意外に簡単ですが、操作性やデザイン性を考えれば、全くWordPressに勝てない･･･しかし、バグが多いWordPressを使い続けるのももう嫌だ･･･と調べていたところ、Djangoと同じPythonで作られた（というか、Djangoをベースに作られらている）「Wagtaile」というCMSを発見しました。\nYoutubeでは絶賛されて（？）いますが、英語の解説動画しかないので、理解するのにかなりしんどいので、こちらの記事にまとめておきます。\nおすすめ動画\n\n Wagitalって何？\nWagtailは、Pyt...",
          "link": "https://zenn.dev/ironmask/articles/856aba21769fd0",
          "publishedOn": "2023-04-16T02:33:02.000Z",
          "wordCount": 2050,
          "title": "Wagtailブログを試してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r6kW4-w4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wagtail%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2589%2584%25E4%25BB%25AE%25E9%259D%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhODM4MGRmNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--r6kW4-w4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wagtail%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2589%2584%25E4%25BB%25AE%25E9%259D%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhODM4MGRmNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3e117656f261fb",
          "author": "Darman",
          "description": "スタックオーバーフローとは\nスタックオーバーフローとは、プログラム実行中にコールスタックが一定の容量を超えてしまう現象を指します。コールスタックは、関数呼び出しやローカル変数などの情報を格納するためのメモリ領域ですが、その容量は限られています。スタックオーバーフローが発生すると、プログラムは正常に動作せず、クラッシュや不正な動作を引き起こすことがあります。\n\n スタックオーバーフローが発生する状況\n\n\n再帰関数の呼び出しが適切なベースケースに到達せず、無限に続いてしまう場合：再帰関数は自分自身を呼び出す関数であり、ベースケースに到達しない限り呼び出しが続きます。その結果、コールスタッ...",
          "link": "https://zenn.dev/yutabeee/articles/3e117656f261fb",
          "publishedOn": "2023-04-16T02:05:02.000Z",
          "wordCount": 78,
          "title": "スタックオーバフローとその対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5y5XAqZP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5y5XAqZP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/baebcbe7103116",
          "author": "Darman",
          "description": "コールスタックとは\nコールスタックは、プログラム内で関数が呼び出される際に、その関数の実行情報を一時的に保存するデータ構造です。主な目的は、関数の呼び出し履歴を追跡し、関数が終了したときに正しい戻り先を知ることです。\n\n コールスタックの役割\nコールスタックは以下の3つの主要な役割を果たします。\n\n関数の呼び出し履歴を追跡する\n各関数のローカル変数とスコープを管理する\n関数が正しく終了したときに戻り先を知る\n\n\n 関数の呼び出し履歴を追跡する\nプログラムは、複数の関数から構成されており、一つの関数が別の関数を呼び出すことがあります。コールスタックは、関数がどのように呼び出されているか...",
          "link": "https://zenn.dev/yutabeee/articles/baebcbe7103116",
          "publishedOn": "2023-04-16T01:37:31.000Z",
          "wordCount": 303,
          "title": "コールスタック完全に理解した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VsDBaYcS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VsDBaYcS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/233be33676471d",
          "author": "Matsuzaki",
          "description": "ワイブル分析ってなに？てか、度数分布とか何それ？って\nこちらに簡単にまとめました\n\n ポートフォリオ作っている\n個人的に欲しいサイトを作りたいと思って（フロントの勉強も兼ねて）作成しているけど、chatgptを使って書いているからとても早くできている気がする。今後のスタンダードはコメントを書いて\necsでfargate使ってとりあえず、デプロイするか\nリポジトリ\n\n codecopliot\nそのうちコメント駆動開発とか言われそうだな\n\n 今後のキャリアについて考えてみた\n考え始めた理由はこれ\nこれまで自分はどんな色々興味関心があって、色々と手を出してみては中途半端に終わっていたような...",
          "link": "https://zenn.dev/zi_matsu/articles/233be33676471d",
          "publishedOn": "2023-04-16T01:19:19.000Z",
          "wordCount": 148,
          "title": "4/9〜4/16で技術的にやったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4QsLE0h---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F9%25E3%2580%259C4%252F16%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4QsLE0h---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F9%25E3%2580%259C4%252F16%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kecy/articles/7349a3969e2de6",
          "author": "kecy",
          "description": "ChatGPTを皮切りとしたAIブーム。流石にちょっと過熱気味になってきた印象があります。\n中でも気になるのは「AutoGPT」の話題。Twitter上だと、\nhttps://twitter.com/kajikent/status/1646517019414777857\nhttps://twitter.com/HChishiro/status/1646504072491732993\n他にも、AgentGPTを使って「AutoGPTすごい！AGIだ！」としている投稿を多く見かけました。\nですが、「AgentGPTはAuto-GPTのブラウザ版」ではありません（少なくとも2023年4月15日...",
          "link": "https://zenn.dev/kecy/articles/7349a3969e2de6",
          "publishedOn": "2023-04-15T15:35:32.000Z",
          "wordCount": 726,
          "title": "「Auto-GPTとAgentGPTは別物です」という話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I6gUcsyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CAuto-GPT%25E3%2581%25A8AgentGPT%25E3%2581%25AF%25E5%2588%25A5%25E7%2589%25A9%25E3%2581%25A7%25E3%2581%2599%25E3%2580%258D%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I6gUcsyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CAuto-GPT%25E3%2581%25A8AgentGPT%25E3%2581%25AF%25E5%2588%25A5%25E7%2589%25A9%25E3%2581%25A7%25E3%2581%2599%25E3%2580%258D%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/bbc5d0ef7503fc",
          "author": "Darman",
          "description": "[超解説]再帰関数を使った階乗の計算\n\n はじめに\nこの記事では、再帰関数を用いて整数の階乗を計算するPythonプログラムを解説します。再帰関数の挙動やスタックフレームの概念についても説明します。\n\n プログラムの概要\n以下のPythonプログラムは、与えられた整数nの階乗を計算するものです。\ndef factorial(n: int) -> int:\n    value: int = 0\n\n    print(\"入口\", n)\n    if n <= 1:  # ベースケース\n        value = 1\n    else:  # 再帰ステップ\n        ...",
          "link": "https://zenn.dev/yutabeee/articles/bbc5d0ef7503fc",
          "publishedOn": "2023-04-15T13:09:49.000Z",
          "wordCount": 392,
          "title": "[超解説]再帰関数を使った階乗の計算でスタックフレームについて理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a-cgcmg9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E8%25B6%2585%25E8%25A7%25A3%25E8%25AA%25AC%255D%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%259A%258E%25E4%25B9%2597%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a-cgcmg9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E8%25B6%2585%25E8%25A7%25A3%25E8%25AA%25AC%255D%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%259A%258E%25E4%25B9%2597%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fikastudio/articles/2b367f1850f478",
          "author": "情報工学入門チャンネル",
          "description": "WIF とは\nWIF[1] は、BIP178[2] で定義されているビットコインで使用される ECDSA 秘密鍵をエンコーディングする方法です。WIF は秘密鍵のバックアップやウォレットへ秘密鍵をインポートする際のフォーマットとして利用されています。\n\n 秘密鍵 -> WIF\nビットコインの秘密鍵は、乱数から作成された 256bit の整数です。通常は、16 進数で表現するので、64 桁の英数字が並んでいます。\n# 秘密鍵の例\n0C28FCA386C7A227600B2FE50B7CAE11EC86D3BF1FBE471BE89827E19D72AA1D\n\n\nmainnet 用...",
          "link": "https://zenn.dev/fikastudio/articles/2b367f1850f478",
          "publishedOn": "2023-04-15T12:11:02.000Z",
          "wordCount": 522,
          "title": "Python で学ぶビットコインの WIF（Wallet Import Format）アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y2V88faY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%2520WIF%25EF%25BC%2588Wallet%2520Import%2520Format%25EF%25BC%2589%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y2V88faY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%2520WIF%25EF%25BC%2588Wallet%2520Import%2520Format%25EF%25BC%2589%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dogfortune/articles/fe3bd91762df64",
          "author": "DogFortune",
          "description": "できます\nfrom pprint import pformat\nimport logging\n\n# ロガー作る\nlogger = logging.getLogger(__name__)\nlogger.info(pformat(\"ここにlistとか入れる\"))\npformatを使うことで整形されたstrオブジェクトを取得できるので、それをlogger.infoに渡せばOK！",
          "link": "https://zenn.dev/dogfortune/articles/fe3bd91762df64",
          "publishedOn": "2023-04-15T11:39:46.000Z",
          "wordCount": 113,
          "title": "pprintで整形された文字列をlogger.infoで出力したい！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v3Jv4niW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pprint%25E3%2581%25A7%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592logger.info%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:DogFortune%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5ODRjMTgzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v3Jv4niW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pprint%25E3%2581%25A7%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592logger.info%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:DogFortune%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5ODRjMTgzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/books/c85f204abac7c5",
          "author": "S.A",
          "description": "本書では、多品種少量生産下における需要予測手法として、NeuralProphetの需要予測の実装方法を考えていきます。また複数品種の需要予測を同時に実施することを念頭に置き、どのようにすれば予測時間を少なくできるかを考え、実装例を提示しています。具体的には、クラスタリングを実施し傾向の似ている品種をクラスタリングし、その結果に基づき、需要予測をすることで時間を大幅に削減する方法を考えています。",
          "link": "https://zenn.dev/shungo_a/books/c85f204abac7c5",
          "publishedOn": "2023-04-15T10:26:49.000Z",
          "wordCount": 105,
          "title": "多品種少量生産下における需要予測手法実装例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g4WkbdRk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZjljN2I2Y2U5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g4WkbdRk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZjljN2I2Y2U5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/dokeita/articles/1ce7c728d2afab",
          "author": "dokeita",
          "description": "背景\n\nL2コンストラクタである s3.Bucketで作成したS3バケットに対してオブジェクトのレプリケーションを設定したい\ns3.Bucketにはレプリケーションを設定する機能がまだ無い\n\nL1コンストラクタの s3.CfnBucket.ReplicationConfigurationProperty を使う必要がある\n\n\nescape hatches を使って設定する\n\n\n escape hatchesについて\n公式ドキュメントはこちら\nhttps://docs.aws.amazon.com/cdk/v2/guide/cfn_layer.html\n自分としては、L2コンストラクタ...",
          "link": "https://zenn.dev/dokeita/articles/1ce7c728d2afab",
          "publishedOn": "2023-04-15T09:37:28.000Z",
          "wordCount": 439,
          "title": "AWS CDK s3.BucketにReplication Configurationを設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wRIZQIlQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520s3.Bucket%25E3%2581%25ABReplication%2520Configuration%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dokeita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbTBLbG1lMzNjUkFWQTdCNXJzNW5JVkVLM3h3V3NPUkdyRzZVZXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wRIZQIlQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520s3.Bucket%25E3%2581%25ABReplication%2520Configuration%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dokeita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbTBLbG1lMzNjUkFWQTdCNXJzNW5JVkVLM3h3V3NPUkdyRzZVZXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dyoshikawa/articles/prepare-python-env",
          "author": "d yoshikawa",
          "description": "OpenAI APIを色々試していきたい。\n普段TypeScriptばかり書いているが、Generative AIエコシステム周りはPython有利に感じる（LlamaIndexとか。LangChainはJS/TS対応しているがPythonより解説やサンプルが少なく学習しづらい）。\nそこでPythonの環境構築をキャッチアップしていく。とりあえず環境構築からFastAPI Hello Worldまでやっていく。\n\n 環境\n\nM1 Mac\nbrew\nasdf\n\n\n asdf導入\nまずはpyenv的なものを入れたい。\n*envの管理ツールといえばanyenvだが、最近はasdfが使われてるら...",
          "link": "https://zenn.dev/dyoshikawa/articles/prepare-python-env",
          "publishedOn": "2023-04-15T09:02:39.000Z",
          "wordCount": 783,
          "title": "M1 MacでFastAPI Hello Worldまでの手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QscPZbQ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Mac%25E3%2581%25A7FastAPI%2520Hello%2520World%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d%2520yoshikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1RUdBX0VEUzhuc2ExaDRCMldXUWVhcHE2OU5FRUFTcVRxbi1kSkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QscPZbQ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Mac%25E3%2581%25A7FastAPI%2520Hello%2520World%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d%2520yoshikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1RUdBX0VEUzhuc2ExaDRCMldXUWVhcHE2OU5FRUFTcVRxbi1kSkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e533143a815041",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-202 A - Three Dice\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    print(21 - sum([a, b, c]))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e533143a815041",
          "publishedOn": "2023-04-15T08:59:05.000Z",
          "wordCount": 248,
          "title": "［AtCoder］ABC-202｜A - Three Dice",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hqM0QUJN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CA%2520-%2520Three%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hqM0QUJN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CA%2520-%2520Three%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5939b4acb1dcc0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-202 B - 180°\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    s.reverse()\n    t = ['6' if c == '9' else '9' if c == '6' else c for c in s]\n\n    print(\"\".join(t))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5939b4acb1dcc0",
          "publishedOn": "2023-04-15T08:59:04.000Z",
          "wordCount": 281,
          "title": "［AtCoder］ABC-202｜B - 180°",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EmUIjn4s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CB%2520-%2520180%25C2%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EmUIjn4s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CB%2520-%2520180%25C2%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/techike/articles/cc1295a5fe6d85",
          "author": "Fossa",
          "description": "はじめに\n昨日Twitterでこちらのツイートを見つけ、Amazon CodeWhispererを知りました。\nGitHub Copilotに手を出せていなかった自分でも手軽に使えるのかな？と思い導入してみました。\n自分の備忘録的に書いています。\n\n 環境\nOS: Windows10 Pro\nIDE: Visual Studio Code (VSCode)\nPython 3.9.13\n\n 導入\nVSCodeへの導入手順は、公式の動画やこちらの記事で紹介されていますのでそちらをご確認下さい。\n\n 早速コーディング\nフィボナッチ数列を計算する関数を書いてみたい（書かせてみたい？）と思いま...",
          "link": "https://zenn.dev/techike/articles/cc1295a5fe6d85",
          "publishedOn": "2023-04-15T02:28:44.000Z",
          "wordCount": 251,
          "title": "Amazon CodeWhisperer を使ってみた (Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ua75YoOR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520CodeWhisperer%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fossa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4YmM1NDU4MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ua75YoOR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520CodeWhisperer%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fossa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4YmM1NDU4MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nen/articles/39a692d411f8a3",
          "author": "sre_yoshiya",
          "description": "openaiライブラリを使ったアプリの例\n\n\nroamaround.io/\n(行先の国・地域の観光モデルコースを提案してくれる)\nhttps://www.roamaround.io/\n\n\nagentgpt\n(ゴールの定義を入力すると自動でchatgpt同志が対話を何度も続けて経過ログと最適解を提案してくれる)\nhttps://agentgpt.reworkd.ai/\n\n\ncamel-ai\n(agentgptと同じ機能らしいがapi_key不要で使えるらしい)\nhttps://www.camel-ai.org/home\n\n\n\n\n 実際にopenaiライブラリったコードを実行する\n\n\na...",
          "link": "https://zenn.dev/nen/articles/39a692d411f8a3",
          "publishedOn": "2023-04-15T01:36:34.000Z",
          "wordCount": 588,
          "title": "openai api_keyを使ったアプリ例と実際にapi_keyを使ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l-asPMoQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:openai%2520api_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BE%258B%25E3%2581%25A8%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25ABapi_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sre_yoshiya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjVmYWQ5MWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l-asPMoQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:openai%2520api_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BE%258B%25E3%2581%25A8%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25ABapi_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sre_yoshiya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjVmYWQ5MWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bee2/articles/74b975c70ae6ed",
          "author": "bee2",
          "description": "概要\nVSCodeのPythonエクステンションに、Poetryで作成した仮想環境を認識させる手順をまとめます。\n一度VSCodeの設定を変更するだけで、「Pythonインタープリターの選択」から仮想環境を選択できるようになります。\n\n 動作確認環境\n\nMac OS Monterey\nVSCode 1.77.1\nPoetry 1.4\n\n\n 前提\n\nPython, Poetryインストール済み\nVSCodeにPythonエクステンション追加済み\n\ntestというプロジェクトの仮想環境をPoetryで作成済み (プロジェクト名は任意です)\n以下、作成したプロジェクト直下をワーキングディレ...",
          "link": "https://zenn.dev/bee2/articles/74b975c70ae6ed",
          "publishedOn": "2023-04-15T00:05:22.000Z",
          "wordCount": 192,
          "title": "VSCodeにPoetryの仮想環境を認識させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OjYzQt5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25ABPoetry%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bee2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmMDgwYTliNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OjYzQt5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25ABPoetry%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bee2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmMDgwYTliNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutohub/articles/c798a1b11e290e",
          "author": "yutohub",
          "description": "音声技術の進化による外国語コンテンツの活用方法\n最近では、音声技術が大幅に進歩してきており、ASR、MT、TTS の品質が向上しています。これらを組み合わせることで、外国語の動画や音声に字幕や吹き替えを付けることができるようになります。\nYouTube には、一般的によく使われている自動翻訳字幕機能があります。この機能を使えば、海外の動画に日本語の字幕を簡単に追加できます。YouTube には、MIT や Stanford などの講義など、多くの外国語コンテンツがあります。この機能を活用することで、より多くの情報を収集することが可能になり、非常に便利です。\nYouTube の自動翻訳...",
          "link": "https://zenn.dev/yutohub/articles/c798a1b11e290e",
          "publishedOn": "2023-04-15T00:00:00.000Z",
          "wordCount": 1287,
          "title": "音声技術の進化による外国語コンテンツ活用法：自動翻訳字幕とTTSを活用した自動吹き替え",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--92gk2TZ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E5%25A3%25B0%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%2596%25E5%259B%25BD%25E8%25AA%259E%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E7%25BF%25BB%25E8%25A8%25B3%25E5%25AD%2597%25E5%25B9%2595%25E3%2581%25A8TTS%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%2590%25B9%25E3%2581%258D%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--92gk2TZ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E5%25A3%25B0%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%2596%25E5%259B%25BD%25E8%25AA%259E%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E7%25BF%25BB%25E8%25A8%25B3%25E5%25AD%2597%25E5%25B9%2595%25E3%2581%25A8TTS%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%2590%25B9%25E3%2581%258D%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojomoeko/articles/python-project-with-devcontainer",
          "author": "okojomoeko",
          "description": "以前にpoetryとmkdocsとsphinxを使ってpythonプロジェクトを作っていきました。\nhttps://zenn.dev/okojomoeko/articles/python-project-with-mkdocs\n今回はvs codeのdev containerを使って、みんなが共通のvs codeでチーム開発できるようにdev containerを使ったプロジェクトテンプレートを作成し、どのようにpythonプロジェクトのテンプレートを環境をdev containerで作っていくかというところをメインでメモします。\n\n 今回試した環境\n\nUbuntu 22.04.2 LT...",
          "link": "https://zenn.dev/okojomoeko/articles/python-project-with-devcontainer",
          "publishedOn": "2023-04-14T14:36:12.000Z",
          "wordCount": 932,
          "title": "Dev Containerを使ってPythonのプロジェクトのテンプレートを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sQ-zAZ_y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sQ-zAZ_y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/readyfor_blog/articles/bbcbff90944ef3",
          "author": "Shohei Urano",
          "description": "この記事を読んで分かること\nRedash のクエリの代わりに Python を使い、データを集計して表にして出力する方法。その際の注意点\n\n テンプレート\n最終的にテンプレートとして使えるコード。今後はこれを Fork して使っていく。以下、この解説。コードはこの3つの構成に分かれる\n\n\n\n項目\nやっていること\n\n\n\n\nget_columns\n列の定義。列名や型を定義する\n\n\nget_rows\n表示するデータを取得する\n\n\nresult\nデータを実際に Redsah で表示する\n\n\n\n\nテンプレート\ndef get_columns():\n    return [\n        [ ...",
          "link": "https://zenn.dev/readyfor_blog/articles/bbcbff90944ef3",
          "publishedOn": "2023-04-14T13:26:06.000Z",
          "wordCount": 1227,
          "title": "Redash で Python を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3crrei-s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redash%2520%25E3%2581%25A7%2520Python%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:READYFOR%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520Urano%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4NzU2YzZmODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mjc4cmctNW5XWmtONUxyZi1DUXVsRVVvZjgzLWxpZnh6a29NSWY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3crrei-s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redash%2520%25E3%2581%25A7%2520Python%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:READYFOR%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520Urano%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4NzU2YzZmODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mjc4cmctNW5XWmtONUxyZi1DUXVsRVVvZjgzLWxpZnh6a29NSWY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/unico417/articles/57a92695a901d8",
          "author": "Unico417",
          "description": "SQLite と MySQL って何が違うの？\nまずは、MySQL と SQLite の違いをサックリ紹介します。\nでもあなたの調べごとの目的が「始め方」なら読み飛ばしていいです。\n\n 管理の違い\nMySQL は、データベースを複数作ることができます。\nユーザ機能もあり、その権限に応じたテーブルやデータベースが閲覧・編集可能になります。\nSQLiteは、一つのデータベースに対して一つのファイルが作成されます。\nユーザ機能等はなく、全てのテーブルにアクセス・編集することができます。\n\n アクセス方法の違い\nMySQL は、管理するプログラムを起動し、そのプログラムに対して要求を送信する...",
          "link": "https://zenn.dev/unico417/articles/57a92695a901d8",
          "publishedOn": "2023-04-14T10:33:08.000Z",
          "wordCount": 474,
          "title": "【Python】MySQLとSQLiteの違いと、始めかた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ikxbWwV0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591MySQL%25E3%2581%25A8SQLite%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E3%2580%2581%25E5%25A7%258B%25E3%2582%2581%25E3%2581%258B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Unico417%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVlGQ1puQS1mVDVCVzJpel9KeGR6OUFEUVFDN3JuVkZ4UHQyZlBjdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ikxbWwV0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591MySQL%25E3%2581%25A8SQLite%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E3%2580%2581%25E5%25A7%258B%25E3%2582%2581%25E3%2581%258B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Unico417%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVlGQ1puQS1mVDVCVzJpel9KeGR6OUFEUVFDN3JuVkZ4UHQyZlBjdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/baa664fb624f05",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-201 B - Do you know the second highest mountain?\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringListRow(N):\n    return [list(input().split()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    x = getStringListRow(n)\n\n    y = dict()\n    z = []\n    for s, t in x:\n  ...",
          "link": "https://zenn.dev/hyperdb/articles/baa664fb624f05",
          "publishedOn": "2023-04-14T07:31:25.000Z",
          "wordCount": 400,
          "title": "［AtCoder］ABC-201｜B - Do you know the second highest mountain?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Fe7ecId9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CB%2520-%2520Do%2520you%2520know%2520the%2520second%2520highest%2520mount...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Fe7ecId9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CB%2520-%2520Do%2520you%2520know%2520the%2520second%2520highest%2520mount...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7a68bbbe94502a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-201 A - Tiny Arithmetic Sequence\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    l = getIntList()\n    a, b, c = sorted(l)\n\n    print('Yes' if b * 2 == a + c else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7a68bbbe94502a",
          "publishedOn": "2023-04-14T07:31:25.000Z",
          "wordCount": 283,
          "title": "［AtCoder］ABC-201｜A - Tiny Arithmetic Sequence",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ecigDakq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CA%2520-%2520Tiny%2520Arithmetic%2520Sequence%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ecigDakq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CA%2520-%2520Tiny%2520Arithmetic%2520Sequence%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/acorn/articles/2de2c42758ff89",
          "author": "Mr.Acorn",
          "description": "今回は今話題のPy Scriptを使ってみます！！\n\n Py Scriptとは\nPy ScriptとはなんとhtmlにPythonを埋め込めるというものなのです！！ある日JavaScriptについて調べていたら出てきたので、以前も紹介した我が友人staff roi君に教えたら「そんなの機能が少ないぜ」と言われました。それからずっと忘れていたのですが、ふと思いついて調べてみたらこれがすごい！！Pythonは本当に少ししかかじっていないので簡単な例を紹介します。\n\n 実際に使ってみた\nなんと結構簡単にこれが使えるんですよ。インストールの必要がなく、headタグ内に\n<link rel=...",
          "link": "https://zenn.dev/acorn/articles/2de2c42758ff89",
          "publishedOn": "2023-04-13T14:54:41.000Z",
          "wordCount": 528,
          "title": "今話題のPy Script",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--z1DRhEC1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:%25E4%25BB%258A%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEPy%2520Script%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mr.Acorn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WWYyajFyeGNCM3ZMUzUyd29BbU9qbGpwTXFSbG1DdkVac2lja1k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--z1DRhEC1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:%25E4%25BB%258A%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEPy%2520Script%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mr.Acorn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WWYyajFyeGNCM3ZMUzUyd29BbU9qbGpwTXFSbG1DdkVac2lja1k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/39174470be0608",
          "author": "laiso",
          "description": "任意のChatGPT Retriever PluginsのAPIサーバーと対話できるプログラムをLangChainのRetrievalQA ChainとChatGPTPluginRetrieverを使って実現します。\nこれによって\n\nChatGPT Pluginsのインターフェイスの外でRetriever Plugins単体の動作が確認できます\nChain間連携やAgentsなどのLangChainの諸機能と統合できます\n\n利用イメージとしては開発者自身がjupyter notebookなどで質問→回答を繰替えしてテストします。\nただしChatGPTPluginRetrieverは/qu...",
          "link": "https://zenn.dev/laiso/articles/39174470be0608",
          "publishedOn": "2023-04-13T07:34:43.000Z",
          "wordCount": 966,
          "title": "ChatGPT Retriever PluginsをLangChainでデバッグする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KR3v2kj6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520Retriever%2520Plugins%25E3%2582%2592LangChain%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KR3v2kj6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520Retriever%2520Plugins%25E3%2582%2592LangChain%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoutaros/articles/70571e8af4c9ab",
          "author": "unochanel",
          "description": "はじめに\nLLMが流行する中で、EmbeddingやLangChainという言葉を耳にしたので実装したものをまとめてみました。\n今回の記事では、LangChainを使って、PDFのデータをEmbeddingしてPDFの質問に答える機能を作りたいと思います。\nVector検索には、Pineconeを使用しています。\nhttps://www.pinecone.io/\n\n 用意するもの\nPineconeのAPI Keyの取得が必要になります。\n\n Embedding\n\n 必要なライブラリのインストール\npip install --upgrade openai\npip install --u...",
          "link": "https://zenn.dev/ryoutaros/articles/70571e8af4c9ab",
          "publishedOn": "2023-04-13T07:19:37.000Z",
          "wordCount": 667,
          "title": "LangChainを使って、EmbeddingとAgentを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wCJZSRGj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581Embedding%25E3%2581%25A8Agent%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unochanel%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhYTA4Yzg4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wCJZSRGj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581Embedding%25E3%2581%25A8Agent%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unochanel%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhYTA4Yzg4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangju/articles/d87c857b1ce33f",
          "author": "kangju(カンジュ)",
          "description": "pipenvでrequirements.txtを作成する方法を紹介します。\nよく検索して出てくるのは以下のコマンドだと思います。\npipenv lock -r > requirements.txt\nでも最新のpipenvだとエラーになってしまいます。\n調べたところ新しいコマンドができて、”-r”オプションは廃止になったようです。\nなのでエラーになった場合は以下のコマンドを実行しましょう。\npipenv requirements > requirements.txt\nこれで、ちゃんと作成されます。",
          "link": "https://zenn.dev/kangju/articles/d87c857b1ce33f",
          "publishedOn": "2023-04-13T06:47:43.000Z",
          "wordCount": 74,
          "title": "pipenvでrequirements.txtを作る方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R0C-nzxZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pipenv%25E3%2581%25A7requirements.txt%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangju%2528%25E3%2582%25AB%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A5%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R0C-nzxZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pipenv%25E3%2581%25A7requirements.txt%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangju%2528%25E3%2582%25AB%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A5%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0690848ec44d99",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-200 A - Century\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print((n - 1) // 100 + 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/0690848ec44d99",
          "publishedOn": "2023-04-13T05:47:02.000Z",
          "wordCount": 225,
          "title": "［AtCoder］ABC-200｜A - Century",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BOzrONiB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-200%25EF%25BD%259CA%2520-%2520Century%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BOzrONiB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-200%25EF%25BD%259CA%2520-%2520Century%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/050f7c1cb9746e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-200 B - 200th ABC-200\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, k = getIntMap()\n\n    for i in range(k):\n        if n % 200 == 0:\n            n //= 200\n        else:\n            n = n * 1000 + 200\n    print(n)\n\n\nif __name__ == \"__main__\":\n   ...",
          "link": "https://zenn.dev/hyperdb/articles/050f7c1cb9746e",
          "publishedOn": "2023-04-13T05:47:01.000Z",
          "wordCount": 305,
          "title": "［AtCoder］ABC-200｜ B - 200th ABC-200",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v9rhDqEU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-200%25EF%25BD%259C%2520B%2520-%2520200th%2520ABC-200%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v9rhDqEU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-200%25EF%25BD%259C%2520B%2520-%2520200th%2520ABC-200%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/a27e89c0153c7d",
          "author": "オライリーヨッシー",
          "description": "概要\n表題の通り、フォルダに格納したCSVファイルの中身をチェックして、その結果を出力するプログラムを作成した。具体的には、下記のようなケースを想定している。\n\nCSVファイルは、商品シリーズごとに作成される。\nそしてCSVファイル内では、その商品シリーズ毎の商品が一覧化され記載されている。\n各商品について、商品名や型番が正しいか、4列目にtrue/falseが記載されている。\n\nいちいち各CSVファイルを開いて、「全てtrue」かチェックするのは手間なので、今回のプログラムを開発した。下記プログラムをapp.pyとして保存して、python3 app.pyを実行すれば結果が出力でき...",
          "link": "https://zenn.dev/oreilly_ota/articles/a27e89c0153c7d",
          "publishedOn": "2023-04-13T03:31:06.000Z",
          "wordCount": 551,
          "title": "【Python】フォルダに格納したCSVファイルの中身をチェックするプログラム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hUUtcd0m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E3%2581%25AB%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2597%25E3%2581%259FCSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hUUtcd0m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E3%2581%25AB%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2597%25E3%2581%259FCSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rescuenow/articles/289c8365bb18fb",
          "author": "adachi_koichi",
          "description": "背景\nwebsocketでの情報の取得を試したかったので、PythonのWebSocketのクライアントライブラリwebsocket-clientを使って米株の取引情報を取得してみました。\n以前から米株の取引アプリでは取引量などが分からず、瞬時に価格が変わっていくため、もう少し細かい情報を取得できる方法を探していました。\nいくつかのサービスを調べる上で\n\nリアルタイムに情報を取得できる\n入札の状態が分かる\n低価格\nという点を満たすものを調べていき、\nその結果、今回は eodhistoricaldata.com を使うことにしました。\n\n\n 早速実装\nurl_stock_quote =...",
          "link": "https://zenn.dev/rescuenow/articles/289c8365bb18fb",
          "publishedOn": "2023-04-13T03:13:16.000Z",
          "wordCount": 175,
          "title": "WebSocketクライアントを使って米株の取引情報をリアルタイムに取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zznI-VaS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebSocket%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B1%25B3%25E6%25A0%25AA%25E3%2581%25AE%25E5%258F%2596%25E5%25BC%2595%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258A%25E3%2582%25A6%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:adachi_koichi%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NWI1N2NlZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lNY3FRWndMOG5RYnFpRjRnMXV4ZU5RREZtSFhfNE9USUVpVjFmYk9zPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zznI-VaS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebSocket%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B1%25B3%25E6%25A0%25AA%25E3%2581%25AE%25E5%258F%2596%25E5%25BC%2595%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258A%25E3%2582%25A6%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:adachi_koichi%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NWI1N2NlZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lNY3FRWndMOG5RYnFpRjRnMXV4ZU5RREZtSFhfNE9USUVpVjFmYk9zPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/k14i/articles/2bc09fa17b5699",
          "author": "k14i",
          "description": "Python ライブラリから Azure OpenAI Service にリクエストを行い OpenAPI と PlantUML からテストコードを生成・追加する\nこれまで 3 回にわたって、Azure OpenAI Service を使って OpenAPI 仕様 と PlantUML からテストコードを生成する取り組みについての情報共有を行ってきました。\n\nAzure OpenAI Service を使って OpenAPI と PlantUML からテストコードを生成する\nPromptGenerator メソッドによって最適化されたプロンプトを使って Azure OpenAI Se...",
          "link": "https://zenn.dev/k14i/articles/2bc09fa17b5699",
          "publishedOn": "2023-04-13T02:52:50.000Z",
          "wordCount": 5952,
          "title": "Python ライブラリから Azure OpenAI Service にリクエストを行いドキュメントからテストコードを生成・追加する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ErE55Fkt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%258B%25E3%2582%2589%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25AB%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ErE55Fkt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%258B%25E3%2582%2589%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25AB%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiena/articles/unity-python",
          "author": "Mitsuhiro Koga",
          "description": "はじめに\nPython.NETを利用するとC#からPythonの関数を呼び出したり、逆にPythonからC#のメソッドを呼び出したりできるのでNumpyなどの資産をそのまま利用できます。\nUnityからも問題なく使えるのですがアプリ配布先にPythonがインストールされていないと動きません。\nそこでWindows限定ですがPython Embeddable PackageをStreamingAssetsフォルダに入れて配布先の環境に依存せずに実行できるプロジェクトを作ってみました。\nサンプルだけを見たい方はこちらからご覧ください。\nhttps://github.com/shiena/...",
          "link": "https://zenn.dev/shiena/articles/unity-python",
          "publishedOn": "2023-04-12T16:36:05.000Z",
          "wordCount": 1474,
          "title": "UnityとPythonを連携する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6GaZ6-1c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Unity%25E3%2581%25A8Python%25E3%2582%2592%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mitsuhiro%2520Koga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pEQVpCTExZbEpHMFpMNXVha1NzMU9xUTk3MjJlRE0tem5rMURBcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6GaZ6-1c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Unity%25E3%2581%25A8Python%25E3%2582%2592%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mitsuhiro%2520Koga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pEQVpCTExZbEpHMFpMNXVha1NzMU9xUTk3MjJlRE0tem5rMURBcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syoyo/articles/4862d9a93c537a",
          "author": "syoyo",
          "description": "typeguard でクラスや関数の引数の実行時型チェックしたい\n\n@typechecked\nclass Myclass:\n   ...\nのように.\nしかし typegurad が入っていない素の Python 環境も考慮したい(実行時型チェックなし)\npython だとデコレータは C みたいに ifdef 的なやり方ができない.\nif tyeguard_available:\n  @typechecked\nclass Myclass:\n  ...\nはエラーとなる.\nとりあえずはダミーのデコレータ定義で対応でしょうか.\ntry:\n\tfrom typeguard import typech...",
          "link": "https://zenn.dev/syoyo/articles/4862d9a93c537a",
          "publishedOn": "2023-04-12T13:13:23.000Z",
          "wordCount": 208,
          "title": "python typegurad の decorator を ifdef 的に扱いたいメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YtmpJpz_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%2520typegurad%2520%25E3%2581%25AE%2520decorator%2520%25E3%2582%2592%2520ifdef%2520%25E7%259A%2584%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YtmpJpz_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%2520typegurad%2520%25E3%2581%25AE%2520decorator%2520%25E3%2582%2592%2520ifdef%2520%25E7%259A%2584%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/85178021b313f6",
          "author": "nakamura196",
          "description": "概要\n以下の記事で紹介している、Google Colabを用いたNDL\"古典籍\"OCRアプリのチュートリアルを作成しています。\nhttps://zenn.dev/nakamura196/articles/59fe1c9e76de65\n今回、以下の更新を行いました。\n\n利用条件の追加\n不具合の修正\nIIIF Presentation API v3のマニフェストファイルの入力への対応\n\n更新したノートブックは、これまでと同じ以下のURLでアクセスいただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blo...",
          "link": "https://zenn.dev/nakamura196/articles/85178021b313f6",
          "publishedOn": "2023-04-12T10:48:41.000Z",
          "wordCount": 171,
          "title": "Google Colabを用いたNDL古典籍OCRチュートリアルの不具合の修正および機能追加を行いました。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6OAZl9qH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FNDL%25E5%258F%25A4%25E5%2585%25B8%25E7%25B1%258DOCR%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%258D%25E5%2585%25B7%25E5%2590%2588%25E3%2581%25AE%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E6%25A9%259F%25E8%2583%25BD%25E8%25BF%25BD%25E5%258A%25A0%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6OAZl9qH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FNDL%25E5%258F%25A4%25E5%2585%25B8%25E7%25B1%258DOCR%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%258D%25E5%2585%25B7%25E5%2590%2588%25E3%2581%25AE%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E6%25A9%259F%25E8%2583%25BD%25E8%25BF%25BD%25E5%258A%25A0%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k14i/articles/8d24a8ee7380d7",
          "author": "k14i",
          "description": "PromptGenerator メソッドによって最適化されたプロンプトを使って Azure OpenAI Service で OpenAPI と PlantUML からテストコードを生成する #2\n前回、Azure OpenAI Service を使って、まず ChatGPT にプロンプトを生成させる PromptGenerator メソッドを用いてプロンプトのチューニングを行い、そのプロンプトを用いて前々回同様のアプローチでテストコードを生成し、その内容を評価しました。\n前回の大きな問題としては、テストダブルをテスト対象にまで使用していることでした。本記事ではこの解決を試みます。\n...",
          "link": "https://zenn.dev/k14i/articles/8d24a8ee7380d7",
          "publishedOn": "2023-04-12T10:06:05.000Z",
          "wordCount": 14946,
          "title": "最適化したプロンプトを使って Azure OpenAI Service でドキュメントからテストコードを生成する #2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J5djLemt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J5djLemt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/0ba99e960a8f24",
          "author": "hodakam",
          "description": "はじめに\nこの記事の続きです。パスワードリセット時のメールの文面をカスタマイズするためにSerialier をいじったりして、すったもんだしました。これで後はテンプレートはいじれば終わりだ・・・、と思ったらまたハマりました。\n\n やろうとしたこと\nsite-package/django/contrib/admin/templates/registrationにあるpassword_reset_email.html\nをコピーして、自分が設定したい変数を埋め込めんだテンプレートにした。\n{% with uidb64 as uid_str %}\n  {% with token as tok...",
          "link": "https://zenn.dev/hodakam/articles/0ba99e960a8f24",
          "publishedOn": "2023-04-12T09:31:33.000Z",
          "wordCount": 1195,
          "title": "dj-rest-authでパスワードリセットメールをカスタマイズする（続き）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oPkCpFB0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dj-rest-auth%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E7%25B6%259A%25E3%2581%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oPkCpFB0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dj-rest-auth%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E7%25B6%259A%25E3%2581%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8bdb615ea0e850",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-199 A - Square Inequality\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    print('Yes' if a ** 2 + b ** 2 < c ** 2 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/8bdb615ea0e850",
          "publishedOn": "2023-04-12T09:31:28.000Z",
          "wordCount": 274,
          "title": "［AtCoder］ABC-199｜A - Square Inequality",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rW1eh4m8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-199%25EF%25BD%259CA%2520-%2520Square%2520Inequality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rW1eh4m8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-199%25EF%25BD%259CA%2520-%2520Square%2520Inequality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5026d81d11a586",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-199 B - Intersection\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    b = getIntList()\n\n    c = min(b) - max(a) + 1\n\n    print(c if c > 0 else 0)\n\n\nif __name__ == ...",
          "link": "https://zenn.dev/hyperdb/articles/5026d81d11a586",
          "publishedOn": "2023-04-12T09:31:28.000Z",
          "wordCount": 326,
          "title": "［AtCoder］ABC-199｜B - Intersection",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wt9qPqZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-199%25EF%25BD%259CB%2520-%2520Intersection%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wt9qPqZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-199%25EF%25BD%259CB%2520-%2520Intersection%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joanofarc/articles/get-financial-info-by-edinet",
          "author": "JoanOfArc",
          "description": "本記事の目的\nプログラミングを学習しはじめたら、誰しも一度は「株の自動売買で食っていきたい！」のようなことを考えるのではないでしょうか。そのための第一歩として、企業の財務情報を収集するのはとても大切ですよね（あなたがファンダメンタルズ分析を信じるならば、ですが...）。そこで本記事では、Python を使って、企業の財務情報を取得する 方法についてお伝えしたいと思います。\nまた、本記事で実装したソースコードについては GitHub にまとめましたので必要に応じてご利用ください。当記事のコードは全て Google Colaboratory で実装しており、2023年4月12日現在正常に...",
          "link": "https://zenn.dev/joanofarc/articles/get-financial-info-by-edinet",
          "publishedOn": "2023-04-12T09:27:02.000Z",
          "wordCount": 2245,
          "title": "企業の財務情報を自動収集したい！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Tf5wSO6K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BC%2581%25E6%25A5%25AD%25E3%2581%25AE%25E8%25B2%25A1%25E5%258B%2599%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258F%258E%25E9%259B%2586%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Tf5wSO6K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BC%2581%25E6%25A5%25AD%25E3%2581%25AE%25E8%25B2%25A1%25E5%258B%2599%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258F%258E%25E9%259B%2586%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zerebom/articles/5521a0b93648fd",
          "author": "zerebom",
          "description": "こんにちは！本記事では、GitHubのissueコメントを簡単に要約できる「SummarAIzeHub」というGitHub Actionsについて紹介します。このGitHub Actionsは、プロジェクトのコミュニケーションを円滑に進めるためのサポートツールとして作成しました。💪\nhttps://github.com/zerebom/SummarAIzeHub\n記事では、SummarAIzeHubの開発の動機や背景、使用法、技術的詳細などを紹介します。\n\n 使用方法\nSummarAIzeHubは下記のように使用できます。GitHub上のissueやプルリクエストで、コメント欄に/sum...",
          "link": "https://zenn.dev/zerebom/articles/5521a0b93648fd",
          "publishedOn": "2023-04-12T09:07:19.000Z",
          "wordCount": 821,
          "title": "コマンド一つでGitHub上のコメントを自動要約するGitHub Actionsを公開しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FGHC0NLa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25A7GitHub%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2599%25E3%2582%258BGitHub%2520Actions%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zerebom%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2FmMmVhNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FGHC0NLa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25A7GitHub%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2599%25E3%2582%258BGitHub%2520Actions%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zerebom%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2FmMmVhNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/489ff91d176af8",
          "author": "hodakam",
          "description": "はじめに\nこの記事の続きです。Excel の xlsx ファイルの構造はおおむね分かったので、実際に Python で xlsx の中身をいじっていきます。最終的にやりたいのは、ブラウザ上で excel の加工を行うようなアプリケーションで\n\nブラウザから excel ファイルと画像をアップロードする\nユーザ設定に従ってその excel ファイルに新しいシートを追加\n新しく追加されたシートにはアップロードした画像が指定したレイアウトで埋め込まれる\n画像と一緒にテキストボックスや矢印が配置されるなどを載せる\n\nという Web アプリケーションです。これを実現しようと思うと\n\n既存の e...",
          "link": "https://zenn.dev/hodakam/articles/489ff91d176af8",
          "publishedOn": "2023-04-12T08:50:50.000Z",
          "wordCount": 3290,
          "title": "OpenPyXLなしでPythonでExcelファイルをいじり倒す（シート追加編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1hjURLYm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E8%25BF%25BD%25E5%258A%25A0%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1hjURLYm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E8%25BF%25BD%25E5%258A%25A0%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/dfd8da4790f001",
          "author": "hodakam",
          "description": "Dashでファイルのアップロードを取り扱う\nファイルをアップロードすると、何らかの処理をしてくれて、その結果がダウンロードできるテンプレートアプリが作りたかった。よくあるdocを送るとpdfを返してくれるようなサービスで、中の処理をいろいろといじれるようなものかな。Dashでアップローダを実装する場合、dash-core-componentのUploadコンポーネントを使う方法が公式には紹介されている。\nこの方法はあくまでのアップロードそのものの機能しかないので、アップローダとして一般的に必要な機能、例えば\n\nアップロードしたデータのパース\nアップロードの進捗\n正常にアップロードされ...",
          "link": "https://zenn.dev/hodakam/articles/dfd8da4790f001",
          "publishedOn": "2023-04-12T07:12:47.000Z",
          "wordCount": 601,
          "title": "dash-uploaderでアップローダを楽に実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uZc3dt6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dash-uploader%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2580%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uZc3dt6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dash-uploader%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2580%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/97c70c4b018c31",
          "author": "hodakam",
          "description": "Dashの単体テスト\nプログラムを作成した後、そのプログラムが正しく動作しているかを検出するためにテストを行います。テストは人間が操作する方法や自動テストなど、またメソッド単位からブラウザ経由でのテストなど様々な手法・粒度があります。特に関数単位などの粒度が小さいテストのことを単体（ユニット）テストといいます。逆に実際にユーザが使うようにブラウザ経由で操作するテストのことをUIテストとかEnd-to-End (E2E)テストと呼んだりします。Pythonでのユニットテストはpytestやunittestが用いられることが多いと思います。\nDashで作成したWebアプリケーションに対し...",
          "link": "https://zenn.dev/hodakam/articles/97c70c4b018c31",
          "publishedOn": "2023-04-12T06:59:46.000Z",
          "wordCount": 1220,
          "title": "Python Dashで単体テストを行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0OHIJxN5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Dash%25E3%2581%25A7%25E5%258D%2598%25E4%25BD%2593%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0OHIJxN5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Dash%25E3%2581%25A7%25E5%258D%2598%25E4%25BD%2593%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/66eeff0ac1de36",
          "author": "Darman",
          "description": "トランザクション処理とは\nトランザクション処理とは、データベースや分散システムにおいて一連の操作をまとめて実行し、データの整合性や安全性を保つための手法です。トランザクションは、一連の操作が全て成功するか、あるいは失敗した場合は操作が一つも実行されなかったかのように扱われるため、データの整合性が保たれます。この特性は、\"ACID特性\" と呼ばれ、トランザクション処理において重要な役割を果たします。\n\n ACID特性\nトランザクション処理が満たすべき性質として、ACID特性があります。これは以下の4つの性質からなります。\n\n\nAtomicity (原子性): トランザクションに含まれる...",
          "link": "https://zenn.dev/yutabeee/articles/66eeff0ac1de36",
          "publishedOn": "2023-04-12T06:05:02.000Z",
          "wordCount": 647,
          "title": "トランザクション処理 - ACID特性やPythonでの実装例 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UmU7d747--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B6%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2587%25A6%25E7%2590%2586%2520-%2520ACID%25E7%2589%25B9%25E6%2580%25A7%25E3%2582%2584Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UmU7d747--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B6%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2587%25A6%25E7%2590%2586%2520-%2520ACID%25E7%2589%25B9%25E6%2580%25A7%25E3%2582%2584Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/c65eaee995f837",
          "author": "laiso",
          "description": "macOS環境でpythonのsndfileモジュールのインストールに失敗する\n> pip install sndfile\n\nCollecting sndfile                                                                                                                                                                           \n  Using cached sndfile-0.2.0.tar.gz (4.3 ...",
          "link": "https://zenn.dev/laiso/articles/c65eaee995f837",
          "publishedOn": "2023-04-12T05:12:38.000Z",
          "wordCount": 808,
          "title": "fatal error: 'sndfile.h' file not found",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m3OZB9k_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fatal%2520error%253A%2520%2527sndfile.h%2527%2520file%2520not%2520found%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m3OZB9k_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fatal%2520error%253A%2520%2527sndfile.h%2527%2520file%2520not%2520found%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/taketooon/articles/0b6b318cac85c9",
          "author": "taketooon",
          "description": "introduction\n今回はPyTorchの内容。実験で深層学習を使いたいので、ちょうどいい機会なのでPyTorchを学んでいる。学んでいる本は以下の本。この本を学んでいる時に詰まったことを紹介する。\nこれ、めっちゃおすすめなのでぜひ読んでほしいで。\nhttps://www.amazon.co.jp/最短コースでわかる-PyTorch-＆深層学習プログラミング-赤石-雅典-ebook/dp/B09G622WB6\n\n 疑問点\ntensorを作成する際に、Numpy変数から作成しようとすると、データ型がfloat64になってしまう。そうすると何が問題かというと、機械学習を最終的にした...",
          "link": "https://zenn.dev/taketooon/articles/0b6b318cac85c9",
          "publishedOn": "2023-04-12T04:22:49.000Z",
          "wordCount": 1107,
          "title": "float()をtensorに使うと自動微分ができなくなった",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g7e9fU_d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:float%2528%2529%25E3%2582%2592tensor%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taketooon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g7e9fU_d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:float%2528%2529%25E3%2582%2592tensor%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taketooon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/dc13ee7694ba08",
          "author": "hodakam",
          "description": "Python で excel を扱いたいけれど・・・\nPython で excel ファイルを扱おうとした場合の定番ツールに openpyxl があります。ブックの作成やワークシートの追加、編集などはサポートされています。表計算の場合にはおおよそ問題ありませんが、申請書のようなものについては問題があります。多くの excel の申請書では性別のように選択肢で入力する部分がありますが、この入力に円などの図形を充てることがよくあります。\n一方で、openpyxl ではこういった図形の追加、編集がサポートされていないようです。そのため、既存の xlsx ファイルを openpyxl で読み...",
          "link": "https://zenn.dev/hodakam/articles/dc13ee7694ba08",
          "publishedOn": "2023-04-12T01:52:59.000Z",
          "wordCount": 1879,
          "title": "OpenPyXLなしでPythonでExcelファイルをいじり倒す（xlsx分解編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--U5sLGFxe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588xlsx%25E5%2588%2586%25E8%25A7%25A3%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--U5sLGFxe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588xlsx%25E5%2588%2586%25E8%25A7%25A3%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/u748756h/articles/2bda21dda12f3c",
          "author": "Hiroka",
          "description": "はじめに\nVScode上でPythonを書きPostgreSQLを操作するまでを、備忘録として残しておきます。\n\n 目次\n\n 1.psycopg2,PostgreSQLのインストール\n\n 2.DB,テーブルの作成\n\n 3.レコードを挿入する(INSERT)\n\n 1.psycopg2,PostgreSQLのインストール\nPostgreSQL（ポストグレスキューエル、略称: Postgres）は、オープンソースのRDBMSです。PostgreSQLへは、Pythonからもアクセスでき、Pythonではpsycopg2というパッケージを利用し、PostgreSQLへ接続します。\n\n psy...",
          "link": "https://zenn.dev/u748756h/articles/2bda21dda12f3c",
          "publishedOn": "2023-04-11T23:56:51.000Z",
          "wordCount": 558,
          "title": "【PostgreSQL】PythonでDBにデータをINSERTする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wZ-MNg_r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PostgreSQL%25E3%2580%2591Python%25E3%2581%25A7DB%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592INSERT%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyYmZmNDgzNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wZ-MNg_r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PostgreSQL%25E3%2580%2591Python%25E3%2581%25A7DB%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592INSERT%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyYmZmNDgzNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k14i/articles/0a69cfad7a7642",
          "author": "k14i",
          "description": "PromptGenerator メソッドによって最適化されたプロンプトを使って Azure OpenAI Service で OpenAPI と PlantUML からテストコードを生成する\n前回、Azure OpenAI Service を使って OpenAPI と PlantUML からテストコードを生成する取り組みについて説明しました。\nここで出来ていなかったことの一つとして、プロンプトのチューニングがあります。\n今回、ChatGPT にプロンプトを生成させる PromptGenerator というメソッドを用いて最適化されたプロンプトを生成し、そのプロンプトを用いて前回同様の...",
          "link": "https://zenn.dev/k14i/articles/0a69cfad7a7642",
          "publishedOn": "2023-04-11T23:50:52.000Z",
          "wordCount": 22345,
          "title": "最適化したプロンプトを使って Azure OpenAI Service で OpenAPI と PlantUML からテストコードを生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KB1oIeJK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%2520OpenAPI%2520%25E3%2581%25A8%2520PlantUML%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KB1oIeJK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%2520OpenAPI%2520%25E3%2581%25A8%2520PlantUML%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kecy/articles/25838aab2b1927",
          "author": "kecy",
          "description": "Windows11でPython版のWhisperを使いたかったけどPythonに触るのも久しぶりだったので色々調べながら。備忘録として残しておきます。\n筆者の環境（念のためハードウェアも）\n\nOS：Windows11\nCPU：Intel Core i7 13700K\nグラフィックボード：GeForce RTX 3700 (8GB)\nメモリー：64GB（DDR4 3200MHz 32GB × 2枚）\nマザーボード：ASUS TUF Gaming Z690-Plus WiFi D4\n\n\n Pythonの準備\n\n pyenvのインストール\nWhisperが対応しているのはPython 3.8...",
          "link": "https://zenn.dev/kecy/articles/25838aab2b1927",
          "publishedOn": "2023-04-11T14:31:24.000Z",
          "wordCount": 968,
          "title": "Windows11のGPU環境でPython版のWhisperを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pzyi4g2q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11%25E3%2581%25AEGPU%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Python%25E7%2589%2588%25E3%2581%25AEWhisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pzyi4g2q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11%25E3%2581%25AEGPU%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Python%25E7%2589%2588%25E3%2581%25AEWhisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/90a4778e6f0c45",
          "author": "nakamura196",
          "description": "概要\n以下のシリーズの続きです。\nhttps://zenn.dev/nakamura196/articles/1cc654fc266d17\n今回は、タクソノミーの登録とコンテンツへの追加を行います。\n\n タクソノミーの登録\n事前に、ne_classというタクソノミーをGUIを通じて作成しました。以下のようなURLで一覧できます。\n/jsonapi/taxonomy_term/ne_class\n以下、新しいタクソノミーを登録するプログラムです。host, username, passwordは適宜設定してください。\npayload = {\n    \"data\": {\n        \"...",
          "link": "https://zenn.dev/nakamura196/articles/90a4778e6f0c45",
          "publishedOn": "2023-04-11T10:09:06.000Z",
          "wordCount": 544,
          "title": "Pythonを使ってDrupalのタクソノミーの登録とコンテンツへの追加",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3zkWDfSJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%258E%25E3%2583%259F%25E3%2583%25BC%25E3%2581%25AE%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2581%25B8%25E3%2581%25AE%25E8%25BF%25BD%25E5%258A%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3zkWDfSJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%258E%25E3%2583%259F%25E3%2583%25BC%25E3%2581%25AE%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2581%25B8%25E3%2581%25AE%25E8%25BF%25BD%25E5%258A%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/80bb8802676f2a",
          "author": "nakamura196",
          "description": "概要\n以下の記事で、コンテンツの新規登録の方法を記載しました。\nhttps://zenn.dev/nakamura196/articles/1cc654fc266d17\n今回は、既存のコンテンツの更新・削除を試みます。\n\n アイテムの絞り込み\n以下のようなプログラムにより、登録済みのコンテンツを取得することができます。今回は、titleが「更新前のタイトル」のコンテンツを取得しました。res[\"data\"]は配列になります。\nusername = \"xxx\"\npassword = \"xxx\"\nhost = \"xxx\"\n\nquery = {\n    \"title\": \"更新前のタイトル...",
          "link": "https://zenn.dev/nakamura196/articles/80bb8802676f2a",
          "publishedOn": "2023-04-11T09:40:23.000Z",
          "wordCount": 569,
          "title": "Pythonを使ってDrupalのコンテンツを更新・削除する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OB9b4Sf9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OB9b4Sf9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/herumi/articles/finite-field-05-dsl",
          "author": "herumi",
          "description": "初めに\n今回はPythonで作ったLLVM DSLを実装します。\n記事全体の一覧は有限体の実装一覧参照。\n\n LLVM DSL\n多倍長整数の実装8（LLVMを用いたasmコード生成）ではC++によるLLVMコード生成の方法を紹介しました。\nあれから同じ機能を持ったPythonによるLLVMコード生成DSLを作ったのでそれを紹介します。\ns_xbyak_llvm.pyはDSLからLLVM IRコード（以下ll）を生成するためのPythonツールです。\nもともとは、C++でJITを実現するためのXbyakを開発していたのですが、JITじゃなくてもDSLでアセンブラを掛けるのが便利であるこ...",
          "link": "https://zenn.dev/herumi/articles/finite-field-05-dsl",
          "publishedOn": "2023-04-11T07:53:55.000Z",
          "wordCount": 3799,
          "title": "有限体の実装5（PythonによるLLVM DSLの紹介）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gG7Dr5NF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2589%25E9%2599%2590%25E4%25BD%2593%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%25855%25EF%25BC%2588Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BLLVM%2520DSL%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gG7Dr5NF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2589%25E9%2599%2590%25E4%25BD%2593%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%25855%25EF%25BC%2588Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BLLVM%2520DSL%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/275cbce979bf76",
          "author": "tkyk",
          "description": "if文とは\nExcelで関数を扱ったことがあればイメージしやすいと思います。\nAなら◯◯する、Bなら△△する、というものです。\n基本的なルールは下記の通りです。\nif 条件A:\n\t条件A該当時のアクション\nif 条件B:\n\t条件B該当時のアクション\n ・・・\n「90点以上なら\"合格です、おめでとう！\"、90点未満なら\"不合格です、残念！\"」が表示されるように書きたいと思います。\na = 90\nif a >= 90:\n\tprint (\"合格です、おめでとう！\")\nif a < 90:\n\tprint (\"不合格です、残念！\")\nとすると「合格です、おめでとう！」が表示されます...",
          "link": "https://zenn.dev/tkyk/articles/275cbce979bf76",
          "publishedOn": "2023-04-11T06:38:25.000Z",
          "wordCount": 420,
          "title": "Python入門⑧～if文～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gDaWL3dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A7%25EF%25BD%259Eif%25E6%2596%2587%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gDaWL3dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A7%25EF%25BD%259Eif%25E6%2596%2587%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b41102c1a521eb",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-198 B - Palindrome with leading zeros\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    m = str(int(str(n)[::-1]))\n\n    print('Yes' if m == m[::-1] else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b41102c1a521eb",
          "publishedOn": "2023-04-11T04:04:01.000Z",
          "wordCount": 291,
          "title": "［AtCoder］ABC-198｜B - Palindrome with leading zeros",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PS8HP7z2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-198%25EF%25BD%259CB%2520-%2520Palindrome%2520with%2520leading%2520zeros%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PS8HP7z2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-198%25EF%25BD%259CB%2520-%2520Palindrome%2520with%2520leading%2520zeros%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9a276d057874ff",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-198 A - Div\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(n - 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9a276d057874ff",
          "publishedOn": "2023-04-11T04:04:00.000Z",
          "wordCount": 212,
          "title": "［AtCoder］ABC-198｜A - Div",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--77MWKw1R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-198%25EF%25BD%259CA%2520-%2520Div%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--77MWKw1R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-198%25EF%25BD%259CA%2520-%2520Div%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/e26318c15de5ad",
          "author": "tkyk",
          "description": "リストとは\nPythonでは複数の要素（数値や文字列など。混在も可）を1つの変数に入れることができます。\nそれが「リスト」です。\na = ['私は','鈴木','太郎です。']\nprint (a)\nとすると['私は','鈴木','太郎です。']と表示されます。\nインデックスやスライシングも使えます。\na = ['私は','鈴木','太郎です。']\nprint (a[1],a[2])\nとすると「鈴木 太郎です。」と表示されます。\n\n 変更可能体\n文字列は変更不能体でしたが、リストは変更可能体です。\nそのため、リスト内の一部を入れ替えることも可能です。\na = ['私は','鈴木','太...",
          "link": "https://zenn.dev/tkyk/articles/e26318c15de5ad",
          "publishedOn": "2023-04-11T02:49:49.000Z",
          "wordCount": 510,
          "title": "Python入門⑦～リスト～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kxWWf5tc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A6%25EF%25BD%259E%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kxWWf5tc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A6%25EF%25BD%259E%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/1cc654fc266d17",
          "author": "nakamura196",
          "description": "概要\nPythonを使ってDrupalにコンテンツを追加する機会がありましたので、その備忘録です。以下の記事を参考にしました。\nhttps://weimingchenzero.medium.com/use-python-to-call-drupal-9-core-restful-api-to-create-new-content-9f3fa8628ab4\n\n Drupalの準備\nAmazon Lightsailに作成しました。以下の記事などが参考になります。\nhttps://annai.co.jp/article/use-aws-lightsail\n\n モジュール\n以下をインストール...",
          "link": "https://zenn.dev/nakamura196/articles/1cc654fc266d17",
          "publishedOn": "2023-04-11T02:08:17.000Z",
          "wordCount": 678,
          "title": "Pythonを使ってDrupalにコンテンツを追加する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hiAgMpnO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hiAgMpnO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/8b768b45663351",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100本ノック（自作）11本目~20本目の問題とPythonのサンプルコードです．\n問題の不備や内容の誤り等ありましたら，ご指摘いただけますと幸いです．\n\n 設定\nメールマーケティングの効果を推定するケースについて考えます．\n化粧品のEC販売にて，メディアの会員の中で購買傾向の弱いユーザーにキャンペーンメールを配信します．手元には「過去に小規模なデータで実験を行ったデータ」と「今回購買傾向の弱いユーザーにメールを配信したデータ」が存在するとします．\nデータは，下記フォルダの2つのファイルを利用します．\nhttps://github.com/s1ok69oo/caus...",
          "link": "https://zenn.dev/s1ok69oo/articles/8b768b45663351",
          "publishedOn": "2023-04-10T23:47:51.000Z",
          "wordCount": 2585,
          "title": "因果推論100本ノック(2)回帰分析",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7HXQIdzX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25282%2529%25E5%259B%259E%25E5%25B8%25B0%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7HXQIdzX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25282%2529%25E5%259B%259E%25E5%25B8%25B0%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/eno314/articles/f4d1156420b9e8",
          "author": "むらむー",
          "description": "感想\nPythonでの効果的な型ヒントや型チェックの方法が解説されていて、あまり使ってこなかった機能を知ることができて良かった。Python以外のコードを書く時にも使える内容も結構あった。\n個人的に一番参考になったのが、どのユーザー定義型を使うかの指針のフローチャート。クラスを作る際は不変式を持たせるようにするという考えがあまりなかったので、今後は意識して使い分けたい。\n静的解析ツールやテスト、アーキテクチャに関するツール・ライブラリも多く紹介されていて、試していきたいなと思った。\n\n 個人的に重要だと思ったところ\n\n サマリ\n\nロバストとは\n\n保守性が高い\n変化に対して耐久性が高く...",
          "link": "https://zenn.dev/eno314/articles/f4d1156420b9e8",
          "publishedOn": "2023-04-10T20:57:17.000Z",
          "wordCount": 276,
          "title": "技術書読書ログ「ロバストPython」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ncWsO83E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8%25E8%25AA%25AD%25E6%259B%25B8%25E3%2583%25AD%25E3%2582%25B0%25E3%2580%258C%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588Python%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2582%2589%25E3%2582%2580%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NmEzZjk1NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ncWsO83E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8%25E8%25AA%25AD%25E6%259B%25B8%25E3%2583%25AD%25E3%2582%25B0%25E3%2580%258C%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588Python%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2582%2589%25E3%2582%2580%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NmEzZjk1NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/misakiishihara/articles/7e996ae4b339e9",
          "author": "石原岬",
          "description": "はじめに\nふと良いアイデアが浮かび、フルスタックのWebサービスを一から開発しようと思い立ち、pythonの仮想開発環境としてAnacondaを使用してDRF(Django Rest Framework)を叩いていくことにしたので、投稿（アウトプット）として残していきます。\n\n Anaconda とは\nPython Anacondaとは、Pythonのディストリビューションのことです。Pythonを書いている人なら共感していただけると思いますが、ライブラリに依存している部分が大きいです。規模が大きくなっていくと、あちこちからライブラリを持ってきて管理するのが面倒なので、そういったと...",
          "link": "https://zenn.dev/misakiishihara/articles/7e996ae4b339e9",
          "publishedOn": "2023-04-10T16:14:14.000Z",
          "wordCount": 153,
          "title": "[python]Anacondaで簡単な環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6snopbSu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpython%255DAnaconda%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmOGQ1NTY0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6snopbSu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpython%255DAnaconda%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmOGQ1NTY0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dumbled0re/articles/fd6e5b6a63cae1",
          "author": "dumbled0re",
          "description": "はじめに\n現在、大学でデータサイエンスを学んでいる大学生です。今回はスクレイピングする際に使用するScrapyとPostgreSQLの環境をDockerを使用して作成していきたいと思います。\n\n ディレクトリ構造\n.\n└── crawler\n    ├── app\n    │   ├── src          // コードの格納\n    │   └── .env\n    ├── docker\n    │   ├── db          \n    │   │   ├── init     // コンテナ作成時に初期データを登録するスクリプトを格納する\n    │   │   │...",
          "link": "https://zenn.dev/dumbled0re/articles/fd6e5b6a63cae1",
          "publishedOn": "2023-04-10T15:28:21.000Z",
          "wordCount": 634,
          "title": "【Scrapy+PostgreSQL】Dockerで環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UDxGWBLp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Scrapy%252BPostgreSQL%25E3%2580%2591Docker%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dumbled0re%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MTY4OGExZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UDxGWBLp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Scrapy%252BPostgreSQL%25E3%2580%2591Docker%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dumbled0re%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MTY4OGExZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/79cdca173ddce3",
          "author": "tkyk",
          "description": "インデックス～個々の文字列の取得～\nPythonでは、要素の中で、特定の位置にあるものだ\nけを取り出すことができます。\n特定の1文字だけ取り出したい場合\nprint ('◯◯◯' [左から何番目にあるか])\n特定の範囲を取り出したい場合\nprint ('◯◯◯' [何番目から:何番目まで])\nとします。\n例えば「あいうえお」という文字列があるとします。\n左から数えて、1番目は「あ」、2番目は「い」、3番目は…と並んでいます。\n左から1番目の文字だけを取り出したい場合は、\nprint ('あいうえお' [0])\nとすると「あ」が表示されます。「0番目＝左から1番目」という考え方です。\n...",
          "link": "https://zenn.dev/tkyk/articles/79cdca173ddce3",
          "publishedOn": "2023-04-10T09:15:32.000Z",
          "wordCount": 404,
          "title": "Python入門⑥～インデックス・スライシング～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WqjnGGK8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A5%25EF%25BD%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WqjnGGK8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A5%25EF%25BD%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/eb4d57078ee0f1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-197 B - Visibility\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef main():\n    h, w, x, y = getIntMap()\n    s = getStringRow(h)\n\n    n = 1\n    for xp in range(x, h):\n        if s[xp][y - 1] == '...",
          "link": "https://zenn.dev/hyperdb/articles/eb4d57078ee0f1",
          "publishedOn": "2023-04-10T05:11:01.000Z",
          "wordCount": 623,
          "title": "［AtCoder］ABC-197｜B - Visibility",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ksPNXDxn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-197%25EF%25BD%259CB%2520-%2520Visibility%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ksPNXDxn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-197%25EF%25BD%259CB%2520-%2520Visibility%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d396b92b5bd174",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-197 A - Rotate\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    s += s[0]\n\n    print(s[1:])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d396b92b5bd174",
          "publishedOn": "2023-04-10T05:11:00.000Z",
          "wordCount": 220,
          "title": "［AtCoder］ABC-197｜A - Rotate",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w1KNbamO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-197%25EF%25BD%259CA%2520-%2520Rotate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--w1KNbamO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-197%25EF%25BD%259CA%2520-%2520Rotate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kaeru39/articles/675b5f6b459818",
          "author": "kaeru39",
          "description": "自分で撮影した画像をSegment Anything Model(SAM)に適用した結果を共有します。今回は開発元のMeta社が公開しているデモサイトを使用しました。\nhttps://segment-anything.com/\n\n Segment Anything Model\nMeta AI Researchから1100万枚の画像で学習したセグメンテーションモデルSegment Anything Model(SAM)が2023年4月5日に発表されました。１画像に複数枚マスクが存在するため、マスク単位では約11億マスクが学習データに含まれているとの報告です。\nhttps://ai.face...",
          "link": "https://zenn.dev/kaeru39/articles/675b5f6b459818",
          "publishedOn": "2023-04-10T03:10:00.000Z",
          "wordCount": 324,
          "title": "Segment Anything Modelで自分で撮影してきた写真のセグメンテーション画像を生成して傾向を見る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ICHhDJra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Segment%2520Anything%2520Model%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E5%2586%2599%25E7%259C%259F%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E5%2582%25BE%25E5%2590%2591%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ICHhDJra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Segment%2520Anything%2520Model%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E5%2586%2599%25E7%259C%259F%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E5%2582%25BE%25E5%2590%2591%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kitsune3/articles/c3f015fd37c43d",
          "author": "ギンギツネさん",
          "description": "忙しい人向け\npytestとpytest-covを使ってカバレッジを出力し、依存するコードを洗い出す。\nカバレッジを出力する方法。\n\nローカル環境やリモート上の開発環境でコマンドライン環境が使用できる\n\npytestコマンドを使用する (記事内リンク)\n\n\n\nデータ基盤や分析基盤等Jupyter上でしかコードを実行できない\n\njupyter上ipytestを使用する　(記事内リンク)\n\n\n\n関数の呼び出し履歴を見たい\n\n標準ライブラリのtraceモジュールを使用する (記事内リンク)\n\n\n\n\nこんな感じで\n\n\n はじめに\nプロジェクト途中参加してコードを修正してくださいと言われた時、...",
          "link": "https://zenn.dev/kitsune3/articles/c3f015fd37c43d",
          "publishedOn": "2023-04-09T19:30:23.000Z",
          "wordCount": 573,
          "title": "雑にPythonの関数修正時にそれが呼び出している処理を特定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PJYi_GdF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259B%2591%25E3%2581%25ABPython%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E4%25BF%25AE%25E6%25AD%25A3%25E6%2599%2582%25E3%2581%25AB%25E3%2581%259D%25E3%2582%258C%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AE%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%2584%25E3%2583%258D%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0YWE5YTA4NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PJYi_GdF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259B%2591%25E3%2581%25ABPython%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E4%25BF%25AE%25E6%25AD%25A3%25E6%2599%2582%25E3%2581%25AB%25E3%2581%259D%25E3%2582%258C%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AE%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%2584%25E3%2583%258D%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0YWE5YTA4NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/watchstep/articles/56ee01f6eb3cca",
          "author": "watchstep",
          "description": "Pynecone이란? (그래도 React 종말각은 에바인 것 같아요)\n\nhttps://www.youtube.com/watch?v=47BL6WLZJ1g&t=1s\n특징 (공식 사이트 https://pynecone.io/ 에서 말하는…)\n\n\nPure Python\n새로운 언어 배울 필요 없어요 파이썬이랑 해당 프레임워크를 사용할 줄만 알면 돼요\nEasy to Learn\n\nFull Flexibility\n확장성 좋아요\n\nBatteries Included\nPynecone 하나로  프론트엔드, 백엔드, 배포 다 할 수 있어요\n\n\n...",
          "link": "https://zenn.dev/watchstep/articles/56ee01f6eb3cca",
          "publishedOn": "2023-04-09T18:51:35.000Z",
          "wordCount": 1307,
          "title": "[Pynecone] Pynecone 시작하기 (Python으로 웹앱 만들기)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--D6Dmv3lM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPynecone%255D%2520Pynecone%2520%25EC%258B%259C%25EC%259E%2591%25ED%2595%2598%25EA%25B8%25B0%2520%2528Python%25EC%259C%25BC%25EB%25A1%259C%2520%25EC%259B%25B9%25EC%2595%25B1%2520%25EB%25A7%258C%25EB%2593%25A4%25EA%25B8%25B0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watchstep%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyODEyNmI2MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--D6Dmv3lM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPynecone%255D%2520Pynecone%2520%25EC%258B%259C%25EC%259E%2591%25ED%2595%2598%25EA%25B8%25B0%2520%2528Python%25EC%259C%25BC%25EB%25A1%259C%2520%25EC%259B%25B9%25EC%2595%25B1%2520%25EB%25A7%258C%25EB%2593%25A4%25EA%25B8%25B0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watchstep%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyODEyNmI2MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/6e5c6611240662",
          "author": "しろ",
          "description": "テキストから音楽の生成からファイル形式の変換までの一通りのものになります。\n\n実際に作成した音楽\nhttps://drive.google.com/drive/folders/1L9_Y27YUhDPiIu7MoA9vnViNcsMyg0ql?usp=sharing\n\n 使用ライブラリ\n\n生成時使うもの\n\npytorch\nsamplings\ntransformers\nunidecode\n\n\n音声の変換\n\nmusic21\nmidi2audio\n\n\nその他\n\nos\nglob\ndatetime\nrandom\n\n\n\n\n 必要なライブラリのインストール\npytorchは公式サイトに行き任意のものを...",
          "link": "https://zenn.dev/shiro_toy_box/articles/6e5c6611240662",
          "publishedOn": "2023-04-09T14:00:50.000Z",
          "wordCount": 2441,
          "title": "テキストから音楽を作るAIをさわる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mOtd0EUp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258BAI%25E3%2582%2592%25E3%2581%2595%25E3%2582%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mOtd0EUp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258BAI%25E3%2582%2592%25E3%2581%2595%25E3%2582%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/ce53b9d96bbe32",
          "author": "laiso",
          "description": "AI Functionsのコンセプトがヤバ過ぎる(Twitterインプレッション構文)\nhttps://www.askmarvin.ai/guide/concepts/ai_functions/\nAI Functionsは表題どうりGPTに関数のシグネチャと引数を送って返り値を生成する。必要なのは\n\nシグネチャ: def list_fruits(n: int) -> list[str]:\n\nドキュメント: \"\"\"Generate a list of n fruits\"\"\"\n\n入力値: 3\n\n\nの3つ。\nこれに対してGPTが list[str] の形式で応答してくると、プログラムにR...",
          "link": "https://zenn.dev/laiso/articles/ce53b9d96bbe32",
          "publishedOn": "2023-04-09T13:32:12.000Z",
          "wordCount": 216,
          "title": "GPTに関数のシグネチャと引数を送って返り値を生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--F1zJLD9F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E3%2581%25AB%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25A8%25E5%25BC%2595%25E6%2595%25B0%25E3%2582%2592%25E9%2580%2581%25E3%2581%25A3%25E3%2581%25A6%25E8%25BF%2594%25E3%2582%258A%25E5%2580%25A4%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--F1zJLD9F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E3%2581%25AB%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25A8%25E5%25BC%2595%25E6%2595%25B0%25E3%2582%2592%25E9%2580%2581%25E3%2581%25A3%25E3%2581%25A6%25E8%25BF%2594%25E3%2582%258A%25E5%2580%25A4%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/909ca2e858f43c",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100本ノック（自作）1本目~10本目の問題とPythonのサンプルコードです．\n問題の不備や内容の誤り等ありましたら，ご指摘いただけますと幸いです．\n\n 設定\nアナリストの分析レポートが営業の受注件数にどれくらい貢献しているかを分析するケースを考えます．\n今回は，下記フォルダの「causal_knock1.csv」ファイルのデータを利用します．\nhttps://github.com/s1ok69oo/causal_inference_100knock/tree/main/data\nデータのカラムの概要は下記の通りです．\n\n\n\n変数名\nデータの概要\n備考\n\n\n\n\ny...",
          "link": "https://zenn.dev/s1ok69oo/articles/909ca2e858f43c",
          "publishedOn": "2023-04-09T10:50:47.000Z",
          "wordCount": 1197,
          "title": "因果推論100本ノック(1)因果効果とランダム割付",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GDNH0t-L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25281%2529%25E5%259B%25A0%25E6%259E%259C%25E5%258A%25B9%25E6%259E%259C%25E3%2581%25A8%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E5%2589%25B2%25E4%25BB%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GDNH0t-L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25281%2529%25E5%259B%25A0%25E6%259E%259C%25E5%258A%25B9%25E6%259E%259C%25E3%2581%25A8%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E5%2589%25B2%25E4%25BB%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/midra_lab/articles/5ac35094ec53c2",
          "author": "ayousanz",
          "description": "概要\nTwitterAPIを使って、ユーザーの中から関連性のあるユーザーを絞り込む方法を紹介します。\nPythonのライブラリであるTweepyを使用して、TwitterAPIを叩いています。\n\n 環境\n\nDocker image: python:3.10\nTweepy: 4.13.0\n\n\n Tweepyとは\nTweepyは、Python用のTwitter\nAPIライブラリで、Twitterのデータや機能に簡単にアクセスできるように設計されています。主な機能には、ツイートの投稿、タイムラインの取得、ユーザー情報の取得、検索などがあります。簡潔なコードで効率的なTwitterアプリケー...",
          "link": "https://zenn.dev/midra_lab/articles/5ac35094ec53c2",
          "publishedOn": "2023-04-09T10:20:54.000Z",
          "wordCount": 667,
          "title": "TwitterAPI(Tweepy)で関連性のあるユーザーを絞り込む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Zs0r20Zf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TwitterAPI%2528Tweepy%2529%25E3%2581%25A7%25E9%2596%25A2%25E9%2580%25A3%25E6%2580%25A7%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E7%25B5%259E%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2528%25E3%2583%259F%25E3%2583%2589%25E3%2583%25A9%25E3%2583%259C%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ayousanz%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGI0ZTBiOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTljMWRhOGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Zs0r20Zf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TwitterAPI%2528Tweepy%2529%25E3%2581%25A7%25E9%2596%25A2%25E9%2580%25A3%25E6%2580%25A7%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E7%25B5%259E%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2528%25E3%2583%259F%25E3%2583%2589%25E3%2583%25A9%25E3%2583%259C%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ayousanz%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGI0ZTBiOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTljMWRhOGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/midra_lab/articles/e1078b6d669c17",
          "author": "ayousanz",
          "description": "概要\nPythonのpickleモジュールを使ってデータをバイナリーファイルとして保存/読み込みする方法を実装します。\n\n 環境\n\nDocker image: python:3.10\nWindows 10\n\n\n 内容\n\n pickleの概要\n\nPython オブジェクトの直列化および直列化されたオブジェクトの復元のためのバイナリプロトコルを実装しています。\n\nPython オブジェクトの直列化より\nまたソースコードは以下になっています。\nhttps://github.com/python/cpython/blob/3.10/Lib/pickle.py\n\n ライブラリのインポート\npi...",
          "link": "https://zenn.dev/midra_lab/articles/e1078b6d669c17",
          "publishedOn": "2023-04-09T08:18:15.000Z",
          "wordCount": 294,
          "title": "Pythonでpickleを用いてデータをバイナリーファイとして保存する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QMVYvFpG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7pickle%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2528%25E3%2583%259F%25E3%2583%2589%25E3%2583%25A9%25E3%2583%259C%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ayousanz%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGI0ZTBiOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTljMWRhOGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QMVYvFpG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7pickle%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2528%25E3%2583%259F%25E3%2583%2589%25E3%2583%25A9%25E3%2583%259C%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ayousanz%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGI0ZTBiOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTljMWRhOGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/83288d70f681d5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-196 A - Difference Max\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n    c, d = getIntMap()\n\n    print(b - c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/83288d70f681d5",
          "publishedOn": "2023-04-09T07:49:55.000Z",
          "wordCount": 247,
          "title": "［AtCoder］ABC-196｜A - Difference Max",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ysyLhmAK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-196%25EF%25BD%259CA%2520-%2520Difference%2520Max%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ysyLhmAK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-196%25EF%25BD%259CA%2520-%2520Difference%2520Max%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4de4af3de10583",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-196 B - Round Down\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    x = getString()\n\n    print(x.split('.')[0])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/4de4af3de10583",
          "publishedOn": "2023-04-09T07:49:55.000Z",
          "wordCount": 217,
          "title": "［AtCoder］ABC-196｜B - Round Down",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fZL1vTqv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-196%25EF%25BD%259CB%2520-%2520Round%2520Down%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fZL1vTqv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-196%25EF%25BD%259CB%2520-%2520Round%2520Down%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tesla/articles/323770f98b343c",
          "author": "tesla",
          "description": "こんにちは。\nフロントエンジニアを主にやっている「てすら」です。\nzennや技術ブログ系は初めてなので読みづらいところがありましたらすみません...\n最近は生成AIやChatGPT周りについて調べることが増えました。\nChatGPTを使いたいものの、企業によっては情報漏洩の観点から使えないことがあると思います。\nそこで特定の単語だけ暗号化して送信するAPIのWrapperを作成し、情報漏洩の可能性を最小限に抑えるようなものを作成しました。\n\n この記事は誰向けか\nChatGPTなどのLLMを使用したいが、データの秘匿性の観点などから使用に踏み切れない方\n（API側のオプトアウトだけでは不...",
          "link": "https://zenn.dev/tesla/articles/323770f98b343c",
          "publishedOn": "2023-04-09T06:19:14.000Z",
          "wordCount": 1211,
          "title": "業務で使うためのChatGPTのAPI Wrapperを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Svak393t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25AD%25E5%258B%2599%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEChatGPT%25E3%2581%25AEAPI%2520Wrapper%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tesla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MmIzODI1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Svak393t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25AD%25E5%258B%2599%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEChatGPT%25E3%2581%25AEAPI%2520Wrapper%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tesla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MmIzODI1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yskn_sid25/articles/b2ecc4b220d54a",
          "author": "Kanon",
          "description": "TL;DR\nこの度オープンソースでプロジェクトを公開したので、そのために準備していったことや公開したアプリについて話します。\n\n はじめに\n🎉 この度、オープンソースでアプリケーションを公開しました 🎉\nその名も「おたくつーる」と言いまして、私のようなオタクがより豊かなオタクライフを送れるようなアプリにしたいと思い、アジャイル方式で徐々に機能を拡張させていこうと考えています。\nhttps://github.com/ysknsid25/otaku-tool\n\nいまあるのは、元々個人的に使っていた、\"超 A&G の番組情報を通知する機能\"のみです。\nこの次は、これまた別に作ってい...",
          "link": "https://zenn.dev/yskn_sid25/articles/b2ecc4b220d54a",
          "publishedOn": "2023-04-09T03:56:34.000Z",
          "wordCount": 566,
          "title": "エンジニア5周年記念にオープンソースプロジェクトを自分で立ち上げた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lQHP3_B---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A25%25E5%2591%25A8%25E5%25B9%25B4%25E8%25A8%2598%25E5%25BF%25B5%25E3%2581%25AB%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMRTR5OUhOc3hkUm9vWkVlUDBackFyU0NvWG51SlU4RkpjUHpYamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lQHP3_B---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A25%25E5%2591%25A8%25E5%25B9%25B4%25E8%25A8%2598%25E5%25BF%25B5%25E3%2581%25AB%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMRTR5OUhOc3hkUm9vWkVlUDBackFyU0NvWG51SlU4RkpjUHpYamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/roistaff/articles/54351031509174",
          "author": "Staff Roi",
          "description": "インターネットサーフィンをしていると様々なステータスコードに出会うことはありませんか？ 404 Not foundやJavascriptで非同期通信するときの正常な200など、RFCの仕様書などでこれらは全て規格として決まっています。\n今回はその中でも偶然見つけた奇妙なステータスコードを紹介したいと思います。\n\n HTTP 451 Unavailable For Legal Reasons\nMDNのドキュメントはこちら\nhttps://developer.mozilla.org/ja/docs/Web/HTTP/Status/451\nこのステータスコードは国家にとって国民に知られたくない...",
          "link": "https://zenn.dev/roistaff/articles/54351031509174",
          "publishedOn": "2023-04-09T03:45:57.000Z",
          "wordCount": 500,
          "title": "奇妙なHTTPステータスコード達",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3kZPgv_u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A5%2587%25E5%25A6%2599%25E3%2581%25AAHTTP%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2581%2594%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3kZPgv_u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A5%2587%25E5%25A6%2599%25E3%2581%25AAHTTP%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2581%2594%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/manuriya/articles/36ec9b5414069d",
          "author": "manuriya",
          "description": "こんにちは、manuriya（@lTlanual）と申します。\n元々はコンピュータビジョン関連の仕事をしており、最近は航空写真や衛星画像を入力とした深層学習モデルの開発をしています。\nSolafuneで開催された衛星画像の超解像コンペに参加しました。\n諸事情によりコンペに参加できる日数が平日5日（学習時間を除くと10時間程度）しかなかったため、なるべく軽量なモデル（≒学習時間が短い）で効果的にモデルを作る必要がありました。\n本記事では超解像モデルを作るにあたってどのような考え方で作成したかを順を追って記載したいと思います。\n\ncf. @solafune(https://solafune....",
          "link": "https://zenn.dev/manuriya/articles/36ec9b5414069d",
          "publishedOn": "2023-04-09T03:39:13.000Z",
          "wordCount": 282,
          "title": "[solafune] 衛星画像の5倍超解像度化 (for OSS) の解法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rui40p4V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bsolafune%255D%2520%25E8%25A1%259B%25E6%2598%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE5%25E5%2580%258D%25E8%25B6%2585%25E8%25A7%25A3%25E5%2583%258F%25E5%25BA%25A6%25E5%258C%2596%2520%2528for%2520OSS%2529%2520%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:manuriya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYjM1Nzk5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rui40p4V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bsolafune%255D%2520%25E8%25A1%259B%25E6%2598%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE5%25E5%2580%258D%25E8%25B6%2585%25E8%25A7%25A3%25E5%2583%258F%25E5%25BA%25A6%25E5%258C%2596%2520%2528for%2520OSS%2529%2520%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:manuriya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYjM1Nzk5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/fdb895523aed56",
          "author": "Matsuzaki",
          "description": "Pickleって何？\nプログラムを実行し終えた後も作成したオブジェクトを保存する機能を提供するのがPickle moduleらしいです。\n保存する方法としてはバイト列にオブジェクトを変換して保存するらしい\nバイナリとしてファイルみたいな形にして保存することでプログラムを実行し終えた後にも再利用することができるってわけだ。\n\n直列化（serialize)とはオブジェクトとそのインスタンス変数をバイト列やxmlに変換することらしい。\nこれによりオブジェクトをファイルとして保存したり、ネットワークで送信することができるようになる。\nserializeされたオブジェクトを復元する処理はdes...",
          "link": "https://zenn.dev/zi_matsu/articles/fdb895523aed56",
          "publishedOn": "2023-04-09T01:32:44.000Z",
          "wordCount": 190,
          "title": "4/3~4/7で学んだこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YNxw8_5T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F3%7E4%252F7%25E3%2581%25A7%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YNxw8_5T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F3%7E4%252F7%25E3%2581%25A7%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kopaneet/articles/306660d597bcfc",
          "author": "コパン",
          "description": "4月から新しい環境になって、Pythonの環境構築があったので今後忘れないためのメモです。\n未来の自分と誰かの役にたてば嬉しいです。\n\n anyenvとは\n「anyenv」は「All in one for env」と言われているオールインワンのバージョンマネージです。\nnodenvやpyenv、rbenvなどenv系が色々ありますが、それらをまとめて管理することができます。\nプロジェクト毎に異なるバージョンを使用したい場合に便利な*envをまとめて管理できるので優れものです。\n\n anyenvのインストール\n早速anyenvをインストールする方法です。\nインストールにはgitを使用してc...",
          "link": "https://zenn.dev/kopaneet/articles/306660d597bcfc",
          "publishedOn": "2023-04-09T00:47:19.000Z",
          "wordCount": 905,
          "title": "anyenv + pyenv + poetry でPythonの開発環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IYGoFL32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anyenv%2520%252B%2520pyenv%2520%252B%2520poetry%2520%25E3%2581%25A7Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%2591%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlhjUjhXSy1xbjNDV2pJcHMwTzBfd1V1TFQtS3NMbE1iQjVsMXlMZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IYGoFL32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anyenv%2520%252B%2520pyenv%2520%252B%2520poetry%2520%25E3%2581%25A7Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%2591%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlhjUjhXSy1xbjNDV2pJcHMwTzBfd1V1TFQtS3NMbE1iQjVsMXlMZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/grahamian/articles/cfcd4039194117",
          "author": "Grahamian",
          "description": "プライベートで使っているPCをApple Silicon M2チップを搭載したMac mini 2023に変えたのでPythonの環境をゼロから構築しました。\nmacOSのバージョンはVentura 13.2.1です\n特に大したことはしていないですが備忘録として。\n\n 環境構築\n\n brew\nまずはbrewから入れます。とにかくこれを入れないと何も進まないので。\n公式のページにインストールするときのコマンドが書かれているのでこれをそのまま実行します。\nインストール自体はこれだけで完了ですが、たぶんインストールの一番最後に「PATHを通せ」みたいなメッセージが表示されているのでそれも実行し...",
          "link": "https://zenn.dev/grahamian/articles/cfcd4039194117",
          "publishedOn": "2023-04-08T15:39:55.000Z",
          "wordCount": 368,
          "title": "ゼロからM2 MacにPython環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bMFIMLc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589M2%2520Mac%25E3%2581%25ABPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Grahamian%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlZTdjNTBkNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bMFIMLc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589M2%2520Mac%25E3%2581%25ABPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Grahamian%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlZTdjNTBkNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/stranglehello/articles/a6efd1f2bcec1b",
          "author": "stranglehello",
          "description": "ちょっと直近使うこともあったので簡単にメモとなります。\n下記の記事などを参考にさせて頂いています。\nhttps://zenn.dev/aldagram_tech/articles/8e09cff2bd74a1\nhttps://qiita.com/m77so/items/8b0d608489c602f91a87\n\n 前置き\n\n Storage Write APIのいいところ\n\n公式が推している（たしか）\noffsetを用いたデータの格納の観点で、冪等席を担保しやすい構成である\ngRPCを通して高速にデータの格納を行えるところ\ninsertALL（streaming api）に対して従量課金...",
          "link": "https://zenn.dev/stranglehello/articles/a6efd1f2bcec1b",
          "publishedOn": "2023-04-08T15:14:55.000Z",
          "wordCount": 1759,
          "title": "Cloud Functions（Python） で BigQuery Storage Write APIを叩く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IJA2VUHv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Functions%25EF%25BC%2588Python%25EF%25BC%2589%2520%25E3%2581%25A7%2520BigQuery%2520Storage%2520Write%2520API%25E3%2582%2592%25E5%258F%25A9%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stranglehello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNjcyNDhkMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IJA2VUHv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Functions%25EF%25BC%2588Python%25EF%25BC%2589%2520%25E3%2581%25A7%2520BigQuery%2520Storage%2520Write%2520API%25E3%2582%2592%25E5%258F%25A9%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stranglehello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNjcyNDhkMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okuma/articles/satellite_srtm_3dview",
          "author": "shun",
          "description": "無料で取得できるデータと Python を使って、関東近辺の地形を 3D 表示させます。\nここでは、NASA の SRTM (Shuttle Radar Topography Mission) データを使用し、Python で 3D モデルを作成します。\n\n 実行環境\n\nUbuntu 22.04\nPython 3.10.4\n\n\n データの取得\nSRTM データは、NASA が提供する無料の地形データです。\n\n USGS EarthExplorer から SRTM データを取得する\n\n\nUSGS EarthExplorer にアクセス\n以下のリンクから USGS EarthExplorer...",
          "link": "https://zenn.dev/okuma/articles/satellite_srtm_3dview",
          "publishedOn": "2023-04-08T13:37:19.000Z",
          "wordCount": 887,
          "title": "衛星データを使って関東近辺の地形を3D表示させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VkQggMBf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%25A2%25E6%259D%25B1%25E8%25BF%2591%25E8%25BE%25BA%25E3%2581%25AE%25E5%259C%25B0%25E5%25BD%25A2%25E3%2582%25923D%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shun%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5ODE5ZTdlMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VkQggMBf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%25A2%25E6%259D%25B1%25E8%25BF%2591%25E8%25BE%25BA%25E3%2581%25AE%25E5%259C%25B0%25E5%25BD%25A2%25E3%2582%25923D%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shun%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5ODE5ZTdlMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tremendous1192/articles/fc7b4a9b87b4e0",
          "author": "Tremendous1192",
          "description": "はじめに\n最近kaggleを始めまして、ただ単にlightgbmにデータを食べさせるだけでは限界があることが分かりました。\n急がば回れ、さらに基礎を固めた方が良いのでしょう。\nこの記事では、私が肌感をつかむために学んだsklearnのメソッド等を紹介していきます。\nsklearnを使う理由は、こちらの方が幅広い処理を行うことができるからです。\n\n 書籍\n使用したデータは統計的機械学習ことはじめの購入者特典ダウンロードデータです。\n多数のケーススタディをグラフィカルに紹介しておりますので、初心者向けの本を何冊か読んだ後に読むとちょうどよいかもしれません。\n!\n書籍では密度分布で終わりで...",
          "link": "https://zenn.dev/tremendous1192/articles/fc7b4a9b87b4e0",
          "publishedOn": "2023-04-08T09:00:00.000Z",
          "wordCount": 3399,
          "title": "sklearnで統計的機械学習ことはじめ 第1章 ビッグデータの可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ck1KE9M0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sklearn%25E3%2581%25A7%25E7%25B5%25B1%25E8%25A8%2588%25E7%259A%2584%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%2520%25E7%25AC%25AC1%25E7%25AB%25A0%2520%25E3%2583%2593%25E3%2583%2583%25E3%2582%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tremendous1192%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZWU3MTRkMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ck1KE9M0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sklearn%25E3%2581%25A7%25E7%25B5%25B1%25E8%25A8%2588%25E7%259A%2584%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%2520%25E7%25AC%25AC1%25E7%25AB%25A0%2520%25E3%2583%2593%25E3%2583%2583%25E3%2582%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tremendous1192%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZWU3MTRkMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takiko/articles/24217eece242e1",
          "author": "takigon",
          "description": "概要\nLLM(大規模言語モデル)の統合的なライブラリである、LangChain の基本的な使い方についての解説記事です。\nLangChain は、Microsoft が提供する Visual ChatGPTなどにも、内部的に使用されており、今後のLLM開発のデファクトスタンダードになり得るライブラリです。\nLangChain は現在、Python と TypeScript の環境でのみ使用可能であり、本記事は TypeScript での解説になります。\nただ、Pythonでの実装方法も殆ど変わらないため、Pythonでの実装を考えてる方にも参考程度にはなるかと思います。\n\n この記事...",
          "link": "https://zenn.dev/takiko/articles/24217eece242e1",
          "publishedOn": "2023-04-08T08:00:53.000Z",
          "wordCount": 3252,
          "title": "GPTをドーピングする LangChain 基礎編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--biz4Lqrs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E3%2582%2592%25E3%2583%2589%25E3%2583%25BC%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2520LangChain%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takigon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZTE0YmI0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--biz4Lqrs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E3%2582%2592%25E3%2583%2589%25E3%2583%25BC%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2520LangChain%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takigon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZTE0YmI0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/11f1494e1b0a71",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-195 B - Many Oranges\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, w = getIntMap()\n\n    wg = w * 1000\n\n    c = []\n    for i in range(wg // b, (wg // a) + 1):\n        if i * a <= wg <= i * b:\n            c.append(i)\n\n    print('UNSATISFI...",
          "link": "https://zenn.dev/hyperdb/articles/11f1494e1b0a71",
          "publishedOn": "2023-04-08T06:37:43.000Z",
          "wordCount": 403,
          "title": "［AtCoder］ABC-195｜B - Many Oranges",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--30I85qeI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-195%25EF%25BD%259CB%2520-%2520Many%2520Oranges%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--30I85qeI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-195%25EF%25BD%259CB%2520-%2520Many%2520Oranges%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0e87e505b892e4",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-195 A - Health M Death\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    m, n = getIntMap()\n\n    print('Yes' if n % m == 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/0e87e505b892e4",
          "publishedOn": "2023-04-08T06:37:42.000Z",
          "wordCount": 260,
          "title": "［AtCoder］ABC-195｜A - Health M Death",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I_mKoFvd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-195%25EF%25BD%259CA%2520-%2520Health%2520M%2520Death%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I_mKoFvd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-195%25EF%25BD%259CA%2520-%2520Health%2520M%2520Death%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/7e50cba9988896",
          "author": "tirimen",
          "description": "本記事の目的\n自分の勉強用。今回はベイズ推定のサンプリング方法の第二弾。第一弾のギブスサンプリングについてはこちらをどうぞ。\nhttps://zenn.dev/tirimen/articles/80248e2caf2d63\n今回はメトロポリス法についてまとめていく。\n\n ギブスサンプリングとメトロポリス法の使い分けについて\nどちらもMCMC法のサンプリング方法であるが、適した場面が異なる。一般的に言われているのが、ギブスサンプリングは条件付き確率が求めやすい形のとき、メトロポリス法は条件付き確率が求めにくい形のときに用いられるということ。ってことはメトロポリス法の方が汎用性があり、ず...",
          "link": "https://zenn.dev/tirimen/articles/7e50cba9988896",
          "publishedOn": "2023-04-08T01:47:00.000Z",
          "wordCount": 1348,
          "title": "MCMC法のメトロポリス法をやってみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DUZHDEFq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%2588%25E3%2583%25AD%25E3%2583%259D%25E3%2583%25AA%25E3%2582%25B9%25E6%25B3%2595%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DUZHDEFq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%2588%25E3%2583%25AD%25E3%2583%259D%25E3%2583%25AA%25E3%2582%25B9%25E6%25B3%2595%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/a5c0fa5c2230a7",
          "author": "Tanny",
          "description": "概要\nこの記事では、SwitchBot温湿度計のデータをAPI経由で取得し、時系列DBのInfluxDBに保存した上で、Grafanaでダッシュボード化する方法を解説します。\n\nGrafanaで作成したダッシュボード\n\n SwitchBot温湿度計について\nSwitchBot温湿度計は、温度と湿度を計測するセンサーです。温度と湿度をデバイスの画面で確認する以外にも、他のSwitchBotデバイスと連携し、「温度が低下したら暖房をつける」といったトリガー起動に活用できます。\n2023年3月現在は2種類の温湿度計が販売されており、この記事では両方に対応しています。「プラス」の方が液晶を見...",
          "link": "https://zenn.dev/tanny/articles/a5c0fa5c2230a7",
          "publishedOn": "2023-04-07T12:08:04.000Z",
          "wordCount": 2560,
          "title": "【SwitchBot】温湿度計のデータをPython × InfluxDB × Grafanaでダッシュボード化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--78KaWucV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SwitchBot%25E3%2580%2591%25E6%25B8%25A9%25E6%25B9%25BF%25E5%25BA%25A6%25E8%25A8%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Python%2520%25C3%2597%2520InfluxDB%2520%25C3%2597%2520Grafana%25E3%2581%25A7%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--78KaWucV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SwitchBot%25E3%2580%2591%25E6%25B8%25A9%25E6%25B9%25BF%25E5%25BA%25A6%25E8%25A8%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Python%2520%25C3%2597%2520InfluxDB%2520%25C3%2597%2520Grafana%25E3%2581%25A7%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/roistaff/articles/c78a26dd99e2a5",
          "author": "Staff Roi",
          "description": "Pythonでもお馴染みのメモリ使用量などを取得するライブラリ、psutilのGo版gopsutilというライブラリがあったので軽く紹介したいと思います。\n\n 使い方\n\n Get package\nhttps://github.com/shirou/gopsutil\n以下のコマンドからいけます。\ngo get github.com/shirou/gopsutil/v3/mem\n\n Usage\npackage main\nimport(\n\t\"github.com/shirou/gopsutil/v3/mem\"\n\t\"fmt\"\n\t)\nfunc main(){\n\tv, _ := mem.Virtua...",
          "link": "https://zenn.dev/roistaff/articles/c78a26dd99e2a5",
          "publishedOn": "2023-04-07T11:47:39.000Z",
          "wordCount": 833,
          "title": "Go psutilライブラリの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WMOtcN9B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%2520psutil%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WMOtcN9B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%2520psutil%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mossan_hoshi/articles/20230407_cheatsheep",
          "author": "mossan_hoshi",
          "description": "はじめに\n\n個人的に主要言語と思う8言語＆スクリプト（python, JavaScript, Rust, Haskell, C++, C#, bash, PowerShell)のチートシートです\nインデントのために全角空白を含んでます。コピペする場合は気を付けて下さい\nChatGPT(GPT-4)に書かせたコードなので一部変なコードがあるかもしれません\n動かない場合はChatGPTにコードと一緒に\"＜プログラミング名＞で＜大分類名＞の＜小分類名＞をやろうと思うんだけど、このコードを修正して。\"的なことを書けば大抵の場合修正してくれます\n\n\n チートシート\n\n スプレッドシート版（こち...",
          "link": "https://zenn.dev/mossan_hoshi/articles/20230407_cheatsheep",
          "publishedOn": "2023-04-07T10:24:41.000Z",
          "wordCount": 7829,
          "title": "【随時更新】主要プログラミング言語8種チートシート",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rwPBLxSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E3%2580%2591%25E4%25B8%25BB%25E8%25A6%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E8%25E7%25A8%25AE%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mossan_hoshi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dfWU0zbjhpS2hvOGtURGlHdGNzYldTQ1lneVNqbHNSd1pRTlVFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rwPBLxSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E3%2580%2591%25E4%25B8%25BB%25E8%25A6%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E8%25E7%25A8%25AE%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mossan_hoshi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dfWU0zbjhpS2hvOGtURGlHdGNzYldTQ1lneVNqbHNSd1pRTlVFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/c2cfdda734b61c",
          "author": "ryohtaka",
          "description": "はじめに\n2023 年 3 月 21 日に Azrue OpenAI Service で GPT-4 の登録制プレビューが開始しましたので、情報をまとめました。\n\nAzure OpenAI Service に GPT-4 を導入\nAzure OpenAI Service の新機能 - 2023 年 3 月\n\nちなみに、本家 OpenAI での GPT-4 の発表と同じタイミングで、実は 新しい Bing の背後には GPT-4 がいたことが公表されました。さらにその直後、Microsoft 365 Copilot や Copilot in Microsoft Power Automa...",
          "link": "https://zenn.dev/microsoft/articles/c2cfdda734b61c",
          "publishedOn": "2023-04-07T08:25:37.000Z",
          "wordCount": 3939,
          "title": "Azure OpenAI Service で GPT-4 API を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--463HIYqn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%2520GPT-4%2520API%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--463HIYqn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%2520GPT-4%2520API%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/dumbled0re/articles/744c783a8b3992",
          "author": "dumbled0re",
          "description": "はじめに\n現在、大学でデータサイエンスを学んでいる大学生です。この記事ではPyTorch+LSTMを使用して、仮想通貨であるXRP(リップル)の予測をしていきたいと思います。\n\n データの準備\n今回はInvesting.comで2015年1月から現在(2023/04/06)まで公開されている8年間のXRPデータを使用します。こちらからcsvファイルをダウンロードしてください。\n\n 実行環境\n\nGoogle Colaboratory\nPython 3.8.16\n\n\n ライブラリのインポート\nimport os\nimport datetime\nimport math\nimport num...",
          "link": "https://zenn.dev/dumbled0re/articles/744c783a8b3992",
          "publishedOn": "2023-04-07T07:52:10.000Z",
          "wordCount": 1953,
          "title": "【PyTorch+LSTM】仮想通貨の予測",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xPqGqgvX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PyTorch%252BLSTM%25E3%2580%2591%25E4%25BB%25AE%25E6%2583%25B3%25E9%2580%259A%25E8%25B2%25A8%25E3%2581%25AE%25E4%25BA%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dumbled0re%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ym16Y3poTmRJWlFDZEtDOEx1OUxzdS1yRlVKR3NXU3l5UzZOZWQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xPqGqgvX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PyTorch%252BLSTM%25E3%2580%2591%25E4%25BB%25AE%25E6%2583%25B3%25E9%2580%259A%25E8%25B2%25A8%25E3%2581%25AE%25E4%25BA%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dumbled0re%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ym16Y3poTmRJWlFDZEtDOEx1OUxzdS1yRlVKR3NXU3l5UzZOZWQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ee87e1bc84af20",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-194 A - I Scream\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    t = 4\n    if a + b >= 15 and b >= 8:\n        t = 1\n    elif a + b >= 10 and b >= 3:\n        t = 2\n    elif a + b >= 3:\n        t = 3\n    print(t)\n...",
          "link": "https://zenn.dev/hyperdb/articles/ee87e1bc84af20",
          "publishedOn": "2023-04-07T04:48:53.000Z",
          "wordCount": 359,
          "title": "［AtCoder］ABC-194｜A - I Scream",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y8RqFV6F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-194%25EF%25BD%259CA%2520-%2520I%2520Scream%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y8RqFV6F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-194%25EF%25BD%259CA%2520-%2520I%2520Scream%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/942476c4519af0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-194 B - Job Assignment\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    l = getIntListRow(n)\n\n    a = [i for i, j in l]\n    b = [j for i, j in l]\n\n    t = max(a) +...",
          "link": "https://zenn.dev/hyperdb/articles/942476c4519af0",
          "publishedOn": "2023-04-07T04:48:52.000Z",
          "wordCount": 500,
          "title": "［AtCoder］ABC-194｜B - Job Assignment",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fEHgALlt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-194%25EF%25BD%259CB%2520-%2520Job%2520Assignment%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fEHgALlt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-194%25EF%25BD%259CB%2520-%2520Job%2520Assignment%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/treefield/articles/f6e8b879387d02",
          "author": "treefield",
          "description": "DjangoアプリをHerokuにデプロイしたので手順を記録します。\n環境は、\nmacOS 12.6.4\nPython 3.10.10\nDjango 4.0.2\n基本的にはこのサイトを参考にさせてもらいました。大変助かりました。\nDjangoアプリをHerokuにデプロイする方法\n\n 1.各種インストール\nまずは各種インストールを実施します。\n\n Heroku CLIインストール\nHeroku Command Line Interface (CLI) を使用すると、Heroku アプリをターミナルから直接、作成および管理できます。ただし、Gitがインストールされていることが前提です。\n%...",
          "link": "https://zenn.dev/treefield/articles/f6e8b879387d02",
          "publishedOn": "2023-04-06T16:16:42.000Z",
          "wordCount": 1847,
          "title": "DjangoアプリをHerokuにデプロイしました。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Rimu5VWs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Heroku%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:treefield%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMWQ3M2UxMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Rimu5VWs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Heroku%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:treefield%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMWQ3M2UxMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/3b09a42ecdf197",
          "author": "Josh Nobus",
          "description": "はじめに\nこの記事は以下の記事の続きである。\nhttps://zenn.dev/wsuzume/articles/5cda82c09ac52e\nこの記事では tensorflow.keras.layers.Layer や tensorflow.keras.Model を継承して新たなレイヤーやモデルを作成する方法を練習する。\n参考にしたドキュメントは以下。\nhttps://www.tensorflow.org/guide/keras/custom_layers_and_models?hl=ja\n\n 参考文献\n\n\nWhat are Symbolic and Imperative API...",
          "link": "https://zenn.dev/wsuzume/articles/3b09a42ecdf197",
          "publishedOn": "2023-04-06T14:51:36.000Z",
          "wordCount": 2339,
          "title": "TensofFlowの使い方練習４：サブクラス化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N1GzB3_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensofFlow%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2594%25EF%25BC%259A%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N1GzB3_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensofFlow%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2594%25EF%25BC%259A%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/articles/e8f2cc02bb4f63",
          "author": "S.A",
          "description": "本記事の目的\nPythonの自学自習でChatGPTを使っているのですが、プログラムによって何を実施したいのかさえ記載すれば、プログラムを簡単に実装可能であると実感しています。しかしながら、ミスなく要件を満たすコーディングをするためには。実際のコーディングを決定する質問文の設定が場合によっては難しかったり、回答コードにエラーが出てしまった際にどのような追記質問をすべきかを考える上で、ChatGPTに対する慣れやコーディングに対する素養もある程度必要になる場合もあります。したがって、コーディングという面において、初心者がChatGPTを利用すれば必ず時間削減になると現状は言えないと考え...",
          "link": "https://zenn.dev/shungo_a/articles/e8f2cc02bb4f63",
          "publishedOn": "2023-04-06T14:18:11.000Z",
          "wordCount": 3157,
          "title": "ChatGPTを用いたノーコードプログラム作成例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BnfafDvn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%258E%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E4%25BD%259C%25E6%2588%2590%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BnfafDvn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%258E%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E4%25BD%259C%25E6%2588%2590%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/ee80940cdf64b7",
          "author": "seiyakitazume",
          "description": "先日、製薬会社様主催のこちらのイベントに参加してきました。\nhttps://hemophilia-hackathon-2023.peatix.com/\n血友病の患者さんの助けになるような製品・サービスを考案するというハッカソンでした。\n血友病は遺伝性の疾患なので、彼氏・彼女ができたり、子供を作る際に悩む方がいます。\n医学的な疑問や解決方法はインターネット上に回答があるのですが、「正解がない生活にまつわるお悩み」についてはまとまった情報がありませんでした。\nそこで、このハッカソンにご登壇いただいている医師の知見を入れた、FAQを作成し、chatGPTのAPIを噛ませた「血友病お悩み相談ボッ...",
          "link": "https://zenn.dev/seiyakitazume/articles/ee80940cdf64b7",
          "publishedOn": "2023-04-06T13:51:35.000Z",
          "wordCount": 288,
          "title": "chatGPTで疾患のお悩み相談を受けてくれるボットを開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mG_zsA1s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25A7%25E7%2596%25BE%25E6%2582%25A3%25E3%2581%25AE%25E3%2581%258A%25E6%2582%25A9%25E3%2581%25BF%25E7%259B%25B8%25E8%25AB%2587%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WjNia3dadzVJczNMZW1IMzlWMHVOeGxlMF9rQmJObkRIbFVCWlo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mG_zsA1s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25A7%25E7%2596%25BE%25E6%2582%25A3%25E3%2581%25AE%25E3%2581%258A%25E6%2582%25A9%25E3%2581%25BF%25E7%259B%25B8%25E8%25AB%2587%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WjNia3dadzVJczNMZW1IMzlWMHVOeGxlMF9rQmJObkRIbFVCWlo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k14i/articles/d40621a2e541c3",
          "author": "k14i",
          "description": "LLM (大規模言語モデル) を使ったコード生成の文脈において、「怠惰」で「短気」で「傲慢」な職業プログラマがまず到達したいのは、テストコードの自動生成と、そのすべてのテストケースをパスする実装コードの生成だと思います。\n本記事ではテストコードの自動生成について、取り組みを紹介します。\n本取り組みでは、テストコードを生成するためのプロンプトの一部として、OpenAPI 仕様 と PlantUML を使用します。\n実装コードではなくまずテストコードの生成を試みる理由は、テスト駆動開発 のアプローチを取るためです。\nもちろん我々がテストコードを書いて、それをもとに実装コードを生成するというア...",
          "link": "https://zenn.dev/k14i/articles/d40621a2e541c3",
          "publishedOn": "2023-04-06T10:23:21.000Z",
          "wordCount": 6034,
          "title": "Azure OpenAI Service を使って OpenAPI と PlantUML からテストコードを生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4Fs7QcAc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520OpenAPI%2520%25E3%2581%25A8%2520PlantUML%2520%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4Fs7QcAc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520OpenAPI%2520%25E3%2581%25A8%2520PlantUML%2520%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rikuto1110/articles/in-place-error",
          "author": "otsuka1110",
          "description": "本記事で伝えたいこと\n\n\nPyTorchで RuntimeError: a view of a leaf Variable that requires grad is being used in an in-place operation. という Error が出たら、in-place operationが原因。\n\n\nin-place operation とは、x.add_() , x += 0.5 , x[mask] = 0.5 のような、\nテンソルの値を直接書き換える演算。\n\n\n上記のErrorは in-place operation を以下の方法で置き換えることで解決\n\n\nx...",
          "link": "https://zenn.dev/rikuto1110/articles/in-place-error",
          "publishedOn": "2023-04-06T09:54:28.000Z",
          "wordCount": 2186,
          "title": "PyTorch と in-place operation のエラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ah_B05Dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%2520%25E3%2581%25A8%2520in-place%2520operation%2520%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:otsuka1110%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5MjBkM2YxMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ah_B05Dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%2520%25E3%2581%25A8%2520in-place%2520operation%2520%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:otsuka1110%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5MjBkM2YxMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/osawa_koki/articles/0bb18a7deeea1e",
          "author": "osawa-koki",
          "description": "Dynamo DB - Python | Float vs Decimal\nDynamo DBでは数値型としてN(Number / Decimal)という型があります。\nしかしながら、JSONでの表現はFloatとなります。\nそれによってデータ型不整合エラーが発生することがあります。\nこれを回避するためには、Dynamo DB用のデータの保持にはDecimalを使用し、JSON出力する際にはFloatに変換する必要があります。\n\n Float - Decimal (JSON)\nimport json\nfrom decimal import Decimal\n\ndef decimal_d...",
          "link": "https://zenn.dev/osawa_koki/articles/0bb18a7deeea1e",
          "publishedOn": "2023-04-06T09:33:06.000Z",
          "wordCount": 289,
          "title": "Dynamo DB - Python | Float vs Decimal",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FmYS61JQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dynamo%2520DB%2520-%2520Python%2520%257C%2520Float%2520vs%2520Decimal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osawa-koki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlYxU0NYQ01femJIby1WczJPMmlZUEFEOUN5Mm80VEhTY2RxNHM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FmYS61JQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dynamo%2520DB%2520-%2520Python%2520%257C%2520Float%2520vs%2520Decimal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osawa-koki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlYxU0NYQ01femJIby1WczJPMmlZUEFEOUN5Mm80VEhTY2RxNHM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/makotyo/articles/031c5fb7180cc4",
          "author": "makotyo",
          "description": "DDLをHCLに変換したい！\n最初のモチベーションはSnowflakeで作成するリソース（テーブル、ビュー、ストアドプロシージャなど）をTerraformのHCL形式で宣言的に管理するために、既存のDDLをHCL形式に変換することでした。\n現在、このようなDDLをHCL形式に変換するツールは存在していません（こんなIssueもあります）。DDLを手動でHCL形式に変換するのは面倒です。\nまず考えられるアプローチとしてはDDLを解析してHCL形式のコードに変換することが考えられますがなかなか大変そうです。\nここで考えました。ChatGPTにお願いできないか。\n\n ChatGPTでDDL...",
          "link": "https://zenn.dev/makotyo/articles/031c5fb7180cc4",
          "publishedOn": "2023-04-06T09:04:58.000Z",
          "wordCount": 2131,
          "title": "ChatGPTでDDL to TFしよう！ ~Snowflake x Terraform x ChatGPT~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Y5318v6p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7DDL%2520to%2520TF%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2520%7ESnowflake%2520x%2520Terraform%2520x%2520ChatGPT%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makotyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXRRRHFEZ2xRd1VLMTRYb3AtWlNRQ0hWY3NWdkRucFUwUFNFU3pXSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Y5318v6p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7DDL%2520to%2520TF%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2520%7ESnowflake%2520x%2520Terraform%2520x%2520ChatGPT%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makotyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXRRRHFEZ2xRd1VLMTRYb3AtWlNRQ0hWY3NWdkRucFUwUFNFU3pXSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knot/articles/0da811b73893fd",
          "author": "knot",
          "description": "はじめに\n本記事では、FastAPI+Strawberryで単純なQueryとMutationを実装し呼び出すことを目標にします。\n\n GraphQLとは\nGraphQLとはAPI向けのクエリ言語のことです。\n主な特徴は以下の通りです。\n\nエンドポイントが1つだけ\n複数のリソースを取得できる\nスキーマによる型付けができる\nQuery、Mutation、Subscriptionがある\n\nきちんとした説明はこちらの記事を読むとよさそう。\n\n Strawberryの準備\n今回はPythonのFastAPI+Strawberryで実装します。\n必要なライブラリをインストールしておきます。\n$...",
          "link": "https://zenn.dev/knot/articles/0da811b73893fd",
          "publishedOn": "2023-04-06T07:42:02.000Z",
          "wordCount": 1579,
          "title": "FastAPIとStrawberryでGraphQL超入門(QueryとMutation)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--brKl1lfy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8Strawberry%25E3%2581%25A7GraphQL%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%2528Query%25E3%2581%25A8Mutation%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knot%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYTE3OWE2NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--brKl1lfy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8Strawberry%25E3%2581%25A7GraphQL%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%2528Query%25E3%2581%25A8Mutation%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knot%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYTE3OWE2NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f899fb9a6b1094",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-193 A - Discount\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print((a - b) / a * 100)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f899fb9a6b1094",
          "publishedOn": "2023-04-06T07:14:59.000Z",
          "wordCount": 244,
          "title": "［AtCoder］ABC-193｜A - Discount",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DhtMgpsd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-193%25EF%25BD%259CA%2520-%2520Discount%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DhtMgpsd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-193%25EF%25BD%259CA%2520-%2520Discount%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a79eea55fcab71",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-193 B - Play Snuke\n\n\n\n 提出結果\n# ABC-193 B - Play Snuke\n# https://atcoder.jp/contests/abc193/tasks/abc193_b\n#\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    l = getIntListRo...",
          "link": "https://zenn.dev/hyperdb/articles/a79eea55fcab71",
          "publishedOn": "2023-04-06T07:14:58.000Z",
          "wordCount": 417,
          "title": "［AtCoder］ABC-193｜B - Play Snuke",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tpnZvcXz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-193%25EF%25BD%259CB%2520-%2520Play%2520Snuke%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tpnZvcXz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-193%25EF%25BD%259CB%2520-%2520Play%2520Snuke%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/61acc45cfd6673",
          "author": "tkyk",
          "description": "文字列とは\n前回の「Python入門④～四則計算・算術演算子・round関数～」では数値を扱いました。\n今回は文字列を扱います。\n「String型」と呼ばれることもあります。\n\n 文字列をprint関数で出力する\n大事なルールは「'文字列'」もしくは「\"文字列\"」というように、\nシングルクォーテーションもしくはダブルクォーテーションで囲む必要があります。\nどちらでも大丈夫です。\nprint ( 'test' )\nとすると、「test」という文字列が表示されます。\n\n エスケープ\nこのような場合、エラーが起こります。\nprint ( 'I don't know' )\nどのように表示され...",
          "link": "https://zenn.dev/tkyk/articles/61acc45cfd6673",
          "publishedOn": "2023-04-06T04:10:42.000Z",
          "wordCount": 354,
          "title": "Python入門⑤～文字列～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R8_eWGYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A4%25EF%25BD%259E%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R8_eWGYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A4%25EF%25BD%259E%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/2caafcd83ee298",
          "author": "tkyk",
          "description": "Pythonでは、算術演算子、というものを使って計算させることができます。\n「算術」と付け加えているのは、それ以外にも色々な種類の演算子があるためです。\n\n 足し算\n「+」を使います。\nprint ( 1 + 2 )\nとすると「3」が表示されます。\n\n 引き算\n「-」を使います。\nprint ( 5 - 3 )\nとすると「2」が表示されます。\n\n 掛け算\n「*」を使います。\nprint ( 2 * 3 )\nとすると「6」が表示されます。\n\n 割り算\n「/」を使います。\nprint ( 6 / 2 )\nとすると「3.0」が表示されます。\n※割り算は小数点以下が発生することがあるので、デフォ...",
          "link": "https://zenn.dev/tkyk/articles/2caafcd83ee298",
          "publishedOn": "2023-04-06T03:01:06.000Z",
          "wordCount": 460,
          "title": "Python入門④～四則計算・算術演算子・round関数～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GSaf5fFb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A3%25EF%25BD%259E%25E5%259B%259B%25E5%2589%2587%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%25BB%25E7%25AE%2597%25E8%25A1%2593%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2583%25BBround%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GSaf5fFb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A3%25EF%25BD%259E%25E5%259B%259B%25E5%2589%2587%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%25BB%25E7%25AE%2597%25E8%25A1%2593%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2583%25BBround%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/9d33c143df589e",
          "author": "Shohei N.",
          "description": "はじめに\nAzure OpenAI Serviceが本家OpenAI社のAPIと異なる部分の一つに、Azure OpenAIでは、APIキーの認証に加えてAzure Active Directory (Azure AD)によるユーザー認証に対応していることが挙げられます。\nただ、多くのサンプルコードはAPIキーによる認証で書かれていたため、Azure AD認証でAzure OpenAIのAPIを叩く方法をメモします。\n\n 前提\nAPIキーベースでAzure OpenAI Serviceが利用できる程度の環境は整っていると想定しています。\n具体的には、Azure OpenAI Serv...",
          "link": "https://zenn.dev/microsoft/articles/9d33c143df589e",
          "publishedOn": "2023-04-05T14:58:17.000Z",
          "wordCount": 636,
          "title": "Azure OpenAI ServiceでAzure AD認証を使ってみる (Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mpwm8YZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%25E3%2581%25A7Azure%2520AD%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520N.%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzNmNkNzdkYWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mpwm8YZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%25E3%2581%25A7Azure%2520AD%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520N.%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzNmNkNzdkYWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/e56e05e95b79b1",
          "author": "tkyk",
          "description": "print関数\n「print」は文字を出力する関数です。\nprint ('test')\nとすると、「test」という文字が出力されます。\nprint (1)\nとすると、「1」という数値が出力されます。\n簡単ですね（笑）\nおそらく、pythonの実際の挙動を見てみるうえで最もよく使う関数だと思います。\n次回は四則計算を紹介したいと思います。",
          "link": "https://zenn.dev/tkyk/articles/e56e05e95b79b1",
          "publishedOn": "2023-04-05T12:56:17.000Z",
          "wordCount": 96,
          "title": "Python入門③～print関数～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hKlgnhX2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A2%25EF%25BD%259Eprint%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hKlgnhX2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A2%25EF%25BD%259Eprint%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ijiwarunahello/articles/be41bcbd9cc88e",
          "author": "ijiwarunahello",
          "description": "Summary\n\ncollada_to_stl.py\nimport bpy\nimport pathlib\n\n# colladaファイルが置いてあるディレクトリへのフルパス\ntarget_dir = r\"/path/to/collada_data_dir\"\n\n# colladaファイル（.dae）があるフォルダを設定\ncollada_dir = pathlib.Path(target_dir)\n# colladaファイルをすべて取得\ncollada_list = list(collada_dir.glob(\"*.dae\"))\n\n# すべてのオブジェクトを削除\nbpy.ops.objec...",
          "link": "https://zenn.dev/ijiwarunahello/articles/be41bcbd9cc88e",
          "publishedOn": "2023-04-05T10:00:00.000Z",
          "wordCount": 369,
          "title": "【Blender】ColladaファイルをSTLに一括変換",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I-Yfl54D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Blender%25E3%2580%2591Collada%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592STL%25E3%2581%25AB%25E4%25B8%2580%25E6%258B%25AC%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ijiwarunahello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0NGZhOWVhNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I-Yfl54D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Blender%25E3%2580%2591Collada%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592STL%25E3%2581%25AB%25E4%25B8%2580%25E6%258B%25AC%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ijiwarunahello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0NGZhOWVhNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kiwipop/articles/91c4e7c65f092c",
          "author": "kiwi",
          "description": "はじめに\nPythonでWebアプリケーションを作る場合のフレームワークとしては、DjangoやFlaskが候補にあがるかと思います。とはいえこれらのフレームワークには大きな問題があります。それは、信じられないくらい遅いという問題です。\nベンチマークを見てみると、DjangoやFlaskは遅すぎてもはや評価対象にすらならないといったところです。\nhttp://klen.github.io/py-frameworks-bench/\nそこで今回は、ベンチマーク上では最速であるBlackSheepを利用して爆速Webアプリケーションを作ってみることにしました。\nhttps://www.ne...",
          "link": "https://zenn.dev/kiwipop/articles/91c4e7c65f092c",
          "publishedOn": "2023-04-05T08:41:19.000Z",
          "wordCount": 1496,
          "title": "PythonとBlackSheepで爆速Webサービスを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DEelK4NX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8BlackSheep%25E3%2581%25A7%25E7%2588%2586%25E9%2580%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pvQzNwOWFHYTBFbzZEWWhYYUlKWEpMcEpCZHQ5Y0NiWmZYVEl0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DEelK4NX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8BlackSheep%25E3%2581%25A7%25E7%2588%2586%25E9%2580%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pvQzNwOWFHYTBFbzZEWWhYYUlKWEpMcEpCZHQ5Y0NiWmZYVEl0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/a5480b4ad90f1d",
          "author": "Darman",
          "description": "はじめに\nキューは、FIFO（First-In-First-Out）原則に基づいてデータを処理するデータ構造です。この記事では、Python で独自の Queue クラスを実装する方法を解説します。この Queue クラスでは、データの追加（エンキュー）と取り出し（デキュー）を行うメソッドが提供されます。\n\n Queue クラスの実装\nclass Queue:\n    def __init__(self, max_size):\n        self.max_size = max_size\n        self.queue = [0] * max_size\n        se...",
          "link": "https://zenn.dev/yutabeee/articles/a5480b4ad90f1d",
          "publishedOn": "2023-04-05T08:07:46.000Z",
          "wordCount": 754,
          "title": "Python で独自の Queue クラスを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j_eZ-GF8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%2520Queue%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j_eZ-GF8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%2520Queue%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2238ede7835dbf",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-192 A - Star\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    y = x % 100\n\n    print(100 if y == 0 else 100 - y)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2238ede7835dbf",
          "publishedOn": "2023-04-05T03:41:10.000Z",
          "wordCount": 250,
          "title": "［AtCoder］ABC-192｜A - Star",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--levs4gFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-192%25EF%25BD%259CA%2520-%2520Star%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--levs4gFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-192%25EF%25BD%259CA%2520-%2520Star%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0ee39b8c08e259",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-192 B - uNrEaDaBlE sTrInG\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    s0 = \"\".join([s[i] for i in range(len(s)) if (i + 1) % 2 == 0])\n    s1 = \"\".join([s[i] for i in range(len(s)) if (i + 1) % 2 != 0])\n\n    print('Yes' if s0 == s0.upper() and ...",
          "link": "https://zenn.dev/hyperdb/articles/0ee39b8c08e259",
          "publishedOn": "2023-04-05T03:41:10.000Z",
          "wordCount": 413,
          "title": "［AtCoder］ABC-192｜B - uNrEaDaBlE sTrInG",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YEo8ljde--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-192%25EF%25BD%259CB%2520-%2520uNrEaDaBlE%2520sTrInG%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YEo8ljde--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-192%25EF%25BD%259CB%2520-%2520uNrEaDaBlE%2520sTrInG%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/6f4256d83d8cd1",
          "author": "Darman",
          "description": "構造体は、さまざまなデータ型をまとめて扱うための便利な概念です。この記事では、構造体について完全に理解するための初心者向けのガイドを提供します。\n\n 構造体とは\n構造体は、異なるデータ型を1つのデータ型としてまとめる方法です。構造体を使用すると、関連するデータを1つの変数にまとめて格納し、簡単に管理できます。\nたとえば、従業員の情報（名前、年齢、給与）を管理する場合、構造体を使用してこれらの情報を1つのデータ型にまとめることができます。\n\n Pythonでの構造体の代替手段\nPythonには、C言語やC++のような構造体が直接的には存在しません。ただし、collections.named...",
          "link": "https://zenn.dev/yutabeee/articles/6f4256d83d8cd1",
          "publishedOn": "2023-04-05T02:58:24.000Z",
          "wordCount": 441,
          "title": "構造体入門 : （Pythonでの実装例含む）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S0eCWpyJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A7%258B%25E9%2580%25A0%25E4%25BD%2593%25E5%2585%25A5%25E9%2596%2580%2520%253A%2520%25EF%25BC%2588Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%25E5%2590%25AB%25E3%2582%2580%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S0eCWpyJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A7%258B%25E9%2580%25A0%25E4%25BD%2593%25E5%2585%25A5%25E9%2596%2580%2520%253A%2520%25EF%25BC%2588Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%25E5%2590%25AB%25E3%2582%2580%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/e2d0e149c26b45",
          "author": "Darman",
          "description": "はじめに：\nプログラミングの世界では、固定された値のセットを表現する必要がしばしばあります。例えば、週の曜日や月、方角などです。Pythonでは、これらの値を効率的に表現するために、「列挙型」（Enum）を使用します。本記事では、Pythonの列挙型の基本的な使い方を学びます。\n\n 目次：\n\n列挙型（Enum）とは？\nPythonで列挙型を定義する方法\n列挙型の値にアクセスする\n列挙型と制御構造\n列挙型の利用シーン\nまとめ\n\n\n 1. 列挙型（Enum）とは？\n列挙型（Enum）は、プログラムで一連の固定値を表現するための特殊なデータ型です。列挙型は、予め定義された値のセットを持ち、...",
          "link": "https://zenn.dev/yutabeee/articles/e2d0e149c26b45",
          "publishedOn": "2023-04-05T02:28:40.000Z",
          "wordCount": 404,
          "title": "Pythonで列挙型（Enum）を使いこなす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IeZwkJO4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%2588%2597%25E6%258C%2599%25E5%259E%258B%25EF%25BC%2588Enum%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IeZwkJO4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%2588%2597%25E6%258C%2599%25E5%259E%258B%25EF%25BC%2588Enum%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3512fe4001d8d3",
          "author": "Darman",
          "description": "この記事では、プログラミングにおける値渡しと参照渡しの概念について説明し、それぞれの使い分け方について解説します。\n\n 値渡しとは\n値渡しは、関数に引数のコピーを渡す方法です。これにより、関数内で引数の値を変更しても、呼び出し元の変数に影響を与えません。通常、プリミティブ型のデータ（整数、浮動小数点数、文字など）は値渡しで関数に渡されます。\n\n 値渡しの例\ndef increment_value(value):\n    value = value + 1\n\nx = 10\nincrement_value(x)\nprint(x)  # 出力: 10（変更されていない）\n\n 参照渡しとは\n参照...",
          "link": "https://zenn.dev/yutabeee/articles/3512fe4001d8d3",
          "publishedOn": "2023-04-05T01:46:37.000Z",
          "wordCount": 293,
          "title": "値渡しと参照渡しの理解と使い分け",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QCn7R2cq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QCn7R2cq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/0c4e9f508da48d",
          "author": "Darman",
          "description": "ハッシュアルゴリズムとは\nハッシュアルゴリズムとは、任意の長さのデータを入力として受け取り、一定の長さのハッシュ値（ハッシュコード）を生成するアルゴリズムのことです。ハッシュ関数は、データ構造のハッシュテーブルや、暗号学的ハッシュ関数として使用されます。\nハッシュアルゴリズムは、次の性質を持っていることが望ましいです。\n\n\n一貫性：同じ入力に対しては、常に同じハッシュ値を生成する。\n\n高速性：ハッシュ値の計算が高速に行われる。\n\n雪崩効果：入力データが少し変化しても、ハッシュ値が大きく変化する。\n\n以下では、ハッシュアルゴリズムの基本的な種類と、それぞれの特徴について説明します。\n\n...",
          "link": "https://zenn.dev/yutabeee/articles/0c4e9f508da48d",
          "publishedOn": "2023-04-04T12:16:05.000Z",
          "wordCount": 360,
          "title": "ハッシュアルゴリズムの基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cL820nql--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cL820nql--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/stucci/articles/195815871110c2",
          "author": "stucci",
          "description": "2023年4月4日現在、v2 APIでは画像付きツイートを投稿することができません。\n参考）\nPost Tweet/Media Upload in v2? - Twitter API / Twitter API v2 - Twitter Developers\nそのため、画像付きツイートを投稿するためには、以下のようにv1 APIとv2 APIを組み合わせる必要があります。\ntweepy.APIでv1 APIを使用し、tweepy.Clientでv2 APIを使用しているようです。\nimport tweepy\n\n# Twitter API credentials\nconsumer_key ...",
          "link": "https://zenn.dev/stucci/articles/195815871110c2",
          "publishedOn": "2023-04-04T10:15:34.000Z",
          "wordCount": 362,
          "title": "Twitter API（tweepy）を使用して、画像付きツイートを投稿する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vVkej4Uh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25EF%25BC%2588tweepy%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E7%2594%25BB%25E5%2583%258F%25E4%25BB%2598%25E3%2581%258D%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stucci%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKemZKR0hqYU5hZjJCMEd3NFZ4d1FOb0VuQmVibW1iNEc4aklMank9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vVkej4Uh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25EF%25BC%2588tweepy%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E7%2594%25BB%25E5%2583%258F%25E4%25BB%2598%25E3%2581%258D%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stucci%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKemZKR0hqYU5hZjJCMEd3NFZ4d1FOb0VuQmVibW1iNEc4aklMank9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tmori/articles/ebd628619e6442",
          "author": "tmori",
          "description": "https://atcoder.jp/contests/abc296\n\n A - Alternately\n文字列Sを1文字ずつ順番に取り出し、前の文字を一致していれば No を出力する。すべて取り出すことに成功したら Yes と出力する。注意点として前の文字を空文字などで初期化する必要がある。\nPythonn = int(input())\ns = list(input())\n\npre = \"\"\nfor i, s_str in enumerate(s):\n    if pre == s_str:\n        print(\"No\")\n        exit()\n    pre = s_...",
          "link": "https://zenn.dev/tmori/articles/ebd628619e6442",
          "publishedOn": "2023-04-04T06:04:04.000Z",
          "wordCount": 930,
          "title": "【ABC296】AtCoder Beginner Contest 296 A-D 振り返り【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--T76qa8bn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC296%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520296%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--T76qa8bn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC296%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520296%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e2ca832d8455fa",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-191 A - Vanishing Pitch\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    v, t, s, d = getIntMap()\n\n    a = d / v\n\n    print('No' if t <= a <= s else 'Yes')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e2ca832d8455fa",
          "publishedOn": "2023-04-04T04:52:59.000Z",
          "wordCount": 275,
          "title": "［AtCoder］ABC-191｜A - Vanishing Pitch",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fJXSxPS7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-191%25EF%25BD%259CA%2520-%2520Vanishing%2520Pitch%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fJXSxPS7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-191%25EF%25BD%259CA%2520-%2520Vanishing%2520Pitch%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9bfee70fc5b390",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-191 B - Remove It\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, x = getIntMap()\n    a = getIntList()\n\n    b = [str(i) for i in a if i != x]\n\n    print(\" \".join(b))\n\n\nif __name__ == \"...",
          "link": "https://zenn.dev/hyperdb/articles/9bfee70fc5b390",
          "publishedOn": "2023-04-04T04:52:58.000Z",
          "wordCount": 338,
          "title": "［AtCoder］ABC-191｜B - Remove It",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_Q__eIgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-191%25EF%25BD%259CB%2520-%2520Remove%2520It%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_Q__eIgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-191%25EF%25BD%259CB%2520-%2520Remove%2520It%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/junkor/articles/3df5f7ac9751c7",
          "author": "7e+8",
          "description": "※Jupyter Notebook形式で実行し、Markdown形式でエクスポートしたものを一部改変して作っているので若干見づらいです。\n\n 概要\npandasなどは小規模~中規模くらいのデータセットの処理や分析には有効だが、\nメモリに乗り切らないレベルのデータ量は処理できない。\nまた、GILによって基本的に1スレッドでの動作になるため、マシンスペックを最大限活かし切るのは難しい。\n遅延評価、並列分散処理によって所謂ビッグデータといわれるレベルのテーブルデータの処理・分析に使うことができ、\n更にpandasとの連携・併用ができるツールとしてpysparkが存在するため紹介する。\nなお、詳...",
          "link": "https://zenn.dev/junkor/articles/3df5f7ac9751c7",
          "publishedOn": "2023-04-03T16:37:36.000Z",
          "wordCount": 2600,
          "title": "pyspark入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0F5bQTAy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pyspark%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0F5bQTAy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pyspark%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/junkratmecha/articles/516e884a3116b6",
          "author": "Junk",
          "description": "やりたいこと\n\n精度強めのモデルである程度の量でFTしたら、自動ラベリングできないか。\nBboxのアノテーションは修正も楽だから、一度ラベル済のをツールでパラパラめくって、間違っているものを手動ラベリングすることで効率上がらないか。\nDetecton2を触ってみたい、あ~ツールキットね~って言えるようになりたい!\n※Twitterやコメントなどで諸々は優しくアドバイスやご指摘などください。\n\n\n Detectron2って\nDetectron2はFacebook AIのオープンソースPJで、PyTorchの物体検出ツールキットです。\n検出できる内容はざっくり以下。\n\n物体検知 Boun...",
          "link": "https://zenn.dev/junkratmecha/articles/516e884a3116b6",
          "publishedOn": "2023-04-03T16:19:39.000Z",
          "wordCount": 4159,
          "title": "Bounding Boxの自動ラベリングの試み(Detectron2)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W85iemfm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bounding%2520Box%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25A9%25E3%2583%2599%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E8%25A9%25A6%25E3%2581%25BF%2528Detectron2%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxOWNjODdlZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W85iemfm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bounding%2520Box%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25A9%25E3%2583%2599%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E8%25A9%25A6%25E3%2581%25BF%2528Detectron2%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxOWNjODdlZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/1e6d8fbab66ca9",
          "author": "sergicalsix",
          "description": "はじめに\n本記事ではメンバーの定義におけるpropertyの説明をします。\n基本的に趣味や学部の研究レベルでは、通常のメンバーの定義で事足ります。\n通常のメンバー定義やその意義については以下の記事で解説しています。\nhttps://zenn.dev/sergicalsix/articles/2c7832353b6afa\npropertyはプログラムの堅牢化やバリデーションで用いられる他、世の中のプログラムで広く使われているため、理解は必須です。\n\n propertyとは\nクラスのメンバーで変数のように参照することのできる関数のことをプロパティといいます。\nもっともわかりやすい使用例は...",
          "link": "https://zenn.dev/sergicalsix/articles/1e6d8fbab66ca9",
          "publishedOn": "2023-04-03T12:07:08.000Z",
          "wordCount": 465,
          "title": "Pythonでclassを使う: 設計編(3) propertyでメンバーの定義",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HIBqSJE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%2520%25E8%25A8%25AD%25E8%25A8%2588%25E7%25B7%25A8%25283%2529%2520property%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HIBqSJE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%2520%25E8%25A8%25AD%25E8%25A8%2588%25E7%25B7%25A8%25283%2529%2520property%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/karamawanu/articles/d1df0d95136b42",
          "author": "karamawanu",
          "description": "俗にフルスタックフレームワークと呼ばれるミドルウェアでは設定をハードコーディングする場合が多い。config.py とか config.php がそれである。\nしかしあらゆる案件に限らず文字列定数はソースコードの内外に定義できた方が何かと便利である。\n最近はオワコンとされてる12条項アプリケーションでも同様の主張がある。\nhttps://12factor.net/ja/config\n12条項アプリケーションでは、環境変数を使うことを主張してるが、それに加えて小生はINIファイルを推したい。\nもともと手書きでの運用を意識しており、セクション／key/valueにより大項目小項目の機能もある...",
          "link": "https://zenn.dev/karamawanu/articles/d1df0d95136b42",
          "publishedOn": "2023-04-03T08:19:37.000Z",
          "wordCount": 195,
          "title": "dataclasses.dataclassの応用例、環境設定を受け取る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SDkUfIoZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dataclasses.dataclass%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E4%25BE%258B%25E3%2580%2581%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SDkUfIoZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dataclasses.dataclass%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E4%25BE%258B%25E3%2580%2581%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/460683ee113535",
          "author": "Darman",
          "description": "モジュラス演算を学習したので、負の数のモジュラス演算を使ってじゃんけんのプログラムを作成しました。\nhttps://zenn.dev/yutabeee/articles/7c69c655166532\n\n コード全体\n以下に、負の数のモジュラス演算を用いたPythonでのジャンケンプログラムのサンプルコードを示します。\nimport random\n\ndef main():\n    hands = {0: 'グー', 1: 'チョキ', 2: 'パー'}\n    print('ジャンケンを開始します。手を選んでください。')\n    print('0: グー, 1: チョキ, 2: パー')...",
          "link": "https://zenn.dev/yutabeee/articles/460683ee113535",
          "publishedOn": "2023-04-03T05:10:30.000Z",
          "wordCount": 546,
          "title": "Pythonで負の数のモジュラス演算を用いてジャンケンを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lU46jfBI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E8%25B2%25A0%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2582%25B9%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lU46jfBI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E8%25B2%25A0%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2582%25B9%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e573a98948a996",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-190 A - Very Very Primitive Game\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    d = b - a\n    print('Aoki' if d > 0 else 'Takahashi' if d < 0 else 'Aoki' if c == 0 else 'Takahashi')\n\n\nif __name__ == \"__main__\":\n    m...",
          "link": "https://zenn.dev/hyperdb/articles/e573a98948a996",
          "publishedOn": "2023-04-03T03:33:47.000Z",
          "wordCount": 321,
          "title": "［AtCoder］ABC-190｜A - Very Very Primitive Game",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SnVjNFxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CA%2520-%2520Very%2520Very%2520Primitive%2520Game%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SnVjNFxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CA%2520-%2520Very%2520Very%2520Primitive%2520Game%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ae1705b5d701ef",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-190 B - Magic 3\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, s, d = getIntMap()\n    l = getIntListRow(n)\n\n    a = False\n    for x, y in l:\n        if x < ...",
          "link": "https://zenn.dev/hyperdb/articles/ae1705b5d701ef",
          "publishedOn": "2023-04-03T03:33:47.000Z",
          "wordCount": 396,
          "title": "［AtCoder］ABC-190｜B - Magic 3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s93zjZlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CB%2520-%2520Magic%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s93zjZlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CB%2520-%2520Magic%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/decfb4f686b55c",
          "author": "Darman",
          "description": "単一プロジェクトの場合\nPythonプロジェクトの理想的なディレクトリ構成はプロジェクトの規模や目的によって異なりますが、一般的な構成を以下に示します。\nproject_name/\n│\n├── project_name/\n│   ├── __init__.py\n│   ├── main.py\n│   ├── module1.py\n│   ├── module2.py\n│   └── ...\n│\n├── tests/\n│   ├── __init__.py\n│   ├── test_module1.py\n│   ├── test_module2.py\n│   └── ...\n│\n├──...",
          "link": "https://zenn.dev/yutabeee/articles/decfb4f686b55c",
          "publishedOn": "2023-04-03T02:31:40.000Z",
          "wordCount": 1677,
          "title": "Pythonプロジェクトのディレクトリ構成 : Part2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y0tg10p6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2520%253A%2520Part2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y0tg10p6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2520%253A%2520Part2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/ba3978ab28aa65",
          "author": "nakamura196",
          "description": "概要\nRDFデータの作成にあたり、Excelで作成したデータから、RDFデータに変換するPythonライブラリを試作しました。まだまだ中途半端な状態ですが、備忘録です。\n\n ノートブック\n以下のノートブックから試用いただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/ExcelからRDFデータを作成する.ipynb\n\n 変換元のExcelデータ\n以下のようなExcelファイルを作成します。\nhttps://docs.google.com/spreadsheets/d/16SufG6...",
          "link": "https://zenn.dev/nakamura196/articles/ba3978ab28aa65",
          "publishedOn": "2023-04-03T00:56:45.000Z",
          "wordCount": 130,
          "title": "ExcelからRDFを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IDO_0o1J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2581%258B%25E3%2582%2589RDF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IDO_0o1J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2581%258B%25E3%2582%2589RDF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/5cda82c09ac52e",
          "author": "Josh Nobus",
          "description": "はじめに\nこの記事は以下の記事の続きです。\nhttps://zenn.dev/wsuzume/articles/cb1511666e2f99\n今回はオプティマイザをカスタマイズします。大抵は Adam とか既に実装されてるやつを使っておけばいいのですが Riemann 多様体上の最適化、有名どころだと双曲埋め込みとかに使いたい場合はオプティマイザをカスタムする必要があります。そんな必要や欲求に駆られる変態は地球上にそんなにいないと思いますが。\n今回作成したノートブックはこちら。\n\n オプティマイザのカスタマイズ方法\n公式ドキュメントの『Creating a custom optimi...",
          "link": "https://zenn.dev/wsuzume/articles/5cda82c09ac52e",
          "publishedOn": "2023-04-02T14:26:47.000Z",
          "wordCount": 3501,
          "title": "TensorFlow の使い方練習３：オプティマイザのカスタマイズ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l5mS-w0k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2593%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2597%25E3%2583%2586%25E3%2582%25A3%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l5mS-w0k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2593%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2597%25E3%2583%2586%25E3%2582%25A3%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/3b942449de9911",
          "author": "tkyk",
          "description": "例文\nまず簡単なコードを記載してみます。\na = 'test'\nprint (a)\nこれを実行すると、「test」という文字が出力されます。\n1行目の意味は、「aという箱にtestという文字を格納してね」ということです。\n2行目の意味は、「aに格納されている内容（＝test）を表示してね」ということです。\nプログラミングをする際に、長々とコードを書くのではなく、なるべく省略して行いたいので、こういった処理をします。\nExcelをイメージしてみてください。\nどこかのセルで「=B1」という記載をすると、B1に入力された内容が挿入されますよね？\nこれと同じイメージです。\n\n 変数とは\n上記...",
          "link": "https://zenn.dev/tkyk/articles/3b942449de9911",
          "publishedOn": "2023-04-02T14:26:34.000Z",
          "wordCount": 140,
          "title": "Python入門②～変数・代入～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--33HvxpPI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A1%25EF%25BD%259E%25E5%25A4%2589%25E6%2595%25B0%25E3%2583%25BB%25E4%25BB%25A3%25E5%2585%25A5%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--33HvxpPI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A1%25EF%25BD%259E%25E5%25A4%2589%25E6%2595%25B0%25E3%2583%25BB%25E4%25BB%25A3%25E5%2585%25A5%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/9cf4d0c6668c79",
          "author": "tkyk",
          "description": "ここではPythonを自身のPCでプログラミングしていく際に必要な環境構築について紹介します。\n\n Pythonのインストール\nこちらからダウンロードできます。\nhttps://www.python.org/downloads/\n\n\n Anacondaについて\n「Anaconda」というものをダウンロードして環境構築する方法もあります。\n通常のPythonに加えて、ライブラリというオプションもあらかじめ一緒にインストールできます。\nこちらで環境構築を進めてもらっても良いかと思います。\n\n IDE（統合開発環境）について\n様々な言語のプログラミングを同一環境で行えるツールです。\nPytho...",
          "link": "https://zenn.dev/tkyk/articles/9cf4d0c6668c79",
          "publishedOn": "2023-04-02T14:26:10.000Z",
          "wordCount": 121,
          "title": "Python入門①～環境構築～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2gy5xeSF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A0%25EF%25BD%259E%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2gy5xeSF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A0%25EF%25BD%259E%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojomoeko/articles/python-project-with-mkdocs",
          "author": "okojomoeko",
          "description": "お仕事でpythonを使うことがあって、その開発環境をどうやって整備しようかと思っていたところでした。\nよくある構成のpyenv+poetryのpython開発環境を作るとともに、ドキュメントもちゃんとやりたいなということで、ユーザー向けのAPIドキュメントに加えて、Pythonコードの設計とかを記述できるように開発者向けドキュメントとしてmkdocsを併用したpythonプロジェクトの環境を作ってみました。\nこの記事では作るまでの流れを自分のための備忘録的な感じで残しておこうと思います。\n\n 今回試した環境\n\nUbuntu 22.04.2 LTS (MacBook Air M1のLim...",
          "link": "https://zenn.dev/okojomoeko/articles/python-project-with-mkdocs",
          "publishedOn": "2023-04-02T14:23:30.000Z",
          "wordCount": 1331,
          "title": "Poetryとmkdocsとsphinxを使ってPythonのプロジェクトを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RQeyoaN3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2581%25A8mkdocs%25E3%2581%25A8sphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RQeyoaN3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2581%25A8mkdocs%25E3%2581%25A8sphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/ef2c0f8b567355",
          "author": "tkyk",
          "description": "はじめまして。\nプログラミングのことを色々調べていたらZennに出会いました。\n今後はここに学んだことをアウトプットしていきたいと思っています。\n\n 今まで\n大学時代の専攻は英米文学という、スーパー文系でした。\n更に大学時代、サークルの人間関係の悪化がきっかけで、引きこもり生活を何年か続けていました。\n結局6年半かけて大学を卒業しました。\n社会人になってからは主に営業・企画畑で仕事をしてきました。\n現在はSaaS企業で営業企画の部署にいます。\n30歳で結婚し、現在35歳で、妻と娘（2歳）の3人暮らしです。\n子供が生まれる前は、土日・深夜早朝問わず働けていましたが、子供が生まれてからは、1...",
          "link": "https://zenn.dev/tkyk/articles/ef2c0f8b567355",
          "publishedOn": "2023-04-02T14:14:58.000Z",
          "wordCount": 87,
          "title": "35歳でプログラミング入門する男の自己紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aonbLsJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:35%25E6%25AD%25B3%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%25E7%2594%25B7%25E3%2581%25AE%25E8%2587%25AA%25E5%25B7%25B1%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aonbLsJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:35%25E6%25AD%25B3%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%25E7%2594%25B7%25E3%2581%25AE%25E8%2587%25AA%25E5%25B7%25B1%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lot36z/articles/6ac1a0f7cebf3c",
          "author": "のっかー",
          "description": "Pythonでdebounceを実現するサンプルコードです。\nこのサンプルコードでは、最後のユーザ入力から2秒間入力がない場合に最後の入力をメッセージとして出力する仕組みになっています。\nPython 3.10.10 で動作確認済みです。\nサンプルコードについて補足説明しますと、\nnonlocalを使用することで、\n関数の外側の変数（例. timer, callback, waittime）にアクセスしています。\nまた、debouncerは「引数として与えた関数callbackをwaittime秒だけdebounceした関数を返す」関数で、\n以下サイトのJavaScriptの実装をほぼそ...",
          "link": "https://zenn.dev/lot36z/articles/6ac1a0f7cebf3c",
          "publishedOn": "2023-04-02T12:36:52.000Z",
          "wordCount": 636,
          "title": "Pythonでdebounce",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zyLL5uDn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Python%25E3%2581%25A7debounce%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zyLL5uDn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Python%25E3%2581%25A7debounce%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/c51a759af9b5ca",
          "author": "ShunDev",
          "description": "概要\nモンテカルロ積分の証明を忘れていたことに気づいたので証明を行う. モンテカルロ積分とは乱数を用いた積分手法である.\n\n 定義・性質\n以下の積分を確率変数を用いて行うことを考える\n\n関数: g(x).\n積分: \\theta = \\int_0^1 g(x) dx.\n確率変数: X : X \\backsim U(0,1).\n\nこのとき, \\theta について以下が成り立つ.\n\n\\mathbb{E}[g(X)] = \\int_0^1 g(x) \\cdot \\frac{1}{1-0} dx = \\theta.\n\n\nすなわち, \\mathbb{E}[g(X)] を推定すればよい. ここで...",
          "link": "https://zenn.dev/shundeveloper/articles/c51a759af9b5ca",
          "publishedOn": "2023-04-02T11:28:53.000Z",
          "wordCount": 1722,
          "title": "[統計学]モンテカルロ積分の証明と実践",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--t8DkrmQL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E7%25A9%258D%25E5%2588%2586%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--t8DkrmQL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E7%25A9%258D%25E5%2588%2586%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/3ca01bea711e67",
          "author": "Tanny",
          "description": "はじめに\nPythonのforループって、なんだか難しくないですか？？🤔\nナゾのrange()関数が登場したり、リストを与えたらそのまま値を取得できたりと、はじめて出会う考え方も多いですよね。自分も初心者の頃は、これらの挙動を理解するのに苦労しました。実はこれまでも、なんとなくの理解だったりします。\nそこで今回は、Pythonの繰り返し処理の仕組みをStep-by-stepで読み解くことで、forループで何が行われているかをしっかりと把握することを目指します。「forループは書けるけど、その仕組みはよくわかっていない」という方にオススメです。\n!\n軽い気持ちで調べ始めたところ、for...",
          "link": "https://zenn.dev/tanny/articles/3ca01bea711e67",
          "publishedOn": "2023-04-02T11:18:14.000Z",
          "wordCount": 1561,
          "title": "いまさら聞けない！Pythonのforループの仕組みをStep-by-stepで理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yq1PcGOj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E8%2581%259E%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581Python%25E3%2581%25AEfor%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592Step-by-step%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yq1PcGOj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E8%2581%259E%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581Python%25E3%2581%25AEfor%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592Step-by-step%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ovrsa/articles/6e66c50f3b3429",
          "author": "ovrsa",
          "description": "この記事では、MacでReact (Next.js) と Python (Flask) を使ってウェブアプリケーションを開発する方法を紹介します。また、データベースとしてSQLiteを利用し、データの永続化も行います。\n\n 必要なソフトウェアのインストール\nまずはじめに、以下のソフトウェアをインストールしておきます。\n\nNode.js (Next.js開発のため)\nPython (Flask開発のため)\n\nNode.jsのインストールは、公式サイトからMac用のインストーラをダウンロードしてインストールしてください。\nhttps://nodejs.org/en/download/pack...",
          "link": "https://zenn.dev/ovrsa/articles/6e66c50f3b3429",
          "publishedOn": "2023-04-02T09:28:47.000Z",
          "wordCount": 909,
          "title": "React (Next.js) と Python (Flask) を使ったアプリケーションの作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8qql7buA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%2528Next.js%2529%2520%25E3%2581%25A8%2520Python%2520%2528Flask%2529%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8qql7buA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%2528Next.js%2529%2520%25E3%2581%25A8%2520Python%2520%2528Flask%2529%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/001e4c9b3630bc",
          "author": "Darman",
          "description": "int_to_binary関数\ndef int_to_binary(num):\n    binary = []\n    while num:\n        binary.insert(0, num % 2)\n        num //= 2\n    return binary\n\n エントリーポイント\ndef main():\n    input_number = int(input(\"整数を入力してください: \"))\n    binary_representation = int_to_binary(input_number)\n    print(f\"2進数表現: {binary_...",
          "link": "https://zenn.dev/yutabeee/articles/001e4c9b3630bc",
          "publishedOn": "2023-04-02T04:13:19.000Z",
          "wordCount": 301,
          "title": "[Python] 整数を2進数に変換する関数",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dLlqmSvq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E6%2595%25B4%25E6%2595%25B0%25E3%2582%25922%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dLlqmSvq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E6%2595%25B4%25E6%2595%25B0%25E3%2582%25922%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ca5518d416d17f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 A - Slot\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('Won' if len(set(list(s))) == 1 else 'Lost')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ca5518d416d17f",
          "publishedOn": "2023-04-02T02:37:48.000Z",
          "wordCount": 240,
          "title": "［AtCoder］ABC-189｜A - Slot",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FWDXHnc2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CA%2520-%2520Slot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FWDXHnc2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CA%2520-%2520Slot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/52e39584b75ce8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-189 B - Alcoholic\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, x = getIntMap()\n    l = getIntListRow(n)\n\n    a = [v * p for v, p in l]\n\n    s = 0\n    c = 0\n ...",
          "link": "https://zenn.dev/hyperdb/articles/52e39584b75ce8",
          "publishedOn": "2023-04-02T02:37:47.000Z",
          "wordCount": 435,
          "title": "［AtCoder］ABC-189｜B - Alcoholic",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DbIUwjyx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CB%2520-%2520Alcoholic%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DbIUwjyx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CB%2520-%2520Alcoholic%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/38d61de05c1731",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 A - Three-Point Shot\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x, y = getIntMap()\n\n    print('Yes' if abs(x - y) < 3 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/38d61de05c1731",
          "publishedOn": "2023-04-02T02:37:46.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-188｜A - Three-Point Shot",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b4Mwfg5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CA%2520-%2520Three-Point%2520Shot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b4Mwfg5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CA%2520-%2520Three-Point%2520Shot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0276fe7b46d9e3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 B - Orthogonality\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    b = getIntList()\n\n    c = []\n    for i in range(n):\n        c.append(a[i] * b[i])\n\n    print('Y...",
          "link": "https://zenn.dev/hyperdb/articles/0276fe7b46d9e3",
          "publishedOn": "2023-04-02T02:37:45.000Z",
          "wordCount": 361,
          "title": "［AtCoder］ABC-188｜B - Orthogonality",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jQHtZQri--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CB%2520-%2520Orthogonality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jQHtZQri--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CB%2520-%2520Orthogonality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hiro345/articles/044240a308b9cd",
          "author": "Hiroshi Koyama",
          "description": "Heroku でアカウントを登録したところ、多要素認証の設定が必要でした。セキュリティ強化の一旦として、Heroku のように多要素認証の設定を強制するサービスが増えてきています。少し調べてみました。\n\n OTP\n多要素認証のひとつにワンタイムパスワードの利用があり、よく使われています。ワンタイムパスワード（OTP）とは の説明\nOTP には、TOTP(Time-based One-time Password)や HOTP(HMAC-based One-time Password) の方式があります。HOTPの「H」は、Hash-based Message Authentication ...",
          "link": "https://zenn.dev/hiro345/articles/044240a308b9cd",
          "publishedOn": "2023-04-01T15:41:12.000Z",
          "wordCount": 958,
          "title": "多要素認証のワンタイムパスワードを利用する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZRhNjx2L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%259A%25E8%25A6%2581%25E7%25B4%25A0%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZRhNjx2L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%259A%25E8%25A6%2581%25E7%25B4%25A0%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hg/articles/4cf2dbc432621e",
          "author": "hi_go",
          "description": "はじめに\n今年のエイプリルフールに、Twitterで「自分は実はAIでした」というネタをやりました。\nそして、その一環として過去の自分のツイートからマルコフ連鎖を使用してツイートを生成してみました[1]。\nせっかくなのでそのやり方を簡単にメモしておきます。\n\n 基本方針\nhttps://qiita.com/hitsumabushi845/items/647f8bbe8d399f76825c\n基本的にこちらの記事を踏襲する形で作業していきます。\nただし、現在はTwitterからダウンロードできる自分の全ツイートはtweets.csvではなくtweets.jsに入っているため、主にその仕...",
          "link": "https://zenn.dev/hg/articles/4cf2dbc432621e",
          "publishedOn": "2023-04-01T15:00:00.000Z",
          "wordCount": 1502,
          "title": "Pythonでマルコフ連鎖を使って自分のツイートから新たな文章を生成する（2023年3月版）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mELVjdhn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E9%2580%25A3%25E9%258E%2596%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25EF%25BC%25882023%25E5%25B9%25B43%25E6%259C%2588%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hi_go%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwMWZkMGIyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mELVjdhn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E9%2580%25A3%25E9%258E%2596%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25EF%25BC%25882023%25E5%25B9%25B43%25E6%259C%2588%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hi_go%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwMWZkMGIyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimakaze_soft/articles/8a9fac7296bd4d",
          "author": "shimakaze_soft",
          "description": "Pythonを用いてのGoFの定義した23個のデザインパターンの一つであるObserverパターンの実装方法について解説します。\nObserverパターンは、「振る舞い関するデザインパターン」に分類されます。\n\n Observerパターンとは？\nobserverパターンには主に大きく分けて二つの役割が存在します。\n観察対象(Subject)の何らかの状態が変化した際に、Observer(観察者)に通知を行います。\n通知を受けたObserver(観察者)は状態変化に応じた処理を行います。\nそのためPublish/subscribeモデルとも言えます。\n簡単に言えば、「データの更新を複数のオ...",
          "link": "https://zenn.dev/shimakaze_soft/articles/8a9fac7296bd4d",
          "publishedOn": "2023-04-01T11:54:00.000Z",
          "wordCount": 1237,
          "title": "Pythonでデザインパターンを学ぼう (Observer)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FofZN8a0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Observer%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FofZN8a0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Observer%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/23a7081d784fa2",
          "author": "Darman",
          "description": "木構造の表現方法\n木構造を２次元配列で表現しています。\nNodes[Node[Left, Right, Data]]\n\nLeft , Right : 連結するNodeのインデックス\nData : Nodeに含まれるデータ\n\nnode_data = [\n    [1,    2,    10],\n    [3,    4,     5],\n    [5,    None, 12],\n    [None, None,  2],\n    [6,    7,     8],\n    [None, None, 11],\n    [None, None,  6],\n    [None, None...",
          "link": "https://zenn.dev/yutabeee/articles/23a7081d784fa2",
          "publishedOn": "2023-04-01T09:42:22.000Z",
          "wordCount": 890,
          "title": "２分木探索（通りがけ順）をPythonで表現してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fsPeiN6v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2592%25E5%2588%2586%25E6%259C%25A8%25E6%258E%25A2%25E7%25B4%25A2%25EF%25BC%2588%25E9%2580%259A%25E3%2582%258A%25E3%2581%258C%25E3%2581%2591%25E9%25A0%2586%25EF%25BC%2589%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fsPeiN6v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2592%25E5%2588%2586%25E6%259C%25A8%25E6%258E%25A2%25E7%25B4%25A2%25EF%25BC%2588%25E9%2580%259A%25E3%2582%258A%25E3%2581%258C%25E3%2581%2591%25E9%25A0%2586%25EF%25BC%2589%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/da0f8cfb5ee960",
          "author": "sergicalsix",
          "description": "多重継承とダイヤモンド継承\n多重継承とは、クラスが複数のクラスを継承することです。\n多重継承の一つの例であるダイヤモンド継承とは、多重継承の一種であり、クラスAを継承したクラスB、クラスAを継承したクラスCが存在しているときに、クラスBとクラスCを継承することです。\nダイヤモンド継承は図にすると以下です。\n\n 多重継承の例\nもっとも簡単な多重継承の書き方は以下です。\nclass A:\n    def __init__(self):\n        pass\nclass B:\n    def __init__(self):\n        pass\nclass C(A,B):\n    ...",
          "link": "https://zenn.dev/sergicalsix/articles/da0f8cfb5ee960",
          "publishedOn": "2023-04-01T04:10:40.000Z",
          "wordCount": 895,
          "title": "Pythonでclassを使う:番外編(1) 多重継承&ダイヤモンド継承",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Qg3XjAgg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25281%2529%2520%25E5%25A4%259A%25E9%2587%258D%25E7%25B6%2599%25E6%2589%25BF%2526%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2589%25E7%25B6%2599%25E6%2589%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Qg3XjAgg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25281%2529%2520%25E5%25A4%259A%25E9%2587%258D%25E7%25B6%2599%25E6%2589%25BF%2526%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2589%25E7%25B6%2599%25E6%2589%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/80248e2caf2d63",
          "author": "tirimen",
          "description": "本記事の目的\n例に漏れず、言語化して浅い理解を深くしていく。今回はベイズ推定。ベイズ統計学という言葉もあるように、統計の中でもメジャーだと思われる。このベイズ推定を、いつも通り理論→実践で理解する。理論についてはこちらの書籍を参考にさせていただいた。（amazonに飛ぶのでご注意ください）\nhttps://www.amazon.co.jp/道具としてのベイズ統計-涌井-良幸/dp/4534046472\n\n ベイズ理論とは\nベイズ推定の話に移る前に、その根底にあるベイズ理論について簡単に説明する。これは入力したデータを加味し、次のデータを予測する理論である。身近な一例を挙げる。ある試験...",
          "link": "https://zenn.dev/tirimen/articles/80248e2caf2d63",
          "publishedOn": "2023-04-01T01:00:00.000Z",
          "wordCount": 2672,
          "title": "MCMC法のギブスサンプリングをstreamlitで見える化しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pFqRjrLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2582%25AE%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592streamlit%25E3%2581%25A7%25E8%25A6%258B%25E3%2581%2588%25E3%2582%258B%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pFqRjrLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2582%25AE%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592streamlit%25E3%2581%25A7%25E8%25A6%258B%25E3%2581%2588%25E3%2582%258B%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/houser/articles/ff3aeb9ed34a36",
          "author": "Houser",
          "description": "もくじ\n\n\n\n\nもくじ\n\n\n\n\n\n1\n心得/マインド系\n\n\n\n2\n参考レファレンス\n\n\n\n3\n基本コマンド/メソッド系\n\n\n\n4\n初期設定/ライブラリ系\n\n\n\n5\n設計/アーキテクチャ系\n\n\n\n6\nディレクトリ構成/命名規則\n\n\n\n7\nデバック系\n\n\n\n8\nログ出力系\n\n\n\n9\nマイグレーション系\n\n\n\n10\nテスト系\n\n\n\n11\nDocker系\n\n\n\n12\nキャッシュ系\n\n\n\n13\nバリデーション系\n\n\n\n14\nミドルウェア系\n\n\n\n15\nよくある/遭遇したエラー系\n\n\n\n16\n日付処理\n\n\n\n17\nレスポンス系\n\n\n\n\n\n 心得マインド系\nThe Zen of Python\nht...",
          "link": "https://zenn.dev/houser/articles/ff3aeb9ed34a36",
          "publishedOn": "2023-03-31T13:46:41.000Z",
          "wordCount": 1165,
          "title": "python開発のための参考リスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eDgGPl3L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%258F%2582%25E8%2580%2583%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Houser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4OWMwMzE5MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eDgGPl3L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%258F%2582%25E8%2580%2583%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Houser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4OWMwMzE5MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20230331_python_delete_target_list",
          "author": "SiganAI",
          "description": "データ分析の際に配列から特定の要素（例えば注目対象ではない要素など）を削除する方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法\nPythonのremove関数およびpop関数を使用する．\n実際のコードを以下で示す．\n\n 実際の使用例\nここでは例として，ある配列から任意の要素（1種類）を削除する．\n\ndelete_list_target.py\nlist1 = [1, 2, 3, 4, 5]\ntarget1 = 3\nlist1.remove(target1)\n\nprint(list1)\n# [1, ...",
          "link": "https://zenn.dev/siganai/articles/20230331_python_delete_target_list",
          "publishedOn": "2023-03-31T11:38:07.000Z",
          "wordCount": 947,
          "title": "【Python】配列から特定の要素を削除する方法について【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zFpA3Phe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%2585%258D%25E5%2588%2597%25E3%2581%258B%25E3%2582%2589%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SiganAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zFpA3Phe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%2585%258D%25E5%2588%2597%25E3%2581%258B%25E3%2582%2589%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SiganAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/cfc328a436142f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-187 B - Gentle Pairs\n\n\n\n 提出結果\nimport itertools\n\n\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef s(x, y):\n    return (y[1] - x[1]) / (y[0] - x[0])\n\n\ndef main():\n    n = getInt()\n    l = getIntListRow(...",
          "link": "https://zenn.dev/hyperdb/articles/cfc328a436142f",
          "publishedOn": "2023-03-31T09:22:09.000Z",
          "wordCount": 510,
          "title": "［AtCoder］ABC-187｜B - Gentle Pairs",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TjIuG8Hz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-187%25EF%25BD%259CB%2520-%2520Gentle%2520Pairs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TjIuG8Hz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-187%25EF%25BD%259CB%2520-%2520Gentle%2520Pairs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1fc5ee5b3ca47d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-187 A - Large Digits\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef s(x):\n    return sum(map(int, list(str(x))))\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(max(s(a), s(b)))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1fc5ee5b3ca47d",
          "publishedOn": "2023-03-31T09:22:09.000Z",
          "wordCount": 292,
          "title": "［AtCoder］ABC-187｜A - Large Digits",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c9chjVUB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-187%25EF%25BD%259CA%2520-%2520Large%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c9chjVUB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-187%25EF%25BD%259CA%2520-%2520Large%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutakawanaga/articles/d61699fa0a1b13",
          "author": "YutaKawanaga",
          "description": "きっかけ\n\n\nrequest.data['hoge']みたいに何が何の型で入っているのか分からないのがどうにかならないかと思って\n詳しく知りたい方はこちら\n\n\n 本題\nfrom typing import TypedDict\n\nclass ObjectType(TypedDict):\n    id: int\n    name: str\n\nclass RequestType(TypedDict):\n    foo: str\n    bar: ObjectType\n\ndef get(self, args: RequestType) -> None:\n    foo = args['...",
          "link": "https://zenn.dev/yutakawanaga/articles/d61699fa0a1b13",
          "publishedOn": "2023-03-31T01:35:15.000Z",
          "wordCount": 263,
          "title": "Pythonのdictに型付けする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eX3wTrjG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEdict%25E3%2581%25AB%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YutaKawanaga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljNWYwZWJhOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eX3wTrjG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEdict%25E3%2581%25AB%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YutaKawanaga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljNWYwZWJhOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/235c11c5a67e53",
          "author": "オライリーヨッシー",
          "description": "概要\nなんとも不可思議なエラーが発生したので記事を作成。どなたかご存知の方がいれば、詳細を教えてほしい。どういったエラーかというと、Flaskアプリケーションを立ち上げた際に、上記エラーが発生した。ローカル立ち上げた後、問題なく下記レスポンスがDBから返却された。\n\nそして、試しにPostmanで同様のローカルURLに対してレスポンスを送ったところ、403エラーが返ってきた。\n\n\n 原因\n一応、上記画像にtokenは記載されているが、tokenを要するわけではない。使用するライブラリがインストールされていない、もしくはCORSの設定がされていない訳でもない。どうすれば良いものか、、と...",
          "link": "https://zenn.dev/oreilly_ota/articles/235c11c5a67e53",
          "publishedOn": "2023-03-31T00:04:03.000Z",
          "wordCount": 123,
          "title": "【Postoman】PostmanでのGETリクエストが403 Forbiddenエラーを返す一方、ブラウザ上で正常に動作する状況",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ju9ZxrhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Postoman%25E3%2580%2591Postman%25E3%2581%25A7%25E3%2581%25AEGET%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258C403%2520Forbidden%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E4%25B8%2580%25E6%2596%25B9%25E3%2580%2581%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E6%25AD%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ju9ZxrhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Postoman%25E3%2580%2591Postman%25E3%2581%25A7%25E3%2581%25AEGET%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258C403%2520Forbidden%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E4%25B8%2580%25E6%2596%25B9%25E3%2580%2581%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E6%25AD%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/edojidaipj/articles/da703b617ef778",
          "author": "江戸時代PJ",
          "description": "背景\n「起きたら全て消えていた」　Discordで横行する“サーバー凍結荒らし”、1万人参加サーバーが一夜で消えたその手口\nという記事を読んで、「gpt-3.5-turboに検知させたらいいんじゃなイカ！？」\nって思ったのでやってみようと思います。\n・・・\nできました。\nサーバーを開いてあるのでいろいろ試してみて下さい。\n一応言っておきますが、シークレットトークンは送信しないでくださいね？\nhttps://discord.gg/DnWFxRAU\n\n 実装のポイント\n以下のような構成で作りました。\n\n以下のようなプロンプトを使用して検知させてみました。\n日本語にではなく英語を使用した理...",
          "link": "https://zenn.dev/edojidaipj/articles/da703b617ef778",
          "publishedOn": "2023-03-30T19:25:22.000Z",
          "wordCount": 393,
          "title": "gpt-3.5-turboを使ってチャットの異常を検知する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rJNdNPDx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:gpt-3.5-turbo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B1%259F%25E6%2588%25B8%25E6%2599%2582%25E4%25BB%25A3PJ%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYzJmOGExYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rJNdNPDx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:gpt-3.5-turbo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B1%259F%25E6%2588%25B8%25E6%2599%2582%25E4%25BB%25A3PJ%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYzJmOGExYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lot36z/articles/1c734bde03677c",
          "author": "のっかー",
          "description": "Windows用のpyenvのインストール方法です。\nWindows用のpyenvが以下のサイトに公開されています。\nhttps://github.com/pyenv-win/pyenv-win\n上記サイトに記載されている手順でインストール可能です。\nGitコマンドを使用する方法が最新版のpyenvを使用できて便利だと思います。\npipコマンドを使用する方法だと最新版のpyenvを使用できず、最近リリースされたPythonをpyenvでインストールできないことがありました。\n以下、PowerShellで実行していきます。\nまず以下のコマンドでpyenv-winのソースコードをホームフォル...",
          "link": "https://zenn.dev/lot36z/articles/1c734bde03677c",
          "publishedOn": "2023-03-30T14:14:34.000Z",
          "wordCount": 267,
          "title": "pyenvをWindowsにインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n36kRnrE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%25E3%2582%2592Windows%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n36kRnrE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%25E3%2582%2592Windows%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/04ba92c0abe02e",
          "author": "sergicalsix",
          "description": "はじめに\nmatplotlibで作成した線を枠線で縁取ったことはありますか？\n線を縁取ることで、線がはっきりするので複数の線が乱立しているような図では役に立つかもしれません。\n実線の縁取りは簡単なものの、点線の縁取りは専用の機能を使わないとできない上に日本語の参考記事がなかったので、今回作成しました。\n\n 結論\nmatplotlib.patheffectsで枠線の設定をしよう！！\nimport matplotlib.pyplot as plt\nimport matplotlib.patheffects as pe\n\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, ...",
          "link": "https://zenn.dev/sergicalsix/articles/04ba92c0abe02e",
          "publishedOn": "2023-03-30T13:11:38.000Z",
          "wordCount": 913,
          "title": "matplotlibで枠線を書く:点線の縁取り",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UIRQkwjp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:matplotlib%25E3%2581%25A7%25E6%259E%25A0%25E7%25B7%259A%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%253A%25E7%2582%25B9%25E7%25B7%259A%25E3%2581%25AE%25E7%25B8%2581%25E5%258F%2596%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UIRQkwjp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:matplotlib%25E3%2581%25A7%25E6%259E%25A0%25E7%25B7%259A%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%253A%25E7%2582%25B9%25E7%25B7%259A%25E3%2581%25AE%25E7%25B8%2581%25E5%258F%2596%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/d15a366bf1708d",
          "author": "Darman",
          "description": "以前私が普段使っている、Pythonのディレクトリ構成について記事を書きました。\nhttps://zenn.dev/yutabeee/articles/c53890d1bdbd56\nだんだんこのフォルダとファイルを手打ちで作るのがめんどくさくなってきたので、自動で作成するスクリプトを作成したので記録しておきます。\n\n 目標とするディレクトリ構成\n    project_name/\n    ├── class_name.module/\n    │ ├── __init__.py\n    │ └── class_name.py\n    │\n    ├── tests/\n    │ ├── _...",
          "link": "https://zenn.dev/yutabeee/articles/d15a366bf1708d",
          "publishedOn": "2023-03-30T12:35:12.000Z",
          "wordCount": 671,
          "title": "ディレクトリ構成を自動生成するPythonスクリプト作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C1yb6EAZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C1yb6EAZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dba206d4dfea7f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-186 A - Brick\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, w = getIntMap()\n\n    print(n // w)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/dba206d4dfea7f",
          "publishedOn": "2023-03-30T05:32:40.000Z",
          "wordCount": 226,
          "title": "［AtCoder］ABC-186｜A - Brick",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AnlzLX0Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-186%25EF%25BD%259CA%2520-%2520Brick%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AnlzLX0Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-186%25EF%25BD%259CA%2520-%2520Brick%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/90bd2359b072c9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-186 B - Blocks on Grid\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    h, w = getIntMap()\n    a = getIntListRow(h)\n\n    m = min([min(l) for l in a])\n    s = sum([s...",
          "link": "https://zenn.dev/hyperdb/articles/90bd2359b072c9",
          "publishedOn": "2023-03-30T05:32:40.000Z",
          "wordCount": 407,
          "title": "［AtCoder］ABC-186｜B - Blocks on Grid",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yBDoUXVO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-186%25EF%25BD%259CB%2520-%2520Blocks%2520on%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yBDoUXVO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-186%25EF%25BD%259CB%2520-%2520Blocks%2520on%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuph/articles/ea6cf252aace7c",
          "author": "kazuph",
          "description": "今回はこれを使います。\nhttps://github.com/mmabrouk/chatgpt-wrapper\n有料でもよければAPIのキーを渡して使えますが、無料でやるために内部でヘッドレスブラウザを利用する方法もあるみたいなので、今回はそれを試してみます。\n!\nブラウザ版のChatGPTを利用すると、OpenAIのモデルの学習に使われる可能性があるので、渡したくない機密データは扱わないでください。\n\n\n Setup\nまずpipのモジュールをインストール\npip install git+https://github.com/mmabrouk/chatgpt-wrapper\n次に、pl...",
          "link": "https://zenn.dev/kazuph/articles/ea6cf252aace7c",
          "publishedOn": "2023-03-30T02:59:36.000Z",
          "wordCount": 540,
          "title": "コマンドライン上でChatGPTを実行したい（playwright, パイプでテキスト渡せる）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--O846-sLt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E4%25B8%258A%25E3%2581%25A7ChatGPT%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2588playwright%252C%2520%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%25B8%25A1%25E3%2581%259B%25E3%2582%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuph%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjNmY3ODBlZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--O846-sLt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E4%25B8%258A%25E3%2581%25A7ChatGPT%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2588playwright%252C%2520%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%25B8%25A1%25E3%2581%259B%25E3%2582%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuph%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjNmY3ODBlZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/methane/articles/2023-pep582-is-rejected",
          "author": "methane",
          "description": "__pypackages__ を自動的にimport pathに追加する提案 PEP 582 が Reject されました。ただし \"at least in its current form.\" という但し書きがついているので、今後形を変えて復活する可能性は残っています。\nhttps://discuss.python.org/t/pep-582-python-local-packages-directory/963/430\n\n PEP 582 とは\nhttps://peps.python.org/pep-0582/\n提案されていた仕様を簡単に説明すると、次のようになります。\n次の場所に ...",
          "link": "https://zenn.dev/methane/articles/2023-pep582-is-rejected",
          "publishedOn": "2023-03-30T02:02:04.000Z",
          "wordCount": 607,
          "title": "PEP 582 (__pypackages__) がRejectされました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0tXhEN-b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PEP%2520582%2520%2528__pypackages__%2529%2520%25E3%2581%258CReject%25E3%2581%2595%25E3%2582%258C%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:methane%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4RE5nS2F5a3FreGhkeUZMaG9Yc3hRVk9QVFVrd3hqTngtZGlxT05FPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0tXhEN-b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PEP%2520582%2520%2528__pypackages__%2529%2520%25E3%2581%258CReject%25E3%2581%2595%25E3%2582%258C%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:methane%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4RE5nS2F5a3FreGhkeUZMaG9Yc3hRVk9QVFVrd3hqTngtZGlxT05FPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsui/articles/langchain-plugin",
          "author": "tatsui",
          "description": "はじめに\nChatGPTの機能を拡張するためのツール ChatGPT plugins が一部の開発者向けにリリースされました。\n!\n2023年3月30日時点ではアルファー版であり一般には公開されていません。\n\nしかし、プラグインを作るための仕様は公開されているので、今のうちに使い方を確認しておいて一般公開されたら自作プラグインをすぐに実行できるように準備しておきましょう。\n\n プラグインの実装方法\n実装方法はとてもシンプルで、以下のようなAPIの仕様書を記載したURLとAPIに関する説明などを記載したjsonを用意するだけです。\n{\n  \"schema_version\": \"v1\",...",
          "link": "https://zenn.dev/tatsui/articles/langchain-plugin",
          "publishedOn": "2023-03-30T01:32:52.000Z",
          "wordCount": 2283,
          "title": "ChatGPTプラグインの機能をいち早く試すには",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HqJrs6tk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%2584%25E3%2581%25A1%25E6%2597%25A9%25E3%2581%258F%25E8%25A9%25A6%25E3%2581%2599%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsui%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiN2M1ZGU4NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HqJrs6tk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%2584%25E3%2581%25A1%25E6%2597%25A9%25E3%2581%258F%25E8%25A9%25A6%25E3%2581%2599%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsui%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiN2M1ZGU4NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/dcf32f3516f013",
          "author": "ryohtaka",
          "description": "はじめに\nOpenAI の言語モデルで日本語を扱う際に、コスト概算などの目的で処理されるトークン数を推定したい場合がありますが、英語以外の言語に関しては OpenAI のドキュメントや記事に具体的な指標が記載されておらず、個人の経験則に基づいて推定するしかない状況でした。\nよって、実際どのくらいになるのか、ある程度大きなデータセットを使って指標を計算してみました。\n\nWhat are tokens and how to count them?\n\n\nHow words are split into tokens is also language-dependent. For examp...",
          "link": "https://zenn.dev/microsoft/articles/dcf32f3516f013",
          "publishedOn": "2023-03-30T01:19:20.000Z",
          "wordCount": 1233,
          "title": "OpenAI 言語モデルで日本語を扱う際のトークン推定指標",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dWNmU7Ki--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%258E%25A8%25E5%25AE%259A%25E6%258C%2587%25E6%25A8%2599%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dWNmU7Ki--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%258E%25A8%25E5%25AE%259A%25E6%258C%2587%25E6%25A8%2599%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryo117/articles/dcf32f3516f013",
          "author": "ryohtaka",
          "description": "はじめに\nOpenAI の言語モデルで日本語を扱う際に、コスト概算などの目的で処理されるトークン数を推定したい場合がありますが、英語以外の言語に関しては OpenAI のドキュメントや記事に具体的な指標が記載されておらず、個人の経験則に基づいて推定するしかない状況でした。\nよって、実際どのくらいになるのか、ある程度大きなデータセットを使って指標を計算してみました。\n\nWhat are tokens and how to count them?\n\n\nHow words are split into tokens is also language-dependent. For examp...",
          "link": "https://zenn.dev/ryo117/articles/dcf32f3516f013",
          "publishedOn": "2023-03-30T01:19:20.000Z",
          "wordCount": 1215,
          "title": "OpenAI 言語モデルで日本語を扱う際のトークン推定指標",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pm-Qsh6J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%258E%25A8%25E5%25AE%259A%25E6%258C%2587%25E6%25A8%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryohtaka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pm-Qsh6J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%258E%25A8%25E5%25AE%259A%25E6%258C%2587%25E6%25A8%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryohtaka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/openlabo/articles/d19d92b1226e37",
          "author": "meme",
          "description": "Python の初期設定のついて\nDebian系のosでのインストール想定\n\nPythonインストール\napt-getパッケージを使用してインストールする。\n\nsudo apt-get install python3\n\nvenvインストール\nwindows版だと標準でvenvもインストールされているがlinux版はインストールが必要\nなのでインストールする。\n\nsudo apt-get install python3-venv\n\npipインストール\npythonでパッケージ管理に必要なpipもインストールする。\n\nsudo apt-get install python3-pip\n\np...",
          "link": "https://zenn.dev/openlabo/articles/d19d92b1226e37",
          "publishedOn": "2023-03-29T23:19:42.000Z",
          "wordCount": 150,
          "title": "Pythonのインストールについて備忘",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZYZUxhQq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%2582%2599%25E5%25BF%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meme%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YjZBY094NUVUdG42SVFic2NGMDBENnRacUdHR19CTDlWVDE1ZnFiUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZYZUxhQq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%2582%2599%25E5%25BF%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meme%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YjZBY094NUVUdG42SVFic2NGMDBENnRacUdHR19CTDlWVDE1ZnFiUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/articles/4558bbdb9a5bbd",
          "author": "S.A",
          "description": "前記事までのまとめ、および、本記事の目的\n前記事までは、多品種少量生産における需要予測手法の確立に向けて以下のことをしていきました。\n・初回記事 : 時系列解析手法の実装と評価\n　この記事では、Store Item Demand Forecasting Challengeのデータセットにおいて、Neuralprophetの手法が精度の高い手法であると評価しました。\n\n・第2回記事 : 時間をかけず多品種の需要を精度良く予測する手法の考察\n　この記事の考察により、変動要因を除去した誤差成分に対してクラスタリングをしていき、品種をクラスターごとにまとめることにより、予測時間をかけずに精度...",
          "link": "https://zenn.dev/shungo_a/articles/4558bbdb9a5bbd",
          "publishedOn": "2023-03-29T22:37:44.000Z",
          "wordCount": 6479,
          "title": "需要の先行情報を予測に活かす実装方法の考察",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UWgJdqqd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259C%2580%25E8%25A6%2581%25E3%2581%25AE%25E5%2585%2588%25E8%25A1%258C%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%25AB%25E6%25B4%25BB%25E3%2581%258B%25E3%2581%2599%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AE%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UWgJdqqd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259C%2580%25E8%25A6%2581%25E3%2581%25AE%25E5%2585%2588%25E8%25A1%258C%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%25AB%25E6%25B4%25BB%25E3%2581%258B%25E3%2581%2599%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AE%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k0kishima/articles/5466aaeb57be7a",
          "author": "k0kishima",
          "description": "型を明示することの重要性\nロバストPython を読みました。\nhttps://amzn.to/40NzY65\nやはり型注釈が果たす文書化の役目はコードの可読性に大きく寄与するなと改めて思いました。\n一方、静的型付けの大きな特徴としては型の不整合がある場合は、実行時ではなくコンパイル時に警告を受けられることがあると思います。\nPython は動的型付け言語に分類されますが、静的解析による型エラーの指摘は受けられます。\n具体的には mypy を使います。\n$ mypy main.py          \nmain.py:3: error: Incompatible types in a...",
          "link": "https://zenn.dev/k0kishima/articles/5466aaeb57be7a",
          "publishedOn": "2023-03-29T09:08:34.000Z",
          "wordCount": 760,
          "title": "Python の型チェックを VSCode 上で行いたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aULf2kWr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%2520VSCode%2520%25E4%25B8%258A%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k0kishima%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlZGQxYzU0ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aULf2kWr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%2520VSCode%2520%25E4%25B8%258A%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k0kishima%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlZGQxYzU0ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yktakaha4/articles/get_github_projects_item_with_graphql",
          "author": "Yuuki Takahashi",
          "description": "小ネタです🍣\nIssueに紐づくGitHub Projectsを情報を取得するスクリプトをChatGPTに教えてもらったので共有します\n例えば、取得したいProjectに以下のようなCustom fieldsがあった場合、\n\n\n以下のようなスクリプトで対象のIssueに紐づく内容が取得できます\nfieldValueByName の戻り値について、どのようなデータ型を選択すべきかについては、以下を確認してください\nhttps://docs.github.com/ja/graphql/reference/unions#projectv2itemfieldvalue\n\nget_projects...",
          "link": "https://zenn.dev/yktakaha4/articles/get_github_projects_item_with_graphql",
          "publishedOn": "2023-03-29T08:17:42.000Z",
          "wordCount": 1296,
          "title": "Issueに紐づくGitHub Projectsの情報をGraphQL経由で取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7MtEEoLT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Issue%25E3%2581%25AB%25E7%25B4%2590%25E3%2581%25A5%25E3%2581%258FGitHub%2520Projects%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592GraphQL%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7MtEEoLT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Issue%25E3%2581%25AB%25E7%25B4%2590%25E3%2581%25A5%25E3%2581%258FGitHub%2520Projects%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592GraphQL%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b431c70ffa23e1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-185 B - Smartphone Addiction\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, m, t = getIntMap()\n    l = getIntListRow(m)\n\n    s = 0\n    c = n\n    r = True\n    f...",
          "link": "https://zenn.dev/hyperdb/articles/b431c70ffa23e1",
          "publishedOn": "2023-03-29T05:46:41.000Z",
          "wordCount": 504,
          "title": "［AtCoder］ABC-185｜B - Smartphone Addiction",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YwDGBHvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-185%25EF%25BD%259CB%2520-%2520Smartphone%2520Addiction%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YwDGBHvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-185%25EF%25BD%259CB%2520-%2520Smartphone%2520Addiction%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7091fab839dde6",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-185 A - ABC Preparation\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    a = getIntList()\n\n    print(min(a))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7091fab839dde6",
          "publishedOn": "2023-03-29T05:46:41.000Z",
          "wordCount": 233,
          "title": "［AtCoder］ABC-185｜A - ABC Preparation",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xCBxwWk9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-185%25EF%25BD%259CA%2520-%2520ABC%2520Preparation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xCBxwWk9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-185%25EF%25BD%259CA%2520-%2520ABC%2520Preparation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/f6272c2c32d195",
          "author": "Darman",
          "description": "抽象化とは何か\n抽象化とは、物事の本質的な部分だけを取り出して、それ以外の細かい部分を無視して単純化することです。プログラミングにおいては、複雑なプログラムをより簡潔に表現するために、抽象化が重要な役割を果たします。\n\n 抽象化の例\n例えば、車を抽象化する場合、車に必要な情報だけを取り出して表現します。車の重さや形状などの詳細な情報は必要ありません。代わりに、車の速度やブレーキの機能など、本質的な情報だけを取り出して表現します。このように、抽象化は本質的な部分だけを取り出し、細かい部分を無視することで、物事を単純化することができます。\n\n 抽象化の利点\n抽象化をすることで、プログラム...",
          "link": "https://zenn.dev/yutabeee/articles/f6272c2c32d195",
          "publishedOn": "2023-03-29T05:46:30.000Z",
          "wordCount": 84,
          "title": "オブジェクト指向の抽象化について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--374Io0XM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AE%25E6%258A%25BD%25E8%25B1%25A1%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--374Io0XM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AE%25E6%258A%25BD%25E8%25B1%25A1%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/076a78faf53b57",
          "author": "Darman",
          "description": "カプセル化とは何か\nカプセル化とは、オブジェクト指向プログラミングにおいて、オブジェクトの内部状態を外部から隠蔽し、公開する必要のある部分だけを公開することを指します。オブジェクトの内部状態は、変数やメソッドなどで構成されます。\n\n カプセル化の例\n例えば、車のオブジェクトを考えてみます。車のオブジェクトには、速度や車種などの内部状態がありますが、これらの情報は外部から直接アクセスすることはできません。代わりに、車の速度を取得するためのget_speedメソッドや、車の車種を変更するためのset_modelメソッドを公開し、これらのメソッドを介してのみ、内部状態にアクセスすることがで...",
          "link": "https://zenn.dev/yutabeee/articles/076a78faf53b57",
          "publishedOn": "2023-03-29T05:45:09.000Z",
          "wordCount": 84,
          "title": "オブジェクト指向のカプセル化について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CMvntScs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%2597%25E3%2582%25BB%25E3%2583%25AB%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CMvntScs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%2597%25E3%2582%25BB%25E3%2583%25AB%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/a1f5ff0b6a4a4c",
          "author": "sergicalsix",
          "description": "結論\nラッパー関数作成時はfunctools.wrapsを使う!!\n\n 通常のラッパー関数と弊害\nラッパー関数とは、元の関数を書き換えることなく、機能を追加する関数である。\nラッパー関数は例えば以下のように書く。\ndef trace(func):\n    def wrapper(*args,**kwargs):\n        result = func(*args,**kwargs)\n        print('Hello')　#追加したい処理\n\treturn result\n    return wrapper\n@trace \ndef f(n):\n    \"\"\"nの2乗を返す関数...",
          "link": "https://zenn.dev/sergicalsix/articles/a1f5ff0b6a4a4c",
          "publishedOn": "2023-03-29T04:44:10.000Z",
          "wordCount": 395,
          "title": "Pythonにおけるラッパー関数のテクニック:functools.wraps",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fZB87xiU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%253Afunctools.wraps%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fZB87xiU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%253Afunctools.wraps%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/teba_eleven/articles/bc4e29c9ee6f14",
          "author": "手羽先",
          "description": "環境\n\nM1Mac\n\nVentura 13.2.1（22D68）\n\n\npython\n\nPython 3.9.6\n\n\npythonライブラリ\n\nライブラリを表示> pip list\nPackage                 Version\n----------------------- --------------------\nabsl-py                 1.4.0\nappnope                 0.1.3\nasttokens               2.2.1\nbackcall                0.2.0\ncache...",
          "link": "https://zenn.dev/teba_eleven/articles/bc4e29c9ee6f14",
          "publishedOn": "2023-03-29T04:09:51.000Z",
          "wordCount": 631,
          "title": "【Python】YOLOv5で画面上をリアルタイムで推論する【M1/Mac】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A3-SWUlD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591YOLOv5%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E4%25B8%258A%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590M1%252FMac%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E7%25BE%25BD%25E5%2585%2588%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjRmMWJiZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A3-SWUlD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591YOLOv5%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E4%25B8%258A%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590M1%252FMac%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E7%25BE%25BD%25E5%2585%2588%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjRmMWJiZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/c53890d1bdbd56",
          "author": "Darman",
          "description": "Pythonのディレクトリ構成は、プロジェクトやライブラリによって異なる場合がありますが、一般的な構成を以下に示します。\n\n 基本的なディレクトリ構成\nプロジェクト名/\n│\n├─ __init__.py\n├─ main.py （メインの実行ファイル）\n│\n├─ パッケージ1/\n│   ├─ __init__.py\n│   ├─ モジュール1.py\n│   └─ モジュール2.py\n│\n├─ パッケージ2/\n│   ├─ __init__.py\n│   ├─ モジュール3.py\n│   └─ モジュール4.py\n│\n├─ tests/ （テスト用ディレクトリ）\n│   ├─ __init_...",
          "link": "https://zenn.dev/yutabeee/articles/c53890d1bdbd56",
          "publishedOn": "2023-03-29T04:04:15.000Z",
          "wordCount": 629,
          "title": "Pythonのパッケージの基本的なディレクトリ構成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LpBPXeKo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LpBPXeKo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/9303de36ea79e5",
          "author": "Darman",
          "description": "Pythonにおいて、プログラム実行中にエラーが発生することはよくあります。このような場合、エラーが発生してプログラムが中断されるのではなく、エラーに対処するための処理を行うことができます。このような処理のことをエラーハンドリングといいます。\n\n try-except文\nPythonにおけるエラーハンドリングの基本的な方法は、try-except文です。tryブロック内にエラーが発生する可能性のあるコードを記述し、exceptブロックでエラーが発生した場合に実行する処理を記述します。例えば、以下のようなコードが考えられます。\n\npython\ntry:\n    # エラーが発生する可能性の...",
          "link": "https://zenn.dev/yutabeee/articles/9303de36ea79e5",
          "publishedOn": "2023-03-29T02:18:11.000Z",
          "wordCount": 364,
          "title": "Pythonのエラーハンドリングについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pzjGEWrN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pzjGEWrN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/35cf127cb0e0a5",
          "author": "Darman",
          "description": "Pythonのdocstring（ドキュメント文字列）は、コードの可読性と保守性を向上させるために重要な要素です。この記事では、docstringの基本について解説します。\n\n docstringとは？\ndocstringは、関数、クラス、モジュールなどのコードブロックに説明や使い方を記述するためのコメントです。docstringは、コードの可読性を向上させ、他の開発者や将来の自分が理解しやすくすることが目的です。\n\n docstringの基本\ndocstringを書く際には、以下のルールに従ってください。\n\n\n三重引用符で囲む: docstringは、シングルクォート（'）かダブルクォ...",
          "link": "https://zenn.dev/yutabeee/articles/35cf127cb0e0a5",
          "publishedOn": "2023-03-29T00:44:17.000Z",
          "wordCount": 170,
          "title": "[Python] docstringってなに？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G7-MOyuo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520docstring%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G7-MOyuo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520docstring%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/f52f76d930e093",
          "author": "Darman",
          "description": "Pythonは動的型付け言語であるため、型宣言は必須ではありませんが、最近のバージョンでは型宣言を使用することが可能です。型宣言の利用によって、プログラムの可読性が向上し、タイプミスによるバグを防止することができます。\n型宣言の方法は、変数名や関数名の後ろにコロン（:）を記述し、その後に型を記述することです。例えば、整数型の変数を宣言する場合は以下のようになります。\n\npython\nnum: int = 10\n\n関数の場合は、引数と返り値の型を宣言することができます。例えば、整数型の引数を受け取り、文字列型を返す関数を宣言する場合は以下のようになります。\n\npython\ndef func...",
          "link": "https://zenn.dev/yutabeee/articles/f52f76d930e093",
          "publishedOn": "2023-03-28T15:54:13.000Z",
          "wordCount": 136,
          "title": "Pythonで型宣言をする時の基本的な書き方！！！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N5YS9jwz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%25A3%25E8%25A8%2580%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25EF%25BC%2581%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N5YS9jwz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%25A3%25E8%25A8%2580%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25EF%25BC%2581%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/156d855f7dd4f2",
          "author": "Darman",
          "description": "プログラミングの基礎である値渡と参照渡しについてコードのサンプルを作成しながらまとめていきます。\n\n 値渡し\n値渡しは、関数に引数の値をコピーして渡す方法です。関数内で引数の値が変更されても、元の変数の値は影響を受けません。Pythonでは、イミュータブル（変更不可）なオブジェクトが値渡しの対象となります。例えば、数値、文字列、タプルなどです。\n\n値渡しの例\ndef update_value(x):\n    x = x * 2\n    print(\"x in function:\", x)\n\nx = 10\nupdate_value(x)\nprint(\"x outside function:...",
          "link": "https://zenn.dev/yutabeee/articles/156d855f7dd4f2",
          "publishedOn": "2023-03-28T14:58:41.000Z",
          "wordCount": 438,
          "title": "Pythonで値渡しと参照渡しについて考える。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CP-WSjhS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CP-WSjhS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/windvoice/articles/32fb9574fcb5b5",
          "author": "WindVoice",
          "description": "最近話題のRWKV-LMのRWKC-v4neo 14Bモデルを手元のPCで動かしましたので手順を書き残しておきます。とても簡単に書いてありますが、だいたい私が実行した通りです。\n\n スペック\n\nCPU Intel Core i7 12700K\n64GB Memory(16GB x 4)\nNVIDIA GeForce RTX 3070(8GB) ※ただしCPUモードで動かしています\nWindows 11\nPython 3.9.12\nPyTorch 1.13.1+cu117\n\nなお、17Bモデルは64GBメモリでは本来不足なので、swap領域を増やしています。Windows 11の場合、「設...",
          "link": "https://zenn.dev/windvoice/articles/32fb9574fcb5b5",
          "publishedOn": "2023-03-28T13:12:47.000Z",
          "wordCount": 599,
          "title": "【手順】RWKV-LMがローカルPCで動作するまで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J0bn24Zm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2589%258B%25E9%25A0%2586%25E3%2580%2591RWKV-LM%25E3%2581%258C%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:WindVoice%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1YTM2MjcxZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J0bn24Zm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2589%258B%25E9%25A0%2586%25E3%2580%2591RWKV-LM%25E3%2581%258C%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:WindVoice%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1YTM2MjcxZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s_ryuuki/articles/79ab112ba32c19",
          "author": "s_ryuuki",
          "description": "はじめに\n↓の記事を見てMacでもできないかなと思い試してみました。\nhttps://note.com/ohnuma/n/nad3dec051684\n\n 実行環境\n\n ハード\n% system_profiler SPHardwareDataType\nHardware:\n\n    Hardware Overview:\n\n      Model Name: Mac Studio\n      Model Identifier: Mac13,1\n      Chip: Apple M1 Max\n      Total Number of Cores: 10 (8 performance an...",
          "link": "https://zenn.dev/s_ryuuki/articles/79ab112ba32c19",
          "publishedOn": "2023-03-28T12:32:20.000Z",
          "wordCount": 2437,
          "title": "M1 MaxでChatRWKVを使いrwkv-4-pile-7bを動かしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I7OdLTyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Max%25E3%2581%25A7ChatRWKV%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584rwkv-4-pile-7b%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s_ryuuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4OTgtUmxVdWxra0JEengtN2pQRE8tX2R6by02cGZNVWxHdTl5R2c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I7OdLTyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Max%25E3%2581%25A7ChatRWKV%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584rwkv-4-pile-7b%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s_ryuuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4OTgtUmxVdWxra0JEengtN2pQRE8tX2R6by02cGZNVWxHdTl5R2c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b2aadee9350e25",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-184 B - Quizzes\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n, x = getIntMap()\n    s = list(getString())\n\n    for a in s:\n        x += 1 if a == 'o' else -1\n        x = max(x, 0)\n    print(x)\n\n\nif __name__ ==...",
          "link": "https://zenn.dev/hyperdb/articles/b2aadee9350e25",
          "publishedOn": "2023-03-28T07:01:05.000Z",
          "wordCount": 331,
          "title": "［AtCoder］ABC-184｜B - Quizzes",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ih9Gg2ju--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-184%25EF%25BD%259CB%2520-%2520Quizzes%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ih9Gg2ju--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-184%25EF%25BD%259CB%2520-%2520Quizzes%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7462c69d3d35d5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-184 A - Determinant\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n    c, d = getIntMap()\n\n    print(a * d - b * c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7462c69d3d35d5",
          "publishedOn": "2023-03-28T07:01:04.000Z",
          "wordCount": 254,
          "title": "［AtCoder］ABC-184｜A - Determinant",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LxNeWBlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-184%25EF%25BD%259CA%2520-%2520Determinant%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LxNeWBlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-184%25EF%25BD%259CA%2520-%2520Determinant%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shin1007/articles/3416e44ffe6868",
          "author": "shin1007",
          "description": "クラスファイル\nfrom base64 import b64encode\nimport csv\nfrom tempfile import TemporaryFile\n\nfrom cryptography.fernet import Fernet # pip install cryptography\n\n# TODO: PyArmorでコード自体を暗号化する\n# https://kyogom.com/tech/pyarmor/\nclass Encryption:\n    # 暗号化の参考ページ\n    # https://laboratory.kazuuu.net/encrypting-...",
          "link": "https://zenn.dev/shin1007/articles/3416e44ffe6868",
          "publishedOn": "2023-03-28T04:22:00.000Z",
          "wordCount": 991,
          "title": "Pythonで簡単な暗号化/復号を行うクラス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_1asDdzN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%252F%25E5%25BE%25A9%25E5%258F%25B7%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shin1007%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUg4dkpGZlgxTi1pQXh2VHRsbUhRZ2g5ekt0ZWRmLWF0NzNXcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_1asDdzN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%252F%25E5%25BE%25A9%25E5%258F%25B7%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shin1007%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUg4dkpGZlgxTi1pQXh2VHRsbUhRZ2g5ekt0ZWRmLWF0NzNXcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/atakon/articles/youtube-transcript",
          "author": "かずお",
          "description": "こんにちは、日台カップルYouTuberです。\n以前はRailsのバックエンド開発オンリーでしたが、直近半年くらいはSwiftでiOSアプリ開発をしています。個人開発でも最近はSwiftUIを使ってゲームアプリを作っています。今月中にリリース予定なので、そちらの方もまた記事にしたいと考えています。\n\n はじめに\n今回はYouTubeの編集の際に利用する字幕の自動生成と動画編集への適用の仕方についてまとめたいと思います。\n最近OpenAIのwhisper apiが公開されたことがきっかけで調査をはじめました。\n次の一つでも当てはまればに参考になると思います。\n* OpenAIのwhiper...",
          "link": "https://zenn.dev/atakon/articles/youtube-transcript",
          "publishedOn": "2023-03-28T03:48:34.000Z",
          "wordCount": 3322,
          "title": "YouTube動画編集のために利用する字幕をOpenAIのwhisper apiを使って生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pnXb_xeL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%25E5%258B%2595%25E7%2594%25BB%25E7%25B7%25A8%25E9%259B%2586%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25AD%2597%25E5%25B9%2595%25E3%2582%2592OpenAI%25E3%2581%25AEwhisper%2520api%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lVXzRoWm52dmhORjE1X2hBSHIwU0ZfZUpKMWk1S1hDVER3cTU1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pnXb_xeL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%25E5%258B%2595%25E7%2594%25BB%25E7%25B7%25A8%25E9%259B%2586%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25AD%2597%25E5%25B9%2595%25E3%2582%2592OpenAI%25E3%2581%25AEwhisper%2520api%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lVXzRoWm52dmhORjE1X2hBSHIwU0ZfZUpKMWk1S1hDVER3cTU1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kmasan/articles/c5853d91f6f691",
          "author": "kmasan",
          "description": "自分よくセンサを使ったことする人でセンサを扱うにも得られるデータの分析をしないといけない\n今回は自分がよくセンサデータの分析に使っているmatplotlibの使い方について載せておく\n\n matplotlibで何ができるの？\n\n グラフが作れる\nデータを見れるだけでなく，データ処理の結果も表示できる\n言語はpythonを使用しているので，JupyterNotebookで実行する以外にもpython単体でも動きます\nなんならvsCodeでJupyter環境構築できます\nというかvsCodeでやるのおすすめです\n\n JupyteNotebookで実行するメリット・デメリット\n\n\nメリット\n\n...",
          "link": "https://zenn.dev/kmasan/articles/c5853d91f6f691",
          "publishedOn": "2023-03-28T01:55:00.000Z",
          "wordCount": 1467,
          "title": "Jupyter(matplotlib)でセンサデータの分析をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LrDgYnfW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2528matplotlib%2529%25E3%2581%25A7%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmasan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxY2Y1NjA0OWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LrDgYnfW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2528matplotlib%2529%25E3%2581%25A7%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmasan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxY2Y1NjA0OWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hojicha/articles/a5663b0b3c524a",
          "author": "hojicha",
          "description": "COEIROINKにリリンちゃんが追加されました。これは試すしかありません。Ubuntuで。しかし、2023/3/28現在、UbuntuはCOEIROINKによりサポートされていません。\n調べると、UbuntuでCOEIROINKのエンジンを動かす試みをされた先駆記事がありましたが、依存関係が変わったせいか私の環境では再現されませんでした。\nその後、修正して私の手元で動かすことができたので、その手順を共有します。\n※今後COEIROINKがLinuxに対応した場合は、そちらに従ってください。また、Google Colabでも動いたので、他環境で依存関係の解決に困っている方にも参考になるか...",
          "link": "https://zenn.dev/hojicha/articles/a5663b0b3c524a",
          "publishedOn": "2023-03-28T00:29:41.000Z",
          "wordCount": 502,
          "title": "Ubuntu22.04でCOEIROINK(GPU)のエンジンを動かしてリリンちゃんと話す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_L81rPDs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu22.04%25E3%2581%25A7COEIROINK%2528GPU%2529%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25B3%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E8%25A9%25B1%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hojicha%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2oxM1Utb1hfeGlNRlctZGlCY19PaHpCcGdMTzVOTGdYNTdFMEt5PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_L81rPDs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu22.04%25E3%2581%25A7COEIROINK%2528GPU%2529%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25B3%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E8%25A9%25B1%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hojicha%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2oxM1Utb1hfeGlNRlctZGlCY19PaHpCcGdMTzVOTGdYNTdFMEt5PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuma_soon/articles/ff7fffaa7f64cc",
          "author": "kazuma-soon",
          "description": "Armory3dとはblenderのゲームエンジンです。\nゲームエンジンならUEでいいじゃん！と思いましたが、blenderで使用できるものがあるので、そちらを使用してみます。\nしかしながら、こいつ、、、公式通りにインストールしても動かない！\n今回は、MacOSでArmoryを動かすまでです。簡単です。\n\n 環境\n\nApple M1 Pro, macOS Ventura 13.2.1\nblender 3.3.5LTS（安定版）\n\n\n アドオンのインストール\nこちらの手順で行います。\nこれは他のアドオンと同じで、armory.pyをインストールします。\n注意すべきは、GitHubからダウン...",
          "link": "https://zenn.dev/kazuma_soon/articles/ff7fffaa7f64cc",
          "publishedOn": "2023-03-27T16:26:07.000Z",
          "wordCount": 180,
          "title": "[blender]Armory3dをMacで稼働させる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RXOZNYAP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bblender%255DArmory3d%25E3%2582%2592Mac%25E3%2581%25A7%25E7%25A8%25BC%25E5%2583%258D%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RXOZNYAP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bblender%255DArmory3d%25E3%2582%2592Mac%25E3%2581%25A7%25E7%25A8%25BC%25E5%2583%258D%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ykmra/articles/ead0201924866d",
          "author": "ykmra",
          "description": "2022/8にPython3エンジニア認定データ分析試験を受験し、合格した。\n以下に、勉強方法を共有する。\n※試験に合格することではなく、pythonを使いこなせるようになることが目的で勉強したので、最短での合格方法ではない。\n\n 勉強前\nプログラミングを業務で使用した経験なし。\n学生時代のプログラミング経験なし。\nもちろん、文法なども全く知らない状態\n統計検定２級取得済。\n\n 使用教材と勉強方法\nhttps://www.udemy.com/course/python-ai/\nhttps://www.udemy.com/course/ds_for_python/\npythonの基本的な文...",
          "link": "https://zenn.dev/ykmra/articles/ead0201924866d",
          "publishedOn": "2023-03-27T13:47:37.000Z",
          "wordCount": 180,
          "title": "プログラミング経験ゼロの社会人がPython3エンジニア認定データ分析試験に合格するまで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BEKNCxou--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%25AE%25E7%25A4%25BE%25E4%25BC%259A%25E4%25BA%25BA%25E3%2581%258CPython3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E8%25A9%25A6%25E9%25A8%2593%25E3%2581%25AB%25E5%2590%2588%25E6%25A0%25BC%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykmra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Wm1IRjRXZjNEVGp6QXJTeEZzbkhoY0xIVzlhWkh0LWNadkp1MmI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BEKNCxou--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%25AE%25E7%25A4%25BE%25E4%25BC%259A%25E4%25BA%25BA%25E3%2581%258CPython3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E8%25A9%25A6%25E9%25A8%2593%25E3%2581%25AB%25E5%2590%2588%25E6%25A0%25BC%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykmra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Wm1IRjRXZjNEVGp6QXJTeEZzbkhoY0xIVzlhWkh0LWNadkp1MmI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hikapoppin/articles/559cf40a50af7e",
          "author": "hikaru",
          "description": "概要\n以下の記事の続きです。\nhttps://zenn.dev/hikapoppin/articles/69be223c89fbd5\nAWS CDKを使って簡単なサーバーレスアプリにしてみました。\n\n 背景\n上記の記事のプログラムを作成中にAWS CDKの学習およびAWS Certified Developer - Associateの勉強をしており、せっかくなのでAWS上で稼働させてみることにしました。\n\n システム構成図\n\n大まかな処理フローは以下の通りです。\n\nユーザーがCloudFrontのドメイン名にアクセス\nWAFがIPsetに記載されているアドレス以外からの通信をブロッ...",
          "link": "https://zenn.dev/hikapoppin/articles/559cf40a50af7e",
          "publishedOn": "2023-03-27T12:48:32.000Z",
          "wordCount": 8465,
          "title": "SpotifyAPIで未知の曲を漁ってみた②：AWS CDKを使用したサーバーレスAPI化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ngamr5vy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpotifyAPI%25E3%2581%25A7%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E6%259B%25B2%25E3%2582%2592%25E6%25BC%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A1%25EF%25BC%259AAWS%2520CDK%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9API%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ykc4a2d0MkRET1AzQTNmbmNzMjhKM2UxWWJPQklHdGc3NndKNGhIQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ngamr5vy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpotifyAPI%25E3%2581%25A7%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E6%259B%25B2%25E3%2582%2592%25E6%25BC%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A1%25EF%25BC%259AAWS%2520CDK%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9API%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ykc4a2d0MkRET1AzQTNmbmNzMjhKM2UxWWJPQklHdGc3NndKNGhIQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/otohbk_ky/articles/set_up_pyspark_env",
          "author": "OtO",
          "description": "はじめに\n社内でSpark関連の基礎知識をまとめたblogを書くに当たって、RDDを実際に作成しながら試したかったのでlocalでpysparkの環境構築。\nただ、調べていると色んなやり方があって少しごちゃごちゃしていたので、もっとも簡単な方法を自分の整理のために残しておきます。（今後環境が変わった時とかにすぐ使えるように）\n\n 環境\n今回は以下の環境でpysparkをダウンロードします。\n事前にpythonとjavaのインストールが必要です。（javaが必要な理由はApache Sparkが動くのに必要なため。）\npipがインストールされてない場合はpythonのインストール後に行...",
          "link": "https://zenn.dev/otohbk_ky/articles/set_up_pyspark_env",
          "publishedOn": "2023-03-27T09:35:33.000Z",
          "wordCount": 548,
          "title": "localでpysparkの簡易環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NQS_8EXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:local%25E3%2581%25A7pyspark%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OtO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxN2Y4MWZiYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NQS_8EXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:local%25E3%2581%25A7pyspark%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OtO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxN2Y4MWZiYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/accb751b2795d6",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-183 A - ReLU\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(n if n >= 0 else 0)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/accb751b2795d6",
          "publishedOn": "2023-03-27T03:44:32.000Z",
          "wordCount": 226,
          "title": "［AtCoder］ABC-183｜A - ReLU",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4Lg-3RG9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-183%25EF%25BD%259CA%2520-%2520ReLU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4Lg-3RG9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-183%25EF%25BD%259CA%2520-%2520ReLU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4136755d286d42",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-183 B - Billiards\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    sx, sy, gx, gy = getIntMap()\n\n    rx = gx - sx\n    ry = gy / sy\n\n    df = (rx / (ry + 1)) * ry\n\n    print(gx - df)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/4136755d286d42",
          "publishedOn": "2023-03-27T03:44:32.000Z",
          "wordCount": 298,
          "title": "［AtCoder］ABC-183｜B - Billiards",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Klm6fRsi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-183%25EF%25BD%259CB%2520-%2520Billiards%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Klm6fRsi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-183%25EF%25BD%259CB%2520-%2520Billiards%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/26295363907c89",
          "author": "オライリーヨッシー",
          "description": "概要\nシステム開発に携わるデベロッパーであれば、誰しもデバッグに頭を悩ませることが多いだろう。特にデバッグするためのエラー内容特定について、時間がかかる人が多いのではないか。かく言う自分もそうである。システム開発歴が短いため、「これって、どう言うエラー？？」とか「どこに原因があるの？？」と問題分析ができず、時間を空費してしまうことが多々あった。コードを書くうえで、避けるべきエラー出力の方法と良いエラー出力の方法を記載する。\n\n 避けるべきエラー出力の方法\n結論から言うと、下記が避けるべきエラー出力の方法である。\nexcept:\n\treturn json.dumps({\n\t    's...",
          "link": "https://zenn.dev/oreilly_ota/articles/26295363907c89",
          "publishedOn": "2023-03-26T23:49:38.000Z",
          "wordCount": 895,
          "title": "【Python】例外処理把握によるエラーの特定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eZhkbzhQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E6%258A%258A%25E6%258F%25A1%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eZhkbzhQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E6%258A%258A%25E6%258F%25A1%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dencyu/articles/2b58f669bcd473",
          "author": "でんちゅー",
          "description": "記事を書いた背景\n最近業務で業務効率化のオンプレwebアプリケーションや自動化プログラムを作成する機会増えているが、特に自動化プログラムにおいてlogという存在の重要性をより強く感じている。\n作成したアプリケーションやシステムの数が増えるほど、個々の動作確認に割くことができる工数が限られてくるため、より分かりやすいフォーマットで効率よくログ収集する必要がある。\nこの記事では、Pythonにおけるloggingを\"イメージ重視\"でわかりやすく解説していく。\n!\n一定以上のコード読解力がある人や、他言語での経験がある人にとっては多少回りくどいと感じる部分もあるかもしれないが、コードとイメ...",
          "link": "https://zenn.dev/dencyu/articles/2b58f669bcd473",
          "publishedOn": "2023-03-26T14:19:49.000Z",
          "wordCount": 3438,
          "title": "Pythonのloggingをイメージで理解する【Python Logging徹底解説】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8tvHRUNq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AElogging%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python%2520Logging%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A7%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2585%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzc4NjQ0NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8tvHRUNq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AElogging%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python%2520Logging%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A7%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2585%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzc4NjQ0NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuiseki/articles/c86e6120414b6c",
          "author": "yuiseki",
          "description": "はい、承知しました🤗。Huggingface Transformersで可能な限り多くの事前学習済みの画像キャプション生成機械学習モデルを試して、考察いたします🤗。\n以下に、私が検証した事前学習済みモデルを列挙します🤗。\n\nViT GPT-2 image captioning\n\nnlpconnect/vit-gpt2-image-captioning\n\n\nGIT base textcaps\n\nmicrosoft/git-base-textcaps\n\n\nGIT large textcaps\n\nmicrosoft/git-large-r-textcaps\n\n\nBLIP image capti...",
          "link": "https://zenn.dev/yuiseki/articles/c86e6120414b6c",
          "publishedOn": "2023-03-26T13:28:13.000Z",
          "wordCount": 2627,
          "title": "Huggingface Transformersで可能な限り多くの事前学習済み画像キャプション生成機械学習モデルを試して考察せよ🤗。実行：",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cf-JkWgd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Huggingface%2520Transformers%25E3%2581%25A7%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E9%2599%2590%25E3%2582%258A%25E5%25A4%259A%25E3%2581%258F%25E3%2581%25AE%25E4%25BA%258B%25E5%2589%258D%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cf-JkWgd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Huggingface%2520Transformers%25E3%2581%25A7%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E9%2599%2590%25E3%2582%258A%25E5%25A4%259A%25E3%2581%258F%25E3%2581%25AE%25E4%25BA%258B%25E5%2589%258D%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryo_tan/articles/5d03c0157501aa",
          "author": "りょー",
          "description": "Stock price prediction using Informer and Alpha Vantage API\nA memo on stock price prediction using the Informer algorithm, an improvement on the Transformer algorithm used in ChatGPT, for time series data.\nI am not responsible if you lose money using this!\nThe code in this article is an arrange...",
          "link": "https://zenn.dev/ryo_tan/articles/5d03c0157501aa",
          "publishedOn": "2023-03-26T12:35:53.000Z",
          "wordCount": 4531,
          "title": "Stock Price Prediction Using Informer And Alpha Vantage API",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jAMsZXIt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stock%2520Price%2520Prediction%2520Using%2520Informer%2520And%2520Alpha%2520Vantage%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRDTVY5YU9SWS1OenZUVi1rOTNCMDNuazZUXy1Cd2FJWFlJeE9tQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jAMsZXIt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stock%2520Price%2520Prediction%2520Using%2520Informer%2520And%2520Alpha%2520Vantage%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRDTVY5YU9SWS1OenZUVi1rOTNCMDNuazZUXy1Cd2FJWFlJeE9tQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yagiyuki/articles/tictactoe_tkinter",
          "author": "yagiyuki",
          "description": "はじめに\nPythonとGUIライブラリであるTkinterを使って、簡単な○✗ゲームを作成するための記事を書きました。\nPythonを勉強してみたいけど、何からやればいい変わらないという方は、ぜひこの記事の手順に沿ってゲームを作成してみてください。\n楽しくPythonが勉強できると思います。\nまた、最後に本記事の理解度を確認するための問題も用意したので、ぜひチャレンジしてみてください。\n\n 実装手順\n下記に○✗ゲーム実装の手順を書きます。\nまずは、完成したコードを実際に動かしてから読みたいという人は、「実装結果」を参照してください。\n\n 1. Tkinterのインポート\nまずは、T...",
          "link": "https://zenn.dev/yagiyuki/articles/tictactoe_tkinter",
          "publishedOn": "2023-03-26T12:25:01.000Z",
          "wordCount": 1602,
          "title": "Python初心者必見！Tkinterを使って簡単に○✗ゲームを作成しよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nhl9t4BT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%25BF%2585%25E8%25A6%258B%25EF%25BC%2581Tkinter%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E2%2597%258B%25E2%259C%2597%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nhl9t4BT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%25BF%2585%25E8%25A6%258B%25EF%25BC%2581Tkinter%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E2%2597%258B%25E2%259C%2597%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yodoyodo/articles/9d8d3aaf9a8814",
          "author": "淀淀",
          "description": "はじめに\nN + 1問題については、たくさんの情報が既にあります。Pythonの学習中なのでPythonでまとめてみました。解釈が間違っていましたらご指摘ください。\n\n N+1問題とは\n余計なSQLを重複して発行して処理が遅くなることです。データベースとのやり取りにおいて、リレーションシップ（関連）のあるデータを取得する際に、効率の悪いクエリが発生し、パフォーマンスに悪影響を与える問題です。一般的には、ORM（Object-Relational Mapping）を使用しているアプリケーションでよく発生します。\n\n Eager Loading（イーガーローディング）:\n関連するデータを...",
          "link": "https://zenn.dev/yodoyodo/articles/9d8d3aaf9a8814",
          "publishedOn": "2023-03-26T12:23:02.000Z",
          "wordCount": 903,
          "title": "N+1問題とその解決方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nW0-y3OR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:N%252B1%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B7%2580%25E6%25B7%2580%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVpaRkY2MEFDaXBlSXYyN1V1a1RyVklZZmpPS2FxODE5ZURRNGo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nW0-y3OR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:N%252B1%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B7%2580%25E6%25B7%2580%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVpaRkY2MEFDaXBlSXYyN1V1a1RyVklZZmpPS2FxODE5ZURRNGo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryo_tan/articles/4dce04c65c40b9",
          "author": "りょー",
          "description": "InformerとAlpha Vantage APIを用いた株価予測\nChatGPTで採用されているアルゴリズム、Transformerを改良したInformerアルゴリズムを用いて時系列データである株価予測を行った備忘録\nこれを使って大損しても責任負いません！\n本記事で記述するコードはInformer論文のファーストオーサーであるHaoyi Zhou氏が公開しているGithub Repositoryをアレンジしたものです\nhttps://github.com/zhouhaoyi/Informer2020\n\n Informerとは\nAAAI2021 Best paperとなった論文\n...",
          "link": "https://zenn.dev/ryo_tan/articles/4dce04c65c40b9",
          "publishedOn": "2023-03-26T11:37:04.000Z",
          "wordCount": 4009,
          "title": "InformerとAlpha Vantage APIを用いた株価予測メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2sMLtx7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Informer%25E3%2581%25A8Alpha%2520Vantage%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%25A0%25AA%25E4%25BE%25A1%25E4%25BA%2588%25E6%25B8%25AC%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRDTVY5YU9SWS1OenZUVi1rOTNCMDNuazZUXy1Cd2FJWFlJeE9tQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2sMLtx7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Informer%25E3%2581%25A8Alpha%2520Vantage%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%25A0%25AA%25E4%25BE%25A1%25E4%25BA%2588%25E6%25B8%25AC%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRDTVY5YU9SWS1OenZUVi1rOTNCMDNuazZUXy1Cd2FJWFlJeE9tQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f579d27b4519d7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-182 A - twiblr\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(max((a * 2 + 100) - b, 0))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f579d27b4519d7",
          "publishedOn": "2023-03-26T09:26:15.000Z",
          "wordCount": 258,
          "title": "［AtCoder］ABC-182｜A - twiblr",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sXYpdgRr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-182%25EF%25BD%259CA%2520-%2520twiblr%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sXYpdgRr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-182%25EF%25BD%259CA%2520-%2520twiblr%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e48234cfd62f37",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-181 B - Trapezoid Sum\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    l = getIntListRow(n)\n\n    s = 0\n    for a, b in l:\n        c = b - a + 1\n        s += (a + b...",
          "link": "https://zenn.dev/hyperdb/articles/e48234cfd62f37",
          "publishedOn": "2023-03-26T09:26:12.000Z",
          "wordCount": 374,
          "title": "［AtCoder］ABC-181｜B - Trapezoid Sum",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iQ5Pz9mQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-181%25EF%25BD%259CB%2520-%2520Trapezoid%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iQ5Pz9mQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-181%25EF%25BD%259CB%2520-%2520Trapezoid%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/763920ac858c78",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-182 B - Almost GCD\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    b = 0\n    c = 0\n    for i in range(2, max(a) + 1):\n        d = len([t for t in a if t % i == 0])\n...",
          "link": "https://zenn.dev/hyperdb/articles/763920ac858c78",
          "publishedOn": "2023-03-26T09:26:11.000Z",
          "wordCount": 434,
          "title": "［AtCoder］ABC-182｜B - Almost GCD",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8PihJqZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-182%25EF%25BD%259CB%2520-%2520Almost%2520GCD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8PihJqZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-182%25EF%25BD%259CB%2520-%2520Almost%2520GCD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/466a63c57d779c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-181 A - Heavy Rotation\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print('White' if n % 2 == 0 else 'Black')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/466a63c57d779c",
          "publishedOn": "2023-03-26T09:26:10.000Z",
          "wordCount": 241,
          "title": "［AtCoder］ABC-181｜A - Heavy Rotation",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HJz6xBBB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-181%25EF%25BD%259CA%2520-%2520Heavy%2520Rotation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HJz6xBBB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-181%25EF%25BD%259CA%2520-%2520Heavy%2520Rotation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/cd4ae32f1cf884",
          "author": "オライリーヨッシー",
          "description": "概要\nUdacityのCoffee Shop Appの開発をしていて、Backendのエラーが発生した。具体的には、下記URLに対してGETリクエストを送信したところ、JWTデコードのエラーが発生した。\nhttp://127.0.0.1:5000/drinks-detail\ndrinks-deitalはJWT認証が求められるため、その認証が通らないという状況。jwt.ioでtokenを確認しても、正しくユーザ権限が割り当てられていた。具体のエラーは下記の通り。\n[2023-03-26 17:48:13,554] ERROR in app: Exception on /drinks-d...",
          "link": "https://zenn.dev/oreilly_ota/articles/cd4ae32f1cf884",
          "publishedOn": "2023-03-26T09:19:30.000Z",
          "wordCount": 515,
          "title": "【Python】JWT tokenのデコードエラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Lk6q4QfV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591JWT%2520token%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Lk6q4QfV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591JWT%2520token%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuiseki/articles/64a42ef526323d",
          "author": "yuiseki",
          "description": "実装\n\napp.py\nimport sys\nimport requests\nfrom PIL import Image\nfrom transformers import BlipProcessor, BlipForConditionalGeneration\n\nif len(sys.argv) == 1:\n  print(\"URL of Image is missing!\")\n  print(\"python3 app.py [image_url]\")\n  sys.exit(1)\n\ndevice = \"cuda\" if torch.cuda.is_available() else \"cp...",
          "link": "https://zenn.dev/yuiseki/articles/64a42ef526323d",
          "publishedOn": "2023-03-26T06:43:40.000Z",
          "wordCount": 491,
          "title": "🤗BLIPで画像キャプション生成するPythonスクリプト🤗",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--V9OJwf2V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520BLIP%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--V9OJwf2V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520BLIP%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekodamistie/articles/9fcb9aa130f554",
          "author": "sacat.neko",
          "description": "背景\n筆者はいままで参照権限しか与えられずDDL知識は半端な状態。\n晴れて権限を貰えたが、ETLツールは使用できない環境。\nそれでも自動化しなければチームの業務も滞る。\n使い慣れたPythonでbat用スクリプトを作成していたが、\n兎にも角にもデータがインサートされない。\nその時のトライアンドエラーを記録する。\nDBクライアントツールはDBeaverを使用。\ncopy_fromについては今回触れない。CSVからINSERTする方法のみ。\n\n 先に結論\n\n close()も大事だけど、commit()も大事\n「PostgreSQL Python インサートできない」\nこの検索ワードで辿...",
          "link": "https://zenn.dev/nekodamistie/articles/9fcb9aa130f554",
          "publishedOn": "2023-03-26T06:19:04.000Z",
          "wordCount": 1833,
          "title": "PythonからPostgreSQLにCSVインポートするときハマった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6D6W50L1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589PostgreSQL%25E3%2581%25ABCSV%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6D6W50L1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589PostgreSQL%25E3%2581%25ABCSV%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aozou/articles/34a763a2bccf99",
          "author": "aozou",
          "description": "できたツール\n使い方はREADMEを読んでください！\nhttps://github.com/aozou99/youtube_whisper\n\n 作った理由\n\n 英語できないけど英語面接することになった\n現在所属しているチームの採用活動に携わっているのですが、最近海外エンジニアの採用を始めました。\n自分の英語スキルはTOEIC700点台で、Readingはなんとなくできるけど、それ以外が全然駄目です。\n英語が得意なメンバーがいるので、ついつい頼ってしまうのですが、やはり英語できるようになりたい！\n\n YoutubeにCode Interviewの動画があるやん\nただ、何をやれば英語面接...",
          "link": "https://zenn.dev/aozou/articles/34a763a2bccf99",
          "publishedOn": "2023-03-26T04:27:01.000Z",
          "wordCount": 303,
          "title": "YoutubeをWhisperで文字起こしするツールを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wvKVg1Bt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Youtube%25E3%2582%2592Whisper%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aozou%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pyYWFTc2lUSTdHZWFjbmg1cl9UR21JZ2tSU1NndjA4TldUVVphQlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wvKVg1Bt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Youtube%25E3%2582%2592Whisper%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aozou%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pyYWFTc2lUSTdHZWFjbmg1cl9UR21JZ2tSU1NndjA4TldUVVphQlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/saygox/articles/71559f55eb1f4b",
          "author": "saygox",
          "description": "前回の投稿では、Schemathesisを用いてOpenAPIのプロパティ・ベースド・テスト（PBT）を行いましたが、テストだけだったため、実際に何が行われているのかが理解しにくかったかもしれません。そこで、今回はPythonのFastAPIモジュールを使ったサーバ側の実装を示し、テストエラーの原因と対策を通じて、プロパティ・ベースド・テストの有用性について説明します。\n\n FastAPIによる実装概要\n前回の記事で紹介したOpenAPIのGUIの図に基づいて、\n\nFastAPIを用いた実装を簡潔に説明します\n# post data format\nclass User(BaseModel...",
          "link": "https://zenn.dev/saygox/articles/71559f55eb1f4b",
          "publishedOn": "2023-03-26T04:23:11.000Z",
          "wordCount": 790,
          "title": "FastAPIとSchemathesisを用いてプロパティ・ベースド・テスト(PBT)を実践してみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--28PwdHrp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8Schemathesis%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2528PBT%2529%25E3%2582%2592%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saygox%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lOZlZieEtMZGdEbUdscnJTX2NwcWtHTWVCVXgxQzRrWVNLTFZMamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--28PwdHrp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8Schemathesis%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2528PBT%2529%25E3%2582%2592%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saygox%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lOZlZieEtMZGdEbUdscnJTX2NwcWtHTWVCVXgxQzRrWVNLTFZMamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuiseki/articles/bd73f607a2acf0",
          "author": "yuiseki",
          "description": "Google Colabolatory等で実行してね\n# 依存関係セットアップ\n!pip install transformers\n\n# モデルの読み込み\nfrom transformers import BlipProcessor, BlipForConditionalGeneration\n\nprocessor = BlipProcessor.from_pretrained(\"Salesforce/blip-image-captioning-large\")\nmodel = BlipForConditionalGeneration.from_pretrained(\"Salesforc...",
          "link": "https://zenn.dev/yuiseki/articles/bd73f607a2acf0",
          "publishedOn": "2023-03-26T04:18:44.000Z",
          "wordCount": 419,
          "title": "🤗15行のPythonでBLIPによる画像キャプション生成🤗",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Asmdr8Mt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252015%25E8%25A1%258C%25E3%2581%25AEPython%25E3%2581%25A7BLIP%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Asmdr8Mt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252015%25E8%25A1%258C%25E3%2581%25AEPython%25E3%2581%25A7BLIP%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gamella/articles/40053be16383f7",
          "author": "tomo@Alpaca",
          "description": "はじめに\n3/24にマケデコ主催でJ-Quants APIのリリース直前イベントが開催されました。\nhttps://mkdeco.connpass.com/event/273256/\nJ-Quants APIとは簡単に言うと、これまで機関投資家しかほとんどアクセスができなかった日本株式の様々な情報に個人がアクセス可能となるAPIで、そのなかでも事前発表されていたプレミアムプランの内容に注目が集まっていました。\nちょうどJ-Quantsの公式サイトもオープンになったので、発表の内容を見てみると以下のように月額でフリー、ライト、スタンダード、プレミアムの4プランで利用可能となったいます。...",
          "link": "https://zenn.dev/gamella/articles/40053be16383f7",
          "publishedOn": "2023-03-26T03:45:12.000Z",
          "wordCount": 351,
          "title": "J-Quants APIのリリースにより株式投資の時代が一歩進んだ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DkrBKkCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:J-Quants%2520API%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258A%25E6%25A0%25AA%25E5%25BC%258F%25E6%258A%2595%25E8%25B3%2587%25E3%2581%25AE%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%258C%25E4%25B8%2580%25E6%25AD%25A9%25E9%2580%25B2%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2540Alpaca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DkrBKkCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:J-Quants%2520API%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258A%25E6%25A0%25AA%25E5%25BC%258F%25E6%258A%2595%25E8%25B3%2587%25E3%2581%25AE%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%258C%25E4%25B8%2580%25E6%25AD%25A9%25E9%2580%25B2%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2540Alpaca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuma_soon/articles/bfd0c17444b804",
          "author": "kazuma-soon",
          "description": "背景\nblenderのアドオンを開発していると、デバッグしたい時があります。\nむしろそういう時しかないかもしれません。\nしかしながら、環境構築がめちゃくちゃ大変そうで、「これは俺にはできない！」と思い、発見した方法です。\n\n 結論\nbreakpoint() でデバッグする。\n\n 具体的な方法\n\nblenderをターミナルから立ち上げる。\n\n# これでpythonの実行ログがターミナルにて見られるようになる\n❯ /Applications/Blender.app/Contents/MacOS/Blender\n\n\nblenderにてスクリプトを書く\n\nデバッグしたいところに breakp...",
          "link": "https://zenn.dev/kazuma_soon/articles/bfd0c17444b804",
          "publishedOn": "2023-03-25T18:44:42.000Z",
          "wordCount": 109,
          "title": "簡単にblenderのスクリプトをデバッグする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KrlUKQOJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABblender%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KrlUKQOJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABblender%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/saygox/articles/06f4b290cf0ba2",
          "author": "saygox",
          "description": "ソフトウェア開発におけるテスト技術は急速に進化しています。中でも、プロパティ・ベースド・テスト（Property-Based Testing、略称PBT）が注目されていますが、まだ十分に普及していないと感じられます。\nこの記事では、プロパティ・ベースド・テストの基本概念や特徴については触れず、実践から入ります。簡単な使い方を学んで、プロパティ・ベースド・テストの効果を実感してみましょう。本格的な理解はその後でも問題ありません。\n今回は、OpenAPIのインターフェースに従って自動的にテストを行うSchemathesisを使用します\n\n OpenAPIとSchemathesis\nOpenA...",
          "link": "https://zenn.dev/saygox/articles/06f4b290cf0ba2",
          "publishedOn": "2023-03-25T15:12:47.000Z",
          "wordCount": 281,
          "title": "プロパティ・ベースド・テスト(PBT)を入門せずに恩恵に預かろう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ut3Owi3Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2528PBT%2529%25E3%2582%2592%25E5%2585%25A5%25E9%2596%2580%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E6%2581%25A9%25E6%2581%25B5%25E3%2581%25AB%25E9%25A0%2590%25E3%2581%258B%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saygox%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lOZlZieEtMZGdEbUdscnJTX2NwcWtHTWVCVXgxQzRrWVNLTFZMamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ut3Owi3Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2528PBT%2529%25E3%2582%2592%25E5%2585%25A5%25E9%2596%2580%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E6%2581%25A9%25E6%2581%25B5%25E3%2581%25AB%25E9%25A0%2590%25E3%2581%258B%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saygox%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lOZlZieEtMZGdEbUdscnJTX2NwcWtHTWVCVXgxQzRrWVNLTFZMamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/cb1511666e2f99",
          "author": "Josh Nobus",
          "description": "はじめに\n本記事は以下の記事の続きとなる。\nhttps://zenn.dev/wsuzume/articles/6971d9449214ca\n前回は Keras で Sequential モデルを使って単純なフィードフォワード NN を作るとこまでやったので、今度はもっと複雑なコネクションを持つ NN を構築する。\nネットワークが複雑になるとデータセットを用意するのも学習するのも面倒くさくなっていくのでどう記事にしたものか悩んだのだが、とりあえず出力の shape が期待したものになっていたり、shape だけ一致している擬似データに対して学習が実行できればネットワークは構築できたこ...",
          "link": "https://zenn.dev/wsuzume/articles/cb1511666e2f99",
          "publishedOn": "2023-03-25T14:15:01.000Z",
          "wordCount": 2328,
          "title": "TensorFlow の使い方練習２：Functional API",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ahUxLzud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2592%25EF%25BC%259AFunctional%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ahUxLzud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2592%25EF%25BC%259AFunctional%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekodamistie/articles/69b715938690b8",
          "author": "sacat.neko",
          "description": "SeleniumもChromeDriverもインストールしたのに\nまずはブラウザの立ち上げできるかなと思ったら、動かない。\n矢鱈にインストールした初心者ぼくが悪い。\n「pip install chromedriver-binary」だけすればOK！という情報に惑わされ、\n以下のようなエラーが出た。\n言われた通りバージョン指定しても同じエラー・・・\n\n'chromedriver' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home\n\n\n 解決してくれた参考サイト\nChrome...",
          "link": "https://zenn.dev/nekodamistie/articles/69b715938690b8",
          "publishedOn": "2023-03-25T13:32:18.000Z",
          "wordCount": 274,
          "title": "Seleniumのエラー、苦労話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---YLc4t5l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Selenium%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2581%25E8%258B%25A6%25E5%258A%25B4%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---YLc4t5l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Selenium%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2581%25E8%258B%25A6%25E5%258A%25B4%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekodamistie/articles/bcb9f348b2db46",
          "author": "sacat.neko",
          "description": "個人情報をマスキングする\nダッシュボードでデータを掲載したいものの、個人情報は情報セキュリティ的に載せられない。\nCRM（顧客情報管理システム）などで手入力されるデータは表記が揺れるため、\nSQLやPowerQueryには限界を感じ、自分の扱う個人情報で特に多い電話番号のマスキングに\n正規表現を使用してみた。\nSQLでもある程度できるが、使用しているDBで一般的なreplace関数の引数が使えず、\n何度も電話番号が出現した場合は対応できないため、諦めた。\n\n テストデータを用意する\n携帯電話と固定電話を含んだリストを作成する。\nメモなどに入力され、電話番号以外にも情報があり、それは残...",
          "link": "https://zenn.dev/nekodamistie/articles/bcb9f348b2db46",
          "publishedOn": "2023-03-25T12:38:42.000Z",
          "wordCount": 526,
          "title": "Python 正規表現で個人情報マスキング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VI_48B1I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E6%2583%2585%25E5%25A0%25B1%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VI_48B1I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E6%2583%2585%25E5%25A0%25B1%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/astrologian/articles/5769d81671d49e",
          "author": "zoniha",
          "description": "こんにちは 👋\n今回は昔作った「文字列ジェネレーター」という Web サービスを Streamlit で作り直してみた話をしたいと思います。\n\n 新しく作ったもの\n名前を「文字列ジェネレーター」から「Eastest」に変更しました。「easy」+「test」=「Eastest」という安直な名前です。\nhttps://mog-mog.streamlit.app/\n\n 昔作った Web サービスの概要\nhttps://zenn.dev/astrologian/articles/9e09eaf519e720\n昔作ったものについては上の記事に書いてあるのですが、簡単に説明すると\n\n実務のテスト工...",
          "link": "https://zenn.dev/astrologian/articles/5769d81671d49e",
          "publishedOn": "2023-03-25T11:56:08.000Z",
          "wordCount": 536,
          "title": "昔作ったWebサービスをStreamlitで作り直した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZTJMAk6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2598%2594%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592Streamlit%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258A%25E7%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zoniha%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYjRlYjlhN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZTJMAk6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2598%2594%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592Streamlit%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258A%25E7%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zoniha%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYjRlYjlhN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zerebom/articles/1ffd51da420c9e",
          "author": "zerebom",
          "description": "こんにちは！本記事ではChatGPT4を使ってPDF文書を要約し、質問応答サービスを提供するWebアプリケーションを開発した記録を紹介します。このサービスは、論文を読む際に役立つサポートツールとして作成しました。\n記事では、サービス開発においてChatGPT-4がどのように活用できるか、また、どのようにペアプロを行うと効果的かといった内容をシェアします。\nこの記事を通じて、AI技術とエンジニアがどのように協力し、新たな価値を生み出すことができそうか、という所感を伝えられたら嬉しいです。\n\n gpt-pdf-summarizerの概要\n今回開発したgpt-pdf-summarizerは、P...",
          "link": "https://zenn.dev/zerebom/articles/1ffd51da420c9e",
          "publishedOn": "2023-03-25T10:41:23.000Z",
          "wordCount": 543,
          "title": "ChatGPT-4とのペアプログラミング体験: PDF要約＆Q&Aサービス開発の所感",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wV9w85fl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT-4%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%259A%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E4%25BD%2593%25E9%25A8%2593%253A%2520PDF%25E8%25A6%2581%25E7%25B4%2584%25EF%25BC%2586Q%2526A%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E6%2589%2580%25E6%2584%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zerebom%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2FmMmVhNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wV9w85fl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT-4%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%259A%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E4%25BD%2593%25E9%25A8%2593%253A%2520PDF%25E8%25A6%2581%25E7%25B4%2584%25EF%25BC%2586Q%2526A%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E6%2589%2580%25E6%2584%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zerebom%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2FmMmVhNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuma_soon/articles/54fa7c065c88ac",
          "author": "kazuma-soon",
          "description": "どんなアドオンか？\nblenderをやっていると、.blend1, .blend2っていうような拡張子のバックアップファイルを作成してくれます。ありがたいのですが、作業ディレクトリにどんどん作られちゃうので、煩雑になっちゃうんですよね。。。\nそこで、これらのバックアップファイルをサブディレクトリにまとめて放り込んでくれるアドオンを作成しました〜。\nこちらを参考に作成しました。\nこちらだと、macOSでは動かないのですよね（path表記が異なるため）。\n※Windowsの方はこちらを参考にしてください。\n\n 使用法\nGitHubにまとめています。\n他のblenderのアドオンと同じ方法...",
          "link": "https://zenn.dev/kazuma_soon/articles/54fa7c065c88ac",
          "publishedOn": "2023-03-25T10:33:57.000Z",
          "wordCount": 2359,
          "title": "blenderのバックアップを自動整理するアドオン作りました！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cYgh6T9m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:blender%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25B3%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cYgh6T9m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:blender%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25B3%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/28b2124b3adac5",
          "author": "shimo",
          "description": "動機など\n\nS3を使ったCodePipelineのテストをしていて、何度も作り直すときにバケットの中身を消すのが面倒だった\nバージョニングがあっても消せます\n\n\n 使い方\npython /path/to/delete_cfn_stack_with_s3.py\n\n スクリプト\n\ndelete_cfn_stack_with_s3.py\nimport boto3\n\n\"\"\"\nThis script is for deleting an AWS CloudFormation stack with S3 buckets.\nUsage: python /full/path/to/script.py...",
          "link": "https://zenn.dev/shimo_s3/articles/28b2124b3adac5",
          "publishedOn": "2023-03-25T08:58:06.000Z",
          "wordCount": 743,
          "title": "CloudFormationのスタックをS3があっても無理やり消すPythonスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FQs0iEMz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CloudFormation%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592S3%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2582%25E7%2584%25A1%25E7%2590%2586%25E3%2582%2584%25E3%2582%258A%25E6%25B6%2588%25E3%2581%2599Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FQs0iEMz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CloudFormation%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592S3%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2582%25E7%2584%25A1%25E7%2590%2586%25E3%2582%2584%25E3%2582%258A%25E6%25B6%2588%25E3%2581%2599Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoya0121/articles/8652fc85e4457a",
          "author": "R",
          "description": "SQLAlchemyはPythonで使われるORM（Object Relational Mapper）であり、データベース操作をより簡単に行えるようにするライブラリ。\n\n SQLAlchemyのインストール\n簡単なディレクトリを作成し、venv(仮想環境)を使用してSQLAlchemyをインストールしていく。\n# 簡単なディレクトリを作成する\n$ mkdir ~/sqlalchemy-test\n\n# ディレクトリを移動する\n$ cd ~/sqlachemy-test\n\n# venvを作成する\n$ python3 -m venv venv\n\n# 仮想環境へ入る。仮想環境へ入れたら左側に(v...",
          "link": "https://zenn.dev/ryoya0121/articles/8652fc85e4457a",
          "publishedOn": "2023-03-25T03:46:09.000Z",
          "wordCount": 564,
          "title": "SQLAlchemyの基本的な使い方について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sjwVvEEb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OTBiNTI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sjwVvEEb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OTBiNTI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/0369b4d3cc5638",
          "author": "tirimen",
          "description": "本記事の目的\nベイズ最適化記事のための前記事第二弾。前回はモンテカルロ法を用いて円周率を導出した。\nhttps://zenn.dev/tirimen/articles/9c0416969d3a0b\nこのモンテカルロ法と本記事のマルコフチェーンを組み合わせた手法をMCMC法（マルコフ連鎖モンテカルロ法）といい、ベイズ最適化を行う際によく用いられている。なので、ベイズ最適化を学ぶ前にマルコフチェーンについても学ぶ必要があると思い、記事にまとめた。\n\n マルコフチェーンとは\nいつも通り表面だけ説明していく。マルコフチェーンとは、事後データが前データの中でも直前のデータのみに依存するモデルを...",
          "link": "https://zenn.dev/tirimen/articles/0369b4d3cc5638",
          "publishedOn": "2023-03-25T03:35:00.000Z",
          "wordCount": 2952,
          "title": "Pythonでマルコフチェーンを用い、天気の遷移確率を求めよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P6fbH-8g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2580%2581%25E5%25A4%25A9%25E6%25B0%2597%25E3%2581%25AE%25E9%2581%25B7%25E7%25A7%25BB%25E7%25A2%25BA%25E7%258E%2587%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P6fbH-8g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2580%2581%25E5%25A4%25A9%25E6%25B0%2597%25E3%2581%25AE%25E9%2581%25B7%25E7%25A7%25BB%25E7%25A2%25BA%25E7%258E%2587%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoya0121/articles/0802cee3b855c0",
          "author": "R",
          "description": "app.pyを以下のように作成する\nfrom wsgiref.simple_server import make_server\nfrom pyramid.config import Configurator\nfrom pyramid.response import Response\n\ndef hello_world(request):\n    print('Request inbound!')\n    return Response('Hello World!')\n\nif __name__ == '__main__':\n    config = Configurator()\n    co...",
          "link": "https://zenn.dev/ryoya0121/articles/0802cee3b855c0",
          "publishedOn": "2023-03-25T03:34:25.000Z",
          "wordCount": 380,
          "title": "DockerでPyramidアプリケーションを起動",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZI5wQIGc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Pyramid%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OTBiNTI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZI5wQIGc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Pyramid%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OTBiNTI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/claustra01/articles/0d8efd08905526",
          "author": "claustra01",
          "description": "はじめに\nこの記事は、WindowsへWSL2(Ubuntu)とVSCodeをインストールし、pythonで開発ができるようになるまでの手順を個人的な備忘録としてまとめたものです。\nWSLやUbuntu、VSCodeその他のアップデートおよび仕様変更によって将来的にこの手順が使用できなくなる可能性があります。(記.2023/3/24)\n\n Pyenvとは？\npyenvとは、pythonのバージョン管理ツールで、これを導入することによって「プロジェクトによってpythonのバージョンを切り替えたい……」というような時に、逐一pythonをアンインストールしたり環境変数を手動で書き換えた...",
          "link": "https://zenn.dev/claustra01/articles/0d8efd08905526",
          "publishedOn": "2023-03-24T12:08:43.000Z",
          "wordCount": 292,
          "title": "WSL2にpyenvを導入してPythonのバージョンを管理する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DQXqWYEn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25ABpyenv%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:claustra01%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYzA5NTNjMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DQXqWYEn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25ABpyenv%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:claustra01%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYzA5NTNjMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kacky/articles/d15f120a3c2aba",
          "author": "kacky",
          "description": "はじめに\n本記事では、AWS と Python を用いたバックエンドエンジニアにとっての関心事である、並列処理の最適な設定を検証します。具体的には、Python での並列実行において最もネットワークパフォーマンスが高まる並列数を調査します。\n\n 実験手法\nAWS S3 バケット内の全ファイルを取得し、サイズを返すプログラムの実行時間を計測しました。実験環境は AWS Fargate を使用し、Thread と Process による並列処理を検証しました。詳細なプログラムは下記のコードを参照してください。\nimport base64\nimport csv\nimport hashlib...",
          "link": "https://zenn.dev/kacky/articles/d15f120a3c2aba",
          "publishedOn": "2023-03-24T10:13:14.000Z",
          "wordCount": 1396,
          "title": "PythonとAWSで並列処理最適化: パフォーマンス向上の鍵",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--k_xIkIzd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8AWS%25E3%2581%25A7%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%253A%2520%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%2591%25E4%25B8%258A%25E3%2581%25AE%25E9%258D%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kacky%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNDNjY2VhMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--k_xIkIzd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8AWS%25E3%2581%25A7%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%253A%2520%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%2591%25E4%25B8%258A%25E3%2581%25AE%25E9%258D%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kacky%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNDNjY2VhMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nek0n0mimi/articles/dfc53be51e7ba9",
          "author": "calcifer",
          "description": "実行環境\n\nPython 3.9\nSelenium 4\nmacOS\n\n\n 問題\nエラー文\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element:\n\noptions.headless = Trueを追加すると、元々取得できていた要素が取得できなくなった。\n様々な方法を試し解決した方法を紹介する。\n\n 解決\nオプションを以下のように記入する。\n注意点として、options.add_argument('window-size=1400,60...",
          "link": "https://zenn.dev/nek0n0mimi/articles/dfc53be51e7ba9",
          "publishedOn": "2023-03-24T09:38:56.000Z",
          "wordCount": 140,
          "title": "【Selenium4】Headlessにすると要素が見つからない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P3lmruqx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Selenium4%25E3%2580%2591Headless%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%258C%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:calcifer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3MmQ1YzM4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P3lmruqx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Selenium4%25E3%2580%2591Headless%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%258C%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:calcifer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3MmQ1YzM4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9458610b41ed6b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-180 A - box\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, a, b = getIntMap()\n\n    print(n - a + b)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9458610b41ed6b",
          "publishedOn": "2023-03-24T05:02:35.000Z",
          "wordCount": 236,
          "title": "［AtCoder］ABC-180｜A - box",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DtSn45_R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-180%25EF%25BD%259CA%2520-%2520box%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DtSn45_R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-180%25EF%25BD%259CA%2520-%2520box%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1af4230043a679",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-180 B - Various distances\n\n\n\n 提出結果\nimport math\n\n\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef m(l):\n    s = 0\n    for i in l:\n        s += abs(i)\n    return s\n\n\ndef e(l):\n    s = 0\n    for i in l:\n        s += abs(i) ** 2...",
          "link": "https://zenn.dev/hyperdb/articles/1af4230043a679",
          "publishedOn": "2023-03-24T05:02:34.000Z",
          "wordCount": 468,
          "title": "［AtCoder］ABC-180｜B - Various distances",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s0OlMX91--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-180%25EF%25BD%259CB%2520-%2520Various%2520distances%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s0OlMX91--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-180%25EF%25BD%259CB%2520-%2520Various%2520distances%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/itasan2/articles/f2d2bd881425b8",
          "author": "itasan2",
          "description": "はじめに\n皆さん、こんにちは！\nZenn初めての投稿となる今回は、今最もホットな話題のChatGPTをテーマにしてみました。\n似たようなチャットボットプログラムは既にいっぱいあると思いますが、ChatGPT APIとPythonライブラリーのGradioを使ってシンプルにチャットボットを作成してみたので、その情報を共有したいと思います。なお、完成イメージは下記スクリーンショットの通りとなります。\n\n\n 準備\nChatGPT APIを使用するには下記が必要となります。\n\n ①OpenAIアカウント\nOpenAIのサイトでアカウントを作成（無料）\n\n ②APIキー\nOpenAIアカウント...",
          "link": "https://zenn.dev/itasan2/articles/f2d2bd881425b8",
          "publishedOn": "2023-03-24T04:38:08.000Z",
          "wordCount": 1571,
          "title": "ChatGPT APIとGradioでチャットボットを簡単作成しよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Bv2ie8WX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520API%25E3%2581%25A8Gradio%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:itasan2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YU9TQldJTXFWSGZGS3gwZXVUdEhzZUJnRlFiMzhWZjNWOHc1eU9odz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Bv2ie8WX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520API%25E3%2581%25A8Gradio%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:itasan2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YU9TQldJTXFWSGZGS3gwZXVUdEhzZUJnRlFiMzhWZjNWOHc1eU9odz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/c092f1be13c79b",
          "author": "オライリーヨッシー",
          "description": "概要\nFlaskでアプリケーションを構築していたところ、下記エラーに遭遇した。\n\nどういったエラーか説明すると、/drinks-detailsというjwt認証を必要とするエンドポイントにリクエストを送ると、上記エラーが発生する。具体的なコードは下記の通り。\n@app.route('/drinks-detail', methods=['GET'])\n@requires_auth('get:drinks-detail')\ndef get_drinks_detail(jwt):\n    try:\n        drinksLongList = [drink.long() for drin...",
          "link": "https://zenn.dev/oreilly_ota/articles/c092f1be13c79b",
          "publishedOn": "2023-03-24T00:55:53.000Z",
          "wordCount": 370,
          "title": "【Python】エラー：urllib.error.URLError/ SSL: CERTIFICATE_VERIFY_FAILED",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---B7zcDxN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25EF%25BC%259Aurllib.error.URLError%252F%2520SSL%253A%2520CERTIFICATE_VERIF...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---B7zcDxN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25EF%25BC%259Aurllib.error.URLError%252F%2520SSL%253A%2520CERTIFICATE_VERIF...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/misakiishihara/articles/1704849eb643ad",
          "author": "石原岬",
          "description": "あまりにも暇すぎて久しぶりに映画でも観るかと思い立ったのですが、大学生という４年間のモラトリアムに名作・傑作を全て見尽くしてしまった感があり、久しぶりにPythonを触りたくなったのでfilmarksから人気な映画に絞っていい映画に出会ってみようと思います。\nhttps://beautiful-soup-4.readthedocs.io/en/latest/\n執筆中・・・（途中)\n一応流れ\n\n 必要なライブラリのインストール\n!pip install requests\n!pip install beautifulsoup4\nimport sqlite3\n\n Filmarksのレビューペー...",
          "link": "https://zenn.dev/misakiishihara/articles/1704849eb643ad",
          "publishedOn": "2023-03-23T15:11:48.000Z",
          "wordCount": 431,
          "title": "[Python]Beautiful Soup 4であらゆるデータをスクレイピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pwPH1juk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255DBeautiful%2520Soup%25204%25E3%2581%25A7%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczZDRkOWU5ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pwPH1juk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255DBeautiful%2520Soup%25204%25E3%2581%25A7%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczZDRkOWU5ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/skwbc/articles/implement_gradient_boosting",
          "author": "skwbc",
          "description": "概要\n勾配ブースティングは、2023年現在最も広く使われている機械学習アルゴリズムの一つです。[1]\n勾配ブースティングを実装したライブラリとしてはXGBoostやLightGBMなどが有名で、これらを使うことで高速かつ高精度な機械学習モデルを簡単に構築することが出来ます。\n実際に自分でもこれらのライブラリを日常的に使っているのですが、よく使うものなので自分でも実装してみることで良い学びが得られるような気がしています。\nそこで、本記事では勾配ブースティングのアルゴリズムを自分で実装してみようと思います。\n実装の方針は以下の通りです。\n\n最もよく使われる弱学習器として決定木を使う手法[...",
          "link": "https://zenn.dev/skwbc/articles/implement_gradient_boosting",
          "publishedOn": "2023-03-23T09:20:54.000Z",
          "wordCount": 7367,
          "title": "勾配ブースティングを自分で実装してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4i8ksPc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%25BE%25E9%2585%258D%25E3%2583%2596%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skwbc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4i8ksPc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%25BE%25E9%2585%258D%25E3%2583%2596%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skwbc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangaezaru/articles/c58c40d9bb8012",
          "author": "kangaezaru",
          "description": "1. 本稿の概要\n\n ◆ ゴール\n以下のような機能を満たすPythonスクリプトを作成しました。\nこちらはELBインスタンス向けです。\n\nELBで特定タグ(Owner)の付与状況をリスト化\nローカル環境でI/Oが自由なPythonスクリプトとして実行\nその抽出結果はCSVカンマ区切り形式でローカルに出力\n\n\n ◆ 背景、前提、その他サービスまとめなど\n全体論はこちら を参照\n※単にタグを棚卸したり付与するだけならタグエディタで見るのが一番楽かとは思います。\n\n 2. 開発\n\n ◆ 概説\nE+BのOwnerタグが未付与のリソースの一覧を出力します。\nとりあえず単体では東京リージョ...",
          "link": "https://zenn.dev/kangaezaru/articles/c58c40d9bb8012",
          "publishedOn": "2023-03-23T08:09:07.000Z",
          "wordCount": 542,
          "title": "【ELB】AWS Boto3 by Pythonで特定タグ未付与のリソース抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QY6I2WFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ELB%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QY6I2WFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ELB%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangaezaru/articles/f978d56e62beae",
          "author": "kangaezaru",
          "description": "1. 本稿の概要\n\n ◆ ゴール\n以下のような機能を満たすPythonスクリプトを作成しました。\nこちらはRDSインスタンス向けです。\n\nRDSインスタンスで特定タグ(Owner)の付与状況をリスト化\nローカル環境でI/Oが自由なPythonスクリプトとして実行\nその抽出結果はCSVカンマ区切り形式でローカルに出力\n\n\n ◆ 背景、前提、その他サービスまとめなど\n全体論はこちら を参照\n※単にタグを棚卸したり付与するだけならタグエディタで見るのが一番楽かとは思います。\n\n 2. 開発\n\n ◆ 概説\nRDSのOwnerタグが未付与のリソースの一覧を出力します。\nとりあえず単体では...",
          "link": "https://zenn.dev/kangaezaru/articles/f978d56e62beae",
          "publishedOn": "2023-03-23T08:05:00.000Z",
          "wordCount": 496,
          "title": "【RDS編】AWS Boto3 by Pythonで特定タグ未付与のリソース抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--syNt-tCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590RDS%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--syNt-tCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590RDS%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c073aea370a601",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-179 A - Plural Form\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print(s + ('es' if s[-1] == 's' else 's'))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c073aea370a601",
          "publishedOn": "2023-03-23T05:17:45.000Z",
          "wordCount": 245,
          "title": "［AtCoder］ABC-179｜A - Plural Form",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MgshOZrr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-179%25EF%25BD%259CA%2520-%2520Plural%2520Form%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MgshOZrr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-179%25EF%25BD%259CA%2520-%2520Plural%2520Form%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4617a7b2a92d79",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-179 B - Go to Jail\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    d = getIntListRow(n)\n\n    z = 0\n    for a in d:\n        if len(set(a)) == 1:\n            z += 1...",
          "link": "https://zenn.dev/hyperdb/articles/4617a7b2a92d79",
          "publishedOn": "2023-03-23T05:17:44.000Z",
          "wordCount": 419,
          "title": "［AtCoder］ABC-179｜B - Go to Jail",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OE7pWQdE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-179%25EF%25BD%259CB%2520-%2520Go%2520to%2520Jail%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OE7pWQdE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-179%25EF%25BD%259CB%2520-%2520Go%2520to%2520Jail%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/harukaeru/articles/c73cdcdd2cd7a8",
          "author": "かえる",
          "description": "■ 概要\n※ この文章は人間の文章です。\nよく「ChatGPTに何かを指示して実装してもらったり、支援してもらったりする」という内容のものを見かけます。\nただ、ぼくとしては「そこまでわかっているのなら、勝手にプロダクトを実装できるのではないか？」と考えて、ぼくからは何も具体的な指示はせずに、プロダクトをChatGPTさんに考えてもらってそれを実装してもらいました。\nプロンプトの出発点は次の文言になります。\n\n最終的な成果物は次のような、簡単な言語学習クイズのプロトタイプになります。\n\n\nなぜ言語学習クイズかというと、ChatGPTさんから提案されたからです。ChatGPTさんは、AI...",
          "link": "https://zenn.dev/harukaeru/articles/c73cdcdd2cd7a8",
          "publishedOn": "2023-03-23T02:48:16.000Z",
          "wordCount": 253,
          "title": "ChatGPTに指示せずゼロからプロダクト（のプロトタイプ）を実装してもらった: AIを用いた革新的なアプローチ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fYUr6J8N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AB%25E6%258C%2587%25E7%25A4%25BA%25E3%2581%259B%25E3%2581%259A%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25EF%25BC%2588%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%253A%2520AI%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E9%259D%25A9%25E6%2596%25B0%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2588%25E3%2582%258B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNbUd4NXlWM3BBZFlIaWpnYXhhTHJwbjBtOUlpTWFLWmE5MkxkcGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fYUr6J8N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AB%25E6%258C%2587%25E7%25A4%25BA%25E3%2581%259B%25E3%2581%259A%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25EF%25BC%2588%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%253A%2520AI%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E9%259D%25A9%25E6%2596%25B0%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2588%25E3%2582%258B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNbUd4NXlWM3BBZFlIaWpnYXhhTHJwbjBtOUlpTWFLWmE5MkxkcGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hkdord/articles/prometheus-python-go-rust",
          "author": "Hidekazu Karino",
          "description": "はじめに\n去年から Observability に興味がありいくつか記事を書いてきた(Go で書いたアプリから Jaeger や X-Ray にトレースを送る記事とかコンテナでデプロイした AWS Lambda から X-Ray に OpenTelemetry SDK でトレースを送る記事とか)のですが、今まではトレースのことばかりでメトリクスはノータッチでした。Observability 観点だとメトリクスも外せないと考えてメトリクスデビューすることにしました。今回は Prometheus を使ってみます。アプリケーションは Python(Flask), Go (Echo), Ru...",
          "link": "https://zenn.dev/hkdord/articles/prometheus-python-go-rust",
          "publishedOn": "2023-03-22T13:54:33.000Z",
          "wordCount": 2430,
          "title": "Prometheus を Python, Go, Rust で始める",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uMoPG45H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prometheus%2520%25E3%2582%2592%2520Python%252C%2520Go%252C%2520Rust%2520%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hidekazu%2520Karino%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYzE5MWFjMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uMoPG45H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prometheus%2520%25E3%2582%2592%2520Python%252C%2520Go%252C%2520Rust%2520%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hidekazu%2520Karino%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYzE5MWFjMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/anieca/articles/230b3451018620",
          "author": "Anieca",
          "description": "はじめに\nGPT を使って画像・テキストから欲しい情報を抽出するライブラリを作りました。\nhttps://github.com/Anieca/Xtracture\nパッケージを公開済みなので以下のコマンドでインストールできます。\npip install -U xtracture\n\n 使い方\n下例のとおりです。\n!\nOpenAI の API キーが適切に設定されている必要があります。\nまた OCR に Google Cloud Vision API あるいは Tesseract を使う場合はこれらも適切に設定されている必要があります。\n\nfrom pathlib import Path\n...",
          "link": "https://zenn.dev/anieca/articles/230b3451018620",
          "publishedOn": "2023-03-22T10:41:30.000Z",
          "wordCount": 678,
          "title": "GPT を使って汎用 OCR を作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iZV8hgOY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25B1%258E%25E7%2594%25A8%2520OCR%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Anieca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDakJoZ0dFejZDQUN6NEpia3MxMVFzaEM2bGFId2Vsc1J5SlNDPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iZV8hgOY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25B1%258E%25E7%2594%25A8%2520OCR%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Anieca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDakJoZ0dFejZDQUN6NEpia3MxMVFzaEM2bGFId2Vsc1J5SlNDPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dms_sub/articles/6aedc87dc258e8",
          "author": "tuna2134",
          "description": "なぜ作ったか\nとある組織が開発しているbotでvoicevoxを使った読み上げを作っていたのですが、あまりにも作るのがめんどくさいので、たくさんの人と協力しながら作りたいと思って、voicevoxって名前でpypiにだしました。\nただし本家様に名前を変えるよう言われたためvoicevox-clientに名前を変えました。\n\n PyPIに上げる際のメタデータに使っているもの\ntwineとsetup.py、そしてpyproject.tomlを使っています。twineはライブラリーをアップロードするために使っています。\n\n 使用しているクライアントライブラリー\nhttpx、なぜhttpxを...",
          "link": "https://zenn.dev/dms_sub/articles/6aedc87dc258e8",
          "publishedOn": "2023-03-22T09:12:06.000Z",
          "wordCount": 329,
          "title": "新しいライブラリーを作った！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3AJQllva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3AJQllva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/turing_motors/articles/e23973714c3ecf",
          "author": "ymg_aq",
          "description": "はじめに\nPythonは世界的にも人気のあるプログラミング言語ですが、実行速度については課題があります。Pythonの実行速度を高速化したい、という要求は根強く、これまでにも様々なツールや処理系が開発されています。\nこの記事ではMITの研究者らが開発したPythonを高速化するツール「Codon」について紹介します。\nこの記事を3行でまとめると：\n\n高性能で簡単に扱えるPythonコンパイラ「Codon」\nPythonとの互換性がありながら、CやC++に匹敵する高速化を実現\n実際にPythonコードが100倍速くなることを検証\n\n\n Codonとは\nCodonは高性能なPython...",
          "link": "https://zenn.dev/turing_motors/articles/e23973714c3ecf",
          "publishedOn": "2023-03-22T09:00:00.000Z",
          "wordCount": 3895,
          "title": "あなたのPythonを100倍高速にする技術 / Codon入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EnR_O_f5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25AEPython%25E3%2582%2592100%25E5%2580%258D%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2520%252F%2520Codon%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Technical%2520blog%2520-%2520Turing%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ymg_aq%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NmMwZTUwYzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EnR_O_f5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25AEPython%25E3%2582%2592100%25E5%2580%258D%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2520%252F%2520Codon%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Technical%2520blog%2520-%2520Turing%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ymg_aq%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NmMwZTUwYzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hirotech/articles/498fcdfdf73a33",
          "author": "hiro-tech",
          "description": "はじめに\nAWSでサーバレスのシステムを開発する場合、コンソールを使って一から手でポチポチするのもしんどいので専用のフレームワークを使うことが多いと思います。代表的なところでいくとSAM、Amplify、Serverless Framework、CDKなどなど。\nこの中でも圧倒的な生産性の高さから、私は特にChaliceを好んで使っています。Pythonを使ってサーバレスアプリを組むならChalice一択とさえ思っているのですが、今回はそのChaliceを使ったときに発生しがちな悩みどころの解消方法を書いておきたいと思います。\nそもそもChaliceってなんやねん、という方は以下の記...",
          "link": "https://zenn.dev/hirotech/articles/498fcdfdf73a33",
          "publishedOn": "2023-03-22T06:43:33.000Z",
          "wordCount": 893,
          "title": "Blueprint機能を使ってChaliceのapp.pyを分割する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TJ0DZlip--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Blueprint%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Chalice%25E3%2581%25AEapp.py%25E3%2582%2592%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiro-tech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzOTc0OWM3MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TJ0DZlip--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Blueprint%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Chalice%25E3%2581%25AEapp.py%25E3%2582%2592%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiro-tech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzOTc0OWM3MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f3b35bef069f18",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-178 A - Not\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    print(0 if x == 1 else 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f3b35bef069f18",
          "publishedOn": "2023-03-22T05:25:43.000Z",
          "wordCount": 228,
          "title": "［AtCoder］ABC-178｜A - Not",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X18cNo7i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-178%25EF%25BD%259CA%2520-%2520Not%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X18cNo7i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-178%25EF%25BD%259CA%2520-%2520Not%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b402f2a3db21cd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-178 B - Product Max\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c, d = getIntMap()\n\n    print(max(max(a * c, a * d), max(b * c, b * d)))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b402f2a3db21cd",
          "publishedOn": "2023-03-22T05:25:42.000Z",
          "wordCount": 287,
          "title": "［AtCoder］ABC-178｜B - Product Max",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GpIUunMC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-178%25EF%25BD%259CB%2520-%2520Product%2520Max%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GpIUunMC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-178%25EF%25BD%259CB%2520-%2520Product%2520Max%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maco_macoo/articles/10536179963c95",
          "author": "M.Sato",
          "description": "はじめに\nPythonの勉強を始めて５か月…\nまだまだ技術的に身につけるべきことが多いです。\nそんな私がPythonを始めて勉強するときに使った参考書『スッキリわかるPython入門』について、まとめてみました。\nPythonの勉強をこれから始めるぞ！っていう人に特に読んでほしいです。\n\n 自分自身について\n私は情報系学部に所属しています。\nプログラミングの勉強を始めたのは大学生になってからです。\n大学では主にC言語を使っており、Pythonには触れたこともありませんでした。\nPythonは知人から紹介でやってみようと思い、勉強を始めました。\nまだ知識は浅いので、これからもっと勉強し...",
          "link": "https://zenn.dev/maco_macoo/articles/10536179963c95",
          "publishedOn": "2023-03-21T14:21:36.000Z",
          "wordCount": 230,
          "title": "『スッキリわかるPython入門』のレビュー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C4iRKsp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258E%25E3%2582%25B9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25AA%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BPython%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258F%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M.Sato%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WklzUGM1dV9IVXQ0NDhvc2xXUzNuYmFqMmtBNG1uVUFqTUtpckZIZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C4iRKsp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258E%25E3%2582%25B9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25AA%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BPython%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258F%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M.Sato%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WklzUGM1dV9IVXQ0NDhvc2xXUzNuYmFqMmtBNG1uVUFqTUtpckZIZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/katsu996/articles/python-fastapi",
          "author": "勝利 -Shori-",
          "description": "はじめに\n今回、はじめてZennで記事を書いてみることにしました。\n記事を書くことに慣れていないため、おかしな点があるかもしれませんがご了承下さい。\n初めての記事の題材に、FastAPIをDeta Spaceにデプロイするというテーマを選んだ理由は、実際に自分自身で使用していて、日本語の記事があまり見つからなかったためです。\n少しでもFastAPIをデプロイしたいという方のお役に立てるよう、記事を書くことにしました。\n実装やデプロイを完了した後に記事を執筆しているため、キャプチャがない部分や省略した箇所がありますが、ご了承ください。\n\n FastAPIとは\n個人的に一言でまとめると簡...",
          "link": "https://zenn.dev/katsu996/articles/python-fastapi",
          "publishedOn": "2023-03-21T13:30:00.000Z",
          "wordCount": 1719,
          "title": "無料でFastAPIで作ったAPIをデプロイする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gznmShqY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7FastAPI%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FAPI%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258B%259D%25E5%2588%25A9%2520-Shori-%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyNDE2YTA3Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gznmShqY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7FastAPI%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FAPI%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258B%259D%25E5%2588%25A9%2520-Shori-%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyNDE2YTA3Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hideoamezawa/books/study_owasp_zap",
          "author": "hideame",
          "description": "Djangoのサンプルサイトに脆弱性診断を実施してみましょう！",
          "link": "https://zenn.dev/hideoamezawa/books/study_owasp_zap",
          "publishedOn": "2023-03-21T11:55:52.000Z",
          "wordCount": 72,
          "title": "脆弱性診断入門（OWASP ZAP編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eWx5xDPo--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wYTdhNDE5MzViLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eWx5xDPo--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wYTdhNDE5MzViLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/6971d9449214ca",
          "author": "Josh Nobus",
          "description": "はじめに\nnumpy だといろいろ機能が足りないことが増えてきてメインウェポンを tensorflow に移行したいので勉強したことまとめ。この記事は Sequential モデルを用いた単純なフィードフォワードニューラルネットの作成まで。\nGoogle Colab のノートブックはこちら。\nよい子のみなさんはこんな記事を読まずに公式のガイドやチュートリアルを読みましょう。\nhttps://www.tensorflow.org/guide\n\n 参考文献\n\n『Guide | TensorFlow Core』\n『Python: TensorFlow2 の自動微分を試してみる』\n『お話：数...",
          "link": "https://zenn.dev/wsuzume/articles/6971d9449214ca",
          "publishedOn": "2023-03-21T09:51:36.000Z",
          "wordCount": 6692,
          "title": "TensorFlow の使い方練習：自動微分と Sequential モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OPeBOISo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25E3%2581%25A8%2520Sequential%2520%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OPeBOISo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25E3%2581%25A8%2520Sequential%2520%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/724a601b208398",
          "author": "しろ",
          "description": "jpholidayライブラリを使い祝日を調べる\n\njpholidayでできること\n\n指定日の祝日名を取得\n指定日が祝日か判定\n指定月と年の祝日を取得\n指定範囲の祝日を取得\n独自の休日を追加、削除\n\n\n\n\n 使い方\ndatetimeライブラリを使うのでインポートを忘れずに\npip install jpholiday\n\n 指定日の祝日名を取得\n\n\nis_holiday_nameメソッドを使います\n\ndatetime.datetimeを引数にしても同じようにできます\n\nimport jpholiday\nimport datetime\n\nprint(jpholiday.is_holiday_...",
          "link": "https://zenn.dev/shiro_toy_box/articles/724a601b208398",
          "publishedOn": "2023-03-21T09:42:18.000Z",
          "wordCount": 1872,
          "title": "Pythonで祝日を調べる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BXq9xrPz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%25A5%259D%25E6%2597%25A5%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BXq9xrPz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%25A5%259D%25E6%2597%25A5%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tamakiii/articles/poetry-local-installation",
          "author": "Daichi Tamaki",
          "description": "TL;DR\n\n\npoetry install のインストール先は {cache-dir}/virtualenvs/...\n\n扱いにくいのでプロジェクト内に配置したい\n\n\n\npoetry config --local virtualenvs.in-project true でプロジェクト内に作るようになる\n\n\npoetry.toml が生成されて .venv にインストールされるようになる\n\n\n\nvirtualenv: error: argument --prompt: expected one argument で困ったら\n\nsee: https://gist.github.com/...",
          "link": "https://zenn.dev/tamakiii/articles/poetry-local-installation",
          "publishedOn": "2023-03-21T09:29:49.000Z",
          "wordCount": 4907,
          "title": "poetry でプロジェクト内にパッケージをインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xbqRrrm4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%2586%2585%25E3%2581%25AB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daichi%2520Tamaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ptcGJxR1NYYkR4NXUtTENkamlqaE91TEw5X25YcWJwZDhKaDVwNUFZPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xbqRrrm4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%2586%2585%25E3%2581%25AB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daichi%2520Tamaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ptcGJxR1NYYkR4NXUtTENkamlqaE91TEw5X25YcWJwZDhKaDVwNUFZPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gamella/articles/c3157a285a236d",
          "author": "tomo@Alpaca",
          "description": "はじめに\nマケデコという主に株式関連のマーケットAPIを活用し、分析や予測モデルを構築しているbotterのDiscordコミュニティをJPX総研様、AlpacaJapanの協賛で運営しています。\nhttps://market-api.dev/\nマケデコの中で、さまざまなイベントを企画する中で、前提知識として、機械学習モデルが生成するスコアについての知識があまり共有されていないと感じていて、この文章を書いた次第です。\n過去に作成したものだと、JPX総研様と一緒に作成した株式分析チュートリアルなどはかなり網羅的にいろいろなトピックを扱っているのですが、こちらはSIGNATEで開催された...",
          "link": "https://zenn.dev/gamella/articles/c3157a285a236d",
          "publishedOn": "2023-03-21T06:35:53.000Z",
          "wordCount": 356,
          "title": "システムトレードを始めるための基本のスコア設計",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3byZjlED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25B3%25E3%2582%25A2%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2540Alpaca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3byZjlED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25B3%25E3%2582%25A2%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2540Alpaca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/da9b0c43dc404b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-176 A - Takoyaki\n\n\n\n 提出結果\nimport math\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, x, t = getIntMap()\n\n    print(math.ceil(n / x) * t)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/da9b0c43dc404b",
          "publishedOn": "2023-03-21T04:43:02.000Z",
          "wordCount": 247,
          "title": "［AtCoder］ABC-176｜A - Takoyaki",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f-JSUv4d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-176%25EF%25BD%259CA%2520-%2520Takoyaki%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f-JSUv4d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-176%25EF%25BD%259CA%2520-%2520Takoyaki%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9d1242746c7c66",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-177 B - Substring\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef cnt_diff(s, t):\n    c = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            c += 1\n    return c\n\n\ndef main():\n    s = getString()\n    t = getString()\n\n    a = len(s)\n    b = len(t)\n    c = b\n    for ...",
          "link": "https://zenn.dev/hyperdb/articles/9d1242746c7c66",
          "publishedOn": "2023-03-21T04:43:02.000Z",
          "wordCount": 429,
          "title": "［AtCoder］ABC-177｜B - Substring",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bVI3QahV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-177%25EF%25BD%259CB%2520-%2520Substring%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bVI3QahV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-177%25EF%25BD%259CB%2520-%2520Substring%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7d65fafcb01ca8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-177 A - Don't be late\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    d, t, s = getIntMap()\n\n    print('Yes' if d / s <= t else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7d65fafcb01ca8",
          "publishedOn": "2023-03-21T04:43:01.000Z",
          "wordCount": 262,
          "title": "［AtCoder］ABC-177｜A - Don't be late",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FeOm9lKP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-177%25EF%25BD%259CA%2520-%2520Don%2527t%2520be%2520late%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FeOm9lKP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-177%25EF%25BD%259CA%2520-%2520Don%2527t%2520be%2520late%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4010f38975001b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-176 B - Multiple of 9\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    l = map(int, list(str(n)))\n\n    print('Yes' if sum(l) % 9 == 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/4010f38975001b",
          "publishedOn": "2023-03-21T04:43:01.000Z",
          "wordCount": 284,
          "title": "［AtCoder］ABC-176｜B - Multiple of 9",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G78z1d9_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-176%25EF%25BD%259CB%2520-%2520Multiple%2520of%25209%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G78z1d9_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-176%25EF%25BD%259CB%2520-%2520Multiple%2520of%25209%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hikapoppin/articles/69be223c89fbd5",
          "author": "hikaru",
          "description": "概要\nPythonでSpoyifyAPIを使って完全にランダムにランダムな曲をプレイリストに入れてみました。\n\n 背景\n普段皆さんは音楽の配信サービスは使用していますか？自分はSpotifyを使って、仕事中や移動中、ご飯食べてるときなどほぼ一日中音楽を聴いています。ただ、こういうサブスクのサービスって、どうしても試聴する音楽のジャンルが偏ったり、未知の音楽を発見しづらいという欠点があります。自分はJPOPからアフリカの民族音楽までなんでも聴くような人間なので、それでは困ります。特にDJみたいに、新しい音楽を発見するのが仕事といった人には不向きな機能なんじゃないんでしょうか。しかし、ま...",
          "link": "https://zenn.dev/hikapoppin/articles/69be223c89fbd5",
          "publishedOn": "2023-03-21T03:33:03.000Z",
          "wordCount": 1270,
          "title": "SpotifyAPIで未知の曲を漁ってみた①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--k28D0vrd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpotifyAPI%25E3%2581%25A7%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E6%259B%25B2%25E3%2582%2592%25E6%25BC%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ykc4a2d0MkRET1AzQTNmbmNzMjhKM2UxWWJPQklHdGc3NndKNGhIQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--k28D0vrd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpotifyAPI%25E3%2581%25A7%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E6%259B%25B2%25E3%2582%2592%25E6%25BC%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ykc4a2d0MkRET1AzQTNmbmNzMjhKM2UxWWJPQklHdGc3NndKNGhIQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/9c0416969d3a0b",
          "author": "tirimen",
          "description": "本記事の目的\n知識を深めるために行う。現在はベイズ最適化の記事を書きたいが、その準備記事としてモンテカルロ法の記事を書く。前回、Streamlitを用いて簡単なアプリ制作はできるようになったので、今回は円周率の導出アプリを雑に作っていく。\n\n モンテカルロ法とは\nざっくり言うと、「乱数を用いて、試行回数を多くし、問題を解く」手法。ベイズ最適化も確率で重みづけした乱数を用いて最適解を求めている。今回は確率で重みづけしていない乱数（一様乱数）で行うが、基本原理は同じだと思ってほしい。\n\n 理論:円周率の導出\nモンテカルロ法の説明には円周率の導出が頻繁に用いられている。その導出方法は次の通...",
          "link": "https://zenn.dev/tirimen/articles/9c0416969d3a0b",
          "publishedOn": "2023-03-21T00:48:02.000Z",
          "wordCount": 778,
          "title": "Pythonでモンテカルロ法を用いてみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uA3XrPQB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uA3XrPQB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}