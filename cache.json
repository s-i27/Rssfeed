{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/sankantsu/articles/1cddd3c08582a1",
          "author": "sankantsu",
          "description": "概要\nPython のパッケージング (packaging) 周辺は歴史的経緯もあって様々なツールや用語が登場するためかなりややこしいです。\nまた、現在では非推奨 (deprecated) となっているツールの使用なども多くの記事で見られるため、何が現在推奨されるやりかたであるかを見極めるのが難しく感じられます。\nこの記事は2023年11月現在のパッケージング周辺のエコシステムを調べ、パッケージングを行うために推奨されていると思われる方法をまとめ、パッケージング周辺の用語の関係性を整理する試みです。\nPython のパッケージングというのはかなり複雑かつ広いトピックであり、筆者自身も...",
          "link": "https://zenn.dev/sankantsu/articles/1cddd3c08582a1",
          "publishedOn": "2023-11-06T20:43:58.000Z",
          "wordCount": 1043,
          "title": "Python パッケージング周辺の概念, 用語, ツールの整理",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vnL8P9gC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%25E5%2591%25A8%25E8%25BE%25BA%25E3%2581%25AE%25E6%25A6%2582%25E5%25BF%25B5%252C%2520%25E7%2594%25A8%25E8%25AA%259E%252C%2520%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sankantsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTc0Nzk2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vnL8P9gC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%25E5%2591%25A8%25E8%25BE%25BA%25E3%2581%25AE%25E6%25A6%2582%25E5%25BF%25B5%252C%2520%25E7%2594%25A8%25E8%25AA%259E%252C%2520%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sankantsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTc0Nzk2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/amatyrain/articles/2d85304cc95de4",
          "author": "あまてぃ",
          "description": "予想外のGCPのコスト発生を早期検知するために、コストをSlackに通知することにしました。\n\n\n 予算とアラートの設定\nアラートを作成する\n\n◼️閾値の設定\n基本無料枠でしか使わないので、コストが1円でも出たら通知するように。\n怖いので閾値どんどん追加していったら↓こんなことに…😅\n\n◼️通知の管理\nPub/Sub トピックを接続する\n\n\n Cloud Functionの作成\n\n◼️構成\nPub/Sub トリガーを追加する\n\n先ほどのトピックを選択\n\n◼️Cloud Functionのコード\n\nmain.py\nimport base64\nimport functions_framewo...",
          "link": "https://zenn.dev/amatyrain/articles/2d85304cc95de4",
          "publishedOn": "2023-11-06T18:52:00.000Z",
          "wordCount": 507,
          "title": "GCPのコストをSlackに通知する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wiXKL3PA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%25E3%2581%25AE%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592Slack%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%25A6%25E3%2581%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNTUyVFJrT1NDdTE3ZlRUTlRNU0p4WmxqaU05d3VVRTBJYV92Tm09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wiXKL3PA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%25E3%2581%25AE%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592Slack%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%25A6%25E3%2581%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNTUyVFJrT1NDdTE3ZlRUTlRNU0p4WmxqaU05d3VVRTBJYV92Tm09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/charatech_bps/articles/9fc68db3d4a66c",
          "author": "charatech_bps",
          "description": "1. はじめに\nGUI画面で１サーバずつ登録していたのですが、非常に面倒なので、ZabbixAPIとpyzabbixを使用して、一括で登録してみました。Githubにリポジトリ作成していますが、もう少し詳細にして、日本語で記載してみました。\n登録するのは、ZabbixAgentでの監視を前提として、ホストグループと登録するテンプレートは固定としています。\n\n 2. 使用する環境\n以下を使用します。\n\nZabbix 6.0\npython 3.11\npyzabbix\npandas\n\n\n 3. 環境準備\nZabbixは以下のURLを参照して構築してください。\nhttps://www.zab...",
          "link": "https://zenn.dev/charatech_bps/articles/9fc68db3d4a66c",
          "publishedOn": "2023-11-06T15:28:11.000Z",
          "wordCount": 489,
          "title": "CSVファイルを読み込んでZabbixにホスト登録",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m8hGW_6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7Zabbix%25E3%2581%25AB%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E7%2599%25BB%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:charatech_bps%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlFzWjRoOEwxeXN0ZjZzQ1JIbVVQcWVmbEh0UVJhSWFKZUQxZkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m8hGW_6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7Zabbix%25E3%2581%25AB%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E7%2599%25BB%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:charatech_bps%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlFzWjRoOEwxeXN0ZjZzQ1JIbVVQcWVmbEh0UVJhSWFKZUQxZkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nano_sudo/articles/31a6e04a05dd96",
          "author": "須藤ナノ",
          "description": "はじめに\nこんにちは、@nano_sudoです!\n今回は、Pythonの標準ライブラリであるpathlibを紹介します。(n番煎じ...)\nタイトルは正直なところ、少し大げさですが、pathlibは、os.pathよりも便利なので、ぜひ使ってみてください！\n\n pathlibとは\npathlibは、ファイルパスを扱うためのライブラリです。\npathlibを使うと、ファイルパスを文字列で扱うのではなく、オブジェクトとして扱うことができます。\n\n os.pathじゃだめなの？\npathlibは、os.pathと比べて、次のようなメリットがあります。\n\n\n豊富なメソッド\npathlibは、...",
          "link": "https://zenn.dev/nano_sudo/articles/31a6e04a05dd96",
          "publishedOn": "2023-11-06T14:35:49.000Z",
          "wordCount": 1244,
          "title": "pathlibが便利すぎてもうos.pathは使えない件",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7bb-8glT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pathlib%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%2599%25E3%2581%258E%25E3%2581%25A6%25E3%2582%2582%25E3%2581%2586os.path%25E3%2581%25AF%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A0%2588%25E8%2597%25A4%25E3%2583%258A%25E3%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMDMyMDFlOWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7bb-8glT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pathlib%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%2599%25E3%2581%258E%25E3%2581%25A6%25E3%2582%2582%25E3%2581%2586os.path%25E3%2581%25AF%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A0%2588%25E8%2597%25A4%25E3%2583%258A%25E3%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMDMyMDFlOWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shiro46/articles/465b73982faf29",
          "author": "SHIRO",
          "description": "https://weather-heatmap.streamlit.app/?embed_options=show_toolbar\n今年の夏は例年以上に暑い日が続いたことで、暑さを可視化するインフォグラフィックが流行りました。\nその1つが↓のようなヒートマップで過去の気温の推移を可視化したものです。\nhttps://twitter.com/kaz_ogiwara/status/1680580458701094915\nn番煎じですが、この気温ヒートマップをwebで手軽に作成できるアプリを作って公開しました。\n\n 技術紹介\n最近おぼえたstreamlitで動かしています。\nデフォルトのグラフ...",
          "link": "https://zenn.dev/shiro46/articles/465b73982faf29",
          "publishedOn": "2023-11-06T13:19:07.000Z",
          "wordCount": 284,
          "title": "最近流行りの気温ヒートマップ画像を手軽に作れるwebアプリをstreamlitでさくっと作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WQxhw2li--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E8%25BF%2591%25E6%25B5%2581%25E8%25A1%258C%25E3%2582%258A%25E3%2581%25AE%25E6%25B0%2597%25E6%25B8%25A9%25E3%2583%2592%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258Bweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592streamlit%25E3%2581%25A7%25E3%2581%2595%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A8%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WQxhw2li--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E8%25BF%2591%25E6%25B5%2581%25E8%25A1%258C%25E3%2582%258A%25E3%2581%25AE%25E6%25B0%2597%25E6%25B8%25A9%25E3%2583%2592%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258Bweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592streamlit%25E3%2581%25A7%25E3%2581%2595%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A8%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/aoyagi816/articles/7184b9351f2c92",
          "author": "Aoyagi",
          "description": "import numpy as np\nfrom scipy.stats import norm\n\ndef psens(x, y, Gamma=6, GammaInc=1):\n    \"\"\"\n    Rosenbaum Sensitivity Test for Wilcoxon Signed Rank P-Value\n    \n    Parameters:\n    - x: Treatment group\n    - y: Control group\n    - Gamma: Maximum value for gamma\n    - GammaInc: Increment for ga...",
          "link": "https://zenn.dev/aoyagi816/articles/7184b9351f2c92",
          "publishedOn": "2023-11-06T07:48:09.000Z",
          "wordCount": null,
          "title": "PSM_S",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3cnBGnsc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:PSM_S%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Aoyagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1NjFhMmZjZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3cnBGnsc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:PSM_S%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Aoyagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1NjFhMmZjZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/00/articles/run_api-server-with_zephyr-7b_on_google_colab",
          "author": "koji",
          "description": "これは何ですか？\nこれは、エンドポイントを介して LLM を使用する Jupyter ノートブックです。\nこれは llama.cpp、ngrok、そして TheBloke からのモデルを使用しています。基本的な Jupyter ノートブックは zephyr-7b を使用しています。\n\n 使い方 [必要条件]\n\nGoogle アカウント（Google Colab 用）https://colab.google.com/\n\nngrok アカウント https://ngrok.com\n\n\n\n ステップ 0. 上記のアカウントを作成する\n\n ステップ 1. Jupyter ノートブックをコピー...",
          "link": "https://zenn.dev/00/articles/run_api-server-with_zephyr-7b_on_google_colab",
          "publishedOn": "2023-11-06T02:28:43.000Z",
          "wordCount": 485,
          "title": "無料でZephyr-7BをGoogleColabで動かしてAPIサーバとして使う方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ACJyyo8C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7Zephyr-7B%25E3%2582%2592GoogleColab%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6API%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%25BF%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiODc3MTUwYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ACJyyo8C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7Zephyr-7B%25E3%2582%2592GoogleColab%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6API%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%25BF%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiODc3MTUwYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/25e9bf687aff6f",
          "author": "k.sato",
          "description": "はじめに\nsyslog サーバの負荷試験用に大量の syslog を送信する必要があるのですが、ちょうどよいフリーのアプリがないため、ChatGPT を活用して syslog 負荷試験用のアプリを作りたいと思います。\n\n 事前準備\nWindows クライアントのローカルで検証するため、事前に PowerShell で syslog サーバ相当を動作させ、ログ受信テストをします。\nsyslog サーバ相当 Powershell はこちらを参考にさせていただき、ChatGPT に指示して Close 処理を追加しました。(ありがとうございます)\nhttps://level69.net/a...",
          "link": "https://zenn.dev/microsoft/articles/25e9bf687aff6f",
          "publishedOn": "2023-11-06T02:28:42.000Z",
          "wordCount": 4181,
          "title": "syslog 負荷試験用アプリを Python で作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Bv0ThnZ1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:syslog%2520%25E8%25B2%25A0%25E8%258D%25B7%25E8%25A9%25A6%25E9%25A8%2593%25E7%2594%25A8%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%2520Python%2520%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:k.sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYjYxYjNkMmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Bv0ThnZ1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:syslog%2520%25E8%25B2%25A0%25E8%258D%25B7%25E8%25A9%25A6%25E9%25A8%2593%25E7%2594%25A8%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%2520Python%2520%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:k.sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYjYxYjNkMmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kenya_saitoh/articles/cacaf192dbb1a7",
          "author": "KenyaSaitoh",
          "description": "Open AIのAPIを利用したドキュメント一括生成ツールをGitHubに公開\nChat GPTは、文字通りチャットのインタフェースによって、Open AIのサービスからインタラクティブに有効な回答を引き出すツールです。システム開発において、Chat GPTの活用はすでに一般的になっており、開発者が作成したソースコードをレビューしてもらったり、保守のためのドキュメントをリバースしたりする、という用途で使っている人も多いのではないでしょうか。ただしこれらの用途の場合、特段のインタラクションは不要であり、目的に応じてプロンプトのテキストを事前に決めることができれば、1ショットで答えを引き...",
          "link": "https://zenn.dev/kenya_saitoh/articles/cacaf192dbb1a7",
          "publishedOn": "2023-11-06T02:07:52.000Z",
          "wordCount": 668,
          "title": "Chat GPTの応用～Open AIのAPIを利用したドキュメント一括生成ツール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ieGjQTnt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chat%2520GPT%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25EF%25BD%259EOpen%2520AI%25E3%2581%25AEAPI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E4%25B8%2580%25E6%258B%25AC%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KenyaSaitoh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlOTY0OGNjOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ieGjQTnt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chat%2520GPT%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25EF%25BD%259EOpen%2520AI%25E3%2581%25AEAPI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E4%25B8%2580%25E6%258B%25AC%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KenyaSaitoh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlOTY0OGNjOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/murasame_rexxx/articles/b163adbbbfd9f5",
          "author": "tekaru10000",
          "description": "Python 環境構築後の一歩目\n\n 動作環境\nhttps://zenn.dev/murasame_rexxx/articles/88558f73cce762\n↑にあるように、condaを使って仮想環境を構築して、pythonを操作します。\n\n コードエディタについて\n基本的にPythonを記述・編集する際にはjupyter notebookというツールを使います。\nそれでは早速ターミナルで、仮想環境をactiveにしてから\n\ninput\njupyter notebook\n\nでjupyterを起動しましょう。\nすると↑の写真のような画面が出てくるはずです。この画面では、pythonの...",
          "link": "https://zenn.dev/murasame_rexxx/articles/b163adbbbfd9f5",
          "publishedOn": "2023-11-05T19:37:32.000Z",
          "wordCount": 529,
          "title": "Python 基本所作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ExOzZENC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Python%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%2589%2580%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tekaru10000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjNDMxMDQ3ZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ExOzZENC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Python%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%2589%2580%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tekaru10000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjNDMxMDQ3ZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yamazaking/articles/eedf5e9179d46a",
          "author": "yamazaking",
          "description": "つい最近個人開発アプリをだし、そのアプリのインストール数とかをapp storeのanalyticsで見ていたのですが、いちいち見に行くのが面倒くさかったり、Slack等と連携したかったので、アプリアナリティクスの数字をとってくれるいい感じのないかな〜と探したところ、Appleから公式のAPIが出ていたので、これを使ってみることにしました。\n仕様としては、インストール数や課金登録数などを一日一回Slack等に通知してくれる、というものです。\n久しぶりにこういうのを作ってみるということで、格安サーバーを探してみました。\n以前はHerokuが個人開発者用の代表的サービスだったのですが、自分が...",
          "link": "https://zenn.dev/yamazaking/articles/eedf5e9179d46a",
          "publishedOn": "2023-11-05T19:00:45.000Z",
          "wordCount": 704,
          "title": "App Store Connect APIを使ってアプリのインストール数を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--H3RpNxv2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:App%2520Store%2520Connect%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamazaking%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDE1MWFkZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--H3RpNxv2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:App%2520Store%2520Connect%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamazaking%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDE1MWFkZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kou_kawa/articles/10-oauth20-fastapi",
          "author": "Kou",
          "description": "🎯目的\n\nOAuth2.0認証を理解する。\nFastAPIとGCPで実装してみる\n\n\n OAuth 2.0とは？\nOAuth 2.0は、ユーザーが自分のデータを安全に第三者アプリケーションと共有できるようにするための標準プロトコルです。\n例えば、SNSアカウントでログインする機能や、カレンダーアプリがメールアカウントの予定を読み取る機能など、日常の多くのサービスでOAuth 2.0が背後で動作しています。\n主に以下の特徴があります。\n\nトークンベース: ユーザーの資格情報を直接共有するのではなく、アクセストークンを使用してリソースにアクセスします。\nスコープ: アクセス許可の範囲を指...",
          "link": "https://zenn.dev/kou_kawa/articles/10-oauth20-fastapi",
          "publishedOn": "2023-11-05T14:16:53.000Z",
          "wordCount": 1115,
          "title": "FastAPIでOAuth2.0認証",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tsViCBsq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:FastAPI%25E3%2581%25A7OAuth2.0%25E8%25AA%258D%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tsViCBsq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:FastAPI%25E3%2581%25A7OAuth2.0%25E8%25AA%258D%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/pienthon/articles/c6f193858bd41b",
          "author": "Rininmmmment",
          "description": "Mozukuって何？\n私のアルバイトしているビジネスホテルにaiboがいます。\naiboは顔を認識して懐いてくれたり、人によって芸をやってくれたりやってくれなかったり、かなりリアルの犬に近くてかわいいです。\nペットゲームはたくさんありますが、aiboのように人を認識してくれるものは少ないなと感じたので作ろうと思ったのがMozukuです。\naiboは30万円くらいして高すぎるので、インターネット環境さえあれば誰でも気軽にペットを飼えるようなサービスを作ろうとしています。\nちなみにMozukuという名前は、地元にいた猫のもずくちゃんから名前を拝借しました。\n\n 使用技術\n\n フロントエン...",
          "link": "https://zenn.dev/pienthon/articles/c6f193858bd41b",
          "publishedOn": "2023-11-05T07:27:38.000Z",
          "wordCount": 544,
          "title": "PC上で飼えるペット\"Mozuku\"を開発する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Z_ZiISs3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PC%25E4%25B8%258A%25E3%2581%25A7%25E9%25A3%25BC%25E3%2581%2588%25E3%2582%258B%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%2522Mozuku%2522%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Rininmmmment%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWJkYTIzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Z_ZiISs3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PC%25E4%25B8%258A%25E3%2581%25A7%25E9%25A3%25BC%25E3%2581%2588%25E3%2582%258B%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%2522Mozuku%2522%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Rininmmmment%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWJkYTIzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kazu1/articles/662816f4acaede",
          "author": "僕はエンジニア",
          "description": "型アノテーションは必要なんですか？\nそんな疑問について考える記事でございます。\n\n 型アノテーションとは\n型アノテーションとは、変数、関数の引数、戻り値に期待されるデータの型を明示するための構文です。Pythonにおける型アノテーションは、コードの可読性を向上させ、開発者が関数やメソッドを使う際の意図を明確にするのに役立ちます。また、静的型チェッカーを使うことで、実行前に型の不一致によるエラーを検出できるため、バグを減らし開発の効率化に寄与します。\n例えば、以下の関数では：\ndef greet(name: str) -> str:\n    return f'Hello, {name...",
          "link": "https://zenn.dev/kazu1/articles/662816f4acaede",
          "publishedOn": "2023-11-05T04:43:51.000Z",
          "wordCount": 537,
          "title": "【python】型アノテーションは必要か",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZSJB0Izd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591%25E5%259E%258B%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AF%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2583%2595%25E3%2581%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTU4ZjUxZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZSJB0Izd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591%25E5%259E%258B%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AF%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2583%2595%25E3%2581%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTU4ZjUxZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/uchiiii/articles/10c3a890eab705",
          "author": "uchiiii",
          "description": "自分用のメモです。間違えたこと言ってたら教えてください。\n\n 経緯\nrye で用意した python 環境で、pola-rs/pyo3-polars の example を build しようとしたら、\n> make install\n...\n  = note: /usr/bin/ld: cannot find -lpython3.9: No such file or directory\n          collect2: error: ld returned 1 exit status\n\n\nerror: could not compile `expression_lib` (l...",
          "link": "https://zenn.dev/uchiiii/articles/10c3a890eab705",
          "publishedOn": "2023-11-04T16:06:36.000Z",
          "wordCount": 375,
          "title": "/usr/bin/ld: cannot find -lpython3.9: No such file or directory の対処法メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PI_vCoeg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252Fusr%252Fbin%252Fld%253A%2520cannot%2520find%2520-lpython3.9%253A%2520No%2520such%2520file%2520or%2520dir...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uchiiii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lfcXUtZUR3T1JQMExUbWxjOGxZeVZXSEVBVUJRMHdSM2NFZjgwekE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PI_vCoeg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252Fusr%252Fbin%252Fld%253A%2520cannot%2520find%2520-lpython3.9%253A%2520No%2520such%2520file%2520or%2520dir...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uchiiii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lfcXUtZUR3T1JQMExUbWxjOGxZeVZXSEVBVUJRMHdSM2NFZjgwekE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/zgw426/articles/d5779a1c2ce1e4",
          "author": "suo",
          "description": "Bedrock勉強中\nBedrockの使い方の勉強メモ\n\n 事前準備／環境\nバージニアリージョン(us-east-1)に、Cloud9(Ubuntu Server 22.04 LTS)を立てます。\nまた、Cloud9のEC2のIAMロールに必要な権限を付与しておきます（面倒なら、とりあえず AdministratorAccess 付与しちゃう)\n以下はCloud9のDockerバージョンです。\niam0001:~/environment $ docker --version\nDocker version 24.0.7, build afdd53b\n\n\n Dockerファイルを作成する...",
          "link": "https://zenn.dev/zgw426/articles/d5779a1c2ce1e4",
          "publishedOn": "2023-11-04T12:34:28.000Z",
          "wordCount": 833,
          "title": "Amazon Bedrock実装②：Docker on Cloud9で実装してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b3xD9Esc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E5%25AE%259F%25E8%25A3%2585%25E2%2591%25A1%25EF%25BC%259ADocker%2520on%2520Cloud9%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0OWU4NjQ5ZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b3xD9Esc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E5%25AE%259F%25E8%25A3%2585%25E2%2591%25A1%25EF%25BC%259ADocker%2520on%2520Cloud9%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0OWU4NjQ5ZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/koki_n22/articles/c6d674ecc4d3a9",
          "author": "koki_n22",
          "description": "TL;DR\n以下リポジトリをクローンし、使用してください。\nhttps://github.com/koki-nakamura22/amazon-invoice-renamer\n\n 本記事で説明しないこと\n電子帳簿保存法そのものの細かい説明。\n\n 対象ユーザ\n経費になるものをAmazonから購入しがちで、かつファイル名を電子帳簿保存法に対応した形式に変更するのがしんどい人。\nなお、本プログラムは非Amazon Businessの方の請求書に対応しているため、「Amazon Businessでしか買い物してないぜ！」という方はブラウザバック or 本記事で紹介するコード編集でお願いします...",
          "link": "https://zenn.dev/koki_n22/articles/c6d674ecc4d3a9",
          "publishedOn": "2023-11-04T11:08:43.000Z",
          "wordCount": 912,
          "title": "電子帳簿保存法に悩むAmazonヘビーユーザに捧ぐ、Amazonの請求書ファイル名を電子帳簿保存法に対応した形式に一括変換するプログラム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4S9xxZwk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259B%25BB%25E5%25AD%2590%25E5%25B8%25B3%25E7%25B0%25BF%25E4%25BF%259D%25E5%25AD%2598%25E6%25B3%2595%25E3%2581%25AB%25E6%2582%25A9%25E3%2582%2580Amazon%25E3%2583%2598%25E3%2583%2593%25E3%2583%25BC%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2581%25AB%25E6%258D%25A7%25E3%2581%2590%25E3%2580%2581Amazon%25E3%2581%25AE%25E8%25AB%258B%25E6%25B1%2582%25E6%259B%25B8%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2582%2592%25E9%259B%25BB%25E5%25AD%2590%25E5%25B8%25B3%25E7%25B0%25BF%25E4%25BF%259D%25E5%25AD%2598%25E6%25B3%2595%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259F%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AB...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki_n22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzJOTE9mR0hiLTctLUlPODdCTWxucHBQMG16NFNfUGpTazBrMEU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4S9xxZwk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259B%25BB%25E5%25AD%2590%25E5%25B8%25B3%25E7%25B0%25BF%25E4%25BF%259D%25E5%25AD%2598%25E6%25B3%2595%25E3%2581%25AB%25E6%2582%25A9%25E3%2582%2580Amazon%25E3%2583%2598%25E3%2583%2593%25E3%2583%25BC%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2581%25AB%25E6%258D%25A7%25E3%2581%2590%25E3%2580%2581Amazon%25E3%2581%25AE%25E8%25AB%258B%25E6%25B1%2582%25E6%259B%25B8%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2582%2592%25E9%259B%25BB%25E5%25AD%2590%25E5%25B8%25B3%25E7%25B0%25BF%25E4%25BF%259D%25E5%25AD%2598%25E6%25B3%2595%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259F%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AB...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki_n22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzJOTE9mR0hiLTctLUlPODdCTWxucHBQMG16NFNfUGpTazBrMEU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/chatgpt_4/articles/f2fa8abaad4dfa",
          "author": "スーパークリエイター",
          "description": "There will be an improvement in relationships. You will participate in grand events. There will be joy and happiness in the home. The family will stay together. You will be involved in traditional activities. You may acquire valuable assets. Attractive proposals will come your way. You will be a ...",
          "link": "https://zenn.dev/chatgpt_4/articles/f2fa8abaad4dfa",
          "publishedOn": "2023-11-04T10:14:04.000Z",
          "wordCount": 258,
          "title": "title1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---2Cfz13X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AA%25E3%2582%25A8%25E3%2582%25A4%25E3%2582%25BF%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5OTY4MmYxYmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---2Cfz13X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AA%25E3%2582%25A8%25E3%2582%25A4%25E3%2582%25BF%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5OTY4MmYxYmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/51596a6e9bfeb3",
          "author": "Shun",
          "description": "Abstract\nプログラムやツールを使って可視化するときに, ちょっとしたコツを知っていると, 可視化がより簡単になります. 今回は, Pythonで可視化するときの事例を紹介します.\n\n実際に可視化をしたポスト\n\n\n\n データ\n今回用いたデータはこちらです\n\n人口動態調査 人口動態統計 確定数 出生 4-2 出生月別にみた年次別出生数及び出生率（人口千対）\n\n\n CSVを生で読むためのツール\nPythonなどのプログラミング言語でCSVを読み込んでしまうとその後は原則としてPackageやLibraryのインターフェースに則って処理を行うことになります. しかし, その前にCSV...",
          "link": "https://zenn.dev/shundeveloper/articles/51596a6e9bfeb3",
          "publishedOn": "2023-11-04T08:19:19.000Z",
          "wordCount": 750,
          "title": "Pythonで可視化するときのちょっとしたコツ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Do4C7iIj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B3%25E3%2583%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Do4C7iIj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B3%25E3%2583%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yvvakimoto/articles/826d36393fdd55",
          "author": "ywakimoto",
          "description": "背景と概要\n\n 背景\n私は探索的・対話的なデータ分析や理論の基礎検証にPythonを用いることが多い。その場合プログラミングそのものの試行錯誤だけではなく分析や理論検証の試行錯誤が必要である。後者のより本質的な試行錯誤に注力するためにはプログラムが適切に機能分解され、個別に検証されていることが望ましい。そのうえで有用なのが関数型プログラミングだが、イデオロギー的な臭いを排しプラグマティックな視点で臨むために「機能プログラミング」と書くことにした。英語にすればいずれもfunctional programmingである。この記事はPythonによる「機能プログラミング」の考え方や手法を整...",
          "link": "https://zenn.dev/yvvakimoto/articles/826d36393fdd55",
          "publishedOn": "2023-11-04T06:47:25.000Z",
          "wordCount": 3187,
          "title": "(Coconut) Pythonによる機能プログラミング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WOWZtDpo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528Coconut%2529%2520Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ywakimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pVNWtUSVdqQjA5TjJLeU14ZU9XUU13SWd5LU4wUWdlVWZaXzJDdlE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WOWZtDpo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528Coconut%2529%2520Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ywakimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pVNWtUSVdqQjA5TjJLeU14ZU9XUU13SWd5LU4wUWdlVWZaXzJDdlE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/azuki9140/articles/8fe37ec933cc96",
          "author": "AzuKi",
          "description": "1. はじめに\n\n 1-1. 目的\nこの記事では、Pythonを使用してレストランのメニューアイテムを表現し、それを最適化する方法について説明します。具体的には、サイゼリヤのメニューデータを用いて最適化問題を作成し、それを解いてみます。この問題は、与えられた予算と各ジャンルの最大アイテム数の制約の下で、メニューアイテムの選択を最適化することを目指します。\n\n 1-2. データソース\nこの記事で使用するサイゼリヤのメニューデータは、以下のGitHubリポジトリから取得しました。\n参考にしたリポジトリ:\nhttps://github.com/marushosummers/Saizeriy...",
          "link": "https://zenn.dev/azuki9140/articles/8fe37ec933cc96",
          "publishedOn": "2023-11-04T05:20:30.000Z",
          "wordCount": 1880,
          "title": "レストランメニューの最適化: プログラミングで解く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--x-IE8dr---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%253A%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AzuKi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkFHd1dqR2IzUHQwX2hHbWhtVkFMcEVISGZ2VVVkUE1MN2RYclRpWldNMFU4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--x-IE8dr---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%253A%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AzuKi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkFHd1dqR2IzUHQwX2hHbWhtVkFMcEVISGZ2VVVkUE1MN2RYclRpWldNMFU4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/akishichinibu/articles/1423539f71d8c2",
          "author": "アキシチニブ",
          "description": "前言\n最近，LLM与OpenAI非常流行， 相信很多人从Complete和Chat API中的stream模式第一次接触到了SSE API。SSE(Server-Sent Events)是一种支持从Server Side向Client Side推送事件的方式。它与传统的Restful API不同，传统的Restful架构只能从服务器端发起请求，然后客户端返回响应的方式进行数据传输。在需要实时更新数据的场景中，只能依赖轮询或者异步任务机制来实现。但前者性能不高，而后者会增加前后端架构的复杂性。\nWebSocket也是一个选择，但实现则更加复杂。\n对于需要服务端主动向客户端推送消息，而客...",
          "link": "https://zenn.dev/akishichinibu/articles/1423539f71d8c2",
          "publishedOn": "2023-11-04T04:20:31.000Z",
          "wordCount": 985,
          "title": "基于FastAPI构建 Server-Sent Events API",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w0xFXB7w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259F%25BA%25E4%25BA%258EFastAPI%25E6%259E%2584%25E5%25BB%25BA%2520Server-Sent%2520Events%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AD%25E3%2582%25B7%25E3%2583%2581%25E3%2583%258B%25E3%2583%2596%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmlMWjJFaDFfcnh4ckdiVk94LW44ci1oTXN6U0pZd0ZUYllqU08zMk9wOFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--w0xFXB7w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259F%25BA%25E4%25BA%258EFastAPI%25E6%259E%2584%25E5%25BB%25BA%2520Server-Sent%2520Events%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AD%25E3%2582%25B7%25E3%2583%2581%25E3%2583%258B%25E3%2583%2596%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmlMWjJFaDFfcnh4ckdiVk94LW44ci1oTXN6U0pZd0ZUYllqU08zMk9wOFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/enterrocken/articles/2aaab79961e386",
          "author": "yuki.hirano",
          "description": "はじめに\n初めまして。\n都内IT企業で、データアルゴリズムチームのエンジニアをしております、Noraです。\n機械学習やデータサイエンスプロジェクトに関わる際、デモプロダクトを作りたい状況は多いと思います。\nその際、Streamlitという、PythonのみでWebアプリケーションを作成できるフレームワークが有用です。\nhttps://streamlit.io/\n今回の記事では、「運用保守が容易で開発コストを下げる」ディレクトリ設計方針を解説していきます。\n「Streamlitプロジェクトの、最適なディレクトリ設計方針を考えたい」という、チームで開発しているエンジニアにおすすめの記事と...",
          "link": "https://zenn.dev/enterrocken/articles/2aaab79961e386",
          "publishedOn": "2023-11-04T03:37:29.000Z",
          "wordCount": 843,
          "title": "Streamlit設計方針: 効果的なアプリケーションの構築を考える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4FIjjw8L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E8%25A8%25AD%25E8%25A8%2588%25E6%2596%25B9%25E9%2587%259D%253A%2520%25E5%258A%25B9%25E6%259E%259C%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki.hirano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXh1MGVFSGV5anMwelFidEdMZE9QZTRNTG1JNThCYlo4cTRTblNHdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4FIjjw8L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E8%25A8%25AD%25E8%25A8%2588%25E6%2596%25B9%25E9%2587%259D%253A%2520%25E5%258A%25B9%25E6%259E%259C%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki.hirano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXh1MGVFSGV5anMwelFidEdMZE9QZTRNTG1JNThCYlo4cTRTblNHdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/fmfm_mdk/articles/pytorch-masked-value-is-not-same",
          "author": "fmfm_mdk",
          "description": "回答：気のせいです．\n正確には，誤差の範囲，で良いと思います．\n以降より細かい検証の話です．\n\n 環境情報\n\nOS: win 10\npytorch==2.10\n\n\n 以下のコードでCLSの値を取り出します\nfrom transformers import BertJapaneseTokenizer, BertModel\nmodel_name = 'cl-tohoku/bert-base-japanese-whole-word-masking'\n\ntokenizer = BertJapaneseTokenizer.from_pretrained( model_name )\npt_mod...",
          "link": "https://zenn.dev/fmfm_mdk/articles/pytorch-masked-value-is-not-same",
          "publishedOn": "2023-11-03T18:36:00.000Z",
          "wordCount": 3367,
          "title": "pytorch, BERT, batch処理, paddingするとしない時とは値が異なる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fEWCzlUh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pytorch%252C%2520BERT%252C%2520batch%25E5%2587%25A6%25E7%2590%2586%252C%2520padding%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25E3%2581%25A8%25E3%2581%25AF%25E5%2580%25A4%25E3%2581%258C%25E7%2595%25B0%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fmfm_mdk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekN3Sm1FLUFSVHNMVmZEZkJ5NWlZWlJyS2tTQld2clBWLXZKNjQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fEWCzlUh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pytorch%252C%2520BERT%252C%2520batch%25E5%2587%25A6%25E7%2590%2586%252C%2520padding%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25E3%2581%25A8%25E3%2581%25AF%25E5%2580%25A4%25E3%2581%258C%25E7%2595%25B0%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fmfm_mdk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekN3Sm1FLUFSVHNMVmZEZkJ5NWlZWlJyS2tTQld2clBWLXZKNjQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yamasakit/articles/dc9ed1acd5ae3b",
          "author": "yamasaKit",
          "description": "💡 やったこと\n\n\nruff の採用と同時に Linter/Formatter/Type annotation の見直しをしました。\n\nmypy はゆるく使う方針で --disallow-untyped-defs のみ採用しました。\n\nmypy-type-checker を使うことで mypy の利用がより簡便になりました。\n\n\n 背景\nruff という Linter/Formatter が最近いい感じらしいです。\nhttps://docs.astral.sh/ruff\n\n\nflake8, isort, black とほぼ同等 (公式が言うには例えば black は 99% カバー)...",
          "link": "https://zenn.dev/yamasakit/articles/dc9ed1acd5ae3b",
          "publishedOn": "2023-11-03T13:40:00.000Z",
          "wordCount": 623,
          "title": "VSCode extension mypy-type-checker 使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--am5UIGKP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520extension%2520mypy-type-checker%2520%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamasaKit%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZDc4NDNmZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--am5UIGKP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520extension%2520mypy-type-checker%2520%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamasaKit%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZDc4NDNmZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/koki_n22/articles/7c53c523d1b154",
          "author": "koki_n22",
          "description": "このページでは、Djangoで大量データをループでテストする方法を説明します。\n\n TL;DR\n大量データをループでテストのコードをコピペし、状況に合わせて手を入れてお使いください。\n\n 何が嬉しいのか\n例えば、チケット価格で11枚目以降は以下のように謎の値引きが行われることがあるとします。\n11枚目: 9500円\n12枚目: 9300円\n13枚目: 9200円\n14枚目: 9000円\n15枚目: 8700円\n...以降、1枚ずつの値段設定が続く\nこのテストコードを真面目に書くと、以下のように似通ったコードをひたすら書くことになり、可読性が悪くなります。\n保守性も悪くなり、手を入れる際に...",
          "link": "https://zenn.dev/koki_n22/articles/7c53c523d1b154",
          "publishedOn": "2023-11-03T11:52:20.000Z",
          "wordCount": 698,
          "title": "Djangoで大量データをループでテストする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1x-BlCy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E5%25A4%25A7%25E9%2587%258F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki_n22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzJOTE9mR0hiLTctLUlPODdCTWxucHBQMG16NFNfUGpTazBrMEU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1x-BlCy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E5%25A4%25A7%25E9%2587%258F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki_n22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzJOTE9mR0hiLTctLUlPODdCTWxucHBQMG16NFNfUGpTazBrMEU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/4ded1312d863d0",
          "author": "Praveen Kumar",
          "description": "Dog parks are usually full of excitement as pooches of all sizes and breeds gather to play, sniff, explore and run amok. That being said, there are some dog parks that take the excitement to a whole new level through innovative landscapes, tasty treats on offer and so much more. Those who enjoy t...",
          "link": "https://zenn.dev/praveen2501/articles/4ded1312d863d0",
          "publishedOn": "2023-11-03T10:23:59.000Z",
          "wordCount": 204,
          "title": "title2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/c774e111f0d371",
          "author": "Praveen Kumar",
          "description": "There will be an improvement in relationships. You will participate in grand events. There will be joy and happiness in the home. The family will stay together. You will be involved in traditional activities. You may acquire valuable assets. Attractive proposals will come your way. You will be a ...",
          "link": "https://zenn.dev/praveen2501/articles/c774e111f0d371",
          "publishedOn": "2023-11-03T10:23:23.000Z",
          "wordCount": 263,
          "title": "title1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/croys/articles/d782e590d4d709",
          "author": "Croys",
          "description": "そもそもどんなサービスを動かしていたのか\n\n VRSNS　VRChat向けのゲーム内通貨保存システム「CBS」\n・ユーザー数はおよそ3000人\n・日あたりのアクティブユーザーは60人\n\n\n 特徴\n・ゲーム内でのロールプレイイベントに価値を付加できる\n・イベントに向けて労働ワールドで稼ぎ，イベントをさらに楽しむ\n・キャストは給与を貰える→循環経済の創造\n\n 今回何が起きたのか\n\n アップデート\n・ターゲットサービスプラットフォームであるVRChatにクライアントアップデートが入った\n・この際にhttpによる平文通信がブロックされるように変更された\n・事前のアナウンスはなかった\n\n 当日...",
          "link": "https://zenn.dev/croys/articles/d782e590d4d709",
          "publishedOn": "2023-11-03T08:37:23.000Z",
          "wordCount": 507,
          "title": "自前サーバーで動かしてたWebサービスを障害発生から4時間でHeroku環境に移行させた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kBnIPQFa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%2589%258D%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E9%259A%259C%25E5%25AE%25B3%25E7%2599%25BA%25E7%2594%259F%25E3%2581%258B%25E3%2582%25894%25E6%2599%2582%25E9%2596%2593%25E3%2581%25A7Heroku%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Croys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WVdKNXBQWF8wSHhVMG11eF9TVWxvQ3NJSEppVXFBMEI2djIzQXRtUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kBnIPQFa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%2589%258D%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E9%259A%259C%25E5%25AE%25B3%25E7%2599%25BA%25E7%2594%259F%25E3%2581%258B%25E3%2582%25894%25E6%2599%2582%25E9%2596%2593%25E3%2581%25A7Heroku%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Croys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WVdKNXBQWF8wSHhVMG11eF9TVWxvQ3NJSEppVXFBMEI2djIzQXRtUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/b8fff48bf6fc43",
          "author": "Praveen Kumar",
          "description": "Dog parks are usually full of excitement as pooches of all sizes and breeds gather to play, sniff, explore and run amok. That being said, there are some dog parks that take the excitement to a whole new level through innovative landscapes, tasty treats on offer and so much more. Those who enjoy t...",
          "link": "https://zenn.dev/praveen2501/articles/b8fff48bf6fc43",
          "publishedOn": "2023-11-03T08:18:01.000Z",
          "wordCount": 204,
          "title": "title2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/74bcb5870522fa",
          "author": "Praveen Kumar",
          "description": "There will be an improvement in relationships. You will participate in grand events. There will be joy and happiness in the home. The family will stay together. You will be involved in traditional activities. You may acquire valuable assets. Attractive proposals will come your way. You will be a ...",
          "link": "https://zenn.dev/praveen2501/articles/74bcb5870522fa",
          "publishedOn": "2023-11-03T08:17:22.000Z",
          "wordCount": 263,
          "title": "title1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/gomo/articles/971bfa63f0705f",
          "author": "Masamoto",
          "description": "概要\npythonのWebフレームワークDjangoで{% for athlete in athlete_list %}<div>{{athlete.name}}</div>{% endfor %}のような、HTMLや他のタグを間に挟めるendタグを持つカスタムタグを自作する方法です。\n初Django（というかpythonも少ししか書いたことない）なのでお作法とか違ったらすいません。\nドキュメントは下記ですが少々内容が足りないです。タグの引数の解析の説明がありません。\nhttps://docs.djangoproject.com/en/4.2/howto/cu...",
          "link": "https://zenn.dev/gomo/articles/971bfa63f0705f",
          "publishedOn": "2023-11-03T07:49:18.000Z",
          "wordCount": 1360,
          "title": "Djangoのテンプレートでforのようなendタグを持つカスタムタグを書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ng7lHD4L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7for%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AAend%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gtRjJxMWpOMWJqN1lzb2VDWUYybmlwb21TNk1qcHEzMTdHN3VwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ng7lHD4L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7for%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AAend%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gtRjJxMWpOMWJqN1lzb2VDWUYybmlwb21TNk1qcHEzMTdHN3VwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/f7912be0269b1f",
          "author": "osn_Lofi",
          "description": "BERTは、テキスト分類や感情分析などの自然言語処理タスクにおいて、\n革命的な成果をもたらしたモデルの一つです。\nしかしながら、その使用にあたっては、致命的な制約があります。\nそれは、モデルが一度に処理できる文章の長さが512トークンまでという制約です。\nこの制約のため、BERTでは長文を扱えないと考えていらっしゃる方も多いと思います。\n私もそうでした。\nこの記事では、BERTで512トークンを超える長文を扱う方法について解説していきます。\n\n BERTで長文を扱う方法\nBERTで長文を扱うための方法として、いくつかのアプローチが提案されています。\nここでは、最も、原始的な方法として、長...",
          "link": "https://zenn.dev/robes/articles/f7912be0269b1f",
          "publishedOn": "2023-11-03T01:46:57.000Z",
          "wordCount": 1406,
          "title": "BERTで512トークンを超える長文を扱う方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DxpCvo3P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BERT%25E3%2581%25A7512%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2582%2592%25E8%25B6%2585%25E3%2581%2588%25E3%2582%258B%25E9%2595%25B7%25E6%2596%2587%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DxpCvo3P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BERT%25E3%2581%25A7512%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2582%2592%25E8%25B6%2585%25E3%2581%2588%25E3%2582%258B%25E9%2595%25B7%25E6%2596%2587%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/totopironote/articles/d3e189855a6150",
          "author": "ととぴろnote",
          "description": "はじめに\n拡張クロスデータ行列法(extended-cross-data-matrix methodology (ECDM))は、YataとAoshimaによって開発されたもので、YataとAoshimaによるCDMの拡張です\nCDMについてはこちらをチェック。\nhttps://zenn.dev/totopironote/articles/b63807d5fb8333\n今回は分割方法を紹介し、その分割するpythonコードを載せてあります。\nECDMを用いて推定量を求めるところまではしてないので詳しく知りたい方は参考文献をご確認ください。\n\n 拡張クロスデータ行列法\nn_{(1)}=...",
          "link": "https://zenn.dev/totopironote/articles/d3e189855a6150",
          "publishedOn": "2023-11-02T21:00:01.000Z",
          "wordCount": 1103,
          "title": "拡張クロスデータ行列法 with Python",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SZT2IIsC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A1%258C%25E5%2588%2597%25E6%25B3%2595%2520with%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SZT2IIsC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A1%258C%25E5%2588%2597%25E6%25B3%2595%2520with%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/gae/articles/922451ce9b107f",
          "author": "gae",
          "description": "はじめに\nこんにちは．まずはこの記事を開いてくれてありがとうございます．これは私が所属するMMAというサークル(総合格闘技じゃないよ)の部会の準備を楽にしようとした話です．\n初心者が初心者なりに作成して記事を書くので，拙い部分も多いとは思いますが，最後まで読んでいただければ幸いです．\nhttps://github.com/gae-22/club_meeting\n\n 部会の準備\nMMA では，毎週部会を行っています．部会では，毎週部員から挙げられる議題の話し合いだったり，講習会だったりを行っています．問題は，議題を投票して決めるところです．\nその準備には，次のようなものが必要です．\n\n...",
          "link": "https://zenn.dev/gae/articles/922451ce9b107f",
          "publishedOn": "2023-11-02T17:01:20.000Z",
          "wordCount": 4444,
          "title": "部会の準備が面倒だった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EWV076Dr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2583%25A8%25E4%25BC%259A%25E3%2581%25AE%25E6%25BA%2596%25E5%2582%2599%25E3%2581%258C%25E9%259D%25A2%25E5%2580%2592%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gae%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkdPbjh2Tm85aV9TckItNzFPYUJfSXB3LUdUeFBMeUc3UldpaVg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EWV076Dr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2583%25A8%25E4%25BC%259A%25E3%2581%25AE%25E6%25BA%2596%25E5%2582%2599%25E3%2581%258C%25E9%259D%25A2%25E5%2580%2592%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gae%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkdPbjh2Tm85aV9TckItNzFPYUJfSXB3LUdUeFBMeUc3UldpaVg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/gae/articles/2543471a41d6e7",
          "author": "gae",
          "description": "はじめに\nこんにちは．まずはこの記事を開いてくれてありがとうございます．\nこれは私が所属するMMAというサークル(総合格闘技じゃないよ)の部室の入退室管理システムEntersysを作成した際の記録です．\n初心者が初心者なりに作成して記事を書くので，拙い部分も多いとは思いますが，最後まで読んでいただければ幸いです．\n\n Entersys とは\nEntersysは，MMA の部室の入退室管理を行うシステムです．\nこの名前の由来は，EnterとSystemを組み合わせたものです．MMA には...sysというシステムが数多く存在しています．その慣習に合わせて，Entersysという名前にし...",
          "link": "https://zenn.dev/gae/articles/2543471a41d6e7",
          "publishedOn": "2023-11-02T11:19:51.000Z",
          "wordCount": 2084,
          "title": "Entersys作成記",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yhrO0p89--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Entersys%25E4%25BD%259C%25E6%2588%2590%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gae%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkdPbjh2Tm85aV9TckItNzFPYUJfSXB3LUdUeFBMeUc3UldpaVg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yhrO0p89--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Entersys%25E4%25BD%259C%25E6%2588%2590%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gae%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkdPbjh2Tm85aV9TckItNzFPYUJfSXB3LUdUeFBMeUc3UldpaVg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/being/articles/ydlidar-sdm15",
          "author": "_ being",
          "description": "はじめに\nYDLIDAR SDM15のPythonライブラリを作りました。\nhttps://github.com/being24/YDLIDAR-SDM15_python\n\n このライブラリは？\n公式のマニュアルを参考に、SDM15をPySerialを用いて接続するライブラリです。\nマニュアルに記載されているすべてのコマンドを実装しています。\nまた、設定のパラメータはEnumで定義しているので、コード補完が効きます。\n\n 使い方\nfrom SDM15 import SDM15, BaudRate\n\nif __name__ == \"__main__\":\n    lidar = SDM1...",
          "link": "https://zenn.dev/being/articles/ydlidar-sdm15",
          "publishedOn": "2023-11-02T10:49:24.000Z",
          "wordCount": 367,
          "title": "YDLIDAR SDM15のPythonライブラリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1S_9JRJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YDLIDAR%2520SDM15%25E3%2581%25AEPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:_%2520being%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGem1JUU84Nm5kci1CTmwxeExZa0ZlV3k1Y2NuYlBwWktiYUN6Nmc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1S_9JRJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YDLIDAR%2520SDM15%25E3%2581%25AEPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:_%2520being%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGem1JUU84Nm5kci1CTmwxeExZa0ZlV3k1Y2NuYlBwWktiYUN6Nmc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/eaabb3b61c7871",
          "author": "Praveen Kumar",
          "description": "New Zealand were defeated heavily by South Africa by a mammoth 190 runs in a one-sided contest at the Maharashtra Cricket Association Stadium in Pune. This was a big blow for the Kiwis, as they suffered their third consecutive loss in the tournament after the defeats against India and Australia. ...",
          "link": "https://zenn.dev/praveen2501/articles/eaabb3b61c7871",
          "publishedOn": "2023-11-02T09:14:51.000Z",
          "wordCount": 200,
          "title": "title2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/eba929ee30110a",
          "author": "Praveen Kumar",
          "description": "Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Conten...",
          "link": "https://zenn.dev/praveen2501/articles/eba929ee30110a",
          "publishedOn": "2023-11-02T09:14:07.000Z",
          "wordCount": 56,
          "title": "title1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tellernovel_inc/articles/27e21b8cca94c8",
          "author": "川尻亮真 (Ryoma Kawajiri)",
          "description": "テラーノベルで機械学習を中心に担当している川尻です。\n最近新たにPythonのプロジェクトを立ち上げるときにモノレポ構成にしました。Pythonにはまだデファクトとなるようなモノレポのツールはないですが、poetryだけで新しいツールを使わずに対応できたのでご紹介します。\nモノリポにするメリットは、大まかには以下のようになります。\n\nLinter, CI, IDEなどのよく使うツールの設定が簡単に共通化できる。\nモジュール間の依存関係をシンプルにできる。\n\nPythonでモノレポをやっている例を検索すると、pantsやbazelなど多言語に対応した専用のツールを使う方法もでてきました。今...",
          "link": "https://zenn.dev/tellernovel_inc/articles/27e21b8cca94c8",
          "publishedOn": "2023-11-02T07:52:35.000Z",
          "wordCount": 1300,
          "title": "Poetryを使ったPythonのモノレポ構成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LOavQwlr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FPython%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AC%25E3%2583%259D%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258E%25E3%2583%2599%25E3%2583%25AB%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B7%259D%25E5%25B0%25BB%25E4%25BA%25AE%25E7%259C%259F%2520%2528Ryoma%2520Kaw...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2ZDBjOWE0YTEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmQ1TEtsTDFvLVJUaXI0cjQzVnd5S2w0RHJWZDZKV082MDgtaGY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LOavQwlr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FPython%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AC%25E3%2583%259D%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258E%25E3%2583%2599%25E3%2583%25AB%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B7%259D%25E5%25B0%25BB%25E4%25BA%25AE%25E7%259C%259F%2520%2528Ryoma%2520Kaw...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2ZDBjOWE0YTEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmQ1TEtsTDFvLVJUaXI0cjQzVnd5S2w0RHJWZDZKV082MDgtaGY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/6d556ec23d0534",
          "author": "Praveen Kumar",
          "description": "Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Conten...",
          "link": "https://zenn.dev/praveen2501/articles/6d556ec23d0534",
          "publishedOn": "2023-11-02T06:47:24.000Z",
          "wordCount": 56,
          "title": "title2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/8d46094dcbc951",
          "author": "Praveen Kumar",
          "description": "Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Conten...",
          "link": "https://zenn.dev/praveen2501/articles/8d46094dcbc951",
          "publishedOn": "2023-11-02T06:46:42.000Z",
          "wordCount": 56,
          "title": "title1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/977c894a59ccea",
          "author": "Praveen Kumar",
          "description": "Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Conten...",
          "link": "https://zenn.dev/praveen2501/articles/977c894a59ccea",
          "publishedOn": "2023-11-02T06:33:25.000Z",
          "wordCount": 56,
          "title": "title2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/0f46e9a5d91298",
          "author": "Praveen Kumar",
          "description": "Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Conten...",
          "link": "https://zenn.dev/praveen2501/articles/0f46e9a5d91298",
          "publishedOn": "2023-11-02T06:32:43.000Z",
          "wordCount": 56,
          "title": "title1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/679633d2b8d4fe",
          "author": "Praveen Kumar",
          "description": "Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Content2Blog-Conten...",
          "link": "https://zenn.dev/praveen2501/articles/679633d2b8d4fe",
          "publishedOn": "2023-11-02T06:30:22.000Z",
          "wordCount": 56,
          "title": "title2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juFtFe7F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/742b32c20769e6",
          "author": "Praveen Kumar",
          "description": "Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Conten...",
          "link": "https://zenn.dev/praveen2501/articles/742b32c20769e6",
          "publishedOn": "2023-11-02T06:29:35.000Z",
          "wordCount": 56,
          "title": "title1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/0685f82022817d",
          "author": "Praveen Kumar",
          "description": "Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Content1Blog-Conten...",
          "link": "https://zenn.dev/praveen2501/articles/0685f82022817d",
          "publishedOn": "2023-11-02T05:50:05.000Z",
          "wordCount": 56,
          "title": "title1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jMIlTSCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:title1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/praveen2501/articles/7a5dbee9212a7d",
          "author": "Praveen Kumar",
          "description": "sss",
          "link": "https://zenn.dev/praveen2501/articles/7a5dbee9212a7d",
          "publishedOn": "2023-11-02T05:33:30.000Z",
          "wordCount": 57,
          "title": "ss",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eAWIbfY4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:ss%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eAWIbfY4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:ss%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Praveen%2520Kumar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01Cck1jaExvMWppNmsyWmxXaGJJeFZyZno1LXAzQlBrbC1DdjRLVWpidkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tomoyuki_suzuki/articles/f8a6c246e1266a",
          "author": "tomoyuki-suzuki",
          "description": "はじめに\nこの記事は、\n　Using Python on Google Cloud with Cloud Run\nという動画を視聴し『実際にやってみた』という記事になります。\n\n この記事でできるようになる事\nPythonアプリを Cloud Run Service で実行できるようになる。\n\n Cloud Run について簡単に理解しておく\nCloud Runは、サーバレスの環境でコンテナベースの\nアプリケーションを実行するためのプラットフォームであり、\nこれを使用することで、任意のランタイムやフレームワークを\n使用したアプリケーションを簡単にデプロイする事ができるとの事。\nさらに...",
          "link": "https://zenn.dev/tomoyuki_suzuki/articles/f8a6c246e1266a",
          "publishedOn": "2023-11-02T05:11:28.000Z",
          "wordCount": 391,
          "title": "Cloud Run を使用して Google Cloud 上で Python を使用する。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VpLeGO8Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Run%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%2520Google%2520Cloud%2520%25E4%25B8%258A%25E3%2581%25A7%2520Python%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomoyuki-suzuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEdETTI1bUpUb3NDSy1KZ09LMzliaEZlaEpQQ3B6SUpqcndDUWlVRXhIPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VpLeGO8Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Run%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%2520Google%2520Cloud%2520%25E4%25B8%258A%25E3%2581%25A7%2520Python%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomoyuki-suzuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEdETTI1bUpUb3NDSy1KZ09LMzliaEZlaEpQQ3B6SUpqcndDUWlVRXhIPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shun1997/articles/2c3055c7826884",
          "author": "ジニア",
          "description": "前提\n今回作成したプログラムは、dji pocket2で撮影した動画をyoutubeにアップロードするツールです。\nあくまで自分のために作ったものなのでほとんどの人には使えないものだと思います。\nただ、dji pocket2で動画を撮影して、そのまま上げるような方には便利に使ってもらえるかな。\nそんな人いないかもしれないけど、、、\n\n やりたいこと\ndji pocket2で動画を撮影した後、SDカードを取り出してPCに接続し、コマンドラインからコードを一つ叩けば編集アップロードが完了するようなものを作ります。\ndji pocket2で撮影した動画は5分くらいで細切れになっているのでそ...",
          "link": "https://zenn.dev/shun1997/articles/2c3055c7826884",
          "publishedOn": "2023-11-02T04:23:53.000Z",
          "wordCount": 273,
          "title": "dji pocket2で撮影した動画をyoutubeにアップロードするツール作りました。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--npO9yiOk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dji%2520pocket2%25E3%2581%25A7%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2597%25E3%2581%259F%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592youtube%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2YzlkNGM1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--npO9yiOk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dji%2520pocket2%25E3%2581%25A7%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2597%25E3%2581%259F%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592youtube%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2YzlkNGM1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/totopironote/articles/b63807d5fb8333",
          "author": "ととぴろnote",
          "description": "はじめに\n今回は、高次元主成分分析(高次元PCA)の1つである、クロスデータ行列法(cross-data-matrix methodology)を紹介します。\nn>dのPCAはこちらの記事をチェック。\nhttps://zenn.dev/totopironote/articles/aa17833ef00e5f\n高次元データについて知りたい方はこちらをチェック\nhttps://zenn.dev/totopironote/articles/f13fe705f52d42\n高次元データと主成分分析について知りたい方はこちらをチェック\nhttps://zenn.dev/totopirono...",
          "link": "https://zenn.dev/totopironote/articles/b63807d5fb8333",
          "publishedOn": "2023-11-02T00:00:00.000Z",
          "wordCount": 2206,
          "title": "クロスデータ行列法 with Python",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tzG09YqH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A1%258C%25E5%2588%2597%25E6%25B3%2595%2520with%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tzG09YqH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A1%258C%25E5%2588%2597%25E6%25B3%2595%2520with%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/todoker_blog/articles/1ac4d61f4e42fd",
          "author": "山本隼汰 | Hayata Yamamoto",
          "description": "こんにちは。CTO の hayata-yamamoto です。\n弊社では、Serverless Framework を用いて Lambda アプリケーションを構築しています。APIサーバーや非同期処理のワーカーなどもなるべく Lambda で完結するものは完結するように書いており、その際に、Powertools for AWS (Python) というライブラリを多用しています。\nhttps://docs.powertools.aws.dev/lambda/python/latest/\nこのライブラリは大変便利で、筆者個人としては「もっと早く知っておけば良かった」と思うことが多い一方で、...",
          "link": "https://zenn.dev/todoker_blog/articles/1ac4d61f4e42fd",
          "publishedOn": "2023-11-01T23:30:00.000Z",
          "wordCount": 1416,
          "title": "Powertools for AWS (Python) を用いたバッチ処理の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YuYfNwZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Powertools%2520for%2520AWS%2520%2528Python%2529%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2588%25E3%2583%2589%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNTA2ODRhYWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YuYfNwZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Powertools%2520for%2520AWS%2520%2528Python%2529%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2588%25E3%2583%2589%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNTA2ODRhYWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kotopasi/articles/ebc5758074536f",
          "author": "あまたつ",
          "description": "pip使えて嬉しい。\n\n venvのインストール\nsudo apt install python3.11-venv\n\n 仮想環境の作成\npython -m env [testenv]\n\n 仮想環境に入る\nsource ./[testenv]/bin/activate\n\n 仮想環境から出る\ndeactivate\n\n 仮想環境内のパッケージを確認\npip freeze\nPC本体ではなく、仮想環境内であることに注意",
          "link": "https://zenn.dev/kotopasi/articles/ebc5758074536f",
          "publishedOn": "2023-11-01T14:51:28.000Z",
          "wordCount": 143,
          "title": "venv操作メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dn6p6SGZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:venv%25E6%2593%258D%25E4%25BD%259C%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkMTc2MzFlYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dn6p6SGZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:venv%25E6%2593%258D%25E4%25BD%259C%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkMTc2MzFlYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kotopasi/articles/3f76e465e35227",
          "author": "あまたつ",
          "description": "環境\nUbuntu 23.04\n\n はじめに\nubuntuに最初から入っているPythonの環境構築メモです。\npipが推奨されていないなどクセがあるので、新たにPythonをインストールするか、venvでPythonの仮想環境を作ったほうが良いです。\nそれでもなお初期搭載のPythonを使いたい人向けです。\n参考:\nhttps://dev.classmethod.jp/articles/ubuntu-beginners-two-problem-with-building-python-environment/\n\n pipのインストール\npipのインストールの前にsudo apt u...",
          "link": "https://zenn.dev/kotopasi/articles/3f76e465e35227",
          "publishedOn": "2023-11-01T14:42:59.000Z",
          "wordCount": 563,
          "title": "UbutnuのPython環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BAIhKKQ---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubutnu%25E3%2581%25AEPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkMTc2MzFlYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BAIhKKQ---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubutnu%25E3%2581%25AEPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkMTc2MzFlYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sugyan/books/adventofcode-2022",
          "author": "sugyan",
          "description": "Advent of Codeは、毎年12月に1日から25日間、毎日問題が出題されるプログラミングパズルです。\n解答した個人記録として、各日各partの問題の概要・解答例の他に、考え方についても簡単にですが書いています。\n日本語情報がまだ少なくハードルが高いと思われるかもしれませんが、本書をきっかけに挑戦してみる仲間が増えてくれると嬉しいです。",
          "link": "https://zenn.dev/sugyan/books/adventofcode-2022",
          "publishedOn": "2023-11-01T14:41:19.000Z",
          "wordCount": 209,
          "title": "Advent of Code 2022 解答ガイド",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aYiJ5HVk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iZTMyOGJiYThjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aYiJ5HVk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iZTMyOGJiYThjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/kou_kawa/articles/09-second-mysql-fastapi",
          "author": "Kou",
          "description": "🎯目的\n\n外部キーのあるテーブルが追加された。結合やグループ化してデータを取得する。\nFastAPIで複雑なデータを取得する。\n\n\n 前回の内容\n今回はFastAPIでデータベースとの連携を行った後からのものになります。\nhttps://zenn.dev/kou_kawa/articles/08-first-mysql-fastapi\n\n テーブル仕様\n前回のテーブルを修正する。修正したテーブルは以下とする。\n\n API仕様\n今回はpost側のテーブルのCRUD操作のAPIは割愛する。\nuser側のテーブルの取得APIを修正する。\n# method: GET データの取得\n# req...",
          "link": "https://zenn.dev/kou_kawa/articles/09-second-mysql-fastapi",
          "publishedOn": "2023-11-01T11:36:16.000Z",
          "wordCount": 2510,
          "title": "FastAPIとSQLAlchemyでリレーショナルデータベースからの複雑なデータ取得",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FaZgPxCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8SQLAlchemy%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E8%25A4%2587%25E9%259B%2591%25E3%2581%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FaZgPxCk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8SQLAlchemy%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E8%25A4%2587%25E9%259B%2591%25E3%2581%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/gomo/articles/1454239c97972f",
          "author": "Masamoto",
          "description": "概要\nDjangoのforms.FormはwidgetでテンプレートにレンダリングされるHTMLが決まってしまい、テンプレートで細かくカスタマイズすることができません。属性やクラスは付与できますが、forms.MultipleChoiceFieldで複数のチェックボックスを使う場合など囲ってるdivやlabelなどの細かいカスタマイズができないためCSSフレームワークを適応する時困ります。そんな時はそっくりテンプレートを入れ替えるのが吉なのかな？（すいません初Djangoなので手探り中）。テンプレートを変更する方法は見つけたのメモです。\nDjangoのバージョンは4.2です。\n\n コ...",
          "link": "https://zenn.dev/gomo/articles/1454239c97972f",
          "publishedOn": "2023-11-01T08:26:45.000Z",
          "wordCount": 425,
          "title": "DjangoのForm Widgetのテンプレートを変更する。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dizoF4FJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AEForm%2520Widget%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gtRjJxMWpOMWJqN1lzb2VDWUYybmlwb21TNk1qcHEzMTdHN3VwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dizoF4FJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AEForm%2520Widget%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gtRjJxMWpOMWJqN1lzb2VDWUYybmlwb21TNk1qcHEzMTdHN3VwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b71b8f48b8babb",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-324 B - 3-smooth Numbers\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef div(n, x):\n    while n % x == 0:\n        n //= x\n    return n\n\n\ndef main():\n    n = getInt()\n\n    print('Yes' if div(div(n, 2), 3) == 1 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b71b8f48b8babb",
          "publishedOn": "2023-11-01T07:44:09.000Z",
          "wordCount": 299,
          "title": "［AtCoder］ABC-324｜B - 3-smooth Numbers",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--869Z6lb4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-324%25EF%25BD%259CB%2520-%25203-smooth%2520Numbers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--869Z6lb4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-324%25EF%25BD%259CB%2520-%25203-smooth%2520Numbers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2ba55f46acc5af",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-324 A - Same\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    print('Yes' if len(set(a)) == 1 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2ba55f46acc5af",
          "publishedOn": "2023-11-01T07:44:08.000Z",
          "wordCount": 294,
          "title": "［AtCoder］ABC-324｜A - Same",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6aJCBGgy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-324%25EF%25BD%259CA%2520-%2520Same%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6aJCBGgy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-324%25EF%25BD%259CA%2520-%2520Same%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taka256/articles/c7213c359dd2cf",
          "author": "taka256",
          "description": "はじめに\nPydanticを使用することで、Pythonコードでのデータバリデーションとデータシリアライゼーションを簡単かつ効率的に行うことができます。\nこの記事では、Pydanticの基本的な使い方から、より高度なバリデーションとシリアライゼーションまで幅広く紹介します。また、簡易的なものですが他のバリデーションライブラリとの速度比較も行っています。\n!\nこの記事のコードはPython 3.11, Pydantic 2.4を使用しています。\n\n\n Pydanticとは\nPydanticは、Pythonのバリデーションライブラリです。以下のような特徴を持ちます。\n\n型アノテーションを...",
          "link": "https://zenn.dev/taka256/articles/c7213c359dd2cf",
          "publishedOn": "2023-11-01T06:22:02.000Z",
          "wordCount": 4965,
          "title": "Pydanticで始めるPythonのバリデーションとシリアライゼーション",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jn8GMpb9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pydantic%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BPython%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka256%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4OGU3OGJkYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jn8GMpb9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pydantic%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BPython%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka256%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4OGU3OGJkYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ncdc/articles/5163f37cd7e337",
          "author": "いばらき",
          "description": "Python + OpenCV + GStreamer で Amazon Kinesis Video Streams に動画配信します。\n\n はじめに\nAmazon Kinesis Video Streams　(以下KVS)は、AWSのストリーミング動画分析・再生のためのサービスです。\nKVSに動画を配信するには、C++かJavaのSDKを利用するか、GStreamerのプラグインを使用することになります。詳細は公式をご確認ください。\nhttps://aws.amazon.com/jp/kinesis/video-streams/features/?nc=sn&loc=2\n個人的...",
          "link": "https://zenn.dev/ncdc/articles/5163f37cd7e337",
          "publishedOn": "2023-11-01T02:01:00.000Z",
          "wordCount": 1656,
          "title": "Amazon Kinesis Video StreamsにPythonから動画を配信する (OpenCV+GStreamer)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A90KF0td--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Kinesis%2520Video%2520Streams%25E3%2581%25ABPython%25E3%2581%258B%25E3%2582%2589%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E9%2585%258D%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2520%2528OpenCV%252BGStr...%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A90KF0td--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Kinesis%2520Video%2520Streams%25E3%2581%25ABPython%25E3%2581%258B%25E3%2582%2589%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E9%2585%258D%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2520%2528OpenCV%252BGStr...%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/platina/articles/e6aa6e96373c09",
          "author": "Plat",
          "description": "Transformers の TextStreamer 機能を使ってストリーム生成を行います。また、Gradio の ChatInterface と組み合わせて快適にチャットするサンプルコードも紹介します。\n今回の環境\n\nPython 3.10.12\nTransformers 4.34.1\nGradio 3.50.2\n\n!\n今回使用する機能 (TextStreamer, TextIteratorStreamer) はまだ開発中であり、将来的に変更が入って動作しなくなる可能性があるためご注意ください。\n\n今回のコードを試せる Colab ノートブック:\nhttps://gist.githu...",
          "link": "https://zenn.dev/platina/articles/e6aa6e96373c09",
          "publishedOn": "2023-10-31T10:28:02.000Z",
          "wordCount": 1559,
          "title": "TransformersでLLMの出力をストリーム生成してQOL向上",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---tOzlog0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformers%25E3%2581%25A7LLM%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A0%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6QOL%25E5%2590%2591%25E4%25B8%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Plat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MWUzM2RiMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---tOzlog0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformers%25E3%2581%25A7LLM%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A0%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6QOL%25E5%2590%2591%25E4%25B8%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Plat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MWUzM2RiMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/imksoo/articles/f91bd0bce0e18f",
          "author": "きりの",
          "description": "LangChain を Python で使う | Hakky Handbook を見ながら LangChain を勉強し始めました。\nが、OpenAI前提で書かれていて、企業内でよく利用検討される Azure OpenAI で動かすとしたらどうするんだ？というところで試行錯誤していました。\nエージェントをチャットモデルと組合わせて使用する のサンプルプログラムを使って Azure OpenAI 上で動作させるにはどうすれば？を OpenAI with Web Browsing に壁打ちしてもらいながらやってみました。\n\n 書き換え前の Python スクリプト\nfrom langchai...",
          "link": "https://zenn.dev/imksoo/articles/f91bd0bce0e18f",
          "publishedOn": "2023-10-31T07:52:55.000Z",
          "wordCount": 1315,
          "title": "LangChain のプログラムを Azure OpenAI で動くように書き換える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wbxeXVDf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%2520Azure%2520OpenAI%2520%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%258A%25E3%2581%25AE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2ppZDk3WFBfT29yZjdGUjcwYnMxRmpOU0pnVHZTbXcwdTlwUTlNQW89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wbxeXVDf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%2520Azure%2520OpenAI%2520%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%258A%25E3%2581%25AE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2ppZDk3WFBfT29yZjdGUjcwYnMxRmpOU0pnVHZTbXcwdTlwUTlNQW89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yoshiyuki_kono/articles/63e731ab98ffca",
          "author": "Yoshiyuki Kono",
          "description": "はじめに\n\n 本稿の目的\n本稿は、LangChainという技術について関心を持った方へ向けて、できるだけ前提知識を想定せずに入門するための情報を提供する、という目的で書かれています。\n\n 主な対象読者\n本稿は、主な対象読者として、ビジネスアプリケーションに携わる開発者、アーキテクトを想定しています。そのため、テーマの学術的・理論的な側面よりも、実務的な側面（例えば、生成AIを活用したサービス開発からの観点）に比重を置いています。\n\n 本稿の構成\n本稿の構成は、以下の３ステップからなっています。\n\n生成AI活用アプリケーション概要\nベクトル検索\nLangChain入門\n\n\n 生成AI活...",
          "link": "https://zenn.dev/yoshiyuki_kono/articles/63e731ab98ffca",
          "publishedOn": "2023-10-31T07:19:00.000Z",
          "wordCount": 733,
          "title": "生成AIアプリ開発フレームワークLangChain入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4h5P8ayW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AFLangChain%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshiyuki%2520Kono%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Wk9qcElVUk9SRHJzczA0UEx2YTNMRVBpc0xPbkcxZVZGTUFmLUM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4h5P8ayW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AFLangChain%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshiyuki%2520Kono%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Wk9qcElVUk9SRHJzczA0UEx2YTNMRVBpc0xPbkcxZVZGTUFmLUM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9c34c2fde19277",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-323 B - Round-Robin Tournament\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    s = getStringRow(n)\n\n    entry = {}\n    for i in range(n):\n        entry[i + 1] = s[i].count('o') * 10...",
          "link": "https://zenn.dev/hyperdb/articles/9c34c2fde19277",
          "publishedOn": "2023-10-31T06:03:23.000Z",
          "wordCount": 439,
          "title": "［AtCoder］ABC-323｜B - Round-Robin Tournament",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WEafJKU1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-323%25EF%25BD%259CB%2520-%2520Round-Robin%2520Tournament%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WEafJKU1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-323%25EF%25BD%259CB%2520-%2520Round-Robin%2520Tournament%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6bb0d8d2903328",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-323 A - Weak Beats\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n    a = list(map(int, [s[x] for x in range(len(s)) if x % 2 == 1]))\n\n    print('Yes' if sum(a) == 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/6bb0d8d2903328",
          "publishedOn": "2023-10-31T06:03:23.000Z",
          "wordCount": 306,
          "title": "［AtCoder］ABC-323｜A - Weak Beats",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--03IMxem---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-323%25EF%25BD%259CA%2520-%2520Weak%2520Beats%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--03IMxem---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-323%25EF%25BD%259CA%2520-%2520Weak%2520Beats%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/totopironote/articles/d5e2754275ce6c",
          "author": "ととぴろnote",
          "description": "はじめに\n今回は、高次元主成分分析(高次元PCA)の1つである、ノイズ掃き出し法(noise-reduction methodology)を紹介します。\n高次元データにおいて従来の主成分分析には問題があることを説明しました。その問題を回避する一つの方法がノイズ掃き出し法です。名前の通り、ノイズの部分を推定して掃き出す方法となっています。\nn>dのPCAはこちらの記事をチェック。\nhttps://zenn.dev/totopironote/articles/aa17833ef00e5f\n高次元データについて知りたい方はこちらをチェック\nhttps://zenn.dev/totop...",
          "link": "https://zenn.dev/totopironote/articles/d5e2754275ce6c",
          "publishedOn": "2023-10-31T05:56:22.000Z",
          "wordCount": 1039,
          "title": "ノイズ掃き出し法-理論とPythonで実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v5m3jLt---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258E%25E3%2582%25A4%25E3%2582%25BA%25E6%258E%2583%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2597%25E6%25B3%2595-%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A8Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v5m3jLt---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258E%25E3%2582%25A4%25E3%2582%25BA%25E6%258E%2583%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2597%25E6%25B3%2595-%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A8Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ssfuno/articles/d999d2c2a83ad7",
          "author": "すふー",
          "description": "はじめに\n私はPython→Rubyの順に勉強し始めたのですが、インスタンス変数の表記の違いに戸惑ったことがあり、記事にしました。\nPythonではインスタンス変数をself.varのように書きますが、Rubyでは@varのように書くことができます。例えば下記は同じ内容のコードで、いずれも\"Hello, Taro!\"と出力されます。\n# Python\nclass User:\n    def __init__(self, name):\n        self.name = name\n\n    def hello(self):\n        print(f'Hello, {self....",
          "link": "https://zenn.dev/ssfuno/articles/d999d2c2a83ad7",
          "publishedOn": "2023-10-30T13:14:00.000Z",
          "wordCount": 796,
          "title": "PythonとRubyにおけるself.変数の違い",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GxGcX72k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8Ruby%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bself.%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GxGcX72k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8Ruby%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bself.%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/fbb42ca56b55d3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-322 B - Prefix and Suffix\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n, m = getIntMap()\n    s = getString()\n    t = getString()\n\n    f = 3\n    f -= (2 if t[:n] == s else 0)\n    f -= (1 if t[-1 * n:] == s els...",
          "link": "https://zenn.dev/hyperdb/articles/fbb42ca56b55d3",
          "publishedOn": "2023-10-30T05:14:37.000Z",
          "wordCount": 372,
          "title": "［AtCoder］ABC-322｜B - Prefix and Suffix",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ue28K-6z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-322%25EF%25BD%259CB%2520-%2520Prefix%2520and%2520Suffix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ue28K-6z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-322%25EF%25BD%259CB%2520-%2520Prefix%2520and%2520Suffix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/97b85fca6411f9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-322 A - First ABC 2\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = ' ' + getString()\n\n    print(s.find('ABC'))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/97b85fca6411f9",
          "publishedOn": "2023-10-30T05:14:37.000Z",
          "wordCount": 262,
          "title": "［AtCoder］ABC-322｜A - First ABC 2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ngVclkgj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-322%25EF%25BD%259CA%2520-%2520First%2520ABC%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ngVclkgj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-322%25EF%25BD%259CA%2520-%2520First%2520ABC%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takaha4k/articles/8aea3eea15b71c",
          "author": "takaha4k",
          "description": "{}で囲むと集合型（Set）になる。\n重複した値がすべてまとめられる。\na = {1,2,2,3,4,4,5,6}\n\nprint(a)\n{1,2,3,4,5,6} #重複値が削除されている\n集合型なので、集合の和・差の演算ができる\na = {1,2,2,3,4,4,5,6}\nb = {2,3,3,6,7}\n\nprint(a-b)\n{1,4,5}\n\nprint(b-a)\n{7}\nORやANDなども\na = {1,2,2,3,4,4,5,6}\nb = {2,3,3,6,7}\n\nprint(a & b)\n{2,3,6}\n\nprint(a | B)\n{1,2,3,4,5,6,7}\n\npr...",
          "link": "https://zenn.dev/takaha4k/articles/8aea3eea15b71c",
          "publishedOn": "2023-10-30T00:11:15.000Z",
          "wordCount": 504,
          "title": "Pythonの集合型Set",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_LwPchsm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Python%25E3%2581%25AE%25E9%259B%2586%25E5%2590%2588%25E5%259E%258BSet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3NTYwOTI4ZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_LwPchsm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Python%25E3%2581%25AE%25E9%259B%2586%25E5%2590%2588%25E5%259E%258BSet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3NTYwOTI4ZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kou_kawa/articles/08-first-mysql-fastapi",
          "author": "Kou",
          "description": "🎯目的\n\nまずはFastAPIとMySQLを使用した簡単なCRUD操作を試してみる\nFastAPIの基本的な機能と、データベースとの連携方法を理解する。\n\n\n 前回の内容\n今回はFastAPIのプロジェクト構築後からのものになります。\nhttps://zenn.dev/kou_kawa/articles/07-first-fastapi\n\n ✨SQLAlchemyとは\nPythonプログラミング言語のためのオープンソースのSQLツールキットおよびオブジェクト関係マッピングライブラリ（ORM）。MIT Licenseの下で公開されている。SQLAlchemyの主な哲学は、リレーショナル...",
          "link": "https://zenn.dev/kou_kawa/articles/08-first-mysql-fastapi",
          "publishedOn": "2023-10-29T15:42:36.000Z",
          "wordCount": 2812,
          "title": "FastAPIでMySQLのデータベースCRUD操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Pg0tSDGs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7MySQL%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9CRUD%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Pg0tSDGs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7MySQL%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9CRUD%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/06ca4079c842a7",
          "author": "sergicalsix",
          "description": "はじめに\npythonでメモリに悩まされたことはありませんか？MemoryErrorに苦しんだことはありませんか？\n今回はpythonのメモリを解放する方法を簡単に紹介します。\n\n ガベージコレクション&メモリの最適化\nimport gc \nimport ctypes\n\ngc.collect()\nlibc = ctypes.CDLL(\"libc.so.6\")\nlibc.malloc_trim(0)　#メモリアロケーションのための内部データ構造の最適化\nctypesは、pythonからC互換のデータ型およびC共有ライブラリを使って動的リンクするためのモジュールです。libc.s...",
          "link": "https://zenn.dev/sergicalsix/articles/06ca4079c842a7",
          "publishedOn": "2023-10-29T14:18:39.000Z",
          "wordCount": 200,
          "title": "Pythonメモリ問題の解決策: ガベージコレクションからプロセスの削除まで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ioh5bWUV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%253A%2520%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%258B%25E3%2582%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25AE%25E5%2589%258A%25E9%2599%25A4%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ioh5bWUV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%253A%2520%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%258B%25E3%2582%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25AE%25E5%2589%258A%25E9%2599%25A4%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/toratti/articles/f075e85dd230f5",
          "author": "とらっち",
          "description": "やったこと\nFlaskに挑戦しました．\nこの前まではDjangoに挑戦していたんですが小休止です．\nDjangoはUdemy見ながら何とか追いついていたのですが，Flaskは何となくネットにあるコードを加工して，ChatGPTにちょっと質問してという形で簡単に形になってしまいました．\nセキュリティ面などは考慮してないです\n検索量としてはhtmlについての部分が多いのですが…\nで，実際に何を作ったかというと，順伝播型ニューラルネットでの時系列予測アプリです．\n\n 使った環境とかバージョンとか\n・Macbook M1\n　※途中まで使ってたのですがTensorflow周りで動かず，cond...",
          "link": "https://zenn.dev/toratti/articles/f075e85dd230f5",
          "publishedOn": "2023-10-29T13:39:01.000Z",
          "wordCount": 572,
          "title": "Flaskに挑戦してなんちゃってAIWebアプリを作った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jH0T6ZL0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2583%25E3%2581%25A3%25E3%2581%25A6AIWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2589%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWE1ZTI0NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jH0T6ZL0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2583%25E3%2581%25A3%25E3%2581%25A6AIWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2589%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWE1ZTI0NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kthrlab_blog/articles/4e69b7d87a2538",
          "author": "Justin Wulf",
          "description": "本記事では、Librosa 0.10.1で利用することが出来る音響特徴量を紹介します。\nあくまでもライブラリの紹介なので、それぞれの関数の概要を紹介し、アルゴリズム等の詳細については追求しません。\n\n Librosaとは\n\nLibrosaは、Pythonの音響解析および信号処理のライブラリです。\n音響特徴量の抽出から、テンポ・ビート推定、和音推定、オーディオ編集、エフェクト処理、周波数への変換など、オーディオ処理なら何でも出来ちゃうライブラリです。\n\n 音響特徴量\n\n Chromagram\nクロマグラムです。周波数から12音階のパワーを算出し、時間軸ごとにどの音階が鳴っているかを表す2次...",
          "link": "https://zenn.dev/kthrlab_blog/articles/4e69b7d87a2538",
          "publishedOn": "2023-10-29T12:44:29.000Z",
          "wordCount": 3061,
          "title": "Librosaで扱える音響特徴量まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--q1vRBNa5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Librosa%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E9%259F%25B3%25E9%259F%25BF%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:Justin%2520Wulf%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YzlhYzUwNTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--q1vRBNa5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Librosa%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E9%259F%25B3%25E9%259F%25BF%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:Justin%2520Wulf%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YzlhYzUwNTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/jtwulf/articles/4e69b7d87a2538",
          "author": "Justin Wulf",
          "description": "本記事では、Librosa 0.10.1で利用することが出来る音響特徴量を紹介します。\nあくまでもライブラリの紹介なので、それぞれの関数の概要を紹介し、アルゴリズム等の詳細については追求しません。\n\n Librosaとは\n\nLibrosaは、Pythonの音響解析および信号処理のライブラリです。\n音響特徴量の抽出から、テンポ・ビート推定、和音推定、オーディオ編集、エフェクト処理、周波数への変換など、オーディオ処理なら何でも出来ちゃうライブラリです。\n\n 音響特徴量\n\n Chromagram\nクロマグラムです。周波数から12音階のパワーを算出し、時間軸ごとにどの音階が鳴っているかを表す2次...",
          "link": "https://zenn.dev/jtwulf/articles/4e69b7d87a2538",
          "publishedOn": "2023-10-29T12:44:29.000Z",
          "wordCount": 3053,
          "title": "Librosaで扱える音響特徴量まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rN1Kx--h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Librosa%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E9%259F%25B3%25E9%259F%25BF%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Justin%2520Wulf%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YzlhYzUwNTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rN1Kx--h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Librosa%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E9%259F%25B3%25E9%259F%25BF%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Justin%2520Wulf%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YzlhYzUwNTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nishijima13/articles/1f7dfa549a7db8",
          "author": "ニシジマ",
          "description": "以下のOpen3DのWeb visualizerを動かした結果の簡単な記事になります。\nhttp://www.open3d.org/docs/release/tutorial/visualization/web_visualizer.html\n\n 環境構築\n今回はOpen3DのVersion 0.17.0を使用しています。\npip install open3d==0.17.0\n\n ソースコード\n早速ですが、以下が今回のコードになります。\nOpen3Dが用意しているBunnyMeshを描画しています。\nimport open3d as o3d\n\n# WebRTCサーバーを有効化\no3d.v...",
          "link": "https://zenn.dev/nishijima13/articles/1f7dfa549a7db8",
          "publishedOn": "2023-10-29T06:15:46.000Z",
          "wordCount": 230,
          "title": "Open3DのWeb visualizerを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AzZs398c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Open3D%25E3%2581%25AEWeb%2520visualizer%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258B%25E3%2582%25B7%25E3%2582%25B8%25E3%2583%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1NWU4NDk4ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AzZs398c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Open3D%25E3%2581%25AEWeb%2520visualizer%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258B%25E3%2582%25B7%25E3%2582%25B8%25E3%2583%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1NWU4NDk4ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yukitezuka/articles/1985fc12052e5a",
          "author": "手塚裕貴",
          "description": "はじめに\n僕が住んでるマンションには、共用エントランスに、鍵をさして開くタイプのオートロックがついていて、これが結構面倒です。\nオートロックのイメージこんな感じ↓　自分の部屋番号を呼び出して部屋から解錠ボタンを押すか、エントランスに鍵をさすことで、開く感じです。\n\n図1: オートロックのイメージ図\n疲れて帰宅した中、毎回カバンの中から鍵を探したくないし、さらに、鍵を家に忘れてしまった場合は、近所さんがいないと開けてもらえないので、かなり困ります。(2、3回あった。)\nということで、RaspberryPiの勉強も兼ねて、LINEから「ただいま」と送れば「おかえり!」と返してくれて、マン...",
          "link": "https://zenn.dev/yukitezuka/articles/1985fc12052e5a",
          "publishedOn": "2023-10-29T02:59:53.000Z",
          "wordCount": 1717,
          "title": "LINEから「ただいま」と送れば、マンションのオートロックを開けてくれるシステムをRaspberryPiで作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FRgmPza6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LINE%25E3%2581%258B%25E3%2582%2589%25E3%2580%258C%25E3%2581%259F%25E3%2581%25A0%25E3%2581%2584%25E3%2581%25BE%25E3%2580%258D%25E3%2581%25A8%25E9%2580%2581%25E3%2582%258C%25E3%2581%25B0%25E3%2580%2581%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E9%2596%258B%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592RaspberryPi%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E5%25A1%259A%25E8%25A3%2595%25E8%25B2%25B4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkJhTUUwalNXVUJXOE5aU0hBM3pTTVdxbmZUbjRsZWQxMEdqVXkzQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FRgmPza6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LINE%25E3%2581%258B%25E3%2582%2589%25E3%2580%258C%25E3%2581%259F%25E3%2581%25A0%25E3%2581%2584%25E3%2581%25BE%25E3%2580%258D%25E3%2581%25A8%25E9%2580%2581%25E3%2582%258C%25E3%2581%25B0%25E3%2580%2581%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E9%2596%258B%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592RaspberryPi%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E5%25A1%259A%25E8%25A3%2595%25E8%25B2%25B4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkJhTUUwalNXVUJXOE5aU0hBM3pTTVdxbmZUbjRsZWQxMEdqVXkzQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ta2023/articles/1ed7061c9cdc45",
          "author": "ta",
          "description": "概要\n例えばEC2のパラメータを以下のようにyaml形式で作成したとする。\nwebサーバ:\n  概要:\n    インスタンス名: web-server-01\n    インスタンスID: 自動生成\n  OSイメージ:\n    AMI: ami-xxxxxxxxxxxx\n  高度なネットワーク設定:\n    ネットワークインターフェース1:\n      サブネット: web-server-subnet-1a\n      セキュリティグループ: web-server-secg-01\n      プライマリIP: 172.16.xx.xx\n～略～\n---\nappサーバ:\n  概要:\n    ...",
          "link": "https://zenn.dev/ta2023/articles/1ed7061c9cdc45",
          "publishedOn": "2023-10-29T02:12:41.000Z",
          "wordCount": 715,
          "title": "yaml形式のパラメータシートをExcelに変換するpythonスクリプト(ChatGPT製)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kB4V1124--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:yaml%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AE%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592Excel%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258Bpython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2528ChatGPT%25E8%25A3%25BD%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlN2Y5ZDU1NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kB4V1124--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:yaml%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AE%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592Excel%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258Bpython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2528ChatGPT%25E8%25A3%25BD%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlN2Y5ZDU1NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/firedingo/articles/4ed13eaca578a4",
          "author": "FireDingo",
          "description": "Atcoder Beginners contest 326 \"326-like-Numbers\"解説 In　Python\n今回は先日のコンテストで出題されたという\"326-like-numbers\"という問題をPythonで解説していきます。\n過去問として解いていくときの参考になれば幸いです。\n\n 問題\nAtcoderのAB問題を解く際にはまず問題を理解することが重要です。\nそのため僕なりに省略してみました。\n分かりにくかったら下のリンクから問題文を読んでください。\n\n\n326like numbersと呼ばれる整数がある\n326LikeNumberは必ず3桁(裏を返せば326like...",
          "link": "https://zenn.dev/firedingo/articles/4ed13eaca578a4",
          "publishedOn": "2023-10-29T02:06:10.000Z",
          "wordCount": 332,
          "title": "【ド文系でもわかる」ABC 326 \"326-like-Numbers\"",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cJnhtMPF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2589%25E6%2596%2587%25E7%25B3%25BB%25E3%2581%25A7%25E3%2582%2582%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E3%2580%258DABC%2520326%2520%2522326-like-Numbers%2522%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FireDingo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MHhSUGpqNTlMQXlvVWozOXR5Mk9EdUVXVFJPSXo5d2VtT05mY0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cJnhtMPF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2589%25E6%2596%2587%25E7%25B3%25BB%25E3%2581%25A7%25E3%2582%2582%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E3%2580%258DABC%2520326%2520%2522326-like-Numbers%2522%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FireDingo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MHhSUGpqNTlMQXlvVWozOXR5Mk9EdUVXVFJPSXo5d2VtT05mY0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/unokun/articles/8f4a6b99d00ef3",
          "author": "unokun",
          "description": "!\n実行環境\nM1 Pro MacBook Air\nmacOS Sonoma 14.0\nPython 3.11.2\npyenv 2.3.15-1\n\n\n 概要\nMojoがApple Silicon Macについに対応し、多くの人が試していると思います。\n\nこの記事は、mojoインストール時に、以下のエラーメッセージが出てしまったpyenvユーザー向けの記事です。\n注意) mojoのインストールは関連する部分のみ記載しています。\nException: Could not find libpython. Check your Python installation and ensure tha...",
          "link": "https://zenn.dev/unokun/articles/8f4a6b99d00ef3",
          "publishedOn": "2023-10-29T00:52:58.000Z",
          "wordCount": 364,
          "title": "install mojo with pyenv on Mac OS",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X55nYlX5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:install%2520mojo%2520with%2520pyenv%2520on%2520Mac%2520OS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unokun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pXLXpfay1BZkNtTjE4X0lMMUE1VE1WNzc4SzNsei1JajJsdmxGS0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X55nYlX5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:install%2520mojo%2520with%2520pyenv%2520on%2520Mac%2520OS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unokun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pXLXpfay1BZkNtTjE4X0lMMUE1VE1WNzc4SzNsei1JajJsdmxGS0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kazusa_nakagawa/articles/article10_instagram_api",
          "author": "なかがわ",
          "description": "はじめに\nInstagram Graph API で投稿を取得するスクリプトを Python で作成。\nInstagram Graph API を使う機会がある方の参考になれば幸いです。\n対応した時の API version は、v18.0 です。\nアクセストークンの取得については、他の記事がわかりやすく、今回は自身が残しておきたいポイントだけをまとめております。\n\n 事前準備\n\n アクセストークン生成\n他に参考にしていただいた記事がわかりやすく、今回は自身がつまったポイントだけをまとめております。\n\n\nビジネスアカウントを作成する必要がある\nInstagram, facebook ...",
          "link": "https://zenn.dev/kazusa_nakagawa/articles/article10_instagram_api",
          "publishedOn": "2023-10-28T17:14:35.000Z",
          "wordCount": 995,
          "title": "Instagram Graph API で投稿データを取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hzcM6GHM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Instagram%2520Graph%2520API%2520%25E3%2581%25A7%25E6%258A%2595%25E7%25A8%25BF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5YjZhYjk5NDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hzcM6GHM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Instagram%2520Graph%2520API%2520%25E3%2581%25A7%25E6%258A%2595%25E7%25A8%25BF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5YjZhYjk5NDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hutonman/articles/b4149cc2f616f3",
          "author": "Hutonman",
          "description": "概要\n半導体に用いられている、半加算器・全加算器の仕組みを理解する\n\n 前提知識\n\n 論理演算\n小学校で図のような直列回路と並列回路の勉強をしましたね。\n\n電球をそれぞれA, Bとすると、それぞれのON/OFFによって回路全体のON/OFFはどうなるでしょうか？\n\n 直列回路\n直列回路の場合、それぞれの電球の状態と回路全体の状態は以下のようになりますね。\n\n\n\nA\nB\n回路全体\n\n\n\n\n○\n○\n○\n\n\n○\n×\n×\n\n\n×\n○\n×\n\n\n×\n×\n×\n\n\n\nこれは何を表しているかと言うと、プログラミングでいうところのAND(A AND B)ですね。\nつまり、直列回路とはANDの論理演算をす...",
          "link": "https://zenn.dev/hutonman/articles/b4149cc2f616f3",
          "publishedOn": "2023-10-28T15:57:38.000Z",
          "wordCount": 1146,
          "title": "足し算に＋演算子は必要ない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jmKm6Ix1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B6%25B3%25E3%2581%2597%25E7%25AE%2597%25E3%2581%25AB%25EF%25BC%258B%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25AF%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hutonman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2lMMmtyU1N6ZFZzeldyRFlFTlFYZ0hRQWV5NVVhZVZndE9WLTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jmKm6Ix1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B6%25B3%25E3%2581%2597%25E7%25AE%2597%25E3%2581%25AB%25EF%25BC%258B%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25AF%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hutonman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2lMMmtyU1N6ZFZzeldyRFlFTlFYZ0hRQWV5NVVhZVZndE9WLTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/peg/articles/e76976a50a6bff",
          "author": "ぺい",
          "description": "以下のを使うようになった。\n\nmypy: static type checking\nblack: formatter\nisort: import formatter\n\npackage managerはpoetryで。\n\nmypy: https://github.com/python/mypy\n\nblack: https://hesma2.hatenablog.com/entry/2021/01/18/080000",
          "link": "https://zenn.dev/peg/articles/e76976a50a6bff",
          "publishedOn": "2023-10-28T15:07:54.000Z",
          "wordCount": 87,
          "title": "pythonのlinter周り",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MGc-Rlnn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:python%25E3%2581%25AElinter%25E5%2591%25A8%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1NjhkZjQ4NzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MGc-Rlnn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:python%25E3%2581%25AElinter%25E5%2591%25A8%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1NjhkZjQ4NzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/local/articles/e2e6de3959e96d",
          "author": "Catfish",
          "description": "LightGBM: callback覚書\n久々にLightGBMをアップデートしたらtrainの引数が変わって既存のコードが動かなくなっていたので移行手順を覚書。\n\n 1. early_stopping_rounds -> lgb.early_stopping()\n\nearly_stopping_roundsはtrainの引数からlgb.early_stopping()コールバックになってました。\n\n Before\nlgb.train(\n    params,\n    train_set,\n    valid_sets=[train_set, valid_set],\n    v...",
          "link": "https://zenn.dev/local/articles/e2e6de3959e96d",
          "publishedOn": "2023-10-28T11:26:49.000Z",
          "wordCount": 693,
          "title": "LightGBMのtrain関数の引数からコールバックへの移行",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HJETZrWz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LightGBM%25E3%2581%25AEtrain%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25B8%25E3%2581%25AE%25E7%25A7%25BB%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Catfish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzOGQ5MDdiN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HJETZrWz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LightGBM%25E3%2581%25AEtrain%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25B8%25E3%2581%25AE%25E7%25A7%25BB%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Catfish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzOGQ5MDdiN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mistletoe/articles/4a69c46e2c6127",
          "author": "もっくま(Mistletoe)",
          "description": "概要\nしょーがないなぁの◯太くんは…\nということで、以下を参考に、ChatGPTにゲームを作ってもらいます！\nhttps://twitter.com/dr_cintas/status/1712179990144426442\n\n 作ったもの\n左右から迫ってくる敵を炎で討滅します。\nhttps://www.youtube.com/watch?v=cyrphpX4YJQ\n出来上がったもののリポジトリもあるので、動かすこともできます！\nhttps://github.com/theMistletoe/ShootingGameByChatGPT\n\n どのように作ったか\nChatGPTのGPT-4...",
          "link": "https://zenn.dev/mistletoe/articles/4a69c46e2c6127",
          "publishedOn": "2023-10-28T09:52:26.000Z",
          "wordCount": 1801,
          "title": "こんなゲームを作ってよ〜ChatGPTえも〜ん！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a-J2hlD6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AA%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2588%25E3%2580%259CChatGPT%25E3%2581%2588%25E3%2582%2582%25E3%2580%259C%25E3%2582%2593%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%258F%25E3%2581%25BE%2528Mistletoe%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZDczMmVkYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a-J2hlD6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AA%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2588%25E3%2580%259CChatGPT%25E3%2581%2588%25E3%2582%2582%25E3%2580%259C%25E3%2582%2593%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%258F%25E3%2581%25BE%2528Mistletoe%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZDczMmVkYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/makiart/articles/049ebb9f692704",
          "author": "makiart",
          "description": "こんにちは！makiartです！\n私は少し前に与えられたPDFデータをもとに、AI（LLM）がラジオ番組を作成してくれるサービスを公開しました！！\n\n⬆️このポストのツリーにクーポン貼っているので興味のある方はチェックしてみてください！\nそして今回はそのサービスのコア部分である生成AIを利用して、ラジオを作成する部分の実装について紹介したいと思っております！\n公開したサービスはこちら！10円でラジオを作成できますー！\n興味のある方はぜひお試しください！\nhttps://radio-generator.makiart.dev/\n\n 今回作成したAIラジオ生成の仕組みや基礎\nこの記事で生成し...",
          "link": "https://zenn.dev/makiart/articles/049ebb9f692704",
          "publishedOn": "2023-10-28T09:30:00.000Z",
          "wordCount": 1558,
          "title": "PDFの情報を元にAIがラジオを作成する仕組みを作ってみた👀",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1z8ezWut--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PDF%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%2585%2583%25E3%2581%25ABAI%25E3%2581%258C%25E3%2583%25A9%25E3%2582%25B8%25E3%2582%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makiart%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkMjk3Yzg4MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1z8ezWut--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PDF%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%2585%2583%25E3%2581%25ABAI%25E3%2581%258C%25E3%2583%25A9%25E3%2582%25B8%25E3%2582%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makiart%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkMjk3Yzg4MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/zawa_kyo/articles/e0870541b2cae4",
          "author": "kyo",
          "description": "べき乗演算にハマる\nあるバグを調査する中でハマってしまった記録です。\nそのバグとは「アプリ画面のある数値がNaNとして表示されてしまう」というものです。\n表示部分の処理からJavaScriptのコードを追いかけていくと、次のような関数（イメージ）に遭遇しました。\nfunction calc (value) {\n    return (1.23 + 0.123 * value ** 0.123 + 0.123 * value ** 1.23) * 1.23\n}\nある物理量を別の物理量に変換して戻す関数です。1.23などはフィッティングパラメータなので適当な数値をイメージしてください。非...",
          "link": "https://zenn.dev/zawa_kyo/articles/e0870541b2cae4",
          "publishedOn": "2023-10-28T03:52:08.000Z",
          "wordCount": 1748,
          "title": "JavaScriptなどのべき乗演算はNaNが戻ることがある",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sSmHXX2s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AE%25E3%2581%25B9%25E3%2581%258D%25E4%25B9%2597%25E6%25BC%2594%25E7%25AE%2597%25E3%2581%25AFNaN%25E3%2581%258C%25E6%2588%25BB%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pibmNvb0hwU2hfa0lJYUxzcjFLblpHUE5OZ09Ob2RnQUpqM1FfPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sSmHXX2s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AE%25E3%2581%25B9%25E3%2581%258D%25E4%25B9%2597%25E6%25BC%2594%25E7%25AE%2597%25E3%2581%25AFNaN%25E3%2581%258C%25E6%2588%25BB%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pibmNvb0hwU2hfa0lJYUxzcjFLblpHUE5OZ09Ob2RnQUpqM1FfPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/jonchon_u/articles/0039d69deafacf",
          "author": "jonchon",
          "description": "!\npoint : rstrip() をつかう\n\n\n\nchar = 'abcdef   '\nnew_char = char.rstrip() # 空文字の削除\nprint(new_char) # abcdef",
          "link": "https://zenn.dev/jonchon_u/articles/0039d69deafacf",
          "publishedOn": "2023-10-28T01:03:16.000Z",
          "wordCount": 122,
          "title": "空文字の削除",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mc9Vf0n6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A9%25BA%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E5%2589%258A%25E9%2599%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jonchon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlYzc0MjBlNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mc9Vf0n6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A9%25BA%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E5%2589%258A%25E9%2599%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jonchon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlYzc0MjBlNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yhsi/articles/cc10928e8b9902",
          "author": "yg_siro",
          "description": "Pythonのスライスのインデックスがわかりづらいので実例でまとめてみる。\nスライスの構文は配列[始点:終点:ステップ]で始点から終点の範囲でステップに指定した間隔で配列の一部を取り出すことができます。\nステップは省略することができ、省略した場合1が入ります。\n\n今後、始点を赤色、終点を青色とします\nスライスの始点と終点のインデックスは文字と文字の間を0,1,2...と数えています。\nインデックスは負の値も指定ができ、負の値を指定した場合は後ろから-1,-2,-3...となります。\n\nwordという変数に文字列\"Python\"を入れたものとしてこの後説明します。\n>>>...",
          "link": "https://zenn.dev/yhsi/articles/cc10928e8b9902",
          "publishedOn": "2023-10-28T00:41:28.000Z",
          "wordCount": 307,
          "title": "Pythonのスライスについて調べた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LewAagY8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yg_siro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmZDY4ZDI5ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LewAagY8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yg_siro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmZDY4ZDI5ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/olemi/articles/225e9cacd8083f",
          "author": "オレミ_微経験エンジニア",
          "description": "はじめに\nアーキテクチャ図は、システムの全体像を視覚的に理解するための強力なツールです。\nPythonのモジュールで楽にアーキテクチャ図を作れないかという邪な考えで\nDiagramsというモジュールを知り、あわよくばChatGPTに８割コードを書いてもらえないか\nそんな感じでやっていきます。\n今回はせっかくなので、通常のアーキテクチャ図だと面白みがないので\nマスクド・アナライズさんのバズった絵を再現したいなと思います。\n\n\n DiagramsとGraphvizのインストール及び環境変数設定\n\n\nDiagramsのインストール:\npip install diagrams\n\nDiagra...",
          "link": "https://zenn.dev/olemi/articles/225e9cacd8083f",
          "publishedOn": "2023-10-27T13:00:58.000Z",
          "wordCount": 2366,
          "title": "Diagramsでいらすとやの画像を使ってアーキテクチャ図を書いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GW-XqY4r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Diagrams%25E3%2581%25A7%25E3%2581%2584%25E3%2582%2589%25E3%2581%2599%25E3%2581%25A8%25E3%2582%2584%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E5%259B%25B3%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25AC%25E3%2583%259F_%25E5%25BE%25AE%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYWRmYWYzMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GW-XqY4r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Diagrams%25E3%2581%25A7%25E3%2581%2584%25E3%2582%2589%25E3%2581%2599%25E3%2581%25A8%25E3%2582%2584%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E5%259B%25B3%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25AC%25E3%2583%259F_%25E5%25BE%25AE%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYWRmYWYzMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/aoyagi816/articles/27fb11d7c2957f",
          "author": "Aoyagi",
          "description": "import matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nfrom math import sqrt\nimport numpy as np\nfrom scipy.stats import ks_2samp\nimport scipy.stats as stats\nfrom scipy.stats import rankdata, norm\nfrom scipy.stats import chi2_contingency\n\ndef plot_single_propensity_score_with_ov...",
          "link": "https://zenn.dev/aoyagi816/articles/27fb11d7c2957f",
          "publishedOn": "2023-10-27T08:24:25.000Z",
          "wordCount": 5637,
          "title": "PSM",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--by9uRxwm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:PSM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Aoyagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1NjFhMmZjZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--by9uRxwm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:PSM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Aoyagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1NjFhMmZjZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9568f4b8e6e0e6",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-313 C - Approximate Equalization 2\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    if n == 1:\n        print(0)\n    else:\n        a.sort()\n\n        dv, md = divmod(s...",
          "link": "https://zenn.dev/hyperdb/articles/9568f4b8e6e0e6",
          "publishedOn": "2023-10-27T07:36:50.000Z",
          "wordCount": 478,
          "title": "［AtCoder］ABC-313｜C - Approximate Equalization 2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LoD57dmn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-313%25EF%25BD%259CC%2520-%2520Approximate%2520Equalization%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LoD57dmn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-313%25EF%25BD%259CC%2520-%2520Approximate%2520Equalization%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/aiq_dev/articles/5894ca1749a403",
          "author": "まさぴょん",
          "description": "こんにちは、AIQ株式会社のフロントエンドエンジニアのまさぴょんです！\n今回は、たまにPythonを触る人のためのPythonの基本文法まとめ・チートシートを作成したので、そのご紹介です。\n\n 標準出力\nprint('Hellow World') # Hellow World\n\n 変数\nhello = 'Hellow World'\n\n# 変数に再代入\nhello = 'Hellow AIQ'\n\n 基本的なデータ型の種類と型定義\n\n str型：文字列\n# 1. str型：文字列\nstring: str = 'ロボ玉'\n\nprint(string) # ロボ玉\nprint(type(stri...",
          "link": "https://zenn.dev/aiq_dev/articles/5894ca1749a403",
          "publishedOn": "2023-10-27T01:35:06.000Z",
          "wordCount": 4898,
          "title": "【随時更新】たまにPythonを触る人のためのPythonの基本文法まとめ・チートシート",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1jIzV4WV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E3%2580%2591%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25ABPython%25E3%2582%2592%25E8%25A7%25A6%25E3%2582%258B%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%2596%2587%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2583%25BB%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AIQ%2520Tech%2520Blog%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MzZmYTU3YzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZWDhyNWVCOGNkZmExeVRBNmhEMWF4bkFpYnJRUXpCd01EbXhIdVFRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1jIzV4WV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E3%2580%2591%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25ABPython%25E3%2582%2592%25E8%25A7%25A6%25E3%2582%258B%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%2596%2587%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2583%25BB%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AIQ%2520Tech%2520Blog%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MzZmYTU3YzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZWDhyNWVCOGNkZmExeVRBNmhEMWF4bkFpYnJRUXpCd01EbXhIdVFRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ogawa3427/articles/785b83f3c56a8a",
          "author": "小川/Ogawa3427",
          "description": "Seleniumを始めたのですが、複数環境で使うので環境構築メモを残します。\n\n 「豪勢」とは何か\nWSLのUbuntuにはPythonが付属していますが、バージョンの上げ方などが複雑で大変そうだったので今後の拡張性も考えてpyenvとvenvを入れて力技で解決してしまおう！ということです。\n\n 環境\nWSL2 1.2.5.0\nUbuntu-20.04(インストール直後)\nPython3.11.6\n\n まずPython本体を3.11.6にする\nいつもの\n\nbash\nsudo apt update  \nsudo apt -y upgrade  \n\npyenvをcloneしてきて隠しフォルダ...",
          "link": "https://zenn.dev/ogawa3427/articles/785b83f3c56a8a",
          "publishedOn": "2023-10-26T16:59:11.000Z",
          "wordCount": 374,
          "title": "WSL上のUbuntuでPythonとSelenium(Chrome)を豪勢に環境構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SPv62iLx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E4%25B8%258A%25E3%2581%25AEUbuntu%25E3%2581%25A7Python%25E3%2581%25A8Selenium%2528Chrome%2529%25E3%2582%2592%25E8%25B1%25AA%25E5%258B%25A2%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%25B7%259D%252FOgawa3427%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiNjM3MTBjN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SPv62iLx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E4%25B8%258A%25E3%2581%25AEUbuntu%25E3%2581%25A7Python%25E3%2581%25A8Selenium%2528Chrome%2529%25E3%2582%2592%25E8%25B1%25AA%25E5%258B%25A2%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%25B7%259D%252FOgawa3427%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiNjM3MTBjN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6d5e5b969842d7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-312 C - Invisible Hand\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef check(a, b, p):\n    sellers = len([x for x in a if x <= p])\n    buyers = len([x for x in b if x >= p])\n    return sellers ...",
          "link": "https://zenn.dev/hyperdb/articles/6d5e5b969842d7",
          "publishedOn": "2023-10-26T10:06:25.000Z",
          "wordCount": 648,
          "title": "［AtCoder］ABC-312｜C - Invisible Hand",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aWx8VopS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-312%25EF%25BD%259CC%2520-%2520Invisible%2520Hand%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aWx8VopS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-312%25EF%25BD%259CC%2520-%2520Invisible%2520Hand%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/argi_berri/articles/feb2489d646847",
          "author": "ARGIA",
          "description": "前文\n\n 注意\n\nこれはメモである。正確性を保証しない。\n\n\n 環境とライブラリの前提\n\n環境：WSL + mamba\nライブラリ：scikit-learn, lightgbm, seaborn\n\nLightGBM は scikit-learn API から呼び出す。\n\n\n 本編\n\n モデルの準備と予想\n(X_train, y_train)と (X_test, y_test) はそれぞれ学習と検証に用いる説明変数と目的変数のデータセットである。その他の詳細は割愛する。\nimport lightgbm as lgb\n\nmodel = lgb.LGBMClassifier(...)\nmo...",
          "link": "https://zenn.dev/argi_berri/articles/feb2489d646847",
          "publishedOn": "2023-10-26T06:42:23.000Z",
          "wordCount": 545,
          "title": "LightGBM (scikit-learn API) で ROC 曲線を描く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rBi_4PnI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LightGBM%2520%2528scikit-learn%2520API%2529%2520%25E3%2581%25A7%2520ROC%2520%25E6%259B%25B2%25E7%25B7%259A%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ARGIA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhYWQwM2NmMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rBi_4PnI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LightGBM%2520%2528scikit-learn%2520API%2529%2520%25E3%2581%25A7%2520ROC%2520%25E6%259B%25B2%25E7%25B7%259A%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ARGIA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhYWQwM2NmMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shytaani/articles/863d3f83f40095",
          "author": "Toru.T",
          "description": "Linterとは\nLinterは、ソースコードを解析して、潜在的なバグの検出や、規定されたルール[1]に沿ってコードが書かれているかをチェックする静的解析ツールの1つです。\n\n Formatterとは\nFormatterは、コードのスタイルをチェックし、規定されたルール[1:1]に基づいてコードを整形するツールです。\n\n Linter、Formatterを利用するメリット\n1. コードの品質向上\nLinterは、潜在的なバグや不適切なコーディングスタイルを検出し、それらを修正することでコードの品質を向上させます。\n2. 一貫性のあるコーディングスタイル\nFormatterは、一貫性の...",
          "link": "https://zenn.dev/shytaani/articles/863d3f83f40095",
          "publishedOn": "2023-10-26T05:47:20.000Z",
          "wordCount": 625,
          "title": "【社内勉強会③】Linter, Formatterについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qmnBlUW9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A4%25BE%25E5%2586%2585%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%25E2%2591%25A2%25E3%2580%2591Linter%252C%2520Formatter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru.T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1FiejZORHAwb08wbTdxWS05dUFJZGlfYVIyVlJUbHdGb1A3ODRieGJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qmnBlUW9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A4%25BE%25E5%2586%2585%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%25E2%2591%25A2%25E3%2580%2591Linter%252C%2520Formatter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru.T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1FiejZORHAwb08wbTdxWS05dUFJZGlfYVIyVlJUbHdGb1A3ODRieGJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/merosu_radio/articles/2da39a25f91f05",
          "author": "merosu_radio",
          "description": "はじめに\n例えば製造業では、顧客要求物性を達成するための条件チューニング、あるいはプラント製造条件をチューニングする機会が数多くあるかと思います。\nその際に、往々にして物性Aの値が良化すると物性Bの値が悪化するケースが存在するかと思います。\nその際に使える機械学習の手法として、Optunaによる多目的最適化があります。\n本記事ではOptunaによる多目的最適化を実験に組み込むためのサンプルコードを紹介します。\n\n\n 実装\n\n サンプルデータの作成\n\n\n サンプルデータの分布確認\nまずは、今回使用するサンプルデータを作成します。\n物性値の硬度と靭性を以下のように定式化します。\n実際はこ...",
          "link": "https://zenn.dev/merosu_radio/articles/2da39a25f91f05",
          "publishedOn": "2023-10-26T02:42:56.000Z",
          "wordCount": 1109,
          "title": "Optunaによる多目的最適化を実験に組み込む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--72aChdXK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Optuna%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%259A%25E7%259B%25AE%25E7%259A%2584%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%2592%25E5%25AE%259F%25E9%25A8%2593%25E3%2581%25AB%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:merosu_radio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMGU2MGFkYzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--72aChdXK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Optuna%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%259A%25E7%259B%25AE%25E7%259A%2584%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%2592%25E5%25AE%259F%25E9%25A8%2593%25E3%2581%25AB%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:merosu_radio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMGU2MGFkYzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/recommend_books3",
          "author": "Torachi0401",
          "description": "#　独学におすすめのIT書籍\n皆さんこんにちわ！今回はおすすめのIT書籍を紹介します。\n少しでも皆さんのお役に立てればと思います！\n\n 改訂新版JavaScript本格入門 ～モダンスタイルによる基礎から現場での応用まで\n\n\n評価:3/5点\nおすすめポイント:JavaScriptの基本的な文法が丁寧に解説\nマイナスポイント:実践的な応用テクニックの解説が不足\n総評:JavaScriptの基礎文法を学ぶ入門書として適していますが、実際のサイト制作に必要な応用力はつきにくいのが難点です。\n\n 実践マイクロサービスAPI\n\n\n評価:4/5点\n理解・利用・保守が容易なAPIで、堅牢なマイクロサー...",
          "link": "https://zenn.dev/torachi0401/articles/recommend_books3",
          "publishedOn": "2023-10-25T15:58:23.000Z",
          "wordCount": 205,
          "title": "独学におすすめのIT書籍 その3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qEP8kat9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AEIT%25E6%259B%25B8%25E7%25B1%258D%2520%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qEP8kat9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AEIT%25E6%259B%25B8%25E7%25B1%258D%2520%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/rchiji/articles/cf8e8fc1980334",
          "author": "Ryota Chijimatsu",
          "description": "前回、Cellpose GUIの使用方法やカスタムモデルの作成方法を紹介した。\nhttps://zenn.dev/rchiji/articles/92690f26968e9b#インストール\nしかし、Cellpose GUIではバッチ処理ができないため、せっかく汎用性のあるモデルができても他の画像に処理を繰り返すことができない。\n本記事では、Pythonのコマンド処理でCellposeモデルを複数画像に適応する例を紹介する。\n処理には前回作成したcellpose仮想環境を使用する。Anaconda Promptから仮想環境を立ち上げておく。\nconda activate cellpose\n...",
          "link": "https://zenn.dev/rchiji/articles/cf8e8fc1980334",
          "publishedOn": "2023-10-25T15:27:06.000Z",
          "wordCount": 2715,
          "title": "【画像解析】Cellposeで顕微鏡写真から細胞をセグメンテーション2 - バッチ処理 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FvJ_3gmG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2594%25BB%25E5%2583%258F%25E8%25A7%25A3%25E6%259E%2590%25E3%2580%2591Cellpose%25E3%2581%25A7%25E9%25A1%2595%25E5%25BE%25AE%25E9%258F%25A1%25E5%2586%2599%25E7%259C%259F%25E3%2581%258B%25E3%2582%2589%25E7%25B4%25B0%25E8%2583%259E%25E3%2582%2592%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B32%2520-%2520%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E5%2587%25A6%25E7%2590%2586%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryota%2520Chijimatsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEs0b2Q4RWI5ZkNSWmhqZlh4NUFwXzlUaEZncXprSmJDTE1RTXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FvJ_3gmG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2594%25BB%25E5%2583%258F%25E8%25A7%25A3%25E6%259E%2590%25E3%2580%2591Cellpose%25E3%2581%25A7%25E9%25A1%2595%25E5%25BE%25AE%25E9%258F%25A1%25E5%2586%2599%25E7%259C%259F%25E3%2581%258B%25E3%2582%2589%25E7%25B4%25B0%25E8%2583%259E%25E3%2582%2592%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B32%2520-%2520%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E5%2587%25A6%25E7%2590%2586%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryota%2520Chijimatsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEs0b2Q4RWI5ZkNSWmhqZlh4NUFwXzlUaEZncXprSmJDTE1RTXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/5ef09fee341c57",
          "author": "たきろぐ",
          "description": "グラフデータを深層学習で扱うアプローチとして、Graph Neural Networks (GNNs) がよく利用されています。論文などで提案されている数式をプログラムとして実装するためには、pytorch-geometric や deep graph library (dgl) などが利用されます。\n前回（大昔）の記事はこちらです。\nhttps://zenn.dev/takilog/articles/e54a45d6f7266229e367\n最近、いくつかのgithub上のレポジトリを読んでいたら、pytorch-geometricを使っている例を確認しました。\nこの記事では、GCN ...",
          "link": "https://zenn.dev/takilog/articles/5ef09fee341c57",
          "publishedOn": "2023-10-25T14:12:14.000Z",
          "wordCount": 2055,
          "title": "Graph Convolutional Networks で使われている計算の最小動作例 (PyTorch Geometric編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ef91sy29--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Graph%2520Convolutional%2520Networks%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E6%259C%2580%25E5%25B0%258F%25E5%258B%2595%25E4%25BD%259C%25E4%25BE%258B%2520%2528PyTorch%2520Geo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ef91sy29--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Graph%2520Convolutional%2520Networks%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E6%259C%2580%25E5%25B0%258F%25E5%258B%2595%25E4%25BD%259C%25E4%25BE%258B%2520%2528PyTorch%2520Geo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kou_kawa/articles/07-first-fastapi",
          "author": "Kou",
          "description": "🎯目的\n新たなWebアプリ開発の技術選定を行う中で、FastAPIを試用した。そのプロセスとFastAPIの特徴を初めて構築する過程で記録する。\n\n FastAPIとは？\nFastAPIは、Python 3.6+で書かれたモダンで高速なPythonのWebフレームワーク。非同期処理を強力にサポートしており、高速なAPIの開発に最適化されている。\n\n 主な特徴:\n\n\n速度: FastAPIは、Pythonで利用可能な最速のフレームワークの一つ。非同期処理により、I/O待ち時間が大幅に削減される。\n\n簡易性と柔軟性: 依存性注入、セキュリティ、認証などの機能を備えた使いやすい構文を提供す...",
          "link": "https://zenn.dev/kou_kawa/articles/07-first-fastapi",
          "publishedOn": "2023-10-25T13:48:12.000Z",
          "wordCount": 446,
          "title": "FastAPI始めました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sewQr1vb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sewQr1vb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/daishin/articles/c43d96cca6a411",
          "author": "川上大心",
          "description": "機能\nウェブページで撮影か画像ファイルのアップロードができます。\n\nサーバーで200、俳句が返ってきます。\n\nアラートで表示。大成功！\n\n\n 動き\n画像分析でキーワードを抜き出し、日本語に翻訳。\nGPT4のAPIで俳句を生成。\n・この時プロンプトが大事で、日本語に翻訳したものがカタカナだと俳句にならない、わかりやすい日本語にここで修正させる。\n表示。\n\n コード\nウェブ側\n\nサーバ側\n※辞書が1,000行ありますお気を付けください。この下長いです。\n\n\n 注意点\n・辞書にない言葉が返ってくるとハチャメチャな俳句になる。\n・画像からキーワードをとってくるときの精度上げようと思うと学習が必要",
          "link": "https://zenn.dev/daishin/articles/c43d96cca6a411",
          "publishedOn": "2023-10-25T12:28:07.000Z",
          "wordCount": 130,
          "title": "画像俳句AI",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3Y9uDH9s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E7%2594%25BB%25E5%2583%258F%25E4%25BF%25B3%25E5%258F%25A5AI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B7%259D%25E4%25B8%258A%25E5%25A4%25A7%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZW5xWEY2WThmNm5heDJmTUZhT2p4ZFdjeno4dWVhVzVCR25xN1Fudz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3Y9uDH9s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E7%2594%25BB%25E5%2583%258F%25E4%25BF%25B3%25E5%258F%25A5AI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B7%259D%25E4%25B8%258A%25E5%25A4%25A7%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZW5xWEY2WThmNm5heDJmTUZhT2p4ZFdjeno4dWVhVzVCR25xN1Fudz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/meii/articles/04e3d202f038c5",
          "author": "mei",
          "description": "エラーの内容\nassert not shared.cmd_opts.disable_extension_access, \"extension access disabled because of command line flags\"\n\n 理由\n読めばわかるがextensionへのアクセスが制限されてる\n\n 解決方法\ncommandlineARGS\n--enable-insecure-extension-access\n通常の場合\n./webui.sh --enable-insecure-extension-access",
          "link": "https://zenn.dev/meii/articles/04e3d202f038c5",
          "publishedOn": "2023-10-24T14:55:54.000Z",
          "wordCount": 111,
          "title": "stable diffusion webui extensionエラーへの対処",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QopWK66F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:stable%2520diffusion%2520webui%2520extension%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjNlMDRkYzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QopWK66F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:stable%2520diffusion%2520webui%2520extension%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjNlMDRkYzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sassan/articles/4878e79272ed61",
          "author": "sassan",
          "description": "はじめに\n※2023/10/24:記事をQiitaからZennに移しました。\nPythonのprint()は数値でも文字列でも配列でも、どのような型の変数でも文字列にしてくれてすごく便利です。\n僕は競プロ(競技プログラミング)をやっているのですが、時間との闘いである競プロでは、このようなあらゆる変数表示が出来る関数はデバッグにとても重宝します。\nしかし、C++にはそのような関数はありません。特にC++は高速で競プロに向いている言語なので、C++にそのような関数がないのはとてももったいないです。\nだったら作ればいいじゃない、ということで、print()のC++バージョンを本気で作ってみ...",
          "link": "https://zenn.dev/sassan/articles/4878e79272ed61",
          "publishedOn": "2023-10-24T08:20:01.000Z",
          "wordCount": 2388,
          "title": "【GitHubスター100個突破】Pythonのprint()のC++版を本気で作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QZZHTPHF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GitHub%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC100%25E5%2580%258B%25E7%25AA%2581%25E7%25A0%25B4%25E3%2580%2591Python%25E3%2581%25AEprint%2528%2529%25E3%2581%25AEC%252B%252B%25E7%2589%2588%25E3%2582%2592%25E6%259C%25AC%25E6%25B0%2597%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sassan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyZTdmMWVkNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QZZHTPHF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GitHub%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC100%25E5%2580%258B%25E7%25AA%2581%25E7%25A0%25B4%25E3%2580%2591Python%25E3%2581%25AEprint%2528%2529%25E3%2581%25AEC%252B%252B%25E7%2589%2588%25E3%2582%2592%25E6%259C%25AC%25E6%25B0%2597%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sassan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyZTdmMWVkNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/momosuke/articles/whisper-streaming",
          "author": "momosuke | Ryosuke Hyakuta",
          "description": "OpenAI から Whisper とかいう化け物ASRモデルが出たかと思えば，C++で書かれたCore MLをサポートした whisper.cpp が出たかと思えば，とても高速化された faster-whisper 出てきました．\nhttps://github.com/openai/whisper\nhttps://github.com/ggerganov/whisper.cpp\nhttps://github.com/guillaumekln/faster-whisper\n3つのモデルの性能比較については，以下の記事がよくまとまっています．\nhttps://zenn.dev/piment...",
          "link": "https://zenn.dev/momosuke/articles/whisper-streaming",
          "publishedOn": "2023-10-24T08:17:33.000Z",
          "wordCount": 946,
          "title": "faster-whisper をリアルタイムストリーミング処理するプレプリントがあったのでColabで動かしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DrJTWEM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:faster-whisper%2520%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7Colab%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momosuke%2520%257C%2520Ryos...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ODc4NmI0NjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DrJTWEM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:faster-whisper%2520%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7Colab%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momosuke%2520%257C%2520Ryos...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ODc4NmI0NjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taniii_shio/articles/5af72f0918c7d8",
          "author": "Naoto Shioya",
          "description": "以下の理由で、ローカルPC（Windows）上にvenvでpythonの環境構築をしました。\n\nopenaiやlangchainなどのパッケージをcondaで管理するのが複雑だったため\nネットワークの関係でDockerが使用できないため\n\n詰まった箇所があったのでメモです。\n\n 環境\n\nOS: windows11\npython: 3.10.11\n\n\n やりたいこと\n\npythonをローカルPC（windows）で実行\n\nバージョン管理ツール（asdfなど）やパッケージ管理ツール（conda, poetry）を使用しない\npipを使いたい\n\n\n\n\n 手順\n\n以下から、python3（任意の...",
          "link": "https://zenn.dev/taniii_shio/articles/5af72f0918c7d8",
          "publishedOn": "2023-10-24T07:53:21.000Z",
          "wordCount": 367,
          "title": "【Windows】ローカルPCにvenvでpythonの環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Oa-WJgg5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Windows%25E3%2580%2591%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25ABvenv%25E3%2581%25A7python%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Oa-WJgg5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Windows%25E3%2580%2591%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25ABvenv%25E3%2581%25A7python%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ziaensochan/articles/7b2c9c7cacc017",
          "author": "ziaenso_",
          "description": "読む前に\n!\nこの記事を書いた人はプログラミング初心者なので一部単語が間違えてたり\nコードに無駄があるかもしれません。万が一致命的なミスをしていた場合はご指摘ください;;\n\n\n fletとは\nfletはPythonでGUIを作るためのライブラリ？フレームワーク？です。(ここらへんよくわかんない)\nFletはFlutterをベースとしているため何を考えなくてもいい感じのUIになります。\nhttps://flet.dev/\n次のコードがfletの基本になります。\n\nhello.py\n#インポート\nimport flet as ft\n\n#ウィンドウ\ndef main(page: ft.Pa...",
          "link": "https://zenn.dev/ziaensochan/articles/7b2c9c7cacc017",
          "publishedOn": "2023-10-24T06:14:14.000Z",
          "wordCount": 609,
          "title": "Fletでエラーダイアログを実装する。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JX0z8dej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flet%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ziaenso_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYWFhNTlkYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JX0z8dej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flet%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ziaenso_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYWFhNTlkYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/40f3afa7efce22",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-311 C - Find it!\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = [x - 1 for x in getIntList()]\n\n    pt = 0\n    route = [pt]\n    reached = [0 for _ in range(n)]\n    reached[pt] = 1\n\n ...",
          "link": "https://zenn.dev/hyperdb/articles/40f3afa7efce22",
          "publishedOn": "2023-10-24T05:56:06.000Z",
          "wordCount": 525,
          "title": "［AtCoder］ABC-311｜C - Find it!",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cogGyi81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-311%25EF%25BD%259CC%2520-%2520Find%2520it%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cogGyi81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-311%25EF%25BD%259CC%2520-%2520Find%2520it%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nyazuki/articles/181c1d6269a7d1",
          "author": "azuki",
          "description": "はじめに\nGoogle Drive APIを利用してローカルのcsvファイルをアップロードする機能を作成しました。本記事ではその手順をまとめます。\n\n APIの有効化\nプロジェクトを作成し、Google Cloud コンソールから、Google Drive API を有効にしておきます。\n\n 資格情報の選択\nローカルからリクエストを送る際の認証方法を選択します。認証方法には、下の３つがあります。\n\n\n\n資格情報の種類\n説明\n\n\n\n\nAPIキー\n一般公開データに匿名でアクセスを提供し、認証不要\n\n\nOAuth クライアント ID\nリクエストを送信する際にブラウザを開いてユーザー認証\n\n...",
          "link": "https://zenn.dev/nyazuki/articles/181c1d6269a7d1",
          "publishedOn": "2023-10-24T05:53:33.000Z",
          "wordCount": 651,
          "title": "【Google Drive API】サービスアカウントキーを使用して、共有ドライブにファイルアップロード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PwJin362--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Google%2520Drive%2520API%25E3%2580%2591%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%25A2%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%2585%25B1%25E6%259C%2589%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:azuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxxN0VLTUo1MVZTQ3hnYkpubGhjclpCRFJLcG5sMldscWhjVnJ4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PwJin362--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Google%2520Drive%2520API%25E3%2580%2591%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%25A2%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%2585%25B1%25E6%259C%2589%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:azuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxxN0VLTUo1MVZTQ3hnYkpubGhjclpCRFJLcG5sMldscWhjVnJ4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/matcha22/articles/c76362469b986e",
          "author": "matcha",
          "description": "平成２７年度　問３　２分探索木の問題\nhttps://www.ipa.go.jp/shiken/mondai-kaiotu/2015h27.html\nclass Node:\n    def __init__(self, key):\n        self.key = key\n        self.left = None\n        self.right = None\n\ndef search(k, p):\n    if p is None:\n        return None\n    elif k == p.key:\n        return p\n    elif k...",
          "link": "https://zenn.dev/matcha22/articles/c76362469b986e",
          "publishedOn": "2023-10-24T03:12:24.000Z",
          "wordCount": 3182,
          "title": "応用情報技術者試験 午後問題過去問のアルゴリズムをpythonで書いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b3acEmav--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BF%259C%25E7%2594%25A8%25E6%2583%2585%25E5%25A0%25B1%25E6%258A%2580%25E8%25A1%2593%25E8%2580%2585%25E8%25A9%25A6%25E9%25A8%2593%2520%25E5%258D%2588%25E5%25BE%258C%25E5%2595%258F%25E9%25A1%258C%25E9%2581%258E%25E5%258E%25BB%25E5%2595%258F%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:matcha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwMjIzYmMwMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b3acEmav--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BF%259C%25E7%2594%25A8%25E6%2583%2585%25E5%25A0%25B1%25E6%258A%2580%25E8%25A1%2593%25E8%2580%2585%25E8%25A9%25A6%25E9%25A8%2593%2520%25E5%258D%2588%25E5%25BE%258C%25E5%2595%258F%25E9%25A1%258C%25E9%2581%258E%25E5%258E%25BB%25E5%2595%258F%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:matcha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwMjIzYmMwMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nogayama/articles/f2ef6325533411",
          "author": "野ヶ山 尊秀",
          "description": "見出し1\n\n 見出し2\n\n 見出し3\n本文\n\ny = x^2",
          "link": "https://zenn.dev/nogayama/articles/f2ef6325533411",
          "publishedOn": "2023-10-23T06:11:24.000Z",
          "wordCount": 79,
          "title": "テスト記事",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FsfkYZUx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2587%258E%25E3%2583%25B6%25E5%25B1%25B1%2520%25E5%25B0%258A%25E7%25A7%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hScExrSDBCOXpMcXdOVnluM3B5UEc1dFVXaEhmSTZuR3dSX21ZMWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FsfkYZUx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2587%258E%25E3%2583%25B6%25E5%25B1%25B1%2520%25E5%25B0%258A%25E7%25A7%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hScExrSDBCOXpMcXdOVnluM3B5UEc1dFVXaEhmSTZuR3dSX21ZMWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c676a032e6ec2c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-321 B - Cutoff\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, x = getIntMap()\n    a = getIntList()\n\n    high = max(a)\n    low = min(a)\n    goal = x - (sum(a) - high - low)\n\n    if goa...",
          "link": "https://zenn.dev/hyperdb/articles/c676a032e6ec2c",
          "publishedOn": "2023-10-23T05:12:08.000Z",
          "wordCount": 408,
          "title": "［AtCoder］ABC-321｜B - Cutoff",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--95li1db---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-321%25EF%25BD%259CB%2520-%2520Cutoff%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--95li1db---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-321%25EF%25BD%259CB%2520-%2520Cutoff%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b155fb3ddb2249",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-321 A - 321-like Checker\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    n = list(map(int, list(getString())))\n\n    r = True\n    if len(n) > 1:\n        c = [n[i - 1] - n[i] for i in range(1, len(n))]\n        if min(c) <= 0:\n            r = False\n\n    print('Yes'...",
          "link": "https://zenn.dev/hyperdb/articles/b155fb3ddb2249",
          "publishedOn": "2023-10-23T05:12:07.000Z",
          "wordCount": 364,
          "title": "［AtCoder］ABC-321｜A - 321-like Checker",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PU4wESWe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-321%25EF%25BD%259CA%2520-%2520321-like%2520Checker%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PU4wESWe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-321%25EF%25BD%259CA%2520-%2520321-like%2520Checker%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hissorimemo/articles/18c6fac4cd895b",
          "author": "kanade",
          "description": "やりたいことは、plugins ディレクトリに作ったファイルを自動的に import してプラグインとして呼び出すということです。世間一般にどうやってプラグインを実装してるのかわからなくて自分で作ってみました。プラグインの追加削除をファイルの有無で動的に行うことを目指しました。\nここでは基底クラスを Parent としています。プラグインは Parent を継承している必要があります。call_method() ですべてのプラグインが持つ同名のメソッドを呼び出します。もしプラグインが存在しなければ Parent の hello() メソッドを呼び出します。ただ、本来は親から各プラグインの...",
          "link": "https://zenn.dev/hissorimemo/articles/18c6fac4cd895b",
          "publishedOn": "2023-10-23T03:06:04.000Z",
          "wordCount": 823,
          "title": "Python で動的な plugin を実装したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4nuHAcX6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AA%2520plugin%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kanade%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeGVSNkx6SnpBbWJLdEZyNHRkVDNfR1NvQVhaeDNFRGNHY1pWNUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4nuHAcX6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AA%2520plugin%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kanade%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeGVSNkx6SnpBbWJLdEZyNHRkVDNfR1NvQVhaeDNFRGNHY1pWNUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/00/articles/run_mistral-7b_on_google_colab",
          "author": "koji",
          "description": "この記事はGoogle Colabの無料版T4での動作を確認しています。\nなので、requirementはGoogleアカウントになります\n\n Mistral-7Bとは\nhttps://mistral.ai/news/announcing-mistral-7b/\nGoogle Colabで動かすにはGGUFファイルを使用します。\nなので、requirementはGoogleアカウントになります。\nWhat is GGUF and GGML?\n\nGGUFとGGMLは、特にGPT（Generative Pre-trained Transformer）のような言語モデルの文脈で、推論用のモデル...",
          "link": "https://zenn.dev/00/articles/run_mistral-7b_on_google_colab",
          "publishedOn": "2023-10-23T01:55:31.000Z",
          "wordCount": 248,
          "title": "Mistral-7BをGoogleColabで試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d4j9-I0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mistral-7B%25E3%2582%2592GoogleColab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiODc3MTUwYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d4j9-I0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mistral-7B%25E3%2582%2592GoogleColab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiODc3MTUwYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/dozo/articles/846b756d64fdc7",
          "author": "dozo",
          "description": "SQLのLinterなんてあったのか\n!\n関連記事:\n\nファイルの修正個所、コミットの差分だけPHPCSを充てる方法\nWSLとJetbrains GatewayでPHPStormローカルリモート開発\nPHP SPLの標準Interfaceを真剣に考える\nassertEqualsを今すぐ捨て、assertSameを使うのです\nPHPUnitには @testdox を使え\n\n\nデータベースのデプロイする際、\nmigrationに任せたり、\nSQLを書いたりと各社環境はまちまちで、\n甲乙つけがたい状況。\nlintに関してmigrationであればその言語側に任せればいいが、\nSQLについて...",
          "link": "https://zenn.dev/dozo/articles/846b756d64fdc7",
          "publishedOn": "2023-10-23T00:48:00.000Z",
          "wordCount": 1171,
          "title": "SQLFluffでDocker越しにSQLのフォーマットチェック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Fx3BSGKZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLFluff%25E3%2581%25A7Docker%25E8%25B6%258A%25E3%2581%2597%25E3%2581%25ABSQL%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Fx3BSGKZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLFluff%25E3%2581%25A7Docker%25E8%25B6%258A%25E3%2581%2597%25E3%2581%25ABSQL%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yamada_quantum/articles/1da6331276aa7e",
          "author": "やまぐち",
          "description": "今回はVQEを量子計算ライブラリを使ってやってみたい。そんな気持ちが溢れたので、国産の量子計算ライブラリであるquri-partsを使ってVQEを実行してみようと思います。\nVQEの理解も、quri-partsの理解もまあまあ浅いので間違っている可能性があることご了承ください。\nではざっくりやっていきます！\n!\nイメージつけるために数式などを出していますが、あんまり自信ないのでご容赦ください。\n\n\n quri-partsについて\n皆さん、量子計算系のライブラリといえば、何を思い浮かべますか？\nqiskit？　Q#？　はたまたQulacsですか？\n私はquri-partsです。\nquri-...",
          "link": "https://zenn.dev/yamada_quantum/articles/1da6331276aa7e",
          "publishedOn": "2023-10-22T23:00:00.000Z",
          "wordCount": 1763,
          "title": "【初めて学ぶquri-parts】VQEしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--luZi4ux3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6quri-parts%25E3%2580%2591VQE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%2590%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4YTFkMDliZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--luZi4ux3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6quri-parts%25E3%2580%2591VQE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%2590%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4YTFkMDliZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kazu1/articles/9d0fad96eb7562",
          "author": "僕はエンジニア",
          "description": "記事の概要\nPythonのデータ構造は、異なる状況や要件に適応するための多様な特性を持っています。この記事では、Pythonで利用可能な主要なコレクション型とそれぞれの特性、そして適切な使用例を紹介します。\nまた複数の方法があるiteration(ループ文)についてもどれを選択すれば、どういう意図で書いたかを認識してもらいやすいかを紹介していこうと思います。\n自己文書化されたコードを目指して、コレクションとiterationの手段がどのような意図の表現になるかを知りましょうということですね。\n\n コレクションの選択による意図\nコレクションとそれに付随する意図を記載しています。\nこの意...",
          "link": "https://zenn.dev/kazu1/articles/9d0fad96eb7562",
          "publishedOn": "2023-10-22T15:46:58.000Z",
          "wordCount": 1309,
          "title": "【python】意図が伝わるコード(コレクション・イテレーション)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1xftzQd7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591%25E6%2584%258F%25E5%259B%25B3%25E3%2581%258C%25E4%25BC%259D%25E3%2582%258F%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2528%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2583%2595%25E3%2581%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTU4ZjUxZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1xftzQd7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591%25E6%2584%258F%25E5%259B%25B3%25E3%2581%258C%25E4%25BC%259D%25E3%2582%258F%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2528%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2583%2595%25E3%2581%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTU4ZjUxZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kk0515/articles/1eac914af99443",
          "author": "kk060515",
          "description": "from cryptography.fernet import Fernet\nimport base64\n\n# 暗号化されたデータをファイルに書き込む\ndef write_encrypted_data(filename, data, key):\n    cipher_suite = Fernet(key)\n    encrypted_data = cipher_suite.encrypt(data)\n    with open(filename, 'wb') as file:\n        file.write(encrypted_data)\n\n# ファイルからデータを読み取る\ndef...",
          "link": "https://zenn.dev/kk0515/articles/1eac914af99443",
          "publishedOn": "2023-10-22T12:44:08.000Z",
          "wordCount": 227,
          "title": "暗号化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3_6rxUvj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kk060515%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NWU5Yzg5MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3_6rxUvj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kk060515%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NWU5Yzg5MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kk0515/articles/7603d42a24f166",
          "author": "kk060515",
          "description": "from cryptography.fernet import Fernet\nimport base64\n\n# ファイルから暗号化されたデータを読み取る\ndef read_encrypted_data(filename):\n    with open(filename, 'rb') as file:\n        return file.read()\n\n# ユーザーから鍵を入力\ndef get_user_key():\n    user_key = input(\"Enter the encryption key used for decryption: \")\n    key = user...",
          "link": "https://zenn.dev/kk0515/articles/7603d42a24f166",
          "publishedOn": "2023-10-22T12:40:08.000Z",
          "wordCount": 251,
          "title": "復号",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VAulj4hv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:%25E5%25BE%25A9%25E5%258F%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kk060515%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NWU5Yzg5MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VAulj4hv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:%25E5%25BE%25A9%25E5%258F%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kk060515%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NWU5Yzg5MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/firedingo/articles/0e316b1a118858",
          "author": "FireDingo",
          "description": "Atcoder Beginners contest 321 \"CutOff\"解説 In　Python\n今回はついこないだ解いたCutOffという問題をPythonで解説していきます。\n過去問として解いていくときの参考になれば幸いです。\n\n 問題\n問題文にはいろんなことが書いてありますが、僕なりに要約するとこんな感じです。\n分かりにくかったら下のリンクから問題文を読んでください。\n\n\nNラウンド行われる試験がある\n各ラウンドには0-100のスコアが存在する\n総合的なスコアは最低値と最大値を除いたものになる\niラウンド目のスコアはAi\n**最終結果（総合的なスコア）をX点以上にするために...",
          "link": "https://zenn.dev/firedingo/articles/0e316b1a118858",
          "publishedOn": "2023-10-22T11:58:41.000Z",
          "wordCount": 431,
          "title": "Atcoder Beginners contest 321 \"CutOff\"解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3N0PJ1SN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Atcoder%2520Beginners%2520contest%2520321%2520%2522CutOff%2522%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FireDingo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MHhSUGpqNTlMQXlvVWozOXR5Mk9EdUVXVFJPSXo5d2VtT05mY0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3N0PJ1SN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Atcoder%2520Beginners%2520contest%2520321%2520%2522CutOff%2522%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FireDingo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MHhSUGpqNTlMQXlvVWozOXR5Mk9EdUVXVFJPSXo5d2VtT05mY0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/y_taiki/articles/sam_deploy_template",
          "author": "taiki",
          "description": "はじめに\n以前作成した記事【SAM】Lambda + API Gatewayの開発環境構築で構築した開発環境を、AWS上にデプロイしました。しかしrequirements.txtに書いているモジュールがインポートできず、Lambdaでエラーが発生していました。\n今回はそのエラーを解決します。\n\n ディレクトリ構成\n.\n|-- lambda_function.py\n|-- requirements.txt\n`-- template.yaml\n各ファイルの内容は以下です👇\n\nrequirements.txt\nslackweb\n\n\ntemplate.yaml\nTransform: AWS:...",
          "link": "https://zenn.dev/y_taiki/articles/sam_deploy_template",
          "publishedOn": "2023-10-22T09:24:44.000Z",
          "wordCount": 503,
          "title": "【SAM】Unable to import module を解決",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7KCiGLSi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SAM%25E3%2580%2591Unable%2520to%2520import%2520module%2520%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmlZZmE0SW5SS29Pbi0xdjBsdDQwR0Z2MHJZVXNFcDJDWDE4Znc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7KCiGLSi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SAM%25E3%2580%2591Unable%2520to%2520import%2520module%2520%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmlZZmE0SW5SS29Pbi0xdjBsdDQwR0Z2MHJZVXNFcDJDWDE4Znc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/olemi/articles/374c880b5ff3c2",
          "author": "オレミ_微経験エンジニア",
          "description": "はじめに\nせっかくRTX3070があって、Whisperは6GくらいGPUメモリがあれば動くと聞き、\nfaster-whisperがLarge_v2を使えてしかも処理速度が速いと聞いたのでやってみた\nC++は入っているので、CUDA周りの導入から始めました。\n※なんも考えずにPython走らせたらcuDNNが無いよエラーで気付かされました\n\n PC環境\n\ni5-12400F\nNVIDIA RTX3070（GPUメモリ8GB）\nメモリ DDR4 32GB\nPython 3.10\nWindows 11\n\n\n CUDA関連の導入\n!\nここが一番時間かかりました\n\n\n CUDA・cuDNNの...",
          "link": "https://zenn.dev/olemi/articles/374c880b5ff3c2",
          "publishedOn": "2023-10-22T09:10:04.000Z",
          "wordCount": 759,
          "title": "RTX3070でfaster-whisperを途中の環境構築からやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SJVqNh1Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RTX3070%25E3%2581%25A7faster-whisper%25E3%2582%2592%25E9%2580%2594%25E4%25B8%25AD%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%258B%25E3%2582%2589%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25AC%25E3%2583%259F_%25E5%25BE%25AE%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYWRmYWYzMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SJVqNh1Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RTX3070%25E3%2581%25A7faster-whisper%25E3%2582%2592%25E9%2580%2594%25E4%25B8%25AD%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%258B%25E3%2582%2589%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25AC%25E3%2583%259F_%25E5%25BE%25AE%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYWRmYWYzMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/caymankun/articles/678e0ac6bd8b24",
          "author": "caymankun",
          "description": "youtubeダウンローダーとは?\nyoutubeの動画をダウンロードするためのもの。\n\n 用意するもの\n\npythonサーバー(replit)\nphpサーバー(risupuレンタルサーバー)\n\n\n 仕組み\n\n\n コード\n\nindex.html\n<!DOCTYPE html>\n<html>\n<head>\n   <meta charset=\"UTF-8\" />\n   <meta http-equiv=\"content-language\" content=\"ja\" />\n   <title>MEDL</titl...",
          "link": "https://zenn.dev/caymankun/articles/678e0ac6bd8b24",
          "publishedOn": "2023-10-22T05:10:37.000Z",
          "wordCount": 1905,
          "title": "youtubeダウンローダー作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xf1ms_Ix--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:youtube%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:caymankun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczNTljNGZkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xf1ms_Ix--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:youtube%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:caymankun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczNTljNGZkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/totopironote/articles/aa17833ef00e5f",
          "author": "ととぴろnote",
          "description": "はじめに\n今回扱う主成分分析(Principal component analysis ; PCA)は、次元削減の有名な方法である。\npを次元数、nをデータ数とするとp \\le nの状況を扱う。\nはじめに理論を説明し、次にpythonで実装する。\n\n 主成分分析\n平均\\mu , 共分散行列\\Sigma をもつ母集団からn個のp次データベクトルx_j , j=1,…,nを無作為に抽出する。\n\n\\Sigma=H\\Lambda H^T = \\sum_{s=1}^p\\lambda_{(s)}h_{(s)}h_{(s)}^T\n\n\\Lambda=diag(\\lambda_{(1)},...,\\l...",
          "link": "https://zenn.dev/totopironote/articles/aa17833ef00e5f",
          "publishedOn": "2023-10-22T00:00:00.000Z",
          "wordCount": 1181,
          "title": "主成分分析(PCA)-理論とPythonで実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j_N2msv_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25BB%25E6%2588%2590%25E5%2588%2586%25E5%2588%2586%25E6%259E%2590%2528PCA%2529-%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A8Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j_N2msv_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25BB%25E6%2588%2590%25E5%2588%2586%25E5%2588%2586%25E6%259E%2590%2528PCA%2529-%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A8Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuma_memorandum/articles/98797dec048836",
          "author": "ゆうま",
          "description": "SQLAlchemyを使うテーブルの基本操作を下記にまとめます。\n接続するDBはAccessを使用しています。SQLserverなど別のDBを使う場合は接続部分のコードを変更して下さい。\n↓　AccessとSQLServerの接続方法を紹介\nhttps://zenn.dev/yuma_memorandum/articles/f2de7bbbc71a51\n\n DBとの接続(Accessファイル)\nfrom sqlalchemy import create_engine,MetaData\nfrom sqlalchemy.orm import declarative_base\n\nAccess_...",
          "link": "https://zenn.dev/yuma_memorandum/articles/98797dec048836",
          "publishedOn": "2023-10-21T23:49:39.000Z",
          "wordCount": 679,
          "title": "SQLAlchemy のCRUD(Create, Read, Update, Delete) 基本操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--K5v2Pzii--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%2520%25E3%2581%25AECRUD%2528Create%252C%2520Read%252C%2520Update%252C%2520Delete%2529%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2Nzg4YWVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--K5v2Pzii--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%2520%25E3%2581%25AECRUD%2528Create%252C%2520Read%252C%2520Update%252C%2520Delete%2529%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2Nzg4YWVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/koupro0204/articles/0a2efe19eaeda4",
          "author": "い。",
          "description": "目的\n\n markdownをHTML変換\nブログみたいなWEBアプリを開発する際にmarkdownで記事を書いてそれをHTMLに変換して表示という風にやりたい。\nやることは以下です。\n\nDBにcontentsにmarkdown形式で記事を保存\nmarkdownをHTMLに変換\n実際に表示\n\n1.の部分は本記事では触れません。\n\n 今回やること\nhttps://qiita.com/y-tsutsu/items/1424ce70171765d86316\n上記のQiitaの記事を参考にします。\nやることとしては以下になります。\n\nMarkdownからHTMLへの変換\nテンプレートで使うため...",
          "link": "https://zenn.dev/koupro0204/articles/0a2efe19eaeda4",
          "publishedOn": "2023-10-21T22:22:19.000Z",
          "wordCount": 2208,
          "title": "Djangoで使いたいからPythonでmarkdownをHTML変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yvqp-sL1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7markdown%25E3%2582%2592HTML%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yvqp-sL1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7markdown%25E3%2582%2592HTML%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/k10dayo/articles/e8c4043519cc3c",
          "author": "だよ",
          "description": "画像をリサイズする際、Rust使ったら速いんじゃないかと書いてみたら、Pythonのほうが速かった件。\nRustはimageクレートで cargo build --releaseしたもの\nPythonはPIL\n言語というより、使用するライブラリとクレートの比較になりますが、画像をリサイズして保存する速度だけを比較してます。\n自分は、Rust初心者なので参考程度に\n10枚リサイズ\n\n\n\n言語\n1回目\n2回目\n3回目\n平均\n\n\n\n\nRust\n2.91秒\n2.90秒\n2.76秒\n平均2.85秒\n\n\nPython\n0.49秒\n0.45秒\n0.48秒\n平均0.47秒\n\n\n\n50枚リサイズ\n\n\n...",
          "link": "https://zenn.dev/k10dayo/articles/e8c4043519cc3c",
          "publishedOn": "2023-10-21T14:16:19.000Z",
          "wordCount": 1325,
          "title": "RustとPythonの画像のリサイズ速度",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hnVLGSVL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A8Python%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E9%2580%259F%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A0%25E3%2582%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzNTY1MTNkZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hnVLGSVL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A8Python%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E9%2580%259F%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A0%25E3%2582%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzNTY1MTNkZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/harukii/articles/60296649d2af57",
          "author": "ホソノP",
          "description": "値動きの特徴\nimport pandas as pd\nimport MetaTrader5 as mt5\nfrom datetime import timedelta\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# MT5への接続\nmt5.initialize()\n\ndef fetch_and_prepare(symbol, timeframe, count, timezone_hours, ratio_calculation):\n    # データの取得\n    rates = mt5.copy_rates_from...",
          "link": "https://zenn.dev/harukii/articles/60296649d2af57",
          "publishedOn": "2023-10-21T06:00:24.000Z",
          "wordCount": 1959,
          "title": "PythonでFXのユロドルアノマリーを検証",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DtadAzf2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7FX%25E3%2581%25AE%25E3%2583%25A6%25E3%2583%25AD%25E3%2583%2589%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%258E%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DtadAzf2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7FX%25E3%2581%25AE%25E3%2583%25A6%25E3%2583%25AD%25E3%2583%2589%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%258E%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/apo_zenn/articles/fedaf3afd583e7",
          "author": "apo_zenn",
          "description": "環境導入\n仮想環境(venv)の中に導入していきます。\n\n shell\n$ py -3.8 -m venv venv # 仮想環境作成 (-3.8には任意のpythonバージョンを指定)\n$ .\\venv\\Scripts\\activate # 仮想環境をactivate\n$ cd venv # venv内に移動\n\n$ pip install Flask # Flaskインストール\n$ mkdir src # venv内に作業フォルダを作成\n$ cd src\n\n\n\n アプリケーションの作成(srcフォルダ内)\n\n hello.py\nfrom flask import Flask\n\nap...",
          "link": "https://zenn.dev/apo_zenn/articles/fedaf3afd583e7",
          "publishedOn": "2023-10-21T05:46:42.000Z",
          "wordCount": 251,
          "title": "Flask 環境導入",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0bjRttuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Flask%2520%25E7%2592%25B0%25E5%25A2%2583%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMWY3NGQ1ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0bjRttuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Flask%2520%25E7%2592%25B0%25E5%25A2%2583%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMWY3NGQ1ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/eldorado215/articles/628fa353319271",
          "author": "Hyon🇰🇷",
          "description": "はじめに\n今日は、ITスクールに通った66日目の日で、今日学んだ知識を記事にシェアしたいと思います。本記事が、ITを勉強を始めた方々にもロードマップになればいいと思います。\n今日は、昨日の続きで、PythonでJSONをParsingする実習を行い、\nOracle DBとアクセスする実習を行いました。\n\n JSON Parsing\nRest APIを使って、JSONのデーターをParsingしました。\n# -*- coding:utf-8 -*-\nfrom http.client import HTTPSConnection\nfrom urllib.parse import quot...",
          "link": "https://zenn.dev/eldorado215/articles/628fa353319271",
          "publishedOn": "2023-10-20T09:01:37.000Z",
          "wordCount": 928,
          "title": "【初心者向け/ITスクール 66日】Python JSONparsing/DB access",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I1qs7V82--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252066%25E6%2597%25A5%25E3%2580%2591Python%2520JSONparsing%252FDB%2520access%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I1qs7V82--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252066%25E6%2597%25A5%25E3%2580%2591Python%2520JSONparsing%252FDB%2520access%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/delacroix/articles/d91421d4e37617",
          "author": "taro-u",
          "description": "概要\n今回は犬の画像を用いて、犬の犬種を判別するAIアプリを作っていきたいと思います。\n実際僕は犬の犬種については全く詳しくないので、犬の画像や名前を言われてもいつもピンとこないので、犬の画像を入力すると犬種が返ってくるというアプリを作りたいと思います。\nとはいえ、いきなり全種類の犬種の判別はかなりハードルが高いので、まずは特徴が大きく異なる３種類の犬種の判別をできるアプリを作っていきたいと思います\n今回のエントリーナンバ-\nNo1. コーギー\n\nNo2. ドーベルマン\n\nNo3. パグ\n\nこの3種類の犬の犬種を判別するアプリを作っていきたいと思います！\n\n 目次\n今回の開発は大きく...",
          "link": "https://zenn.dev/delacroix/articles/d91421d4e37617",
          "publishedOn": "2023-10-20T08:00:45.000Z",
          "wordCount": 7231,
          "title": "犬の写真から犬種を判別するアプリを作成してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TgcG6ph1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25AC%25E3%2581%25AE%25E5%2586%2599%25E7%259C%259F%25E3%2581%258B%25E3%2582%2589%25E7%258A%25AC%25E7%25A8%25AE%25E3%2582%2592%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taro-u%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MDMxNDY3ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TgcG6ph1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25AC%25E3%2581%25AE%25E5%2586%2599%25E7%259C%259F%25E3%2581%258B%25E3%2582%2589%25E7%258A%25AC%25E7%25A8%25AE%25E3%2582%2592%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taro-u%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MDMxNDY3ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/satoshiakatsuka/articles/327405e7d7da35",
          "author": "sakats",
          "description": "はじめに\nみなさんは「マシンイプシロン」または「計算機イプシロン」を知ってますか？\n先日書いたコードでマシンイプシロンの概念を知って、浮動小少数点数の計算と少し仲良くなれました。\n個人的にとても勉強になったので記事にまとめてみます！\n\n 対象読者\n\nマシンイプシロンを知らない人\n浮動小数点型、その計算について学習したい人\n\n\n マシンイプシロンの定義\nまずはマシンイプシロンの定義です。Wikipediaの引用です。\n\n計算機イプシロン（けいさんきイプシロン、英: machine epsilon）は、浮動小数点数において、「1より大きい最小の数」と1との差のことである。\n\nPython...",
          "link": "https://zenn.dev/satoshiakatsuka/articles/327405e7d7da35",
          "publishedOn": "2023-10-20T03:29:22.000Z",
          "wordCount": 545,
          "title": "君は「マシンイプシロン」を知っているか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EbD3s_NU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%259B%25E3%2581%25AF%25E3%2580%258C%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25AD%25E3%2583%25B3%25E3%2580%258D%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sakats%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkODUwYTAwM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EbD3s_NU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%259B%25E3%2581%25AF%25E3%2580%258C%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25AD%25E3%2583%25B3%25E3%2580%258D%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sakats%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkODUwYTAwM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/spacemarket/articles/bf0abfc8bb4305",
          "author": "miotava",
          "description": "Pythonの高速なスーパーセットとされているMojoがApple Silicon Macについに対応したので、早速インストールしてMojo入門してみました。\nhttps://www.modular.com/blog/mojo-is-now-available-on-mac\n※ 記事作成日の前日（2023年10月19日）に公開されました。\n!\n本記事の検証環境は以下の通りです。\nM1 Pro MacBook Pro\nmacOS Sonoma 14.0\nPython 3.11.3\n\n\n インストール手順\n\n 0. ModularにSign up\nhttps://developer.modu...",
          "link": "https://zenn.dev/spacemarket/articles/bf0abfc8bb4305",
          "publishedOn": "2023-10-20T02:56:57.000Z",
          "wordCount": 1320,
          "title": "MojoがApple Silicon Macに対応したので早速試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8EI0fyvQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mojo%25E3%2581%258CApple%2520Silicon%2520Mac%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2597%25A9%25E9%2580%259F%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:miotava%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5YjE3ZGU0ZTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8EI0fyvQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mojo%25E3%2581%258CApple%2520Silicon%2520Mac%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2597%25A9%25E9%2580%259F%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:miotava%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5YjE3ZGU0ZTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuma_memorandum/articles/f2de7bbbc71a51",
          "author": "ゆうま",
          "description": "Pandasを使ったデータベースとの接続\nこのページでは python でDBを扱う方法を紹介します。\n今回はsqlAlchemyを使ってpandasのdataframeにDBの値を格納する方法を紹介します。\n\n 使用するライブラリ\n\n pandas\npython上でExcelのような表形式のデータを簡単に高速で扱うことが可能なライブラリです。\nDBから吸い出したデータを加工するのに便利です。\n公式ドキュメント：http://pandas.pydata.org/pandas-docs/stable/\n\n sqlAlchemy\npandasでは直接DBと接続して読み込むことができる関数...",
          "link": "https://zenn.dev/yuma_memorandum/articles/f2de7bbbc71a51",
          "publishedOn": "2023-10-19T21:59:18.000Z",
          "wordCount": 833,
          "title": "Pandasを使ったデータベースとの接続",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--17LVsoxC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25A8%25E3%2581%25AE%25E6%258E%25A5%25E7%25B6%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2Nzg4YWVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--17LVsoxC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25A8%25E3%2581%25AE%25E6%258E%25A5%25E7%25B6%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2Nzg4YWVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/spacegeek/articles/45270323b1d2bc",
          "author": "space geek",
          "description": "PythonでGoogle Drive APIを使ってGoogle Driveにアクセスすることをしてみたので、その手順をつらつらと書いてみます。\nまた、基本的には公式ガイド通りなので何か困ったことがありましたら、こちらを確認してもらえたら情報は正確かと思います。\nhttps://developers.google.com/drive/api/quickstart/python?hl=ja\n\n この記事の想定読書\n\nPythonでGoogle Drive APIを使ってGoogle Driveの操作をしたいけど、何をどうすれば良いのかわからない方\n\n\n Google Cloud\n\n Go...",
          "link": "https://zenn.dev/spacegeek/articles/45270323b1d2bc",
          "publishedOn": "2023-10-19T15:02:41.000Z",
          "wordCount": 1362,
          "title": "PythonでGoogle Drive APIを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OAGfoth1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Google%2520Drive%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:space%2520geek%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkMGRmMzFjZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OAGfoth1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Google%2520Drive%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:space%2520geek%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkMGRmMzFjZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mayuge/articles/0cee0eb2609d7a",
          "author": "まゆげ",
          "description": "対象読者\n\nPythonが好きな人．\nCLIツールに興味がある人.\n\n\n ツールの詳細\n\nツール名: 🐰 rabbit-todo 🐰\n制作者: Mayuge 1名\nリポジトリ: rabbit-todo\n\n\n\n ツールを作った背景と, 自分の現在の状況\n僕はTodoをまとめるために, GithubのIssueを使っていました.\nしかし, 個人開発の僕には使わない機能が多い.\nなんなら, ブラウザに行くのも面倒.\nそんな感じでした.\nGithub以外に自分のプロジェクトのTodoをまとめられるツールを探していたのですが,\n基本的に出回っているツールは個人開発者向けではなく(当たり前),\n...",
          "link": "https://zenn.dev/mayuge/articles/0cee0eb2609d7a",
          "publishedOn": "2023-10-19T11:14:48.000Z",
          "wordCount": 1075,
          "title": "CLI-Todo-ToolをPythonで作る (rabbit-todo) # 1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tl3YoZti--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CLI-Todo-Tool%25E3%2582%2592Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2520%2528rabbit-todo%2529%2520%2523%25201%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%2586%25E3%2581%2592%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUFGYmd3SzBNT24tc0hnSVpEdFZYRURqc3hfYXQzVEdPSTJUX2h0QVY1LXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tl3YoZti--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CLI-Todo-Tool%25E3%2582%2592Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2520%2528rabbit-todo%2529%2520%2523%25201%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%2586%25E3%2581%2592%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUFGYmd3SzBNT24tc0hnSVpEdFZYRURqc3hfYXQzVEdPSTJUX2h0QVY1LXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/eldorado215/articles/b07f79fc714a9e",
          "author": "Hyon🇰🇷",
          "description": "はじめに\n今日は、ITスクールに通った65日目の日で、今日学んだ知識を記事にシェアしたいと思います。本記事が、ITを勉強を始めた方々にもロードマップになればいいと思います。\n今日は、昨日の続きで、PythonのOOPを勉強し、JAVAとの違いも勉強しました。\n最後にxml parsingも実習してみましたが、簡単で楽でした。\n\n Pythonのimport方法\n\n import package.module\nimport animal.pet  \n\nd = animal.pet.Dog(\"dog1\",7) \nd.printInfo()      \n\n import package.m...",
          "link": "https://zenn.dev/eldorado215/articles/b07f79fc714a9e",
          "publishedOn": "2023-10-19T08:34:44.000Z",
          "wordCount": 2897,
          "title": "【初心者向け/ITスクール 65日】Pythonの基礎一覧3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0zOSMsOA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252065%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E4%25B8%2580%25E8%25A6%25A73%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0zOSMsOA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252065%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E4%25B8%2580%25E8%25A6%25A73%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tonio_26/articles/03998b42a4e800",
          "author": "tonio_26",
          "description": "今回はVSCode上でPyTorchのインストールする方法について解説します。\n後半では、私がインストール時に躓いた点とその解決策を紹介します。\n\n はじめに\nPyTorchはオープンソースの機械学習ライブラリであり、特にニューラルネットワークの設計やトレーニング、評価を行う際に利用されます。\nこれから解説する方法はmac(M2)環境下におけるVSCode上でpipによるインストールを行う方法を取り扱います。\n公式サイトによるダウンロードの一連の流れはこちら\nhttps://pytorch.org/get-started/locally/\n\n インストール方法\n\n\nPyTorch公式サイ...",
          "link": "https://zenn.dev/tonio_26/articles/03998b42a4e800",
          "publishedOn": "2023-10-19T08:25:44.000Z",
          "wordCount": 353,
          "title": "Python-PyTorch初心者が躓くポイント",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GQmpWNe2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python-PyTorch%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E8%25BA%2593%25E3%2581%258F%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonio_26%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GQmpWNe2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python-PyTorch%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E8%25BA%2593%25E3%2581%258F%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonio_26%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kawamottyan/articles/86fe1695d84bd8",
          "author": "kawamottyan",
          "description": "概要\n地方競馬における3連服5頭ボックスに最適化した競馬予測モデルを作成し、予測しやすいレース傾向を可視化する。\nデータ\n\n\n地方競馬DATAの有料データ\n\nnetkeibaのスクレイピングデータ\n\nLightGBM\n予測したいデータは上位3頭と少ないので、偏ったデータをサンプリングしやすいブースティングモデルを使用する。\n検証方法\n2010年から2019年のデータを5-Fold交差検証を行う。\n評価指標\n2020年から2022年のデータにおいて、下記の平均を算出する。\n\n回収率(ランキング予想上位5頭に対して3頭の組み合わせ全10通りを100円ずつ買ったと仮定して、それに対する払い戻し...",
          "link": "https://zenn.dev/kawamottyan/articles/86fe1695d84bd8",
          "publishedOn": "2023-10-19T07:09:10.000Z",
          "wordCount": 427,
          "title": "競馬予測モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fnb5oJEo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E9%25A6%25AC%25E4%25BA%2588%25E6%25B8%25AC%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kawamottyan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1AycFE5VW9INnQ1N09DNDBTSjV1Wms5Nzg4RUV6SWM4RDNpWkc4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fnb5oJEo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E9%25A6%25AC%25E4%25BA%2588%25E6%25B8%25AC%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kawamottyan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1AycFE5VW9INnQ1N09DNDBTSjV1Wms5Nzg4RUV6SWM4RDNpWkc4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mesummery/articles/27b993c83d056b",
          "author": "Na",
          "description": "はじめに\nこの記事では、3日間でテック記事のAI要約・翻訳メディアをつくる個人開発で利用した\n\nOpenAI API\nLangChain\n\nの具体的な実装と利用コストについて触れていきます。\nOpenAI APIとLangChainとは...\n\n OpenAI API\nOpenAI APIは、OpenAIという人工知能の研究・開発・普及を目的とした団体が提供するAPIです。このAPI は、自然言語とコードの理解または生成を必要とするタスクに利用することができます。\n\n LangChain\nOpenAIが提供するGPT-3のような大規模言語モデル（Large Language Mode...",
          "link": "https://zenn.dev/mesummery/articles/27b993c83d056b",
          "publishedOn": "2023-10-19T03:00:00.000Z",
          "wordCount": 3547,
          "title": "OpenAI APIとLangChainを用いた記事の翻訳・要約メディアのつくり方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c0-rO-xX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520API%25E3%2581%25A8LangChain%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%25BB%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Na%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNDAxOGU2NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c0-rO-xX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520API%25E3%2581%25A8LangChain%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%25BB%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Na%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNDAxOGU2NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taniii_shio/articles/b75315740b14dd",
          "author": "Naoto Shioya",
          "description": "環境\n\nOS: windows11, WSL(Ubuntu 22.04.2 LTS)\nバージョン管理: asdf v0.13.1\n仮想環境、パッケージ管理: poetry version 1.1.14\n\n\n 手順\n\n asdfでpythonをインストール\n\nWSL上のubuntuで依存関係をインストール\n\nsudo apt update; sudo apt install build-essential libssl-dev zlib1g-dev \\\nlibbz2-dev libreadline-dev libsqlite3-dev curl \\\nlibncursesw5-dev x...",
          "link": "https://zenn.dev/taniii_shio/articles/b75315740b14dd",
          "publishedOn": "2023-10-19T02:00:39.000Z",
          "wordCount": 212,
          "title": "asdf, python環境構築手順メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UkBp2Etp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:asdf%252C%2520python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UkBp2Etp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:asdf%252C%2520python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/chari/articles/aws_lambda_powertools_chalice_setup",
          "author": "wtkmn",
          "description": "内容について\n\n 扱うもの\nAWS Lambda Powertoolsの以下の設定方法\n\nLogger\nTracer\n\n\n 扱わないもの\n\nLoggerやTracerの使い方そのもの\nAWS Lambda Powertools の上記以外の機能 (Parser, Metrics, etc ...)\n\n\n 背景\nChalice は、Pythonを利用してAWS上に簡単にServerlessなAPIを構築するためのフレームワークです。\n書き心地は Flask に近く、API Gatewayだけでなく、SQS/S3等のevent triggerにも対応しており、ポリシーも一定自動で設定して...",
          "link": "https://zenn.dev/chari/articles/aws_lambda_powertools_chalice_setup",
          "publishedOn": "2023-10-18T17:07:58.000Z",
          "wordCount": 1378,
          "title": "ChaliceにAWS Lambda Powertoolsを組み込む方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7NweXQXn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chalice%25E3%2581%25ABAWS%2520Lambda%2520Powertools%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wtkmn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjU1MTllOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7NweXQXn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chalice%25E3%2581%25ABAWS%2520Lambda%2520Powertools%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wtkmn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjU1MTllOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nari007/articles/232c1b4d9bdb10",
          "author": "Nari",
          "description": "はじめに\nMicorsoftが公開しているAutoGenを簡単に試してみました。\nAutoGenとは ※翻訳文\n相互に対話してタスクを解決できる複数のエージェントを使用したLLMアプリケーションの開発を可能にするフレームワークです。AutoGenエージェントはカスタマイズ可能で会話可能で、人間の参加をシームレスに許可します。これらは、LLM、人間による入力、およびツールの組み合わせを使用するさまざまなモードで動作できます。\nとのことです。\n詳細は下記ページをチェックしてみてください。\nhttps://github.com/microsoft/autogen\n\n 参考ドキュメント\n公式...",
          "link": "https://zenn.dev/nari007/articles/232c1b4d9bdb10",
          "publishedOn": "2023-10-18T15:55:45.000Z",
          "wordCount": 431,
          "title": "AutoGenを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---jL_iC2g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:AutoGen%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODhiYWFmNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---jL_iC2g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:AutoGen%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODhiYWFmNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/dencyu/articles/7c018ae166e278",
          "author": "でんちゅー",
          "description": "記事を書いた背景\n企業内で業務自動化システムを作成するときに、Microsoft Teams(以下、Teams)やMicrosoft SharePoint(以下、SharePoint)，Microsoft OneDriveに対する処理を自動化したいというニーズは意外と存在する。\n単純にTeamsに通知したい程度のユースケースであればpymsteams等のライブラリの利用だけで完結するが、TeamsやSharePoint，OneDrive等にPythonからファイルを自動アップロードしたい等のユースケースにおいてはMicrosoft Graph APIの利用が必要になってくるため、ハー...",
          "link": "https://zenn.dev/dencyu/articles/7c018ae166e278",
          "publishedOn": "2023-10-18T15:21:59.000Z",
          "wordCount": 2217,
          "title": "PythonからSharePointにファイルアップロードしたいッッ！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WIozvexD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589SharePoint%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2583%2583%25E3%2583%2583%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A7%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2585%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzc4NjQ0NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WIozvexD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589SharePoint%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2583%2583%25E3%2583%2583%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A7%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2585%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzc4NjQ0NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kazu_gor/articles/4371c47459be79",
          "author": "kazu-gor",
          "description": "結論\nAggバックエンドを使用する\nMatplotlibには、グラフィカルディスプレイが不要なAggバックエンドというものがあるらしく、このバックエンドを使用すると、エラーを回避できた。\nimport matplotlib\nmatplotlib.use('Agg')\n\n きっかけ\n下記エラーが出た。\nSSH経由でUbuntuに接続しており、Displayを接続していないために起こったと思う。\nTraceback (most recent call last):\n  File \"./XXXXXXXXXXXXX.py\", line 472, in <module>\n    f...",
          "link": "https://zenn.dev/kazu_gor/articles/4371c47459be79",
          "publishedOn": "2023-10-18T15:00:00.000Z",
          "wordCount": 318,
          "title": "Matplotlibで作成したグラフをDisplayに表示しないようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B17kCDBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Matplotlib%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592Display%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazu-gor%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3Nzg2MjgyMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B17kCDBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Matplotlib%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592Display%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazu-gor%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3Nzg2MjgyMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/eldorado215/articles/23f11590587e59",
          "author": "Hyon🇰🇷",
          "description": "はじめに\n今日は、ITスクールに通った64日目の日で、今日学んだ知識を記事にシェアしたいと思います。本記事が、ITを勉強を始めた方々にもロードマップになればいいと思います。\n今日は、昨日の続きで、Pythonの文法を勉強し、直接活用する練習をしました。\n\n Javaとの違い\n\n\nNone : javaのnull\n\nself : thisと同じ約わりですが、省略が不可能！\n\nメソッド、関数のOverloadが不可\nDestructor: PythonもヒープメモリはGCが管理しますが、オブジェクトがメモリから離れる前に、Destrcutorがcall backされます。\n\ndef __...",
          "link": "https://zenn.dev/eldorado215/articles/23f11590587e59",
          "publishedOn": "2023-10-18T09:55:05.000Z",
          "wordCount": 1953,
          "title": "【初心者向け/ITスクール 64日】Pythonの基礎一覧２(関数) および(Number Baseball)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QYhKe6mP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252064%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E4%25B8%2580%25E8%25A6%25A7%25EF%25BC%2592%2528%25E9%2596%25A2%25E6%2595%25B0%2529%2520%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%2528Number%2520Baseball%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QYhKe6mP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252064%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E4%25B8%2580%25E8%25A6%25A7%25EF%25BC%2592%2528%25E9%2596%25A2%25E6%2595%25B0%2529%2520%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%2528Number%2520Baseball%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/crandim_r_and_d/articles/231018_package_extendable_python_app_packaging",
          "author": "tokoi",
          "description": "何が嬉しいのか/やりたいこと\n要件1. 実行中にパッケージを追加できるようなPythonアプリ実行環境を作りたい。\n要件2. Pythonインストーラは使いたく無い。\n※要件1は、PyInstallerでは対応するのが難しそう。\n\n 必要なもの\n\n Python埋め込み可能パッケージ, get-pip.pyを準備\n\n\nPythonパッケージ配布サイトの「embeddable package」と表記されているものを取得して、pythonディレクトリに解凍\n\npython/python{バージョン番号}._pth の最終行(# import...)の#を削除して有効化\n\nhttps://...",
          "link": "https://zenn.dev/crandim_r_and_d/articles/231018_package_extendable_python_app_packaging",
          "publishedOn": "2023-10-18T01:50:19.000Z",
          "wordCount": 305,
          "title": "実行中にパッケージ追加可能なPythonアプリパッケージング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7yFA2APH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E8%25A1%258C%25E4%25B8%25AD%25E3%2581%25AB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E8%25BF%25BD%25E5%258A%25A0%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAPython%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25A0R%2526D%25E9%2583%25A8%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:tokoi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5Y2NiZGRkODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7yFA2APH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E8%25A1%258C%25E4%25B8%25AD%25E3%2581%25AB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E8%25BF%25BD%25E5%258A%25A0%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAPython%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25A0R%2526D%25E9%2583%25A8%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:tokoi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5Y2NiZGRkODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/pe/books/3bee96e7c89ece",
          "author": "ぺ",
          "description": "本記事は「ゼロから作る Deep Learning」の勉強記録としてまとめたものである。本記事中のコードは書籍中の github のURLから参照していただきたい。",
          "link": "https://zenn.dev/pe/books/3bee96e7c89ece",
          "publishedOn": "2023-10-18T00:53:54.000Z",
          "wordCount": 88,
          "title": "「ゼロから作る Deep Learning」 をまとめてみた",
          "imageUrl": "https://static.zenn.studio/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/pe/articles/ea8a02f5968437",
          "author": "ぺ",
          "description": "はじめに\n本記事は筆者が「効果検証入門」をメイン言語である Python を用いて書籍中の例の一部を実践した記録である。また、各検証において用いられている検証手法に関連する事柄について短くまとめた。Python のコードは https://github.com/nekoumei/cibook-python のコードを参考にさせていただいた。実行環境は Jupyter notebook であり、 Python 3.10 で実証した。\n\n 目標\n\n作中ではRでコードが書かれているが、Qiitaなどの技術系の記事ではPythonで書き直されているサイトもあるのでそれも参考にする\nまずは理論...",
          "link": "https://zenn.dev/pe/articles/ea8a02f5968437",
          "publishedOn": "2023-10-18T00:37:12.000Z",
          "wordCount": 11121,
          "title": "「効果検証入門」をPython コードで理解してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aZpZmZ97--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E5%258A%25B9%25E6%259E%259C%25E6%25A4%259C%25E8%25A8%25BC%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%25E3%2582%2592Python%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMTRjMDlkNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aZpZmZ97--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E5%258A%25B9%25E6%259E%259C%25E6%25A4%259C%25E8%25A8%25BC%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%25E3%2582%2592Python%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMTRjMDlkNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/rchiji/books/201199bf94a67e",
          "author": "Ryota Chijimatsu",
          "description": "生物医学領域の画像（顕微鏡写真やMRIなど）をPythonで扱う例や機械学習の例を紹介する。\n\nこちらのサイトを解説したもの。適宜追加の情報は加えている。\nhttps://haesleinhuepf.github.io/BioImageAnalysisNotebooks/intro.html\n※ ただし、Pythonの初歩、機械学習の原理の章は解説しない。\n\n使用するデータはGithubページから取得可能。dataフォルダのものを使用する。\nhttps://github.com/haesleinhuepf/BioImageAnalysisNotebooks\n\n実行環境はWindows11。Windows版のAnacondaを使用している。\nPython versionは最新版では動かない箇所があるかもしれないので適宜変更してほしい。\n\n※ この本は自分用に書きかけているもので随時更新します。自分を追い込むために公開しています。\n\n~~~\n本書では、BioImageAnalysisNotebooks ウェブサイトのコンテンツに基づいて、バイオイメージ解析の基本を紹介する。BioImageAnalysisNotebooks は Robert Haaseらによって提供されており、詳細な情報は[公式ウェブサイト](https://haesleinhuepf.github.io/BioImageAnalysisNotebooks/intro.html)で提供されている。\n~~~",
          "link": "https://zenn.dev/rchiji/books/201199bf94a67e",
          "publishedOn": "2023-10-17T14:32:27.000Z",
          "wordCount": 468,
          "title": "Bio-image Analysis Notebooks",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P4GOpP7C--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iMzhhM2UyYzQzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P4GOpP7C--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iMzhhM2UyYzQzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/eldorado215/articles/41b8cf24d43ae2",
          "author": "Hyon🇰🇷",
          "description": "はじめに\n今日は、ITスクールに通った63日目の日で、今日学んだ知識を記事にシェアしたいと思います。本記事が、ITを勉強を始めた方々にもロードマップになればいいと思います。\n今日は、現在プログラミング言語でJavaを超えて、1位になっているPythonを勉強しました。\nデーターなどを扱うことに特化された言語で、今後PythonでParsingする実習をある予定です。\nまず、その一歩として、Pythonの基礎文法を学び、少しなれる時間を持ちました。\n\n 出力\n\n -- coding: utf-8 --\nPython2まではASCIIにエンコーディングされるので、# -*- coding...",
          "link": "https://zenn.dev/eldorado215/articles/41b8cf24d43ae2",
          "publishedOn": "2023-10-17T10:45:02.000Z",
          "wordCount": 2247,
          "title": "【初心者向け/ITスクール 63日】Pythonの基礎文法一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SNDbVSzb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252063%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E6%2596%2587%25E6%25B3%2595%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SNDbVSzb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252063%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E6%2596%2587%25E6%25B3%2595%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/techflagcorp/articles/8d6327311e1e9f",
          "author": "dagger1",
          "description": "[小ネタ]uvicornとlogging\nFastAPIと組み合わせてよく使われるuvicornですが、loggingで軽くハマったのでまとめておきます。\n\n uvicornコマンドで起動する場合\nuvicornは内部でloggingを使ってログを吐きます。下のシンプルなコードで試してみます。\n\nmain.py\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/hello/{name}\")\ndef hello(name: str) -> dict:\n    s = f\"Hello, {name}!\"\n    ret...",
          "link": "https://zenn.dev/techflagcorp/articles/8d6327311e1e9f",
          "publishedOn": "2023-10-17T03:43:17.000Z",
          "wordCount": 1950,
          "title": "[小ネタ]uvicornとlogging",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--F_NXw4Eo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255Duvicorn%25E3%2581%25A8logging%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--F_NXw4Eo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255Duvicorn%25E3%2581%25A8logging%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuki6flower/articles/ca145854ed55b3",
          "author": "yuki6flower",
          "description": "はじめに\nFletはPythonでFlutterアプリを構築できるフレームワークです。\nボタンやテキストボックスといったGUIとしての部品だけでなく、異なる画面間を遷移するための部品も揃ってます。\nただ、その取り扱いにはけっこう苦戦したので、その時に得た知見をを共有します。\n\n 読者の想定\nFletの公式ドキュメントの「Navigation and routing」を読んで、以下を理解している\n\n\npage.viewsの最後の要素が画面に表示される\n\n\npage.views：ft.Viewオブジェクトのリスト\n\n\n\npage.go()などでRouteが変更される時にpage.on_r...",
          "link": "https://zenn.dev/yuki6flower/articles/ca145854ed55b3",
          "publishedOn": "2023-10-16T16:27:47.000Z",
          "wordCount": 2321,
          "title": "Fletの画面遷移におけるTIPS",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mpWs-xJ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flet%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E9%2581%25B7%25E7%25A7%25BB%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BTIPS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki6flower%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmVRMlBMMmtObGpxaWNJQndlbDN0RTlhRm1scWhKVXVlSkx6Z2NrTW1NN2pvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mpWs-xJ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flet%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E9%2581%25B7%25E7%25A7%25BB%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BTIPS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki6flower%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmVRMlBMMmtObGpxaWNJQndlbDN0RTlhRm1scWhKVXVlSkx6Z2NrTW1NN2pvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/turing_motors/articles/5b56edb7da1d30",
          "author": "colum2131",
          "description": "Turing株式会社の自動運転・AIモデル開発チームの岩政(@colum2131)です。\nTuringは2030年までに完全自動運転の達成を目指しており、自動運転AI開発から車両開発など、取り組むことは多岐に渡っています。\n今回の話は、自動運転AI開発中に出た問題と、ひとまずの解決方法になります。より良い解決策があれば、教えてもらいたいです🙏\n\n Transfomer-EncoderをONNXに変換したい\nONNX（Open Neural Network eXchange）は、機械学習・深層学習モデルを表現するために構築されたオープンフォーマットです。\nPyTorchやTensorFlo...",
          "link": "https://zenn.dev/turing_motors/articles/5b56edb7da1d30",
          "publishedOn": "2023-10-16T09:00:01.000Z",
          "wordCount": 3615,
          "title": "ONNXモデルの変換エラーを解決: PyTorchのTransformerモデルの再実装方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YwUv7s2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ONNX%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%253A%2520PyTorch%25E3%2581%25AETransformer%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%2586%258D%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:colum2131%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZDZiMjhmMmEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YwUv7s2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ONNX%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%253A%2520PyTorch%25E3%2581%25AETransformer%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%2586%258D%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:colum2131%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZDZiMjhmMmEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/chiman/articles/246b309925e65d",
          "author": "kinosuke",
          "description": "ゆめねこさんが行っている上位解法まとめが素晴らしくこれに習い私もCommonlit2のまとめを行いました。LLMが流行り始めてから初めてのNLPコンペで、新たなモデルを用いた解法が出てくると参加前は思ってましたが蓋を開けてみると今まで通りdeberta-v3-largeが最強でした。\nただ、1stのチームはデータの増強目的でLLMを活用しておりこのテクニックのみで優勝しているのでこれからの戦い方を大きくかえるかも知れません。\n(ルールの確認はしっかりと行う必要がありそう)\nちなみに弊チームは2106チーム中61thでした。(※スコア確定前)\n一緒に戦ってくれたチームメイトに感謝です🙇‍...",
          "link": "https://zenn.dev/chiman/articles/246b309925e65d",
          "publishedOn": "2023-10-16T03:28:16.000Z",
          "wordCount": 934,
          "title": "kaggle Commonlit2　上位解法まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DCoqj3Xv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kaggle%2520Commonlit2%25E3%2580%2580%25E4%25B8%258A%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kinosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5YTBmZDZkZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DCoqj3Xv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kaggle%2520Commonlit2%25E3%2580%2580%25E4%25B8%258A%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kinosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5YTBmZDZkZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ncdc/articles/ac66eaec6046ee",
          "author": "いばらき",
          "description": "はじめに\nPythonで作っているアプリのパッケージ管理にpoetryを使っていたのですが、ryeに変更してみました。この記事はその際のメモになります。\nryeの使い方自体は特に触れませんが、公式ページくらいは貼っておきます。\nhttps://rye-up.com/\n\n なぜ、poetryからryeに乗り換えようと思ったか？\npyenvを気にしなくて良くなるので、環境構築の手間が減ると思ったからです。\npoetryの場合はPython自体の管理が別途必要なのでpyenvも使っていたのですが、環境構築とかよく分からないエラーが出ることがあり面倒くさいこともあったので、全部まとめて管理で...",
          "link": "https://zenn.dev/ncdc/articles/ac66eaec6046ee",
          "publishedOn": "2023-10-16T02:50:00.000Z",
          "wordCount": 1151,
          "title": "Pythonのパッケージ管理をpoetryからryeへ移行した手順のメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cxPPTIO8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592poetry%25E3%2581%258B%25E3%2582%2589rye%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E6%2589%258B%25E9%25A0%2586%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cxPPTIO8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592poetry%25E3%2581%258B%25E3%2582%2589rye%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E6%2589%258B%25E9%25A0%2586%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyga2c/articles/pd_datetime_period",
          "author": "hyga2c",
          "description": "pandasで時系列データを取り扱った際の気付き諸々をまとめていく。（随時更新予定）\n\n 1. pandas DataFrameで日付データをDatetime indexとして取り扱う\n日付ベースのデータをもとに集計する場合は、日付データをDatetime indexとして取り扱った方が何かと便利と思われる。\n\n 1.1. 利点 Group_byによる集計が簡単\nたとえば月次/四半期での集計は pd.Grouper(freq='param') を用いて実施できる。\nimport pandas as pd\nimport numpy as np\nfrom datetime import da...",
          "link": "https://zenn.dev/hyga2c/articles/pd_datetime_period",
          "publishedOn": "2023-10-15T13:23:27.000Z",
          "wordCount": 1600,
          "title": "PythonのDataFrameで日付を取り扱う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GPMf4W-8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEDataFrame%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E5%258F%2596%25E3%2582%258A%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hyga2c%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhZGVkNzFjOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GPMf4W-8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEDataFrame%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E5%258F%2596%25E3%2582%258A%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hyga2c%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhZGVkNzFjOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hk_ilohas/articles/normal-dist-transform",
          "author": "HK_ilohas",
          "description": "はじめに\nこの記事では、[0,1) の一様乱数から標準正規分布 \\mathcal{N}(0,1) に従う正規乱数を生成する方法について説明し、Python で簡易的に実装します。また、正規乱数から多次元正規乱数を生成する方法についても取り扱います。\n今回の元ネタは、参考文献でも挙げている伏見正則『乱数』です。これは日本語で書かれた数少ない乱数についての入門書で、長い間絶版になっていました。ところが、なんと先日ちくま学芸文庫で復刊したことでようやく手に入れることができました！　この本では、メルセンヌ・ツイスター以前の内容が取り扱われていて、悪戦苦闘している歴史がよくわかりました。\n\n ...",
          "link": "https://zenn.dev/hk_ilohas/articles/normal-dist-transform",
          "publishedOn": "2023-10-15T11:10:00.000Z",
          "wordCount": 4945,
          "title": "一様乱数から正規乱数を生成する方法【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CUNuEQX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E6%25A7%2598%25E4%25B9%25B1%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E6%25AD%25A3%25E8%25A6%258F%25E4%25B9%25B1%25E6%2595%25B0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CUNuEQX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E6%25A7%2598%25E4%25B9%25B1%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E6%25AD%25A3%25E8%25A6%258F%25E4%25B9%25B1%25E6%2595%25B0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/enterrocken/articles/e6ae6ddcc121d8",
          "author": "yuki.hirano",
          "description": "はじめに\n初めまして。\n都内IT企業で、データアルゴリズムチームのエンジニアをしております、Noraです。\n今回は、X(旧Twitter）とOpenAI APIを活用して、Xへの自動投稿ボットを構築します。\n定期実行は、AWSのLambda + EventBridgeというシンプルなアーキテクチャで実現しています。\n「Xをはじめとした、SNS運用をしたいけど、毎日投稿するのはめんどくさいなー。。」という方全てにおすすめの記事となっております。！\nでは、ぜひご覧ください！\n↓完成イメージ\n\n\n アーキテクチャ\n\n\n 実装手順\n\nXに投稿するメソッドをPythonで実装（Zenn API...",
          "link": "https://zenn.dev/enterrocken/articles/e6ae6ddcc121d8",
          "publishedOn": "2023-10-15T07:47:39.000Z",
          "wordCount": 1783,
          "title": "【X(Twitter) Bot】Ｘの運用がめんどくさい全ての人へ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lWzc5JZN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590X%2528Twitter%2529%2520Bot%25E3%2580%2591%25EF%25BC%25B8%25E3%2581%25AE%25E9%2581%258B%25E7%2594%25A8%25E3%2581%258C%25E3%2582%2581%25E3%2582%2593%25E3%2581%25A9%25E3%2581%258F%25E3%2581%2595%25E3%2581%2584%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AE%25E4%25BA%25BA%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki.hirano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXh1MGVFSGV5anMwelFidEdMZE9QZTRNTG1JNThCYlo4cTRTblNHdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lWzc5JZN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590X%2528Twitter%2529%2520Bot%25E3%2580%2591%25EF%25BC%25B8%25E3%2581%25AE%25E9%2581%258B%25E7%2594%25A8%25E3%2581%258C%25E3%2582%2581%25E3%2582%2593%25E3%2581%25A9%25E3%2581%258F%25E3%2581%2595%25E3%2581%2584%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AE%25E4%25BA%25BA%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki.hirano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXh1MGVFSGV5anMwelFidEdMZE9QZTRNTG1JNThCYlo4cTRTblNHdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/huraipan/articles/0e78b7fe024ab3",
          "author": "huraipan",
          "description": "モジュールとは？\nモジュールはプログラムを構成するコンポーネントで、関連するデータと関数を 1 つにまとめたユニットを意味します。\nつまり実装したい機能を直接作成することなく、すでに作成されたファイルを取得することで、コードの可読性を高め、量を減らすことができます。\nrandomモジュールを利用して調べてみます。\n\n\n\n ランダムモジュール\nrandomモジュールを利用するためには、次のようなコードを作成する必要があります。\nimport random\n\nこれでランダムモジュールを書くための準備が完了しました。\n\n\n\n サイコロ転がし\nそれではランダムモジュールを利用してサイコロ転が...",
          "link": "https://zenn.dev/huraipan/articles/0e78b7fe024ab3",
          "publishedOn": "2023-10-15T07:43:25.000Z",
          "wordCount": 195,
          "title": "[Python] [Python] ランダムモジュール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kBSfAqnf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%255BPython%255D%2520%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kBSfAqnf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%255BPython%255D%2520%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/karamawanu/articles/3347b89d8dd7ed",
          "author": "karamawanu",
          "description": "この数年来、グーグルの各種手続きが極端に煩雑化した。\nopenai chatcompletion api と組み合わせるのに、gogole search API を使おうと思って調べてみた。\ngoogle custom search api は手続きは判りづらいが使い方は簡単だった。\n\n 事務手続き\napiの登録だけでは使えず、”検索エンジン”の定義を指定する必要がある。\nアカウント作成、支払い設定等については割愛する。\n\n APIの利用登録\n本件のためのgoogle cloudプロジェクトを作成する。\n作成済みのものを流用してもいいが、管理が煩雑かつ密結合なので、API専用のものを作成...",
          "link": "https://zenn.dev/karamawanu/articles/3347b89d8dd7ed",
          "publishedOn": "2023-10-15T04:52:16.000Z",
          "wordCount": 494,
          "title": "google custom search api",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--joBnojC2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:google%2520custom%2520search%2520api%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--joBnojC2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:google%2520custom%2520search%2520api%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hayap/articles/c0bd2ece92cae7",
          "author": "HayaP(kohei hayakawa)",
          "description": "はじめに\nこんにちは、はやぴー（@HayaP）です。\n前回の記事ではPythonスクリプトからAmazon Bedrockを利用してみましたが、今回はAWS LambdaからAmazon Bedrockを動かしてみたいと思います。\n\n 前提\n前提として、Amazon BedrockでJurassic-2 Midが使用可能になっていることが必要です。\n実施手順は、過去の記事Amazon BedrockをPythonスクリプトから利用してみたにありますので、ご参照ください。\n\n TL;DR (忙しい人用)\n\nAmazon BedrockのJurassic-2 MidモデルをAWS Lam...",
          "link": "https://zenn.dev/hayap/articles/c0bd2ece92cae7",
          "publishedOn": "2023-10-15T02:13:23.000Z",
          "wordCount": 1083,
          "title": "Amazon BedrockをAWS Lambda上で呼び出してみた（API化）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zYv8pxsS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E3%2582%2592AWS%2520Lambda%25E4%25B8%258A%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588API%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaP%2528kohei%2520hay...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MWJjYTRlZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zYv8pxsS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E3%2582%2592AWS%2520Lambda%25E4%25B8%258A%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588API%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaP%2528kohei%2520hay...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MWJjYTRlZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hayap/articles/23be87f9ddeb0e",
          "author": "HayaP(kohei hayakawa)",
          "description": "はじめに\nこんにちは、はやぴー（@HayaP）です。\nついに、Amazon BedrockがGAされましたね！\n東京リージョンでも、一部のモデルが使用可能になりました。\n今回はPythonスクリプトでAmazon Bedrockを利用してみます。\n理由として、Lambdaから実行するケースや、Webアプリケーションに組み込むケースが多そうだなぁと感じているからです。（Lambdaで実行するハンズオンは別で記事を書く予定です）\n\n 対象読者\n\nAmazon Bedrockに興味がある方\nPythonスクリプトで、Amazon Bedrockを利用したい方\nAWS Lambdaでの実装を...",
          "link": "https://zenn.dev/hayap/articles/23be87f9ddeb0e",
          "publishedOn": "2023-10-15T02:03:27.000Z",
          "wordCount": 2146,
          "title": "Amazon BedrockをPythonスクリプトから利用してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gI7NLQva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E3%2582%2592Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaP%2528kohei%2520hay...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MWJjYTRlZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gI7NLQva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E3%2582%2592Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaP%2528kohei%2520hay...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MWJjYTRlZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ohke/articles/4a65d4b78637bc",
          "author": "ohke",
          "description": "FastAPIなどのフレームワークと組み合わせて使われることが多い印象のPydanticですが、それ単体でdataclassの高機能版として使えますよ、という紹介です。\n\n Pydanticとは\nPythonでおそらく最も使われているバリデーションのためのライブラリです。型アノテーションを用いてバリデーションやシリアライズを行なってくれます。\nhttps://docs.pydantic.dev/latest/\nhttps://github.com/pydantic/pydantic\n\n 最初のモデル\nまずは概観です。\nBaseModelを継承させたクラスに、dataclassのように型ア...",
          "link": "https://zenn.dev/ohke/articles/4a65d4b78637bc",
          "publishedOn": "2023-10-14T14:24:58.000Z",
          "wordCount": 1449,
          "title": "バリデーションとシリアライズができるdataclassとしてPydanticを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j7W7gjQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bdataclass%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6Pydantic%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzI1YWRjYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j7W7gjQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bdataclass%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6Pydantic%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzI1YWRjYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ssfuno/articles/56e2577ee794f3",
          "author": "すふー",
          "description": "イントロダクション\n教科書やテレビなどで、地震の分布図を一度は目にしたことのある方も多いのではないでしょうか。この記事では、USGS（アメリカ地質調査所）の公開している地震情報と、PythonのライブラリであるPyGMTを使って作図する方法を紹介します。\n\n2018〜2022年のマグニチュード5より大きい地震（データ出典：USGS）\n地震情報をダウンロードするには、USGSや気象庁のサービスを利用するなどの方法がありますが、USGSの提供しているAPIを利用すると、比較的に簡単に情報を取得することができます。\nまた、Pythonで地図上にデータをプロットするのにはいくつか選択肢があり...",
          "link": "https://zenn.dev/ssfuno/articles/56e2577ee794f3",
          "publishedOn": "2023-10-14T10:07:16.000Z",
          "wordCount": 1444,
          "title": "PyGMTとUSGSのAPIを使って地震の分布を描いてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ksonxj95--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyGMT%25E3%2581%25A8USGS%25E3%2581%25AEAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%259C%25B0%25E9%259C%2587%25E3%2581%25AE%25E5%2588%2586%25E5%25B8%2583%25E3%2582%2592%25E6%258F%258F%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ksonxj95--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyGMT%25E3%2581%25A8USGS%25E3%2581%25AEAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%259C%25B0%25E9%259C%2587%25E3%2581%25AE%25E5%2588%2586%25E5%25B8%2583%25E3%2582%2592%25E6%258F%258F%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mameta29/articles/88ef39476b79fc",
          "author": "mameta29",
          "description": "自分はpython初心者だがipfshttpclientを使用することで簡単にアップロードすることができたのでそれを記録する。\n\n 事前想定\n\n\nipfs daemonを起動できる\n\n簡単に説明するとipfsのノードを起動することができるというもの。\nなので起動中はファイルのアップロードや参照は自由にできるが、自分でアップロードしたファイルは pin止めしないと、ipfsノードを落としてしまうと参照できなくなるので注意が必要。\nipfs daemonでノードを起動するにはipfsをインストールする必要がある。また今回ipfshttpclientを使用するにはv0.4.0 ~ v0.8.0...",
          "link": "https://zenn.dev/mameta29/articles/88ef39476b79fc",
          "publishedOn": "2023-10-14T10:01:06.000Z",
          "wordCount": 395,
          "title": "PythonでIPFSにJsonファイルをアップロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pqCglIsA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7IPFS%25E3%2581%25ABJson%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mameta29%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FzbE45OV9GR0RoRWJpbGxfZHl0dGNTcUhmQTd4VUh2bFo0TDZNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pqCglIsA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7IPFS%25E3%2581%25ABJson%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mameta29%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FzbE45OV9GR0RoRWJpbGxfZHl0dGNTcUhmQTd4VUh2bFo0TDZNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/misora/articles/8853137fd74212",
          "author": "RISUman",
          "description": "「pyline_notify」 とは？\n簡潔には 「任意のpythonスクリプトにデコレーターをつけることで、処理の開始と終了(エラー)をLINE notifyを用いて通知するPythonパッケージ」 になります。\nhttps://github.com/lovelovetrb/pyline_notify\n\n 制作の動機\n自分は自然言語処理を研究する研究室に所属しており、機械学習におけるモデルの学習や推論を行うようなPythonスクリプトを扱っています。\n機械学習における処理は基本的に数時間から数日など処理にとても時間のかかるもので、時間をかけて実行しても処理がうまくいかずエラーが発生...",
          "link": "https://zenn.dev/misora/articles/8853137fd74212",
          "publishedOn": "2023-10-14T08:14:32.000Z",
          "wordCount": 356,
          "title": "Pythonの関数実行の開始と終了をLINEで通知する「pyline_notify」を作成してみた！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1rohJYLy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AE%25E9%2596%258B%25E5%25A7%258B%25E3%2581%25A8%25E7%25B5%2582%25E4%25BA%2586%25E3%2582%2592LINE%25E3%2581%25A7%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2580%258Cpyline_notify%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:RISUman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxZTVhYzUwMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1rohJYLy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AE%25E9%2596%258B%25E5%25A7%258B%25E3%2581%25A8%25E7%25B5%2582%25E4%25BA%2586%25E3%2582%2592LINE%25E3%2581%25A7%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2580%258Cpyline_notify%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:RISUman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxZTVhYzUwMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tsuchi417/articles/83d2f926a3508e",
          "author": "tsuchi",
          "description": "Pythonでcsvファイルの入出力を頻繁に行うのでまとめます（臨時追加するかもです）。\n\n 前提\nimport csv をします。\n\nmain.py\nimport csv\n\n\n 入力\n\n 一次元配列\n\nin.csv\n1,2,3,4,5\n\n\nmain.py\ndata = []\nwith open(\"out.csv\", mode=\"r\") as file:\n    reader = csv.reader(file)\n    for row in reader:\n        data = row\n\n\n 二次元配列\n\nin.csv\n1,2\n3,4\n5,6\n\n\nmain.py\ndata = ...",
          "link": "https://zenn.dev/tsuchi417/articles/83d2f926a3508e",
          "publishedOn": "2023-10-14T06:50:25.000Z",
          "wordCount": 981,
          "title": "Python による csv の入出力まとめ（チートシート）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vAs8hGOE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%2520csv%2520%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25EF%25BC%2588%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0x0MHpGV0xwUF9aQmgzcThvc00xVUl5bGdJdHZjVnluSHdhTTdSaERoOHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vAs8hGOE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%2520csv%2520%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25EF%25BC%2588%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0x0MHpGV0xwUF9aQmgzcThvc00xVUl5bGdJdHZjVnluSHdhTTdSaERoOHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/a_adachi/articles/01585a26e7dcdd",
          "author": "a-adachi",
          "description": "isort拡張機能が繰り返しクラッシュする\nVSCodeを立ち上げると以下のようなエラーが表示されるとの相談を受けました。\nThe isort server crashed 5 times in the last 3 minutes. The server will not be restarted.\n\n 暫定的な解決策\nisortのバグのようですが、詳細はわかりませんでした。相談者はimport文のフォーマットは特に必要ないとのことだったので、とりあえず以下リンク先の通り機能を無効化することでエラーが出なくなりました。\nhttps://github.com/microsoft/vs...",
          "link": "https://zenn.dev/a_adachi/articles/01585a26e7dcdd",
          "publishedOn": "2023-10-13T08:38:28.000Z",
          "wordCount": 184,
          "title": "VSCodeのisort拡張機能が繰り返しクラッシュする場合の暫定的な解決策",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fosmun4v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25AEisort%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%258C%25E7%25B9%25B0%25E3%2582%258A%25E8%25BF%2594%25E3%2581%2597%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%259A%25AB%25E5%25AE%259A%25E7%259A%2584%25E3%2581%25AA%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:a-adachi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGI1NDg3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fosmun4v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25AEisort%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%258C%25E7%25B9%25B0%25E3%2582%258A%25E8%25BF%2594%25E3%2581%2597%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%259A%25AB%25E5%25AE%259A%25E7%259A%2584%25E3%2581%25AA%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:a-adachi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGI1NDg3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kt_n/articles/4e848bb1e5dbd6",
          "author": "kt_n",
          "description": "概要\n簡単なんだけど、何回でも調べてしまうPythonコードをまとめておく。\n随時更新していきたい。\n\n CSV読み込み\nimport csv\n\nwith open(csv_filepath, 'rt') as f:\n    # ヘッダーを飛ばす\n    header = next(csv.reader(f))\n    reader = csv.reader(f)\n    data = [row for row in reader]\n\n CSV書き込み\nimport csv\n\nwith open(csv_filepath, 'wt', newline=\"\", encoding='ut...",
          "link": "https://zenn.dev/kt_n/articles/4e848bb1e5dbd6",
          "publishedOn": "2023-10-13T04:09:33.000Z",
          "wordCount": 321,
          "title": "何度も調べてしまうPythonコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zaPgHVqM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%2595%25E5%25BA%25A6%25E3%2582%2582%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kt_n%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3ZDZhZmJmNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zaPgHVqM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%2595%25E5%25BA%25A6%25E3%2582%2582%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kt_n%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3ZDZhZmJmNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/os1ma/articles/8958aba961b665",
          "author": "oshima_123",
          "description": "OpenAI の文章生成 API（Chat Completions API）には、2023 年 6 月に「Function calling」という機能が追加されました。\nこの Function calling ですが、そのまま使おうとすると少し記述の手間が大きいと感じないでしょうか？\nこの記事では、Function calling をちょっと楽に使うため、Pydantic を使う方法を紹介します。\n\n Function calling とは\nまず、Function calling について簡単に説明します。\nFunction calling は例えば次のように実装します。\nOUTPUT_...",
          "link": "https://zenn.dev/os1ma/articles/8958aba961b665",
          "publishedOn": "2023-10-13T03:42:45.000Z",
          "wordCount": 2452,
          "title": "Function calling に Pydantic を使ってみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--45DE-vzr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Function%2520calling%2520%25E3%2581%25AB%2520Pydantic%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oshima_123%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjAzMGZmOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--45DE-vzr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Function%2520calling%2520%25E3%2581%25AB%2520Pydantic%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oshima_123%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjAzMGZmOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/waka07/articles/development-diary_1-3",
          "author": "Waka",
          "description": "作りたいシステム\n忙しい人のためのギフト提案型AI「AiSAP!(エイサップ)」\n忙しい社会人のために、AIが可能な限り素早く（ASAP: As Soon As Possible）、最適なギフトを提案してくれるWebサービス。\n※本記事の目的は個人開発の流れの紹介なので、アルゴリズムや技術の説明について正確性を欠いている箇所があるかもしれません。ご了承ください。\n（詳しい方はコメント等でご指摘いただけると幸いです）\n\n 推薦アルゴリズムとは\nこのシステムの肝となるのが「推薦アルゴリズム」です。\n「推薦アルゴリズム」とは、大量のアイテムの中から、様々なデータに基づいて、ユーザにおすすめ...",
          "link": "https://zenn.dev/waka07/articles/development-diary_1-3",
          "publishedOn": "2023-10-12T23:15:10.000Z",
          "wordCount": 203,
          "title": "【個人開発 #1-3】レコメンドシステムを作ってみた vol.3　〜推薦アルゴリズム「協調フィルタリング」〜",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sWNOKfO7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%2520%25231-3%25E3%2580%2591%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520vol.3%25E3%2580%2580%25E3%2580%259C%25E6%258E%25A8%25E8%2596%25A6%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%258C%25E5%258D%2594%25E8%25AA%25BF%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%258D%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Waka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMTFjYWNkY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sWNOKfO7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%2520%25231-3%25E3%2580%2591%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520vol.3%25E3%2580%2580%25E3%2580%259C%25E6%258E%25A8%25E8%2596%25A6%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%258C%25E5%258D%2594%25E8%25AA%25BF%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%258D%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Waka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMTFjYWNkY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/toki_mwc/articles/283ff142b7303e",
          "author": "toki_mwc",
          "description": "はじめに\nAI BunChoというAI小説作成支援サービスがあります。\n今回は、AI BunChoに使用されているモデルをPaperspace上で試してみました。\nGoogle Colab上で試している記事がとても参考になりました。\nhttps://note.com/npaka/n/n4bbc4a9f612e\n今回は、ChatGPTと会話しながら、メタ情報をインプットさせてから物語を生成するようにコードを作成します。\n\n ライブラリのインストール\nジュピターノートブックにコードを追加して、以下のコマンド実行します。\n#必要なライブラリをインストール\n!pip install tran...",
          "link": "https://zenn.dev/toki_mwc/articles/283ff142b7303e",
          "publishedOn": "2023-10-12T12:17:20.000Z",
          "wordCount": 665,
          "title": "【Paperspace】AI BunChoに使用されるモデルで小説を書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6-vrBQRO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Paperspace%25E3%2580%2591AI%2520BunCho%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E5%25B0%258F%25E8%25AA%25AC%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki_mwc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNzRiNzczNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6-vrBQRO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Paperspace%25E3%2580%2591AI%2520BunCho%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E5%25B0%258F%25E8%25AA%25AC%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki_mwc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNzRiNzczNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taniii_shio/articles/7f3b080da4f2a5",
          "author": "Naoto Shioya",
          "description": "pythonの環境構築が難しいので、メモです。\n\n 環境\n\nOS: windows11, WSL(Ubuntu 22.04.2 LTS)\nバージョン管理: asdf v0.13.1\n仮想環境、パッケージ管理: poetry version 1.1.14\n\n\n やりたいこと\n\npoetryで管理している仮想環境(venv)におけるpythonのバージョンを変える\n\n!\n\nすでにpoetryで作成したvenv上にpythonがインストールされている。\n\n\n\n 前提\n\nasdfのインストール\npoetryのインストール\npoetryプロジェクトの作成\n\n\n 手順\n\nasdfでpythonの当該...",
          "link": "https://zenn.dev/taniii_shio/articles/7f3b080da4f2a5",
          "publishedOn": "2023-10-12T06:00:00.000Z",
          "wordCount": 455,
          "title": "adsf, poetryでpythonのバージョンを変える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GuKtbFch--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:adsf%252C%2520poetry%25E3%2581%25A7python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GuKtbFch--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:adsf%252C%2520poetry%25E3%2581%25A7python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/499fee034a89ed",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-318 C - Blue Spring\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, d, p = getIntMap()\n    f = getIntList()\n    f = sorted(f, reverse=True) + [0 for _ in range(d)]\n\n    total = sum(f)\n...",
          "link": "https://zenn.dev/hyperdb/articles/499fee034a89ed",
          "publishedOn": "2023-10-12T05:41:08.000Z",
          "wordCount": 465,
          "title": "［AtCoder］ABC-318｜C - Blue Spring",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--78Xv-WXz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-318%25EF%25BD%259CC%2520-%2520Blue%2520Spring%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--78Xv-WXz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-318%25EF%25BD%259CC%2520-%2520Blue%2520Spring%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shytaani/articles/b69fa2ff274c7a",
          "author": "Toru.T",
          "description": "1. Unit testとは\nUnitとはアプリケーションのテスト可能な最小の部品単位のことです。\nプログラムにおける「Unit」とは、一般的に個々の関数やメソッドのことを指します。\nよって、Unit testは、関数やメソッドレベルでコードが設計通りに動作することを保証するために行うテストです。\n\n 2. Unit testを行うメリット\n1. バグが早期発見できる\nユニットテストは、開発の初期段階でコードの問題を発見するのに役立ちます。例えば、関数やメソッドが期待通りの出力を返さない場合、ユニットテストはこれを捉え、開発者が問題を修正する機会を提供します。\n2. コードの変更が容...",
          "link": "https://zenn.dev/shytaani/articles/b69fa2ff274c7a",
          "publishedOn": "2023-10-12T05:18:12.000Z",
          "wordCount": 601,
          "title": "【社内勉強会②】Unit testについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--byp53-_3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A4%25BE%25E5%2586%2585%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%25E2%2591%25A1%25E3%2580%2591Unit%2520test%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru.T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1FiejZORHAwb08wbTdxWS05dUFJZGlfYVIyVlJUbHdGb1A3ODRieGJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--byp53-_3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A4%25BE%25E5%2586%2585%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%25E2%2591%25A1%25E3%2580%2591Unit%2520test%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru.T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1FiejZORHAwb08wbTdxWS05dUFJZGlfYVIyVlJUbHdGb1A3ODRieGJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit22",
          "author": "derwind",
          "description": "目的\ncuQuantum 対応の Qiskit Aer を毎回ビルドするのは大変なので、Google Colab 上でお手軽に使いましょうという内容。実は自分では特に何もやってないのだが、情報が埋もれているので[1]、それを掘り返して少し試してみるという感じになる。\n\n 現在の PyPI 版にはちょっとした問題がある\n[qiskit-aer-gpu] ImportError: libcustatevec.so.1 という Issue を大分前に起票したのだが、デフォルトでは qiskit-aer-gpu 0.12.2 から必要なライブラリが見えておらずパスを通さないとならない状態であ...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit22",
          "publishedOn": "2023-10-11T11:43:57.000Z",
          "wordCount": 1453,
          "title": "Qiskit で遊んでみる (22) — Google Colab 上で Qiskit Aer GPU",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0mX6ou6x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252822%2529%2520%25E2%2580%2594%2520Google%2520Colab%2520%25E4%25B8%258A%25E3%2581%25A7%2520Qiskit%2520Aer%2520GPU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0mX6ou6x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252822%2529%2520%25E2%2580%2594%2520Google%2520Colab%2520%25E4%25B8%258A%25E3%2581%25A7%2520Qiskit%2520Aer%2520GPU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mjun0812/articles/7bccb874bb74c4",
          "author": "もりりん",
          "description": "先日，PyTorchの画像処理系がまとまったライブラリ，TorchVisionのバージョン0.16.0が公開されました．\nこのアップデートで，データ拡張でよく用いられるtorchvision.transformsのバージョンv2のドキュメントが加筆されました．\ntorchvision.transforms.v2自体はベータ版として0.15.0から存在していたものの，今回のアップデートでドキュメントが充実し，recommendになったことから，実際に以前の方法とどのように異なるのか見ていきたいと思います．\nなお，v2はまだベータ版です．0.17.0で安定版となるようです．\n\nリリースノート...",
          "link": "https://zenn.dev/mjun0812/articles/7bccb874bb74c4",
          "publishedOn": "2023-10-11T10:21:51.000Z",
          "wordCount": 3277,
          "title": "TorchVisionのtransforms.v2を触ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ypxakEfq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TorchVision%25E3%2581%25AEtransforms.v2%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%258A%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1NmNjYzA5MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ypxakEfq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TorchVision%25E3%2581%25AEtransforms.v2%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%258A%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1NmNjYzA5MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/vaxila_labs/articles/db5cb42122f460",
          "author": "mrasu",
          "description": "例外が起きた時、エラーメッセージやスタックトレースは便利ですが、例外を起こした値自体も気になります。\nそんなときに、例外が起きた関数で使われていたローカル変数がわかると役に立ちます。\nローカル変数の値がわかれば、例外を起こした値自体がわからなくても、それを導くための変数がわかります。\n\n tl;dr\n\nPythonでは例外のtracebackを見ると例外発生時のローカル変数がわかる\nOpenTelemetryでローカル変数を記録するためには、record_exception をラップすればOK\nパッケージを作りました\n\nhttps://github.com/vaxila-labs/pyt...",
          "link": "https://zenn.dev/vaxila_labs/articles/db5cb42122f460",
          "publishedOn": "2023-10-11T10:21:20.000Z",
          "wordCount": 967,
          "title": "Pythonで例外時の変数をOpenTelemetryに記録する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N-SvRe57--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E4%25BE%258B%25E5%25A4%2596%25E6%2599%2582%25E3%2581%25AE%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592OpenTelemetry%25E3%2581%25AB%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vaxila%2520Labs%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:mrasu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5NTI2ZmM2NGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkZmIzMzNjMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N-SvRe57--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E4%25BE%258B%25E5%25A4%2596%25E6%2599%2582%25E3%2581%25AE%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592OpenTelemetry%25E3%2581%25AB%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vaxila%2520Labs%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:mrasu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5NTI2ZmM2NGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkZmIzMzNjMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dc840d20c9066f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-319 C - False Hope\n\n\n\n 提出結果\nimport itertools\nimport math\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    c = getIntList() + getIntList() + getIntList()\n    v = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, ...",
          "link": "https://zenn.dev/hyperdb/articles/dc840d20c9066f",
          "publishedOn": "2023-10-11T08:59:51.000Z",
          "wordCount": 736,
          "title": "［AtCoder］ABC-319｜C - False Hope",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gG84DWmC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-319%25EF%25BD%259CC%2520-%2520False%2520Hope%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gG84DWmC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-319%25EF%25BD%259CC%2520-%2520False%2520Hope%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sansuke05/articles/ad971fe2607f81",
          "author": "サンスケ",
          "description": "すぐに使いたい人向け\nDockerfileがこちらにあります\nhttps://gist.github.com/sansuke05/c4e79e1815d41f70f962bdf03d9f39f0\n\n はじめに\n個人開発でモバイル端末からText To Speechを使いたい需要が発生したため、キャラクターの音声合成を使える COEIROINK をクラウド上で動作させることにしました。\nその時にどのようなことをやったかを今回まとめることにしました。\n長くなりそうなので、この記事ではまずDocker上で動かせるようにするまでにやったことをまとめています。\n\n Docker上で動かせるよう...",
          "link": "https://zenn.dev/sansuke05/articles/ad971fe2607f81",
          "publishedOn": "2023-10-10T18:30:06.000Z",
          "wordCount": 712,
          "title": "COEIROINK(CPU)をクラウド対応するまでにやったこと(Docker上で動かせるようにするまで編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7N4DSa20--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:COEIROINK%2528CPU%2529%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2528Docker%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzNTlhMGMzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7N4DSa20--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:COEIROINK%2528CPU%2529%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2528Docker%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzNTlhMGMzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kit_ok/articles/d0558e5f7e14a9",
          "author": "カイト@データ基盤屋",
          "description": "結論\n\n文字コードチェック自体は file_content = uploaded_file.read() した後に file_content.decode(\"utf-8\") して UnicodeDecodeError を検知するなどで簡単に可能\nファイルオブジェクトをreadしているので、ファイルの読み込みカーソルが最下部まで行ってしまうので、 uploaded_file.seek(0) でカーソルを先頭に戻してやる必要がある\nもっと楽に文字コードのバリデーションができる方法があれば知りたい\n\n\n 今回起きたこと・ハマったポイント\n仕事で、「streamlitでアップロードしたファイ...",
          "link": "https://zenn.dev/kit_ok/articles/d0558e5f7e14a9",
          "publishedOn": "2023-10-10T10:54:03.000Z",
          "wordCount": 443,
          "title": "StreamlitのFile Uploadで文字コードチェック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HN05L6Ja--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25AEFile%2520Upload%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%2588%2540%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%259F%25BA%25E7%259B%25A4%25E5%25B1%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTBkYjZkMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HN05L6Ja--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25AEFile%2520Upload%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%2588%2540%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%259F%25BA%25E7%259B%25A4%25E5%25B1%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTBkYjZkMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/emp_tech_blog/articles/ffa83b5231b15c",
          "author": "ssnay",
          "description": "LeetCodeってなんですか？\nシリコンバレーの名だたる企業や日本でも大きなサービスを展開するようなソフトウェア企業では、エンジニア採用でコーディング面接がある場合が多く、このサイトはその対策としてよく利用されるものです。\n\n 今回の問題\n早いコードができたわけではないですが、他の解答よりシンプルなコードになっていると思ったので紹介しようと思いました。\n・https://leetcode.com/problems/sqrtx/\n問題文\nGiven a non-negative integer x, \nreturn the square root of x rounded down ...",
          "link": "https://zenn.dev/emp_tech_blog/articles/ffa83b5231b15c",
          "publishedOn": "2023-10-10T07:29:41.000Z",
          "wordCount": 782,
          "title": "LeetCode: 69.Sqrt(x) 解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VnQeWYbp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:LeetCode%253A%252069.Sqrt%2528x%2529%2520%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:EMP%2520Tech%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:ssnay%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhYTMzODRhNGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0tXeWUzaDhOdk5LQWJ0Qk1XZnhhYXBobktNYXY0NGpqY1c1NmM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VnQeWYbp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:LeetCode%253A%252069.Sqrt%2528x%2529%2520%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:EMP%2520Tech%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:ssnay%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhYTMzODRhNGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0tXeWUzaDhOdk5LQWJ0Qk1XZnhhYXBobktNYXY0NGpqY1c1NmM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c24a804ac30e4f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-320 C - Slot Strategy 2 (Easy)\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef pick(a, n, m):\n    return a[n % m]\n\n\ndef main():\n    m = getInt()\n    s = getStringRow(3)\n\n    r = []\n    for x in range(m):\n      ...",
          "link": "https://zenn.dev/hyperdb/articles/c24a804ac30e4f",
          "publishedOn": "2023-10-10T04:56:39.000Z",
          "wordCount": 608,
          "title": "［AtCoder］ABC-320｜C - Slot Strategy 2 (Easy)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JLTitnhg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-320%25EF%25BD%259CC%2520-%2520Slot%2520Strategy%25202%2520%2528Easy%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JLTitnhg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-320%25EF%25BD%259CC%2520-%2520Slot%2520Strategy%25202%2520%2528Easy%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/karaage0703/articles/9e58dec9eeaa86",
          "author": "karaage0703",
          "description": "Notion API Python SDK\nとりあえず試したのでメモです。\n以下公式が詳しいです。\nhttps://github.com/ramnes/notion-sdk-py\n\n Notion側\n以下でインテグレーションを作成します。\nhttps://www.notion.so/my-integrations\n以下の通りでOKです。\n\nインテグレーションを作成すると、トークンを取得できます。取得したら、環境変数に設定しておきましょう。\n$ export NOTION_TOKEN=\"NOTION_INTEGRATION_TOKEN\"\n制御したいページの右上の…をクリックして「+コネ...",
          "link": "https://zenn.dev/karaage0703/articles/9e58dec9eeaa86",
          "publishedOn": "2023-10-09T16:48:31.000Z",
          "wordCount": 378,
          "title": "Notion API x Python",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sONYkSD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Notion%2520API%2520x%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karaage0703%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sONYkSD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Notion%2520API%2520x%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karaage0703%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tk_hamaguchi/articles/788c9f7f2d290e",
          "author": "tk_hamaguchi",
          "description": "記事の概要\nPythonでCLIを作ろうと思った時、rubyでいうところの bundle gem 的なものがないかと探していたところ、hatchに辿り着いたので使い方をメモしておきます。\nこの記事で取り扱うのは下記の内容です。\n\n環境準備\nパッケージの雛形生成\nローカル環境での動作確認\nLintチェック\nテスト\nカバレッジ\nパッケージング\n依存ライブラリの管理\n\n\n 0. 環境準備\nまずは作業用のフォルダと仮想環境を準備する。\n$ mkdir sandbox_hatch\n$ cd sandbox_hatch\n$ python3.11 -m venv venv\n$ source ven...",
          "link": "https://zenn.dev/tk_hamaguchi/articles/788c9f7f2d290e",
          "publishedOn": "2023-10-09T15:21:23.000Z",
          "wordCount": 4537,
          "title": "PythonでCLIを含んだパッケージをhatchで作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M-cAd0jr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7CLI%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592hatch%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk_hamaguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lIb3g3cVdUTDcyQ25MTHFwOVA5Z2lYeW83SGtFdlZoMy11c09BWEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M-cAd0jr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7CLI%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592hatch%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk_hamaguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lIb3g3cVdUTDcyQ25MTHFwOVA5Z2lYeW83SGtFdlZoMy11c09BWEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/understanding_coroutine_in_python",
          "author": "Tamtam",
          "description": "コルーチンの前に..ジェネレータの基本\nコルーチンについていきなり説明する前に、その前提知識となるジェネレータについて解説します。\nPythonの用語集からジェネレータの意味を引用します。\n\n(ジェネレータ) generator iterator を返す関数です。 通常の関数に似ていますが、 yield 式を持つ点で異なります。 yield 式は、 for ループで使用できたり、next() 関数で値を 1 つずつ取り出したりできる、値の並びを生成するのに使用されます。\n\nジェネレータは、イテレーション中に要素を動的に生成するイテレータになります。\n特徴としてはyield を使い「値...",
          "link": "https://zenn.dev/fitness_densuke/articles/understanding_coroutine_in_python",
          "publishedOn": "2023-10-09T12:24:02.000Z",
          "wordCount": 1833,
          "title": "Pythonのコルーチンをそこはかとなく理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bt2-U9mL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25B3%25E3%2582%2592%25E3%2581%259D%25E3%2581%2593%25E3%2581%25AF%25E3%2581%258B%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%258F%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bt2-U9mL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25B3%25E3%2582%2592%25E3%2581%259D%25E3%2581%2593%25E3%2581%25AF%25E3%2581%258B%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%258F%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/y_taiki/articles/aws_sam_setup",
          "author": "taiki",
          "description": "はじめに\nSAMを使って、ローカルでAPI Gatewayを起動し、lambda_function.pyにリクエストできる環境を構築します\n\n SAMとは\nAWSでサーバーレスアプリケーションを構築するためのフレームワークです。\nこのフレームワークを使用することで、AWS Lambda、Amazon API Gateway、およびその他のサーバーレスリソースのアプリケーションを定義、デプロイすることができます。\nSAM CLIを使用すると、ローカルの開発環境でAWS LambdaやAmazon API Gatewayなどを模倣することができます。\n\n 前提\n以下の内容は、インストール...",
          "link": "https://zenn.dev/y_taiki/articles/aws_sam_setup",
          "publishedOn": "2023-10-09T09:14:16.000Z",
          "wordCount": 629,
          "title": "【SAM】Lambda + API Gatewayの開発環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J6pktcVC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SAM%25E3%2580%2591Lambda%2520%252B%2520API%2520Gateway%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmlZZmE0SW5SS29Pbi0xdjBsdDQwR0Z2MHJZVXNFcDJDWDE4Znc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J6pktcVC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SAM%25E3%2580%2591Lambda%2520%252B%2520API%2520Gateway%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmlZZmE0SW5SS29Pbi0xdjBsdDQwR0Z2MHJZVXNFcDJDWDE4Znc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/k5h/articles/243e31ce883eb3",
          "author": "k5h",
          "description": "こんにちは．\n最近論文を提出して研究にひと段落ついたので，実験しながらちょこちょこ作ってたPythonのMarkdown生成ライブラリを公開しました．\n元々は，実験結果を研究室で共有するために，pythonから直接markdown形式の表を直感的に出力できるようにしようと思って作っていました，\n作っているうちに，思ったよりいい感じになってきて，他に人でも役に立てるようなものになったんじゃないかと思ったので，綺麗にラッピングしてPyPIに上げてみました．\nもしよければ使ってみてくれると嬉しいです．\n\n mdfy\n\n\n\n\n\n Installation\npip install mdfy\n\n ど...",
          "link": "https://zenn.dev/k5h/articles/243e31ce883eb3",
          "publishedOn": "2023-10-09T07:48:26.000Z",
          "wordCount": 1238,
          "title": "ちょこちょこ作ってたmarkdown生成ライブラリを公開しました🐍",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G3jldq2l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2593%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2593%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259Fmarkdown%25E7%2594%259F%25E6%2588%2590%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k5h%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YjlhZjQwOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G3jldq2l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2593%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2593%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259Fmarkdown%25E7%2594%259F%25E6%2588%2590%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k5h%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YjlhZjQwOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/whitecat_22/articles/9e0682c17ac818",
          "author": "whitecat_22",
          "description": "はじめに\n先日Django REST Framework（DRF）を利用してAPIを作成しました。\nAPIのドキュメントをつくることも考慮すると、Swaggerのドキュメント生成を基本機能としてサポートしているFastAPIに傾きかけましたが、やはりDjangoの強力な管理機能は業務アプリに欠かせません。\nDRFで作成したAPIのドキュメントを簡単に作成できないかと調べていたところ、少しの工夫でFastAPIと同様にAPIドキュメントを自動作成することができることを知りました。\n今回は、DRFで実装したAPIからAPIドキュメントの作成を自動化する手順をここに残します。\n先人たちの知...",
          "link": "https://zenn.dev/whitecat_22/articles/9e0682c17ac818",
          "publishedOn": "2023-10-09T04:46:27.000Z",
          "wordCount": 857,
          "title": "Django REST FrameworkでのAPI実装からSwagger UIでスキーマを表示してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XZgkSwWv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25A7%25E3%2581%25AEAPI%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%258B%25E3%2582%2589Swagger%2520UI%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XZgkSwWv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25A7%25E3%2581%25AEAPI%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%258B%25E3%2582%2589Swagger%2520UI%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/whitecat_22/articles/b82ee3e7a43011",
          "author": "whitecat_22",
          "description": "背景\n以前からDjangoにおけるWebアプリケーション作成において、ReactやFlutterなどのフロントエンドのフレームワークとの結合を考えております。\n今回は、手始めにフロントエンドにReactを、バックエンドはDjango REST Frameworkを利用したRESTful APIで行なうことを目的にToDoアプリの作成をしながら学習した記録です。\n先人たちの知恵をお借りするなどして解決できたことを、この場をお借りして感謝するとともに、大変恐縮ですが自分のメモとして、こちらへまとめておきます。\n\n はじめに\nReactやPython、Djangoなどの技術仕様も日に日に変...",
          "link": "https://zenn.dev/whitecat_22/articles/b82ee3e7a43011",
          "publishedOn": "2023-10-09T04:43:27.000Z",
          "wordCount": 4505,
          "title": "React+DjangoRESTFramworkでSPAのToDoアプリをつくる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sdo1L5Qz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%252BDjangoRESTFramwork%25E3%2581%25A7SPA%25E3%2581%25AEToDo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sdo1L5Qz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%252BDjangoRESTFramwork%25E3%2581%25A7SPA%25E3%2581%25AEToDo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/datahaikuninja/articles/decode-compressed-response-generated-lambda-edge",
          "author": "datahaikuninja",
          "description": "Lambda@EdgeでHTTPレスポンスを圧縮したら、Viewerのデコードエラーが発生した\nオリジンリクエストトリガーのLambda関数でHTTPレスポンスを圧縮したら、Viewerのデコードエラーが発生してレスポンスボディをロードできなくなる事象が発生しました。\nどのようにエラーを解決したか、備忘録的な記事を書こうと思います。\nLambda@Edgeで圧縮処理を行うのはかなり特殊なケースだと思いますが、同じ事象に困っている人の参考になれば幸いです。\nなお、本記事内のコードはPythonですが、Node.jsでも参考になると思います。\n結論から書くと、Lambda関数がretur...",
          "link": "https://zenn.dev/datahaikuninja/articles/decode-compressed-response-generated-lambda-edge",
          "publishedOn": "2023-10-09T03:35:19.000Z",
          "wordCount": 2089,
          "title": "Lambda@EdgeでHTTPレスポンスを圧縮したら発生した、Viewerのデコードエラーを解決する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8-CDD6i1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lambda%2540Edge%25E3%2581%25A7HTTP%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E3%2580%2581Viewer%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:datahaikuninja%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8-CDD6i1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lambda%2540Edge%25E3%2581%25A7HTTP%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E3%2580%2581Viewer%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:datahaikuninja%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shiki_01/books/my-study-book",
          "author": "shiki-01",
          "description": "プログラマー志望の高校生が勉強したことを自分の備忘録としてまとめるだけ",
          "link": "https://zenn.dev/shiki_01/books/my-study-book",
          "publishedOn": "2023-10-09T02:26:27.000Z",
          "wordCount": 55,
          "title": "一緒に勉強していこうって本",
          "imageUrl": "https://static.zenn.studio/images/logo-only-dark.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}