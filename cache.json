{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/nicktominaga/articles/read_txt_python",
          "author": "Nick",
          "description": "シンプルに、以下のような時系列データを\n\n\n\ntime[s]\ndata\n\n\n\n\n1\n5\n\n\n2\n4\n\n\n3\n3\n\n\n4\n4\n\n\n5\n5\n\n\n\n以下のようなスペース区切りのテキストファイルで扱うとする。\n 1  5  \n 2  4 \n 3  3 \n 4  4 \n 5  5\n\nコードは以下\nimport numpy as np\n\ndata = np.genfromtxt(\"sample.txt\")\n\ndata_x = data[:,0]\ndata_y = data[:,1]\ndata[:,0]の意味は、行全体（左側の：）に沿って、0列目を取ってくる\nという意味。",
          "link": "https://zenn.dev/nicktominaga/articles/read_txt_python",
          "publishedOn": "2023-04-29T15:42:19.000Z",
          "wordCount": 125,
          "title": "pythonでのデータ読み込みメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SDptjzpc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nick%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYzcxZTgzYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SDptjzpc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nick%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYzcxZTgzYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/andoando/articles/60331fc517c17e",
          "author": "あんどう",
          "description": "はじめに\nこんにちは、あんどうです。今回はPytorchでピザの画像を分類する簡単な画像分類モデルを作成していきたいと思います。\n\n ライブラリ類の準備\nfrom torch import optim\nfrom torch import nn # ネットワークや各種レイヤー\nfrom torch.nn import functional #より詳しいレイヤー\nfrom torch.utils.data import DataLoader\nfrom torchvision import datasets # 画像データセットのモジュール\nfrom torchvision import ...",
          "link": "https://zenn.dev/andoando/articles/60331fc517c17e",
          "publishedOn": "2023-04-29T09:20:00.000Z",
          "wordCount": 3960,
          "title": "Pytorchでピザ判定機を作る🍕",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--50JxjUBm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch%25E3%2581%25A7%25E3%2583%2594%25E3%2582%25B6%25E5%2588%25A4%25E5%25AE%259A%25E6%25A9%259F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--50JxjUBm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch%25E3%2581%25A7%25E3%2583%2594%25E3%2582%25B6%25E5%2588%25A4%25E5%25AE%259A%25E6%25A9%259F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/5ed9ca8c7a63db",
          "author": "hodakam",
          "description": "ある程度のまとまりで能動学習をする\nこの記事に能動学習の一般的な手法について記載しました。その中で次の学習データを決めるときに1つの候補ではなく、複数の候補をまとめて提案するという方法があると書きました。後者はbatch active learningといいます。特に化学実験を行うようなケースでは、次の学習候補を一つ一つ提案するのではなく、ある程度まとまった単位で学習する方が作業面で効率的なケースもあります。\nまた、次に学習すべきデータは予測の不確実性やデータ密度などの指標によって選択され、これらを単独で用いるだけでなく、組み合わせて使うこともあると書きました。\nこれらの両者を組み合...",
          "link": "https://zenn.dev/hodakam/articles/5ed9ca8c7a63db",
          "publishedOn": "2023-04-29T07:30:03.000Z",
          "wordCount": 1195,
          "title": "ランク付けバッチ能動学習（Ranked batch-mode active learning）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--69B9S4TY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%2591%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25EF%25BC%2588Ranked%2520batch-mode%2520active%2520learning%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--69B9S4TY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%2591%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25EF%25BC%2588Ranked%2520batch-mode%2520active%2520learning%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/dc749aab5b95e7",
          "author": "hodakam",
          "description": "効率的に学習データを選ぶための戦略\n機械学習をやっていると、\"モデルの精度を上げるためにはデータが足りないです。増やしましょう！\"的なシチュエーションに遭遇します。このとき、実際どういうデータを増やしたらいいんでしょう？データが少ない場合は、ドメイン知識に明るい人が人力で選ぶという手もありますが、候補データがたくさんある場合は自動でいい感じに選択する必要があります。この”モデルの精度を上げるために自動でいい感じにデータを選択する”ということを実現する手法の一つが能動学習 (active learning)です。\n能動学習は大きく分けて、\n\n次の学習データをどうやって用意するか？(sa...",
          "link": "https://zenn.dev/hodakam/articles/dc749aab5b95e7",
          "publishedOn": "2023-04-29T07:25:55.000Z",
          "wordCount": 309,
          "title": "能動学習を雰囲気で理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tTaZWseP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tTaZWseP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mul/articles/20230429_01_test",
          "author": "MulciEla",
          "description": "Windows 2019Server(Windows10でも同じ)\nPython 3.7.8\n\n Pythonをインストール\npython-3.7.8.exeを使用してインストール\n今回は諸事情で32bit版をインストールしていますが64bit版でも問題ないはず\n\n ライブラリのインストール\nWindowsサービスということで今回はpywin32を使用する\npip install pywin32\n※もし上記のコマンドで64bit版のpywin32がインストールされてしまう場合は32bit版の.whlファイルを事前に準備し直接指定してインストールを行いましょう\n\n 環境変数\n以下の6つの環...",
          "link": "https://zenn.dev/mul/articles/20230429_01_test",
          "publishedOn": "2023-04-28T18:45:39.000Z",
          "wordCount": 918,
          "title": "PythonでWindows サービス(SocketServer)を作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bOVKgmad--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Windows%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2528SocketServer%2529%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MulciEla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeHZUSlZBTUI4SWNDbVVRNWRUWVhockMzWEZxX2ZsYi0wdkFQYng9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bOVKgmad--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Windows%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2528SocketServer%2529%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MulciEla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeHZUSlZBTUI4SWNDbVVRNWRUWVhockMzWEZxX2ZsYi0wdkFQYng9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dms_sub/articles/39isji929iwj92jd",
          "author": "tuna2134",
          "description": "はじめに\nこの記事はどのような言語を使うと適切なのか、もしくはどのようなライブラリを使うといいのかについて解説します。\n\n まずライブラリーから\nライブラリって似たようなものがたくさんありますよね？そんな時どれつかえばいいのかわからな〜いって感じになるのがよくあります。\n僕は基本以下に注目して、選定しています。\n\n更新頻度が一年以内に行われている、すなわち活発(これに関しては、ライブラリーのコードが古く言語かなんかのアップデートで使えなくなる可能性があるため)\nドキュメントなどがしっかり整備されている(これは説明などどう使えばいいのかわかるやつのが好ましい)\n自分にとって効率的にかけ...",
          "link": "https://zenn.dev/dms_sub/articles/39isji929iwj92jd",
          "publishedOn": "2023-04-28T15:41:39.000Z",
          "wordCount": 98,
          "title": "ライブラリー選定で僕が大事にしていること",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y0fDi6WW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%25A7%25E5%2583%2595%25E3%2581%258C%25E5%25A4%25A7%25E4%25BA%258B%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y0fDi6WW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%25A7%25E5%2583%2595%25E3%2581%258C%25E5%25A4%25A7%25E4%25BA%258B%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maybe_dog/articles/1c37ca514dc35e",
          "author": "おそらく犬",
          "description": "はじめに\nこんにちは。23卒エンジニア1年目のおそらく犬です。\nPythonについて何も分からないのでこの機に勉強しようと思います。\n今回は言語リファレンスの1,2章を見ていきます。なかなかに辛い期間が続きます。\n\n チュートリアル\n言語を学びたいときに初めに見るべきは公式のドキュメントです。間違っても待エソジニアではありません。\nこちらがPython公式チュートリアルです。\nhttps://docs.python.org/ja/3/tutorial/index.html\nそれでは読んでいきましょう。\n\n Pythonチュートリアル\n\nPython は強力で、学びやすいプログラミング...",
          "link": "https://zenn.dev/maybe_dog/articles/1c37ca514dc35e",
          "publishedOn": "2023-04-28T14:51:25.000Z",
          "wordCount": 2163,
          "title": "pythonを完全に理解しよう その1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TqhUMWEG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2520%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%259D%25E3%2582%2589%25E3%2581%258F%25E7%258A%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MTA2ZjRmM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TqhUMWEG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2520%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%259D%25E3%2582%2589%25E3%2581%258F%25E7%258A%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MTA2ZjRmM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/380ca6716a3de6",
          "author": "Daphnia",
          "description": "1. Flaskでアプリ作成\nFlaskアプリの構築についてはこちらを参考にしてください。\nhttps://zenn.dev/daphnia/articles/890a85c7b20250\n\n 2. NginxとFlask通信\n上記で作成したFlaskアプリにアクセスする前段階にNGINXを置いてアクセスをしてみようと思います。\n通信：　クライアント -> NGINX -> Gunicorn -> Flask\n\n ディレクトリ\n.\n├─ flask # 構成は前のブログ参照\n├─ nginx\n    ├─ Dockerfile\n    ├─ nginx.conf\n ...",
          "link": "https://zenn.dev/daphnia/articles/380ca6716a3de6",
          "publishedOn": "2023-04-28T14:26:06.000Z",
          "wordCount": 885,
          "title": "FlaskとNGINXで繋いでみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5X3n86JF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A8NGINX%25E3%2581%25A7%25E7%25B9%258B%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5X3n86JF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A8NGINX%25E3%2581%25A7%25E7%25B9%258B%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koujimachi2023/articles/b6bde79e73dd1d",
          "author": "おいしい",
          "description": "おいたん、怪文書を自動生成しちゃうのら・・・😁\n!\n\n本記事の内容およびコードは稲葉百万鉄氏の「どうぶつの森e+実況プレイ(https://www.nicovideo.jp/mylist/45062007)」のファン作品です。\n「どうぶつの森e+」および稲葉百万鉄氏の「どうぶつの森e+実況プレイ」のネタバレを含みます。\n自然言語処理初心者かつ独学での勉強のため、間違っている点・至らない点あるかと存じます。何卒ご容赦ください。\n\n\n\n Highlights\n\nイナババ怪文書をrinna/japanese-gpt2-mediumで学習\nズッポシむらの住民名や固有の表現を含んだ怪文書の自動...",
          "link": "https://zenn.dev/koujimachi2023/articles/b6bde79e73dd1d",
          "publishedOn": "2023-04-28T14:17:45.000Z",
          "wordCount": 2644,
          "title": "GPT-2をファインチューニングしてイナババ怪文書を自動生成するAIを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2wspSfaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-2%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BAI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2wspSfaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-2%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BAI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/890a85c7b20250",
          "author": "Daphnia",
          "description": "1. Flaskでアプリを作成してみよう\n\n ディレクトリ\n.\n├─ tamplates\n    ├─ indes.html\n├─ app.py\n├─ Dockerfile\n├─ gunicorn.py\n└─ requirements.txt\n\n ソースコード\napp.pyの内容は以下になります。\n\npy\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.get('/')\ndef index():\n    return render_template('index.html')\n\n\nhtml\n&...",
          "link": "https://zenn.dev/daphnia/articles/890a85c7b20250",
          "publishedOn": "2023-04-28T12:56:31.000Z",
          "wordCount": 888,
          "title": "FlaskアプリのデプロイにGunicornを使用してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TZqUC_7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25ABGunicorn%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TZqUC_7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25ABGunicorn%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/collabostyle/articles/3d0f210c59679e",
          "author": "なるお",
          "description": "初めまして！\nなるおと申します！\n初めてのZenn記事です！\n今回はYOLOというライブラリを使って、画像内のオブジェクト検出と座標取得をしてみたいと思います！\n↓こんなの\n\n\n YOLOって？\n画像や映像ストリーム内のオブジェクト検出アルゴリズムです。\nYou Only Look Onceの頭文字をとっており、人間と同じく、一目見たら物体検出できるという意味らしいです。\nYOLOには複数のバージョンがあり、2023/04/23現在で v8となっています。\n\n 本記事の前提\nYOLO CLIもpipを使ってインストールするため、Pythonのインストールは必須ですね。\nPythonのイン...",
          "link": "https://zenn.dev/collabostyle/articles/3d0f210c59679e",
          "publishedOn": "2023-04-28T10:58:40.000Z",
          "wordCount": 996,
          "title": "YOLOを使ってオブジェクト検出と座標取得をしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ejp5aoV_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YOLO%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%25A8%25E5%25BA%25A7%25E6%25A8%2599%25E5%258F%2596%25E5%25BE%2597%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258A%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YnUzNDNyeWU1dURpcERqZ3o3MzFQM0M4TjBVcnd6cnMzVDJoamM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ejp5aoV_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YOLO%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%25A8%25E5%25BA%25A7%25E6%25A8%2599%25E5%258F%2596%25E5%25BE%2597%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258A%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YnUzNDNyeWU1dURpcERqZ3o3MzFQM0M4TjBVcnd6cnMzVDJoamM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/e875348a8af484",
          "author": "よしだ",
          "description": "連載している記事の１つです。以前までの記事を読んでいる前提で書いているので、必要であればNumPyroの記事一覧から各記事を参考にしてください。\n\n はじめに\n今回はベイジアンABテストを扱います。各ケースにおいて適切に事前分布等を設計するなど手間はかかりますが、最終的にBがAより優れている/効果があった確率は◯%というような結果が出てくるので、次のアクションを決める意思決定に向いています。\nベイジアンABテストはいろいろな企業で導入されており以下のように紹介記事も多いので、今回はNumPyroでの実装を簡単にだけ紹介して終わりにします。\nhttps://engineering.merc...",
          "link": "https://zenn.dev/yoshida0312/articles/e875348a8af484",
          "publishedOn": "2023-04-28T10:27:44.000Z",
          "wordCount": 1656,
          "title": "NumPyro：ベイジアンABテスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JZ8XEB2d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25B8%25E3%2582%25A2%25E3%2583%25B3AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JZ8XEB2d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25B8%25E3%2582%25A2%25E3%2583%25B3AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/carushi/articles/0b74dd27b9aeac",
          "author": "carushi",
          "description": "目的\nAnacondaを使って環境管理をしつつ、Jupyter-labでそれぞれの環境下にあるPythonを別のカーネルとして呼びたい。\nJupyterとそこで呼び出されるカーネル・ターミナルの違いを正しく理解する。\n\n InstallしたはずのパッケージがJupyter上で動かない\nまず作業のために新たな環境を作成し、その環境をactivateした上でJupyter-labを走らせました。しかし、Jupyter上で動くカーネルはJupyterが走っている環境とは必ずしも一致しないので、以下のコマンドを走らせて呼び出されるpythonと、Jupyter notebook上でコードを実...",
          "link": "https://zenn.dev/carushi/articles/0b74dd27b9aeac",
          "publishedOn": "2023-04-28T05:47:21.000Z",
          "wordCount": 213,
          "title": "Jupyter Notebook (Lab)上で目当てのPythonが呼べないときの覚書",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XwuCgMDd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2520Notebook%2520%2528Lab%2529%25E4%25B8%258A%25E3%2581%25A7%25E7%259B%25AE%25E5%25BD%2593%25E3%2581%25A6%25E3%2581%25AEPython%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B9%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E8%25A6%259A%25E6%259B%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:carushi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZjJiZDViMzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XwuCgMDd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2520Notebook%2520%2528Lab%2529%25E4%25B8%258A%25E3%2581%25A7%25E7%259B%25AE%25E5%25BD%2593%25E3%2581%25A6%25E3%2581%25AEPython%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B9%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E8%25A6%259A%25E6%259B%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:carushi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZjJiZDViMzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b5e631c4b34edd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-215 B - log2(N)\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    i = 0\n    while 2 ** (i + 1) <= n:\n        i += 1\n    print(i)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b5e631c4b34edd",
          "publishedOn": "2023-04-28T03:50:37.000Z",
          "wordCount": 251,
          "title": "［AtCoder］ABC-215｜B - log2(N)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HP_z1HZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CB%2520-%2520log2%2528N%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HP_z1HZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CB%2520-%2520log2%2528N%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a5b4756d2cb87d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-215 A - Your First Judge\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('AC' if s == 'Hello,World!' else 'WA')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/a5b4756d2cb87d",
          "publishedOn": "2023-04-28T03:50:36.000Z",
          "wordCount": 225,
          "title": "［AtCoder］ABC-215｜A - Your First Judge",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CaHrjLy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CA%2520-%2520Your%2520First%2520Judge%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CaHrjLy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CA%2520-%2520Your%2520First%2520Judge%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/team_delta/articles/3ee759ceda3092",
          "author": "EjiOsa",
          "description": "はじめに\n株式会社DELTA　エンジニアの長田（おさだ）です。\n前回はゴミ箱センサーの開発スタイルについて書かせていただきましたが、今回はゴミ箱センサーの技術的な部分を備忘録として記事にしたいと思います。\nRaspberry Pi Pico Wの工事設計認証（いわゆる技適）の取得および表示手順が完了したため2023年3月27日に日本でも発売されました。\n前回の記事ではRaspberry Pi Picoを使用していましたが、Raspberry Pi Pico WにはWi-Fi機能が追加されており、せっかくなのでゴミ箱センサーにもWi-Fiを使用した機能を追加しています。\n\n\n 開発環境...",
          "link": "https://zenn.dev/team_delta/articles/3ee759ceda3092",
          "publishedOn": "2023-04-28T00:11:15.000Z",
          "wordCount": 3850,
          "title": "Raspberry Pi Pico Wのゴミ箱センサー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CryVgyJd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Pico%2520W%25E3%2581%25AE%25E3%2582%25B4%25E3%2583%259F%25E7%25AE%25B1%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DELTA%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:EjiOsa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjRiYjM4NGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTAzX3R6cUR5cUx3YVBmcElPSERmMEtMY0VDZm91QWVqZWMxdkJaZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CryVgyJd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Pico%2520W%25E3%2581%25AE%25E3%2582%25B4%25E3%2583%259F%25E7%25AE%25B1%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DELTA%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:EjiOsa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjRiYjM4NGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTAzX3R6cUR5cUx3YVBmcElPSERmMEtMY0VDZm91QWVqZWMxdkJaZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/099c1c05c81e89",
          "author": "よしだ",
          "description": "はじめに\n今回は次元圧縮としてベイジアン主成分分析とその拡張であるautomatic relevance determination(ARD)付き主成分分析を扱います。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import load_iris\nfrom s...",
          "link": "https://zenn.dev/yoshida0312/articles/099c1c05c81e89",
          "publishedOn": "2023-04-27T16:32:58.000Z",
          "wordCount": 2750,
          "title": "NumPyro：次元圧縮",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--syH9_N8m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A1%25E5%2585%2583%25E5%259C%25A7%25E7%25B8%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--syH9_N8m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A1%25E5%2585%2583%25E5%259C%25A7%25E7%25B8%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/andoando/articles/8505774e50ae4a",
          "author": "あんどう",
          "description": "はじめに\nこんにちは、あんどうです。Kaggleなどでテーブルデータのコンペでは一般にGBDT系のモデル(LightGBMとか)がよく使われますが、深層学習モデルではどのくらいの精度を出すことができるんだろう？と気になったので今回はシンプルなNNを用いてKaggleのSpaceship Titanic（初心者用の常設コンペ）を解いていこうと思います。\n\n データ確認\n今回使っていくデータを確認します。\nBASE = \"path_to_dir\"\n\ntrain = pd.read_csv(BASE+\"train.csv\")\ntest = pd.read_csv(BASE+\"test.cs...",
          "link": "https://zenn.dev/andoando/articles/8505774e50ae4a",
          "publishedOn": "2023-04-27T13:53:48.000Z",
          "wordCount": 3520,
          "title": "[Kaggle]Spaceship titanicをNNで解く①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nhpnTIcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKaggle%255DSpaceship%2520titanic%25E3%2582%2592NN%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nhpnTIcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKaggle%255DSpaceship%2520titanic%25E3%2582%2592NN%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tomlab/books/d4df1e3f76a1ba",
          "author": "tomr",
          "description": "この本では「web3.py」,「Flask」により、簡単なWebアプリケーションを実装し、Web3を体験します。",
          "link": "https://zenn.dev/tomlab/books/d4df1e3f76a1ba",
          "publishedOn": "2023-04-27T06:57:29.000Z",
          "wordCount": 75,
          "title": "【Flask】web3.pyで簡単なWeb3アプリを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MMcaxYEE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80YjFkNTVlOWEzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MMcaxYEE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80YjFkNTVlOWEzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/84762a9eb3add5",
          "author": "よしだ",
          "description": "はじめに\n今回は、MCMCで常微分方程式のパラメータを推論する方法を見ていきます。MCMCでパラメータ推論することで物理法則などの事前知識の導入や不確実性を考慮しながら、多変数のパラメータ最適化をバランスよく実施できることが期待できます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport nu...",
          "link": "https://zenn.dev/yoshida0312/articles/84762a9eb3add5",
          "publishedOn": "2023-04-27T05:08:08.000Z",
          "wordCount": 3006,
          "title": "NumPyro：ODE",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3rEUIiwB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:NumPyro%25EF%25BC%259AODE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3rEUIiwB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:NumPyro%25EF%25BC%259AODE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e245f9ce297698",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-214 B - How many?\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    s, t = getIntMap()\n\n    c = 0\n    for i in range(s + 1):\n        for j in range(s + 1 - i):\n            for k in range(s + 1 - i - j):\n                if i * j * k <= t:\n           ...",
          "link": "https://zenn.dev/hyperdb/articles/e245f9ce297698",
          "publishedOn": "2023-04-27T04:06:59.000Z",
          "wordCount": 366,
          "title": "［AtCoder］ABC-214｜B - How many?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--geZgJYxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CB%2520-%2520How%2520many%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--geZgJYxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CB%2520-%2520How%2520many%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d648bd7fa1fbb5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-214 A - New Generation ABC\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(4 if n <= 125 else 6 if n <= 211 else 8)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d648bd7fa1fbb5",
          "publishedOn": "2023-04-27T04:06:58.000Z",
          "wordCount": 253,
          "title": "［AtCoder］ABC-214｜A - New Generation ABC",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b4ra7sJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CA%2520-%2520New%2520Generation%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b4ra7sJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CA%2520-%2520New%2520Generation%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tomlab/books/71f3950b51f319",
          "author": "tomr",
          "description": "この本では、「Flask」および「Real-ESRGAN」を用いて、画像を高解像度化（画質を向上）するWebアプリケーションを実装します。",
          "link": "https://zenn.dev/tomlab/books/71f3950b51f319",
          "publishedOn": "2023-04-27T01:58:49.000Z",
          "wordCount": 77,
          "title": "【Flask】画像を高解像度化するWebアプリケーションを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QSxAXVkK--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mODg0MzdjYjMzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QSxAXVkK--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mODg0MzdjYjMzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/d0e4c36d94d26b",
          "author": "よしだ",
          "description": "はじめに\n今回は実務でもよくある欠損値がデータにある際の取り扱い方をみていきます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport numpyro\nfrom numpyro.diagnostics import hpdi\nimport numpyro.distributions as dis...",
          "link": "https://zenn.dev/yoshida0312/articles/d0e4c36d94d26b",
          "publishedOn": "2023-04-26T14:31:58.000Z",
          "wordCount": 3327,
          "title": "NumPyro：欠損値の扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dA9r636p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A0%25E6%2590%258D%25E5%2580%25A4%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dA9r636p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A0%25E6%2590%258D%25E5%2580%25A4%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/piment/articles/24269616aa9c04",
          "author": "ぴーまん",
          "description": "現状のwhisper、whisper.cpp、faster-whiperを比較してみたいと思います。\nopenai/whisperに、2022年12月にlarge-v2モデルが追加されたり、色々バージョンアップしていたりと公開からいろいろと進化しているようです。\nhttps://github.com/openai/whisper\nCPU向けにC/C++で書かれたバージョンです。Core ML supportだそうですので、Mac向け感が強いです。\nhttps://github.com/ggerganov/whisper.cpp\nCTranslate2でWhisperモデルの書き直して、オ...",
          "link": "https://zenn.dev/piment/articles/24269616aa9c04",
          "publishedOn": "2023-04-26T14:30:58.000Z",
          "wordCount": 674,
          "title": "whisper、whisper.cpp、faster-whisperの比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CAUWjswT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:whisper%25E3%2580%2581whisper.cpp%25E3%2580%2581faster-whisper%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CAUWjswT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:whisper%25E3%2580%2581whisper.cpp%25E3%2580%2581faster-whisper%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fastsnowy/articles/adc106a4a03dc1",
          "author": "fastsnowy",
          "description": "はじめに\n個人的に作った環境構築方法なのでベストプラクティスではない可能性もあります\n今回はUbuntu20.04のイメージを使ってCUDA11.7でPytorchのtorch=1.13.1を構築する\ntorch.cuda.is_available()でTrueが返ってきたら成功\n\nPythonのバージョン管理にはasdfを使う\nvenv or Poetryで環境を作る\n\nhttps://asdf-vm.com/\n\n 開発環境\nVSCodeを前提\nDocker拡張機能をインストール\nhttps://marketplace.visualstudio.com/items?itemName...",
          "link": "https://zenn.dev/fastsnowy/articles/adc106a4a03dc1",
          "publishedOn": "2023-04-26T07:05:01.000Z",
          "wordCount": 1334,
          "title": "Dockerで研究用Python環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ojIhjCTF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E7%25A0%2594%25E7%25A9%25B6%25E7%2594%25A8Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastsnowy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3YWNlYjIyOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ojIhjCTF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E7%25A0%2594%25E7%25A9%25B6%25E7%2594%25A8Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastsnowy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3YWNlYjIyOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/systemzeus_blog/articles/sms_forwarding_bot",
          "author": "m-minamisaka",
          "description": "1. はじめに\n複数人で使用する共通アカウントのSMS認証にて、認証コードが特定の1台の携帯にしか送信されないことによる不便さを解決するためのボットを作成しました。SIM付きRaspberry Pi(ラズパイ)にて認証コードを受信しSlackに転送することで、共通アカウントを使用する全員に認証コードを通知することができます。ここでは認証コードを転送するラズパイをSMS転送ボットと呼び、SMS転送ボットのプログラムをGitHubに公開し、SMS転送ボットの設定方法を説明します。\n\n 2. デモ\nSMS認証が必要なクラウドにログインし、認証コードをSlackで受信してる様子です。\n\n\n ...",
          "link": "https://zenn.dev/systemzeus_blog/articles/sms_forwarding_bot",
          "publishedOn": "2023-04-26T06:49:38.000Z",
          "wordCount": 284,
          "title": "SMS認証コードをラズパイでSlackに転送してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kYkZnyo3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SMS%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2581%25A7Slack%25E3%2581%25AB%25E8%25BB%25A2%25E9%2580%2581%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25BC%25E3%2582%25A6%25E3%2582%25B9%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:m-minamisaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlNTg5MzI2NDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkM2RkMzFmZmMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kYkZnyo3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SMS%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2581%25A7Slack%25E3%2581%25AB%25E8%25BB%25A2%25E9%2580%2581%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25BC%25E3%2582%25A6%25E3%2582%25B9%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:m-minamisaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlNTg5MzI2NDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkM2RkMzFmZmMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/masahiro_kaneko/articles/ab0b643bee1654",
          "author": "MasahiroKaneko",
          "description": "コマンド\ndef translate(text):\n\n    result = requests.get( \n                \"https://api.deepl.com/v2/translate\", # 無料版の場合はhttps://api-free.deepl.com/v2/translate\n                params={ \n                \"auth_key\": \"Your API Key\", # サイトで取得した認証キー\n                \"target_lang\": \"JA\", # 翻訳先の言語\n      ...",
          "link": "https://zenn.dev/masahiro_kaneko/articles/ab0b643bee1654",
          "publishedOn": "2023-04-26T06:46:34.000Z",
          "wordCount": 232,
          "title": "DeepLのAPIをpythonで使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GyQeUWmF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DeepL%25E3%2581%25AEAPI%25E3%2582%2592python%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MasahiroKaneko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hrZVIzWU5UNVVzVXI5Yl81MTB0LXhjeTlOOXlhWlVWeWRvMnJRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GyQeUWmF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DeepL%25E3%2581%25AEAPI%25E3%2582%2592python%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MasahiroKaneko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hrZVIzWU5UNVVzVXI5Yl81MTB0LXhjeTlOOXlhWlVWeWRvMnJRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nen/books/e7ffc3397dbb67",
          "author": "sre_yoshiya",
          "description": "本書は、Google Cloud Dataflow の基本的な概念から応用的なテクニックまでを網羅した実践的なガイドブックです。Cloud Dataflow  は、分散データ処理を行うためのオープンソースのプラットフォームであり、大規模なデータ処理において高いパフォーマンスを発揮します。本書では、Cloud Dataflow  の特徴やアーキテクチャについて解説し、リアルワールドでの分散データ処理の実装方法について詳しく説明します。\n\n\n\n本書は、分散データ処理に興味があるデータエンジニア、データサイエンティスト、システムアーキテクト、データベース管理者などの技術者を対象としています。また、Cloud Dataflow や Apache Beam についての事前知識は必須ではありませんが、プログラミング経験がある方にはより理解しやすい内容となっています。\n\n\n\n本書を読むことで、以下のようなメリットがあります。\n\nCloud Dataflow や Apache Beam の基本的な概念を理解することができます。\n大規模なデータ処理におけるパフォーマンス改善に役立つテクニックを学ぶことができます。\nリアルワールドでのデータ処理の実装方法を知ることができます。\nGoogle Cloud Platform 上での分散データ処理に必要なスキルを習得できます。\nApache Beam を用いたポータブルなデータ処理の方法を学ぶことができます。\n本書は、Cloud Dataflow と Apache Beam の基礎から実践的なテクニックまでを網羅した実践的なガイドブックであり、Google Cloud Platform 上での分散データ処理に興味のある技術者にとって、非常に役立つリソースとなるでしょう。",
          "link": "https://zenn.dev/nen/books/e7ffc3397dbb67",
          "publishedOn": "2023-04-26T06:01:54.000Z",
          "wordCount": 177,
          "title": "apache beamのマネージドサービスdataflowで体験する分散データ処理ETL パイプライン",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uqhjLag---/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hOTU2YmUwMGYwLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uqhjLag---/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hOTU2YmUwMGYwLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b95065cc37c735",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-213 A - Bitwise Exclusive Or\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(a ^ b)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b95065cc37c735",
          "publishedOn": "2023-04-26T03:46:04.000Z",
          "wordCount": 229,
          "title": "［AtCoder］ABC-213｜A - Bitwise Exclusive Or",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZPxqscl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-213%25EF%25BD%259CA%2520-%2520Bitwise%2520Exclusive%2520Or%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZPxqscl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-213%25EF%25BD%259CA%2520-%2520Bitwise%2520Exclusive%2520Or%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8c6c3699ca823c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-213 B - Booby Prize\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    b = dict()\n    for i in range(n):\n        b[a[i]] = i + 1\n    c = sorted(b.items())\n\n    print(c...",
          "link": "https://zenn.dev/hyperdb/articles/8c6c3699ca823c",
          "publishedOn": "2023-04-26T03:46:03.000Z",
          "wordCount": 359,
          "title": "［AtCoder］ABC-213｜B - Booby Prize",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BQ63ZdlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-213%25EF%25BD%259CB%2520-%2520Booby%2520Prize%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BQ63ZdlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-213%25EF%25BD%259CB%2520-%2520Booby%2520Prize%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-side-business",
          "author": "gk12",
          "description": "こんにちは。今回は、Pythonについて初心者エンジニア向けて、フリーランスや副業としての活用方法について解説します。\n\n はじめに\nPythonは、機械学習やデータ分析、Webアプリケーション開発など、様々な分野で利用されるプログラミング言語です。そのため、Pythonを使ったフリーランスや副業のニーズも高まっています。本記事では、Pythonをフリーランスや副業として活用するための方法について解説します。\n\n フリーランスとしてのPython活用方法\nフリーランスとしてPythonを活用する方法は、大きく分けて2つあります。1つは、Pythonを使ったWebアプリケーション開発やデー...",
          "link": "https://zenn.dev/gk12/articles/python-side-business",
          "publishedOn": "2023-04-26T02:29:31.000Z",
          "wordCount": 120,
          "title": "初心者エンジニアのためのPythonフリーランス副業入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6Tpk7Kvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E5%2589%25AF%25E6%25A5%25AD%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6Tpk7Kvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E5%2589%25AF%25E6%25A5%25AD%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/asopitech/articles/20230425-214748_1",
          "author": "あそぴテック",
          "description": "!\nChatGPT-4 の情報をまとめて本にしました。基本からまとめて学習したい方はぜひ！\n\n\n\n Python の AWS CDK に Terraform のコードを移行させてみた\nTerrformのコード、とっ散らかっておりまして…\nもうちょっと整理したいけどどうしようもないので CDK を試してみたいけどAPIのリファレンス見てみるとめっちゃハードル高そうじゃん…\nと、腰が引けておりましたが、ChatGPTのコード変換、やらせられないか試してみました。\n今回も GPT-4 使っております。\n\n そもそもTerrformとかCDK知ってる？\nそもそもですが、知識があるかちょっと聞いて...",
          "link": "https://zenn.dev/asopitech/articles/20230425-214748_1",
          "publishedOn": "2023-04-26T00:00:00.000Z",
          "wordCount": 2095,
          "title": "[2023年4月版]TerraformからPythonのCDKへの移行もChatGPTでなんとか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OVEX9AFo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B44%25E6%259C%2588%25E7%2589%2588%255DTerraform%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25AECDK%25E3%2581%25B8%25E3%2581%25AE%25E7%25A7%25BB%25E8%25A1%258C%25E3%2582%2582ChatGPT%25E3%2581%25A7%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%259D%25E3%2581%25B4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzYWRiZGU0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OVEX9AFo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B44%25E6%259C%2588%25E7%2589%2588%255DTerraform%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25AECDK%25E3%2581%25B8%25E3%2581%25AE%25E7%25A7%25BB%25E8%25A1%258C%25E3%2582%2582ChatGPT%25E3%2581%25A7%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%259D%25E3%2581%25B4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzYWRiZGU0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bonsai_engineer/articles/5e642ba35b9696",
          "author": "盆栽エンジニア",
          "description": "ChatGPTに元気づける一言をもらい、その返答をe-Paperに表示するものをラズパイを使用して作成してみたので作り方を共有します。\nRaspberryPi Zero WHと電子ペーパーモジュール for RaspberryPiを使えば5,000円ほどで作成できます。\n簡単なので試してみてください！\n\n 必要なもの\n\nRasberryPi\n2×20のピンソケットがついているもの、WiFiモジュールがついているものがいい\nRaspberry Pi Zero WH、Raspberry Pi4、Raspberry Pi3など\n私が購入使ったものはこちら\n\ne-Paper\nfor Raspb...",
          "link": "https://zenn.dev/bonsai_engineer/articles/5e642ba35b9696",
          "publishedOn": "2023-04-25T16:02:55.000Z",
          "wordCount": 341,
          "title": "ChatGPTからの一言をラズパイで表示しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--evh0XGvT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E4%25B8%2580%25E8%25A8%2580%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--evh0XGvT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E4%25B8%2580%25E8%25A8%2580%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/226a7bc6cec32a",
          "author": "よしだ",
          "description": "はじめに\n今回は打ち切りデータを扱います。NumPyroには打ち切りデータをいろんな分布に適用できる便利クラスが用意されているので簡単に実装できます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport numpyro\nfrom numpyro.diagnostics import hpdi\ni...",
          "link": "https://zenn.dev/yoshida0312/articles/226a7bc6cec32a",
          "publishedOn": "2023-04-25T08:30:12.000Z",
          "wordCount": 1338,
          "title": "NumPyro：打ち切りデータの扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--onUhyW_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%2589%2593%25E3%2581%25A1%25E5%2588%2587%25E3%2582%258A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--onUhyW_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%2589%2593%25E3%2581%25A1%25E5%2588%2587%25E3%2582%258A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/40c9e0cf271c7d",
          "author": "seiyakitazume",
          "description": "Auto-GPTの特徴\n\n検索、情報収集のためのインターネットアクセス\n（人気のあるウェブサイトやプラットフォームへのアクセス等）\n長期および短期のメモリ管理（例えば、過去に実施した検索を記憶します。）\n調べた内容をドキュメントに保存してくれる\n\n\n 環境要件\n\nPython3.8以降\n\nWelcome to Python.org\n\nOPENAI API key\nPINECONE API key\n\n\n Auto-GPTのインストール\nインストール手順　※Pythonをインストールした上で実施してください。\n下記コードをcmdまたはターミナルで実行します。\ngit clone http...",
          "link": "https://zenn.dev/seiyakitazume/articles/40c9e0cf271c7d",
          "publishedOn": "2023-04-25T06:19:02.000Z",
          "wordCount": 962,
          "title": "リサーチ自動化のauto-GPTの詳細をまとめました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v3cpOoZC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2581%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%25AEauto-GPT%25E3%2581%25AE%25E8%25A9%25B3%25E7%25B4%25B0%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v3cpOoZC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2581%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%25AEauto-GPT%25E3%2581%25AE%25E8%25A9%25B3%25E7%25B4%25B0%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/543865c00cea22",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-212 B - Weak Password\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef gap(n, m):\n    return (10 if n == 0 else n) - m\n\n\ndef main():\n    x = list(map(int, getString()))\n    y = [gap(x[i + 1], x[i]) for i in range(len(x) - 1)]\n\n    r = 'Strong'\n    if len(set(x)) == 1:\n        r = ...",
          "link": "https://zenn.dev/hyperdb/articles/543865c00cea22",
          "publishedOn": "2023-04-25T04:32:22.000Z",
          "wordCount": 443,
          "title": "［AtCoder］ABC-212｜B - Weak Password",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--spIZKx0C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-212%25EF%25BD%259CB%2520-%2520Weak%2520Password%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--spIZKx0C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-212%25EF%25BD%259CB%2520-%2520Weak%2520Password%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/48a034b929c2fd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-212 A - Alloy\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print('Alloy' if a > 0 and b > 0 else 'Gold' if b == 0 else 'Silver')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/48a034b929c2fd",
          "publishedOn": "2023-04-25T04:32:22.000Z",
          "wordCount": 273,
          "title": "［AtCoder］ABC-212｜A - Alloy",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uj-ZCXk---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-212%25EF%25BD%259CA%2520-%2520Alloy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uj-ZCXk---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-212%25EF%25BD%259CA%2520-%2520Alloy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryotashona/articles/50070fe569876d",
          "author": "ryotashona",
          "description": "作ったもの\nスラッシュコマンドで下記ができます。\n\n匿名投稿\n匿名スタンプ(リアクション)\n匿名スレッド投稿\n\nhttps://github.com/ryotashona/slack_tokumeisan\nSlackのアプリ作成/設定をして環境変数を定義、任意のサーバーにデプロイすれば使えると思います。\n\n 背景\n不満、要望や提案をするときに、いわいゆる「言い出しっぺの法則」が嫌いです。これのために、アイデアを思いついても自分の中にしまっている人がいるでしょう。\nならば、匿名で投稿できる仕組みを作ってしまえば？と思った次第です。チャンスを逃したくない。風通しを良くしたい。\n\n すでに...",
          "link": "https://zenn.dev/ryotashona/articles/50070fe569876d",
          "publishedOn": "2023-04-25T00:13:58.000Z",
          "wordCount": 155,
          "title": "Slackで匿名投稿できるbotを作りました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fR-AA6rN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A7%25E5%258C%25BF%25E5%2590%258D%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bbot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryotashona%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0ZTExZjRjNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fR-AA6rN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A7%25E5%258C%25BF%25E5%2590%258D%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bbot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryotashona%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0ZTExZjRjNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-1",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-1",
          "publishedOn": "2023-04-24T16:47:06.000Z",
          "wordCount": 458,
          "title": "AtCoderの問題を分類しました【入出力・演算・代入文・制御構文】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--si4bIZOf--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iY2YyNDA1MTk2LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--si4bIZOf--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iY2YyNDA1MTk2LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/a00ba56078c76b",
          "author": "よしだ",
          "description": "はじめに\n今回はスパースモデルとして、Bayesian Lasso回帰と馬蹄事前分布を使用した回帰モデル、正則化つき馬蹄事前分布を使用した回帰モデルを扱います。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import make_regression\n\nimp...",
          "link": "https://zenn.dev/yoshida0312/articles/a00ba56078c76b",
          "publishedOn": "2023-04-24T15:03:14.000Z",
          "wordCount": 5904,
          "title": "NumPyro：スパースモデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ckT13WTz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25B9%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ckT13WTz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25B9%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/treefield/articles/012b1f469f750a",
          "author": "treefield",
          "description": "https://zenn.dev/treefield/articles/f6e8b879387d02\n上記の記事を書いたときに、Heroku で画像のアップロードができませんでした。Heroku では AWS や Cloudinary で別途ストレージを用意しないといけないということで、無料の Cloudinary を使ってみました。\n今回は、モデルのイメージフィールドには、CloudinaryFieldなどは使わず、以下のようにDjangoのImageFieldをそのまま使用します。\n    image = models.ImageField(verbose_name=\"画像\", up...",
          "link": "https://zenn.dev/treefield/articles/012b1f469f750a",
          "publishedOn": "2023-04-24T14:55:21.000Z",
          "wordCount": 539,
          "title": "DjangoのHeroku環境でCloudinaryを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uz4lD5Fs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AEHeroku%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Cloudinary%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:treefield%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMWQ3M2UxMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uz4lD5Fs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AEHeroku%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Cloudinary%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:treefield%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMWQ3M2UxMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/misya11p/articles/43dae4c90ab32b",
          "author": "misya11p",
          "description": "munotes\nタイトルにあるようなライブラリです。\nたとえば、「ド」とか「C#7」みたいな音やコードの波形（sin波とか矩形波とか）が欲しい、という場面で使えます。\n\nPyPI: https://pypi.org/project/munotes/\n\nGitHub: https://github.com/misya11p/munotes/\n\nAPI reference: https://misya11p.github.io/munotes/\n\n\n\n インストール\npip install munotes\n対応しているPythonのバージョンは3.7以上です。\n\n 使い方\nこのライブラリ...",
          "link": "https://zenn.dev/misya11p/articles/43dae4c90ab32b",
          "publishedOn": "2023-04-24T08:45:57.000Z",
          "wordCount": 1393,
          "title": "Pythonで音符やコード進行の音声波形を扱うライブラリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tuuIPrb1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259F%25B3%25E7%25AC%25A6%25E3%2582%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2580%25B2%25E8%25A1%258C%25E3%2581%25AE%25E9%259F%25B3%25E5%25A3%25B0%25E6%25B3%25A2%25E5%25BD%25A2%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:misya11p%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1NzA5NzE5NGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tuuIPrb1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259F%25B3%25E7%25AC%25A6%25E3%2582%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2580%25B2%25E8%25A1%258C%25E3%2581%25AE%25E9%259F%25B3%25E5%25A3%25B0%25E6%25B3%25A2%25E5%25BD%25A2%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:misya11p%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1NzA5NzE5NGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-hatena-blog-custom-url",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、はてなブログに記事を自動投稿する方法と、カスタムURLを設定する方法について紹介します。\n\n はじめに\nはてなブログは、日本でも人気のあるブログサービスで、手軽にブログを書くことができます。また、APIを使って自動投稿することもでき、カスタムURLを設定することもできます。ここでは、Pythonを使って、はてなブログに記事を自動投稿し、カスタムURLを設定する方法を紹介します。\n\n はてなブログに自動投稿する方法\nはてなブログに自動投稿するためには、はてなブログのAPIを使います。Pythonのrequestsライブラリを使って、APIを呼...",
          "link": "https://zenn.dev/gk12/articles/python-hatena-blog-custom-url",
          "publishedOn": "2023-04-24T07:49:33.000Z",
          "wordCount": 373,
          "title": "Python初心者のためのはてなブログ自動投稿とカスタムURL設定方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a_dZLtuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%25A6%25E3%2581%25AA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E8%2587%25AA%25E5%258B%2595%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25A8%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0URL%25E8%25A8%25AD%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a_dZLtuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%25A6%25E3%2581%25AA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E8%2587%25AA%25E5%258B%2595%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25A8%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0URL%25E8%25A8%25AD%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/bc11bbd020cdfe",
          "author": "seiyakitazume",
          "description": "先日、データ解析のセミナーを開催しました。\n未経験の方でも、2時間で予測モデルを作成することができるハンズオンセミナーでした。\n好評だったので、その内容をYouTubeにまとめたのでご興味ある方はご覧ください。\nhttps://www.youtube.com/watch?v=OGELZUzBFL0&t=1414s\nこのハンズオンセミナーで予測モデルの作り方を知った友人がchatGPTにアドバイスをもらって、データサイエンスのコンペティションサイトに応募したところ、上位6.5%に入ることができたという報告を受け、驚愕しました。\nchatGPTを上手く使えば素人がプロに勝つことも十分...",
          "link": "https://zenn.dev/seiyakitazume/articles/bc11bbd020cdfe",
          "publishedOn": "2023-04-24T07:36:17.000Z",
          "wordCount": 182,
          "title": "chatGPTにアドバイスをもらったらデータサイエンスを知って1週間の友人がコンペで上位6.5%に入った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--H1TlGLiI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2589%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2582%2592%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A61%25E9%2580%25B1%25E9%2596%2593%25E3%2581%25AE%25E5%258F%258B%25E4%25BA%25BA%25E3%2581%258C%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2581%25A7%25E4%25B8%258A%25E4%25BD%258D6.5%2525%25E3%2581%25AB%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--H1TlGLiI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2589%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2582%2592%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A61%25E9%2580%25B1%25E9%2596%2593%25E3%2581%25AE%25E5%258F%258B%25E4%25BA%25BA%25E3%2581%258C%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2581%25A7%25E4%25B8%258A%25E4%25BD%258D6.5%2525%25E3%2581%25AB%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c0c88dc697bc4d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-211 B - Cycle Hit\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    s = getStringRow(4)\n\n    print('Yes' if len(set(s)) == 4 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c0c88dc697bc4d",
          "publishedOn": "2023-04-24T03:47:49.000Z",
          "wordCount": 256,
          "title": "［AtCoder］ABC-211｜B - Cycle Hit",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZhexOH-R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-211%25EF%25BD%259CB%2520-%2520Cycle%2520Hit%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZhexOH-R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-211%25EF%25BD%259CB%2520-%2520Cycle%2520Hit%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2fe473f11b5ef8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-211 A - Blood Pressure\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    c = (a + 2 * b) / 3\n\n    print(\"%d\" % c if c.is_integer() else c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2fe473f11b5ef8",
          "publishedOn": "2023-04-24T03:47:48.000Z",
          "wordCount": 278,
          "title": "［AtCoder］ABC-211｜A - Blood Pressure",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mENv4FIp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-211%25EF%25BD%259CA%2520-%2520Blood%2520Pressure%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mENv4FIp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-211%25EF%25BD%259CA%2520-%2520Blood%2520Pressure%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/x_point_1/articles/40021fb91a6085",
          "author": "まみたす",
          "description": "Python歴(≒プログラミング歴)1年のエンジニアがGoを始めてみたよというお話です。\n記憶が新しいうちに参考にした記事なども共有したいと思います。\n\n教えてくれてありがとうございます\n\n なぜGoを始めたのか\n弊社では現在サーバレスアーキテクチャでAWS Lambdaを使うときには、Pythonで実装しています。\nが、将来的には「実行速度」「メモリ効率」の観点からGoを採用したいと言うことを聞いたので、勉強するか！となりました。\nPythonとの違いとして、静的型付き言語という点で新たな発見がありそうですし、あとは、Go書けたらなんか良い感じな気がしたからです🤔\n\n 学習方法\nPyt...",
          "link": "https://zenn.dev/x_point_1/articles/40021fb91a6085",
          "publishedOn": "2023-04-24T00:57:26.000Z",
          "wordCount": 336,
          "title": "Goを始めてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--50MffknZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2599%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwM2RiMTZlYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--50MffknZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2599%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwM2RiMTZlYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/piment/articles/254dde3ecf7f10",
          "author": "ぴーまん",
          "description": "はじめに\n日本語対応のオープンソースの各種OCRの精度と時間を調べました。\n・Tesseract\n・PaddleOCR\n・EasyOCR\nそれぞれの実行ソースは、Colabノートブックにまとめていますので、ご確認ください。\n\n前処理、オプション等はしていないので、結果は参考までに。\n\n 結果\n処理時間\nTesseract(0.85s) > PaddleOCR(1.52s) > EasyOCR(3.90s)\n精度（主観あり。。。）\nPaddleOCR > EasyOCR > Tesseract\n\n\n処理時間\nTesseract(7.42s) > Paddl...",
          "link": "https://zenn.dev/piment/articles/254dde3ecf7f10",
          "publishedOn": "2023-04-23T14:51:35.000Z",
          "wordCount": 229,
          "title": "日本語対応オープンソースOCRの比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--O0UTPpAj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9OCR%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--O0UTPpAj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9OCR%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-6",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-6",
          "publishedOn": "2023-04-23T14:13:20.000Z",
          "wordCount": 237,
          "title": "AtCoderの問題を分類しました【カテゴリ】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sbwDz4az--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jMDUyOWZkYTlmLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sbwDz4az--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jMDUyOWZkYTlmLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-5",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-5",
          "publishedOn": "2023-04-23T14:12:57.000Z",
          "wordCount": 253,
          "title": "AtCoderの問題を分類しました【数学】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4-bzZmR0--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NDllYjFiMmVjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4-bzZmR0--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NDllYjFiMmVjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-4",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-4",
          "publishedOn": "2023-04-23T14:12:41.000Z",
          "wordCount": 257,
          "title": "AtCoderの問題を分類しました【計算量・データ構造・アルゴリズム】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sQiO4ey7--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82YWM3ZGQyZTcxLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sQiO4ey7--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82YWM3ZGQyZTcxLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-3",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-3",
          "publishedOn": "2023-04-23T14:12:11.000Z",
          "wordCount": 576,
          "title": "AtCoderの問題を分類しました【組み込み関数・モジュール】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tR6AKkts--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84YzcyYWFmMDA3LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tR6AKkts--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84YzcyYWFmMDA3LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-2",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-2",
          "publishedOn": "2023-04-23T14:11:44.000Z",
          "wordCount": 437,
          "title": "AtCoderの問題を分類しました【組み込み型】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8DqDP6zk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NjliYWJlMWI4LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8DqDP6zk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NjliYWJlMWI4LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7862e5c558d281",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-210 B - Bouzu Mekuri\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = getString()\n\n    for i in range(n):\n        if (s[i] == '1'):\n            print('Takahashi' if i % 2 == 0 else 'Aoki')\n            break\n\n...",
          "link": "https://zenn.dev/hyperdb/articles/7862e5c558d281",
          "publishedOn": "2023-04-23T13:27:04.000Z",
          "wordCount": 319,
          "title": "［AtCoder］ABC-210｜B - Bouzu Mekuri",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TIfWLB4m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-210%25EF%25BD%259CB%2520-%2520Bouzu%2520Mekuri%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TIfWLB4m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-210%25EF%25BD%259CB%2520-%2520Bouzu%2520Mekuri%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5d3540df44f6b7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-210 A - Cabbages\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, a, x, y = getIntMap()\n\n    print(min(a, n) * x + max(n - a, 0) * y)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5d3540df44f6b7",
          "publishedOn": "2023-04-23T13:27:03.000Z",
          "wordCount": 267,
          "title": "［AtCoder］ABC-210｜A - Cabbages",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XISeZ4J2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-210%25EF%25BD%259CA%2520-%2520Cabbages%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XISeZ4J2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-210%25EF%25BD%259CA%2520-%2520Cabbages%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/ad5fce800a6cd2",
          "author": "hodakam",
          "description": "RDKitの３次元座標操作\n分子系のケモインフォマティクスの代表ツールともいえるRDKitですが、その機能は実に多彩です。日本語で紹介されている記事では単分子での扱いがほとんどですが、実は複数分子の取り扱いやScipyなどと組み合わせることで座標操作も可能です。この記事では複数分子の実際の取り扱いや、分子の移動・回転操作の一例を書いてみました。\nこれらの分子の操作を使いこなすと、二量体のGaussianのインプットファイルを自動生成したり、\n錯体のような複雑なモデルも自動で生成したりすることができます。\n\n 複数分子を埋め込む\n系の中に2つの分子を埋め込むこともできます。やり方はシン...",
          "link": "https://zenn.dev/hodakam/articles/ad5fce800a6cd2",
          "publishedOn": "2023-04-23T12:29:54.000Z",
          "wordCount": 1582,
          "title": "RDKitの3次元座標を使いこなす（移動＆回転）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n2ytGlIM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RDKit%25E3%2581%25AE3%25E6%25AC%25A1%25E5%2585%2583%25E5%25BA%25A7%25E6%25A8%2599%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25EF%25BC%2588%25E7%25A7%25BB%25E5%258B%2595%25EF%25BC%2586%25E5%259B%259E%25E8%25BB%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n2ytGlIM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RDKit%25E3%2581%25AE3%25E6%25AC%25A1%25E5%2585%2583%25E5%25BA%25A7%25E6%25A8%2599%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25EF%25BC%2588%25E7%25A7%25BB%25E5%258B%2595%25EF%25BC%2586%25E5%259B%259E%25E8%25BB%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/09462ab3abb22e",
          "author": "hodakam",
          "description": "はじめに\n材料物性のデータベースはMaterials Project、Polyinfoなど最近でこそ色々公開されてきていますが、実用面ではまだまだ十分なわけではなく、自分自身でシミュレーション等を行って物性を取得する必要があるのが現状です。材料系のシミュレーション技術は対象とする時空間スケールに応じた手法が色々ありますが、ほとんどのシミュレータは化学構造や計算条件を記載したテキストファイルを元にシミュレーションを実行するというスタイルがとられます。\n\n 大量データをシミュレーションで生成しようとすると・・・\n通常、インプットファイルはGUI上で原子を配置したり結合を作ったりして作成し...",
          "link": "https://zenn.dev/hodakam/articles/09462ab3abb22e",
          "publishedOn": "2023-04-23T12:25:45.000Z",
          "wordCount": 976,
          "title": "SMILESからGaussianのインプットファイルを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oD_VYOdc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SMILES%25E3%2581%258B%25E3%2582%2589Gaussian%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oD_VYOdc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SMILES%25E3%2581%258B%25E3%2582%2589Gaussian%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/950cb66a8c529f",
          "author": "hodakam",
          "description": "はじめに\n機械学習を行う場合の一般論として、データは多い方がいいというものがあります。\nただ、材料の物性データを取得するコストは一般的に高く、数百や数千のレコードを用意しようと思うと膨大なコスト（最低限のデータが集まるまでにXX年とかYY万円とか・・・）を伴うことがほとんどです。そうなると、できるだけ少ないデータで効率的に学習モデルを作りたくなってきます。\n効率的な学習モデルの構築というのは、言い換えれば、現状のモデルの精度を向上させるために効果的な水準を選び、そのデータを追加して再学習して、また次の水準を選び・・・、ということになります。こういった一連の流れを統計的にうまく選択して...",
          "link": "https://zenn.dev/hodakam/articles/950cb66a8c529f",
          "publishedOn": "2023-04-23T12:20:45.000Z",
          "wordCount": 1688,
          "title": "能動学習ライブラリmodALを使ったactive regression",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d-0VAE1q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAmodAL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259Factive%2520regression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d-0VAE1q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAmodAL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259Factive%2520regression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/0bd12e674c2cf0",
          "author": "hodakam",
          "description": "はじめに\nPythonで科学技術計算を行う場合、pythonの標準的なメソッドやクラスではなく、numpyなどの数値計算用のクラスを用いることで計算を高速に行えることが一般的に知られている。ただ、こういったクラスを用いたとしても、3次元空間内の物理量の演算などどうしても多重forループを行わなければいけない状況に割と頻繁に出くわす。こういった状況でいかに高速な計算方法を実装するかというのが、プログラマの力の見せ所ではあるが、できるだけ頑張らず（実装に時間をかけずに）に簡単に高速に計算できるようにしたいというのも事実である。\nこの記事では並列化を含むpythonで効率的に数値計算を行う...",
          "link": "https://zenn.dev/hodakam/articles/0bd12e674c2cf0",
          "publishedOn": "2023-04-23T12:16:25.000Z",
          "wordCount": 780,
          "title": "Pythonでの並行・並列処理をお手軽にやる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XGGXZiDb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E4%25B8%25A6%25E8%25A1%258C%25E3%2583%25BB%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E3%2582%2584%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XGGXZiDb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E4%25B8%25A6%25E8%25A1%258C%25E3%2583%25BB%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E3%2582%2584%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/fbae1f62fdc190",
          "author": "hodakam",
          "description": "はじめに\nケモインフォマティクスツールで代表的なものにRDKitやpymatgenがある。\nこれらのツールは基本的にpython (たまにR)で提供されている。\npythonの場合、RDKitなどのような外部ツールのことをライブラリやモジュールと呼ぶが、こういったライブラリは素のpythonはもちろん、\nAnacondaのようなデータ解析向けのpythonディストリビューションにも最初は含まれていない。\nそのため、実際にケモインフォマティクスで何かをしようとした場合、自身のpython環境にライブラリを追加していく必要があるが、\n依存関係などのエラーにより初心者が挫折しやすい。\n・・...",
          "link": "https://zenn.dev/hodakam/articles/fbae1f62fdc190",
          "publishedOn": "2023-04-23T12:13:21.000Z",
          "wordCount": 267,
          "title": "ケモインフォマティクスなpython環境の準備",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nswJP1FC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B1%25E3%2583%25A2%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%259E%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AApython%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25BA%2596%25E5%2582%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nswJP1FC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B1%25E3%2583%25A2%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%259E%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AApython%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25BA%2596%25E5%2582%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/fd6bb1d6b792d7",
          "author": "Josh Nobus",
          "description": "はじめに\nPython のクラスの属性（attribute: メンバ、メソッド、インスタンス変数なども指す）は基本的に const にしたり private にしたりすることができませんし、型もありません。\n\nでもこの属性は一度定義したら書き換えたくないなー、とか\nこの属性はユーザに勝手に書き換えられたくないなー、とか\nこの属性は自動的にこの型に制約してほしいなー、とか\n\nそんなときありませんか？ ありますよね？ そう、あるんです。\nあったので作りました。\nhttps://github.com/wsuzume/nobus\n$ pip install nobus\nで使えます。\n!\n記事...",
          "link": "https://zenn.dev/wsuzume/articles/fd6bb1d6b792d7",
          "publishedOn": "2023-04-23T09:29:17.000Z",
          "wordCount": 6241,
          "title": "Python のクラスをハックして型付き immutable / protected 属性を作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jlpim4sK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%25A6%25E5%259E%258B%25E4%25BB%2598%25E3%2581%258D%2520immutable%2520%252F%2520protected%2520%25E5%25B1%259E%25E6%2580%25A7%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jlpim4sK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%25A6%25E5%259E%258B%25E4%25BB%2598%25E3%2581%258D%2520immutable%2520%252F%2520protected%2520%25E5%25B1%259E%25E6%2580%25A7%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/98aa11ae532dce",
          "author": "osn_Lofi",
          "description": "事前学習済みモデルのRetinaNetを使った物体検出についてご紹介します。\nこのモデルは、高精度とスピードが特長で幅広い分野で採用されていますが、非常に実装が簡単です。\nこのブログを最後まで読むと、以下のような実装ができます。\nこちらの写真は、有名なビートルズのアルバム「アビィーロード」のジャケット写真です。\n\n\n モデルの概要\n\nRetinaNetは、物体検出のための深層学習モデルの一種であり、ResNet50と呼ばれる深層学習モデルと、FPN（Feature Pyramid Network）と呼ばれる特徴抽出ネットワークを組み合わせて使用することができます。\nResNet50では、...",
          "link": "https://zenn.dev/robes/articles/98aa11ae532dce",
          "publishedOn": "2023-04-23T06:22:38.000Z",
          "wordCount": 1545,
          "title": "【超簡単】事前学習済みモデルRetinaNetを使った物体検出をご紹介します",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JKArKwan--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E3%2580%2591%25E4%25BA%258B%25E5%2589%258D%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABRetinaNet%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%25E3%2582%2592%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JKArKwan--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E3%2580%2591%25E4%25BA%258B%25E5%2589%258D%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABRetinaNet%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%25E3%2582%2592%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takumi1001/books/56bd46af79939b",
          "author": "takumi",
          "description": "筑波大学enPiT2023の自己学習期間に受講生が利用できる教材として、メンターの田村が作成した、Web技術に入門するためのチュートリアルです。詳細はまえがきを読んでください。",
          "link": "https://zenn.dev/takumi1001/books/56bd46af79939b",
          "publishedOn": "2023-04-23T00:11:40.000Z",
          "wordCount": 55,
          "title": "ChatGPTを使った自分だけのWebアプリを作ろう",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/szgk/articles/07c151d3efb92b",
          "author": "shibe",
          "description": "概要\n練習としてMayaのscriptディレクトリにあるpythonファイルの名前を一覧するpluginを制作する。\npythonとPyMelで作成する。\n※ 後からスクリプトを「シェルフ」に追加しておけること知りました。シェルフでええやん\n\n 手順\n新規にライブラリを学ぶのでChat GPTを使ってみる\n\nChat GPTでscriptのたたきを出力\na. 何回か改善してもらう\nデバッグ\nリファクタ\n公開\n\n\n 1. Chat gPTでscriptのたたきを出力\n何回かやりとりして下記のコードを出力してもらいました。\nこれを実際に読みつつデバッグして修正していきます。\nimport...",
          "link": "https://zenn.dev/szgk/articles/07c151d3efb92b",
          "publishedOn": "2023-04-22T17:27:17.000Z",
          "wordCount": 1547,
          "title": "Chat GPT で Maya のscriptファイルを一覧するpluginを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TxVZYNYY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chat%2520GPT%2520%25E3%2581%25A7%2520Maya%2520%25E3%2581%25AEscript%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%2599%25E3%2582%258Bplugin%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shibe%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYTYxMTYxYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TxVZYNYY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chat%2520GPT%2520%25E3%2581%25A7%2520Maya%2520%25E3%2581%25AEscript%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%2599%25E3%2582%258Bplugin%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shibe%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYTYxMTYxYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/f5e5c616e128a7",
          "author": "laiso",
          "description": "LangChainにContextual Compressionという抽象化が追加されました。概要は以下にあります。\nhttps://blog.langchain.dev/improving-document-retrieval-with-contextual-compression/\nContextual Compressionは「検索で取り出したドキュメントのテキスト」と「プロンプトに含めるコンテキストとしてのテキスト」の性質が異る点に注目して、ドキュメント検索の後処理としてプロンプトに含めるテキストの内容に変換処理をかけて改善します。\n\n 前提知識\n「LLMに質問の答えを生成しても...",
          "link": "https://zenn.dev/laiso/articles/f5e5c616e128a7",
          "publishedOn": "2023-04-22T16:54:16.000Z",
          "wordCount": 917,
          "title": "LangChainのContextual Compressionがどのようにコンテキストを圧縮しているのか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ORtWNUMK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2581%25AEContextual%2520Compression%25E3%2581%258C%25E3%2581%25A9%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ORtWNUMK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2581%25AEContextual%2520Compression%25E3%2581%258C%25E3%2581%25A9%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-5",
          "author": "Yumax-panda",
          "description": "おさらい\n前回はミュート機能の実装をしました。今回は管理者限定の条件を付け、さらにミュート解除の機能も実装しましょう。\n前回までのコード（再掲）\n# bot.py\n\nfrom discord.ext import commands\nfrom discord.utils import get\nimport discord\n\nfrom io import StringIO\nfrom datetime import datetime, timedelta\n\nintents = discord.Intents.default()\nintents.members = True # メンバー管理...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-5",
          "publishedOn": "2023-04-22T15:33:50.000Z",
          "wordCount": 1480,
          "title": "discord.py 入門　その5",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DnBkQCD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DnBkQCD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/51f29570416f46",
          "author": "よしだ",
          "description": "はじめに\n今回は順序回帰と独自の分布の定義の仕方を見ていきます。順序回帰に関してはNumPyroのチュートリアル通りになります。より詳細な式などに関してはこちらを参照ください。\n独自の分布の定義は他に入れる記事がなかったので、適当に今回の記事の中に入っているだけで順序回帰との関係はありません。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nfrom jax.nn import softplus\nimport jax.numpy as jnp\nfrom jax.scipy.special ...",
          "link": "https://zenn.dev/yoshida0312/articles/51f29570416f46",
          "publishedOn": "2023-04-22T15:23:08.000Z",
          "wordCount": 5626,
          "title": "NumPyro：順序回帰と独自の分布の定義",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B-Y0Kj2m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%25A0%2586%25E5%25BA%258F%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%25A8%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B-Y0Kj2m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%25A0%2586%25E5%25BA%258F%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%25A8%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ac4c8b721b1ef2",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-209 B - Can you buy them all?\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, x = getIntMap()\n    a = getIntList()\n\n    print('Yes' if x >= sum(a) - len(a) // 2 else 'No')\n\n\nif __na...",
          "link": "https://zenn.dev/hyperdb/articles/ac4c8b721b1ef2",
          "publishedOn": "2023-04-22T14:07:17.000Z",
          "wordCount": 342,
          "title": "［AtCoder］ABC-209｜B - Can you buy them all?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_MFuFA6---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-209%25EF%25BD%259CB%2520-%2520Can%2520you%2520buy%2520them%2520all%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_MFuFA6---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-209%25EF%25BD%259CB%2520-%2520Can%2520you%2520buy%2520them%2520all%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/aa823767d6b66d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-209 A - Counting\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(b - a + 1 if b >= a else 0)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/aa823767d6b66d",
          "publishedOn": "2023-04-22T14:07:17.000Z",
          "wordCount": 247,
          "title": "［AtCoder］ABC-209｜A - Counting",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0RRKWYi1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-209%25EF%25BD%259CA%2520-%2520Counting%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0RRKWYi1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-209%25EF%25BD%259CA%2520-%2520Counting%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-4",
          "author": "Yumax-panda",
          "description": "おさらい\n前回はチャンネルのメッセージを記録する機能の実装方法について解説しました。今回はメンバーをミュートさせる機能を実装していきます。\n\n Step5. メンバーをミュートしよう\nミュートの実装方法ですが、以下の要素があれば実装できそうです。\n\nコマンドでミュートしたい人に「チャット制限」というロールを付与する。\nメッセージリスナーを登録し、チャット制限ロールを持っている人がメッセージを送信したら削除する。\n\nこのままだと、bot稼働時にミュートされると解除する術がないので、ミュート解除コマンドも後ほど実装します。\n\n チャット制限ロールの付与\n以下のコードを実装します。\nfro...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-4",
          "publishedOn": "2023-04-22T14:03:17.000Z",
          "wordCount": 519,
          "title": "discord.py 入門　その4",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fdoVTZxi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fdoVTZxi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ictsr4/articles/fd1dadc74782aa",
          "author": "Pythonic Highschool",
          "description": "windows10と11のマシンにanacondaをインストールし、ついでにnbextensionsも追加しようとしたらなかなかうまくいきませんでした。今後、同じようにイライラすることがないよう、手順をまとめました。\nnbextensionsの機能を追加するためには、nbextensionsのインストールに加え、それを最新のバージョンにアップデートする必要があるようです。\n\n anaconda promptからコマンドを入力\nwebで検索すると、入力するコマンドは出てきますが、どこで入力するか、はっきり書いたサイトを見つけることができませんでした。いろいろな方法がると思いますが、今回は、...",
          "link": "https://zenn.dev/ictsr4/articles/fd1dadc74782aa",
          "publishedOn": "2023-04-22T12:59:25.000Z",
          "wordCount": 146,
          "title": "jupyter notebook(python)でnbextensionsを使えるようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LAX5q3VN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:jupyter%2520notebook%2528python%2529%25E3%2581%25A7nbextensions%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Pythonic%2520Highsc...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXJTa3U2SFp1X25aUG1WU0tUdlplRHViSk1EcUlwMUk4bUUxR0o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LAX5q3VN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:jupyter%2520notebook%2528python%2529%25E3%2581%25A7nbextensions%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Pythonic%2520Highsc...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXJTa3U2SFp1X25aUG1WU0tUdlplRHViSk1EcUlwMUk4bUUxR0o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/b12578919ddd83",
          "author": "laiso",
          "description": "https://devblogs.microsoft.com/semantic-kernel/py/\nMS版LangChainことSemantic KernelのPython版が出たので気になっていたSemantic Memory関連の動作を試した。\nhttps://gist.github.com/laiso/15e3cc6b7214fc9783d2d85f40d89ade\n\n セットアップ系\n今のところ.envは必須らしい。\nKV = {}  # DBのかわり\n\n\ndef init_kernel():\n    k = sk.Kernel()\n\n    api_key, org_id =...",
          "link": "https://zenn.dev/laiso/articles/b12578919ddd83",
          "publishedOn": "2023-04-22T12:39:37.000Z",
          "wordCount": 952,
          "title": "Semantic Kernel Pythonでユーザーごとの記憶を持たせてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yniVn57Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Semantic%2520Kernel%2520Python%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A8%2598%25E6%2586%25B6%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yniVn57Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Semantic%2520Kernel%2520Python%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A8%2598%25E6%2586%25B6%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kaeru39/articles/9b40e93469de57",
          "author": "kaeru39",
          "description": "nomic-aiという企業から、ローカル環境で動作するGPT4ALLというモデルが公開されました。動作手順をまとめます。\n\n GPT4ALLとは\n※OpenAI社のGPT-4とは異なります。※\nオープンソースのみのデータでGPT(Generative Pretrained Transformer,生成型事前学習済みトランスフォーマー)を学習し、公開することを目的として実装が進められているリポジトリ兼モデルの名前です。新しいモデルは適宜公開されるため、定期的に確認すると良いでしょう。\nGPT4ALLの4ALLの部分は\"for ALL\"という意味だと理解しています。コードを書くときに、例えば...",
          "link": "https://zenn.dev/kaeru39/articles/9b40e93469de57",
          "publishedOn": "2023-04-22T11:33:10.000Z",
          "wordCount": 623,
          "title": "GPT4ALLをCPUのみでpythonから実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rur1T-50--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT4ALL%25E3%2582%2592CPU%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7python%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rur1T-50--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT4ALL%25E3%2582%2592CPU%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7python%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-3",
          "author": "Yumax-panda",
          "description": "おさらい\n前回は簡単なテキストコマンドの実装方法について解説しました。今回からはbotのコアとなる機能を実装していきます。\n前回のコード（再掲）\n# bot.py\n\nfrom discord.ext import commands\nimport discord\n\nintents = discord.Intents.default()\nintents.members = True # メンバー管理の権限\nintents.message_content = True # メッセージの内容を取得する権限\n\nbot = commands.Bot(\n    command_prefix=\"$\"...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-3",
          "publishedOn": "2023-04-22T08:18:44.000Z",
          "wordCount": 927,
          "title": "discord.py入門　その3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9FWYG7a---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9FWYG7a---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/e3709c3a77c40a",
          "author": "よしだ",
          "description": "はじめに\n複雑なモデルや変数間に強い相関がある場合などでは結果が収束しないことがあります。収束がしづらいときは「MCMC実行時のパラメータを変える」「弱事前情報分布を指定する」「モデルの構造を変える」などで対応することもありますが、対応方法の１つとして再パラメータ化があります。言葉での説明が難しいので、有名なNealの漏斗で実装を確認してみます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as ...",
          "link": "https://zenn.dev/yoshida0312/articles/e3709c3a77c40a",
          "publishedOn": "2023-04-22T06:41:48.000Z",
          "wordCount": 2164,
          "title": "NumPyro：再パラメータ化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Rc1Ky5Tx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%2586%258D%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Rc1Ky5Tx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%2586%258D%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bluetang/articles/a3d8b0b9cc8e97",
          "author": "bluetang",
          "description": "from PIL import ImageGrab\nimport io\n\n# クリップボードから画像を取得\nimg = ImageGrab.grabclipboard()\n\n# 画像をバイナリ形式に変換して1MB以下に圧縮\nwith io.BytesIO() as output:\n    img.save(output, format='JPEG', quality=50)\n    data = output.getvalue()\n    while len(data) > 1_000_000:\n        output.seek(0)\n        output.trunc...",
          "link": "https://zenn.dev/bluetang/articles/a3d8b0b9cc8e97",
          "publishedOn": "2023-04-22T06:26:57.000Z",
          "wordCount": 127,
          "title": "コピペと画像出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B4J4kD-p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2581%25A8%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bluetang%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ZDRkMjc1MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B4J4kD-p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2581%25A8%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bluetang%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ZDRkMjc1MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kenta_goto/articles/5d3580d57b5e87",
          "author": "ppppe",
          "description": "はじめに\n本記事では、Pythonのpsutilとmatplotlibライブラリを使って、リアルタイムでCPUとメモリ使用率をグラフに表示する方法を解説します。\n\n 概要\n以下、コード全文です。\nimport psutil\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\n\n# 描画関数\ndef update(frame):\n    x.append(frame)\n    cpu_percent = psutil.cpu_percent()\n    mem_percent =...",
          "link": "https://zenn.dev/kenta_goto/articles/5d3580d57b5e87",
          "publishedOn": "2023-04-22T01:55:13.000Z",
          "wordCount": 1096,
          "title": "Pythonを使用したCPUとメモリ使用率のリアルタイムグラフ表示",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3EGXg3Pu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FCPU%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E7%258E%2587%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ppppe%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pCUU15dnI2OTBJd1M1ZkoyZVRFSzdlbjdVSDhwN0dJR09zR243N200PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3EGXg3Pu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FCPU%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E7%258E%2587%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ppppe%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pCUU15dnI2OTBJd1M1ZkoyZVRFSzdlbjdVSDhwN0dJR09zR243N200PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aithena/articles/7135a728266db8",
          "author": "あいせな",
          "description": "問題文\n\n\n Pythonコードの言語化\nPythonのコードなら有名な問題なので先人の遺物が沢山あります。\n自分の拙いコードを記事にしたところで有益な情報にはなり得ないと思い、この記事では偉大な先人の解答を一緒に言語化したいと思います。少しでも力になれれば幸いです。\n以下が記事の本題です。\n# 入力\nN,L = int(input().split()) # 切れ目の数,羊羹の長さ\nK = int(input()) # 選ぶ切れ目の数\nA = list(map(int,input().split())) # 切れ目の位置＝左端からの長さ\n\n# 切った全ての羊羹の長さをx以上にすること...",
          "link": "https://zenn.dev/aithena/articles/7135a728266db8",
          "publishedOn": "2023-04-21T21:11:06.000Z",
          "wordCount": 576,
          "title": "競プロ典型90を言語化する(001/090)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fyMf_E-E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E5%2585%25B8%25E5%259E%258B90%25E3%2582%2592%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2528001%252F090%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2581%259B%25E3%2581%25AA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1N2NjMzNmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fyMf_E-E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E5%2585%25B8%25E5%259E%258B90%25E3%2582%2592%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2528001%252F090%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2581%259B%25E3%2581%25AA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1N2NjMzNmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-2",
          "author": "Yumax-panda",
          "description": "おさらい\n前回はbotの準備とイベントについて解説しました。今回はいよいよbotのコマンドを実装していきます。\n前回のコード（再掲）\nfrom discord.ext import commands\nimport discord\n\nintents = discord.Intents.default()\nintents.members = True # メンバー管理の権限\nintents.message_content = True # メッセージの内容を取得する権限\n\nbot = commands.Bot(\n    command_prefix=\"$\", # $コマンド名　でコマンド...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-2",
          "publishedOn": "2023-04-21T17:58:49.000Z",
          "wordCount": 822,
          "title": "discord.py入門　その2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jpl0fTuj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jpl0fTuj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/stfate/articles/2023-04-21--numba-install-error-in-py311",
          "author": "ふぇいと",
          "description": "Python 3.11でnumbaのインストールに失敗する問題\n\n 問題\nPython 3.11系でpip install numbaしたときにインストールに失敗する．\n\n\n 原因\nnumbaの安定版(0.56.4)がPython3.11に対応していないのが原因っぽい．\nnumba/numba Python 3.11 #8304\n\n 対処法\nPython 3.11に対応しているRC版を入れる．\npip install --pre numba\n\nこれでようやく3.11系に移行できる……",
          "link": "https://zenn.dev/stfate/articles/2023-04-21--numba-install-error-in-py311",
          "publishedOn": "2023-04-21T15:11:13.000Z",
          "wordCount": 127,
          "title": "Python 3.11でnumbaのインストールに失敗する問題",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AsgprY4x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.11%25E3%2581%25A7numba%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2599%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%2587%25E3%2581%2584%25E3%2581%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5MGRmZTllYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AsgprY4x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.11%25E3%2581%25A7numba%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2599%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%2587%25E3%2581%2584%25E3%2581%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5MGRmZTllYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutohub/articles/4304fd9a25e522",
          "author": "yutohub",
          "description": "概要\nWhisper は、多言語音声認識システムです。その出力である書き起こしには、句読点が含まれていないことがあるため、自動翻訳の精度に悪影響を与えることがあります。そこで、Whisper の書き起こしに対して、句読点を復元するためのモデルを作りたいと思います。一般的な文章とは異なり、Whisper の書き起こしは文章が途切れていることや、話し言葉が多く含まれているなどの特徴があります。このため、句読点の復元には新しい手法が必要となります。今回は、Whisper が生成した書き起こしの中から句読点が含まれるものを自動的に抽出し、これを訓練データとして用いることで、モデルをトレーニン...",
          "link": "https://zenn.dev/yutohub/articles/4304fd9a25e522",
          "publishedOn": "2023-04-21T11:30:00.000Z",
          "wordCount": 9257,
          "title": "BERTベースの句読点モデルによるWhisperの書き起こしの改善",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2aL4YNtD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BERT%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E5%258F%25A5%25E8%25AA%25AD%25E7%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BWhisper%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%25AE%25E6%2594%25B9%25E5%2596%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2aL4YNtD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BERT%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E5%258F%25A5%25E8%25AA%25AD%25E7%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BWhisper%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%25AE%25E6%2594%25B9%25E5%2596%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/watarungurunnn/articles/6e323d1030afcf",
          "author": "watarungurunnn",
          "description": "root権限がない = sudoが使えない、あるいはHomebrewを複数インストールしたい場合にlocal directoryにインストールする方法\nInstall homebrew to your local folder: reference\n\nソースのダウンロード\n下記のコマンドをHomebrewをインストールしたいfolderで実行する。(homebrewを任意のdirに変えるのも可。)\n\nmkdir homebrew && curl -L [https://github.com/Homebrew/brew/tarball/master](https://g...",
          "link": "https://zenn.dev/watarungurunnn/articles/6e323d1030afcf",
          "publishedOn": "2023-04-21T11:28:06.000Z",
          "wordCount": 253,
          "title": "sudoが使えない場合にHomebrewをlocal directoryにインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DocgAAjV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sudo%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25ABHomebrew%25E3%2582%2592local%2520directory%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DocgAAjV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sudo%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25ABHomebrew%25E3%2582%2592local%2520directory%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-1",
          "author": "Yumax-panda",
          "description": "はじめに\n本記事では数回に分けて、discord.pyを使ったdiscord botの作り方を解説していきます。\nあくまで筆者の全て独学の知識ですので、参考の一助になれば幸いです。\n対象読者は以下のような方を想定しています。\n\nPythonである程度コードを書いたことがある\ndiscord botを作ってみたい\nbotの作り方がよくわからない\nPythonを使ったことはあるが、discord.pyを使ったことがない\n自分で開発したbotを無料で運用したい\n\n\n 学べること\n\nテキストコマンドの実装\nスラッシュコマンドの実装\n管理機能の実装\nコードを分割して管理する方法　（コグ）\n管理...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-1",
          "publishedOn": "2023-04-21T07:30:44.000Z",
          "wordCount": 566,
          "title": "discord.py入門　その1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---XRO3Dea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---XRO3Dea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9da6544ade4a73",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-208 A - Rolling Dice\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print('Yes' if a <= b <= a * 6 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9da6544ade4a73",
          "publishedOn": "2023-04-21T03:54:11.000Z",
          "wordCount": 254,
          "title": "［AtCoder］ABC-208｜A - Rolling Dice",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qjb3gJKz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-208%25EF%25BD%259CA%2520-%2520Rolling%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qjb3gJKz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-208%25EF%25BD%259CA%2520-%2520Rolling%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/923f10ddc89978",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-207 A - Repression\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    l = getIntList()\n\n    l.sort()\n\n    print(l[1] + l[2])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/923f10ddc89978",
          "publishedOn": "2023-04-21T03:54:10.000Z",
          "wordCount": 241,
          "title": "［AtCoder］ABC-207｜A - Repression",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g_VwRsga--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-207%25EF%25BD%259CA%2520-%2520Repression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g_VwRsga--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-207%25EF%25BD%259CA%2520-%2520Repression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/3cf990217986ef",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-207 B - Hydrate\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c, d = getIntMap()\n\n    r = -1\n    for i in range(10 ** 5 + 1):\n        if (a + b * i) <= (c * i) * d:\n            r = i\n            break\n    print(r)\n\n\nif __name__ == \"__main_...",
          "link": "https://zenn.dev/hyperdb/articles/3cf990217986ef",
          "publishedOn": "2023-04-21T03:54:10.000Z",
          "wordCount": 329,
          "title": "［AtCoder］ABC-207｜B - Hydrate",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i11kmyeE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-207%25EF%25BD%259CB%2520-%2520Hydrate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i11kmyeE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-207%25EF%25BD%259CB%2520-%2520Hydrate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0d54d5f1168984",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-208 B - Factorial Yen Coin\n\n\n\n 提出結果\nimport math\n\n\ndef getInt():\n    return int(input())\n\n\ndef main():\n    p = getInt()\n\n    f = []\n    i = 1\n    while True:\n        x = math.factorial(i)\n        if x > p:\n            break\n        f.append(x)\n        i += 1\n    f.reverse()\n\n    c...",
          "link": "https://zenn.dev/hyperdb/articles/0d54d5f1168984",
          "publishedOn": "2023-04-21T03:54:10.000Z",
          "wordCount": 390,
          "title": "［AtCoder］ABC-208｜B - Factorial Yen Coin",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m2RTw2gz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-208%25EF%25BD%259CB%2520-%2520Factorial%2520Yen%2520Coin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m2RTw2gz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-208%25EF%25BD%259CB%2520-%2520Factorial%2520Yen%2520Coin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/engineer-tool-sphinx",
          "author": "gk12",
          "description": "こんにちは。本記事では、ドキュメント生成ツールのSphinxを使って、技術文書を作成する方法について解説します。Sphinxは、Pythonのドキュメンテーションツールとして開発されたもので、多言語対応やドキュメントの自動生成など、様々な機能を持っています。\n\n Sphinxのインストール\nSphinxをインストールするには、以下のコマンドを実行します。\npip install sphinx\n\n プロジェクトの初期化\nSphinxを使って技術文書を作成するには、まずプロジェクトを初期化する必要があります。以下のコマンドを実行すると、プロジェクトの初期化が行われます。\nsphinx-qui...",
          "link": "https://zenn.dev/gk12/articles/engineer-tool-sphinx",
          "publishedOn": "2023-04-21T02:38:30.000Z",
          "wordCount": 299,
          "title": "ドキュメント生成ツールSphinxを使って技術文書を作成する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uosPmj1m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABSphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%258A%2580%25E8%25A1%2593%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uosPmj1m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABSphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%258A%2580%25E8%25A1%2593%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoppippi/articles/b66fa477c1c3af",
          "author": "ryoppippi",
          "description": "はじめに\nみなさんは、Whisper を使って文字起こしをしているでしょうか？\nWhisper は OpenAI がリリースした text2speech のモデルです。\nhttps://openai.com/research/whisper\nこのモデルは実装を含めて公開されているので、モデルを軽くしたり、あらゆる環境で動かしたり、といった試みが随所で行われています。\nhttps://github.com/ggerganov/whisper.cpp\nhttps://note.com/sangmin/n/na60c017e72d0\n今回は、つい先月にリリースされた、faster-whis...",
          "link": "https://zenn.dev/ryoppippi/articles/b66fa477c1c3af",
          "publishedOn": "2023-04-20T18:31:21.000Z",
          "wordCount": 788,
          "title": "faster-whisperを使ってYoutubeを高速に文字起こしする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MMBd4tJs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:faster-whisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Youtube%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MMBd4tJs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:faster-whisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Youtube%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/8858343dcaa244",
          "author": "よしだ",
          "description": "はじめに\n今回は離散潜在変数の扱い方を説明します。Stanでは自動で扱うことができないため、基本的に場合の数を数え上げて離散パラメータを消去（周辺化）した形で対数尤度を表現する必要があります。しかし、NumPyroでは一部制限はありますが自動で離散潜在変数も扱うことができます。（アヒル本のLDAはこれらに引っかかりこの機能付きでの実装はできませんでした。もちろんStanと同様に手作業で周辺化すればいいのですが、うまく実装できる方法がもしあれば教えてください。。。）\n!\n\n NumPyroにおける周辺化機能の制限\n1). NumPyroのForumで以下のように言及されているのですが、...",
          "link": "https://zenn.dev/yoshida0312/articles/8858343dcaa244",
          "publishedOn": "2023-04-20T16:08:28.000Z",
          "wordCount": 4168,
          "title": "NumPyro：離散潜在変数の扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZEt1WZUk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%259B%25A2%25E6%2595%25A3%25E6%25BD%259C%25E5%259C%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZEt1WZUk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%259B%25A2%25E6%2595%25A3%25E6%25BD%259C%25E5%259C%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kaeru39/articles/c13b45726ca668",
          "author": "kaeru39",
          "description": "自分の音声を特定の話者の声質に変換する技術がWebUI付きで公開されました。使い方をまとめます。また、自身の音声を録音して音声変換した例を共有します。\n\n おことわり\n筆者は音声信号処理は初心者であり、参考書に1冊目を通した程度の理解度のため、説明に誤りが含まれる可能性があります。ご容赦ください。\n\n 動作環境\n\nUbuntu20.04\nPython3.8.10\n\n\n RVC WebUIとは\nRVCとはリポジトリにも記載のある通り、Retrieval-based Voice Conversionの略です。現状の技術的な情報はgithubに公開されているソースコードがメインになっているかと...",
          "link": "https://zenn.dev/kaeru39/articles/c13b45726ca668",
          "publishedOn": "2023-04-20T16:00:36.000Z",
          "wordCount": 410,
          "title": "RVC WebUIで自分で録音した声を変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8Pciqpng--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RVC%2520WebUI%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E9%258C%25B2%25E9%259F%25B3%25E3%2581%2597%25E3%2581%259F%25E5%25A3%25B0%25E3%2582%2592%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8Pciqpng--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RVC%2520WebUI%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E9%258C%25B2%25E9%259F%25B3%25E3%2581%2597%25E3%2581%259F%25E5%25A3%25B0%25E3%2582%2592%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/f261d66bc1773b",
          "author": "sergicalsix",
          "description": "はじめに\nプログラミングで計算する際には、丸め誤差が生じることがあります。\n丸め誤差を含む数字の比較は、Pythonではmath.iscloseを用いることができます。\nこの関数を使うことで、丸め誤差を含む数字の比較を正しく行うことができます。\n\n ダメな例\n>>> a,b = 0.1,0.3\n>>> print(a + a + a == b)\nFalse\n上記を実行した場合はFalseが出力されてしまいます。\n理由はa+a+aの計算結果に丸め誤差が生じてしまうからです。(a+a+a=0.30000000000000004)\n上記の場合でも正しく比...",
          "link": "https://zenn.dev/sergicalsix/articles/f261d66bc1773b",
          "publishedOn": "2023-04-20T13:02:06.000Z",
          "wordCount": 465,
          "title": "math.iscloseを使って誤差を許容して数字を比較する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9_fp61u1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:math.isclose%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25AA%25A4%25E5%25B7%25AE%25E3%2582%2592%25E8%25A8%25B1%25E5%25AE%25B9%25E3%2581%2597%25E3%2581%25A6%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9_fp61u1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:math.isclose%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25AA%25A4%25E5%25B7%25AE%25E3%2582%2592%25E8%25A8%25B1%25E5%25AE%25B9%25E3%2581%2597%25E3%2581%25A6%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/t_katsumoto/articles/8662992add3da2",
          "author": "Katsumoto Takashi",
          "description": "はじめに\n例えば、Tableau Server (or Tableau Cloud）上で手動でフローを実行したとしよう。\nそうすると、ジョブのページでそのフロー実行の進捗が分かる。\n\n上記の画像はテスト環境なのでジョブが全然無いが、皆さんの本番環境ではここにジョブIDがずらーっと並んでいるかと思う。それで、「このジョブえらい時間掛かってるな」とか、「これ何で失敗してるんだ？」とか思った時に、そのジョブの詳細情報を知りたい事があるはず。\nそう思った時、自然に一番左側にあるIDのリンクをクリックすると思うが、\n「え・・・情報これだけ？」 と愕然した事はないだろうか？\n\nジョブ詳細と書かれ...",
          "link": "https://zenn.dev/t_katsumoto/articles/8662992add3da2",
          "publishedOn": "2023-04-20T11:20:44.000Z",
          "wordCount": 389,
          "title": "Tableau Server上のジョブIDから詳細情報を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fzrRpAdb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%2520Server%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%2596ID%25E3%2581%258B%25E3%2582%2589%25E8%25A9%25B3%25E7%25B4%25B0%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Katsumoto%2520Takashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWZsNDQ2RlNJN0t4SlhhSzUwWm1kSTg0N3oxclZ1Vkp4NDVYT1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fzrRpAdb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%2520Server%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%2596ID%25E3%2581%258B%25E3%2582%2589%25E8%25A9%25B3%25E7%25B4%25B0%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Katsumoto%2520Takashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWZsNDQ2RlNJN0t4SlhhSzUwWm1kSTg0N3oxclZ1Vkp4NDVYT1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/d0590bc4eaa8f7",
          "author": "よしだ",
          "description": "はじめに\n今回は階層モデルを扱います。以前までと同様に本シリーズの記事は実装メインなため、理論的な詳細は省略します。最初に１つの階層のモデルを扱い、次に複数の階層のモデルを扱います。どちらもNumpyの行列計算と今までのexpandやplateの挙動が理解できていればイメージ掴める内容かと思います。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\ni...",
          "link": "https://zenn.dev/yoshida0312/articles/d0590bc4eaa8f7",
          "publishedOn": "2023-04-20T09:19:17.000Z",
          "wordCount": 4621,
          "title": "NumPyro：階層モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RF1zgo32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%259A%258E%25E5%25B1%25A4%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RF1zgo32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%259A%258E%25E5%25B1%25A4%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/36c7f1bb1a639d",
          "author": "seiyakitazume",
          "description": "chatGPTの文章の要約能力は非常に便利ですね。\nこの能力は非常に便利なのですが、例えば論文の要約をさせたい時、1つ1つの論文をchatGPTのAPIに投げているとリクエスト数も処理時間もかかってしまいます。\nこれをなんとか1度に行うことができないかを調べていた中で、LangChainというフレームワークに出会いました。LangChainを使うことで、上記の問題を解決することができそうです。\nそれではLangChainの説明です。\nLangChainは、言語モデルを活用したアプリケーションを開発するためのフレームワークです。LangChainは、以下の6つのメインモジュールに対応してい...",
          "link": "https://zenn.dev/seiyakitazume/articles/36c7f1bb1a639d",
          "publishedOn": "2023-04-20T07:11:00.000Z",
          "wordCount": 374,
          "title": "chatGPTに大量の文章を要約させたい時に使えるLangChainとは",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W5C04QUH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25AB%25E5%25A4%25A7%25E9%2587%258F%25E3%2581%25AE%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BLangChain%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W5C04QUH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25AB%25E5%25A4%25A7%25E9%2587%258F%25E3%2581%25AE%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BLangChain%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/10d28a325e05f8",
          "author": "よしだ",
          "description": "最初に\n別記事でアプリを実際に作成する前に調べた内容等をまとめました。\nハマったポイントもあるので同じ状況の人の参考になればと思います。\n\n コード\n\n 初期構築\nmkdir backend\ncd backend/\ndjango-admin startproject config .\npython manage.py startapp todo\npython manage.py startapp apiv1\nconfig/settings.pyの編集\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib....",
          "link": "https://zenn.dev/yoshida0312/articles/10d28a325e05f8",
          "publishedOn": "2023-04-20T06:56:16.000Z",
          "wordCount": 3140,
          "title": "Django REST Frameworkの基本事項まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BlICNLBG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E4%25BA%258B%25E9%25A0%2585%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BlICNLBG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E4%25BA%258B%25E9%25A0%2585%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/04de791c5e7878",
          "author": "よしだ",
          "description": "はじめに\n最近、DRFとReactの勉強をしていたのですが、基本的なToDoアプリを作成した後に何を作ろうか迷ってました。\nそんな中で以下のURLを見つけて、Mediumのようなアプリを構築するのにいろんなフレームワークで書かれているコードが用意されていました。そのため、似たようなアプリをフロントエンドはReactで、バックエンドはDRFを選択して作っていこうと思います。\n元のRealWorldと異なる点としては、１つ目はダッシュボードも作成したいので値段がついた本を記録するようなアプリに変更したこと、２つ目は練習として最低限の書き方の習得を目指したのでフォローや記事のお気に入りは除...",
          "link": "https://zenn.dev/yoshida0312/articles/04de791c5e7878",
          "publishedOn": "2023-04-20T06:55:55.000Z",
          "wordCount": 4224,
          "title": "Django REST Framework を使用したバックエンド開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vfN8Jz9m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vfN8Jz9m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/202561570fee02",
          "author": "よしだ",
          "description": "はじめに\n回帰モデルの回帰係数を最小二乗法で推定すると、最小二乗法は外れ値に敏感に反応してしまい、１個の外れ値が含まれているだけで推定値は全く無意味な値になってしまう可能性があります。そういった外れ値のウェイトを小さくすることで頑健なパラメータを推定するのが頑健回帰（ロバスト回帰）です。\n1960年台に提唱された手法ですが、現在まであまり標準的な手法として知られていません。これは誤差項が正規分布であるととりあえず考えてしまうことやどのデータに対しても最適な手法が確立されていないことがあると思われます。\nまた、頑健回帰推定のことを外れ値を無闇にウェイトダウンさせて問題がある定式化を隠蔽...",
          "link": "https://zenn.dev/yoshida0312/articles/202561570fee02",
          "publishedOn": "2023-04-20T06:55:28.000Z",
          "wordCount": 630,
          "title": "頑健回帰推定（ロバスト回帰推定）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Eyg6nFaU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A0%2591%25E5%2581%25A5%25E5%259B%259E%25E5%25B8%25B0%25E6%258E%25A8%25E5%25AE%259A%25EF%25BC%2588%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588%25E5%259B%259E%25E5%25B8%25B0%25E6%258E%25A8%25E5%25AE%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Eyg6nFaU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A0%2591%25E5%2581%25A5%25E5%259B%259E%25E5%25B8%25B0%25E6%258E%25A8%25E5%25AE%259A%25EF%25BC%2588%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588%25E5%259B%259E%25E5%25B8%25B0%25E6%258E%25A8%25E5%25AE%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/6a9c07de7ded3b",
          "author": "よしだ",
          "description": "はじめに\n前回紹介したSELFIESを使用した構造生成アルゴリズムであるSTONEDを紹介します。\n学習なしで構造生成でき、その結果が学習が必要なモデルと比較しても同程度の精度が出ているという手法になります。\n早く＆精度も良いということで今後も活用が期待されます。\n\n 構造生成アルゴリズム\nアルゴリズムはすごくシンプルです。\n\nSMILESの入力から同じ意味を持つSMILESを複数ランダムに生成する\n生成したSMILESをSELFIESに変換する\nランダムに変異させる\nSELFIESからSMILESに変換する\n\n[f:id:yamayou_1:20211206160928p:plai...",
          "link": "https://zenn.dev/yoshida0312/articles/6a9c07de7ded3b",
          "publishedOn": "2023-04-20T06:54:58.000Z",
          "wordCount": 2153,
          "title": "SELFIESを使用した構造生成アルゴリズム「STONED」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eSR1PNMH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SELFIES%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%25A7%258B%25E9%2580%25A0%25E7%2594%259F%25E6%2588%2590%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%258CSTONED%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eSR1PNMH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SELFIES%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%25A7%258B%25E9%2580%25A0%25E7%2594%259F%25E6%2588%2590%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%258CSTONED%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/20c40275d54026",
          "author": "よしだ",
          "description": "SELFIESとは\n[https://iopscience.iop.org/article/10.1088/2632-2153/aba947]で発表された分子表現であるSELFIESを紹介します。\n日本語の解説資料としてはかなり丁寧な\n[https://blacktanktop.hatenablog.com/entry/2021/08/12/115613#Atomic-Symbols:title]\nがあるのでここでは使い方のメモだけ残します。\n本当にやりたいSELFIESを使用した構造生成である\n[https://github.com/aspuru-guzik-group/stone...",
          "link": "https://zenn.dev/yoshida0312/articles/20c40275d54026",
          "publishedOn": "2023-04-20T06:54:11.000Z",
          "wordCount": 399,
          "title": "分子表現SELFIESの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4DxzLMNr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%2586%25E5%25AD%2590%25E8%25A1%25A8%25E7%258F%25BESELFIES%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4DxzLMNr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%2586%25E5%25AD%2590%25E8%25A1%25A8%25E7%258F%25BESELFIES%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/5a499999e114e2",
          "author": "よしだ",
          "description": "tradercompany method\n\ntrader-company methodを実装しました。\nより論文実装に近い形で実装していますが、大枠は参考文献のqiita記事を参考にしました。\n実装とチュートリアルはGitに載せました。\n[https://github.com/yoshida-chem/tradercompany/edit/main/README.md]\n\n 参考文献\n\nhttps://arxiv.org/abs/2012.10215\nhttps://qiita.com/yotapoon/items/1214218c7459ad69db3e\n\n\n 使い方\n\nライブラリ...",
          "link": "https://zenn.dev/yoshida0312/articles/5a499999e114e2",
          "publishedOn": "2023-04-20T06:53:50.000Z",
          "wordCount": 955,
          "title": "Trader-Company method",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kO1pUvxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Trader-Company%2520method%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kO1pUvxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Trader-Company%2520method%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/3ca747d61e17d1",
          "author": "よしだ",
          "description": "StreamlitアプリをExe化する\nstreamlitは専門的な知識を必要とせずにDashboardなどのアプリを作ることができます。\nその簡易さからプロトタイプとしてPoCなどに使用されることが多いかなと思います。\nしかし、サーバーに立てる時間や余裕がない際に他の方に実行してもらうには個別にPython環境を構築する必要があります。\nあまりないケースかもしれませんが、そのようなケース又は手軽に使える方法としてExe化する方法を紹介します。\n\n ライブラリのインストール\n今回の必須ライブラリとして、exe化するためにpyinstaller、streamlitをインストールします。...",
          "link": "https://zenn.dev/yoshida0312/articles/3ca747d61e17d1",
          "publishedOn": "2023-04-20T06:53:31.000Z",
          "wordCount": 1004,
          "title": "pyinstallerを用いたstreamlitのExe化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8hyrZ0Ux--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyinstaller%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fstreamlit%25E3%2581%25AEExe%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8hyrZ0Ux--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyinstaller%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fstreamlit%25E3%2581%25AEExe%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/5c2f4a03f4af9f",
          "author": "よしだ",
          "description": "異常検知の問題点\n\n正常と異常のデータが不均衡\nSwamping : 正常データが異常データに近い時にFalse Negativeが発生\nMasking : 異常なデータがたくさんあり、それらが密な集合になり検知できない\n\n\n 手法\n\n Isolation Forest\n正常データとの距離を見る手法と異なり、異常データを分類する手法です。異常データは決定木の根の部分に近い（必要な分割数が少ない）と考えた手法です。scikit-kearnで実装あり。元のデータからサンプリングを行うことで、大量なデータがあるときに生じやすいSwampingとMaskingの影響を抑える。通常なデータセッ...",
          "link": "https://zenn.dev/yoshida0312/articles/5c2f4a03f4af9f",
          "publishedOn": "2023-04-20T06:53:04.000Z",
          "wordCount": 163,
          "title": "異常検知手法追加メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HyiNNlWO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25E6%2589%258B%25E6%25B3%2595%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HyiNNlWO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25E6%2589%258B%25E6%25B3%2595%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/773738fdce5677",
          "author": "よしだ",
          "description": "不要な次元を含むデータからの異常検知\n多変量のデータがある場合にそのデータセットの変数間で多重共線性があるとホテリング理論を使ってもうまくいきません。これは、共分散行列の逆行列を計算できないためです。このような場合に使われる手法がPCA（/Kernel PCA）を用いた異常検知です。\n\n PCAとは\n正常データもしくは正常データが圧倒的多数なデータからPCAなどから主部分空間（正常部分空間）を求めます。この時、新しいデータ[tex: x']が来たときに、異常度は正常部分空間から新しいデータ点がどれだけ離れているかで求めることができます。\n異常度は以下のように表され、主成分のみを使用し...",
          "link": "https://zenn.dev/yoshida0312/articles/773738fdce5677",
          "publishedOn": "2023-04-20T06:52:43.000Z",
          "wordCount": 455,
          "title": "異常検知７：不要な次元を含むデータからの異常検知 - PCA, Kernel PCA",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wQPxQcdi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2597%25EF%25BC%259A%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AA%25E6%25AC%25A1%25E5%2585%2583%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2580%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%2520-%2520PCA%252C%2520Kernel%2520PCA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wQPxQcdi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2597%25EF%25BC%259A%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AA%25E6%25AC%25A1%25E5%2585%2583%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2580%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%2520-%2520PCA%252C%2520Kernel%2520PCA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/d19314ffe4b8e2",
          "author": "よしだ",
          "description": "One-Class SVM\nOne-Class SVMではデータの主要部分を含む球を考え、その球の外側の点を異常とします。\n異常度は以下のように与えられます。ここで、[tex: R]は球の半径です。SVMと同様にカーネルトリックを行うことで非線形にも対応可能なので、非線形の関係があるデータに対して使われる古典的な手法になっています。\n[tex: \\displaystyle\na(x') = ||x' - b^{*}||^{2} - R^{* 2}\n]\n\n コード\n\n データ準備\n# import packages\nimport pandas as pd\nimport numpy as ...",
          "link": "https://zenn.dev/yoshida0312/articles/d19314ffe4b8e2",
          "publishedOn": "2023-04-20T06:52:22.000Z",
          "wordCount": 696,
          "title": "異常検知６：分布が一山にならない場合 - One-Class SVM",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QvwqzGeB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2596%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520One-Class%2520SVM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QvwqzGeB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2596%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520One-Class%2520SVM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/063f2391a9dbbb",
          "author": "よしだ",
          "description": "混合正規分布モデル（GMM）とは\nKNNではクラスリングの結果をどれだけ信じれば良いのか不明であり、また一般的にクラスター同士が重なっていない場合ばかりではない。そのため、GMMを用いることでクラスター同士の重なりを表現できます。よく使われている方法であり、かつDLベースの手法でも使われたりします。\n異常度はこれまでの議論と同じように以下のように定義されています。\n[tex: \\displaystyle\na(x') = -\\ln \\sum_{k=1}^{K} \\hat{\\pi_k} N(x'|\\hat{\\mu_k}, \\hat{\\Sigma_k})\n]\n\n コード\n\n データ準備\nD...",
          "link": "https://zenn.dev/yoshida0312/articles/063f2391a9dbbb",
          "publishedOn": "2023-04-20T06:51:58.000Z",
          "wordCount": 301,
          "title": "異常検知５：分布が一山にならない場合 -GMM",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A557QCRb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2595%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-GMM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A557QCRb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2595%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-GMM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/a8f173a96ed44d",
          "author": "よしだ",
          "description": "局所外れ値度\n以前のKNN法の弱点としてはデータ密度が空間の場所によりばらつきがあると最適なkを決めるのが難しい点です。この課題は以下のような例を見ると分かりやすいです。右上と左下にクラスターのデータ密度に差があるので、右上のクラスターの半径の基準で考えると、左下のクラスターは外れ値のように扱われてしまいます。\n\n コード\n\n データ準備\n# import packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom scipy import stats\nfrom scipy...",
          "link": "https://zenn.dev/yoshida0312/articles/a8f173a96ed44d",
          "publishedOn": "2023-04-20T06:51:35.000Z",
          "wordCount": 412,
          "title": "異常検知４：分布が一山にならない場合 - 局所外れ値度",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7z3_fO9K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2594%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520%25E5%25B1%2580%25E6%2589%2580%25E5%25A4%2596%25E3%2582%258C%25E5%2580%25A4%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7z3_fO9K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2594%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520%25E5%25B1%2580%25E6%2589%2580%25E5%25A4%2596%25E3%2582%258C%25E5%2580%25A4%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/c3520046d7b814",
          "author": "よしだ",
          "description": "KNNにおける異常検知とは\nホテリング理論やMT法では１つの正規分布を仮定して、そのデータの出現確率が低ければ異常と見なすことができるような異常度を算出しました。\nKNN法ではデータ間の距離を考えることで２つの異常判定基準を考えることができます。\n\n\nk基準：M次元の球を考えて、球の半径の中に入る標本の数kがある基準値以下であれば異常\n\n\n[tex: \\epsilon]基準：観測値に近い順にk個の標本を選んだ時、それを囲む球の半径[tex: \\epsilon_k]がある基準値以上であれば異常\n\n\nつまり、異常データであれば近傍に正常なデータがないはずなので、半径[tex: \\epsi...",
          "link": "https://zenn.dev/yoshida0312/articles/c3520046d7b814",
          "publishedOn": "2023-04-20T06:51:08.000Z",
          "wordCount": 812,
          "title": "異常検知３：分布が一山にならない場合 - KNN法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3-1_sxr---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2593%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520KNN%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3-1_sxr---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2593%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520KNN%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/44493cc242e569",
          "author": "Darman",
          "description": "再帰関数の概要\n再帰関数とは、自分自身を呼び出す関数のことを指します。再帰関数は、問題を繰り返し処理することで解決する場合に非常に有用です。一般的に、再帰関数は次の2つの要素が必要です。\n\nベースケース (base case)：再帰を終了させるための条件。再帰が無限に続かないように、ある条件を満たしたら再帰を終了することが重要です。\n再帰ステップ (recursive step)：自分自身を呼び出す部分で、問題を分割して処理します。\n\n以下に、Pythonで記述された再帰関数の例を示します。\n\n 階乗を計算する再帰関数\ndef factorial(n: int) -> int:...",
          "link": "https://zenn.dev/yutabeee/articles/44493cc242e569",
          "publishedOn": "2023-04-19T08:33:25.000Z",
          "wordCount": 1944,
          "title": "[初心者向け] 再帰関数とは？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kMv_EzcU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%255D%2520%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kMv_EzcU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%255D%2520%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mizti/articles/536147ffc5b249",
          "author": "mizti",
          "description": "このリポジトリについて\nAzure OpenAIサービスにデプロイしたモデルに対して対話的に応答を取得するAPIリクエストサンプルです。\n\n 前提\n\nAzure OpenAIサービスでアカウントが作られていること\nPublic AccessがAllowされていること\n(Azure AD認証を行う場合)認証する主体がAzure OpenAIサービスアカウントに対してCognitive Services OpenAI Userロールを持っていること\n\n\n コード例\n\nopenai_apikey_request_sample.py\n\nAPIキーで認証する例です。\n#Note: The op...",
          "link": "https://zenn.dev/mizti/articles/536147ffc5b249",
          "publishedOn": "2023-04-19T07:41:42.000Z",
          "wordCount": 891,
          "title": "Azure OpenAIのAPIをPythonで呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BdrpiFso--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%25E3%2581%25AEAPI%25E3%2582%2592Python%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizti%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lELUQxZUcyTk4zcFpBcWxTNWgtTTV1OW9DRFFQOXpKWE14Z285eFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BdrpiFso--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%25E3%2581%25AEAPI%25E3%2582%2592Python%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizti%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lELUQxZUcyTk4zcFpBcWxTNWgtTTV1OW9DRFFQOXpKWE14Z285eFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ab7c66cd64f239",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-206 B - Savings\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    s = 1\n    c = 1\n    while s < n:\n        c += 1\n        s += c\n    print(c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ab7c66cd64f239",
          "publishedOn": "2023-04-19T03:52:53.000Z",
          "wordCount": 249,
          "title": "［AtCoder］ABC-206｜B - Savings",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Pfw_dKed--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-206%25EF%25BD%259CB%2520-%2520Savings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Pfw_dKed--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-206%25EF%25BD%259CB%2520-%2520Savings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/368e051e268c0c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-206 A - Maxi-Buying\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    p = (n * 1.08) // 1\n\n    print('Yay!' if p < 206 else ':(' if p > 206 else 'so-so')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/368e051e268c0c",
          "publishedOn": "2023-04-19T03:52:52.000Z",
          "wordCount": 271,
          "title": "［AtCoder］ABC-206｜A - Maxi-Buying",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MwPBhkcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-206%25EF%25BD%259CA%2520-%2520Maxi-Buying%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MwPBhkcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-206%25EF%25BD%259CA%2520-%2520Maxi-Buying%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/carenet/articles/285e6547fbc2f0",
          "author": "Kai",
          "description": "はじめに\nこんにちは、CareNetのKaiと申します。\nCareNetは医療従事者向けメディアを運営している上場企業でして、遅ればせながらテックブログを始めようということで、こちらが最初の記事になります。\n最近CareNetでも機械学習チームが立ち上がっており、LLM（大規模言語モデル）を使ったプロダクト開発に取り組んだりしています。\n今回は、LLMのうちでも計算量・VRAMを削減することのできるAlpacaとLoRAの組み合わせに対して、医療分野でのQ&AデータセットであるPubMedQAでファインチューニングしてみましたので、ご参考になれば幸いです。\n\n Alpacaと...",
          "link": "https://zenn.dev/carenet/articles/285e6547fbc2f0",
          "publishedOn": "2023-04-19T03:33:22.000Z",
          "wordCount": 1203,
          "title": "Alpaca-LoRAをPubMedQAでファインチューニングしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i-eOB4qS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alpaca-LoRA%25E3%2582%2592PubMedQA%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kai%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0luX0J2ajYyMjVsbTRVWXczSjhQODgwRTdhSFF6YXZqcmJHN1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i-eOB4qS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alpaca-LoRA%25E3%2582%2592PubMedQA%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kai%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0luX0J2ajYyMjVsbTRVWXczSjhQODgwRTdhSFF6YXZqcmJHN1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/robon/articles/c943cc4740bffb",
          "author": "荒木 岳夫",
          "description": "前回まで\nhttps://zenn.dev/robon/articles/bb17fd07739519\ncustomerで1 schema = 1 modelの実装ができました。\n\n 仕上げ\n\n productsの追加\ncustomersと同様に実装できました。\nschema単位のモジュール化も問題ありませんでしたし、こちらの方が凝集度が高く、拡張も容易な気がします。同じような設計思想で開発されているところもありました。\nhttps://github.com/zhanymkanov/fastapi-best-practices\nhttps://github.com/Netflix/d...",
          "link": "https://zenn.dev/robon/articles/c943cc4740bffb",
          "publishedOn": "2023-04-19T01:02:27.000Z",
          "wordCount": 2409,
          "title": "FastAPIでREST（その３）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5AMaKq1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5AMaKq1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryutaro_h/articles/cd170fcb5d229e",
          "author": "Ryutaro",
          "description": "初めに\n直近でAppEngine + Pythonの2系から3系への移行を経験しました。その際以前の環境で使用されていたライブラリも移行する必要が出てきており、今回はその中でAppEngineNDBからPython Client for Google Cloud Datastore(以後 Datastore API)の移行について、知っておきたかったことなど簡単に取り上げたいと思います。\n\n\n 前提\nAppEngine + Python2系 → 3系への移行作業は、2系でサポートされていたAppEngine系のライブラリが3系では対応外であることがあるため、言語のバージョンアップと共...",
          "link": "https://zenn.dev/ryutaro_h/articles/cd170fcb5d229e",
          "publishedOn": "2023-04-19T00:38:36.000Z",
          "wordCount": 458,
          "title": "AppEngineNDB → Python Client for Google Cloud Datastore API 移行まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_WAPIoph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppEngineNDB%2520%25E2%2586%2592%2520Python%2520Client%2520for%2520Google%2520Cloud%2520Datastore%2520A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryutaro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_WAPIoph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppEngineNDB%2520%25E2%2586%2592%2520Python%2520Client%2520for%2520Google%2520Cloud%2520Datastore%2520A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryutaro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/3799c1569768ca",
          "author": "nakamura196",
          "description": "以前に以下の記事を執筆しました。JPCOARスキーマを用いたxmlファイルのバリデーションを試しました。\nhttps://zenn.dev/nakamura196/articles/3c91cd443e084c\n今回は、上記の記事での検証を元に、Google Colabを用いた検証ツールを作成しました。以下のURLからお試しいただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/JPCOARスキーマ_v1を用いたxmlファイルのバリデーション.ipynb\n公開済みのxmlファイルのURL...",
          "link": "https://zenn.dev/nakamura196/articles/3799c1569768ca",
          "publishedOn": "2023-04-18T21:29:24.000Z",
          "wordCount": 83,
          "title": "JPCOARスキーマ（v1）を用いたxmlファイルのバリデーションツールの試作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c0G9KbSt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JPCOAR%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25EF%25BC%2588v1%25EF%25BC%2589%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fxml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%25A9%25A6%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c0G9KbSt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JPCOAR%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25EF%25BC%2588v1%25EF%25BC%2589%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fxml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%25A9%25A6%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/f5579f88e22b22",
          "author": "よしだ",
          "description": "はじめに\n前回までで単回帰やNumPyro特有の内容を見てきたので、それらを少し応用して基本的なモデルを実装していきます。理論的な内容は世の中にある優れた本にお任せし、実装中心の内容です。\nまた、前回までで出てきた内容は極力説明を省いて進行します。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimpo...",
          "link": "https://zenn.dev/yoshida0312/articles/f5579f88e22b22",
          "publishedOn": "2023-04-18T14:38:06.000Z",
          "wordCount": 5089,
          "title": "NumPyro：基本のモデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8uUFByH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8uUFByH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/de7079cbd9a2d3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-205 B - Permutation Check\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    a.sort()\n    b = [i + 1 for i in range(n)]\n\n    print('Yes' if a == b else 'No')\n\n\nif __nam...",
          "link": "https://zenn.dev/hyperdb/articles/de7079cbd9a2d3",
          "publishedOn": "2023-04-18T04:35:46.000Z",
          "wordCount": 331,
          "title": "［AtCoder］ABC-205｜B - Permutation Check",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lSiDC3AN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CB%2520-%2520Permutation%2520Check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lSiDC3AN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CB%2520-%2520Permutation%2520Check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/129fa030a0077c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-205 A - kcal\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    c = b / 100 * a\n    print(\"%d\" % c if c.is_integer() else c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/129fa030a0077c",
          "publishedOn": "2023-04-18T04:35:46.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-205｜A - kcal",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--np-AJjtK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CA%2520-%2520kcal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--np-AJjtK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CA%2520-%2520kcal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-framework",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonフレームワークについて解説します。\n\n はじめに\nPythonは、初心者からプロまで多くの人に愛されるプログラミング言語です。Pythonは、シンプルで読みやすいコードを書くことができます。また、Pythonには豊富なライブラリが用意されており、様々な分野での開発に利用されています。Pythonの魅力は、これだけではありません。Pythonには多数のフレームワークがあり、Webアプリケーションを構築することができます。\nここでは、Pythonフレームワークの概要と、代表的なフレームワークであるDjangoとFlaskの紹介を行い...",
          "link": "https://zenn.dev/gk12/articles/python-framework",
          "publishedOn": "2023-04-18T04:33:50.000Z",
          "wordCount": 378,
          "title": "Pythonフレームワーク入門 ~初心者向け~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MoP5Cnw4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2585%25A5%25E9%2596%2580%2520%7E%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MoP5Cnw4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2585%25A5%25E9%2596%2580%2520%7E%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-for-statement",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、for文の使い方について説明します。\n\n for文とは？\nfor文とは、ある範囲内の値を順番に取り出して処理を行うための構文です。Pythonのfor文は、以下のように書きます。\nfor 変数 in イテラブル:\n    処理\nここで、変数とは、イテラブルから取り出した要素が格納される変数のことです。イテラブルとは、複数の要素を持つデータ構造のことで、例えば、リストやタプル、文字列などが該当します。\n\n for文の使い方\nfor文を使うには、まず、イテラブルを用意し、for文の中で処理したい操作を記述します。以下は、リストの要素を順番に取り...",
          "link": "https://zenn.dev/gk12/articles/python-for-statement",
          "publishedOn": "2023-04-18T04:27:10.000Z",
          "wordCount": 316,
          "title": "Pythonのfor文を使いこなそう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Uc9SCdED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEfor%25E6%2596%2587%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%259D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Uc9SCdED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEfor%25E6%2596%2587%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%259D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-comparison-operator",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、比較演算子の使い方について説明します。\n\n 比較演算子とは？\n比較演算子とは、2つの値の大小関係を比較するために使用される演算子のことです。Pythonには、以下のような比較演算子があります。\n\n\n> : 大なり\n\n< : 小なり\n\n>= : 大なりイコール\n\n<= : 小なりイコール\n\n== : 等しい\n\n!= : 等しくない\n\nこれらの演算子を使うことで、2つの値がどのような関係にあるかを判定することができます。\n\n 比較演算子の使い方\n比較演算子を使うには、比較したい2つの値を取得し、演算子で比較します。比較演...",
          "link": "https://zenn.dev/gk12/articles/python-comparison-operator",
          "publishedOn": "2023-04-18T04:23:45.000Z",
          "wordCount": 445,
          "title": "Pythonで比較演算子を使おう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nPJu3YO5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nPJu3YO5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-exercises",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、練習問題を解いて学ぶ方法について説明します。\n\n はじめに\nプログラミングを学ぶ上で、練習問題を解くことは非常に重要です。練習問題を解くことで、プログラムの書き方や思考方法を身に付けることができます。また、練習問題を解くことで、実際に動くプログラムを作ることができるため、モチベーションも高まります。\nPythonは初心者にも優しいプログラミング言語として人気があります。Pythonのコードは読みやすく、学習曲線も比較的緩やかです。Pythonを学ぶ初心者にとって、練習問題を解くことは、Pythonの理解を深めるために必要不可欠です。\n本記事...",
          "link": "https://zenn.dev/gk12/articles/python-exercises",
          "publishedOn": "2023-04-18T04:20:14.000Z",
          "wordCount": 340,
          "title": "Python初心者向け：練習問題を解いて学ぶ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i1QO5Wi3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E7%25B7%25B4%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i1QO5Wi3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E7%25B7%25B4%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-use-class",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonのクラスについて解説していきます。クラスは、Pythonの中でも非常に重要な概念であり、プログラムをより効率的かつ柔軟に作成することができます。本記事では、Pythonのクラスの基本的な使い方について説明し、サンプルコードを交えて解説します。\n\n はじめに\nPythonは、オブジェクト指向プログラミング（OOP）をサポートしており、クラスを定義することができます。クラスは、属性（データ）とメソッド（関数）をまとめたもので、同じ構造のオブジェクトを複数作成することができます。クラスを使うことで、コードの再利用性が高まり、保守しやす...",
          "link": "https://zenn.dev/gk12/articles/python-use-class",
          "publishedOn": "2023-04-18T04:16:29.000Z",
          "wordCount": 509,
          "title": "Python初心者向け：クラスの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FVpdj0BH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FVpdj0BH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-editor",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、おすすめのエディタを紹介します。\n\n はじめに\nPythonを学ぶ上で、エディタの選択は非常に重要です。エディタは、プログラムの編集を行うために欠かせないツールであり、使いやすいものを選ぶことで、開発速度が大幅に向上することができます。ただし、初心者にとっては、どのエディタを選ぶべきか迷ってしまうこともあるかもしれません。そこで、本記事では、Python初心者におすすめのエディタを紹介します。\n\n PyCharm\nPyCharmは、Python開発に特化した統合開発環境（IDE）です。Pythonの構文解析機能が強力で、コードの自動補完やシ...",
          "link": "https://zenn.dev/gk12/articles/python-editor",
          "publishedOn": "2023-04-18T04:10:07.000Z",
          "wordCount": 190,
          "title": "Python初心者におすすめのエディタ一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JSzMkCok--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JSzMkCok--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-library",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonでよく使われるライブラリの一覧を紹介します。\n\n はじめに\nPythonは、様々な分野で利用されているプログラミング言語です。その中でも特に、データ分析や機械学習などの分野でよく使われるのが、Pythonのライブラリです。ライブラリを利用することで、より高度な処理が簡単に行えるようになります。\nこの記事では、Python初心者の方に向けて、よく使われるライブラリを紹介します。まずは、Pythonでのライブラリのインストール方法から説明していきます。\n\n ライブラリのインストール方法\nPythonのライブラリは、pipというパッケ...",
          "link": "https://zenn.dev/gk12/articles/python-library",
          "publishedOn": "2023-04-18T04:06:00.000Z",
          "wordCount": 619,
          "title": "Pythonでよく使われるライブラリ一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--46DYpDyZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--46DYpDyZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-scraping",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、スクレイピングの入門記事を書いていきます。\n\n はじめに\nWebサイト上の情報を取得するスクレイピングは、Pythonを使ったデータ取得の方法として非常に有用です。Pythonにはスクレイピングに必要なライブラリが豊富にあり、簡単にスクレイピングができるため、初心者でも始めやすいと言われています。本記事では、Pythonでスクレイピングを行う方法を、基本的なコードを交えて解説していきます。\n\n スクレイピングに必要なライブラリのインストール\nPythonでスクレイピングを行うには、以下のライブラリをインストールする必要があります。\n\nreq...",
          "link": "https://zenn.dev/gk12/articles/python-scraping",
          "publishedOn": "2023-04-18T04:00:19.000Z",
          "wordCount": 202,
          "title": "Python初心者のためのスクレイピング入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WHOBqPXt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WHOBqPXt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-generate-exe",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonプログラムをexeファイルに変換する方法について解説します。\n\n exe化とは\nexe化とは、PythonプログラムをWindowsの実行ファイルであるexeファイルに変換することです。exeファイルに変換することで、Python環境がない他のコンピュータでもPythonプログラムを実行することができます。\n\n PyInstallerを使用したexe化方法\nPythonプログラムをexeファイルに変換する方法はいくつかありますが、ここでは、PyInstallerを使用する方法を紹介します。PyInstallerは、Pythonの...",
          "link": "https://zenn.dev/gk12/articles/python-generate-exe",
          "publishedOn": "2023-04-18T03:54:01.000Z",
          "wordCount": 387,
          "title": "Pythonでexe化する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tt7oXy2---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7exe%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tt7oXy2---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7exe%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-add-array",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、配列に要素を追加する方法について解説します。\n\n 配列とは\n配列とは、複数の要素をまとめたデータ構造のことです。Pythonでは、リスト(List)と呼ばれます。リストは、角括弧([])で要素を囲み、カンマ(,)で区切ります。\n以下は、リストの例です。\nfruits = [\"apple\", \"banana\", \"orange\"]\n\n リストへの要素追加方法\nリストに要素を追加する方法には、以下の2つがあります。\n\n\nappend()メソッドを使用する方法\n\n+演算子を使用する方法\n\n\n append()メソッドを使用する方法\nappend(...",
          "link": "https://zenn.dev/gk12/articles/python-add-array",
          "publishedOn": "2023-04-18T02:22:37.000Z",
          "wordCount": 429,
          "title": "Pythonで配列に要素を追加する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KgUbpklX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KgUbpklX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-logger-output",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\nこんにちは。今回は、Python初心者に向けて、ログを出力する方法について解説します。Pythonには、ログを出力するための標準ライブラリであるloggingが用意されています。\n以下では、実際のコード例を交えて、ログを出力する方法について解説していきます。\n\n loggingモジュールを使った方法\nloggingモジュールを使うことで、簡単にログを出力することができます。loggingモジュールは、ログレベルによって、出力する情報の詳細度を設定...",
          "link": "https://zenn.dev/gk12/articles/python-logger-output",
          "publishedOn": "2023-04-18T02:16:37.000Z",
          "wordCount": 272,
          "title": "Pythonでログを出力する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CQzlH3t2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CQzlH3t2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-square-root",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\nこんにちは。今回は、Python初心者に向けて、ルートを求める方法について解説します。ルートとは、数値の平方根のことを指します。Pythonには、ルートを求めるための機能が標準で用意されています。\n以下では、実際のコード例を交えて、ルートを求める方法について解説していきます。\n\n mathモジュールを使った方法\nPythonの標準ライブラリに含まれるmathモジュールを使うことで、ルートを求めることができます。mathモジュールのsqrt関数を使...",
          "link": "https://zenn.dev/gk12/articles/python-square-root",
          "publishedOn": "2023-04-18T02:06:47.000Z",
          "wordCount": 209,
          "title": "Pythonのルートを求める方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7yq9Diuv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7yq9Diuv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-replace",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\n\n はじめに\nこんにちは。今回は、Python初心者に向けて、文字列の置換処理について解説します。Pythonでは、文字列を簡単に置換することができる「replace」メソッドが用意されています。\n文字列の置換処理は、テキスト処理において非常に重要な機能です。Pythonには、文字列の置換処理を行う「replace」メソッドが用意されています。このメソッドを使うことで、簡単に文字列を置換することができます。\n以下では、実際のコード例を交えて、re...",
          "link": "https://zenn.dev/gk12/articles/python-replace",
          "publishedOn": "2023-04-18T02:02:52.000Z",
          "wordCount": 369,
          "title": "Python初心者のための文字列置換処理の使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ktKURLyU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%25BD%25AE%25E6%258F%259B%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ktKURLyU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%25BD%25AE%25E6%258F%259B%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-openpyxl-work",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\n\n はじめに\nこんにちは。今回は、Python初心者に向けて、Excelファイルを操作するためのライブラリである「openpyxl」について解説します。\nExcelファイルは、ビジネスなどで頻繁に利用されるデータ形式の一つです。Pythonでも、Excelファイルを操作することができる「openpyxl」というライブラリがあります。このライブラリを利用することで、PythonでExcelファイルの読み込みや編集ができます。\n以下では、実際のコード...",
          "link": "https://zenn.dev/gk12/articles/python-openpyxl-work",
          "publishedOn": "2023-04-18T01:49:22.000Z",
          "wordCount": 291,
          "title": "Python初心者のためのopenpyxlの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S2tsLFJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEopenpyxl%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S2tsLFJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEopenpyxl%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-image-recognition",
          "author": "gk12",
          "description": "はじめに\nこんにちは。今回は、Python初心者に向けて、Pythonと画像認識について解説します。Pythonは、シンプルでわかりやすく、初心者でも学びやすいプログラミング言語です。また、近年では画像認識技術が注目されており、Pythonを使った画像認識の実装も可能になっています。本記事では、Pythonと画像認識の基礎から具体的な実装方法までを解説します。\n\n Pythonとは\nPythonは、広く使われているプログラミング言語で、シンプルでわかりやすい文法が特徴です。また、多くのライブラリが用意されており、様々な分野で使用されています。Pythonは、データサイエンスや機械学習...",
          "link": "https://zenn.dev/gk12/articles/python-image-recognition",
          "publishedOn": "2023-04-18T01:18:27.000Z",
          "wordCount": 238,
          "title": "Python初心者のための画像認識入門ガイド",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l_vK7SSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l_vK7SSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robon/articles/bb17fd07739519",
          "author": "荒木 岳夫",
          "description": "前回まで\nhttps://zenn.dev/robon/articles/aa7ba513b3bdb3\nFastAPIも導入すれば、とりあえず動くところまでは簡単でした。\n\n 設計と実装\n\n プロジェクトの構造はどうする？\nNestJSはCLIでひな型の自動生成をしてくれたので、それに乗っかることにしました。スキーマ単位の構造は、スキーマ駆動でマイクロサービスな感じで、これからはこういう構造になっていくのかなぁと思いました。\nで、FastAPIです。公式では、どうやらレイヤ構造を推奨しているようです。\nhttps://fastapi.tiangolo.com/tutorial/big...",
          "link": "https://zenn.dev/robon/articles/bb17fd07739519",
          "publishedOn": "2023-04-18T01:03:49.000Z",
          "wordCount": 1909,
          "title": "FastAPIでREST（その２）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eDiA4gpH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eDiA4gpH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/3b554cc522788b",
          "author": "よしだ",
          "description": "はじめに\nNumPyroを用いてモデリングを実装する上で必要な知識をまとめて説明します。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport numpyro\nfrom numpyro.diagnostics import hpdi\nimport numpyro.distributions as ...",
          "link": "https://zenn.dev/yoshida0312/articles/3b554cc522788b",
          "publishedOn": "2023-04-17T16:24:10.000Z",
          "wordCount": 5991,
          "title": "NumPyro：NumPyro特有の関数などまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wtAPQcvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259ANumPyro%25E7%2589%25B9%25E6%259C%2589%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wtAPQcvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259ANumPyro%25E7%2589%25B9%25E6%259C%2589%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/d8b105286407b6",
          "author": "Darman",
          "description": "はじめに\nQueue（キュー）は、データ構造の一つで、要素を先入れ先出し（FIFO: First-In-First-Out）の順序で追加・取り出しを行うことができます。この記事では、Queueの基本概念とPythonでの実装方法について解説します。\n\n キューの基本概念\nキューは、要素が一列に並んでいて、新しい要素が末尾に追加され、先頭の要素が取り出されるデータ構造です。主な操作は以下の2つです。\n\n\nenqueue: キューの末尾に要素を追加する操作です。\n\ndequeue: キューの先頭の要素を取り出す操作です。\n\nキューは、待ち行列やバッファなど、さまざまなシチュエーションで使...",
          "link": "https://zenn.dev/yutabeee/articles/d8b105286407b6",
          "publishedOn": "2023-04-17T15:30:21.000Z",
          "wordCount": 707,
          "title": "Queueの解説: 基本概念とPythonでの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m52vrNSd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Queue%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%253A%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m52vrNSd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Queue%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%253A%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bonsai_engineer/articles/3cd836a5c649fe",
          "author": "盆栽エンジニア",
          "description": "RaspberryPi起動時に自動でPythonを実行する方法を共有します。\n\n\n実行するPythonスクリプトを作成\nvim /home/pi/Desktop/raspberrypi.py\n\n\nsystemd/systemフォルダに移動\n\n\ncd /etc/systemd/system/\n\n定義ファイルを作成\n\nsudo vim raspberrypi.service\n※ファイル名は任意\n\n設定を書き込む\n\n[Unit]\nDescription=起動テスト\n\n[Service]\nExecStart=/usr/bin/python3 /home/pi/Desktop/raspberryp...",
          "link": "https://zenn.dev/bonsai_engineer/articles/3cd836a5c649fe",
          "publishedOn": "2023-04-17T15:21:00.000Z",
          "wordCount": 173,
          "title": "RaspberryPiで起動時にPythonスクリプトを実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6jdC8mjK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RaspberryPi%25E3%2581%25A7%25E8%25B5%25B7%25E5%258B%2595%25E6%2599%2582%25E3%2581%25ABPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6jdC8mjK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RaspberryPi%25E3%2581%25A7%25E8%25B5%25B7%25E5%258B%2595%25E6%2599%2582%25E3%2581%25ABPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/823a5ceb3d76e9",
          "author": "Darman",
          "description": "Pythonの型付けについて\nPythonは動的型付け言語ですが、型ヒント（type hinting）を使用することで、コードの可読性やエラーの予防に役立ちます。Pythonの型ヒントは、Python 3.5で導入された「PEP 484」という機能で、Pythonの標準ライブラリであるtypingを使って型情報を付与することができます。\n\n 型ヒントの基本\n型ヒントを使用するには、関数の引数や戻り値に対して型情報を記述します。例えば、以下のように型ヒントを追加することができます。\ndef greet(name: str) -> str:\n    return \"Hello, \"...",
          "link": "https://zenn.dev/yutabeee/articles/823a5ceb3d76e9",
          "publishedOn": "2023-04-17T14:34:00.000Z",
          "wordCount": 611,
          "title": "Pythonでの型付けのやり方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rtMY9ZCe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25AE%25E3%2582%2584%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rtMY9ZCe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25AE%25E3%2582%2584%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/fbc5410fd509b7",
          "author": "laiso",
          "description": "開発中にChat completion APIやEmbeddings APIを過渡に呼び出して課金されてしまうことを回避します。\nまた自動テスト内でOpenAI APIを呼び出す時も有効です。\nhttps://github.com/openai/openai-openapi/\nOpenAI公式リポジトリにOpenAPI仕様書が公開されているのでStoplight Prismでモックサーバーを実行します。\n> npm install -g @stoplight/prism-cli\n> prism mock https://raw.githubusercontent.com/op...",
          "link": "https://zenn.dev/laiso/articles/fbc5410fd509b7",
          "publishedOn": "2023-04-17T12:02:47.000Z",
          "wordCount": 871,
          "title": "開発時にモック版OpenAI APIサーバーを使用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AFIHm-mN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E7%2589%2588OpenAI%2520API%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AFIHm-mN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E7%2589%2588OpenAI%2520API%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daddy_yukio/articles/8c6a15fc09548a",
          "author": "Yukio Ichikawa",
          "description": "はじめに\nこんにちは。Daddy's Officeの市川です。\n今回はGmailサーバーをSMTPサーバーとしてメールを送信するプログラムをPythonで書いてみます。\nGmailサーバーへのログインは、GoogleアカウントでログインというOAuth認証が基本になっていますが、アカウント設定を行うことで、ユーザ/パスワードの認証でログインすることができます。\nただ、この方法が最近変更されたりと、いまいちまとまった情報がなかったので、備忘録として記事に残しておこうと思います。\n\n メール送信の仕組み\nメールは、送った人の端末から受信する人の端末へ直接送られているわけではありません。\n...",
          "link": "https://zenn.dev/daddy_yukio/articles/8c6a15fc09548a",
          "publishedOn": "2023-04-17T06:52:50.000Z",
          "wordCount": 348,
          "title": "【Python】Gmailサーバを使ってメールを送信する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qvNzFTd2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Gmail%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yukio%2520Ichikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZmZiNTY4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qvNzFTd2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Gmail%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yukio%2520Ichikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZmZiNTY4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b11f8ca4de5f6f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-203 B - AtCoder Condominium\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, k = getIntMap()\n\n    a = (1 + k) * k // 2\n    b = k * 100\n\n    t = 0\n    for i in range(1, n + 1):\n        t += (a + b * i)\n    print(t)\n\n\nif __name__ == \"__main__\":\n    m...",
          "link": "https://zenn.dev/hyperdb/articles/b11f8ca4de5f6f",
          "publishedOn": "2023-04-17T03:57:15.000Z",
          "wordCount": 336,
          "title": "［AtCoder］ABC-203｜B - AtCoder Condominium",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JpYEnrg4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CB%2520-%2520AtCoder%2520Condominium%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JpYEnrg4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CB%2520-%2520AtCoder%2520Condominium%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/537f90229bc800",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-204 A - Rock-paper-scissors\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x, y = getIntMap()\n\n    print(x if x == y else 3 - (x + y))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/537f90229bc800",
          "publishedOn": "2023-04-17T03:57:15.000Z",
          "wordCount": 249,
          "title": "［AtCoder］ABC-204｜A - Rock-paper-scissors",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6lgbXtf---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CA%2520-%2520Rock-paper-scissors%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6lgbXtf---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CA%2520-%2520Rock-paper-scissors%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/331d96ab0d8812",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-203 A - Chinchirorin\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    l = getIntList()\n\n    l.sort()\n    c = len(set(l))\n\n    if c == 3:\n        print(0)\n    elif c == 1:\n        print(l[0])\n    else:\n        print(l[2] if l[0] == l[1] else l[0...",
          "link": "https://zenn.dev/hyperdb/articles/331d96ab0d8812",
          "publishedOn": "2023-04-17T03:57:14.000Z",
          "wordCount": 347,
          "title": "［AtCoder］ABC-203｜A - Chinchirorin",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dthCkq8B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CA%2520-%2520Chinchirorin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dthCkq8B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CA%2520-%2520Chinchirorin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/04ef0ae7d37776",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-204 B - Nuts\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    print(sum([i - 10 for i in a if i > 10]))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/04ef0ae7d37776",
          "publishedOn": "2023-04-17T03:57:14.000Z",
          "wordCount": 302,
          "title": "［AtCoder］ABC-204｜B - Nuts",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cd_lTpLI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CB%2520-%2520Nuts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cd_lTpLI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CB%2520-%2520Nuts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/e8fb2847cfc980",
          "author": "Darman",
          "description": "クイックソートの概要\nクイックソートは、高速な比較ベースのソートアルゴリズムで、データをピボット（基準値）を中心に分割し、再帰的にソートを行います。平均計算時間は O(n log n) で、最悪の場合は O(n^2) ですが、実際には非常に高速で動作することが多いです。\n\n クイックソートの手順\n\nピボットを選択する（例：配列の中央値）。\n左側からピボットより大きい要素を探す。\n右側からピボットより小さい要素を探す。\n2 と 3 で見つかった要素を交換する。\n2 から 4 を繰り返し、左側にはピボットより小さい要素、右側にはピボットより大きい要素が集まる。\n再帰的に左側の部分配列と右...",
          "link": "https://zenn.dev/yutabeee/articles/e8fb2847cfc980",
          "publishedOn": "2023-04-17T03:27:00.000Z",
          "wordCount": 743,
          "title": "Pythonでクイックソート完全解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gZ52wsPY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gZ52wsPY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robon/articles/aa7ba513b3bdb3",
          "author": "荒木 岳夫",
          "description": "はじめに\n当社では、クラウドネイティブなSaaSの開発をしており、いつもはWebAPIの実装ならサーバーレスで。となるのですが、今回は、サーバーレスでないWebAPIの実現方法として、NestJSに続き、FastAPIを動かしてみましたという内容です。\nhttps://zenn.dev/robon/articles/76d4ec767b72ae\n上記のNestJSの記事と同じお題を実装してみます。\n\n 環境構築\n\n Python\nFastAPIはPythonの型ヒントを活用していて、Pythonのバージョンが異なると型ヒントの書き方や範囲がかわるようです。このため、Pythonのバー...",
          "link": "https://zenn.dev/robon/articles/aa7ba513b3bdb3",
          "publishedOn": "2023-04-17T01:14:23.000Z",
          "wordCount": 939,
          "title": "FastAPIでREST（その１）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d7K9MRdh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d7K9MRdh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/23dc52cb1576c4",
          "author": "よしだ",
          "description": "はじめに\nPPLの中ではStanが使用されることが多いですが、「Stan言語で書かないといけない」「コンパイルに時間がかかる」等によりストレスがかかることが多かったので、PythonのNumpyライクに書くことができるNumPyroを触っています。個人的にNumpyを触っていればとっつきやすいため良いライブラリだと思うのですが、ネットの記事がほとんどないことがあまり広がらない要因の１つかなと思います。（また記事も古く情報が更新されてないこともあります）\nそこで、日本語のNumPyroの記事が増えることに期待して、ドキュメント読んでもいまいち分からないところをカバーしながらまとめていき...",
          "link": "https://zenn.dev/yoshida0312/articles/23dc52cb1576c4",
          "publishedOn": "2023-04-16T15:39:47.000Z",
          "wordCount": 3569,
          "title": "NumPyro：インストール方法と基本操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aSIPevK7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aSIPevK7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ekke/articles/ec07943d678340",
          "author": "Ekke",
          "description": "本記事は，日比谷高校文化祭「第46回星陵祭」（2022年9月開催）に向けて開発されたオンライン整理券システム\"Quaint\"の主な機能や開発の経過を紹介するものです．文化祭前々日に発生したシステム障害が原因で，Quaintは実際の文化祭で使用されていません．本記事では”Quaint”開発の経過とともに，システム障害の原因を検証します．書けば書くほど書き足りないし失敗談を公開するのはとても恥ずかしいんですが，このままだといつまで経っても公開できないので，同じようなことを考えてる人の役に少しでも立てればという思いから公開します．\n!\n本記事は知見の共有を目的として個人的に執筆されたものです．...",
          "link": "https://zenn.dev/ekke/articles/ec07943d678340",
          "publishedOn": "2023-04-16T14:19:11.000Z",
          "wordCount": 451,
          "title": "【失敗記】日比谷高校星陵祭2022のオンライン整理券システムを制作しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vjqj2r0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25A4%25B1%25E6%2595%2597%25E8%25A8%2598%25E3%2580%2591%25E6%2597%25A5%25E6%25AF%2594%25E8%25B0%25B7%25E9%25AB%2598%25E6%25A0%25A1%25E6%2598%259F%25E9%2599%25B5%25E7%25A5%25AD2022%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E6%2595%25B4%25E7%2590%2586%25E5%2588%25B8%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ekke%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MjgwOWFhZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Vjqj2r0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25A4%25B1%25E6%2595%2597%25E8%25A8%2598%25E3%2580%2591%25E6%2597%25A5%25E6%25AF%2594%25E8%25B0%25B7%25E9%25AB%2598%25E6%25A0%25A1%25E6%2598%259F%25E9%2599%25B5%25E7%25A5%25AD2022%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E6%2595%25B4%25E7%2590%2586%25E5%2588%25B8%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ekke%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MjgwOWFhZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3fae373f254a06",
          "author": "Darman",
          "description": "データ構造の超基本、ハッシュ表についてPythonを用いて解説します。\n\n ハッシュ表（ハッシュマップ）\nハッシュ表は、キーと値のペアを効率的に格納・検索できるデータ構造です。Pythonでは辞書型（dict）がハッシュ表として実装されています。\nハッシュ表の特徴：\n\n平均的にO(1)でアクセス可能\nハッシュ関数を使用して、キーを配列のインデックスに変換\n\n\n ハッシュ関数\nハッシュ関数は、あるデータ（キー）を受け取り、固定長の数値（ハッシュ値）を生成します。ハッシュ関数の性質により、同じキーに対しては常に同じハッシュ値が生成され、異なるキーに対しては異なるハッシュ値が生成されることが望...",
          "link": "https://zenn.dev/yutabeee/articles/3fae373f254a06",
          "publishedOn": "2023-04-16T11:16:42.000Z",
          "wordCount": 521,
          "title": "Pythonのハッシュテーブル(辞書型)完全に理解した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R0WP2sl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%2528%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%2529%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R0WP2sl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%2528%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%2529%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fura2/articles/c97c8a59f3cc19",
          "author": "fura2",
          "description": "これはなに？\n\n二つの日本語の単語がどれくらい似て聞こえるかを測る方法を考えました。\nそれを応用して、特定の辞書に含まれる単語だけを使った替え歌の歌詞を生成するプログラムを作成しました。(umimi氏との共同プロジェクト)\n\n同氏の2023年2月3日の記事の続きにあたる内容ですが、この記事単体で完結しています。\n\n\n\n\n デモ\n難しい話の前に、まずは聞いてください。\n【自動作詞】Magic: The Gathering[1]のカード名で「勇気100%」歌ってもらった\nhttps://youtu.be/tIXsMYVUjAM\n\n 成果物\n今回の手法を用いた替え歌制作の支援ツールをStr...",
          "link": "https://zenn.dev/fura2/articles/c97c8a59f3cc19",
          "publishedOn": "2023-04-16T11:00:59.000Z",
          "wordCount": 3076,
          "title": "日本語の響きの近さを測る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YyPhae1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E9%259F%25BF%25E3%2581%258D%25E3%2581%25AE%25E8%25BF%2591%25E3%2581%2595%25E3%2582%2592%25E6%25B8%25AC%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fura2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4MDc3OWZiNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YyPhae1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E9%259F%25BF%25E3%2581%258D%25E3%2581%25AE%25E8%25BF%2591%25E3%2581%2595%25E3%2582%2592%25E6%25B8%25AC%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fura2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4MDc3OWZiNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/77f3739af0214b",
          "author": "ShunDev",
          "description": "はじめに\nこの記事はポアソンの小数法則の証明と可視化を行なっている. なお, ポアソン分布の性質については下記の記事にまとめている.\n\nポアソン分布の期待値, 分散, 積率母関数, 最尤推定, 可視化\n\n\n ポアソンの小数法則\n以下が成り立つ.\n\n\\lim_{np=\\lambda, n\\rightarrow \\infty} \\binom{n}{x} p^x (1-p)^{n-x} \\rightarrow \\frac{\\lambda^x}{x!} e^{-\\lambda}.\n\n\n 証明\n\n 注意\n以下に注意する.\n\\lambda = np と固定するとき, n \\rightarrow ...",
          "link": "https://zenn.dev/shundeveloper/articles/77f3739af0214b",
          "publishedOn": "2023-04-16T11:00:00.000Z",
          "wordCount": 1478,
          "title": "[統計学] ポアソンの小数法則の証明と可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jbsJLHiv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%2520%25E3%2583%259D%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25AE%25E5%25B0%258F%25E6%2595%25B0%25E6%25B3%2595%25E5%2589%2587%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jbsJLHiv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%2520%25E3%2583%259D%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25AE%25E5%25B0%258F%25E6%2595%25B0%25E6%25B3%2595%25E5%2589%2587%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/6f601978f032f3",
          "author": "Darman",
          "description": "Visual Studio Code で Python のテストを実行する方法\nVisual Studio Code (VSCode) には Python のテストを実行するための機能があります。本記事では手順を1から解説します。\n\n 1. 必要な拡張機能をインストールする\nVSCode で Python のテストを実行するには、Python 拡張機能をインストールする必要があります。\n\nVSCode を開き、左サイドバーの拡張機能アイコンをクリックします。\n検索ボックスに「Python」と入力し、Microsoft が提供する Python 拡張機能を見つけます。\n「Install...",
          "link": "https://zenn.dev/yutabeee/articles/6f601978f032f3",
          "publishedOn": "2023-04-16T09:57:28.000Z",
          "wordCount": 357,
          "title": "Visual Studio Code で Python のテストを実行する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hHeb0lVc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Visual%2520Studio%2520Code%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hHeb0lVc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Visual%2520Studio%2520Code%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kevinrobot34/articles/python-asyncio-memo",
          "author": "けびん",
          "description": "用語\n\n ブロッキング・ノンブロッキング\n\nブロッキング\n\nプログラムのある処理が完了するのを待っており、他の処理は行えない状態のこと\nCPU等のリソースを占有してしまうが、入出力などの場合にはレスポンスをただ待っているだけということがあり、勿体無い\n\n\nノンブロッキング\n\nプログラムのある処理の待機時に、ブロッキングせず途中で他の処理に移ることが可能な状態のこと\n適切にノンブロッキングなコードを書き、リソースの使用率を高めたり無駄な待機時間をなくしたりすることで、処理の高速化を狙う\n\n\n\n\n 並行処理と並列処理\n似た単語だけど意味するところは結構違うので注意\n\n並行処理 (Conc...",
          "link": "https://zenn.dev/kevinrobot34/articles/python-asyncio-memo",
          "publishedOn": "2023-04-16T07:01:58.000Z",
          "wordCount": 2268,
          "title": "Pythonで非同期処理をやる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Gv8sbSeY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%25B3%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZDNjMWIxNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Gv8sbSeY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%25B3%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZDNjMWIxNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/0f1b828dde7893",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100本ノック(自作)21本目~30本目の問題とPythonのサンプルコードです．\n問題の不備や内容の誤り等がありましたら，ご指摘いただけますと幸いです．\n\n 設定\nオフラインの店舗を構える化粧品会社で地域を絞って広告をうつケースを考えます．\n広告をうった地域において，オフライン店舗の売上がどれくらい増加したかという効果を推定します．\n利用するデータは，下記のファイルです．\nhttps://github.com/s1ok69oo/causal_inference_100knock/blob/main/data/causal_knock3.csv\nデータは，index...",
          "link": "https://zenn.dev/s1ok69oo/articles/0f1b828dde7893",
          "publishedOn": "2023-04-16T06:58:25.000Z",
          "wordCount": 2749,
          "title": "因果推論100本ノック(3)差分の差分法(DID)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wXkIDaT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25283%2529%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%25AE%25E5%25B7%25AE%25E5%2588%2586%25E6%25B3%2595%2528DID%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wXkIDaT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25283%2529%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%25AE%25E5%25B7%25AE%25E5%2588%2586%25E6%25B3%2595%2528DID%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kecy/articles/b019e91d5698fc",
          "author": "kecy",
          "description": "いま「自律駆動AI」として話題のAuto-GPT。自分のPCをコマンドラインツールとしてAIに使わせて思考させるという発想には興味がわきつつちょっとした怖さも憶えます。\nAuto-GPTがどんな仕組みになっているかはこちらの記事で紹介しています。\nhttps://zenn.dev/kecy/articles/7349a3969e2de6\n自分のPCで直接動かすのは怖いので、Dockerコンテナ内で動かしてみました。公式のソースコードのままだと自分の環境では動かなくて、いくつか調整を加えてようやく動かせたというところなので、その手順をまとめておきます。\n（Auto-GPTリポジトリは現在盛...",
          "link": "https://zenn.dev/kecy/articles/b019e91d5698fc",
          "publishedOn": "2023-04-16T04:29:29.000Z",
          "wordCount": 1363,
          "title": "Dockerコンテナの中でAutoGPTを動かしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--E2QJkb6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7AutoGPT%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--E2QJkb6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7AutoGPT%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daon/articles/f6c81659ffc14b",
          "author": "daichi",
          "description": "title: \"OpenAI API research\"\n\n 方針\nプロダクトを作りながら学ぶ\n\n\n 計画\n\nアイデア出し\n実装\n\n\n\n\n 1. アイデア出し\n\n ブレーンストーミングの実施\n\n 事例調査\n\n\nOpenAI Cookbook\n\nOpenAI Documentation\n\n\n\nChatGPT Plugins\n\nChatGPT plugins\nChatGPTをサードパーティのアプリケーションと繋げるためのもの\n\n\n\n\n ChatGPT(GPT-4)を用いた案出し\n\n\nインターネット上で得やすいデータは何ですか？\nインターネット上で得やすいデータは多岐にわたりますが、以下...",
          "link": "https://zenn.dev/daon/articles/f6c81659ffc14b",
          "publishedOn": "2023-04-16T02:35:56.000Z",
          "wordCount": 3050,
          "title": "OpenAI APIの調査",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cLsuT9TH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:OpenAI%2520API%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5ZmFiNGFjMTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cLsuT9TH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:OpenAI%2520API%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5ZmFiNGFjMTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ironmask/articles/856aba21769fd0",
          "author": "鉄仮面",
          "description": "Wagtailブログを試してみた\nDjangoでブログを作るのは形だけなら意外に簡単ですが、操作性やデザイン性を考えれば、全くWordPressに勝てない･･･しかし、バグが多いWordPressを使い続けるのももう嫌だ･･･と調べていたところ、Djangoと同じPythonで作られた（というか、Djangoをベースに作られらている）「Wagtaile」というCMSを発見しました。\nYoutubeでは絶賛されて（？）いますが、英語の解説動画しかないので、理解するのにかなりしんどいので、こちらの記事にまとめておきます。\nおすすめ動画\n\n Wagitalって何？\nWagtailは、Pyt...",
          "link": "https://zenn.dev/ironmask/articles/856aba21769fd0",
          "publishedOn": "2023-04-16T02:33:02.000Z",
          "wordCount": 2050,
          "title": "Wagtailブログを試してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r6kW4-w4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wagtail%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2589%2584%25E4%25BB%25AE%25E9%259D%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhODM4MGRmNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--r6kW4-w4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wagtail%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2589%2584%25E4%25BB%25AE%25E9%259D%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhODM4MGRmNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3e117656f261fb",
          "author": "Darman",
          "description": "スタックオーバーフローとは\nスタックオーバーフローとは、プログラム実行中にコールスタックが一定の容量を超えてしまう現象を指します。コールスタックは、関数呼び出しやローカル変数などの情報を格納するためのメモリ領域ですが、その容量は限られています。スタックオーバーフローが発生すると、プログラムは正常に動作せず、クラッシュや不正な動作を引き起こすことがあります。\n\n スタックオーバーフローが発生する状況\n\n\n再帰関数の呼び出しが適切なベースケースに到達せず、無限に続いてしまう場合：再帰関数は自分自身を呼び出す関数であり、ベースケースに到達しない限り呼び出しが続きます。その結果、コールスタッ...",
          "link": "https://zenn.dev/yutabeee/articles/3e117656f261fb",
          "publishedOn": "2023-04-16T02:05:02.000Z",
          "wordCount": 78,
          "title": "スタックオーバフローとその対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5y5XAqZP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5y5XAqZP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/baebcbe7103116",
          "author": "Darman",
          "description": "コールスタックとは\nコールスタックは、プログラム内で関数が呼び出される際に、その関数の実行情報を一時的に保存するデータ構造です。主な目的は、関数の呼び出し履歴を追跡し、関数が終了したときに正しい戻り先を知ることです。\n\n コールスタックの役割\nコールスタックは以下の3つの主要な役割を果たします。\n\n関数の呼び出し履歴を追跡する\n各関数のローカル変数とスコープを管理する\n関数が正しく終了したときに戻り先を知る\n\n\n 関数の呼び出し履歴を追跡する\nプログラムは、複数の関数から構成されており、一つの関数が別の関数を呼び出すことがあります。コールスタックは、関数がどのように呼び出されているか...",
          "link": "https://zenn.dev/yutabeee/articles/baebcbe7103116",
          "publishedOn": "2023-04-16T01:37:31.000Z",
          "wordCount": 303,
          "title": "コールスタック完全に理解した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VsDBaYcS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VsDBaYcS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/233be33676471d",
          "author": "Matsuzaki",
          "description": "ワイブル分析ってなに？てか、度数分布とか何それ？って\nこちらに簡単にまとめました\n\n ポートフォリオ作っている\n個人的に欲しいサイトを作りたいと思って（フロントの勉強も兼ねて）作成しているけど、chatgptを使って書いているからとても早くできている気がする。今後のスタンダードはコメントを書いて\necsでfargate使ってとりあえず、デプロイするか\nリポジトリ\n\n codecopliot\nそのうちコメント駆動開発とか言われそうだな\n\n 今後のキャリアについて考えてみた\n考え始めた理由はこれ\nこれまで自分はどんな色々興味関心があって、色々と手を出してみては中途半端に終わっていたような...",
          "link": "https://zenn.dev/zi_matsu/articles/233be33676471d",
          "publishedOn": "2023-04-16T01:19:19.000Z",
          "wordCount": 148,
          "title": "4/9〜4/16で技術的にやったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4QsLE0h---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F9%25E3%2580%259C4%252F16%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4QsLE0h---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F9%25E3%2580%259C4%252F16%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kecy/articles/7349a3969e2de6",
          "author": "kecy",
          "description": "ChatGPTを皮切りとしたAIブーム。流石にちょっと過熱気味になってきた印象があります。\n中でも気になるのは「AutoGPT」の話題。Twitter上だと、\nhttps://twitter.com/kajikent/status/1646517019414777857\nhttps://twitter.com/HChishiro/status/1646504072491732993\n他にも、AgentGPTを使って「AutoGPTすごい！AGIだ！」としている投稿を多く見かけました。\nですが、「AgentGPTはAuto-GPTのブラウザ版」ではありません（少なくとも2023年4月15日...",
          "link": "https://zenn.dev/kecy/articles/7349a3969e2de6",
          "publishedOn": "2023-04-15T15:35:32.000Z",
          "wordCount": 726,
          "title": "「Auto-GPTとAgentGPTは別物です」という話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I6gUcsyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CAuto-GPT%25E3%2581%25A8AgentGPT%25E3%2581%25AF%25E5%2588%25A5%25E7%2589%25A9%25E3%2581%25A7%25E3%2581%2599%25E3%2580%258D%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I6gUcsyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CAuto-GPT%25E3%2581%25A8AgentGPT%25E3%2581%25AF%25E5%2588%25A5%25E7%2589%25A9%25E3%2581%25A7%25E3%2581%2599%25E3%2580%258D%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/bbc5d0ef7503fc",
          "author": "Darman",
          "description": "[超解説]再帰関数を使った階乗の計算\n\n はじめに\nこの記事では、再帰関数を用いて整数の階乗を計算するPythonプログラムを解説します。再帰関数の挙動やスタックフレームの概念についても説明します。\n\n プログラムの概要\n以下のPythonプログラムは、与えられた整数nの階乗を計算するものです。\ndef factorial(n: int) -> int:\n    value: int = 0\n\n    print(\"入口\", n)\n    if n <= 1:  # ベースケース\n        value = 1\n    else:  # 再帰ステップ\n        ...",
          "link": "https://zenn.dev/yutabeee/articles/bbc5d0ef7503fc",
          "publishedOn": "2023-04-15T13:09:49.000Z",
          "wordCount": 392,
          "title": "[超解説]再帰関数を使った階乗の計算でスタックフレームについて理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a-cgcmg9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E8%25B6%2585%25E8%25A7%25A3%25E8%25AA%25AC%255D%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%259A%258E%25E4%25B9%2597%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a-cgcmg9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E8%25B6%2585%25E8%25A7%25A3%25E8%25AA%25AC%255D%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%259A%258E%25E4%25B9%2597%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fikastudio/articles/2b367f1850f478",
          "author": "情報工学入門チャンネル",
          "description": "WIF とは\nWIF[1] は、BIP178[2] で定義されているビットコインで使用される ECDSA 秘密鍵をエンコーディングする方法です。WIF は秘密鍵のバックアップやウォレットへ秘密鍵をインポートする際のフォーマットとして利用されています。\n\n 秘密鍵 -> WIF\nビットコインの秘密鍵は、乱数から作成された 256bit の整数です。通常は、16 進数で表現するので、64 桁の英数字が並んでいます。\n# 秘密鍵の例\n0C28FCA386C7A227600B2FE50B7CAE11EC86D3BF1FBE471BE89827E19D72AA1D\n\n\nmainnet 用...",
          "link": "https://zenn.dev/fikastudio/articles/2b367f1850f478",
          "publishedOn": "2023-04-15T12:11:02.000Z",
          "wordCount": 522,
          "title": "Python で学ぶビットコインの WIF（Wallet Import Format）アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y2V88faY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%2520WIF%25EF%25BC%2588Wallet%2520Import%2520Format%25EF%25BC%2589%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y2V88faY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%2520WIF%25EF%25BC%2588Wallet%2520Import%2520Format%25EF%25BC%2589%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dogfortune/articles/fe3bd91762df64",
          "author": "DogFortune",
          "description": "できます\nfrom pprint import pformat\nimport logging\n\n# ロガー作る\nlogger = logging.getLogger(__name__)\nlogger.info(pformat(\"ここにlistとか入れる\"))\npformatを使うことで整形されたstrオブジェクトを取得できるので、それをlogger.infoに渡せばOK！",
          "link": "https://zenn.dev/dogfortune/articles/fe3bd91762df64",
          "publishedOn": "2023-04-15T11:39:46.000Z",
          "wordCount": 113,
          "title": "pprintで整形された文字列をlogger.infoで出力したい！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v3Jv4niW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pprint%25E3%2581%25A7%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592logger.info%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:DogFortune%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5ODRjMTgzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v3Jv4niW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pprint%25E3%2581%25A7%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592logger.info%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:DogFortune%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5ODRjMTgzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/books/c85f204abac7c5",
          "author": "S.A",
          "description": "本書では、多品種少量生産下における需要予測手法として、NeuralProphetの需要予測の実装方法を考えていきます。また複数品種の需要予測を同時に実施することを念頭に置き、どのようにすれば予測時間を少なくできるかを考え、実装例を提示しています。具体的には、クラスタリングを実施し傾向の似ている品種をクラスタリングし、その結果に基づき、需要予測をすることで時間を大幅に削減する方法を考えています。",
          "link": "https://zenn.dev/shungo_a/books/c85f204abac7c5",
          "publishedOn": "2023-04-15T10:26:49.000Z",
          "wordCount": 105,
          "title": "多品種少量生産下における需要予測手法実装例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g4WkbdRk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZjljN2I2Y2U5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g4WkbdRk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZjljN2I2Y2U5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/dokeita/articles/1ce7c728d2afab",
          "author": "dokeita",
          "description": "背景\n\nL2コンストラクタである s3.Bucketで作成したS3バケットに対してオブジェクトのレプリケーションを設定したい\ns3.Bucketにはレプリケーションを設定する機能がまだ無い\n\nL1コンストラクタの s3.CfnBucket.ReplicationConfigurationProperty を使う必要がある\n\n\nescape hatches を使って設定する\n\n\n escape hatchesについて\n公式ドキュメントはこちら\nhttps://docs.aws.amazon.com/cdk/v2/guide/cfn_layer.html\n自分としては、L2コンストラクタ...",
          "link": "https://zenn.dev/dokeita/articles/1ce7c728d2afab",
          "publishedOn": "2023-04-15T09:37:28.000Z",
          "wordCount": 439,
          "title": "AWS CDK s3.BucketにReplication Configurationを設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wRIZQIlQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520s3.Bucket%25E3%2581%25ABReplication%2520Configuration%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dokeita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbTBLbG1lMzNjUkFWQTdCNXJzNW5JVkVLM3h3V3NPUkdyRzZVZXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wRIZQIlQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520s3.Bucket%25E3%2581%25ABReplication%2520Configuration%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dokeita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbTBLbG1lMzNjUkFWQTdCNXJzNW5JVkVLM3h3V3NPUkdyRzZVZXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dyoshikawa/articles/prepare-python-env",
          "author": "d yoshikawa",
          "description": "OpenAI APIを色々試していきたい。\n普段TypeScriptばかり書いているが、Generative AIエコシステム周りはPython有利に感じる（LlamaIndexとか。LangChainはJS/TS対応しているがPythonより解説やサンプルが少なく学習しづらい）。\nそこでPythonの環境構築をキャッチアップしていく。とりあえず環境構築からFastAPI Hello Worldまでやっていく。\n\n 環境\n\nM1 Mac\nbrew\nasdf\n\n\n asdf導入\nまずはpyenv的なものを入れたい。\n*envの管理ツールといえばanyenvだが、最近はasdfが使われてるら...",
          "link": "https://zenn.dev/dyoshikawa/articles/prepare-python-env",
          "publishedOn": "2023-04-15T09:02:39.000Z",
          "wordCount": 783,
          "title": "M1 MacでFastAPI Hello Worldまでの手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QscPZbQ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Mac%25E3%2581%25A7FastAPI%2520Hello%2520World%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d%2520yoshikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1RUdBX0VEUzhuc2ExaDRCMldXUWVhcHE2OU5FRUFTcVRxbi1kSkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QscPZbQ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Mac%25E3%2581%25A7FastAPI%2520Hello%2520World%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d%2520yoshikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1RUdBX0VEUzhuc2ExaDRCMldXUWVhcHE2OU5FRUFTcVRxbi1kSkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e533143a815041",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-202 A - Three Dice\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    print(21 - sum([a, b, c]))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e533143a815041",
          "publishedOn": "2023-04-15T08:59:05.000Z",
          "wordCount": 248,
          "title": "［AtCoder］ABC-202｜A - Three Dice",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hqM0QUJN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CA%2520-%2520Three%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hqM0QUJN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CA%2520-%2520Three%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5939b4acb1dcc0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-202 B - 180°\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    s.reverse()\n    t = ['6' if c == '9' else '9' if c == '6' else c for c in s]\n\n    print(\"\".join(t))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5939b4acb1dcc0",
          "publishedOn": "2023-04-15T08:59:04.000Z",
          "wordCount": 281,
          "title": "［AtCoder］ABC-202｜B - 180°",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EmUIjn4s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CB%2520-%2520180%25C2%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EmUIjn4s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CB%2520-%2520180%25C2%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/techike/articles/cc1295a5fe6d85",
          "author": "Fossa",
          "description": "はじめに\n昨日Twitterでこちらのツイートを見つけ、Amazon CodeWhispererを知りました。\nGitHub Copilotに手を出せていなかった自分でも手軽に使えるのかな？と思い導入してみました。\n自分の備忘録的に書いています。\n\n 環境\nOS: Windows10 Pro\nIDE: Visual Studio Code (VSCode)\nPython 3.9.13\n\n 導入\nVSCodeへの導入手順は、公式の動画やこちらの記事で紹介されていますのでそちらをご確認下さい。\n\n 早速コーディング\nフィボナッチ数列を計算する関数を書いてみたい（書かせてみたい？）と思いま...",
          "link": "https://zenn.dev/techike/articles/cc1295a5fe6d85",
          "publishedOn": "2023-04-15T02:28:44.000Z",
          "wordCount": 251,
          "title": "Amazon CodeWhisperer を使ってみた (Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ua75YoOR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520CodeWhisperer%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fossa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4YmM1NDU4MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ua75YoOR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520CodeWhisperer%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fossa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4YmM1NDU4MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nen/articles/39a692d411f8a3",
          "author": "sre_yoshiya",
          "description": "openaiライブラリを使ったアプリの例\n\n\nroamaround.io/\n(行先の国・地域の観光モデルコースを提案してくれる)\nhttps://www.roamaround.io/\n\n\nagentgpt\n(ゴールの定義を入力すると自動でchatgpt同志が対話を何度も続けて経過ログと最適解を提案してくれる)\nhttps://agentgpt.reworkd.ai/\n\n\ncamel-ai\n(agentgptと同じ機能らしいがapi_key不要で使えるらしい)\nhttps://www.camel-ai.org/home\n\n\n\n\n 実際にopenaiライブラリったコードを実行する\n\n\na...",
          "link": "https://zenn.dev/nen/articles/39a692d411f8a3",
          "publishedOn": "2023-04-15T01:36:34.000Z",
          "wordCount": 588,
          "title": "openai api_keyを使ったアプリ例と実際にapi_keyを使ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l-asPMoQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:openai%2520api_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BE%258B%25E3%2581%25A8%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25ABapi_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sre_yoshiya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjVmYWQ5MWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l-asPMoQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:openai%2520api_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BE%258B%25E3%2581%25A8%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25ABapi_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sre_yoshiya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjVmYWQ5MWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bee2/articles/74b975c70ae6ed",
          "author": "bee2",
          "description": "概要\nVSCodeのPythonエクステンションに、Poetryで作成した仮想環境を認識させる手順をまとめます。\n一度VSCodeの設定を変更するだけで、「Pythonインタープリターの選択」から仮想環境を選択できるようになります。\n\n 動作確認環境\n\nMac OS Monterey\nVSCode 1.77.1\nPoetry 1.4\n\n\n 前提\n\nPython, Poetryインストール済み\nVSCodeにPythonエクステンション追加済み\n\ntestというプロジェクトの仮想環境をPoetryで作成済み (プロジェクト名は任意です)\n以下、作成したプロジェクト直下をワーキングディレ...",
          "link": "https://zenn.dev/bee2/articles/74b975c70ae6ed",
          "publishedOn": "2023-04-15T00:05:22.000Z",
          "wordCount": 192,
          "title": "VSCodeにPoetryの仮想環境を認識させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OjYzQt5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25ABPoetry%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bee2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmMDgwYTliNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OjYzQt5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25ABPoetry%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bee2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmMDgwYTliNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutohub/articles/c798a1b11e290e",
          "author": "yutohub",
          "description": "音声技術の進化による外国語コンテンツの活用方法\n最近では、音声技術が大幅に進歩してきており、ASR、MT、TTS の品質が向上しています。これらを組み合わせることで、外国語の動画や音声に字幕や吹き替えを付けることができるようになります。\nYouTube には、一般的によく使われている自動翻訳字幕機能があります。この機能を使えば、海外の動画に日本語の字幕を簡単に追加できます。YouTube には、MIT や Stanford などの講義など、多くの外国語コンテンツがあります。この機能を活用することで、より多くの情報を収集することが可能になり、非常に便利です。\nYouTube の自動翻訳...",
          "link": "https://zenn.dev/yutohub/articles/c798a1b11e290e",
          "publishedOn": "2023-04-15T00:00:00.000Z",
          "wordCount": 1287,
          "title": "音声技術の進化による外国語コンテンツ活用法：自動翻訳字幕とTTSを活用した自動吹き替え",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--92gk2TZ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E5%25A3%25B0%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%2596%25E5%259B%25BD%25E8%25AA%259E%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E7%25BF%25BB%25E8%25A8%25B3%25E5%25AD%2597%25E5%25B9%2595%25E3%2581%25A8TTS%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%2590%25B9%25E3%2581%258D%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--92gk2TZ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E5%25A3%25B0%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%2596%25E5%259B%25BD%25E8%25AA%259E%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E7%25BF%25BB%25E8%25A8%25B3%25E5%25AD%2597%25E5%25B9%2595%25E3%2581%25A8TTS%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%2590%25B9%25E3%2581%258D%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojomoeko/articles/python-project-with-devcontainer",
          "author": "okojomoeko",
          "description": "以前にpoetryとmkdocsとsphinxを使ってpythonプロジェクトを作っていきました。\nhttps://zenn.dev/okojomoeko/articles/python-project-with-mkdocs\n今回はvs codeのdev containerを使って、みんなが共通のvs codeでチーム開発できるようにdev containerを使ったプロジェクトテンプレートを作成し、どのようにpythonプロジェクトのテンプレートを環境をdev containerで作っていくかというところをメインでメモします。\n\n 今回試した環境\n\nUbuntu 22.04.2 LT...",
          "link": "https://zenn.dev/okojomoeko/articles/python-project-with-devcontainer",
          "publishedOn": "2023-04-14T14:36:12.000Z",
          "wordCount": 932,
          "title": "Dev Containerを使ってPythonのプロジェクトのテンプレートを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sQ-zAZ_y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sQ-zAZ_y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/readyfor_blog/articles/bbcbff90944ef3",
          "author": "Shohei Urano",
          "description": "この記事を読んで分かること\nRedash のクエリの代わりに Python を使い、データを集計して表にして出力する方法。その際の注意点\n\n テンプレート\n最終的にテンプレートとして使えるコード。今後はこれを Fork して使っていく。以下、この解説。コードはこの3つの構成に分かれる\n\n\n\n項目\nやっていること\n\n\n\n\nget_columns\n列の定義。列名や型を定義する\n\n\nget_rows\n表示するデータを取得する\n\n\nresult\nデータを実際に Redsah で表示する\n\n\n\n\nテンプレート\ndef get_columns():\n    return [\n        [ ...",
          "link": "https://zenn.dev/readyfor_blog/articles/bbcbff90944ef3",
          "publishedOn": "2023-04-14T13:26:06.000Z",
          "wordCount": 1227,
          "title": "Redash で Python を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3crrei-s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redash%2520%25E3%2581%25A7%2520Python%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:READYFOR%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520Urano%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4NzU2YzZmODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mjc4cmctNW5XWmtONUxyZi1DUXVsRVVvZjgzLWxpZnh6a29NSWY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3crrei-s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redash%2520%25E3%2581%25A7%2520Python%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:READYFOR%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520Urano%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4NzU2YzZmODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mjc4cmctNW5XWmtONUxyZi1DUXVsRVVvZjgzLWxpZnh6a29NSWY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/unico417/articles/57a92695a901d8",
          "author": "Unico417",
          "description": "SQLite と MySQL って何が違うの？\nまずは、MySQL と SQLite の違いをサックリ紹介します。\nでもあなたの調べごとの目的が「始め方」なら読み飛ばしていいです。\n\n 管理の違い\nMySQL は、データベースを複数作ることができます。\nユーザ機能もあり、その権限に応じたテーブルやデータベースが閲覧・編集可能になります。\nSQLiteは、一つのデータベースに対して一つのファイルが作成されます。\nユーザ機能等はなく、全てのテーブルにアクセス・編集することができます。\n\n アクセス方法の違い\nMySQL は、管理するプログラムを起動し、そのプログラムに対して要求を送信する...",
          "link": "https://zenn.dev/unico417/articles/57a92695a901d8",
          "publishedOn": "2023-04-14T10:33:08.000Z",
          "wordCount": 474,
          "title": "【Python】MySQLとSQLiteの違いと、始めかた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ikxbWwV0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591MySQL%25E3%2581%25A8SQLite%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E3%2580%2581%25E5%25A7%258B%25E3%2582%2581%25E3%2581%258B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Unico417%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVlGQ1puQS1mVDVCVzJpel9KeGR6OUFEUVFDN3JuVkZ4UHQyZlBjdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ikxbWwV0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591MySQL%25E3%2581%25A8SQLite%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E3%2580%2581%25E5%25A7%258B%25E3%2582%2581%25E3%2581%258B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Unico417%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVlGQ1puQS1mVDVCVzJpel9KeGR6OUFEUVFDN3JuVkZ4UHQyZlBjdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/baa664fb624f05",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-201 B - Do you know the second highest mountain?\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringListRow(N):\n    return [list(input().split()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    x = getStringListRow(n)\n\n    y = dict()\n    z = []\n    for s, t in x:\n  ...",
          "link": "https://zenn.dev/hyperdb/articles/baa664fb624f05",
          "publishedOn": "2023-04-14T07:31:25.000Z",
          "wordCount": 400,
          "title": "［AtCoder］ABC-201｜B - Do you know the second highest mountain?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Fe7ecId9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CB%2520-%2520Do%2520you%2520know%2520the%2520second%2520highest%2520mount...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Fe7ecId9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CB%2520-%2520Do%2520you%2520know%2520the%2520second%2520highest%2520mount...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7a68bbbe94502a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-201 A - Tiny Arithmetic Sequence\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    l = getIntList()\n    a, b, c = sorted(l)\n\n    print('Yes' if b * 2 == a + c else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7a68bbbe94502a",
          "publishedOn": "2023-04-14T07:31:25.000Z",
          "wordCount": 283,
          "title": "［AtCoder］ABC-201｜A - Tiny Arithmetic Sequence",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ecigDakq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CA%2520-%2520Tiny%2520Arithmetic%2520Sequence%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ecigDakq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CA%2520-%2520Tiny%2520Arithmetic%2520Sequence%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/acorn/articles/2de2c42758ff89",
          "author": "Mr.Acorn",
          "description": "今回は今話題のPy Scriptを使ってみます！！\n\n Py Scriptとは\nPy ScriptとはなんとhtmlにPythonを埋め込めるというものなのです！！ある日JavaScriptについて調べていたら出てきたので、以前も紹介した我が友人staff roi君に教えたら「そんなの機能が少ないぜ」と言われました。それからずっと忘れていたのですが、ふと思いついて調べてみたらこれがすごい！！Pythonは本当に少ししかかじっていないので簡単な例を紹介します。\n\n 実際に使ってみた\nなんと結構簡単にこれが使えるんですよ。インストールの必要がなく、headタグ内に\n<link rel=...",
          "link": "https://zenn.dev/acorn/articles/2de2c42758ff89",
          "publishedOn": "2023-04-13T14:54:41.000Z",
          "wordCount": 528,
          "title": "今話題のPy Script",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--z1DRhEC1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:%25E4%25BB%258A%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEPy%2520Script%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mr.Acorn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WWYyajFyeGNCM3ZMUzUyd29BbU9qbGpwTXFSbG1DdkVac2lja1k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--z1DRhEC1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:%25E4%25BB%258A%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEPy%2520Script%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mr.Acorn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WWYyajFyeGNCM3ZMUzUyd29BbU9qbGpwTXFSbG1DdkVac2lja1k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/39174470be0608",
          "author": "laiso",
          "description": "任意のChatGPT Retriever PluginsのAPIサーバーと対話できるプログラムをLangChainのRetrievalQA ChainとChatGPTPluginRetrieverを使って実現します。\nこれによって\n\nChatGPT Pluginsのインターフェイスの外でRetriever Plugins単体の動作が確認できます\nChain間連携やAgentsなどのLangChainの諸機能と統合できます\n\n利用イメージとしては開発者自身がjupyter notebookなどで質問→回答を繰替えしてテストします。\nただしChatGPTPluginRetrieverは/qu...",
          "link": "https://zenn.dev/laiso/articles/39174470be0608",
          "publishedOn": "2023-04-13T07:34:43.000Z",
          "wordCount": 966,
          "title": "ChatGPT Retriever PluginsをLangChainでデバッグする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KR3v2kj6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520Retriever%2520Plugins%25E3%2582%2592LangChain%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KR3v2kj6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520Retriever%2520Plugins%25E3%2582%2592LangChain%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoutaros/articles/70571e8af4c9ab",
          "author": "unochanel",
          "description": "はじめに\nLLMが流行する中で、EmbeddingやLangChainという言葉を耳にしたので実装したものをまとめてみました。\n今回の記事では、LangChainを使って、PDFのデータをEmbeddingしてPDFの質問に答える機能を作りたいと思います。\nVector検索には、Pineconeを使用しています。\nhttps://www.pinecone.io/\n\n 用意するもの\nPineconeのAPI Keyの取得が必要になります。\n\n Embedding\n\n 必要なライブラリのインストール\npip install --upgrade openai\npip install --u...",
          "link": "https://zenn.dev/ryoutaros/articles/70571e8af4c9ab",
          "publishedOn": "2023-04-13T07:19:37.000Z",
          "wordCount": 667,
          "title": "LangChainを使って、EmbeddingとAgentを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wCJZSRGj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581Embedding%25E3%2581%25A8Agent%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unochanel%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhYTA4Yzg4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wCJZSRGj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581Embedding%25E3%2581%25A8Agent%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unochanel%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhYTA4Yzg4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangju/articles/d87c857b1ce33f",
          "author": "kangju(カンジュ)",
          "description": "pipenvでrequirements.txtを作成する方法を紹介します。\nよく検索して出てくるのは以下のコマンドだと思います。\npipenv lock -r > requirements.txt\nでも最新のpipenvだとエラーになってしまいます。\n調べたところ新しいコマンドができて、”-r”オプションは廃止になったようです。\nなのでエラーになった場合は以下のコマンドを実行しましょう。\npipenv requirements > requirements.txt\nこれで、ちゃんと作成されます。",
          "link": "https://zenn.dev/kangju/articles/d87c857b1ce33f",
          "publishedOn": "2023-04-13T06:47:43.000Z",
          "wordCount": 74,
          "title": "pipenvでrequirements.txtを作る方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R0C-nzxZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pipenv%25E3%2581%25A7requirements.txt%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangju%2528%25E3%2582%25AB%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A5%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R0C-nzxZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pipenv%25E3%2581%25A7requirements.txt%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangju%2528%25E3%2582%25AB%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A5%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0690848ec44d99",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-200 A - Century\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print((n - 1) // 100 + 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/0690848ec44d99",
          "publishedOn": "2023-04-13T05:47:02.000Z",
          "wordCount": 225,
          "title": "［AtCoder］ABC-200｜A - Century",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BOzrONiB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-200%25EF%25BD%259CA%2520-%2520Century%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BOzrONiB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-200%25EF%25BD%259CA%2520-%2520Century%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/050f7c1cb9746e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-200 B - 200th ABC-200\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, k = getIntMap()\n\n    for i in range(k):\n        if n % 200 == 0:\n            n //= 200\n        else:\n            n = n * 1000 + 200\n    print(n)\n\n\nif __name__ == \"__main__\":\n   ...",
          "link": "https://zenn.dev/hyperdb/articles/050f7c1cb9746e",
          "publishedOn": "2023-04-13T05:47:01.000Z",
          "wordCount": 305,
          "title": "［AtCoder］ABC-200｜ B - 200th ABC-200",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v9rhDqEU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-200%25EF%25BD%259C%2520B%2520-%2520200th%2520ABC-200%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v9rhDqEU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-200%25EF%25BD%259C%2520B%2520-%2520200th%2520ABC-200%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/a27e89c0153c7d",
          "author": "オライリーヨッシー",
          "description": "概要\n表題の通り、フォルダに格納したCSVファイルの中身をチェックして、その結果を出力するプログラムを作成した。具体的には、下記のようなケースを想定している。\n\nCSVファイルは、商品シリーズごとに作成される。\nそしてCSVファイル内では、その商品シリーズ毎の商品が一覧化され記載されている。\n各商品について、商品名や型番が正しいか、4列目にtrue/falseが記載されている。\n\nいちいち各CSVファイルを開いて、「全てtrue」かチェックするのは手間なので、今回のプログラムを開発した。下記プログラムをapp.pyとして保存して、python3 app.pyを実行すれば結果が出力でき...",
          "link": "https://zenn.dev/oreilly_ota/articles/a27e89c0153c7d",
          "publishedOn": "2023-04-13T03:31:06.000Z",
          "wordCount": 551,
          "title": "【Python】フォルダに格納したCSVファイルの中身をチェックするプログラム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hUUtcd0m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E3%2581%25AB%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2597%25E3%2581%259FCSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hUUtcd0m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E3%2581%25AB%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2597%25E3%2581%259FCSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rescuenow/articles/289c8365bb18fb",
          "author": "adachi_koichi",
          "description": "背景\nwebsocketでの情報の取得を試したかったので、PythonのWebSocketのクライアントライブラリwebsocket-clientを使って米株の取引情報を取得してみました。\n以前から米株の取引アプリでは取引量などが分からず、瞬時に価格が変わっていくため、もう少し細かい情報を取得できる方法を探していました。\nいくつかのサービスを調べる上で\n\nリアルタイムに情報を取得できる\n入札の状態が分かる\n低価格\nという点を満たすものを調べていき、\nその結果、今回は eodhistoricaldata.com を使うことにしました。\n\n\n 早速実装\nurl_stock_quote =...",
          "link": "https://zenn.dev/rescuenow/articles/289c8365bb18fb",
          "publishedOn": "2023-04-13T03:13:16.000Z",
          "wordCount": 175,
          "title": "WebSocketクライアントを使って米株の取引情報をリアルタイムに取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zznI-VaS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebSocket%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B1%25B3%25E6%25A0%25AA%25E3%2581%25AE%25E5%258F%2596%25E5%25BC%2595%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258A%25E3%2582%25A6%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:adachi_koichi%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NWI1N2NlZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lNY3FRWndMOG5RYnFpRjRnMXV4ZU5RREZtSFhfNE9USUVpVjFmYk9zPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zznI-VaS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebSocket%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B1%25B3%25E6%25A0%25AA%25E3%2581%25AE%25E5%258F%2596%25E5%25BC%2595%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258A%25E3%2582%25A6%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:adachi_koichi%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NWI1N2NlZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lNY3FRWndMOG5RYnFpRjRnMXV4ZU5RREZtSFhfNE9USUVpVjFmYk9zPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/k14i/articles/2bc09fa17b5699",
          "author": "k14i",
          "description": "Python ライブラリから Azure OpenAI Service にリクエストを行い OpenAPI と PlantUML からテストコードを生成・追加する\nこれまで 3 回にわたって、Azure OpenAI Service を使って OpenAPI 仕様 と PlantUML からテストコードを生成する取り組みについての情報共有を行ってきました。\n\nAzure OpenAI Service を使って OpenAPI と PlantUML からテストコードを生成する\nPromptGenerator メソッドによって最適化されたプロンプトを使って Azure OpenAI Se...",
          "link": "https://zenn.dev/k14i/articles/2bc09fa17b5699",
          "publishedOn": "2023-04-13T02:52:50.000Z",
          "wordCount": 5952,
          "title": "Python ライブラリから Azure OpenAI Service にリクエストを行いドキュメントからテストコードを生成・追加する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ErE55Fkt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%258B%25E3%2582%2589%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25AB%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ErE55Fkt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%258B%25E3%2582%2589%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25AB%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiena/articles/unity-python",
          "author": "Mitsuhiro Koga",
          "description": "はじめに\nPython.NETを利用するとC#からPythonの関数を呼び出したり、逆にPythonからC#のメソッドを呼び出したりできるのでNumpyなどの資産をそのまま利用できます。\nUnityからも問題なく使えるのですがアプリ配布先にPythonがインストールされていないと動きません。\nそこでWindows限定ですがPython Embeddable PackageをStreamingAssetsフォルダに入れて配布先の環境に依存せずに実行できるプロジェクトを作ってみました。\nサンプルだけを見たい方はこちらからご覧ください。\nhttps://github.com/shiena/...",
          "link": "https://zenn.dev/shiena/articles/unity-python",
          "publishedOn": "2023-04-12T16:36:05.000Z",
          "wordCount": 1474,
          "title": "UnityとPythonを連携する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6GaZ6-1c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Unity%25E3%2581%25A8Python%25E3%2582%2592%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mitsuhiro%2520Koga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pEQVpCTExZbEpHMFpMNXVha1NzMU9xUTk3MjJlRE0tem5rMURBcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6GaZ6-1c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Unity%25E3%2581%25A8Python%25E3%2582%2592%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mitsuhiro%2520Koga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pEQVpCTExZbEpHMFpMNXVha1NzMU9xUTk3MjJlRE0tem5rMURBcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syoyo/articles/4862d9a93c537a",
          "author": "syoyo",
          "description": "typeguard でクラスや関数の引数の実行時型チェックしたい\n\n@typechecked\nclass Myclass:\n   ...\nのように.\nしかし typegurad が入っていない素の Python 環境も考慮したい(実行時型チェックなし)\npython だとデコレータは C みたいに ifdef 的なやり方ができない.\nif tyeguard_available:\n  @typechecked\nclass Myclass:\n  ...\nはエラーとなる.\nとりあえずはダミーのデコレータ定義で対応でしょうか.\ntry:\n\tfrom typeguard import typech...",
          "link": "https://zenn.dev/syoyo/articles/4862d9a93c537a",
          "publishedOn": "2023-04-12T13:13:23.000Z",
          "wordCount": 208,
          "title": "python typegurad の decorator を ifdef 的に扱いたいメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YtmpJpz_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%2520typegurad%2520%25E3%2581%25AE%2520decorator%2520%25E3%2582%2592%2520ifdef%2520%25E7%259A%2584%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YtmpJpz_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%2520typegurad%2520%25E3%2581%25AE%2520decorator%2520%25E3%2582%2592%2520ifdef%2520%25E7%259A%2584%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/85178021b313f6",
          "author": "nakamura196",
          "description": "概要\n以下の記事で紹介している、Google Colabを用いたNDL\"古典籍\"OCRアプリのチュートリアルを作成しています。\nhttps://zenn.dev/nakamura196/articles/59fe1c9e76de65\n今回、以下の更新を行いました。\n\n利用条件の追加\n不具合の修正\nIIIF Presentation API v3のマニフェストファイルの入力への対応\n\n更新したノートブックは、これまでと同じ以下のURLでアクセスいただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blo...",
          "link": "https://zenn.dev/nakamura196/articles/85178021b313f6",
          "publishedOn": "2023-04-12T10:48:41.000Z",
          "wordCount": 171,
          "title": "Google Colabを用いたNDL古典籍OCRチュートリアルの不具合の修正および機能追加を行いました。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6OAZl9qH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FNDL%25E5%258F%25A4%25E5%2585%25B8%25E7%25B1%258DOCR%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%258D%25E5%2585%25B7%25E5%2590%2588%25E3%2581%25AE%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E6%25A9%259F%25E8%2583%25BD%25E8%25BF%25BD%25E5%258A%25A0%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6OAZl9qH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FNDL%25E5%258F%25A4%25E5%2585%25B8%25E7%25B1%258DOCR%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%258D%25E5%2585%25B7%25E5%2590%2588%25E3%2581%25AE%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E6%25A9%259F%25E8%2583%25BD%25E8%25BF%25BD%25E5%258A%25A0%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k14i/articles/8d24a8ee7380d7",
          "author": "k14i",
          "description": "PromptGenerator メソッドによって最適化されたプロンプトを使って Azure OpenAI Service で OpenAPI と PlantUML からテストコードを生成する #2\n前回、Azure OpenAI Service を使って、まず ChatGPT にプロンプトを生成させる PromptGenerator メソッドを用いてプロンプトのチューニングを行い、そのプロンプトを用いて前々回同様のアプローチでテストコードを生成し、その内容を評価しました。\n前回の大きな問題としては、テストダブルをテスト対象にまで使用していることでした。本記事ではこの解決を試みます。\n...",
          "link": "https://zenn.dev/k14i/articles/8d24a8ee7380d7",
          "publishedOn": "2023-04-12T10:06:05.000Z",
          "wordCount": 14946,
          "title": "最適化したプロンプトを使って Azure OpenAI Service でドキュメントからテストコードを生成する #2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J5djLemt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J5djLemt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/0ba99e960a8f24",
          "author": "hodakam",
          "description": "はじめに\nこの記事の続きです。パスワードリセット時のメールの文面をカスタマイズするためにSerialier をいじったりして、すったもんだしました。これで後はテンプレートはいじれば終わりだ・・・、と思ったらまたハマりました。\n\n やろうとしたこと\nsite-package/django/contrib/admin/templates/registrationにあるpassword_reset_email.html\nをコピーして、自分が設定したい変数を埋め込めんだテンプレートにした。\n{% with uidb64 as uid_str %}\n  {% with token as tok...",
          "link": "https://zenn.dev/hodakam/articles/0ba99e960a8f24",
          "publishedOn": "2023-04-12T09:31:33.000Z",
          "wordCount": 1195,
          "title": "dj-rest-authでパスワードリセットメールをカスタマイズする（続き）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oPkCpFB0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dj-rest-auth%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E7%25B6%259A%25E3%2581%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oPkCpFB0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dj-rest-auth%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E7%25B6%259A%25E3%2581%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8bdb615ea0e850",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-199 A - Square Inequality\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    print('Yes' if a ** 2 + b ** 2 < c ** 2 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/8bdb615ea0e850",
          "publishedOn": "2023-04-12T09:31:28.000Z",
          "wordCount": 274,
          "title": "［AtCoder］ABC-199｜A - Square Inequality",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rW1eh4m8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-199%25EF%25BD%259CA%2520-%2520Square%2520Inequality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rW1eh4m8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-199%25EF%25BD%259CA%2520-%2520Square%2520Inequality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5026d81d11a586",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-199 B - Intersection\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    b = getIntList()\n\n    c = min(b) - max(a) + 1\n\n    print(c if c > 0 else 0)\n\n\nif __name__ == ...",
          "link": "https://zenn.dev/hyperdb/articles/5026d81d11a586",
          "publishedOn": "2023-04-12T09:31:28.000Z",
          "wordCount": 326,
          "title": "［AtCoder］ABC-199｜B - Intersection",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wt9qPqZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-199%25EF%25BD%259CB%2520-%2520Intersection%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wt9qPqZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-199%25EF%25BD%259CB%2520-%2520Intersection%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joanofarc/articles/get-financial-info-by-edinet",
          "author": "JoanOfArc",
          "description": "本記事の目的\nプログラミングを学習しはじめたら、誰しも一度は「株の自動売買で食っていきたい！」のようなことを考えるのではないでしょうか。そのための第一歩として、企業の財務情報を収集するのはとても大切ですよね（あなたがファンダメンタルズ分析を信じるならば、ですが...）。そこで本記事では、Python を使って、企業の財務情報を取得する 方法についてお伝えしたいと思います。\nまた、本記事で実装したソースコードについては GitHub にまとめましたので必要に応じてご利用ください。当記事のコードは全て Google Colaboratory で実装しており、2023年4月12日現在正常に...",
          "link": "https://zenn.dev/joanofarc/articles/get-financial-info-by-edinet",
          "publishedOn": "2023-04-12T09:27:02.000Z",
          "wordCount": 2245,
          "title": "企業の財務情報を自動収集したい！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Tf5wSO6K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BC%2581%25E6%25A5%25AD%25E3%2581%25AE%25E8%25B2%25A1%25E5%258B%2599%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258F%258E%25E9%259B%2586%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Tf5wSO6K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BC%2581%25E6%25A5%25AD%25E3%2581%25AE%25E8%25B2%25A1%25E5%258B%2599%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258F%258E%25E9%259B%2586%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zerebom/articles/5521a0b93648fd",
          "author": "zerebom",
          "description": "こんにちは！本記事では、GitHubのissueコメントを簡単に要約できる「SummarAIzeHub」というGitHub Actionsについて紹介します。このGitHub Actionsは、プロジェクトのコミュニケーションを円滑に進めるためのサポートツールとして作成しました。💪\nhttps://github.com/zerebom/SummarAIzeHub\n記事では、SummarAIzeHubの開発の動機や背景、使用法、技術的詳細などを紹介します。\n\n 使用方法\nSummarAIzeHubは下記のように使用できます。GitHub上のissueやプルリクエストで、コメント欄に/sum...",
          "link": "https://zenn.dev/zerebom/articles/5521a0b93648fd",
          "publishedOn": "2023-04-12T09:07:19.000Z",
          "wordCount": 821,
          "title": "コマンド一つでGitHub上のコメントを自動要約するGitHub Actionsを公開しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FGHC0NLa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25A7GitHub%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2599%25E3%2582%258BGitHub%2520Actions%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zerebom%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2FmMmVhNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FGHC0NLa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25A7GitHub%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2599%25E3%2582%258BGitHub%2520Actions%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zerebom%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2FmMmVhNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/489ff91d176af8",
          "author": "hodakam",
          "description": "はじめに\nこの記事の続きです。Excel の xlsx ファイルの構造はおおむね分かったので、実際に Python で xlsx の中身をいじっていきます。最終的にやりたいのは、ブラウザ上で excel の加工を行うようなアプリケーションで\n\nブラウザから excel ファイルと画像をアップロードする\nユーザ設定に従ってその excel ファイルに新しいシートを追加\n新しく追加されたシートにはアップロードした画像が指定したレイアウトで埋め込まれる\n画像と一緒にテキストボックスや矢印が配置されるなどを載せる\n\nという Web アプリケーションです。これを実現しようと思うと\n\n既存の e...",
          "link": "https://zenn.dev/hodakam/articles/489ff91d176af8",
          "publishedOn": "2023-04-12T08:50:50.000Z",
          "wordCount": 3290,
          "title": "OpenPyXLなしでPythonでExcelファイルをいじり倒す（シート追加編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1hjURLYm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E8%25BF%25BD%25E5%258A%25A0%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1hjURLYm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E8%25BF%25BD%25E5%258A%25A0%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/dfd8da4790f001",
          "author": "hodakam",
          "description": "Dashでファイルのアップロードを取り扱う\nファイルをアップロードすると、何らかの処理をしてくれて、その結果がダウンロードできるテンプレートアプリが作りたかった。よくあるdocを送るとpdfを返してくれるようなサービスで、中の処理をいろいろといじれるようなものかな。Dashでアップローダを実装する場合、dash-core-componentのUploadコンポーネントを使う方法が公式には紹介されている。\nこの方法はあくまでのアップロードそのものの機能しかないので、アップローダとして一般的に必要な機能、例えば\n\nアップロードしたデータのパース\nアップロードの進捗\n正常にアップロードされ...",
          "link": "https://zenn.dev/hodakam/articles/dfd8da4790f001",
          "publishedOn": "2023-04-12T07:12:47.000Z",
          "wordCount": 601,
          "title": "dash-uploaderでアップローダを楽に実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uZc3dt6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dash-uploader%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2580%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uZc3dt6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dash-uploader%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2580%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/97c70c4b018c31",
          "author": "hodakam",
          "description": "Dashの単体テスト\nプログラムを作成した後、そのプログラムが正しく動作しているかを検出するためにテストを行います。テストは人間が操作する方法や自動テストなど、またメソッド単位からブラウザ経由でのテストなど様々な手法・粒度があります。特に関数単位などの粒度が小さいテストのことを単体（ユニット）テストといいます。逆に実際にユーザが使うようにブラウザ経由で操作するテストのことをUIテストとかEnd-to-End (E2E)テストと呼んだりします。Pythonでのユニットテストはpytestやunittestが用いられることが多いと思います。\nDashで作成したWebアプリケーションに対し...",
          "link": "https://zenn.dev/hodakam/articles/97c70c4b018c31",
          "publishedOn": "2023-04-12T06:59:46.000Z",
          "wordCount": 1220,
          "title": "Python Dashで単体テストを行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0OHIJxN5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Dash%25E3%2581%25A7%25E5%258D%2598%25E4%25BD%2593%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0OHIJxN5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Dash%25E3%2581%25A7%25E5%258D%2598%25E4%25BD%2593%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/66eeff0ac1de36",
          "author": "Darman",
          "description": "トランザクション処理とは\nトランザクション処理とは、データベースや分散システムにおいて一連の操作をまとめて実行し、データの整合性や安全性を保つための手法です。トランザクションは、一連の操作が全て成功するか、あるいは失敗した場合は操作が一つも実行されなかったかのように扱われるため、データの整合性が保たれます。この特性は、\"ACID特性\" と呼ばれ、トランザクション処理において重要な役割を果たします。\n\n ACID特性\nトランザクション処理が満たすべき性質として、ACID特性があります。これは以下の4つの性質からなります。\n\n\nAtomicity (原子性): トランザクションに含まれる...",
          "link": "https://zenn.dev/yutabeee/articles/66eeff0ac1de36",
          "publishedOn": "2023-04-12T06:05:02.000Z",
          "wordCount": 647,
          "title": "トランザクション処理 - ACID特性やPythonでの実装例 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UmU7d747--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B6%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2587%25A6%25E7%2590%2586%2520-%2520ACID%25E7%2589%25B9%25E6%2580%25A7%25E3%2582%2584Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UmU7d747--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B6%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2587%25A6%25E7%2590%2586%2520-%2520ACID%25E7%2589%25B9%25E6%2580%25A7%25E3%2582%2584Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/c65eaee995f837",
          "author": "laiso",
          "description": "macOS環境でpythonのsndfileモジュールのインストールに失敗する\n> pip install sndfile\n\nCollecting sndfile                                                                                                                                                                           \n  Using cached sndfile-0.2.0.tar.gz (4.3 ...",
          "link": "https://zenn.dev/laiso/articles/c65eaee995f837",
          "publishedOn": "2023-04-12T05:12:38.000Z",
          "wordCount": 808,
          "title": "fatal error: 'sndfile.h' file not found",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m3OZB9k_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fatal%2520error%253A%2520%2527sndfile.h%2527%2520file%2520not%2520found%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m3OZB9k_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fatal%2520error%253A%2520%2527sndfile.h%2527%2520file%2520not%2520found%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/taketooon/articles/0b6b318cac85c9",
          "author": "taketooon",
          "description": "introduction\n今回はPyTorchの内容。実験で深層学習を使いたいので、ちょうどいい機会なのでPyTorchを学んでいる。学んでいる本は以下の本。この本を学んでいる時に詰まったことを紹介する。\nこれ、めっちゃおすすめなのでぜひ読んでほしいで。\nhttps://www.amazon.co.jp/最短コースでわかる-PyTorch-＆深層学習プログラミング-赤石-雅典-ebook/dp/B09G622WB6\n\n 疑問点\ntensorを作成する際に、Numpy変数から作成しようとすると、データ型がfloat64になってしまう。そうすると何が問題かというと、機械学習を最終的にした...",
          "link": "https://zenn.dev/taketooon/articles/0b6b318cac85c9",
          "publishedOn": "2023-04-12T04:22:49.000Z",
          "wordCount": 1107,
          "title": "float()をtensorに使うと自動微分ができなくなった",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g7e9fU_d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:float%2528%2529%25E3%2582%2592tensor%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taketooon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g7e9fU_d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:float%2528%2529%25E3%2582%2592tensor%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taketooon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/dc13ee7694ba08",
          "author": "hodakam",
          "description": "Python で excel を扱いたいけれど・・・\nPython で excel ファイルを扱おうとした場合の定番ツールに openpyxl があります。ブックの作成やワークシートの追加、編集などはサポートされています。表計算の場合にはおおよそ問題ありませんが、申請書のようなものについては問題があります。多くの excel の申請書では性別のように選択肢で入力する部分がありますが、この入力に円などの図形を充てることがよくあります。\n一方で、openpyxl ではこういった図形の追加、編集がサポートされていないようです。そのため、既存の xlsx ファイルを openpyxl で読み...",
          "link": "https://zenn.dev/hodakam/articles/dc13ee7694ba08",
          "publishedOn": "2023-04-12T01:52:59.000Z",
          "wordCount": 1879,
          "title": "OpenPyXLなしでPythonでExcelファイルをいじり倒す（xlsx分解編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--U5sLGFxe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588xlsx%25E5%2588%2586%25E8%25A7%25A3%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--U5sLGFxe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588xlsx%25E5%2588%2586%25E8%25A7%25A3%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/u748756h/articles/2bda21dda12f3c",
          "author": "Hiroka",
          "description": "はじめに\nVScode上でPythonを書きPostgreSQLを操作するまでを、備忘録として残しておきます。\n\n 目次\n\n 1.psycopg2,PostgreSQLのインストール\n\n 2.DB,テーブルの作成\n\n 3.レコードを挿入する(INSERT)\n\n 1.psycopg2,PostgreSQLのインストール\nPostgreSQL（ポストグレスキューエル、略称: Postgres）は、オープンソースのRDBMSです。PostgreSQLへは、Pythonからもアクセスでき、Pythonではpsycopg2というパッケージを利用し、PostgreSQLへ接続します。\n\n psy...",
          "link": "https://zenn.dev/u748756h/articles/2bda21dda12f3c",
          "publishedOn": "2023-04-11T23:56:51.000Z",
          "wordCount": 558,
          "title": "【PostgreSQL】PythonでDBにデータをINSERTする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wZ-MNg_r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PostgreSQL%25E3%2580%2591Python%25E3%2581%25A7DB%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592INSERT%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyYmZmNDgzNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wZ-MNg_r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PostgreSQL%25E3%2580%2591Python%25E3%2581%25A7DB%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592INSERT%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyYmZmNDgzNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k14i/articles/0a69cfad7a7642",
          "author": "k14i",
          "description": "PromptGenerator メソッドによって最適化されたプロンプトを使って Azure OpenAI Service で OpenAPI と PlantUML からテストコードを生成する\n前回、Azure OpenAI Service を使って OpenAPI と PlantUML からテストコードを生成する取り組みについて説明しました。\nここで出来ていなかったことの一つとして、プロンプトのチューニングがあります。\n今回、ChatGPT にプロンプトを生成させる PromptGenerator というメソッドを用いて最適化されたプロンプトを生成し、そのプロンプトを用いて前回同様の...",
          "link": "https://zenn.dev/k14i/articles/0a69cfad7a7642",
          "publishedOn": "2023-04-11T23:50:52.000Z",
          "wordCount": 22345,
          "title": "最適化したプロンプトを使って Azure OpenAI Service で OpenAPI と PlantUML からテストコードを生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KB1oIeJK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%2520OpenAPI%2520%25E3%2581%25A8%2520PlantUML%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KB1oIeJK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%2520OpenAPI%2520%25E3%2581%25A8%2520PlantUML%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kecy/articles/25838aab2b1927",
          "author": "kecy",
          "description": "Windows11でPython版のWhisperを使いたかったけどPythonに触るのも久しぶりだったので色々調べながら。備忘録として残しておきます。\n筆者の環境（念のためハードウェアも）\n\nOS：Windows11\nCPU：Intel Core i7 13700K\nグラフィックボード：GeForce RTX 3700 (8GB)\nメモリー：64GB（DDR4 3200MHz 32GB × 2枚）\nマザーボード：ASUS TUF Gaming Z690-Plus WiFi D4\n\n\n Pythonの準備\n\n pyenvのインストール\nWhisperが対応しているのはPython 3.8...",
          "link": "https://zenn.dev/kecy/articles/25838aab2b1927",
          "publishedOn": "2023-04-11T14:31:24.000Z",
          "wordCount": 968,
          "title": "Windows11のGPU環境でPython版のWhisperを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pzyi4g2q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11%25E3%2581%25AEGPU%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Python%25E7%2589%2588%25E3%2581%25AEWhisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pzyi4g2q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11%25E3%2581%25AEGPU%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Python%25E7%2589%2588%25E3%2581%25AEWhisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/90a4778e6f0c45",
          "author": "nakamura196",
          "description": "概要\n以下のシリーズの続きです。\nhttps://zenn.dev/nakamura196/articles/1cc654fc266d17\n今回は、タクソノミーの登録とコンテンツへの追加を行います。\n\n タクソノミーの登録\n事前に、ne_classというタクソノミーをGUIを通じて作成しました。以下のようなURLで一覧できます。\n/jsonapi/taxonomy_term/ne_class\n以下、新しいタクソノミーを登録するプログラムです。host, username, passwordは適宜設定してください。\npayload = {\n    \"data\": {\n        \"...",
          "link": "https://zenn.dev/nakamura196/articles/90a4778e6f0c45",
          "publishedOn": "2023-04-11T10:09:06.000Z",
          "wordCount": 544,
          "title": "Pythonを使ってDrupalのタクソノミーの登録とコンテンツへの追加",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3zkWDfSJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%258E%25E3%2583%259F%25E3%2583%25BC%25E3%2581%25AE%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2581%25B8%25E3%2581%25AE%25E8%25BF%25BD%25E5%258A%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3zkWDfSJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%258E%25E3%2583%259F%25E3%2583%25BC%25E3%2581%25AE%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2581%25B8%25E3%2581%25AE%25E8%25BF%25BD%25E5%258A%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/80bb8802676f2a",
          "author": "nakamura196",
          "description": "概要\n以下の記事で、コンテンツの新規登録の方法を記載しました。\nhttps://zenn.dev/nakamura196/articles/1cc654fc266d17\n今回は、既存のコンテンツの更新・削除を試みます。\n\n アイテムの絞り込み\n以下のようなプログラムにより、登録済みのコンテンツを取得することができます。今回は、titleが「更新前のタイトル」のコンテンツを取得しました。res[\"data\"]は配列になります。\nusername = \"xxx\"\npassword = \"xxx\"\nhost = \"xxx\"\n\nquery = {\n    \"title\": \"更新前のタイトル...",
          "link": "https://zenn.dev/nakamura196/articles/80bb8802676f2a",
          "publishedOn": "2023-04-11T09:40:23.000Z",
          "wordCount": 569,
          "title": "Pythonを使ってDrupalのコンテンツを更新・削除する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OB9b4Sf9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OB9b4Sf9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/herumi/articles/finite-field-05-dsl",
          "author": "herumi",
          "description": "初めに\n今回はPythonで作ったLLVM DSLを実装します。\n記事全体の一覧は有限体の実装一覧参照。\n\n LLVM DSL\n多倍長整数の実装8（LLVMを用いたasmコード生成）ではC++によるLLVMコード生成の方法を紹介しました。\nあれから同じ機能を持ったPythonによるLLVMコード生成DSLを作ったのでそれを紹介します。\ns_xbyak_llvm.pyはDSLからLLVM IRコード（以下ll）を生成するためのPythonツールです。\nもともとは、C++でJITを実現するためのXbyakを開発していたのですが、JITじゃなくてもDSLでアセンブラを掛けるのが便利であるこ...",
          "link": "https://zenn.dev/herumi/articles/finite-field-05-dsl",
          "publishedOn": "2023-04-11T07:53:55.000Z",
          "wordCount": 3799,
          "title": "有限体の実装5（PythonによるLLVM DSLの紹介）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gG7Dr5NF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2589%25E9%2599%2590%25E4%25BD%2593%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%25855%25EF%25BC%2588Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BLLVM%2520DSL%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gG7Dr5NF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2589%25E9%2599%2590%25E4%25BD%2593%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%25855%25EF%25BC%2588Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BLLVM%2520DSL%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/275cbce979bf76",
          "author": "tkyk",
          "description": "if文とは\nExcelで関数を扱ったことがあればイメージしやすいと思います。\nAなら◯◯する、Bなら△△する、というものです。\n基本的なルールは下記の通りです。\nif 条件A:\n\t条件A該当時のアクション\nif 条件B:\n\t条件B該当時のアクション\n ・・・\n「90点以上なら\"合格です、おめでとう！\"、90点未満なら\"不合格です、残念！\"」が表示されるように書きたいと思います。\na = 90\nif a >= 90:\n\tprint (\"合格です、おめでとう！\")\nif a < 90:\n\tprint (\"不合格です、残念！\")\nとすると「合格です、おめでとう！」が表示されます...",
          "link": "https://zenn.dev/tkyk/articles/275cbce979bf76",
          "publishedOn": "2023-04-11T06:38:25.000Z",
          "wordCount": 420,
          "title": "Python入門⑧～if文～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gDaWL3dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A7%25EF%25BD%259Eif%25E6%2596%2587%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gDaWL3dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A7%25EF%25BD%259Eif%25E6%2596%2587%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b41102c1a521eb",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-198 B - Palindrome with leading zeros\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    m = str(int(str(n)[::-1]))\n\n    print('Yes' if m == m[::-1] else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b41102c1a521eb",
          "publishedOn": "2023-04-11T04:04:01.000Z",
          "wordCount": 291,
          "title": "［AtCoder］ABC-198｜B - Palindrome with leading zeros",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PS8HP7z2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-198%25EF%25BD%259CB%2520-%2520Palindrome%2520with%2520leading%2520zeros%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PS8HP7z2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-198%25EF%25BD%259CB%2520-%2520Palindrome%2520with%2520leading%2520zeros%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9a276d057874ff",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-198 A - Div\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(n - 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9a276d057874ff",
          "publishedOn": "2023-04-11T04:04:00.000Z",
          "wordCount": 212,
          "title": "［AtCoder］ABC-198｜A - Div",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--77MWKw1R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-198%25EF%25BD%259CA%2520-%2520Div%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--77MWKw1R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-198%25EF%25BD%259CA%2520-%2520Div%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/e26318c15de5ad",
          "author": "tkyk",
          "description": "リストとは\nPythonでは複数の要素（数値や文字列など。混在も可）を1つの変数に入れることができます。\nそれが「リスト」です。\na = ['私は','鈴木','太郎です。']\nprint (a)\nとすると['私は','鈴木','太郎です。']と表示されます。\nインデックスやスライシングも使えます。\na = ['私は','鈴木','太郎です。']\nprint (a[1],a[2])\nとすると「鈴木 太郎です。」と表示されます。\n\n 変更可能体\n文字列は変更不能体でしたが、リストは変更可能体です。\nそのため、リスト内の一部を入れ替えることも可能です。\na = ['私は','鈴木','太...",
          "link": "https://zenn.dev/tkyk/articles/e26318c15de5ad",
          "publishedOn": "2023-04-11T02:49:49.000Z",
          "wordCount": 510,
          "title": "Python入門⑦～リスト～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kxWWf5tc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A6%25EF%25BD%259E%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kxWWf5tc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A6%25EF%25BD%259E%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/1cc654fc266d17",
          "author": "nakamura196",
          "description": "概要\nPythonを使ってDrupalにコンテンツを追加する機会がありましたので、その備忘録です。以下の記事を参考にしました。\nhttps://weimingchenzero.medium.com/use-python-to-call-drupal-9-core-restful-api-to-create-new-content-9f3fa8628ab4\n\n Drupalの準備\nAmazon Lightsailに作成しました。以下の記事などが参考になります。\nhttps://annai.co.jp/article/use-aws-lightsail\n\n モジュール\n以下をインストール...",
          "link": "https://zenn.dev/nakamura196/articles/1cc654fc266d17",
          "publishedOn": "2023-04-11T02:08:17.000Z",
          "wordCount": 678,
          "title": "Pythonを使ってDrupalにコンテンツを追加する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hiAgMpnO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hiAgMpnO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Drupal%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/8b768b45663351",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100本ノック（自作）11本目~20本目の問題とPythonのサンプルコードです．\n問題の不備や内容の誤り等ありましたら，ご指摘いただけますと幸いです．\n\n 設定\nメールマーケティングの効果を推定するケースについて考えます．\n化粧品のEC販売にて，メディアの会員の中で購買傾向の弱いユーザーにキャンペーンメールを配信します．手元には「過去に小規模なデータで実験を行ったデータ」と「今回購買傾向の弱いユーザーにメールを配信したデータ」が存在するとします．\nデータは，下記フォルダの2つのファイルを利用します．\nhttps://github.com/s1ok69oo/caus...",
          "link": "https://zenn.dev/s1ok69oo/articles/8b768b45663351",
          "publishedOn": "2023-04-10T23:47:51.000Z",
          "wordCount": 2585,
          "title": "因果推論100本ノック(2)回帰分析",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7HXQIdzX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25282%2529%25E5%259B%259E%25E5%25B8%25B0%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7HXQIdzX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25282%2529%25E5%259B%259E%25E5%25B8%25B0%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/eno314/articles/f4d1156420b9e8",
          "author": "むらむー",
          "description": "感想\nPythonでの効果的な型ヒントや型チェックの方法が解説されていて、あまり使ってこなかった機能を知ることができて良かった。Python以外のコードを書く時にも使える内容も結構あった。\n個人的に一番参考になったのが、どのユーザー定義型を使うかの指針のフローチャート。クラスを作る際は不変式を持たせるようにするという考えがあまりなかったので、今後は意識して使い分けたい。\n静的解析ツールやテスト、アーキテクチャに関するツール・ライブラリも多く紹介されていて、試していきたいなと思った。\n\n 個人的に重要だと思ったところ\n\n サマリ\n\nロバストとは\n\n保守性が高い\n変化に対して耐久性が高く...",
          "link": "https://zenn.dev/eno314/articles/f4d1156420b9e8",
          "publishedOn": "2023-04-10T20:57:17.000Z",
          "wordCount": 276,
          "title": "技術書読書ログ「ロバストPython」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ncWsO83E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8%25E8%25AA%25AD%25E6%259B%25B8%25E3%2583%25AD%25E3%2582%25B0%25E3%2580%258C%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588Python%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2582%2589%25E3%2582%2580%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NmEzZjk1NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ncWsO83E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8%25E8%25AA%25AD%25E6%259B%25B8%25E3%2583%25AD%25E3%2582%25B0%25E3%2580%258C%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588Python%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2582%2589%25E3%2582%2580%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NmEzZjk1NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/misakiishihara/articles/7e996ae4b339e9",
          "author": "石原岬",
          "description": "はじめに\nふと良いアイデアが浮かび、フルスタックのWebサービスを一から開発しようと思い立ち、pythonの仮想開発環境としてAnacondaを使用してDRF(Django Rest Framework)を叩いていくことにしたので、投稿（アウトプット）として残していきます。\n\n Anaconda とは\nPython Anacondaとは、Pythonのディストリビューションのことです。Pythonを書いている人なら共感していただけると思いますが、ライブラリに依存している部分が大きいです。規模が大きくなっていくと、あちこちからライブラリを持ってきて管理するのが面倒なので、そういったと...",
          "link": "https://zenn.dev/misakiishihara/articles/7e996ae4b339e9",
          "publishedOn": "2023-04-10T16:14:14.000Z",
          "wordCount": 153,
          "title": "[python]Anacondaで簡単な環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6snopbSu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpython%255DAnaconda%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmOGQ1NTY0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6snopbSu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpython%255DAnaconda%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmOGQ1NTY0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dumbled0re/articles/fd6e5b6a63cae1",
          "author": "dumbled0re",
          "description": "はじめに\n現在、大学でデータサイエンスを学んでいる大学生です。今回はスクレイピングする際に使用するScrapyとPostgreSQLの環境をDockerを使用して作成していきたいと思います。\n\n ディレクトリ構造\n.\n└── crawler\n    ├── app\n    │   ├── src          // コードの格納\n    │   └── .env\n    ├── docker\n    │   ├── db          \n    │   │   ├── init     // コンテナ作成時に初期データを登録するスクリプトを格納する\n    │   │   │...",
          "link": "https://zenn.dev/dumbled0re/articles/fd6e5b6a63cae1",
          "publishedOn": "2023-04-10T15:28:21.000Z",
          "wordCount": 634,
          "title": "【Scrapy+PostgreSQL】Dockerで環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UDxGWBLp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Scrapy%252BPostgreSQL%25E3%2580%2591Docker%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dumbled0re%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MTY4OGExZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UDxGWBLp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Scrapy%252BPostgreSQL%25E3%2580%2591Docker%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dumbled0re%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MTY4OGExZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/79cdca173ddce3",
          "author": "tkyk",
          "description": "インデックス～個々の文字列の取得～\nPythonでは、要素の中で、特定の位置にあるものだ\nけを取り出すことができます。\n特定の1文字だけ取り出したい場合\nprint ('◯◯◯' [左から何番目にあるか])\n特定の範囲を取り出したい場合\nprint ('◯◯◯' [何番目から:何番目まで])\nとします。\n例えば「あいうえお」という文字列があるとします。\n左から数えて、1番目は「あ」、2番目は「い」、3番目は…と並んでいます。\n左から1番目の文字だけを取り出したい場合は、\nprint ('あいうえお' [0])\nとすると「あ」が表示されます。「0番目＝左から1番目」という考え方です。\n...",
          "link": "https://zenn.dev/tkyk/articles/79cdca173ddce3",
          "publishedOn": "2023-04-10T09:15:32.000Z",
          "wordCount": 404,
          "title": "Python入門⑥～インデックス・スライシング～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WqjnGGK8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A5%25EF%25BD%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WqjnGGK8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A5%25EF%25BD%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/eb4d57078ee0f1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-197 B - Visibility\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef main():\n    h, w, x, y = getIntMap()\n    s = getStringRow(h)\n\n    n = 1\n    for xp in range(x, h):\n        if s[xp][y - 1] == '...",
          "link": "https://zenn.dev/hyperdb/articles/eb4d57078ee0f1",
          "publishedOn": "2023-04-10T05:11:01.000Z",
          "wordCount": 623,
          "title": "［AtCoder］ABC-197｜B - Visibility",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ksPNXDxn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-197%25EF%25BD%259CB%2520-%2520Visibility%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ksPNXDxn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-197%25EF%25BD%259CB%2520-%2520Visibility%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d396b92b5bd174",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-197 A - Rotate\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    s += s[0]\n\n    print(s[1:])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d396b92b5bd174",
          "publishedOn": "2023-04-10T05:11:00.000Z",
          "wordCount": 220,
          "title": "［AtCoder］ABC-197｜A - Rotate",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w1KNbamO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-197%25EF%25BD%259CA%2520-%2520Rotate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--w1KNbamO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-197%25EF%25BD%259CA%2520-%2520Rotate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kaeru39/articles/675b5f6b459818",
          "author": "kaeru39",
          "description": "自分で撮影した画像をSegment Anything Model(SAM)に適用した結果を共有します。今回は開発元のMeta社が公開しているデモサイトを使用しました。\nhttps://segment-anything.com/\n\n Segment Anything Model\nMeta AI Researchから1100万枚の画像で学習したセグメンテーションモデルSegment Anything Model(SAM)が2023年4月5日に発表されました。１画像に複数枚マスクが存在するため、マスク単位では約11億マスクが学習データに含まれているとの報告です。\nhttps://ai.face...",
          "link": "https://zenn.dev/kaeru39/articles/675b5f6b459818",
          "publishedOn": "2023-04-10T03:10:00.000Z",
          "wordCount": 324,
          "title": "Segment Anything Modelで自分で撮影してきた写真のセグメンテーション画像を生成して傾向を見る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ICHhDJra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Segment%2520Anything%2520Model%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E5%2586%2599%25E7%259C%259F%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E5%2582%25BE%25E5%2590%2591%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ICHhDJra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Segment%2520Anything%2520Model%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E5%2586%2599%25E7%259C%259F%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E5%2582%25BE%25E5%2590%2591%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kitsune3/articles/c3f015fd37c43d",
          "author": "ギンギツネさん",
          "description": "忙しい人向け\npytestとpytest-covを使ってカバレッジを出力し、依存するコードを洗い出す。\nカバレッジを出力する方法。\n\nローカル環境やリモート上の開発環境でコマンドライン環境が使用できる\n\npytestコマンドを使用する (記事内リンク)\n\n\n\nデータ基盤や分析基盤等Jupyter上でしかコードを実行できない\n\njupyter上ipytestを使用する　(記事内リンク)\n\n\n\n関数の呼び出し履歴を見たい\n\n標準ライブラリのtraceモジュールを使用する (記事内リンク)\n\n\n\n\nこんな感じで\n\n\n はじめに\nプロジェクト途中参加してコードを修正してくださいと言われた時、...",
          "link": "https://zenn.dev/kitsune3/articles/c3f015fd37c43d",
          "publishedOn": "2023-04-09T19:30:23.000Z",
          "wordCount": 573,
          "title": "雑にPythonの関数修正時にそれが呼び出している処理を特定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PJYi_GdF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259B%2591%25E3%2581%25ABPython%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E4%25BF%25AE%25E6%25AD%25A3%25E6%2599%2582%25E3%2581%25AB%25E3%2581%259D%25E3%2582%258C%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AE%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%2584%25E3%2583%258D%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0YWE5YTA4NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PJYi_GdF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259B%2591%25E3%2581%25ABPython%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E4%25BF%25AE%25E6%25AD%25A3%25E6%2599%2582%25E3%2581%25AB%25E3%2581%259D%25E3%2582%258C%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AE%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%2584%25E3%2583%258D%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0YWE5YTA4NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/watchstep/articles/56ee01f6eb3cca",
          "author": "watchstep",
          "description": "Pynecone이란? (그래도 React 종말각은 에바인 것 같아요)\n\nhttps://www.youtube.com/watch?v=47BL6WLZJ1g&t=1s\n특징 (공식 사이트 https://pynecone.io/ 에서 말하는…)\n\n\nPure Python\n새로운 언어 배울 필요 없어요 파이썬이랑 해당 프레임워크를 사용할 줄만 알면 돼요\nEasy to Learn\n\nFull Flexibility\n확장성 좋아요\n\nBatteries Included\nPynecone 하나로  프론트엔드, 백엔드, 배포 다 할 수 있어요\n\n\n...",
          "link": "https://zenn.dev/watchstep/articles/56ee01f6eb3cca",
          "publishedOn": "2023-04-09T18:51:35.000Z",
          "wordCount": 1307,
          "title": "[Pynecone] Pynecone 시작하기 (Python으로 웹앱 만들기)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--D6Dmv3lM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPynecone%255D%2520Pynecone%2520%25EC%258B%259C%25EC%259E%2591%25ED%2595%2598%25EA%25B8%25B0%2520%2528Python%25EC%259C%25BC%25EB%25A1%259C%2520%25EC%259B%25B9%25EC%2595%25B1%2520%25EB%25A7%258C%25EB%2593%25A4%25EA%25B8%25B0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watchstep%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyODEyNmI2MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--D6Dmv3lM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPynecone%255D%2520Pynecone%2520%25EC%258B%259C%25EC%259E%2591%25ED%2595%2598%25EA%25B8%25B0%2520%2528Python%25EC%259C%25BC%25EB%25A1%259C%2520%25EC%259B%25B9%25EC%2595%25B1%2520%25EB%25A7%258C%25EB%2593%25A4%25EA%25B8%25B0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watchstep%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyODEyNmI2MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/6e5c6611240662",
          "author": "しろ",
          "description": "テキストから音楽の生成からファイル形式の変換までの一通りのものになります。\n\n実際に作成した音楽\nhttps://drive.google.com/drive/folders/1L9_Y27YUhDPiIu7MoA9vnViNcsMyg0ql?usp=sharing\n\n 使用ライブラリ\n\n生成時使うもの\n\npytorch\nsamplings\ntransformers\nunidecode\n\n\n音声の変換\n\nmusic21\nmidi2audio\n\n\nその他\n\nos\nglob\ndatetime\nrandom\n\n\n\n\n 必要なライブラリのインストール\npytorchは公式サイトに行き任意のものを...",
          "link": "https://zenn.dev/shiro_toy_box/articles/6e5c6611240662",
          "publishedOn": "2023-04-09T14:00:50.000Z",
          "wordCount": 2441,
          "title": "テキストから音楽を作るAIをさわる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mOtd0EUp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258BAI%25E3%2582%2592%25E3%2581%2595%25E3%2582%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mOtd0EUp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258BAI%25E3%2582%2592%25E3%2581%2595%25E3%2582%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/ce53b9d96bbe32",
          "author": "laiso",
          "description": "AI Functionsのコンセプトがヤバ過ぎる(Twitterインプレッション構文)\nhttps://www.askmarvin.ai/guide/concepts/ai_functions/\nAI Functionsは表題どうりGPTに関数のシグネチャと引数を送って返り値を生成する。必要なのは\n\nシグネチャ: def list_fruits(n: int) -> list[str]:\n\nドキュメント: \"\"\"Generate a list of n fruits\"\"\"\n\n入力値: 3\n\n\nの3つ。\nこれに対してGPTが list[str] の形式で応答してくると、プログラムにR...",
          "link": "https://zenn.dev/laiso/articles/ce53b9d96bbe32",
          "publishedOn": "2023-04-09T13:32:12.000Z",
          "wordCount": 216,
          "title": "GPTに関数のシグネチャと引数を送って返り値を生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--F1zJLD9F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E3%2581%25AB%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25A8%25E5%25BC%2595%25E6%2595%25B0%25E3%2582%2592%25E9%2580%2581%25E3%2581%25A3%25E3%2581%25A6%25E8%25BF%2594%25E3%2582%258A%25E5%2580%25A4%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--F1zJLD9F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E3%2581%25AB%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25A8%25E5%25BC%2595%25E6%2595%25B0%25E3%2582%2592%25E9%2580%2581%25E3%2581%25A3%25E3%2581%25A6%25E8%25BF%2594%25E3%2582%258A%25E5%2580%25A4%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/909ca2e858f43c",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100本ノック（自作）1本目~10本目の問題とPythonのサンプルコードです．\n問題の不備や内容の誤り等ありましたら，ご指摘いただけますと幸いです．\n\n 設定\nアナリストの分析レポートが営業の受注件数にどれくらい貢献しているかを分析するケースを考えます．\n今回は，下記フォルダの「causal_knock1.csv」ファイルのデータを利用します．\nhttps://github.com/s1ok69oo/causal_inference_100knock/tree/main/data\nデータのカラムの概要は下記の通りです．\n\n\n\n変数名\nデータの概要\n備考\n\n\n\n\ny...",
          "link": "https://zenn.dev/s1ok69oo/articles/909ca2e858f43c",
          "publishedOn": "2023-04-09T10:50:47.000Z",
          "wordCount": 1197,
          "title": "因果推論100本ノック(1)因果効果とランダム割付",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GDNH0t-L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25281%2529%25E5%259B%25A0%25E6%259E%259C%25E5%258A%25B9%25E6%259E%259C%25E3%2581%25A8%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E5%2589%25B2%25E4%25BB%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GDNH0t-L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25281%2529%25E5%259B%25A0%25E6%259E%259C%25E5%258A%25B9%25E6%259E%259C%25E3%2581%25A8%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E5%2589%25B2%25E4%25BB%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/midra_lab/articles/5ac35094ec53c2",
          "author": "ayousanz",
          "description": "概要\nTwitterAPIを使って、ユーザーの中から関連性のあるユーザーを絞り込む方法を紹介します。\nPythonのライブラリであるTweepyを使用して、TwitterAPIを叩いています。\n\n 環境\n\nDocker image: python:3.10\nTweepy: 4.13.0\n\n\n Tweepyとは\nTweepyは、Python用のTwitter\nAPIライブラリで、Twitterのデータや機能に簡単にアクセスできるように設計されています。主な機能には、ツイートの投稿、タイムラインの取得、ユーザー情報の取得、検索などがあります。簡潔なコードで効率的なTwitterアプリケー...",
          "link": "https://zenn.dev/midra_lab/articles/5ac35094ec53c2",
          "publishedOn": "2023-04-09T10:20:54.000Z",
          "wordCount": 667,
          "title": "TwitterAPI(Tweepy)で関連性のあるユーザーを絞り込む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Zs0r20Zf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TwitterAPI%2528Tweepy%2529%25E3%2581%25A7%25E9%2596%25A2%25E9%2580%25A3%25E6%2580%25A7%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E7%25B5%259E%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2528%25E3%2583%259F%25E3%2583%2589%25E3%2583%25A9%25E3%2583%259C%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ayousanz%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGI0ZTBiOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTljMWRhOGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Zs0r20Zf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TwitterAPI%2528Tweepy%2529%25E3%2581%25A7%25E9%2596%25A2%25E9%2580%25A3%25E6%2580%25A7%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E7%25B5%259E%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2528%25E3%2583%259F%25E3%2583%2589%25E3%2583%25A9%25E3%2583%259C%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ayousanz%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGI0ZTBiOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTljMWRhOGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/midra_lab/articles/e1078b6d669c17",
          "author": "ayousanz",
          "description": "概要\nPythonのpickleモジュールを使ってデータをバイナリーファイルとして保存/読み込みする方法を実装します。\n\n 環境\n\nDocker image: python:3.10\nWindows 10\n\n\n 内容\n\n pickleの概要\n\nPython オブジェクトの直列化および直列化されたオブジェクトの復元のためのバイナリプロトコルを実装しています。\n\nPython オブジェクトの直列化より\nまたソースコードは以下になっています。\nhttps://github.com/python/cpython/blob/3.10/Lib/pickle.py\n\n ライブラリのインポート\npi...",
          "link": "https://zenn.dev/midra_lab/articles/e1078b6d669c17",
          "publishedOn": "2023-04-09T08:18:15.000Z",
          "wordCount": 294,
          "title": "Pythonでpickleを用いてデータをバイナリーファイとして保存する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QMVYvFpG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7pickle%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2528%25E3%2583%259F%25E3%2583%2589%25E3%2583%25A9%25E3%2583%259C%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ayousanz%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGI0ZTBiOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTljMWRhOGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QMVYvFpG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7pickle%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2528%25E3%2583%259F%25E3%2583%2589%25E3%2583%25A9%25E3%2583%259C%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ayousanz%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGI0ZTBiOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTljMWRhOGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/83288d70f681d5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-196 A - Difference Max\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n    c, d = getIntMap()\n\n    print(b - c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/83288d70f681d5",
          "publishedOn": "2023-04-09T07:49:55.000Z",
          "wordCount": 247,
          "title": "［AtCoder］ABC-196｜A - Difference Max",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ysyLhmAK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-196%25EF%25BD%259CA%2520-%2520Difference%2520Max%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ysyLhmAK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-196%25EF%25BD%259CA%2520-%2520Difference%2520Max%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4de4af3de10583",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-196 B - Round Down\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    x = getString()\n\n    print(x.split('.')[0])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/4de4af3de10583",
          "publishedOn": "2023-04-09T07:49:55.000Z",
          "wordCount": 217,
          "title": "［AtCoder］ABC-196｜B - Round Down",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fZL1vTqv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-196%25EF%25BD%259CB%2520-%2520Round%2520Down%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fZL1vTqv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-196%25EF%25BD%259CB%2520-%2520Round%2520Down%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tesla/articles/323770f98b343c",
          "author": "tesla",
          "description": "こんにちは。\nフロントエンジニアを主にやっている「てすら」です。\nzennや技術ブログ系は初めてなので読みづらいところがありましたらすみません...\n最近は生成AIやChatGPT周りについて調べることが増えました。\nChatGPTを使いたいものの、企業によっては情報漏洩の観点から使えないことがあると思います。\nそこで特定の単語だけ暗号化して送信するAPIのWrapperを作成し、情報漏洩の可能性を最小限に抑えるようなものを作成しました。\n\n この記事は誰向けか\nChatGPTなどのLLMを使用したいが、データの秘匿性の観点などから使用に踏み切れない方\n（API側のオプトアウトだけでは不...",
          "link": "https://zenn.dev/tesla/articles/323770f98b343c",
          "publishedOn": "2023-04-09T06:19:14.000Z",
          "wordCount": 1211,
          "title": "業務で使うためのChatGPTのAPI Wrapperを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Svak393t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25AD%25E5%258B%2599%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEChatGPT%25E3%2581%25AEAPI%2520Wrapper%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tesla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MmIzODI1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Svak393t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25AD%25E5%258B%2599%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEChatGPT%25E3%2581%25AEAPI%2520Wrapper%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tesla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MmIzODI1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yskn_sid25/articles/b2ecc4b220d54a",
          "author": "Kanon",
          "description": "TL;DR\nこの度オープンソースでプロジェクトを公開したので、そのために準備していったことや公開したアプリについて話します。\n\n はじめに\n🎉 この度、オープンソースでアプリケーションを公開しました 🎉\nその名も「おたくつーる」と言いまして、私のようなオタクがより豊かなオタクライフを送れるようなアプリにしたいと思い、アジャイル方式で徐々に機能を拡張させていこうと考えています。\nhttps://github.com/ysknsid25/otaku-tool\n\nいまあるのは、元々個人的に使っていた、\"超 A&G の番組情報を通知する機能\"のみです。\nこの次は、これまた別に作ってい...",
          "link": "https://zenn.dev/yskn_sid25/articles/b2ecc4b220d54a",
          "publishedOn": "2023-04-09T03:56:34.000Z",
          "wordCount": 566,
          "title": "エンジニア5周年記念にオープンソースプロジェクトを自分で立ち上げた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lQHP3_B---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A25%25E5%2591%25A8%25E5%25B9%25B4%25E8%25A8%2598%25E5%25BF%25B5%25E3%2581%25AB%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMRTR5OUhOc3hkUm9vWkVlUDBackFyU0NvWG51SlU4RkpjUHpYamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lQHP3_B---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A25%25E5%2591%25A8%25E5%25B9%25B4%25E8%25A8%2598%25E5%25BF%25B5%25E3%2581%25AB%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMRTR5OUhOc3hkUm9vWkVlUDBackFyU0NvWG51SlU4RkpjUHpYamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/roistaff/articles/54351031509174",
          "author": "Staff Roi",
          "description": "インターネットサーフィンをしていると様々なステータスコードに出会うことはありませんか？ 404 Not foundやJavascriptで非同期通信するときの正常な200など、RFCの仕様書などでこれらは全て規格として決まっています。\n今回はその中でも偶然見つけた奇妙なステータスコードを紹介したいと思います。\n\n HTTP 451 Unavailable For Legal Reasons\nMDNのドキュメントはこちら\nhttps://developer.mozilla.org/ja/docs/Web/HTTP/Status/451\nこのステータスコードは国家にとって国民に知られたくない...",
          "link": "https://zenn.dev/roistaff/articles/54351031509174",
          "publishedOn": "2023-04-09T03:45:57.000Z",
          "wordCount": 500,
          "title": "奇妙なHTTPステータスコード達",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3kZPgv_u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A5%2587%25E5%25A6%2599%25E3%2581%25AAHTTP%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2581%2594%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3kZPgv_u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A5%2587%25E5%25A6%2599%25E3%2581%25AAHTTP%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2581%2594%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/manuriya/articles/36ec9b5414069d",
          "author": "manuriya",
          "description": "こんにちは、manuriya（@lTlanual）と申します。\n元々はコンピュータビジョン関連の仕事をしており、最近は航空写真や衛星画像を入力とした深層学習モデルの開発をしています。\nSolafuneで開催された衛星画像の超解像コンペに参加しました。\n諸事情によりコンペに参加できる日数が平日5日（学習時間を除くと10時間程度）しかなかったため、なるべく軽量なモデル（≒学習時間が短い）で効果的にモデルを作る必要がありました。\n本記事では超解像モデルを作るにあたってどのような考え方で作成したかを順を追って記載したいと思います。\n\ncf. @solafune(https://solafune....",
          "link": "https://zenn.dev/manuriya/articles/36ec9b5414069d",
          "publishedOn": "2023-04-09T03:39:13.000Z",
          "wordCount": 282,
          "title": "[solafune] 衛星画像の5倍超解像度化 (for OSS) の解法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rui40p4V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bsolafune%255D%2520%25E8%25A1%259B%25E6%2598%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE5%25E5%2580%258D%25E8%25B6%2585%25E8%25A7%25A3%25E5%2583%258F%25E5%25BA%25A6%25E5%258C%2596%2520%2528for%2520OSS%2529%2520%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:manuriya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYjM1Nzk5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rui40p4V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bsolafune%255D%2520%25E8%25A1%259B%25E6%2598%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE5%25E5%2580%258D%25E8%25B6%2585%25E8%25A7%25A3%25E5%2583%258F%25E5%25BA%25A6%25E5%258C%2596%2520%2528for%2520OSS%2529%2520%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:manuriya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYjM1Nzk5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/fdb895523aed56",
          "author": "Matsuzaki",
          "description": "Pickleって何？\nプログラムを実行し終えた後も作成したオブジェクトを保存する機能を提供するのがPickle moduleらしいです。\n保存する方法としてはバイト列にオブジェクトを変換して保存するらしい\nバイナリとしてファイルみたいな形にして保存することでプログラムを実行し終えた後にも再利用することができるってわけだ。\n\n直列化（serialize)とはオブジェクトとそのインスタンス変数をバイト列やxmlに変換することらしい。\nこれによりオブジェクトをファイルとして保存したり、ネットワークで送信することができるようになる。\nserializeされたオブジェクトを復元する処理はdes...",
          "link": "https://zenn.dev/zi_matsu/articles/fdb895523aed56",
          "publishedOn": "2023-04-09T01:32:44.000Z",
          "wordCount": 190,
          "title": "4/3~4/7で学んだこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YNxw8_5T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F3%7E4%252F7%25E3%2581%25A7%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YNxw8_5T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F3%7E4%252F7%25E3%2581%25A7%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kopaneet/articles/306660d597bcfc",
          "author": "コパン",
          "description": "4月から新しい環境になって、Pythonの環境構築があったので今後忘れないためのメモです。\n未来の自分と誰かの役にたてば嬉しいです。\n\n anyenvとは\n「anyenv」は「All in one for env」と言われているオールインワンのバージョンマネージです。\nnodenvやpyenv、rbenvなどenv系が色々ありますが、それらをまとめて管理することができます。\nプロジェクト毎に異なるバージョンを使用したい場合に便利な*envをまとめて管理できるので優れものです。\n\n anyenvのインストール\n早速anyenvをインストールする方法です。\nインストールにはgitを使用してc...",
          "link": "https://zenn.dev/kopaneet/articles/306660d597bcfc",
          "publishedOn": "2023-04-09T00:47:19.000Z",
          "wordCount": 905,
          "title": "anyenv + pyenv + poetry でPythonの開発環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IYGoFL32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anyenv%2520%252B%2520pyenv%2520%252B%2520poetry%2520%25E3%2581%25A7Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%2591%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlhjUjhXSy1xbjNDV2pJcHMwTzBfd1V1TFQtS3NMbE1iQjVsMXlMZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IYGoFL32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anyenv%2520%252B%2520pyenv%2520%252B%2520poetry%2520%25E3%2581%25A7Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%2591%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlhjUjhXSy1xbjNDV2pJcHMwTzBfd1V1TFQtS3NMbE1iQjVsMXlMZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/grahamian/articles/cfcd4039194117",
          "author": "Grahamian",
          "description": "プライベートで使っているPCをApple Silicon M2チップを搭載したMac mini 2023に変えたのでPythonの環境をゼロから構築しました。\nmacOSのバージョンはVentura 13.2.1です\n特に大したことはしていないですが備忘録として。\n\n 環境構築\n\n brew\nまずはbrewから入れます。とにかくこれを入れないと何も進まないので。\n公式のページにインストールするときのコマンドが書かれているのでこれをそのまま実行します。\nインストール自体はこれだけで完了ですが、たぶんインストールの一番最後に「PATHを通せ」みたいなメッセージが表示されているのでそれも実行し...",
          "link": "https://zenn.dev/grahamian/articles/cfcd4039194117",
          "publishedOn": "2023-04-08T15:39:55.000Z",
          "wordCount": 368,
          "title": "ゼロからM2 MacにPython環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bMFIMLc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589M2%2520Mac%25E3%2581%25ABPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Grahamian%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlZTdjNTBkNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bMFIMLc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589M2%2520Mac%25E3%2581%25ABPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Grahamian%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlZTdjNTBkNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/stranglehello/articles/a6efd1f2bcec1b",
          "author": "stranglehello",
          "description": "ちょっと直近使うこともあったので簡単にメモとなります。\n下記の記事などを参考にさせて頂いています。\nhttps://zenn.dev/aldagram_tech/articles/8e09cff2bd74a1\nhttps://qiita.com/m77so/items/8b0d608489c602f91a87\n\n 前置き\n\n Storage Write APIのいいところ\n\n公式が推している（たしか）\noffsetを用いたデータの格納の観点で、冪等席を担保しやすい構成である\ngRPCを通して高速にデータの格納を行えるところ\ninsertALL（streaming api）に対して従量課金...",
          "link": "https://zenn.dev/stranglehello/articles/a6efd1f2bcec1b",
          "publishedOn": "2023-04-08T15:14:55.000Z",
          "wordCount": 1759,
          "title": "Cloud Functions（Python） で BigQuery Storage Write APIを叩く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IJA2VUHv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Functions%25EF%25BC%2588Python%25EF%25BC%2589%2520%25E3%2581%25A7%2520BigQuery%2520Storage%2520Write%2520API%25E3%2582%2592%25E5%258F%25A9%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stranglehello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNjcyNDhkMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IJA2VUHv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Functions%25EF%25BC%2588Python%25EF%25BC%2589%2520%25E3%2581%25A7%2520BigQuery%2520Storage%2520Write%2520API%25E3%2582%2592%25E5%258F%25A9%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stranglehello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNjcyNDhkMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okuma/articles/satellite_srtm_3dview",
          "author": "shun",
          "description": "無料で取得できるデータと Python を使って、関東近辺の地形を 3D 表示させます。\nここでは、NASA の SRTM (Shuttle Radar Topography Mission) データを使用し、Python で 3D モデルを作成します。\n\n 実行環境\n\nUbuntu 22.04\nPython 3.10.4\n\n\n データの取得\nSRTM データは、NASA が提供する無料の地形データです。\n\n USGS EarthExplorer から SRTM データを取得する\n\n\nUSGS EarthExplorer にアクセス\n以下のリンクから USGS EarthExplorer...",
          "link": "https://zenn.dev/okuma/articles/satellite_srtm_3dview",
          "publishedOn": "2023-04-08T13:37:19.000Z",
          "wordCount": 887,
          "title": "衛星データを使って関東近辺の地形を3D表示させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VkQggMBf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%25A2%25E6%259D%25B1%25E8%25BF%2591%25E8%25BE%25BA%25E3%2581%25AE%25E5%259C%25B0%25E5%25BD%25A2%25E3%2582%25923D%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shun%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5ODE5ZTdlMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VkQggMBf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%25A2%25E6%259D%25B1%25E8%25BF%2591%25E8%25BE%25BA%25E3%2581%25AE%25E5%259C%25B0%25E5%25BD%25A2%25E3%2582%25923D%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shun%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5ODE5ZTdlMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tremendous1192/articles/fc7b4a9b87b4e0",
          "author": "Tremendous1192",
          "description": "はじめに\n最近kaggleを始めまして、ただ単にlightgbmにデータを食べさせるだけでは限界があることが分かりました。\n急がば回れ、さらに基礎を固めた方が良いのでしょう。\nこの記事では、私が肌感をつかむために学んだsklearnのメソッド等を紹介していきます。\nsklearnを使う理由は、こちらの方が幅広い処理を行うことができるからです。\n\n 書籍\n使用したデータは統計的機械学習ことはじめの購入者特典ダウンロードデータです。\n多数のケーススタディをグラフィカルに紹介しておりますので、初心者向けの本を何冊か読んだ後に読むとちょうどよいかもしれません。\n!\n書籍では密度分布で終わりで...",
          "link": "https://zenn.dev/tremendous1192/articles/fc7b4a9b87b4e0",
          "publishedOn": "2023-04-08T09:00:00.000Z",
          "wordCount": 3399,
          "title": "sklearnで統計的機械学習ことはじめ 第1章 ビッグデータの可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ck1KE9M0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sklearn%25E3%2581%25A7%25E7%25B5%25B1%25E8%25A8%2588%25E7%259A%2584%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%2520%25E7%25AC%25AC1%25E7%25AB%25A0%2520%25E3%2583%2593%25E3%2583%2583%25E3%2582%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tremendous1192%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZWU3MTRkMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ck1KE9M0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sklearn%25E3%2581%25A7%25E7%25B5%25B1%25E8%25A8%2588%25E7%259A%2584%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%2520%25E7%25AC%25AC1%25E7%25AB%25A0%2520%25E3%2583%2593%25E3%2583%2583%25E3%2582%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tremendous1192%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZWU3MTRkMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takiko/articles/24217eece242e1",
          "author": "takigon",
          "description": "概要\nLLM(大規模言語モデル)の統合的なライブラリである、LangChain の基本的な使い方についての解説記事です。\nLangChain は、Microsoft が提供する Visual ChatGPTなどにも、内部的に使用されており、今後のLLM開発のデファクトスタンダードになり得るライブラリです。\nLangChain は現在、Python と TypeScript の環境でのみ使用可能であり、本記事は TypeScript での解説になります。\nただ、Pythonでの実装方法も殆ど変わらないため、Pythonでの実装を考えてる方にも参考程度にはなるかと思います。\n\n この記事...",
          "link": "https://zenn.dev/takiko/articles/24217eece242e1",
          "publishedOn": "2023-04-08T08:00:53.000Z",
          "wordCount": 3252,
          "title": "GPTをドーピングする LangChain 基礎編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--biz4Lqrs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E3%2582%2592%25E3%2583%2589%25E3%2583%25BC%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2520LangChain%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takigon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZTE0YmI0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--biz4Lqrs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E3%2582%2592%25E3%2583%2589%25E3%2583%25BC%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2520LangChain%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takigon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZTE0YmI0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/11f1494e1b0a71",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-195 B - Many Oranges\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, w = getIntMap()\n\n    wg = w * 1000\n\n    c = []\n    for i in range(wg // b, (wg // a) + 1):\n        if i * a <= wg <= i * b:\n            c.append(i)\n\n    print('UNSATISFI...",
          "link": "https://zenn.dev/hyperdb/articles/11f1494e1b0a71",
          "publishedOn": "2023-04-08T06:37:43.000Z",
          "wordCount": 403,
          "title": "［AtCoder］ABC-195｜B - Many Oranges",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--30I85qeI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-195%25EF%25BD%259CB%2520-%2520Many%2520Oranges%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--30I85qeI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-195%25EF%25BD%259CB%2520-%2520Many%2520Oranges%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0e87e505b892e4",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-195 A - Health M Death\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    m, n = getIntMap()\n\n    print('Yes' if n % m == 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/0e87e505b892e4",
          "publishedOn": "2023-04-08T06:37:42.000Z",
          "wordCount": 260,
          "title": "［AtCoder］ABC-195｜A - Health M Death",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I_mKoFvd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-195%25EF%25BD%259CA%2520-%2520Health%2520M%2520Death%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I_mKoFvd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-195%25EF%25BD%259CA%2520-%2520Health%2520M%2520Death%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/7e50cba9988896",
          "author": "tirimen",
          "description": "本記事の目的\n自分の勉強用。今回はベイズ推定のサンプリング方法の第二弾。第一弾のギブスサンプリングについてはこちらをどうぞ。\nhttps://zenn.dev/tirimen/articles/80248e2caf2d63\n今回はメトロポリス法についてまとめていく。\n\n ギブスサンプリングとメトロポリス法の使い分けについて\nどちらもMCMC法のサンプリング方法であるが、適した場面が異なる。一般的に言われているのが、ギブスサンプリングは条件付き確率が求めやすい形のとき、メトロポリス法は条件付き確率が求めにくい形のときに用いられるということ。ってことはメトロポリス法の方が汎用性があり、ず...",
          "link": "https://zenn.dev/tirimen/articles/7e50cba9988896",
          "publishedOn": "2023-04-08T01:47:00.000Z",
          "wordCount": 1348,
          "title": "MCMC法のメトロポリス法をやってみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DUZHDEFq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%2588%25E3%2583%25AD%25E3%2583%259D%25E3%2583%25AA%25E3%2582%25B9%25E6%25B3%2595%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DUZHDEFq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%2588%25E3%2583%25AD%25E3%2583%259D%25E3%2583%25AA%25E3%2582%25B9%25E6%25B3%2595%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/a5c0fa5c2230a7",
          "author": "Tanny",
          "description": "概要\nこの記事では、SwitchBot温湿度計のデータをAPI経由で取得し、時系列DBのInfluxDBに保存した上で、Grafanaでダッシュボード化する方法を解説します。\n\nGrafanaで作成したダッシュボード\n\n SwitchBot温湿度計について\nSwitchBot温湿度計は、温度と湿度を計測するセンサーです。温度と湿度をデバイスの画面で確認する以外にも、他のSwitchBotデバイスと連携し、「温度が低下したら暖房をつける」といったトリガー起動に活用できます。\n2023年3月現在は2種類の温湿度計が販売されており、この記事では両方に対応しています。「プラス」の方が液晶を見...",
          "link": "https://zenn.dev/tanny/articles/a5c0fa5c2230a7",
          "publishedOn": "2023-04-07T12:08:04.000Z",
          "wordCount": 2560,
          "title": "【SwitchBot】温湿度計のデータをPython × InfluxDB × Grafanaでダッシュボード化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--78KaWucV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SwitchBot%25E3%2580%2591%25E6%25B8%25A9%25E6%25B9%25BF%25E5%25BA%25A6%25E8%25A8%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Python%2520%25C3%2597%2520InfluxDB%2520%25C3%2597%2520Grafana%25E3%2581%25A7%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--78KaWucV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SwitchBot%25E3%2580%2591%25E6%25B8%25A9%25E6%25B9%25BF%25E5%25BA%25A6%25E8%25A8%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Python%2520%25C3%2597%2520InfluxDB%2520%25C3%2597%2520Grafana%25E3%2581%25A7%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/roistaff/articles/c78a26dd99e2a5",
          "author": "Staff Roi",
          "description": "Pythonでもお馴染みのメモリ使用量などを取得するライブラリ、psutilのGo版gopsutilというライブラリがあったので軽く紹介したいと思います。\n\n 使い方\n\n Get package\nhttps://github.com/shirou/gopsutil\n以下のコマンドからいけます。\ngo get github.com/shirou/gopsutil/v3/mem\n\n Usage\npackage main\nimport(\n\t\"github.com/shirou/gopsutil/v3/mem\"\n\t\"fmt\"\n\t)\nfunc main(){\n\tv, _ := mem.Virtua...",
          "link": "https://zenn.dev/roistaff/articles/c78a26dd99e2a5",
          "publishedOn": "2023-04-07T11:47:39.000Z",
          "wordCount": 833,
          "title": "Go psutilライブラリの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WMOtcN9B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%2520psutil%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WMOtcN9B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%2520psutil%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mossan_hoshi/articles/20230407_cheatsheep",
          "author": "mossan_hoshi",
          "description": "はじめに\n\n個人的に主要言語と思う8言語＆スクリプト（python, JavaScript, Rust, Haskell, C++, C#, bash, PowerShell)のチートシートです\nインデントのために全角空白を含んでます。コピペする場合は気を付けて下さい\nChatGPT(GPT-4)に書かせたコードなので一部変なコードがあるかもしれません\n動かない場合はChatGPTにコードと一緒に\"＜プログラミング名＞で＜大分類名＞の＜小分類名＞をやろうと思うんだけど、このコードを修正して。\"的なことを書けば大抵の場合修正してくれます\n\n\n チートシート\n\n スプレッドシート版（こち...",
          "link": "https://zenn.dev/mossan_hoshi/articles/20230407_cheatsheep",
          "publishedOn": "2023-04-07T10:24:41.000Z",
          "wordCount": 7829,
          "title": "【随時更新】主要プログラミング言語8種チートシート",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rwPBLxSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E3%2580%2591%25E4%25B8%25BB%25E8%25A6%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E8%25E7%25A8%25AE%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mossan_hoshi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dfWU0zbjhpS2hvOGtURGlHdGNzYldTQ1lneVNqbHNSd1pRTlVFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rwPBLxSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E3%2580%2591%25E4%25B8%25BB%25E8%25A6%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E8%25E7%25A8%25AE%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mossan_hoshi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dfWU0zbjhpS2hvOGtURGlHdGNzYldTQ1lneVNqbHNSd1pRTlVFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/c2cfdda734b61c",
          "author": "ryohtaka",
          "description": "はじめに\n2023 年 3 月 21 日に Azrue OpenAI Service で GPT-4 の登録制プレビューが開始しましたので、情報をまとめました。\n\nAzure OpenAI Service に GPT-4 を導入\nAzure OpenAI Service の新機能 - 2023 年 3 月\n\nちなみに、本家 OpenAI での GPT-4 の発表と同じタイミングで、実は 新しい Bing の背後には GPT-4 がいたことが公表されました。さらにその直後、Microsoft 365 Copilot や Copilot in Microsoft Power Automa...",
          "link": "https://zenn.dev/microsoft/articles/c2cfdda734b61c",
          "publishedOn": "2023-04-07T08:25:37.000Z",
          "wordCount": 3939,
          "title": "Azure OpenAI Service で GPT-4 API を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--463HIYqn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%2520GPT-4%2520API%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--463HIYqn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520%25E3%2581%25A7%2520GPT-4%2520API%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/dumbled0re/articles/744c783a8b3992",
          "author": "dumbled0re",
          "description": "はじめに\n現在、大学でデータサイエンスを学んでいる大学生です。この記事ではPyTorch+LSTMを使用して、仮想通貨であるXRP(リップル)の予測をしていきたいと思います。\n\n データの準備\n今回はInvesting.comで2015年1月から現在(2023/04/06)まで公開されている8年間のXRPデータを使用します。こちらからcsvファイルをダウンロードしてください。\n\n 実行環境\n\nGoogle Colaboratory\nPython 3.8.16\n\n\n ライブラリのインポート\nimport os\nimport datetime\nimport math\nimport num...",
          "link": "https://zenn.dev/dumbled0re/articles/744c783a8b3992",
          "publishedOn": "2023-04-07T07:52:10.000Z",
          "wordCount": 1953,
          "title": "【PyTorch+LSTM】仮想通貨の予測",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xPqGqgvX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PyTorch%252BLSTM%25E3%2580%2591%25E4%25BB%25AE%25E6%2583%25B3%25E9%2580%259A%25E8%25B2%25A8%25E3%2581%25AE%25E4%25BA%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dumbled0re%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ym16Y3poTmRJWlFDZEtDOEx1OUxzdS1yRlVKR3NXU3l5UzZOZWQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xPqGqgvX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PyTorch%252BLSTM%25E3%2580%2591%25E4%25BB%25AE%25E6%2583%25B3%25E9%2580%259A%25E8%25B2%25A8%25E3%2581%25AE%25E4%25BA%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dumbled0re%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ym16Y3poTmRJWlFDZEtDOEx1OUxzdS1yRlVKR3NXU3l5UzZOZWQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ee87e1bc84af20",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-194 A - I Scream\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    t = 4\n    if a + b >= 15 and b >= 8:\n        t = 1\n    elif a + b >= 10 and b >= 3:\n        t = 2\n    elif a + b >= 3:\n        t = 3\n    print(t)\n...",
          "link": "https://zenn.dev/hyperdb/articles/ee87e1bc84af20",
          "publishedOn": "2023-04-07T04:48:53.000Z",
          "wordCount": 359,
          "title": "［AtCoder］ABC-194｜A - I Scream",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y8RqFV6F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-194%25EF%25BD%259CA%2520-%2520I%2520Scream%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y8RqFV6F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-194%25EF%25BD%259CA%2520-%2520I%2520Scream%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/942476c4519af0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-194 B - Job Assignment\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    l = getIntListRow(n)\n\n    a = [i for i, j in l]\n    b = [j for i, j in l]\n\n    t = max(a) +...",
          "link": "https://zenn.dev/hyperdb/articles/942476c4519af0",
          "publishedOn": "2023-04-07T04:48:52.000Z",
          "wordCount": 500,
          "title": "［AtCoder］ABC-194｜B - Job Assignment",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fEHgALlt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-194%25EF%25BD%259CB%2520-%2520Job%2520Assignment%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fEHgALlt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-194%25EF%25BD%259CB%2520-%2520Job%2520Assignment%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/treefield/articles/f6e8b879387d02",
          "author": "treefield",
          "description": "DjangoアプリをHerokuにデプロイしたので手順を記録します。\n環境は、\nmacOS 12.6.4\nPython 3.10.10\nDjango 4.0.2\n基本的にはこのサイトを参考にさせてもらいました。大変助かりました。\nDjangoアプリをHerokuにデプロイする方法\n\n 1.各種インストール\nまずは各種インストールを実施します。\n\n Heroku CLIインストール\nHeroku Command Line Interface (CLI) を使用すると、Heroku アプリをターミナルから直接、作成および管理できます。ただし、Gitがインストールされていることが前提です。\n%...",
          "link": "https://zenn.dev/treefield/articles/f6e8b879387d02",
          "publishedOn": "2023-04-06T16:16:42.000Z",
          "wordCount": 1847,
          "title": "DjangoアプリをHerokuにデプロイしました。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Rimu5VWs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Heroku%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:treefield%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMWQ3M2UxMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Rimu5VWs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Heroku%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:treefield%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMWQ3M2UxMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/3b09a42ecdf197",
          "author": "Josh Nobus",
          "description": "はじめに\nこの記事は以下の記事の続きである。\nhttps://zenn.dev/wsuzume/articles/5cda82c09ac52e\nこの記事では tensorflow.keras.layers.Layer や tensorflow.keras.Model を継承して新たなレイヤーやモデルを作成する方法を練習する。\n参考にしたドキュメントは以下。\nhttps://www.tensorflow.org/guide/keras/custom_layers_and_models?hl=ja\n\n 参考文献\n\n\nWhat are Symbolic and Imperative API...",
          "link": "https://zenn.dev/wsuzume/articles/3b09a42ecdf197",
          "publishedOn": "2023-04-06T14:51:36.000Z",
          "wordCount": 2339,
          "title": "TensofFlowの使い方練習４：サブクラス化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N1GzB3_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensofFlow%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2594%25EF%25BC%259A%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N1GzB3_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensofFlow%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2594%25EF%25BC%259A%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/articles/e8f2cc02bb4f63",
          "author": "S.A",
          "description": "本記事の目的\nPythonの自学自習でChatGPTを使っているのですが、プログラムによって何を実施したいのかさえ記載すれば、プログラムを簡単に実装可能であると実感しています。しかしながら、ミスなく要件を満たすコーディングをするためには。実際のコーディングを決定する質問文の設定が場合によっては難しかったり、回答コードにエラーが出てしまった際にどのような追記質問をすべきかを考える上で、ChatGPTに対する慣れやコーディングに対する素養もある程度必要になる場合もあります。したがって、コーディングという面において、初心者がChatGPTを利用すれば必ず時間削減になると現状は言えないと考え...",
          "link": "https://zenn.dev/shungo_a/articles/e8f2cc02bb4f63",
          "publishedOn": "2023-04-06T14:18:11.000Z",
          "wordCount": 3157,
          "title": "ChatGPTを用いたノーコードプログラム作成例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BnfafDvn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%258E%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E4%25BD%259C%25E6%2588%2590%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BnfafDvn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%258E%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E4%25BD%259C%25E6%2588%2590%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/ee80940cdf64b7",
          "author": "seiyakitazume",
          "description": "先日、製薬会社様主催のこちらのイベントに参加してきました。\nhttps://hemophilia-hackathon-2023.peatix.com/\n血友病の患者さんの助けになるような製品・サービスを考案するというハッカソンでした。\n血友病は遺伝性の疾患なので、彼氏・彼女ができたり、子供を作る際に悩む方がいます。\n医学的な疑問や解決方法はインターネット上に回答があるのですが、「正解がない生活にまつわるお悩み」についてはまとまった情報がありませんでした。\nそこで、このハッカソンにご登壇いただいている医師の知見を入れた、FAQを作成し、chatGPTのAPIを噛ませた「血友病お悩み相談ボッ...",
          "link": "https://zenn.dev/seiyakitazume/articles/ee80940cdf64b7",
          "publishedOn": "2023-04-06T13:51:35.000Z",
          "wordCount": 288,
          "title": "chatGPTで疾患のお悩み相談を受けてくれるボットを開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mG_zsA1s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25A7%25E7%2596%25BE%25E6%2582%25A3%25E3%2581%25AE%25E3%2581%258A%25E6%2582%25A9%25E3%2581%25BF%25E7%259B%25B8%25E8%25AB%2587%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WjNia3dadzVJczNMZW1IMzlWMHVOeGxlMF9rQmJObkRIbFVCWlo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mG_zsA1s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25A7%25E7%2596%25BE%25E6%2582%25A3%25E3%2581%25AE%25E3%2581%258A%25E6%2582%25A9%25E3%2581%25BF%25E7%259B%25B8%25E8%25AB%2587%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WjNia3dadzVJczNMZW1IMzlWMHVOeGxlMF9rQmJObkRIbFVCWlo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k14i/articles/d40621a2e541c3",
          "author": "k14i",
          "description": "LLM (大規模言語モデル) を使ったコード生成の文脈において、「怠惰」で「短気」で「傲慢」な職業プログラマがまず到達したいのは、テストコードの自動生成と、そのすべてのテストケースをパスする実装コードの生成だと思います。\n本記事ではテストコードの自動生成について、取り組みを紹介します。\n本取り組みでは、テストコードを生成するためのプロンプトの一部として、OpenAPI 仕様 と PlantUML を使用します。\n実装コードではなくまずテストコードの生成を試みる理由は、テスト駆動開発 のアプローチを取るためです。\nもちろん我々がテストコードを書いて、それをもとに実装コードを生成するというア...",
          "link": "https://zenn.dev/k14i/articles/d40621a2e541c3",
          "publishedOn": "2023-04-06T10:23:21.000Z",
          "wordCount": 6034,
          "title": "Azure OpenAI Service を使って OpenAPI と PlantUML からテストコードを生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4Fs7QcAc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520OpenAPI%2520%25E3%2581%25A8%2520PlantUML%2520%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4Fs7QcAc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520OpenAPI%2520%25E3%2581%25A8%2520PlantUML%2520%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k14i%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKUFA4aWZhNlY1dWc3Mk9SVXVxMzJLdDA3M1hvQ2JsbEJPQ3lPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rikuto1110/articles/in-place-error",
          "author": "otsuka1110",
          "description": "本記事で伝えたいこと\n\n\nPyTorchで RuntimeError: a view of a leaf Variable that requires grad is being used in an in-place operation. という Error が出たら、in-place operationが原因。\n\n\nin-place operation とは、x.add_() , x += 0.5 , x[mask] = 0.5 のような、\nテンソルの値を直接書き換える演算。\n\n\n上記のErrorは in-place operation を以下の方法で置き換えることで解決\n\n\nx...",
          "link": "https://zenn.dev/rikuto1110/articles/in-place-error",
          "publishedOn": "2023-04-06T09:54:28.000Z",
          "wordCount": 2186,
          "title": "PyTorch と in-place operation のエラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ah_B05Dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%2520%25E3%2581%25A8%2520in-place%2520operation%2520%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:otsuka1110%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5MjBkM2YxMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ah_B05Dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%2520%25E3%2581%25A8%2520in-place%2520operation%2520%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:otsuka1110%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5MjBkM2YxMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/osawa_koki/articles/0bb18a7deeea1e",
          "author": "osawa-koki",
          "description": "Dynamo DB - Python | Float vs Decimal\nDynamo DBでは数値型としてN(Number / Decimal)という型があります。\nしかしながら、JSONでの表現はFloatとなります。\nそれによってデータ型不整合エラーが発生することがあります。\nこれを回避するためには、Dynamo DB用のデータの保持にはDecimalを使用し、JSON出力する際にはFloatに変換する必要があります。\n\n Float - Decimal (JSON)\nimport json\nfrom decimal import Decimal\n\ndef decimal_d...",
          "link": "https://zenn.dev/osawa_koki/articles/0bb18a7deeea1e",
          "publishedOn": "2023-04-06T09:33:06.000Z",
          "wordCount": 289,
          "title": "Dynamo DB - Python | Float vs Decimal",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FmYS61JQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dynamo%2520DB%2520-%2520Python%2520%257C%2520Float%2520vs%2520Decimal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osawa-koki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlYxU0NYQ01femJIby1WczJPMmlZUEFEOUN5Mm80VEhTY2RxNHM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FmYS61JQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dynamo%2520DB%2520-%2520Python%2520%257C%2520Float%2520vs%2520Decimal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osawa-koki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlYxU0NYQ01femJIby1WczJPMmlZUEFEOUN5Mm80VEhTY2RxNHM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/makotyo/articles/031c5fb7180cc4",
          "author": "makotyo",
          "description": "DDLをHCLに変換したい！\n最初のモチベーションはSnowflakeで作成するリソース（テーブル、ビュー、ストアドプロシージャなど）をTerraformのHCL形式で宣言的に管理するために、既存のDDLをHCL形式に変換することでした。\n現在、このようなDDLをHCL形式に変換するツールは存在していません（こんなIssueもあります）。DDLを手動でHCL形式に変換するのは面倒です。\nまず考えられるアプローチとしてはDDLを解析してHCL形式のコードに変換することが考えられますがなかなか大変そうです。\nここで考えました。ChatGPTにお願いできないか。\n\n ChatGPTでDDL...",
          "link": "https://zenn.dev/makotyo/articles/031c5fb7180cc4",
          "publishedOn": "2023-04-06T09:04:58.000Z",
          "wordCount": 2131,
          "title": "ChatGPTでDDL to TFしよう！ ~Snowflake x Terraform x ChatGPT~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Y5318v6p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7DDL%2520to%2520TF%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2520%7ESnowflake%2520x%2520Terraform%2520x%2520ChatGPT%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makotyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXRRRHFEZ2xRd1VLMTRYb3AtWlNRQ0hWY3NWdkRucFUwUFNFU3pXSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Y5318v6p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7DDL%2520to%2520TF%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2520%7ESnowflake%2520x%2520Terraform%2520x%2520ChatGPT%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makotyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXRRRHFEZ2xRd1VLMTRYb3AtWlNRQ0hWY3NWdkRucFUwUFNFU3pXSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knot/articles/0da811b73893fd",
          "author": "knot",
          "description": "はじめに\n本記事では、FastAPI+Strawberryで単純なQueryとMutationを実装し呼び出すことを目標にします。\n\n GraphQLとは\nGraphQLとはAPI向けのクエリ言語のことです。\n主な特徴は以下の通りです。\n\nエンドポイントが1つだけ\n複数のリソースを取得できる\nスキーマによる型付けができる\nQuery、Mutation、Subscriptionがある\n\nきちんとした説明はこちらの記事を読むとよさそう。\n\n Strawberryの準備\n今回はPythonのFastAPI+Strawberryで実装します。\n必要なライブラリをインストールしておきます。\n$...",
          "link": "https://zenn.dev/knot/articles/0da811b73893fd",
          "publishedOn": "2023-04-06T07:42:02.000Z",
          "wordCount": 1579,
          "title": "FastAPIとStrawberryでGraphQL超入門(QueryとMutation)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--brKl1lfy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8Strawberry%25E3%2581%25A7GraphQL%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%2528Query%25E3%2581%25A8Mutation%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knot%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYTE3OWE2NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--brKl1lfy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8Strawberry%25E3%2581%25A7GraphQL%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%2528Query%25E3%2581%25A8Mutation%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knot%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYTE3OWE2NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f899fb9a6b1094",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-193 A - Discount\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print((a - b) / a * 100)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f899fb9a6b1094",
          "publishedOn": "2023-04-06T07:14:59.000Z",
          "wordCount": 244,
          "title": "［AtCoder］ABC-193｜A - Discount",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DhtMgpsd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-193%25EF%25BD%259CA%2520-%2520Discount%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DhtMgpsd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-193%25EF%25BD%259CA%2520-%2520Discount%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a79eea55fcab71",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-193 B - Play Snuke\n\n\n\n 提出結果\n# ABC-193 B - Play Snuke\n# https://atcoder.jp/contests/abc193/tasks/abc193_b\n#\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    l = getIntListRo...",
          "link": "https://zenn.dev/hyperdb/articles/a79eea55fcab71",
          "publishedOn": "2023-04-06T07:14:58.000Z",
          "wordCount": 417,
          "title": "［AtCoder］ABC-193｜B - Play Snuke",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tpnZvcXz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-193%25EF%25BD%259CB%2520-%2520Play%2520Snuke%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tpnZvcXz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-193%25EF%25BD%259CB%2520-%2520Play%2520Snuke%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/61acc45cfd6673",
          "author": "tkyk",
          "description": "文字列とは\n前回の「Python入門④～四則計算・算術演算子・round関数～」では数値を扱いました。\n今回は文字列を扱います。\n「String型」と呼ばれることもあります。\n\n 文字列をprint関数で出力する\n大事なルールは「'文字列'」もしくは「\"文字列\"」というように、\nシングルクォーテーションもしくはダブルクォーテーションで囲む必要があります。\nどちらでも大丈夫です。\nprint ( 'test' )\nとすると、「test」という文字列が表示されます。\n\n エスケープ\nこのような場合、エラーが起こります。\nprint ( 'I don't know' )\nどのように表示され...",
          "link": "https://zenn.dev/tkyk/articles/61acc45cfd6673",
          "publishedOn": "2023-04-06T04:10:42.000Z",
          "wordCount": 354,
          "title": "Python入門⑤～文字列～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R8_eWGYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A4%25EF%25BD%259E%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R8_eWGYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A4%25EF%25BD%259E%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/2caafcd83ee298",
          "author": "tkyk",
          "description": "Pythonでは、算術演算子、というものを使って計算させることができます。\n「算術」と付け加えているのは、それ以外にも色々な種類の演算子があるためです。\n\n 足し算\n「+」を使います。\nprint ( 1 + 2 )\nとすると「3」が表示されます。\n\n 引き算\n「-」を使います。\nprint ( 5 - 3 )\nとすると「2」が表示されます。\n\n 掛け算\n「*」を使います。\nprint ( 2 * 3 )\nとすると「6」が表示されます。\n\n 割り算\n「/」を使います。\nprint ( 6 / 2 )\nとすると「3.0」が表示されます。\n※割り算は小数点以下が発生することがあるので、デフォ...",
          "link": "https://zenn.dev/tkyk/articles/2caafcd83ee298",
          "publishedOn": "2023-04-06T03:01:06.000Z",
          "wordCount": 460,
          "title": "Python入門④～四則計算・算術演算子・round関数～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GSaf5fFb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A3%25EF%25BD%259E%25E5%259B%259B%25E5%2589%2587%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%25BB%25E7%25AE%2597%25E8%25A1%2593%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2583%25BBround%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GSaf5fFb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A3%25EF%25BD%259E%25E5%259B%259B%25E5%2589%2587%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%25BB%25E7%25AE%2597%25E8%25A1%2593%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2583%25BBround%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/9d33c143df589e",
          "author": "Shohei N.",
          "description": "はじめに\nAzure OpenAI Serviceが本家OpenAI社のAPIと異なる部分の一つに、Azure OpenAIでは、APIキーの認証に加えてAzure Active Directory (Azure AD)によるユーザー認証に対応していることが挙げられます。\nただ、多くのサンプルコードはAPIキーによる認証で書かれていたため、Azure AD認証でAzure OpenAIのAPIを叩く方法をメモします。\n\n 前提\nAPIキーベースでAzure OpenAI Serviceが利用できる程度の環境は整っていると想定しています。\n具体的には、Azure OpenAI Serv...",
          "link": "https://zenn.dev/microsoft/articles/9d33c143df589e",
          "publishedOn": "2023-04-05T14:58:17.000Z",
          "wordCount": 636,
          "title": "Azure OpenAI ServiceでAzure AD認証を使ってみる (Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mpwm8YZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%25E3%2581%25A7Azure%2520AD%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520N.%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzNmNkNzdkYWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mpwm8YZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%25E3%2581%25A7Azure%2520AD%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520N.%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzNmNkNzdkYWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/e56e05e95b79b1",
          "author": "tkyk",
          "description": "print関数\n「print」は文字を出力する関数です。\nprint ('test')\nとすると、「test」という文字が出力されます。\nprint (1)\nとすると、「1」という数値が出力されます。\n簡単ですね（笑）\nおそらく、pythonの実際の挙動を見てみるうえで最もよく使う関数だと思います。\n次回は四則計算を紹介したいと思います。",
          "link": "https://zenn.dev/tkyk/articles/e56e05e95b79b1",
          "publishedOn": "2023-04-05T12:56:17.000Z",
          "wordCount": 96,
          "title": "Python入門③～print関数～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hKlgnhX2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A2%25EF%25BD%259Eprint%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hKlgnhX2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A2%25EF%25BD%259Eprint%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ijiwarunahello/articles/be41bcbd9cc88e",
          "author": "ijiwarunahello",
          "description": "Summary\n\ncollada_to_stl.py\nimport bpy\nimport pathlib\n\n# colladaファイルが置いてあるディレクトリへのフルパス\ntarget_dir = r\"/path/to/collada_data_dir\"\n\n# colladaファイル（.dae）があるフォルダを設定\ncollada_dir = pathlib.Path(target_dir)\n# colladaファイルをすべて取得\ncollada_list = list(collada_dir.glob(\"*.dae\"))\n\n# すべてのオブジェクトを削除\nbpy.ops.objec...",
          "link": "https://zenn.dev/ijiwarunahello/articles/be41bcbd9cc88e",
          "publishedOn": "2023-04-05T10:00:00.000Z",
          "wordCount": 369,
          "title": "【Blender】ColladaファイルをSTLに一括変換",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I-Yfl54D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Blender%25E3%2580%2591Collada%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592STL%25E3%2581%25AB%25E4%25B8%2580%25E6%258B%25AC%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ijiwarunahello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0NGZhOWVhNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I-Yfl54D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Blender%25E3%2580%2591Collada%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592STL%25E3%2581%25AB%25E4%25B8%2580%25E6%258B%25AC%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ijiwarunahello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0NGZhOWVhNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kiwipop/articles/91c4e7c65f092c",
          "author": "kiwi",
          "description": "はじめに\nPythonでWebアプリケーションを作る場合のフレームワークとしては、DjangoやFlaskが候補にあがるかと思います。とはいえこれらのフレームワークには大きな問題があります。それは、信じられないくらい遅いという問題です。\nベンチマークを見てみると、DjangoやFlaskは遅すぎてもはや評価対象にすらならないといったところです。\nhttp://klen.github.io/py-frameworks-bench/\nそこで今回は、ベンチマーク上では最速であるBlackSheepを利用して爆速Webアプリケーションを作ってみることにしました。\nhttps://www.ne...",
          "link": "https://zenn.dev/kiwipop/articles/91c4e7c65f092c",
          "publishedOn": "2023-04-05T08:41:19.000Z",
          "wordCount": 1496,
          "title": "PythonとBlackSheepで爆速Webサービスを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DEelK4NX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8BlackSheep%25E3%2581%25A7%25E7%2588%2586%25E9%2580%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pvQzNwOWFHYTBFbzZEWWhYYUlKWEpMcEpCZHQ5Y0NiWmZYVEl0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DEelK4NX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8BlackSheep%25E3%2581%25A7%25E7%2588%2586%25E9%2580%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pvQzNwOWFHYTBFbzZEWWhYYUlKWEpMcEpCZHQ5Y0NiWmZYVEl0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/a5480b4ad90f1d",
          "author": "Darman",
          "description": "はじめに\nキューは、FIFO（First-In-First-Out）原則に基づいてデータを処理するデータ構造です。この記事では、Python で独自の Queue クラスを実装する方法を解説します。この Queue クラスでは、データの追加（エンキュー）と取り出し（デキュー）を行うメソッドが提供されます。\n\n Queue クラスの実装\nclass Queue:\n    def __init__(self, max_size):\n        self.max_size = max_size\n        self.queue = [0] * max_size\n        se...",
          "link": "https://zenn.dev/yutabeee/articles/a5480b4ad90f1d",
          "publishedOn": "2023-04-05T08:07:46.000Z",
          "wordCount": 754,
          "title": "Python で独自の Queue クラスを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j_eZ-GF8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%2520Queue%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j_eZ-GF8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%2520Queue%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2238ede7835dbf",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-192 A - Star\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    y = x % 100\n\n    print(100 if y == 0 else 100 - y)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2238ede7835dbf",
          "publishedOn": "2023-04-05T03:41:10.000Z",
          "wordCount": 250,
          "title": "［AtCoder］ABC-192｜A - Star",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--levs4gFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-192%25EF%25BD%259CA%2520-%2520Star%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--levs4gFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-192%25EF%25BD%259CA%2520-%2520Star%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0ee39b8c08e259",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-192 B - uNrEaDaBlE sTrInG\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    s0 = \"\".join([s[i] for i in range(len(s)) if (i + 1) % 2 == 0])\n    s1 = \"\".join([s[i] for i in range(len(s)) if (i + 1) % 2 != 0])\n\n    print('Yes' if s0 == s0.upper() and ...",
          "link": "https://zenn.dev/hyperdb/articles/0ee39b8c08e259",
          "publishedOn": "2023-04-05T03:41:10.000Z",
          "wordCount": 413,
          "title": "［AtCoder］ABC-192｜B - uNrEaDaBlE sTrInG",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YEo8ljde--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-192%25EF%25BD%259CB%2520-%2520uNrEaDaBlE%2520sTrInG%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YEo8ljde--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-192%25EF%25BD%259CB%2520-%2520uNrEaDaBlE%2520sTrInG%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/6f4256d83d8cd1",
          "author": "Darman",
          "description": "構造体は、さまざまなデータ型をまとめて扱うための便利な概念です。この記事では、構造体について完全に理解するための初心者向けのガイドを提供します。\n\n 構造体とは\n構造体は、異なるデータ型を1つのデータ型としてまとめる方法です。構造体を使用すると、関連するデータを1つの変数にまとめて格納し、簡単に管理できます。\nたとえば、従業員の情報（名前、年齢、給与）を管理する場合、構造体を使用してこれらの情報を1つのデータ型にまとめることができます。\n\n Pythonでの構造体の代替手段\nPythonには、C言語やC++のような構造体が直接的には存在しません。ただし、collections.named...",
          "link": "https://zenn.dev/yutabeee/articles/6f4256d83d8cd1",
          "publishedOn": "2023-04-05T02:58:24.000Z",
          "wordCount": 441,
          "title": "構造体入門 : （Pythonでの実装例含む）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S0eCWpyJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A7%258B%25E9%2580%25A0%25E4%25BD%2593%25E5%2585%25A5%25E9%2596%2580%2520%253A%2520%25EF%25BC%2588Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%25E5%2590%25AB%25E3%2582%2580%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S0eCWpyJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A7%258B%25E9%2580%25A0%25E4%25BD%2593%25E5%2585%25A5%25E9%2596%2580%2520%253A%2520%25EF%25BC%2588Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%25E5%2590%25AB%25E3%2582%2580%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/e2d0e149c26b45",
          "author": "Darman",
          "description": "はじめに：\nプログラミングの世界では、固定された値のセットを表現する必要がしばしばあります。例えば、週の曜日や月、方角などです。Pythonでは、これらの値を効率的に表現するために、「列挙型」（Enum）を使用します。本記事では、Pythonの列挙型の基本的な使い方を学びます。\n\n 目次：\n\n列挙型（Enum）とは？\nPythonで列挙型を定義する方法\n列挙型の値にアクセスする\n列挙型と制御構造\n列挙型の利用シーン\nまとめ\n\n\n 1. 列挙型（Enum）とは？\n列挙型（Enum）は、プログラムで一連の固定値を表現するための特殊なデータ型です。列挙型は、予め定義された値のセットを持ち、...",
          "link": "https://zenn.dev/yutabeee/articles/e2d0e149c26b45",
          "publishedOn": "2023-04-05T02:28:40.000Z",
          "wordCount": 404,
          "title": "Pythonで列挙型（Enum）を使いこなす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IeZwkJO4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%2588%2597%25E6%258C%2599%25E5%259E%258B%25EF%25BC%2588Enum%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IeZwkJO4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%2588%2597%25E6%258C%2599%25E5%259E%258B%25EF%25BC%2588Enum%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3512fe4001d8d3",
          "author": "Darman",
          "description": "この記事では、プログラミングにおける値渡しと参照渡しの概念について説明し、それぞれの使い分け方について解説します。\n\n 値渡しとは\n値渡しは、関数に引数のコピーを渡す方法です。これにより、関数内で引数の値を変更しても、呼び出し元の変数に影響を与えません。通常、プリミティブ型のデータ（整数、浮動小数点数、文字など）は値渡しで関数に渡されます。\n\n 値渡しの例\ndef increment_value(value):\n    value = value + 1\n\nx = 10\nincrement_value(x)\nprint(x)  # 出力: 10（変更されていない）\n\n 参照渡しとは\n参照...",
          "link": "https://zenn.dev/yutabeee/articles/3512fe4001d8d3",
          "publishedOn": "2023-04-05T01:46:37.000Z",
          "wordCount": 293,
          "title": "値渡しと参照渡しの理解と使い分け",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QCn7R2cq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QCn7R2cq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/0c4e9f508da48d",
          "author": "Darman",
          "description": "ハッシュアルゴリズムとは\nハッシュアルゴリズムとは、任意の長さのデータを入力として受け取り、一定の長さのハッシュ値（ハッシュコード）を生成するアルゴリズムのことです。ハッシュ関数は、データ構造のハッシュテーブルや、暗号学的ハッシュ関数として使用されます。\nハッシュアルゴリズムは、次の性質を持っていることが望ましいです。\n\n\n一貫性：同じ入力に対しては、常に同じハッシュ値を生成する。\n\n高速性：ハッシュ値の計算が高速に行われる。\n\n雪崩効果：入力データが少し変化しても、ハッシュ値が大きく変化する。\n\n以下では、ハッシュアルゴリズムの基本的な種類と、それぞれの特徴について説明します。\n\n...",
          "link": "https://zenn.dev/yutabeee/articles/0c4e9f508da48d",
          "publishedOn": "2023-04-04T12:16:05.000Z",
          "wordCount": 360,
          "title": "ハッシュアルゴリズムの基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cL820nql--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cL820nql--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/stucci/articles/195815871110c2",
          "author": "stucci",
          "description": "2023年4月4日現在、v2 APIでは画像付きツイートを投稿することができません。\n参考）\nPost Tweet/Media Upload in v2? - Twitter API / Twitter API v2 - Twitter Developers\nそのため、画像付きツイートを投稿するためには、以下のようにv1 APIとv2 APIを組み合わせる必要があります。\ntweepy.APIでv1 APIを使用し、tweepy.Clientでv2 APIを使用しているようです。\nimport tweepy\n\n# Twitter API credentials\nconsumer_key ...",
          "link": "https://zenn.dev/stucci/articles/195815871110c2",
          "publishedOn": "2023-04-04T10:15:34.000Z",
          "wordCount": 362,
          "title": "Twitter API（tweepy）を使用して、画像付きツイートを投稿する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vVkej4Uh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25EF%25BC%2588tweepy%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E7%2594%25BB%25E5%2583%258F%25E4%25BB%2598%25E3%2581%258D%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stucci%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKemZKR0hqYU5hZjJCMEd3NFZ4d1FOb0VuQmVibW1iNEc4aklMank9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vVkej4Uh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25EF%25BC%2588tweepy%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E7%2594%25BB%25E5%2583%258F%25E4%25BB%2598%25E3%2581%258D%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stucci%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKemZKR0hqYU5hZjJCMEd3NFZ4d1FOb0VuQmVibW1iNEc4aklMank9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tmori/articles/ebd628619e6442",
          "author": "tmori",
          "description": "https://atcoder.jp/contests/abc296\n\n A - Alternately\n文字列Sを1文字ずつ順番に取り出し、前の文字を一致していれば No を出力する。すべて取り出すことに成功したら Yes と出力する。注意点として前の文字を空文字などで初期化する必要がある。\nPythonn = int(input())\ns = list(input())\n\npre = \"\"\nfor i, s_str in enumerate(s):\n    if pre == s_str:\n        print(\"No\")\n        exit()\n    pre = s_...",
          "link": "https://zenn.dev/tmori/articles/ebd628619e6442",
          "publishedOn": "2023-04-04T06:04:04.000Z",
          "wordCount": 930,
          "title": "【ABC296】AtCoder Beginner Contest 296 A-D 振り返り【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--T76qa8bn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC296%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520296%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--T76qa8bn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC296%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520296%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e2ca832d8455fa",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-191 A - Vanishing Pitch\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    v, t, s, d = getIntMap()\n\n    a = d / v\n\n    print('No' if t <= a <= s else 'Yes')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e2ca832d8455fa",
          "publishedOn": "2023-04-04T04:52:59.000Z",
          "wordCount": 275,
          "title": "［AtCoder］ABC-191｜A - Vanishing Pitch",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fJXSxPS7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-191%25EF%25BD%259CA%2520-%2520Vanishing%2520Pitch%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fJXSxPS7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-191%25EF%25BD%259CA%2520-%2520Vanishing%2520Pitch%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9bfee70fc5b390",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-191 B - Remove It\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, x = getIntMap()\n    a = getIntList()\n\n    b = [str(i) for i in a if i != x]\n\n    print(\" \".join(b))\n\n\nif __name__ == \"...",
          "link": "https://zenn.dev/hyperdb/articles/9bfee70fc5b390",
          "publishedOn": "2023-04-04T04:52:58.000Z",
          "wordCount": 338,
          "title": "［AtCoder］ABC-191｜B - Remove It",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_Q__eIgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-191%25EF%25BD%259CB%2520-%2520Remove%2520It%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_Q__eIgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-191%25EF%25BD%259CB%2520-%2520Remove%2520It%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/junkor/articles/3df5f7ac9751c7",
          "author": "7e+8",
          "description": "※Jupyter Notebook形式で実行し、Markdown形式でエクスポートしたものを一部改変して作っているので若干見づらいです。\n\n 概要\npandasなどは小規模~中規模くらいのデータセットの処理や分析には有効だが、\nメモリに乗り切らないレベルのデータ量は処理できない。\nまた、GILによって基本的に1スレッドでの動作になるため、マシンスペックを最大限活かし切るのは難しい。\n遅延評価、並列分散処理によって所謂ビッグデータといわれるレベルのテーブルデータの処理・分析に使うことができ、\n更にpandasとの連携・併用ができるツールとしてpysparkが存在するため紹介する。\nなお、詳...",
          "link": "https://zenn.dev/junkor/articles/3df5f7ac9751c7",
          "publishedOn": "2023-04-03T16:37:36.000Z",
          "wordCount": 2600,
          "title": "pyspark入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0F5bQTAy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pyspark%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0F5bQTAy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pyspark%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/junkratmecha/articles/516e884a3116b6",
          "author": "Junk",
          "description": "やりたいこと\n\n精度強めのモデルである程度の量でFTしたら、自動ラベリングできないか。\nBboxのアノテーションは修正も楽だから、一度ラベル済のをツールでパラパラめくって、間違っているものを手動ラベリングすることで効率上がらないか。\nDetecton2を触ってみたい、あ~ツールキットね~って言えるようになりたい!\n※Twitterやコメントなどで諸々は優しくアドバイスやご指摘などください。\n\n\n Detectron2って\nDetectron2はFacebook AIのオープンソースPJで、PyTorchの物体検出ツールキットです。\n検出できる内容はざっくり以下。\n\n物体検知 Boun...",
          "link": "https://zenn.dev/junkratmecha/articles/516e884a3116b6",
          "publishedOn": "2023-04-03T16:19:39.000Z",
          "wordCount": 4159,
          "title": "Bounding Boxの自動ラベリングの試み(Detectron2)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W85iemfm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bounding%2520Box%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25A9%25E3%2583%2599%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E8%25A9%25A6%25E3%2581%25BF%2528Detectron2%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxOWNjODdlZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W85iemfm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bounding%2520Box%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25A9%25E3%2583%2599%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E8%25A9%25A6%25E3%2581%25BF%2528Detectron2%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxOWNjODdlZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/1e6d8fbab66ca9",
          "author": "sergicalsix",
          "description": "はじめに\n本記事ではメンバーの定義におけるpropertyの説明をします。\n基本的に趣味や学部の研究レベルでは、通常のメンバーの定義で事足ります。\n通常のメンバー定義やその意義については以下の記事で解説しています。\nhttps://zenn.dev/sergicalsix/articles/2c7832353b6afa\npropertyはプログラムの堅牢化やバリデーションで用いられる他、世の中のプログラムで広く使われているため、理解は必須です。\n\n propertyとは\nクラスのメンバーで変数のように参照することのできる関数のことをプロパティといいます。\nもっともわかりやすい使用例は...",
          "link": "https://zenn.dev/sergicalsix/articles/1e6d8fbab66ca9",
          "publishedOn": "2023-04-03T12:07:08.000Z",
          "wordCount": 465,
          "title": "Pythonでclassを使う: 設計編(3) propertyでメンバーの定義",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HIBqSJE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%2520%25E8%25A8%25AD%25E8%25A8%2588%25E7%25B7%25A8%25283%2529%2520property%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HIBqSJE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%2520%25E8%25A8%25AD%25E8%25A8%2588%25E7%25B7%25A8%25283%2529%2520property%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/karamawanu/articles/d1df0d95136b42",
          "author": "karamawanu",
          "description": "俗にフルスタックフレームワークと呼ばれるミドルウェアでは設定をハードコーディングする場合が多い。config.py とか config.php がそれである。\nしかしあらゆる案件に限らず文字列定数はソースコードの内外に定義できた方が何かと便利である。\n最近はオワコンとされてる12条項アプリケーションでも同様の主張がある。\nhttps://12factor.net/ja/config\n12条項アプリケーションでは、環境変数を使うことを主張してるが、それに加えて小生はINIファイルを推したい。\nもともと手書きでの運用を意識しており、セクション／key/valueにより大項目小項目の機能もある...",
          "link": "https://zenn.dev/karamawanu/articles/d1df0d95136b42",
          "publishedOn": "2023-04-03T08:19:37.000Z",
          "wordCount": 195,
          "title": "dataclasses.dataclassの応用例、環境設定を受け取る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SDkUfIoZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dataclasses.dataclass%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E4%25BE%258B%25E3%2580%2581%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SDkUfIoZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dataclasses.dataclass%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E4%25BE%258B%25E3%2580%2581%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/460683ee113535",
          "author": "Darman",
          "description": "モジュラス演算を学習したので、負の数のモジュラス演算を使ってじゃんけんのプログラムを作成しました。\nhttps://zenn.dev/yutabeee/articles/7c69c655166532\n\n コード全体\n以下に、負の数のモジュラス演算を用いたPythonでのジャンケンプログラムのサンプルコードを示します。\nimport random\n\ndef main():\n    hands = {0: 'グー', 1: 'チョキ', 2: 'パー'}\n    print('ジャンケンを開始します。手を選んでください。')\n    print('0: グー, 1: チョキ, 2: パー')...",
          "link": "https://zenn.dev/yutabeee/articles/460683ee113535",
          "publishedOn": "2023-04-03T05:10:30.000Z",
          "wordCount": 546,
          "title": "Pythonで負の数のモジュラス演算を用いてジャンケンを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lU46jfBI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E8%25B2%25A0%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2582%25B9%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lU46jfBI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E8%25B2%25A0%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2582%25B9%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e573a98948a996",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-190 A - Very Very Primitive Game\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    d = b - a\n    print('Aoki' if d > 0 else 'Takahashi' if d < 0 else 'Aoki' if c == 0 else 'Takahashi')\n\n\nif __name__ == \"__main__\":\n    m...",
          "link": "https://zenn.dev/hyperdb/articles/e573a98948a996",
          "publishedOn": "2023-04-03T03:33:47.000Z",
          "wordCount": 321,
          "title": "［AtCoder］ABC-190｜A - Very Very Primitive Game",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SnVjNFxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CA%2520-%2520Very%2520Very%2520Primitive%2520Game%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SnVjNFxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CA%2520-%2520Very%2520Very%2520Primitive%2520Game%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ae1705b5d701ef",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-190 B - Magic 3\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, s, d = getIntMap()\n    l = getIntListRow(n)\n\n    a = False\n    for x, y in l:\n        if x < ...",
          "link": "https://zenn.dev/hyperdb/articles/ae1705b5d701ef",
          "publishedOn": "2023-04-03T03:33:47.000Z",
          "wordCount": 396,
          "title": "［AtCoder］ABC-190｜B - Magic 3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s93zjZlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CB%2520-%2520Magic%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s93zjZlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CB%2520-%2520Magic%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/decfb4f686b55c",
          "author": "Darman",
          "description": "単一プロジェクトの場合\nPythonプロジェクトの理想的なディレクトリ構成はプロジェクトの規模や目的によって異なりますが、一般的な構成を以下に示します。\nproject_name/\n│\n├── project_name/\n│   ├── __init__.py\n│   ├── main.py\n│   ├── module1.py\n│   ├── module2.py\n│   └── ...\n│\n├── tests/\n│   ├── __init__.py\n│   ├── test_module1.py\n│   ├── test_module2.py\n│   └── ...\n│\n├──...",
          "link": "https://zenn.dev/yutabeee/articles/decfb4f686b55c",
          "publishedOn": "2023-04-03T02:31:40.000Z",
          "wordCount": 1677,
          "title": "Pythonプロジェクトのディレクトリ構成 : Part2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y0tg10p6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2520%253A%2520Part2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y0tg10p6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2520%253A%2520Part2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/ba3978ab28aa65",
          "author": "nakamura196",
          "description": "概要\nRDFデータの作成にあたり、Excelで作成したデータから、RDFデータに変換するPythonライブラリを試作しました。まだまだ中途半端な状態ですが、備忘録です。\n\n ノートブック\n以下のノートブックから試用いただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/ExcelからRDFデータを作成する.ipynb\n\n 変換元のExcelデータ\n以下のようなExcelファイルを作成します。\nhttps://docs.google.com/spreadsheets/d/16SufG6...",
          "link": "https://zenn.dev/nakamura196/articles/ba3978ab28aa65",
          "publishedOn": "2023-04-03T00:56:45.000Z",
          "wordCount": 130,
          "title": "ExcelからRDFを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IDO_0o1J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2581%258B%25E3%2582%2589RDF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IDO_0o1J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2581%258B%25E3%2582%2589RDF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/5cda82c09ac52e",
          "author": "Josh Nobus",
          "description": "はじめに\nこの記事は以下の記事の続きです。\nhttps://zenn.dev/wsuzume/articles/cb1511666e2f99\n今回はオプティマイザをカスタマイズします。大抵は Adam とか既に実装されてるやつを使っておけばいいのですが Riemann 多様体上の最適化、有名どころだと双曲埋め込みとかに使いたい場合はオプティマイザをカスタムする必要があります。そんな必要や欲求に駆られる変態は地球上にそんなにいないと思いますが。\n今回作成したノートブックはこちら。\n\n オプティマイザのカスタマイズ方法\n公式ドキュメントの『Creating a custom optimi...",
          "link": "https://zenn.dev/wsuzume/articles/5cda82c09ac52e",
          "publishedOn": "2023-04-02T14:26:47.000Z",
          "wordCount": 3501,
          "title": "TensorFlow の使い方練習３：オプティマイザのカスタマイズ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l5mS-w0k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2593%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2597%25E3%2583%2586%25E3%2582%25A3%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l5mS-w0k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2593%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2597%25E3%2583%2586%25E3%2582%25A3%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/3b942449de9911",
          "author": "tkyk",
          "description": "例文\nまず簡単なコードを記載してみます。\na = 'test'\nprint (a)\nこれを実行すると、「test」という文字が出力されます。\n1行目の意味は、「aという箱にtestという文字を格納してね」ということです。\n2行目の意味は、「aに格納されている内容（＝test）を表示してね」ということです。\nプログラミングをする際に、長々とコードを書くのではなく、なるべく省略して行いたいので、こういった処理をします。\nExcelをイメージしてみてください。\nどこかのセルで「=B1」という記載をすると、B1に入力された内容が挿入されますよね？\nこれと同じイメージです。\n\n 変数とは\n上記...",
          "link": "https://zenn.dev/tkyk/articles/3b942449de9911",
          "publishedOn": "2023-04-02T14:26:34.000Z",
          "wordCount": 140,
          "title": "Python入門②～変数・代入～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--33HvxpPI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A1%25EF%25BD%259E%25E5%25A4%2589%25E6%2595%25B0%25E3%2583%25BB%25E4%25BB%25A3%25E5%2585%25A5%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--33HvxpPI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A1%25EF%25BD%259E%25E5%25A4%2589%25E6%2595%25B0%25E3%2583%25BB%25E4%25BB%25A3%25E5%2585%25A5%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/9cf4d0c6668c79",
          "author": "tkyk",
          "description": "ここではPythonを自身のPCでプログラミングしていく際に必要な環境構築について紹介します。\n\n Pythonのインストール\nこちらからダウンロードできます。\nhttps://www.python.org/downloads/\n\n\n Anacondaについて\n「Anaconda」というものをダウンロードして環境構築する方法もあります。\n通常のPythonに加えて、ライブラリというオプションもあらかじめ一緒にインストールできます。\nこちらで環境構築を進めてもらっても良いかと思います。\n\n IDE（統合開発環境）について\n様々な言語のプログラミングを同一環境で行えるツールです。\nPytho...",
          "link": "https://zenn.dev/tkyk/articles/9cf4d0c6668c79",
          "publishedOn": "2023-04-02T14:26:10.000Z",
          "wordCount": 121,
          "title": "Python入門①～環境構築～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2gy5xeSF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A0%25EF%25BD%259E%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2gy5xeSF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A0%25EF%25BD%259E%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojomoeko/articles/python-project-with-mkdocs",
          "author": "okojomoeko",
          "description": "お仕事でpythonを使うことがあって、その開発環境をどうやって整備しようかと思っていたところでした。\nよくある構成のpyenv+poetryのpython開発環境を作るとともに、ドキュメントもちゃんとやりたいなということで、ユーザー向けのAPIドキュメントに加えて、Pythonコードの設計とかを記述できるように開発者向けドキュメントとしてmkdocsを併用したpythonプロジェクトの環境を作ってみました。\nこの記事では作るまでの流れを自分のための備忘録的な感じで残しておこうと思います。\n\n 今回試した環境\n\nUbuntu 22.04.2 LTS (MacBook Air M1のLim...",
          "link": "https://zenn.dev/okojomoeko/articles/python-project-with-mkdocs",
          "publishedOn": "2023-04-02T14:23:30.000Z",
          "wordCount": 1331,
          "title": "Poetryとmkdocsとsphinxを使ってPythonのプロジェクトを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RQeyoaN3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2581%25A8mkdocs%25E3%2581%25A8sphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RQeyoaN3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2581%25A8mkdocs%25E3%2581%25A8sphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/ef2c0f8b567355",
          "author": "tkyk",
          "description": "はじめまして。\nプログラミングのことを色々調べていたらZennに出会いました。\n今後はここに学んだことをアウトプットしていきたいと思っています。\n\n 今まで\n大学時代の専攻は英米文学という、スーパー文系でした。\n更に大学時代、サークルの人間関係の悪化がきっかけで、引きこもり生活を何年か続けていました。\n結局6年半かけて大学を卒業しました。\n社会人になってからは主に営業・企画畑で仕事をしてきました。\n現在はSaaS企業で営業企画の部署にいます。\n30歳で結婚し、現在35歳で、妻と娘（2歳）の3人暮らしです。\n子供が生まれる前は、土日・深夜早朝問わず働けていましたが、子供が生まれてからは、1...",
          "link": "https://zenn.dev/tkyk/articles/ef2c0f8b567355",
          "publishedOn": "2023-04-02T14:14:58.000Z",
          "wordCount": 87,
          "title": "35歳でプログラミング入門する男の自己紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aonbLsJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:35%25E6%25AD%25B3%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%25E7%2594%25B7%25E3%2581%25AE%25E8%2587%25AA%25E5%25B7%25B1%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aonbLsJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:35%25E6%25AD%25B3%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%25E7%2594%25B7%25E3%2581%25AE%25E8%2587%25AA%25E5%25B7%25B1%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lot36z/articles/6ac1a0f7cebf3c",
          "author": "のっかー",
          "description": "Pythonでdebounceを実現するサンプルコードです。\nこのサンプルコードでは、最後のユーザ入力から2秒間入力がない場合に最後の入力をメッセージとして出力する仕組みになっています。\nPython 3.10.10 で動作確認済みです。\nサンプルコードについて補足説明しますと、\nnonlocalを使用することで、\n関数の外側の変数（例. timer, callback, waittime）にアクセスしています。\nまた、debouncerは「引数として与えた関数callbackをwaittime秒だけdebounceした関数を返す」関数で、\n以下サイトのJavaScriptの実装をほぼそ...",
          "link": "https://zenn.dev/lot36z/articles/6ac1a0f7cebf3c",
          "publishedOn": "2023-04-02T12:36:52.000Z",
          "wordCount": 636,
          "title": "Pythonでdebounce",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zyLL5uDn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Python%25E3%2581%25A7debounce%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zyLL5uDn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Python%25E3%2581%25A7debounce%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/c51a759af9b5ca",
          "author": "ShunDev",
          "description": "概要\nモンテカルロ積分の証明を忘れていたことに気づいたので証明を行う. モンテカルロ積分とは乱数を用いた積分手法である.\n\n 定義・性質\n以下の積分を確率変数を用いて行うことを考える\n\n関数: g(x).\n積分: \\theta = \\int_0^1 g(x) dx.\n確率変数: X : X \\backsim U(0,1).\n\nこのとき, \\theta について以下が成り立つ.\n\n\\mathbb{E}[g(X)] = \\int_0^1 g(x) \\cdot \\frac{1}{1-0} dx = \\theta.\n\n\nすなわち, \\mathbb{E}[g(X)] を推定すればよい. ここで...",
          "link": "https://zenn.dev/shundeveloper/articles/c51a759af9b5ca",
          "publishedOn": "2023-04-02T11:28:53.000Z",
          "wordCount": 1722,
          "title": "[統計学]モンテカルロ積分の証明と実践",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--t8DkrmQL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E7%25A9%258D%25E5%2588%2586%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--t8DkrmQL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E7%25A9%258D%25E5%2588%2586%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/3ca01bea711e67",
          "author": "Tanny",
          "description": "はじめに\nPythonのforループって、なんだか難しくないですか？？🤔\nナゾのrange()関数が登場したり、リストを与えたらそのまま値を取得できたりと、はじめて出会う考え方も多いですよね。自分も初心者の頃は、これらの挙動を理解するのに苦労しました。実はこれまでも、なんとなくの理解だったりします。\nそこで今回は、Pythonの繰り返し処理の仕組みをStep-by-stepで読み解くことで、forループで何が行われているかをしっかりと把握することを目指します。「forループは書けるけど、その仕組みはよくわかっていない」という方にオススメです。\n!\n軽い気持ちで調べ始めたところ、for...",
          "link": "https://zenn.dev/tanny/articles/3ca01bea711e67",
          "publishedOn": "2023-04-02T11:18:14.000Z",
          "wordCount": 1561,
          "title": "いまさら聞けない！Pythonのforループの仕組みをStep-by-stepで理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yq1PcGOj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E8%2581%259E%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581Python%25E3%2581%25AEfor%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592Step-by-step%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yq1PcGOj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E8%2581%259E%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581Python%25E3%2581%25AEfor%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592Step-by-step%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ovrsa/articles/6e66c50f3b3429",
          "author": "ovrsa",
          "description": "この記事では、MacでReact (Next.js) と Python (Flask) を使ってウェブアプリケーションを開発する方法を紹介します。また、データベースとしてSQLiteを利用し、データの永続化も行います。\n\n 必要なソフトウェアのインストール\nまずはじめに、以下のソフトウェアをインストールしておきます。\n\nNode.js (Next.js開発のため)\nPython (Flask開発のため)\n\nNode.jsのインストールは、公式サイトからMac用のインストーラをダウンロードしてインストールしてください。\nhttps://nodejs.org/en/download/pack...",
          "link": "https://zenn.dev/ovrsa/articles/6e66c50f3b3429",
          "publishedOn": "2023-04-02T09:28:47.000Z",
          "wordCount": 909,
          "title": "React (Next.js) と Python (Flask) を使ったアプリケーションの作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8qql7buA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%2528Next.js%2529%2520%25E3%2581%25A8%2520Python%2520%2528Flask%2529%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8qql7buA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%2528Next.js%2529%2520%25E3%2581%25A8%2520Python%2520%2528Flask%2529%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/001e4c9b3630bc",
          "author": "Darman",
          "description": "int_to_binary関数\ndef int_to_binary(num):\n    binary = []\n    while num:\n        binary.insert(0, num % 2)\n        num //= 2\n    return binary\n\n エントリーポイント\ndef main():\n    input_number = int(input(\"整数を入力してください: \"))\n    binary_representation = int_to_binary(input_number)\n    print(f\"2進数表現: {binary_...",
          "link": "https://zenn.dev/yutabeee/articles/001e4c9b3630bc",
          "publishedOn": "2023-04-02T04:13:19.000Z",
          "wordCount": 301,
          "title": "[Python] 整数を2進数に変換する関数",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dLlqmSvq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E6%2595%25B4%25E6%2595%25B0%25E3%2582%25922%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dLlqmSvq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E6%2595%25B4%25E6%2595%25B0%25E3%2582%25922%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ca5518d416d17f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 A - Slot\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('Won' if len(set(list(s))) == 1 else 'Lost')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ca5518d416d17f",
          "publishedOn": "2023-04-02T02:37:48.000Z",
          "wordCount": 240,
          "title": "［AtCoder］ABC-189｜A - Slot",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FWDXHnc2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CA%2520-%2520Slot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FWDXHnc2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CA%2520-%2520Slot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/52e39584b75ce8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-189 B - Alcoholic\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, x = getIntMap()\n    l = getIntListRow(n)\n\n    a = [v * p for v, p in l]\n\n    s = 0\n    c = 0\n ...",
          "link": "https://zenn.dev/hyperdb/articles/52e39584b75ce8",
          "publishedOn": "2023-04-02T02:37:47.000Z",
          "wordCount": 435,
          "title": "［AtCoder］ABC-189｜B - Alcoholic",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DbIUwjyx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CB%2520-%2520Alcoholic%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DbIUwjyx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CB%2520-%2520Alcoholic%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/38d61de05c1731",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 A - Three-Point Shot\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x, y = getIntMap()\n\n    print('Yes' if abs(x - y) < 3 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/38d61de05c1731",
          "publishedOn": "2023-04-02T02:37:46.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-188｜A - Three-Point Shot",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b4Mwfg5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CA%2520-%2520Three-Point%2520Shot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b4Mwfg5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CA%2520-%2520Three-Point%2520Shot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0276fe7b46d9e3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 B - Orthogonality\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    b = getIntList()\n\n    c = []\n    for i in range(n):\n        c.append(a[i] * b[i])\n\n    print('Y...",
          "link": "https://zenn.dev/hyperdb/articles/0276fe7b46d9e3",
          "publishedOn": "2023-04-02T02:37:45.000Z",
          "wordCount": 361,
          "title": "［AtCoder］ABC-188｜B - Orthogonality",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jQHtZQri--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CB%2520-%2520Orthogonality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jQHtZQri--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CB%2520-%2520Orthogonality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hiro345/articles/044240a308b9cd",
          "author": "Hiroshi Koyama",
          "description": "Heroku でアカウントを登録したところ、多要素認証の設定が必要でした。セキュリティ強化の一旦として、Heroku のように多要素認証の設定を強制するサービスが増えてきています。少し調べてみました。\n\n OTP\n多要素認証のひとつにワンタイムパスワードの利用があり、よく使われています。ワンタイムパスワード（OTP）とは の説明\nOTP には、TOTP(Time-based One-time Password)や HOTP(HMAC-based One-time Password) の方式があります。HOTPの「H」は、Hash-based Message Authentication ...",
          "link": "https://zenn.dev/hiro345/articles/044240a308b9cd",
          "publishedOn": "2023-04-01T15:41:12.000Z",
          "wordCount": 958,
          "title": "多要素認証のワンタイムパスワードを利用する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZRhNjx2L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%259A%25E8%25A6%2581%25E7%25B4%25A0%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZRhNjx2L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%259A%25E8%25A6%2581%25E7%25B4%25A0%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hg/articles/4cf2dbc432621e",
          "author": "hi_go",
          "description": "はじめに\n今年のエイプリルフールに、Twitterで「自分は実はAIでした」というネタをやりました。\nそして、その一環として過去の自分のツイートからマルコフ連鎖を使用してツイートを生成してみました[1]。\nせっかくなのでそのやり方を簡単にメモしておきます。\n\n 基本方針\nhttps://qiita.com/hitsumabushi845/items/647f8bbe8d399f76825c\n基本的にこちらの記事を踏襲する形で作業していきます。\nただし、現在はTwitterからダウンロードできる自分の全ツイートはtweets.csvではなくtweets.jsに入っているため、主にその仕...",
          "link": "https://zenn.dev/hg/articles/4cf2dbc432621e",
          "publishedOn": "2023-04-01T15:00:00.000Z",
          "wordCount": 1502,
          "title": "Pythonでマルコフ連鎖を使って自分のツイートから新たな文章を生成する（2023年3月版）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mELVjdhn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E9%2580%25A3%25E9%258E%2596%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25EF%25BC%25882023%25E5%25B9%25B43%25E6%259C%2588%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hi_go%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwMWZkMGIyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mELVjdhn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E9%2580%25A3%25E9%258E%2596%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25EF%25BC%25882023%25E5%25B9%25B43%25E6%259C%2588%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hi_go%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwMWZkMGIyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimakaze_soft/articles/8a9fac7296bd4d",
          "author": "shimakaze_soft",
          "description": "Pythonを用いてのGoFの定義した23個のデザインパターンの一つであるObserverパターンの実装方法について解説します。\nObserverパターンは、「振る舞い関するデザインパターン」に分類されます。\n\n Observerパターンとは？\nobserverパターンには主に大きく分けて二つの役割が存在します。\n観察対象(Subject)の何らかの状態が変化した際に、Observer(観察者)に通知を行います。\n通知を受けたObserver(観察者)は状態変化に応じた処理を行います。\nそのためPublish/subscribeモデルとも言えます。\n簡単に言えば、「データの更新を複数のオ...",
          "link": "https://zenn.dev/shimakaze_soft/articles/8a9fac7296bd4d",
          "publishedOn": "2023-04-01T11:54:00.000Z",
          "wordCount": 1237,
          "title": "Pythonでデザインパターンを学ぼう (Observer)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FofZN8a0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Observer%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FofZN8a0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Observer%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/23a7081d784fa2",
          "author": "Darman",
          "description": "木構造の表現方法\n木構造を２次元配列で表現しています。\nNodes[Node[Left, Right, Data]]\n\nLeft , Right : 連結するNodeのインデックス\nData : Nodeに含まれるデータ\n\nnode_data = [\n    [1,    2,    10],\n    [3,    4,     5],\n    [5,    None, 12],\n    [None, None,  2],\n    [6,    7,     8],\n    [None, None, 11],\n    [None, None,  6],\n    [None, None...",
          "link": "https://zenn.dev/yutabeee/articles/23a7081d784fa2",
          "publishedOn": "2023-04-01T09:42:22.000Z",
          "wordCount": 890,
          "title": "２分木探索（通りがけ順）をPythonで表現してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fsPeiN6v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2592%25E5%2588%2586%25E6%259C%25A8%25E6%258E%25A2%25E7%25B4%25A2%25EF%25BC%2588%25E9%2580%259A%25E3%2582%258A%25E3%2581%258C%25E3%2581%2591%25E9%25A0%2586%25EF%25BC%2589%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fsPeiN6v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2592%25E5%2588%2586%25E6%259C%25A8%25E6%258E%25A2%25E7%25B4%25A2%25EF%25BC%2588%25E9%2580%259A%25E3%2582%258A%25E3%2581%258C%25E3%2581%2591%25E9%25A0%2586%25EF%25BC%2589%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/da0f8cfb5ee960",
          "author": "sergicalsix",
          "description": "多重継承とダイヤモンド継承\n多重継承とは、クラスが複数のクラスを継承することです。\n多重継承の一つの例であるダイヤモンド継承とは、多重継承の一種であり、クラスAを継承したクラスB、クラスAを継承したクラスCが存在しているときに、クラスBとクラスCを継承することです。\nダイヤモンド継承は図にすると以下です。\n\n 多重継承の例\nもっとも簡単な多重継承の書き方は以下です。\nclass A:\n    def __init__(self):\n        pass\nclass B:\n    def __init__(self):\n        pass\nclass C(A,B):\n    ...",
          "link": "https://zenn.dev/sergicalsix/articles/da0f8cfb5ee960",
          "publishedOn": "2023-04-01T04:10:40.000Z",
          "wordCount": 895,
          "title": "Pythonでclassを使う:番外編(1) 多重継承&ダイヤモンド継承",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Qg3XjAgg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25281%2529%2520%25E5%25A4%259A%25E9%2587%258D%25E7%25B6%2599%25E6%2589%25BF%2526%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2589%25E7%25B6%2599%25E6%2589%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Qg3XjAgg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25281%2529%2520%25E5%25A4%259A%25E9%2587%258D%25E7%25B6%2599%25E6%2589%25BF%2526%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2589%25E7%25B6%2599%25E6%2589%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/80248e2caf2d63",
          "author": "tirimen",
          "description": "本記事の目的\n例に漏れず、言語化して浅い理解を深くしていく。今回はベイズ推定。ベイズ統計学という言葉もあるように、統計の中でもメジャーだと思われる。このベイズ推定を、いつも通り理論→実践で理解する。理論についてはこちらの書籍を参考にさせていただいた。（amazonに飛ぶのでご注意ください）\nhttps://www.amazon.co.jp/道具としてのベイズ統計-涌井-良幸/dp/4534046472\n\n ベイズ理論とは\nベイズ推定の話に移る前に、その根底にあるベイズ理論について簡単に説明する。これは入力したデータを加味し、次のデータを予測する理論である。身近な一例を挙げる。ある試験...",
          "link": "https://zenn.dev/tirimen/articles/80248e2caf2d63",
          "publishedOn": "2023-04-01T01:00:00.000Z",
          "wordCount": 2672,
          "title": "MCMC法のギブスサンプリングをstreamlitで見える化しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pFqRjrLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2582%25AE%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592streamlit%25E3%2581%25A7%25E8%25A6%258B%25E3%2581%2588%25E3%2582%258B%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pFqRjrLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2582%25AE%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592streamlit%25E3%2581%25A7%25E8%25A6%258B%25E3%2581%2588%25E3%2582%258B%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/houser/articles/ff3aeb9ed34a36",
          "author": "Houser",
          "description": "もくじ\n\n\n\n\nもくじ\n\n\n\n\n\n1\n心得/マインド系\n\n\n\n2\n参考レファレンス\n\n\n\n3\n基本コマンド/メソッド系\n\n\n\n4\n初期設定/ライブラリ系\n\n\n\n5\n設計/アーキテクチャ系\n\n\n\n6\nディレクトリ構成/命名規則\n\n\n\n7\nデバック系\n\n\n\n8\nログ出力系\n\n\n\n9\nマイグレーション系\n\n\n\n10\nテスト系\n\n\n\n11\nDocker系\n\n\n\n12\nキャッシュ系\n\n\n\n13\nバリデーション系\n\n\n\n14\nミドルウェア系\n\n\n\n15\nよくある/遭遇したエラー系\n\n\n\n16\n日付処理\n\n\n\n17\nレスポンス系\n\n\n\n\n\n 心得マインド系\nThe Zen of Python\nht...",
          "link": "https://zenn.dev/houser/articles/ff3aeb9ed34a36",
          "publishedOn": "2023-03-31T13:46:41.000Z",
          "wordCount": 1165,
          "title": "python開発のための参考リスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eDgGPl3L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%258F%2582%25E8%2580%2583%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Houser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4OWMwMzE5MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eDgGPl3L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%258F%2582%25E8%2580%2583%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Houser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4OWMwMzE5MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}