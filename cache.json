{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/ogawa3427/articles/785b83f3c56a8a",
          "author": "小川/Ogawa3427",
          "description": "Seleniumを始めたのですが、複数環境で使うので環境構築メモを残します。\n\n 「豪勢」とは何か\nWSLのUbuntuにはPythonが付属していますが、バージョンの上げ方などが複雑で大変そうだったので今後の拡張性も考えてpyenvとvenvを入れて力技で解決してしまおう！ということです。\n\n 環境\nWSL2 1.2.5.0\nUbuntu-20.04(インストール直後)\nPython3.11.6\n\n まずPython本体を3.11.6にする\nいつもの\n\nbash\nsudo apt update  \nsudo apt -y upgrade  \n\npyenvをcloneしてきて隠しフォルダ...",
          "link": "https://zenn.dev/ogawa3427/articles/785b83f3c56a8a",
          "publishedOn": "2023-10-26T16:59:11.000Z",
          "wordCount": 374,
          "title": "WSL上のUbuntuでPythonとSelenium(Chrome)を豪勢に環境構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SPv62iLx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E4%25B8%258A%25E3%2581%25AEUbuntu%25E3%2581%25A7Python%25E3%2581%25A8Selenium%2528Chrome%2529%25E3%2582%2592%25E8%25B1%25AA%25E5%258B%25A2%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%25B7%259D%252FOgawa3427%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiNjM3MTBjN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SPv62iLx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E4%25B8%258A%25E3%2581%25AEUbuntu%25E3%2581%25A7Python%25E3%2581%25A8Selenium%2528Chrome%2529%25E3%2582%2592%25E8%25B1%25AA%25E5%258B%25A2%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%25B7%259D%252FOgawa3427%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiNjM3MTBjN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6d5e5b969842d7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-312 C - Invisible Hand\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef check(a, b, p):\n    sellers = len([x for x in a if x <= p])\n    buyers = len([x for x in b if x >= p])\n    return sellers ...",
          "link": "https://zenn.dev/hyperdb/articles/6d5e5b969842d7",
          "publishedOn": "2023-10-26T10:06:25.000Z",
          "wordCount": 648,
          "title": "［AtCoder］ABC-312｜C - Invisible Hand",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aWx8VopS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-312%25EF%25BD%259CC%2520-%2520Invisible%2520Hand%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aWx8VopS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-312%25EF%25BD%259CC%2520-%2520Invisible%2520Hand%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/argi_berri/articles/feb2489d646847",
          "author": "ARGIA",
          "description": "前文\n\n 注意\n\nこれはメモである。正確性を保証しない。\n\n\n 環境とライブラリの前提\n\n環境：WSL + mamba\nライブラリ：scikit-learn, lightgbm, seaborn\n\nLightGBM は scikit-learn API から呼び出す。\n\n\n 本編\n\n モデルの準備と予想\n(X_train, y_train)と (X_test, y_test) はそれぞれ学習と検証に用いる説明変数と目的変数のデータセットである。その他の詳細は割愛する。\nimport lightgbm as lgb\n\nmodel = lgb.LGBMClassifier(...)\nmo...",
          "link": "https://zenn.dev/argi_berri/articles/feb2489d646847",
          "publishedOn": "2023-10-26T06:42:23.000Z",
          "wordCount": 545,
          "title": "LightGBM (scikit-learn API) で ROC 曲線を描く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rBi_4PnI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LightGBM%2520%2528scikit-learn%2520API%2529%2520%25E3%2581%25A7%2520ROC%2520%25E6%259B%25B2%25E7%25B7%259A%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ARGIA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhYWQwM2NmMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rBi_4PnI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LightGBM%2520%2528scikit-learn%2520API%2529%2520%25E3%2581%25A7%2520ROC%2520%25E6%259B%25B2%25E7%25B7%259A%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ARGIA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhYWQwM2NmMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shytaani/articles/863d3f83f40095",
          "author": "Toru.T",
          "description": "Linterとは\nLinterは、ソースコードを解析して、潜在的なバグの検出や、規定されたルール[1]に沿ってコードが書かれているかをチェックする静的解析ツールの1つです。\n\n Formatterとは\nFormatterは、コードのスタイルをチェックし、規定されたルール[1:1]に基づいてコードを整形するツールです。\n\n Linter、Formatterを利用するメリット\n1. コードの品質向上\nLinterは、潜在的なバグや不適切なコーディングスタイルを検出し、それらを修正することでコードの品質を向上させます。\n2. 一貫性のあるコーディングスタイル\nFormatterは、一貫性の...",
          "link": "https://zenn.dev/shytaani/articles/863d3f83f40095",
          "publishedOn": "2023-10-26T05:47:20.000Z",
          "wordCount": 625,
          "title": "【社内勉強会③】Linter, Formatterについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qmnBlUW9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A4%25BE%25E5%2586%2585%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%25E2%2591%25A2%25E3%2580%2591Linter%252C%2520Formatter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru.T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1FiejZORHAwb08wbTdxWS05dUFJZGlfYVIyVlJUbHdGb1A3ODRieGJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qmnBlUW9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A4%25BE%25E5%2586%2585%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%25E2%2591%25A2%25E3%2580%2591Linter%252C%2520Formatter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru.T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1FiejZORHAwb08wbTdxWS05dUFJZGlfYVIyVlJUbHdGb1A3ODRieGJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/merosu_radio/articles/2da39a25f91f05",
          "author": "merosu_radio",
          "description": "はじめに\n例えば製造業では、顧客要求物性を達成するための条件チューニング、あるいはプラント製造条件をチューニングする機会が数多くあるかと思います。\nその際に、往々にして物性Aの値が良化すると物性Bの値が悪化するケースが存在するかと思います。\nその際に使える機械学習の手法として、Optunaによる多目的最適化があります。\n本記事ではOptunaによる多目的最適化を実験に組み込むためのサンプルコードを紹介します。\n\n\n 実装\n\n サンプルデータの作成\n\n\n サンプルデータの分布確認\nまずは、今回使用するサンプルデータを作成します。\n物性値の硬度と靭性を以下のように定式化します。\n実際はこ...",
          "link": "https://zenn.dev/merosu_radio/articles/2da39a25f91f05",
          "publishedOn": "2023-10-26T02:42:56.000Z",
          "wordCount": 1109,
          "title": "Optunaによる多目的最適化を実験に組み込む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--72aChdXK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Optuna%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%259A%25E7%259B%25AE%25E7%259A%2584%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%2592%25E5%25AE%259F%25E9%25A8%2593%25E3%2581%25AB%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:merosu_radio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMGU2MGFkYzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--72aChdXK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Optuna%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%259A%25E7%259B%25AE%25E7%259A%2584%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%2592%25E5%25AE%259F%25E9%25A8%2593%25E3%2581%25AB%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:merosu_radio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMGU2MGFkYzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/recommend_books3",
          "author": "Torachi0401",
          "description": "#　独学におすすめのIT書籍\n皆さんこんにちわ！今回はおすすめのIT書籍を紹介します。\n少しでも皆さんのお役に立てればと思います！\n\n 改訂新版JavaScript本格入門 ～モダンスタイルによる基礎から現場での応用まで\n\n\n評価:3/5点\nおすすめポイント:JavaScriptの基本的な文法が丁寧に解説\nマイナスポイント:実践的な応用テクニックの解説が不足\n総評:JavaScriptの基礎文法を学ぶ入門書として適していますが、実際のサイト制作に必要な応用力はつきにくいのが難点です。\n\n 実践マイクロサービスAPI\n\n\n評価:4/5点\n理解・利用・保守が容易なAPIで、堅牢なマイクロサー...",
          "link": "https://zenn.dev/torachi0401/articles/recommend_books3",
          "publishedOn": "2023-10-25T15:58:23.000Z",
          "wordCount": 205,
          "title": "独学におすすめのIT書籍 その3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qEP8kat9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AEIT%25E6%259B%25B8%25E7%25B1%258D%2520%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qEP8kat9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AEIT%25E6%259B%25B8%25E7%25B1%258D%2520%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/rchiji/articles/cf8e8fc1980334",
          "author": "Ryota Chijimatsu",
          "description": "前回、Cellpose GUIの使用方法やカスタムモデルの作成方法を紹介した。\nhttps://zenn.dev/rchiji/articles/92690f26968e9b#インストール\nしかし、Cellpose GUIではバッチ処理ができないため、せっかく汎用性のあるモデルができても他の画像に処理を繰り返すことができない。\n本記事では、Pythonのコマンド処理でCellposeモデルを複数画像に適応する例を紹介する。\n処理には前回作成したcellpose仮想環境を使用する。Anaconda Promptから仮想環境を立ち上げておく。\nconda activate cellpose\n...",
          "link": "https://zenn.dev/rchiji/articles/cf8e8fc1980334",
          "publishedOn": "2023-10-25T15:27:06.000Z",
          "wordCount": 2715,
          "title": "【画像解析】Cellposeで顕微鏡写真から細胞をセグメンテーション2 - バッチ処理 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FvJ_3gmG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2594%25BB%25E5%2583%258F%25E8%25A7%25A3%25E6%259E%2590%25E3%2580%2591Cellpose%25E3%2581%25A7%25E9%25A1%2595%25E5%25BE%25AE%25E9%258F%25A1%25E5%2586%2599%25E7%259C%259F%25E3%2581%258B%25E3%2582%2589%25E7%25B4%25B0%25E8%2583%259E%25E3%2582%2592%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B32%2520-%2520%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E5%2587%25A6%25E7%2590%2586%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryota%2520Chijimatsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEs0b2Q4RWI5ZkNSWmhqZlh4NUFwXzlUaEZncXprSmJDTE1RTXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FvJ_3gmG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2594%25BB%25E5%2583%258F%25E8%25A7%25A3%25E6%259E%2590%25E3%2580%2591Cellpose%25E3%2581%25A7%25E9%25A1%2595%25E5%25BE%25AE%25E9%258F%25A1%25E5%2586%2599%25E7%259C%259F%25E3%2581%258B%25E3%2582%2589%25E7%25B4%25B0%25E8%2583%259E%25E3%2582%2592%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B32%2520-%2520%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E5%2587%25A6%25E7%2590%2586%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryota%2520Chijimatsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEs0b2Q4RWI5ZkNSWmhqZlh4NUFwXzlUaEZncXprSmJDTE1RTXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/5ef09fee341c57",
          "author": "たきろぐ",
          "description": "グラフデータを深層学習で扱うアプローチとして、Graph Neural Networks (GNNs) がよく利用されています。論文などで提案されている数式をプログラムとして実装するためには、pytorch-geometric や deep graph library (dgl) などが利用されます。\n前回（大昔）の記事はこちらです。\nhttps://zenn.dev/takilog/articles/e54a45d6f7266229e367\n最近、いくつかのgithub上のレポジトリを読んでいたら、pytorch-geometricを使っている例を確認しました。\nこの記事では、GCN ...",
          "link": "https://zenn.dev/takilog/articles/5ef09fee341c57",
          "publishedOn": "2023-10-25T14:12:14.000Z",
          "wordCount": 2055,
          "title": "Graph Convolutional Networks で使われている計算の最小動作例 (PyTorch Geometric編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ef91sy29--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Graph%2520Convolutional%2520Networks%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E6%259C%2580%25E5%25B0%258F%25E5%258B%2595%25E4%25BD%259C%25E4%25BE%258B%2520%2528PyTorch%2520Geo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ef91sy29--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Graph%2520Convolutional%2520Networks%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E6%259C%2580%25E5%25B0%258F%25E5%258B%2595%25E4%25BD%259C%25E4%25BE%258B%2520%2528PyTorch%2520Geo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kou_kawa/articles/07-first-fastapi",
          "author": "Kou",
          "description": "🎯目的\n新たなWebアプリ開発の技術選定を行う中で、FastAPIを試用した。そのプロセスとFastAPIの特徴を初めて構築する過程で記録する。\n\n FastAPIとは？\nFastAPIは、Python 3.6+で書かれたモダンで高速なPythonのWebフレームワーク。非同期処理を強力にサポートしており、高速なAPIの開発に最適化されている。\n\n 主な特徴:\n\n\n速度: FastAPIは、Pythonで利用可能な最速のフレームワークの一つ。非同期処理により、I/O待ち時間が大幅に削減される。\n\n簡易性と柔軟性: 依存性注入、セキュリティ、認証などの機能を備えた使いやすい構文を提供す...",
          "link": "https://zenn.dev/kou_kawa/articles/07-first-fastapi",
          "publishedOn": "2023-10-25T13:48:12.000Z",
          "wordCount": 446,
          "title": "FastAPI始めました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sewQr1vb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sewQr1vb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/daishin/articles/c43d96cca6a411",
          "author": "川上大心",
          "description": "機能\nウェブページで撮影か画像ファイルのアップロードができます。\n\nサーバーで200、俳句が返ってきます。\n\nアラートで表示。大成功！\n\n\n 動き\n画像分析でキーワードを抜き出し、日本語に翻訳。\nGPT4のAPIで俳句を生成。\n・この時プロンプトが大事で、日本語に翻訳したものがカタカナだと俳句にならない、わかりやすい日本語にここで修正させる。\n表示。\n\n コード\nウェブ側\n\nサーバ側\n※辞書が1,000行ありますお気を付けください。この下長いです。\n\n\n 注意点\n・辞書にない言葉が返ってくるとハチャメチャな俳句になる。\n・画像からキーワードをとってくるときの精度上げようと思うと学習が必要",
          "link": "https://zenn.dev/daishin/articles/c43d96cca6a411",
          "publishedOn": "2023-10-25T12:28:07.000Z",
          "wordCount": 130,
          "title": "画像俳句AI",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3Y9uDH9s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E7%2594%25BB%25E5%2583%258F%25E4%25BF%25B3%25E5%258F%25A5AI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B7%259D%25E4%25B8%258A%25E5%25A4%25A7%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZW5xWEY2WThmNm5heDJmTUZhT2p4ZFdjeno4dWVhVzVCR25xN1Fudz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3Y9uDH9s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E7%2594%25BB%25E5%2583%258F%25E4%25BF%25B3%25E5%258F%25A5AI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B7%259D%25E4%25B8%258A%25E5%25A4%25A7%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZW5xWEY2WThmNm5heDJmTUZhT2p4ZFdjeno4dWVhVzVCR25xN1Fudz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/meii/articles/04e3d202f038c5",
          "author": "mei",
          "description": "エラーの内容\nassert not shared.cmd_opts.disable_extension_access, \"extension access disabled because of command line flags\"\n\n 理由\n読めばわかるがextensionへのアクセスが制限されてる\n\n 解決方法\ncommandlineARGS\n--enable-insecure-extension-access\n通常の場合\n./webui.sh --enable-insecure-extension-access",
          "link": "https://zenn.dev/meii/articles/04e3d202f038c5",
          "publishedOn": "2023-10-24T14:55:54.000Z",
          "wordCount": 111,
          "title": "stable diffusion webui extensionエラーへの対処",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QopWK66F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:stable%2520diffusion%2520webui%2520extension%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjNlMDRkYzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QopWK66F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:stable%2520diffusion%2520webui%2520extension%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjNlMDRkYzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sassan/articles/4878e79272ed61",
          "author": "sassan",
          "description": "はじめに\n※2023/10/24:記事をQiitaからZennに移しました。\nPythonのprint()は数値でも文字列でも配列でも、どのような型の変数でも文字列にしてくれてすごく便利です。\n僕は競プロ(競技プログラミング)をやっているのですが、時間との闘いである競プロでは、このようなあらゆる変数表示が出来る関数はデバッグにとても重宝します。\nしかし、C++にはそのような関数はありません。特にC++は高速で競プロに向いている言語なので、C++にそのような関数がないのはとてももったいないです。\nだったら作ればいいじゃない、ということで、print()のC++バージョンを本気で作ってみ...",
          "link": "https://zenn.dev/sassan/articles/4878e79272ed61",
          "publishedOn": "2023-10-24T08:20:01.000Z",
          "wordCount": 2388,
          "title": "【GitHubスター100個突破】Pythonのprint()のC++版を本気で作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QZZHTPHF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GitHub%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC100%25E5%2580%258B%25E7%25AA%2581%25E7%25A0%25B4%25E3%2580%2591Python%25E3%2581%25AEprint%2528%2529%25E3%2581%25AEC%252B%252B%25E7%2589%2588%25E3%2582%2592%25E6%259C%25AC%25E6%25B0%2597%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sassan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyZTdmMWVkNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QZZHTPHF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GitHub%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC100%25E5%2580%258B%25E7%25AA%2581%25E7%25A0%25B4%25E3%2580%2591Python%25E3%2581%25AEprint%2528%2529%25E3%2581%25AEC%252B%252B%25E7%2589%2588%25E3%2582%2592%25E6%259C%25AC%25E6%25B0%2597%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sassan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyZTdmMWVkNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/momosuke/articles/whisper-streaming",
          "author": "momosuke | Ryosuke Hyakuta",
          "description": "OpenAI から Whisper とかいう化け物ASRモデルが出たかと思えば，C++で書かれたCore MLをサポートした whisper.cpp が出たかと思えば，とても高速化された faster-whisper 出てきました．\nhttps://github.com/openai/whisper\nhttps://github.com/ggerganov/whisper.cpp\nhttps://github.com/guillaumekln/faster-whisper\n3つのモデルの性能比較については，以下の記事がよくまとまっています．\nhttps://zenn.dev/piment...",
          "link": "https://zenn.dev/momosuke/articles/whisper-streaming",
          "publishedOn": "2023-10-24T08:17:33.000Z",
          "wordCount": 946,
          "title": "faster-whisper をリアルタイムストリーミング処理するプレプリントがあったのでColabで動かしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DrJTWEM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:faster-whisper%2520%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7Colab%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momosuke%2520%257C%2520Ryos...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ODc4NmI0NjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DrJTWEM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:faster-whisper%2520%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7Colab%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momosuke%2520%257C%2520Ryos...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ODc4NmI0NjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taniii_shio/articles/5af72f0918c7d8",
          "author": "Naoto Shioya",
          "description": "以下の理由で、ローカルPC（Windows）上にvenvでpythonの環境構築をしました。\n\nopenaiやlangchainなどのパッケージをcondaで管理するのが複雑だったため\nネットワークの関係でDockerが使用できないため\n\n詰まった箇所があったのでメモです。\n\n 環境\n\nOS: windows11\npython: 3.10.11\n\n\n やりたいこと\n\npythonをローカルPC（windows）で実行\n\nバージョン管理ツール（asdfなど）やパッケージ管理ツール（conda, poetry）を使用しない\npipを使いたい\n\n\n\n\n 手順\n\n以下から、python3（任意の...",
          "link": "https://zenn.dev/taniii_shio/articles/5af72f0918c7d8",
          "publishedOn": "2023-10-24T07:53:21.000Z",
          "wordCount": 367,
          "title": "【Windows】ローカルPCにvenvでpythonの環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Oa-WJgg5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Windows%25E3%2580%2591%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25ABvenv%25E3%2581%25A7python%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Oa-WJgg5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Windows%25E3%2580%2591%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25ABvenv%25E3%2581%25A7python%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ziaensochan/articles/7b2c9c7cacc017",
          "author": "ziaenso_",
          "description": "読む前に\n!\nこの記事を書いた人はプログラミング初心者なので一部単語が間違えてたり\nコードに無駄があるかもしれません。万が一致命的なミスをしていた場合はご指摘ください;;\n\n\n fletとは\nfletはPythonでGUIを作るためのライブラリ？フレームワーク？です。(ここらへんよくわかんない)\nFletはFlutterをベースとしているため何を考えなくてもいい感じのUIになります。\nhttps://flet.dev/\n次のコードがfletの基本になります。\n\nhello.py\n#インポート\nimport flet as ft\n\n#ウィンドウ\ndef main(page: ft.Pa...",
          "link": "https://zenn.dev/ziaensochan/articles/7b2c9c7cacc017",
          "publishedOn": "2023-10-24T06:14:14.000Z",
          "wordCount": 609,
          "title": "Fletでエラーダイアログを実装する。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JX0z8dej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flet%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ziaenso_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYWFhNTlkYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JX0z8dej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flet%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ziaenso_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYWFhNTlkYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/40f3afa7efce22",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-311 C - Find it!\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = [x - 1 for x in getIntList()]\n\n    pt = 0\n    route = [pt]\n    reached = [0 for _ in range(n)]\n    reached[pt] = 1\n\n ...",
          "link": "https://zenn.dev/hyperdb/articles/40f3afa7efce22",
          "publishedOn": "2023-10-24T05:56:06.000Z",
          "wordCount": 525,
          "title": "［AtCoder］ABC-311｜C - Find it!",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cogGyi81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-311%25EF%25BD%259CC%2520-%2520Find%2520it%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cogGyi81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-311%25EF%25BD%259CC%2520-%2520Find%2520it%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nyazuki/articles/181c1d6269a7d1",
          "author": "azuki",
          "description": "はじめに\nGoogle Drive APIを利用してローカルのcsvファイルをアップロードする機能を作成しました。本記事ではその手順をまとめます。\n\n APIの有効化\nプロジェクトを作成し、Google Cloud コンソールから、Google Drive API を有効にしておきます。\n\n 資格情報の選択\nローカルからリクエストを送る際の認証方法を選択します。認証方法には、下の３つがあります。\n\n\n\n資格情報の種類\n説明\n\n\n\n\nAPIキー\n一般公開データに匿名でアクセスを提供し、認証不要\n\n\nOAuth クライアント ID\nリクエストを送信する際にブラウザを開いてユーザー認証\n\n...",
          "link": "https://zenn.dev/nyazuki/articles/181c1d6269a7d1",
          "publishedOn": "2023-10-24T05:53:33.000Z",
          "wordCount": 651,
          "title": "【Google Drive API】サービスアカウントキーを使用して、共有ドライブにファイルアップロード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PwJin362--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Google%2520Drive%2520API%25E3%2580%2591%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%25A2%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%2585%25B1%25E6%259C%2589%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:azuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxxN0VLTUo1MVZTQ3hnYkpubGhjclpCRFJLcG5sMldscWhjVnJ4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PwJin362--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Google%2520Drive%2520API%25E3%2580%2591%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%25A2%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%2585%25B1%25E6%259C%2589%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:azuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxxN0VLTUo1MVZTQ3hnYkpubGhjclpCRFJLcG5sMldscWhjVnJ4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/matcha22/articles/c76362469b986e",
          "author": "matcha",
          "description": "平成２７年度　問３　２分探索木の問題\nhttps://www.ipa.go.jp/shiken/mondai-kaiotu/2015h27.html\nclass Node:\n    def __init__(self, key):\n        self.key = key\n        self.left = None\n        self.right = None\n\ndef search(k, p):\n    if p is None:\n        return None\n    elif k == p.key:\n        return p\n    elif k...",
          "link": "https://zenn.dev/matcha22/articles/c76362469b986e",
          "publishedOn": "2023-10-24T03:12:24.000Z",
          "wordCount": 3182,
          "title": "応用情報技術者試験 午後問題過去問のアルゴリズムをpythonで書いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b3acEmav--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BF%259C%25E7%2594%25A8%25E6%2583%2585%25E5%25A0%25B1%25E6%258A%2580%25E8%25A1%2593%25E8%2580%2585%25E8%25A9%25A6%25E9%25A8%2593%2520%25E5%258D%2588%25E5%25BE%258C%25E5%2595%258F%25E9%25A1%258C%25E9%2581%258E%25E5%258E%25BB%25E5%2595%258F%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:matcha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwMjIzYmMwMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b3acEmav--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BF%259C%25E7%2594%25A8%25E6%2583%2585%25E5%25A0%25B1%25E6%258A%2580%25E8%25A1%2593%25E8%2580%2585%25E8%25A9%25A6%25E9%25A8%2593%2520%25E5%258D%2588%25E5%25BE%258C%25E5%2595%258F%25E9%25A1%258C%25E9%2581%258E%25E5%258E%25BB%25E5%2595%258F%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:matcha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwMjIzYmMwMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nogayama/articles/f2ef6325533411",
          "author": "野ヶ山 尊秀",
          "description": "見出し1\n\n 見出し2\n\n 見出し3\n本文\n\ny = x^2",
          "link": "https://zenn.dev/nogayama/articles/f2ef6325533411",
          "publishedOn": "2023-10-23T06:11:24.000Z",
          "wordCount": 79,
          "title": "テスト記事",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FsfkYZUx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2587%258E%25E3%2583%25B6%25E5%25B1%25B1%2520%25E5%25B0%258A%25E7%25A7%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hScExrSDBCOXpMcXdOVnluM3B5UEc1dFVXaEhmSTZuR3dSX21ZMWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FsfkYZUx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2587%258E%25E3%2583%25B6%25E5%25B1%25B1%2520%25E5%25B0%258A%25E7%25A7%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hScExrSDBCOXpMcXdOVnluM3B5UEc1dFVXaEhmSTZuR3dSX21ZMWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c676a032e6ec2c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-321 B - Cutoff\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, x = getIntMap()\n    a = getIntList()\n\n    high = max(a)\n    low = min(a)\n    goal = x - (sum(a) - high - low)\n\n    if goa...",
          "link": "https://zenn.dev/hyperdb/articles/c676a032e6ec2c",
          "publishedOn": "2023-10-23T05:12:08.000Z",
          "wordCount": 408,
          "title": "［AtCoder］ABC-321｜B - Cutoff",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--95li1db---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-321%25EF%25BD%259CB%2520-%2520Cutoff%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--95li1db---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-321%25EF%25BD%259CB%2520-%2520Cutoff%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b155fb3ddb2249",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-321 A - 321-like Checker\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    n = list(map(int, list(getString())))\n\n    r = True\n    if len(n) > 1:\n        c = [n[i - 1] - n[i] for i in range(1, len(n))]\n        if min(c) <= 0:\n            r = False\n\n    print('Yes'...",
          "link": "https://zenn.dev/hyperdb/articles/b155fb3ddb2249",
          "publishedOn": "2023-10-23T05:12:07.000Z",
          "wordCount": 364,
          "title": "［AtCoder］ABC-321｜A - 321-like Checker",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PU4wESWe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-321%25EF%25BD%259CA%2520-%2520321-like%2520Checker%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PU4wESWe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-321%25EF%25BD%259CA%2520-%2520321-like%2520Checker%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hissorimemo/articles/18c6fac4cd895b",
          "author": "kanade",
          "description": "やりたいことは、plugins ディレクトリに作ったファイルを自動的に import してプラグインとして呼び出すということです。世間一般にどうやってプラグインを実装してるのかわからなくて自分で作ってみました。プラグインの追加削除をファイルの有無で動的に行うことを目指しました。\nここでは基底クラスを Parent としています。プラグインは Parent を継承している必要があります。call_method() ですべてのプラグインが持つ同名のメソッドを呼び出します。もしプラグインが存在しなければ Parent の hello() メソッドを呼び出します。ただ、本来は親から各プラグインの...",
          "link": "https://zenn.dev/hissorimemo/articles/18c6fac4cd895b",
          "publishedOn": "2023-10-23T03:06:04.000Z",
          "wordCount": 823,
          "title": "Python で動的な plugin を実装したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4nuHAcX6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AA%2520plugin%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kanade%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeGVSNkx6SnpBbWJLdEZyNHRkVDNfR1NvQVhaeDNFRGNHY1pWNUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4nuHAcX6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AA%2520plugin%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kanade%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeGVSNkx6SnpBbWJLdEZyNHRkVDNfR1NvQVhaeDNFRGNHY1pWNUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/00/articles/run_mistral-7b_on_google_colab",
          "author": "koji",
          "description": "この記事はGoogle Colabの無料版T4での動作を確認しています。\nなので、requirementはGoogleアカウントになります\n\n Mistral-7Bとは\nhttps://mistral.ai/news/announcing-mistral-7b/\nGoogle Colabで動かすにはGGUFファイルを使用します。\nなので、requirementはGoogleアカウントになります。\nWhat is GGUF and GGML?\n\nGGUFとGGMLは、特にGPT（Generative Pre-trained Transformer）のような言語モデルの文脈で、推論用のモデル...",
          "link": "https://zenn.dev/00/articles/run_mistral-7b_on_google_colab",
          "publishedOn": "2023-10-23T01:55:31.000Z",
          "wordCount": 248,
          "title": "Mistral-7BをGoogleColabで試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d4j9-I0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mistral-7B%25E3%2582%2592GoogleColab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiODc3MTUwYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d4j9-I0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mistral-7B%25E3%2582%2592GoogleColab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiODc3MTUwYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/dozo/articles/846b756d64fdc7",
          "author": "dozo",
          "description": "SQLのLinterなんてあったのか\n!\n関連記事:\n\nファイルの修正個所、コミットの差分だけPHPCSを充てる方法\nWSLとJetbrains GatewayでPHPStormローカルリモート開発\nPHP SPLの標準Interfaceを真剣に考える\nassertEqualsを今すぐ捨て、assertSameを使うのです\nPHPUnitには @testdox を使え\n\n\nデータベースのデプロイする際、\nmigrationに任せたり、\nSQLを書いたりと各社環境はまちまちで、\n甲乙つけがたい状況。\nlintに関してmigrationであればその言語側に任せればいいが、\nSQLについて...",
          "link": "https://zenn.dev/dozo/articles/846b756d64fdc7",
          "publishedOn": "2023-10-23T00:48:00.000Z",
          "wordCount": 1171,
          "title": "SQLFluffでDocker越しにSQLのフォーマットチェック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Fx3BSGKZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLFluff%25E3%2581%25A7Docker%25E8%25B6%258A%25E3%2581%2597%25E3%2581%25ABSQL%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Fx3BSGKZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLFluff%25E3%2581%25A7Docker%25E8%25B6%258A%25E3%2581%2597%25E3%2581%25ABSQL%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yamada_quantum/articles/1da6331276aa7e",
          "author": "やまぐち",
          "description": "今回はVQEを量子計算ライブラリを使ってやってみたい。そんな気持ちが溢れたので、国産の量子計算ライブラリであるquri-partsを使ってVQEを実行してみようと思います。\nVQEの理解も、quri-partsの理解もまあまあ浅いので間違っている可能性があることご了承ください。\nではざっくりやっていきます！\n!\nイメージつけるために数式などを出していますが、あんまり自信ないのでご容赦ください。\n\n\n quri-partsについて\n皆さん、量子計算系のライブラリといえば、何を思い浮かべますか？\nqiskit？　Q#？　はたまたQulacsですか？\n私はquri-partsです。\nquri-...",
          "link": "https://zenn.dev/yamada_quantum/articles/1da6331276aa7e",
          "publishedOn": "2023-10-22T23:00:00.000Z",
          "wordCount": 1763,
          "title": "【初めて学ぶquri-parts】VQEしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--luZi4ux3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6quri-parts%25E3%2580%2591VQE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%2590%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4YTFkMDliZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--luZi4ux3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6quri-parts%25E3%2580%2591VQE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%2590%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4YTFkMDliZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kazu1/articles/9d0fad96eb7562",
          "author": "僕はエンジニア",
          "description": "記事の概要\nPythonのデータ構造は、異なる状況や要件に適応するための多様な特性を持っています。この記事では、Pythonで利用可能な主要なコレクション型とそれぞれの特性、そして適切な使用例を紹介します。\nまた複数の方法があるiteration(ループ文)についてもどれを選択すれば、どういう意図で書いたかを認識してもらいやすいかを紹介していこうと思います。\n自己文書化されたコードを目指して、コレクションとiterationの手段がどのような意図の表現になるかを知りましょうということですね。\n\n コレクションの選択による意図\nコレクションとそれに付随する意図を記載しています。\nこの意...",
          "link": "https://zenn.dev/kazu1/articles/9d0fad96eb7562",
          "publishedOn": "2023-10-22T15:46:58.000Z",
          "wordCount": 1309,
          "title": "【python】意図が伝わるコード(コレクション・イテレーション)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1xftzQd7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591%25E6%2584%258F%25E5%259B%25B3%25E3%2581%258C%25E4%25BC%259D%25E3%2582%258F%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2528%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2583%2595%25E3%2581%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTU4ZjUxZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1xftzQd7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591%25E6%2584%258F%25E5%259B%25B3%25E3%2581%258C%25E4%25BC%259D%25E3%2582%258F%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2528%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2583%2595%25E3%2581%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTU4ZjUxZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kk0515/articles/1eac914af99443",
          "author": "kk060515",
          "description": "from cryptography.fernet import Fernet\nimport base64\n\n# 暗号化されたデータをファイルに書き込む\ndef write_encrypted_data(filename, data, key):\n    cipher_suite = Fernet(key)\n    encrypted_data = cipher_suite.encrypt(data)\n    with open(filename, 'wb') as file:\n        file.write(encrypted_data)\n\n# ファイルからデータを読み取る\ndef...",
          "link": "https://zenn.dev/kk0515/articles/1eac914af99443",
          "publishedOn": "2023-10-22T12:44:08.000Z",
          "wordCount": 227,
          "title": "暗号化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3_6rxUvj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kk060515%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NWU5Yzg5MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3_6rxUvj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kk060515%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NWU5Yzg5MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kk0515/articles/7603d42a24f166",
          "author": "kk060515",
          "description": "from cryptography.fernet import Fernet\nimport base64\n\n# ファイルから暗号化されたデータを読み取る\ndef read_encrypted_data(filename):\n    with open(filename, 'rb') as file:\n        return file.read()\n\n# ユーザーから鍵を入力\ndef get_user_key():\n    user_key = input(\"Enter the encryption key used for decryption: \")\n    key = user...",
          "link": "https://zenn.dev/kk0515/articles/7603d42a24f166",
          "publishedOn": "2023-10-22T12:40:08.000Z",
          "wordCount": 251,
          "title": "復号",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VAulj4hv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:%25E5%25BE%25A9%25E5%258F%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kk060515%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NWU5Yzg5MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VAulj4hv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:%25E5%25BE%25A9%25E5%258F%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kk060515%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NWU5Yzg5MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/firedingo/articles/0e316b1a118858",
          "author": "FireDingo",
          "description": "Atcoder Beginners contest 321 \"CutOff\"解説 In　Python\n今回はついこないだ解いたCutOffという問題をPythonで解説していきます。\n過去問として解いていくときの参考になれば幸いです。\n\n 問題\n問題文にはいろんなことが書いてありますが、僕なりに要約するとこんな感じです。\n分かりにくかったら下のリンクから問題文を読んでください。\n\n\nNラウンド行われる試験がある\n各ラウンドには0-100のスコアが存在する\n総合的なスコアは最低値と最大値を除いたものになる\niラウンド目のスコアはAi\n**最終結果（総合的なスコア）をX点以上にするために...",
          "link": "https://zenn.dev/firedingo/articles/0e316b1a118858",
          "publishedOn": "2023-10-22T11:58:41.000Z",
          "wordCount": 431,
          "title": "Atcoder Beginners contest 321 \"CutOff\"解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3N0PJ1SN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Atcoder%2520Beginners%2520contest%2520321%2520%2522CutOff%2522%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FireDingo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MHhSUGpqNTlMQXlvVWozOXR5Mk9EdUVXVFJPSXo5d2VtT05mY0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3N0PJ1SN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Atcoder%2520Beginners%2520contest%2520321%2520%2522CutOff%2522%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FireDingo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MHhSUGpqNTlMQXlvVWozOXR5Mk9EdUVXVFJPSXo5d2VtT05mY0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/y_taiki/articles/sam_deploy_template",
          "author": "taiki",
          "description": "はじめに\n以前作成した記事【SAM】Lambda + API Gatewayの開発環境構築で構築した開発環境を、AWS上にデプロイしました。しかしrequirements.txtに書いているモジュールがインポートできず、Lambdaでエラーが発生していました。\n今回はそのエラーを解決します。\n\n ディレクトリ構成\n.\n|-- lambda_function.py\n|-- requirements.txt\n`-- template.yaml\n各ファイルの内容は以下です👇\n\nrequirements.txt\nslackweb\n\n\ntemplate.yaml\nTransform: AWS:...",
          "link": "https://zenn.dev/y_taiki/articles/sam_deploy_template",
          "publishedOn": "2023-10-22T09:24:44.000Z",
          "wordCount": 503,
          "title": "【SAM】Unable to import module を解決",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7KCiGLSi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SAM%25E3%2580%2591Unable%2520to%2520import%2520module%2520%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmlZZmE0SW5SS29Pbi0xdjBsdDQwR0Z2MHJZVXNFcDJDWDE4Znc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7KCiGLSi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SAM%25E3%2580%2591Unable%2520to%2520import%2520module%2520%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmlZZmE0SW5SS29Pbi0xdjBsdDQwR0Z2MHJZVXNFcDJDWDE4Znc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/olemi/articles/374c880b5ff3c2",
          "author": "オレミ_微経験エンジニア",
          "description": "はじめに\nせっかくRTX3070があって、Whisperは6GくらいGPUメモリがあれば動くと聞き、\nfaster-whisperがLarge_v2を使えてしかも処理速度が速いと聞いたのでやってみた\nC++は入っているので、CUDA周りの導入から始めました。\n※なんも考えずにPython走らせたらcuDNNが無いよエラーで気付かされました\n\n PC環境\n\ni5-12400F\nNVIDIA RTX3070（GPUメモリ8GB）\nメモリ DDR4 32GB\nPython 3.10\nWindows 11\n\n\n CUDA関連の導入\n!\nここが一番時間かかりました\n\n\n CUDA・cuDNNの...",
          "link": "https://zenn.dev/olemi/articles/374c880b5ff3c2",
          "publishedOn": "2023-10-22T09:10:04.000Z",
          "wordCount": 759,
          "title": "RTX3070でfaster-whisperを途中の環境構築からやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SJVqNh1Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RTX3070%25E3%2581%25A7faster-whisper%25E3%2582%2592%25E9%2580%2594%25E4%25B8%25AD%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%258B%25E3%2582%2589%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25AC%25E3%2583%259F_%25E5%25BE%25AE%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYWRmYWYzMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SJVqNh1Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RTX3070%25E3%2581%25A7faster-whisper%25E3%2582%2592%25E9%2580%2594%25E4%25B8%25AD%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%258B%25E3%2582%2589%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25AC%25E3%2583%259F_%25E5%25BE%25AE%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYWRmYWYzMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/caymankun/articles/678e0ac6bd8b24",
          "author": "caymankun",
          "description": "youtubeダウンローダーとは?\nyoutubeの動画をダウンロードするためのもの。\n\n 用意するもの\n\npythonサーバー(replit)\nphpサーバー(risupuレンタルサーバー)\n\n\n 仕組み\n\n\n コード\n\nindex.html\n<!DOCTYPE html>\n<html>\n<head>\n   <meta charset=\"UTF-8\" />\n   <meta http-equiv=\"content-language\" content=\"ja\" />\n   <title>MEDL</titl...",
          "link": "https://zenn.dev/caymankun/articles/678e0ac6bd8b24",
          "publishedOn": "2023-10-22T05:10:37.000Z",
          "wordCount": 1905,
          "title": "youtubeダウンローダー作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xf1ms_Ix--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:youtube%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:caymankun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczNTljNGZkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xf1ms_Ix--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:youtube%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:caymankun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczNTljNGZkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/totopironote/articles/aa17833ef00e5f",
          "author": "ととぴろnote",
          "description": "はじめに\n今回扱う主成分分析(Principal component analysis ; PCA)は、次元削減の有名な方法である。\npを次元数、nをデータ数とするとp \\le nの状況を扱う。\nはじめに理論を説明し、次にpythonで実装する。\n\n 主成分分析\n平均\\mu , 共分散行列\\Sigma をもつ母集団からn個のp次データベクトルx_j , j=1,…,nを無作為に抽出する。\n\n\\Sigma=H\\Lambda H^T = \\sum_{s=1}^p\\lambda_{(s)}h_{(s)}h_{(s)}^T\n\n\\Lambda=diag(\\lambda_{(1)},...,\\l...",
          "link": "https://zenn.dev/totopironote/articles/aa17833ef00e5f",
          "publishedOn": "2023-10-22T00:00:00.000Z",
          "wordCount": 1181,
          "title": "主成分分析(PCA)-理論とPythonで実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j_N2msv_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25BB%25E6%2588%2590%25E5%2588%2586%25E5%2588%2586%25E6%259E%2590%2528PCA%2529-%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A8Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j_N2msv_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25BB%25E6%2588%2590%25E5%2588%2586%25E5%2588%2586%25E6%259E%2590%2528PCA%2529-%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A8Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25B4%25E3%2582%258Dnote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTJhNzk2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuma_memorandum/articles/98797dec048836",
          "author": "ゆうま",
          "description": "SQLAlchemyを使うテーブルの基本操作を下記にまとめます。\n接続するDBはAccessを使用しています。SQLserverなど別のDBを使う場合は接続部分のコードを変更して下さい。\n↓　AccessとSQLServerの接続方法を紹介\nhttps://zenn.dev/yuma_memorandum/articles/f2de7bbbc71a51\n\n DBとの接続(Accessファイル)\nfrom sqlalchemy import create_engine,MetaData\nfrom sqlalchemy.orm import declarative_base\n\nAccess_...",
          "link": "https://zenn.dev/yuma_memorandum/articles/98797dec048836",
          "publishedOn": "2023-10-21T23:49:39.000Z",
          "wordCount": 679,
          "title": "SQLAlchemy のCRUD(Create, Read, Update, Delete) 基本操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--K5v2Pzii--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%2520%25E3%2581%25AECRUD%2528Create%252C%2520Read%252C%2520Update%252C%2520Delete%2529%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2Nzg4YWVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--K5v2Pzii--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%2520%25E3%2581%25AECRUD%2528Create%252C%2520Read%252C%2520Update%252C%2520Delete%2529%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2Nzg4YWVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/koupro0204/articles/0a2efe19eaeda4",
          "author": "い。",
          "description": "目的\n\n markdownをHTML変換\nブログみたいなWEBアプリを開発する際にmarkdownで記事を書いてそれをHTMLに変換して表示という風にやりたい。\nやることは以下です。\n\nDBにcontentsにmarkdown形式で記事を保存\nmarkdownをHTMLに変換\n実際に表示\n\n1.の部分は本記事では触れません。\n\n 今回やること\nhttps://qiita.com/y-tsutsu/items/1424ce70171765d86316\n上記のQiitaの記事を参考にします。\nやることとしては以下になります。\n\nMarkdownからHTMLへの変換\nテンプレートで使うため...",
          "link": "https://zenn.dev/koupro0204/articles/0a2efe19eaeda4",
          "publishedOn": "2023-10-21T22:22:19.000Z",
          "wordCount": 2208,
          "title": "Djangoで使いたいからPythonでmarkdownをHTML変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yvqp-sL1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7markdown%25E3%2582%2592HTML%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yvqp-sL1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7markdown%25E3%2582%2592HTML%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/k10dayo/articles/e8c4043519cc3c",
          "author": "だよ",
          "description": "画像をリサイズする際、Rust使ったら速いんじゃないかと書いてみたら、Pythonのほうが速かった件。\nRustはimageクレートで cargo build --releaseしたもの\nPythonはPIL\n言語というより、使用するライブラリとクレートの比較になりますが、画像をリサイズして保存する速度だけを比較してます。\n自分は、Rust初心者なので参考程度に\n10枚リサイズ\n\n\n\n言語\n1回目\n2回目\n3回目\n平均\n\n\n\n\nRust\n2.91秒\n2.90秒\n2.76秒\n平均2.85秒\n\n\nPython\n0.49秒\n0.45秒\n0.48秒\n平均0.47秒\n\n\n\n50枚リサイズ\n\n\n...",
          "link": "https://zenn.dev/k10dayo/articles/e8c4043519cc3c",
          "publishedOn": "2023-10-21T14:16:19.000Z",
          "wordCount": 1325,
          "title": "RustとPythonの画像のリサイズ速度",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hnVLGSVL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A8Python%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E9%2580%259F%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A0%25E3%2582%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzNTY1MTNkZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hnVLGSVL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A8Python%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E9%2580%259F%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A0%25E3%2582%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzNTY1MTNkZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/harukii/articles/60296649d2af57",
          "author": "ホソノP",
          "description": "値動きの特徴\nimport pandas as pd\nimport MetaTrader5 as mt5\nfrom datetime import timedelta\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# MT5への接続\nmt5.initialize()\n\ndef fetch_and_prepare(symbol, timeframe, count, timezone_hours, ratio_calculation):\n    # データの取得\n    rates = mt5.copy_rates_from...",
          "link": "https://zenn.dev/harukii/articles/60296649d2af57",
          "publishedOn": "2023-10-21T06:00:24.000Z",
          "wordCount": 1959,
          "title": "PythonでFXのユロドルアノマリーを検証",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DtadAzf2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7FX%25E3%2581%25AE%25E3%2583%25A6%25E3%2583%25AD%25E3%2583%2589%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%258E%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DtadAzf2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7FX%25E3%2581%25AE%25E3%2583%25A6%25E3%2583%25AD%25E3%2583%2589%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%258E%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/apo_zenn/articles/fedaf3afd583e7",
          "author": "apo_zenn",
          "description": "環境導入\n仮想環境(venv)の中に導入していきます。\n\n shell\n$ py -3.8 -m venv venv # 仮想環境作成 (-3.8には任意のpythonバージョンを指定)\n$ .\\venv\\Scripts\\activate # 仮想環境をactivate\n$ cd venv # venv内に移動\n\n$ pip install Flask # Flaskインストール\n$ mkdir src # venv内に作業フォルダを作成\n$ cd src\n\n\n\n アプリケーションの作成(srcフォルダ内)\n\n hello.py\nfrom flask import Flask\n\nap...",
          "link": "https://zenn.dev/apo_zenn/articles/fedaf3afd583e7",
          "publishedOn": "2023-10-21T05:46:42.000Z",
          "wordCount": 251,
          "title": "Flask 環境導入",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0bjRttuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Flask%2520%25E7%2592%25B0%25E5%25A2%2583%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMWY3NGQ1ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0bjRttuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Flask%2520%25E7%2592%25B0%25E5%25A2%2583%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMWY3NGQ1ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/eldorado215/articles/628fa353319271",
          "author": "Hyon🇰🇷",
          "description": "はじめに\n今日は、ITスクールに通った66日目の日で、今日学んだ知識を記事にシェアしたいと思います。本記事が、ITを勉強を始めた方々にもロードマップになればいいと思います。\n今日は、昨日の続きで、PythonでJSONをParsingする実習を行い、\nOracle DBとアクセスする実習を行いました。\n\n JSON Parsing\nRest APIを使って、JSONのデーターをParsingしました。\n# -*- coding:utf-8 -*-\nfrom http.client import HTTPSConnection\nfrom urllib.parse import quot...",
          "link": "https://zenn.dev/eldorado215/articles/628fa353319271",
          "publishedOn": "2023-10-20T09:01:37.000Z",
          "wordCount": 928,
          "title": "【初心者向け/ITスクール 66日】Python JSONparsing/DB access",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I1qs7V82--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252066%25E6%2597%25A5%25E3%2580%2591Python%2520JSONparsing%252FDB%2520access%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I1qs7V82--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252066%25E6%2597%25A5%25E3%2580%2591Python%2520JSONparsing%252FDB%2520access%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/delacroix/articles/d91421d4e37617",
          "author": "taro-u",
          "description": "概要\n今回は犬の画像を用いて、犬の犬種を判別するAIアプリを作っていきたいと思います。\n実際僕は犬の犬種については全く詳しくないので、犬の画像や名前を言われてもいつもピンとこないので、犬の画像を入力すると犬種が返ってくるというアプリを作りたいと思います。\nとはいえ、いきなり全種類の犬種の判別はかなりハードルが高いので、まずは特徴が大きく異なる３種類の犬種の判別をできるアプリを作っていきたいと思います\n今回のエントリーナンバ-\nNo1. コーギー\n\nNo2. ドーベルマン\n\nNo3. パグ\n\nこの3種類の犬の犬種を判別するアプリを作っていきたいと思います！\n\n 目次\n今回の開発は大きく...",
          "link": "https://zenn.dev/delacroix/articles/d91421d4e37617",
          "publishedOn": "2023-10-20T08:00:45.000Z",
          "wordCount": 7231,
          "title": "犬の写真から犬種を判別するアプリを作成してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TgcG6ph1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25AC%25E3%2581%25AE%25E5%2586%2599%25E7%259C%259F%25E3%2581%258B%25E3%2582%2589%25E7%258A%25AC%25E7%25A8%25AE%25E3%2582%2592%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taro-u%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MDMxNDY3ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TgcG6ph1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25AC%25E3%2581%25AE%25E5%2586%2599%25E7%259C%259F%25E3%2581%258B%25E3%2582%2589%25E7%258A%25AC%25E7%25A8%25AE%25E3%2582%2592%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taro-u%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MDMxNDY3ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/satoshiakatsuka/articles/327405e7d7da35",
          "author": "sakats",
          "description": "はじめに\nみなさんは「マシンイプシロン」または「計算機イプシロン」を知ってますか？\n先日書いたコードでマシンイプシロンの概念を知って、浮動小少数点数の計算と少し仲良くなれました。\n個人的にとても勉強になったので記事にまとめてみます！\n\n 対象読者\n\nマシンイプシロンを知らない人\n浮動小数点型、その計算について学習したい人\n\n\n マシンイプシロンの定義\nまずはマシンイプシロンの定義です。Wikipediaの引用です。\n\n計算機イプシロン（けいさんきイプシロン、英: machine epsilon）は、浮動小数点数において、「1より大きい最小の数」と1との差のことである。\n\nPython...",
          "link": "https://zenn.dev/satoshiakatsuka/articles/327405e7d7da35",
          "publishedOn": "2023-10-20T03:29:22.000Z",
          "wordCount": 545,
          "title": "君は「マシンイプシロン」を知っているか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EbD3s_NU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%259B%25E3%2581%25AF%25E3%2580%258C%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25AD%25E3%2583%25B3%25E3%2580%258D%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sakats%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkODUwYTAwM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EbD3s_NU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%259B%25E3%2581%25AF%25E3%2580%258C%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25AD%25E3%2583%25B3%25E3%2580%258D%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sakats%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkODUwYTAwM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/spacemarket/articles/bf0abfc8bb4305",
          "author": "miotava",
          "description": "Pythonの高速なスーパーセットとされているMojoがApple Silicon Macについに対応したので、早速インストールしてMojo入門してみました。\nhttps://www.modular.com/blog/mojo-is-now-available-on-mac\n※ 記事作成日の前日（2023年10月19日）に公開されました。\n!\n本記事の検証環境は以下の通りです。\nM1 Pro MacBook Pro\nmacOS Sonoma 14.0\nPython 3.11.3\n\n\n インストール手順\n\n 0. ModularにSign up\nhttps://developer.modu...",
          "link": "https://zenn.dev/spacemarket/articles/bf0abfc8bb4305",
          "publishedOn": "2023-10-20T02:56:57.000Z",
          "wordCount": 1320,
          "title": "MojoがApple Silicon Macに対応したので早速試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8EI0fyvQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mojo%25E3%2581%258CApple%2520Silicon%2520Mac%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2597%25A9%25E9%2580%259F%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:miotava%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5YjE3ZGU0ZTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8EI0fyvQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mojo%25E3%2581%258CApple%2520Silicon%2520Mac%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2597%25A9%25E9%2580%259F%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:miotava%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5YjE3ZGU0ZTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuma_memorandum/articles/f2de7bbbc71a51",
          "author": "ゆうま",
          "description": "Pandasを使ったデータベースとの接続\nこのページでは python でDBを扱う方法を紹介します。\n今回はsqlAlchemyを使ってpandasのdataframeにDBの値を格納する方法を紹介します。\n\n 使用するライブラリ\n\n pandas\npython上でExcelのような表形式のデータを簡単に高速で扱うことが可能なライブラリです。\nDBから吸い出したデータを加工するのに便利です。\n公式ドキュメント：http://pandas.pydata.org/pandas-docs/stable/\n\n sqlAlchemy\npandasでは直接DBと接続して読み込むことができる関数...",
          "link": "https://zenn.dev/yuma_memorandum/articles/f2de7bbbc71a51",
          "publishedOn": "2023-10-19T21:59:18.000Z",
          "wordCount": 833,
          "title": "Pandasを使ったデータベースとの接続",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--17LVsoxC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25A8%25E3%2581%25AE%25E6%258E%25A5%25E7%25B6%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2Nzg4YWVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--17LVsoxC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25A8%25E3%2581%25AE%25E6%258E%25A5%25E7%25B6%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2Nzg4YWVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/spacegeek/articles/45270323b1d2bc",
          "author": "space geek",
          "description": "PythonでGoogle Drive APIを使ってGoogle Driveにアクセスすることをしてみたので、その手順をつらつらと書いてみます。\nまた、基本的には公式ガイド通りなので何か困ったことがありましたら、こちらを確認してもらえたら情報は正確かと思います。\nhttps://developers.google.com/drive/api/quickstart/python?hl=ja\n\n この記事の想定読書\n\nPythonでGoogle Drive APIを使ってGoogle Driveの操作をしたいけど、何をどうすれば良いのかわからない方\n\n\n Google Cloud\n\n Go...",
          "link": "https://zenn.dev/spacegeek/articles/45270323b1d2bc",
          "publishedOn": "2023-10-19T15:02:41.000Z",
          "wordCount": 1362,
          "title": "PythonでGoogle Drive APIを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OAGfoth1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Google%2520Drive%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:space%2520geek%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkMGRmMzFjZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OAGfoth1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Google%2520Drive%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:space%2520geek%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkMGRmMzFjZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mayuge/articles/0cee0eb2609d7a",
          "author": "まゆげ",
          "description": "対象読者\n\nPythonが好きな人．\nCLIツールに興味がある人.\n\n\n ツールの詳細\n\nツール名: 🐰 rabbit-todo 🐰\n制作者: Mayuge 1名\nリポジトリ: rabbit-todo\n\n\n\n ツールを作った背景と, 自分の現在の状況\n僕はTodoをまとめるために, GithubのIssueを使っていました.\nしかし, 個人開発の僕には使わない機能が多い.\nなんなら, ブラウザに行くのも面倒.\nそんな感じでした.\nGithub以外に自分のプロジェクトのTodoをまとめられるツールを探していたのですが,\n基本的に出回っているツールは個人開発者向けではなく(当たり前),\n...",
          "link": "https://zenn.dev/mayuge/articles/0cee0eb2609d7a",
          "publishedOn": "2023-10-19T11:14:48.000Z",
          "wordCount": 1075,
          "title": "CLI-Todo-ToolをPythonで作る (rabbit-todo) # 1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tl3YoZti--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CLI-Todo-Tool%25E3%2582%2592Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2520%2528rabbit-todo%2529%2520%2523%25201%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%2586%25E3%2581%2592%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUFGYmd3SzBNT24tc0hnSVpEdFZYRURqc3hfYXQzVEdPSTJUX2h0QVY1LXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tl3YoZti--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CLI-Todo-Tool%25E3%2582%2592Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2520%2528rabbit-todo%2529%2520%2523%25201%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%2586%25E3%2581%2592%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUFGYmd3SzBNT24tc0hnSVpEdFZYRURqc3hfYXQzVEdPSTJUX2h0QVY1LXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/eldorado215/articles/b07f79fc714a9e",
          "author": "Hyon🇰🇷",
          "description": "はじめに\n今日は、ITスクールに通った65日目の日で、今日学んだ知識を記事にシェアしたいと思います。本記事が、ITを勉強を始めた方々にもロードマップになればいいと思います。\n今日は、昨日の続きで、PythonのOOPを勉強し、JAVAとの違いも勉強しました。\n最後にxml parsingも実習してみましたが、簡単で楽でした。\n\n Pythonのimport方法\n\n import package.module\nimport animal.pet  \n\nd = animal.pet.Dog(\"dog1\",7) \nd.printInfo()      \n\n import package.m...",
          "link": "https://zenn.dev/eldorado215/articles/b07f79fc714a9e",
          "publishedOn": "2023-10-19T08:34:44.000Z",
          "wordCount": 2897,
          "title": "【初心者向け/ITスクール 65日】Pythonの基礎一覧3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0zOSMsOA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252065%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E4%25B8%2580%25E8%25A6%25A73%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0zOSMsOA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252065%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E4%25B8%2580%25E8%25A6%25A73%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tonio_26/articles/03998b42a4e800",
          "author": "tonio_26",
          "description": "今回はVSCode上でPyTorchのインストールする方法について解説します。\n後半では、私がインストール時に躓いた点とその解決策を紹介します。\n\n はじめに\nPyTorchはオープンソースの機械学習ライブラリであり、特にニューラルネットワークの設計やトレーニング、評価を行う際に利用されます。\nこれから解説する方法はmac(M2)環境下におけるVSCode上でpipによるインストールを行う方法を取り扱います。\n公式サイトによるダウンロードの一連の流れはこちら\nhttps://pytorch.org/get-started/locally/\n\n インストール方法\n\n\nPyTorch公式サイ...",
          "link": "https://zenn.dev/tonio_26/articles/03998b42a4e800",
          "publishedOn": "2023-10-19T08:25:44.000Z",
          "wordCount": 353,
          "title": "Python-PyTorch初心者が躓くポイント",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GQmpWNe2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python-PyTorch%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E8%25BA%2593%25E3%2581%258F%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonio_26%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GQmpWNe2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python-PyTorch%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E8%25BA%2593%25E3%2581%258F%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonio_26%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kawamottyan/articles/86fe1695d84bd8",
          "author": "kawamottyan",
          "description": "概要\n地方競馬における3連服5頭ボックスに最適化した競馬予測モデルを作成し、予測しやすいレース傾向を可視化する。\nデータ\n\n\n地方競馬DATAの有料データ\n\nnetkeibaのスクレイピングデータ\n\nLightGBM\n予測したいデータは上位3頭と少ないので、偏ったデータをサンプリングしやすいブースティングモデルを使用する。\n検証方法\n2010年から2019年のデータを5-Fold交差検証を行う。\n評価指標\n2020年から2022年のデータにおいて、下記の平均を算出する。\n\n回収率(ランキング予想上位5頭に対して3頭の組み合わせ全10通りを100円ずつ買ったと仮定して、それに対する払い戻し...",
          "link": "https://zenn.dev/kawamottyan/articles/86fe1695d84bd8",
          "publishedOn": "2023-10-19T07:09:10.000Z",
          "wordCount": 427,
          "title": "競馬予測モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fnb5oJEo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E9%25A6%25AC%25E4%25BA%2588%25E6%25B8%25AC%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kawamottyan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1AycFE5VW9INnQ1N09DNDBTSjV1Wms5Nzg4RUV6SWM4RDNpWkc4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fnb5oJEo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E9%25A6%25AC%25E4%25BA%2588%25E6%25B8%25AC%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kawamottyan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1AycFE5VW9INnQ1N09DNDBTSjV1Wms5Nzg4RUV6SWM4RDNpWkc4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mesummery/articles/27b993c83d056b",
          "author": "Na",
          "description": "はじめに\nこの記事では、3日間でテック記事のAI要約・翻訳メディアをつくる個人開発で利用した\n\nOpenAI API\nLangChain\n\nの具体的な実装と利用コストについて触れていきます。\nOpenAI APIとLangChainとは...\n\n OpenAI API\nOpenAI APIは、OpenAIという人工知能の研究・開発・普及を目的とした団体が提供するAPIです。このAPI は、自然言語とコードの理解または生成を必要とするタスクに利用することができます。\n\n LangChain\nOpenAIが提供するGPT-3のような大規模言語モデル（Large Language Mode...",
          "link": "https://zenn.dev/mesummery/articles/27b993c83d056b",
          "publishedOn": "2023-10-19T03:00:00.000Z",
          "wordCount": 3547,
          "title": "OpenAI APIとLangChainを用いた記事の翻訳・要約メディアのつくり方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c0-rO-xX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520API%25E3%2581%25A8LangChain%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%25BB%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Na%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNDAxOGU2NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c0-rO-xX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520API%25E3%2581%25A8LangChain%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%25BB%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Na%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNDAxOGU2NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taniii_shio/articles/b75315740b14dd",
          "author": "Naoto Shioya",
          "description": "環境\n\nOS: windows11, WSL(Ubuntu 22.04.2 LTS)\nバージョン管理: asdf v0.13.1\n仮想環境、パッケージ管理: poetry version 1.1.14\n\n\n 手順\n\n asdfでpythonをインストール\n\nWSL上のubuntuで依存関係をインストール\n\nsudo apt update; sudo apt install build-essential libssl-dev zlib1g-dev \\\nlibbz2-dev libreadline-dev libsqlite3-dev curl \\\nlibncursesw5-dev x...",
          "link": "https://zenn.dev/taniii_shio/articles/b75315740b14dd",
          "publishedOn": "2023-10-19T02:00:39.000Z",
          "wordCount": 212,
          "title": "asdf, python環境構築手順メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UkBp2Etp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:asdf%252C%2520python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UkBp2Etp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:asdf%252C%2520python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/chari/articles/aws_lambda_powertools_chalice_setup",
          "author": "wtkmn",
          "description": "内容について\n\n 扱うもの\nAWS Lambda Powertoolsの以下の設定方法\n\nLogger\nTracer\n\n\n 扱わないもの\n\nLoggerやTracerの使い方そのもの\nAWS Lambda Powertools の上記以外の機能 (Parser, Metrics, etc ...)\n\n\n 背景\nChalice は、Pythonを利用してAWS上に簡単にServerlessなAPIを構築するためのフレームワークです。\n書き心地は Flask に近く、API Gatewayだけでなく、SQS/S3等のevent triggerにも対応しており、ポリシーも一定自動で設定して...",
          "link": "https://zenn.dev/chari/articles/aws_lambda_powertools_chalice_setup",
          "publishedOn": "2023-10-18T17:07:58.000Z",
          "wordCount": 1378,
          "title": "ChaliceにAWS Lambda Powertoolsを組み込む方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7NweXQXn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chalice%25E3%2581%25ABAWS%2520Lambda%2520Powertools%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wtkmn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjU1MTllOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7NweXQXn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chalice%25E3%2581%25ABAWS%2520Lambda%2520Powertools%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wtkmn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjU1MTllOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nari007/articles/232c1b4d9bdb10",
          "author": "Nari",
          "description": "はじめに\nMicorsoftが公開しているAutoGenを簡単に試してみました。\nAutoGenとは ※翻訳文\n相互に対話してタスクを解決できる複数のエージェントを使用したLLMアプリケーションの開発を可能にするフレームワークです。AutoGenエージェントはカスタマイズ可能で会話可能で、人間の参加をシームレスに許可します。これらは、LLM、人間による入力、およびツールの組み合わせを使用するさまざまなモードで動作できます。\nとのことです。\n詳細は下記ページをチェックしてみてください。\nhttps://github.com/microsoft/autogen\n\n 参考ドキュメント\n公式...",
          "link": "https://zenn.dev/nari007/articles/232c1b4d9bdb10",
          "publishedOn": "2023-10-18T15:55:45.000Z",
          "wordCount": 431,
          "title": "AutoGenを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---jL_iC2g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:AutoGen%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODhiYWFmNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---jL_iC2g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:AutoGen%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODhiYWFmNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/dencyu/articles/7c018ae166e278",
          "author": "でんちゅー",
          "description": "記事を書いた背景\n企業内で業務自動化システムを作成するときに、Microsoft Teams(以下、Teams)やMicrosoft SharePoint(以下、SharePoint)，Microsoft OneDriveに対する処理を自動化したいというニーズは意外と存在する。\n単純にTeamsに通知したい程度のユースケースであればpymsteams等のライブラリの利用だけで完結するが、TeamsやSharePoint，OneDrive等にPythonからファイルを自動アップロードしたい等のユースケースにおいてはMicrosoft Graph APIの利用が必要になってくるため、ハー...",
          "link": "https://zenn.dev/dencyu/articles/7c018ae166e278",
          "publishedOn": "2023-10-18T15:21:59.000Z",
          "wordCount": 2217,
          "title": "PythonからSharePointにファイルアップロードしたいッッ！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WIozvexD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589SharePoint%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2583%2583%25E3%2583%2583%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A7%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2585%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzc4NjQ0NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WIozvexD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589SharePoint%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2583%2583%25E3%2583%2583%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A7%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2585%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzc4NjQ0NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kazu_gor/articles/4371c47459be79",
          "author": "kazu-gor",
          "description": "結論\nAggバックエンドを使用する\nMatplotlibには、グラフィカルディスプレイが不要なAggバックエンドというものがあるらしく、このバックエンドを使用すると、エラーを回避できた。\nimport matplotlib\nmatplotlib.use('Agg')\n\n きっかけ\n下記エラーが出た。\nSSH経由でUbuntuに接続しており、Displayを接続していないために起こったと思う。\nTraceback (most recent call last):\n  File \"./XXXXXXXXXXXXX.py\", line 472, in <module>\n    f...",
          "link": "https://zenn.dev/kazu_gor/articles/4371c47459be79",
          "publishedOn": "2023-10-18T15:00:00.000Z",
          "wordCount": 318,
          "title": "Matplotlibで作成したグラフをDisplayに表示しないようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B17kCDBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Matplotlib%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592Display%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazu-gor%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3Nzg2MjgyMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B17kCDBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Matplotlib%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592Display%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazu-gor%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3Nzg2MjgyMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/eldorado215/articles/23f11590587e59",
          "author": "Hyon🇰🇷",
          "description": "はじめに\n今日は、ITスクールに通った64日目の日で、今日学んだ知識を記事にシェアしたいと思います。本記事が、ITを勉強を始めた方々にもロードマップになればいいと思います。\n今日は、昨日の続きで、Pythonの文法を勉強し、直接活用する練習をしました。\n\n Javaとの違い\n\n\nNone : javaのnull\n\nself : thisと同じ約わりですが、省略が不可能！\n\nメソッド、関数のOverloadが不可\nDestructor: PythonもヒープメモリはGCが管理しますが、オブジェクトがメモリから離れる前に、Destrcutorがcall backされます。\n\ndef __...",
          "link": "https://zenn.dev/eldorado215/articles/23f11590587e59",
          "publishedOn": "2023-10-18T09:55:05.000Z",
          "wordCount": 1953,
          "title": "【初心者向け/ITスクール 64日】Pythonの基礎一覧２(関数) および(Number Baseball)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QYhKe6mP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252064%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E4%25B8%2580%25E8%25A6%25A7%25EF%25BC%2592%2528%25E9%2596%25A2%25E6%2595%25B0%2529%2520%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%2528Number%2520Baseball%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QYhKe6mP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252064%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E4%25B8%2580%25E8%25A6%25A7%25EF%25BC%2592%2528%25E9%2596%25A2%25E6%2595%25B0%2529%2520%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%2528Number%2520Baseball%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/crandim_r_and_d/articles/231018_package_extendable_python_app_packaging",
          "author": "tokoi",
          "description": "何が嬉しいのか/やりたいこと\n要件1. 実行中にパッケージを追加できるようなPythonアプリ実行環境を作りたい。\n要件2. Pythonインストーラは使いたく無い。\n※要件1は、PyInstallerでは対応するのが難しそう。\n\n 必要なもの\n\n Python埋め込み可能パッケージ, get-pip.pyを準備\n\n\nPythonパッケージ配布サイトの「embeddable package」と表記されているものを取得して、pythonディレクトリに解凍\n\npython/python{バージョン番号}._pth の最終行(# import...)の#を削除して有効化\n\nhttps://...",
          "link": "https://zenn.dev/crandim_r_and_d/articles/231018_package_extendable_python_app_packaging",
          "publishedOn": "2023-10-18T01:50:19.000Z",
          "wordCount": 305,
          "title": "実行中にパッケージ追加可能なPythonアプリパッケージング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7yFA2APH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E8%25A1%258C%25E4%25B8%25AD%25E3%2581%25AB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E8%25BF%25BD%25E5%258A%25A0%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAPython%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25A0R%2526D%25E9%2583%25A8%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:tokoi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5Y2NiZGRkODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7yFA2APH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E8%25A1%258C%25E4%25B8%25AD%25E3%2581%25AB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E8%25BF%25BD%25E5%258A%25A0%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAPython%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25A0R%2526D%25E9%2583%25A8%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:tokoi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5Y2NiZGRkODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/pe/books/3bee96e7c89ece",
          "author": "ぺ",
          "description": "本記事は「ゼロから作る Deep Learning」の勉強記録としてまとめたものである。本記事中のコードは書籍中の github のURLから参照していただきたい。",
          "link": "https://zenn.dev/pe/books/3bee96e7c89ece",
          "publishedOn": "2023-10-18T00:53:54.000Z",
          "wordCount": 88,
          "title": "「ゼロから作る Deep Learning」 をまとめてみた",
          "imageUrl": "https://static.zenn.studio/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/pe/articles/ea8a02f5968437",
          "author": "ぺ",
          "description": "はじめに\n本記事は筆者が「効果検証入門」をメイン言語である Python を用いて書籍中の例の一部を実践した記録である。また、各検証において用いられている検証手法に関連する事柄について短くまとめた。Python のコードは https://github.com/nekoumei/cibook-python のコードを参考にさせていただいた。実行環境は Jupyter notebook であり、 Python 3.10 で実証した。\n\n 目標\n\n作中ではRでコードが書かれているが、Qiitaなどの技術系の記事ではPythonで書き直されているサイトもあるのでそれも参考にする\nまずは理論...",
          "link": "https://zenn.dev/pe/articles/ea8a02f5968437",
          "publishedOn": "2023-10-18T00:37:12.000Z",
          "wordCount": 11121,
          "title": "「効果検証入門」をPython コードで理解してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aZpZmZ97--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E5%258A%25B9%25E6%259E%259C%25E6%25A4%259C%25E8%25A8%25BC%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%25E3%2582%2592Python%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMTRjMDlkNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aZpZmZ97--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E5%258A%25B9%25E6%259E%259C%25E6%25A4%259C%25E8%25A8%25BC%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%25E3%2582%2592Python%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMTRjMDlkNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/rchiji/books/201199bf94a67e",
          "author": "Ryota Chijimatsu",
          "description": "生物医学領域の画像（顕微鏡写真やMRIなど）をPythonで扱う例や機械学習の例を紹介する。\n\nこちらのサイトを解説したもの。適宜追加の情報は加えている。\nhttps://haesleinhuepf.github.io/BioImageAnalysisNotebooks/intro.html\n※ ただし、Pythonの初歩、機械学習の原理の章は解説しない。\n\n使用するデータはGithubページから取得可能。dataフォルダのものを使用する。\nhttps://github.com/haesleinhuepf/BioImageAnalysisNotebooks\n\n実行環境はWindows11。Windows版のAnacondaを使用している。\nPython versionは最新版では動かない箇所があるかもしれないので適宜変更してほしい。\n\n※ この本は自分用に書きかけているもので随時更新します。自分を追い込むために公開しています。\n\n~~~\n本書では、BioImageAnalysisNotebooks ウェブサイトのコンテンツに基づいて、バイオイメージ解析の基本を紹介する。BioImageAnalysisNotebooks は Robert Haaseらによって提供されており、詳細な情報は[公式ウェブサイト](https://haesleinhuepf.github.io/BioImageAnalysisNotebooks/intro.html)で提供されている。\n~~~",
          "link": "https://zenn.dev/rchiji/books/201199bf94a67e",
          "publishedOn": "2023-10-17T14:32:27.000Z",
          "wordCount": 468,
          "title": "Bio-image Analysis Notebooks",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P4GOpP7C--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iMzhhM2UyYzQzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P4GOpP7C--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iMzhhM2UyYzQzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/eldorado215/articles/41b8cf24d43ae2",
          "author": "Hyon🇰🇷",
          "description": "はじめに\n今日は、ITスクールに通った63日目の日で、今日学んだ知識を記事にシェアしたいと思います。本記事が、ITを勉強を始めた方々にもロードマップになればいいと思います。\n今日は、現在プログラミング言語でJavaを超えて、1位になっているPythonを勉強しました。\nデーターなどを扱うことに特化された言語で、今後PythonでParsingする実習をある予定です。\nまず、その一歩として、Pythonの基礎文法を学び、少しなれる時間を持ちました。\n\n 出力\n\n -- coding: utf-8 --\nPython2まではASCIIにエンコーディングされるので、# -*- coding...",
          "link": "https://zenn.dev/eldorado215/articles/41b8cf24d43ae2",
          "publishedOn": "2023-10-17T10:45:02.000Z",
          "wordCount": 2247,
          "title": "【初心者向け/ITスクール 63日】Pythonの基礎文法一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SNDbVSzb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252063%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E6%2596%2587%25E6%25B3%2595%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SNDbVSzb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%252FIT%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AB%252063%25E6%2597%25A5%25E3%2580%2591Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E6%2596%2587%25E6%25B3%2595%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyon%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczOTFmMzVlZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/techflagcorp/articles/8d6327311e1e9f",
          "author": "dagger1",
          "description": "[小ネタ]uvicornとlogging\nFastAPIと組み合わせてよく使われるuvicornですが、loggingで軽くハマったのでまとめておきます。\n\n uvicornコマンドで起動する場合\nuvicornは内部でloggingを使ってログを吐きます。下のシンプルなコードで試してみます。\n\nmain.py\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/hello/{name}\")\ndef hello(name: str) -> dict:\n    s = f\"Hello, {name}!\"\n    ret...",
          "link": "https://zenn.dev/techflagcorp/articles/8d6327311e1e9f",
          "publishedOn": "2023-10-17T03:43:17.000Z",
          "wordCount": 1950,
          "title": "[小ネタ]uvicornとlogging",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--F_NXw4Eo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255Duvicorn%25E3%2581%25A8logging%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--F_NXw4Eo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255Duvicorn%25E3%2581%25A8logging%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuki6flower/articles/ca145854ed55b3",
          "author": "yuki6flower",
          "description": "はじめに\nFletはPythonでFlutterアプリを構築できるフレームワークです。\nボタンやテキストボックスといったGUIとしての部品だけでなく、異なる画面間を遷移するための部品も揃ってます。\nただ、その取り扱いにはけっこう苦戦したので、その時に得た知見をを共有します。\n\n 読者の想定\nFletの公式ドキュメントの「Navigation and routing」を読んで、以下を理解している\n\n\npage.viewsの最後の要素が画面に表示される\n\n\npage.views：ft.Viewオブジェクトのリスト\n\n\n\npage.go()などでRouteが変更される時にpage.on_r...",
          "link": "https://zenn.dev/yuki6flower/articles/ca145854ed55b3",
          "publishedOn": "2023-10-16T16:27:47.000Z",
          "wordCount": 2321,
          "title": "Fletの画面遷移におけるTIPS",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mpWs-xJ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flet%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E9%2581%25B7%25E7%25A7%25BB%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BTIPS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki6flower%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmVRMlBMMmtObGpxaWNJQndlbDN0RTlhRm1scWhKVXVlSkx6Z2NrTW1NN2pvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mpWs-xJ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flet%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E9%2581%25B7%25E7%25A7%25BB%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BTIPS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki6flower%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmVRMlBMMmtObGpxaWNJQndlbDN0RTlhRm1scWhKVXVlSkx6Z2NrTW1NN2pvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/turing_motors/articles/5b56edb7da1d30",
          "author": "colum2131",
          "description": "Turing株式会社の自動運転・AIモデル開発チームの岩政(@colum2131)です。\nTuringは2030年までに完全自動運転の達成を目指しており、自動運転AI開発から車両開発など、取り組むことは多岐に渡っています。\n今回の話は、自動運転AI開発中に出た問題と、ひとまずの解決方法になります。より良い解決策があれば、教えてもらいたいです🙏\n\n Transfomer-EncoderをONNXに変換したい\nONNX（Open Neural Network eXchange）は、機械学習・深層学習モデルを表現するために構築されたオープンフォーマットです。\nPyTorchやTensorFlo...",
          "link": "https://zenn.dev/turing_motors/articles/5b56edb7da1d30",
          "publishedOn": "2023-10-16T09:00:01.000Z",
          "wordCount": 3615,
          "title": "ONNXモデルの変換エラーを解決: PyTorchのTransformerモデルの再実装方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YwUv7s2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ONNX%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%253A%2520PyTorch%25E3%2581%25AETransformer%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%2586%258D%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:colum2131%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZDZiMjhmMmEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YwUv7s2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ONNX%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%253A%2520PyTorch%25E3%2581%25AETransformer%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%2586%258D%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:colum2131%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZDZiMjhmMmEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/chiman/articles/246b309925e65d",
          "author": "kinosuke",
          "description": "ゆめねこさんが行っている上位解法まとめが素晴らしくこれに習い私もCommonlit2のまとめを行いました。LLMが流行り始めてから初めてのNLPコンペで、新たなモデルを用いた解法が出てくると参加前は思ってましたが蓋を開けてみると今まで通りdeberta-v3-largeが最強でした。\nただ、1stのチームはデータの増強目的でLLMを活用しておりこのテクニックのみで優勝しているのでこれからの戦い方を大きくかえるかも知れません。\n(ルールの確認はしっかりと行う必要がありそう)\nちなみに弊チームは2106チーム中61thでした。(※スコア確定前)\n一緒に戦ってくれたチームメイトに感謝です🙇‍...",
          "link": "https://zenn.dev/chiman/articles/246b309925e65d",
          "publishedOn": "2023-10-16T03:28:16.000Z",
          "wordCount": 934,
          "title": "kaggle Commonlit2　上位解法まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DCoqj3Xv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kaggle%2520Commonlit2%25E3%2580%2580%25E4%25B8%258A%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kinosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5YTBmZDZkZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DCoqj3Xv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kaggle%2520Commonlit2%25E3%2580%2580%25E4%25B8%258A%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kinosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5YTBmZDZkZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ncdc/articles/ac66eaec6046ee",
          "author": "いばらき",
          "description": "はじめに\nPythonで作っているアプリのパッケージ管理にpoetryを使っていたのですが、ryeに変更してみました。この記事はその際のメモになります。\nryeの使い方自体は特に触れませんが、公式ページくらいは貼っておきます。\nhttps://rye-up.com/\n\n なぜ、poetryからryeに乗り換えようと思ったか？\npyenvを気にしなくて良くなるので、環境構築の手間が減ると思ったからです。\npoetryの場合はPython自体の管理が別途必要なのでpyenvも使っていたのですが、環境構築とかよく分からないエラーが出ることがあり面倒くさいこともあったので、全部まとめて管理で...",
          "link": "https://zenn.dev/ncdc/articles/ac66eaec6046ee",
          "publishedOn": "2023-10-16T02:50:00.000Z",
          "wordCount": 1151,
          "title": "Pythonのパッケージ管理をpoetryからryeへ移行した手順のメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cxPPTIO8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592poetry%25E3%2581%258B%25E3%2582%2589rye%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E6%2589%258B%25E9%25A0%2586%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cxPPTIO8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592poetry%25E3%2581%258B%25E3%2582%2589rye%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E6%2589%258B%25E9%25A0%2586%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyga2c/articles/pd_datetime_period",
          "author": "hyga2c",
          "description": "pandasで時系列データを取り扱った際の気付き諸々をまとめていく。（随時更新予定）\n\n 1. pandas DataFrameで日付データをDatetime indexとして取り扱う\n日付ベースのデータをもとに集計する場合は、日付データをDatetime indexとして取り扱った方が何かと便利と思われる。\n\n 1.1. 利点 Group_byによる集計が簡単\nたとえば月次/四半期での集計は pd.Grouper(freq='param') を用いて実施できる。\nimport pandas as pd\nimport numpy as np\nfrom datetime import da...",
          "link": "https://zenn.dev/hyga2c/articles/pd_datetime_period",
          "publishedOn": "2023-10-15T13:23:27.000Z",
          "wordCount": 1600,
          "title": "PythonのDataFrameで日付を取り扱う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GPMf4W-8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEDataFrame%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E5%258F%2596%25E3%2582%258A%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hyga2c%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhZGVkNzFjOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GPMf4W-8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEDataFrame%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E5%258F%2596%25E3%2582%258A%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hyga2c%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhZGVkNzFjOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hk_ilohas/articles/normal-dist-transform",
          "author": "HK_ilohas",
          "description": "はじめに\nこの記事では、[0,1) の一様乱数から標準正規分布 \\mathcal{N}(0,1) に従う正規乱数を生成する方法について説明し、Python で簡易的に実装します。また、正規乱数から多次元正規乱数を生成する方法についても取り扱います。\n今回の元ネタは、参考文献でも挙げている伏見正則『乱数』です。これは日本語で書かれた数少ない乱数についての入門書で、長い間絶版になっていました。ところが、なんと先日ちくま学芸文庫で復刊したことでようやく手に入れることができました！　この本では、メルセンヌ・ツイスター以前の内容が取り扱われていて、悪戦苦闘している歴史がよくわかりました。\n\n ...",
          "link": "https://zenn.dev/hk_ilohas/articles/normal-dist-transform",
          "publishedOn": "2023-10-15T11:10:00.000Z",
          "wordCount": 4945,
          "title": "一様乱数から正規乱数を生成する方法【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CUNuEQX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E6%25A7%2598%25E4%25B9%25B1%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E6%25AD%25A3%25E8%25A6%258F%25E4%25B9%25B1%25E6%2595%25B0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CUNuEQX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E6%25A7%2598%25E4%25B9%25B1%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E6%25AD%25A3%25E8%25A6%258F%25E4%25B9%25B1%25E6%2595%25B0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/enterrocken/articles/e6ae6ddcc121d8",
          "author": "yuki.hirano",
          "description": "はじめに\n初めまして。\n都内IT企業で、データアルゴリズムチームのエンジニアをしております、Noraです。\n今回は、X(旧Twitter）とOpenAI APIを活用して、Xへの自動投稿ボットを構築します。\n定期実行は、AWSのLambda + EventBridgeというシンプルなアーキテクチャで実現しています。\n「Xをはじめとした、SNS運用をしたいけど、毎日投稿するのはめんどくさいなー。。」という方全てにおすすめの記事となっております。！\nでは、ぜひご覧ください！\n↓完成イメージ\n\n\n アーキテクチャ\n\n\n 実装手順\n\nXに投稿するメソッドをPythonで実装（Zenn API...",
          "link": "https://zenn.dev/enterrocken/articles/e6ae6ddcc121d8",
          "publishedOn": "2023-10-15T07:47:39.000Z",
          "wordCount": 1783,
          "title": "【X(Twitter) Bot】Ｘの運用がめんどくさい全ての人へ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lWzc5JZN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590X%2528Twitter%2529%2520Bot%25E3%2580%2591%25EF%25BC%25B8%25E3%2581%25AE%25E9%2581%258B%25E7%2594%25A8%25E3%2581%258C%25E3%2582%2581%25E3%2582%2593%25E3%2581%25A9%25E3%2581%258F%25E3%2581%2595%25E3%2581%2584%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AE%25E4%25BA%25BA%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki.hirano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXh1MGVFSGV5anMwelFidEdMZE9QZTRNTG1JNThCYlo4cTRTblNHdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lWzc5JZN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590X%2528Twitter%2529%2520Bot%25E3%2580%2591%25EF%25BC%25B8%25E3%2581%25AE%25E9%2581%258B%25E7%2594%25A8%25E3%2581%258C%25E3%2582%2581%25E3%2582%2593%25E3%2581%25A9%25E3%2581%258F%25E3%2581%2595%25E3%2581%2584%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AE%25E4%25BA%25BA%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki.hirano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXh1MGVFSGV5anMwelFidEdMZE9QZTRNTG1JNThCYlo4cTRTblNHdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/huraipan/articles/0e78b7fe024ab3",
          "author": "huraipan",
          "description": "モジュールとは？\nモジュールはプログラムを構成するコンポーネントで、関連するデータと関数を 1 つにまとめたユニットを意味します。\nつまり実装したい機能を直接作成することなく、すでに作成されたファイルを取得することで、コードの可読性を高め、量を減らすことができます。\nrandomモジュールを利用して調べてみます。\n\n\n\n ランダムモジュール\nrandomモジュールを利用するためには、次のようなコードを作成する必要があります。\nimport random\n\nこれでランダムモジュールを書くための準備が完了しました。\n\n\n\n サイコロ転がし\nそれではランダムモジュールを利用してサイコロ転が...",
          "link": "https://zenn.dev/huraipan/articles/0e78b7fe024ab3",
          "publishedOn": "2023-10-15T07:43:25.000Z",
          "wordCount": 195,
          "title": "[Python] [Python] ランダムモジュール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kBSfAqnf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%255BPython%255D%2520%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kBSfAqnf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%255BPython%255D%2520%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/karamawanu/articles/3347b89d8dd7ed",
          "author": "karamawanu",
          "description": "この数年来、グーグルの各種手続きが極端に煩雑化した。\nopenai chatcompletion api と組み合わせるのに、gogole search API を使おうと思って調べてみた。\ngoogle custom search api は手続きは判りづらいが使い方は簡単だった。\n\n 事務手続き\napiの登録だけでは使えず、”検索エンジン”の定義を指定する必要がある。\nアカウント作成、支払い設定等については割愛する。\n\n APIの利用登録\n本件のためのgoogle cloudプロジェクトを作成する。\n作成済みのものを流用してもいいが、管理が煩雑かつ密結合なので、API専用のものを作成...",
          "link": "https://zenn.dev/karamawanu/articles/3347b89d8dd7ed",
          "publishedOn": "2023-10-15T04:52:16.000Z",
          "wordCount": 494,
          "title": "google custom search api",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--joBnojC2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:google%2520custom%2520search%2520api%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--joBnojC2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:google%2520custom%2520search%2520api%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hayap/articles/c0bd2ece92cae7",
          "author": "HayaP(kohei hayakawa)",
          "description": "はじめに\nこんにちは、はやぴー（@HayaP）です。\n前回の記事ではPythonスクリプトからAmazon Bedrockを利用してみましたが、今回はAWS LambdaからAmazon Bedrockを動かしてみたいと思います。\n\n 前提\n前提として、Amazon BedrockでJurassic-2 Midが使用可能になっていることが必要です。\n実施手順は、過去の記事Amazon BedrockをPythonスクリプトから利用してみたにありますので、ご参照ください。\n\n TL;DR (忙しい人用)\n\nAmazon BedrockのJurassic-2 MidモデルをAWS Lam...",
          "link": "https://zenn.dev/hayap/articles/c0bd2ece92cae7",
          "publishedOn": "2023-10-15T02:13:23.000Z",
          "wordCount": 1083,
          "title": "Amazon BedrockをAWS Lambda上で呼び出してみた（API化）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zYv8pxsS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E3%2582%2592AWS%2520Lambda%25E4%25B8%258A%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588API%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaP%2528kohei%2520hay...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MWJjYTRlZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zYv8pxsS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E3%2582%2592AWS%2520Lambda%25E4%25B8%258A%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588API%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaP%2528kohei%2520hay...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MWJjYTRlZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hayap/articles/23be87f9ddeb0e",
          "author": "HayaP(kohei hayakawa)",
          "description": "はじめに\nこんにちは、はやぴー（@HayaP）です。\nついに、Amazon BedrockがGAされましたね！\n東京リージョンでも、一部のモデルが使用可能になりました。\n今回はPythonスクリプトでAmazon Bedrockを利用してみます。\n理由として、Lambdaから実行するケースや、Webアプリケーションに組み込むケースが多そうだなぁと感じているからです。（Lambdaで実行するハンズオンは別で記事を書く予定です）\n\n 対象読者\n\nAmazon Bedrockに興味がある方\nPythonスクリプトで、Amazon Bedrockを利用したい方\nAWS Lambdaでの実装を...",
          "link": "https://zenn.dev/hayap/articles/23be87f9ddeb0e",
          "publishedOn": "2023-10-15T02:03:27.000Z",
          "wordCount": 2146,
          "title": "Amazon BedrockをPythonスクリプトから利用してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gI7NLQva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E3%2582%2592Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaP%2528kohei%2520hay...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MWJjYTRlZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gI7NLQva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Bedrock%25E3%2582%2592Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaP%2528kohei%2520hay...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MWJjYTRlZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ohke/articles/4a65d4b78637bc",
          "author": "ohke",
          "description": "FastAPIなどのフレームワークと組み合わせて使われることが多い印象のPydanticですが、それ単体でdataclassの高機能版として使えますよ、という紹介です。\n\n Pydanticとは\nPythonでおそらく最も使われているバリデーションのためのライブラリです。型アノテーションを用いてバリデーションやシリアライズを行なってくれます。\nhttps://docs.pydantic.dev/latest/\nhttps://github.com/pydantic/pydantic\n\n 最初のモデル\nまずは概観です。\nBaseModelを継承させたクラスに、dataclassのように型ア...",
          "link": "https://zenn.dev/ohke/articles/4a65d4b78637bc",
          "publishedOn": "2023-10-14T14:24:58.000Z",
          "wordCount": 1449,
          "title": "バリデーションとシリアライズができるdataclassとしてPydanticを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j7W7gjQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bdataclass%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6Pydantic%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzI1YWRjYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j7W7gjQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bdataclass%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6Pydantic%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzI1YWRjYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ssfuno/articles/56e2577ee794f3",
          "author": "すふー",
          "description": "イントロダクション\n教科書やテレビなどで、地震の分布図を一度は目にしたことのある方も多いのではないでしょうか。この記事では、USGS（アメリカ地質調査所）の公開している地震情報と、PythonのライブラリであるPyGMTを使って作図する方法を紹介します。\n\n2018〜2022年のマグニチュード5より大きい地震（データ出典：USGS）\n地震情報をダウンロードするには、USGSや気象庁のサービスを利用するなどの方法がありますが、USGSの提供しているAPIを利用すると、比較的に簡単に情報を取得することができます。\nまた、Pythonで地図上にデータをプロットするのにはいくつか選択肢があり...",
          "link": "https://zenn.dev/ssfuno/articles/56e2577ee794f3",
          "publishedOn": "2023-10-14T10:07:16.000Z",
          "wordCount": 1444,
          "title": "PyGMTとUSGSのAPIを使って地震の分布を描いてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ksonxj95--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyGMT%25E3%2581%25A8USGS%25E3%2581%25AEAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%259C%25B0%25E9%259C%2587%25E3%2581%25AE%25E5%2588%2586%25E5%25B8%2583%25E3%2582%2592%25E6%258F%258F%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ksonxj95--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyGMT%25E3%2581%25A8USGS%25E3%2581%25AEAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%259C%25B0%25E9%259C%2587%25E3%2581%25AE%25E5%2588%2586%25E5%25B8%2583%25E3%2582%2592%25E6%258F%258F%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mameta29/articles/88ef39476b79fc",
          "author": "mameta29",
          "description": "自分はpython初心者だがipfshttpclientを使用することで簡単にアップロードすることができたのでそれを記録する。\n\n 事前想定\n\n\nipfs daemonを起動できる\n\n簡単に説明するとipfsのノードを起動することができるというもの。\nなので起動中はファイルのアップロードや参照は自由にできるが、自分でアップロードしたファイルは pin止めしないと、ipfsノードを落としてしまうと参照できなくなるので注意が必要。\nipfs daemonでノードを起動するにはipfsをインストールする必要がある。また今回ipfshttpclientを使用するにはv0.4.0 ~ v0.8.0...",
          "link": "https://zenn.dev/mameta29/articles/88ef39476b79fc",
          "publishedOn": "2023-10-14T10:01:06.000Z",
          "wordCount": 395,
          "title": "PythonでIPFSにJsonファイルをアップロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pqCglIsA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7IPFS%25E3%2581%25ABJson%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mameta29%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FzbE45OV9GR0RoRWJpbGxfZHl0dGNTcUhmQTd4VUh2bFo0TDZNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pqCglIsA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7IPFS%25E3%2581%25ABJson%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mameta29%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FzbE45OV9GR0RoRWJpbGxfZHl0dGNTcUhmQTd4VUh2bFo0TDZNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/misora/articles/8853137fd74212",
          "author": "RISUman",
          "description": "「pyline_notify」 とは？\n簡潔には 「任意のpythonスクリプトにデコレーターをつけることで、処理の開始と終了(エラー)をLINE notifyを用いて通知するPythonパッケージ」 になります。\nhttps://github.com/lovelovetrb/pyline_notify\n\n 制作の動機\n自分は自然言語処理を研究する研究室に所属しており、機械学習におけるモデルの学習や推論を行うようなPythonスクリプトを扱っています。\n機械学習における処理は基本的に数時間から数日など処理にとても時間のかかるもので、時間をかけて実行しても処理がうまくいかずエラーが発生...",
          "link": "https://zenn.dev/misora/articles/8853137fd74212",
          "publishedOn": "2023-10-14T08:14:32.000Z",
          "wordCount": 356,
          "title": "Pythonの関数実行の開始と終了をLINEで通知する「pyline_notify」を作成してみた！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1rohJYLy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AE%25E9%2596%258B%25E5%25A7%258B%25E3%2581%25A8%25E7%25B5%2582%25E4%25BA%2586%25E3%2582%2592LINE%25E3%2581%25A7%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2580%258Cpyline_notify%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:RISUman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxZTVhYzUwMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1rohJYLy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AE%25E9%2596%258B%25E5%25A7%258B%25E3%2581%25A8%25E7%25B5%2582%25E4%25BA%2586%25E3%2582%2592LINE%25E3%2581%25A7%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2580%258Cpyline_notify%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:RISUman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxZTVhYzUwMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tsuchi417/articles/83d2f926a3508e",
          "author": "tsuchi",
          "description": "Pythonでcsvファイルの入出力を頻繁に行うのでまとめます（臨時追加するかもです）。\n\n 前提\nimport csv をします。\n\nmain.py\nimport csv\n\n\n 入力\n\n 一次元配列\n\nin.csv\n1,2,3,4,5\n\n\nmain.py\ndata = []\nwith open(\"out.csv\", mode=\"r\") as file:\n    reader = csv.reader(file)\n    for row in reader:\n        data = row\n\n\n 二次元配列\n\nin.csv\n1,2\n3,4\n5,6\n\n\nmain.py\ndata = ...",
          "link": "https://zenn.dev/tsuchi417/articles/83d2f926a3508e",
          "publishedOn": "2023-10-14T06:50:25.000Z",
          "wordCount": 981,
          "title": "Python による csv の入出力まとめ（チートシート）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vAs8hGOE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%2520csv%2520%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25EF%25BC%2588%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0x0MHpGV0xwUF9aQmgzcThvc00xVUl5bGdJdHZjVnluSHdhTTdSaERoOHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vAs8hGOE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%2520csv%2520%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25EF%25BC%2588%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0x0MHpGV0xwUF9aQmgzcThvc00xVUl5bGdJdHZjVnluSHdhTTdSaERoOHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/a_adachi/articles/01585a26e7dcdd",
          "author": "a-adachi",
          "description": "isort拡張機能が繰り返しクラッシュする\nVSCodeを立ち上げると以下のようなエラーが表示されるとの相談を受けました。\nThe isort server crashed 5 times in the last 3 minutes. The server will not be restarted.\n\n 暫定的な解決策\nisortのバグのようですが、詳細はわかりませんでした。相談者はimport文のフォーマットは特に必要ないとのことだったので、とりあえず以下リンク先の通り機能を無効化することでエラーが出なくなりました。\nhttps://github.com/microsoft/vs...",
          "link": "https://zenn.dev/a_adachi/articles/01585a26e7dcdd",
          "publishedOn": "2023-10-13T08:38:28.000Z",
          "wordCount": 184,
          "title": "VSCodeのisort拡張機能が繰り返しクラッシュする場合の暫定的な解決策",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fosmun4v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25AEisort%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%258C%25E7%25B9%25B0%25E3%2582%258A%25E8%25BF%2594%25E3%2581%2597%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%259A%25AB%25E5%25AE%259A%25E7%259A%2584%25E3%2581%25AA%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:a-adachi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGI1NDg3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fosmun4v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25AEisort%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%258C%25E7%25B9%25B0%25E3%2582%258A%25E8%25BF%2594%25E3%2581%2597%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%259A%25AB%25E5%25AE%259A%25E7%259A%2584%25E3%2581%25AA%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:a-adachi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGI1NDg3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kt_n/articles/4e848bb1e5dbd6",
          "author": "kt_n",
          "description": "概要\n簡単なんだけど、何回でも調べてしまうPythonコードをまとめておく。\n随時更新していきたい。\n\n CSV読み込み\nimport csv\n\nwith open(csv_filepath, 'rt') as f:\n    # ヘッダーを飛ばす\n    header = next(csv.reader(f))\n    reader = csv.reader(f)\n    data = [row for row in reader]\n\n CSV書き込み\nimport csv\n\nwith open(csv_filepath, 'wt', newline=\"\", encoding='ut...",
          "link": "https://zenn.dev/kt_n/articles/4e848bb1e5dbd6",
          "publishedOn": "2023-10-13T04:09:33.000Z",
          "wordCount": 321,
          "title": "何度も調べてしまうPythonコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zaPgHVqM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%2595%25E5%25BA%25A6%25E3%2582%2582%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kt_n%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3ZDZhZmJmNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zaPgHVqM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%2595%25E5%25BA%25A6%25E3%2582%2582%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kt_n%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3ZDZhZmJmNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/os1ma/articles/8958aba961b665",
          "author": "oshima_123",
          "description": "OpenAI の文章生成 API（Chat Completions API）には、2023 年 6 月に「Function calling」という機能が追加されました。\nこの Function calling ですが、そのまま使おうとすると少し記述の手間が大きいと感じないでしょうか？\nこの記事では、Function calling をちょっと楽に使うため、Pydantic を使う方法を紹介します。\n\n Function calling とは\nまず、Function calling について簡単に説明します。\nFunction calling は例えば次のように実装します。\nOUTPUT_...",
          "link": "https://zenn.dev/os1ma/articles/8958aba961b665",
          "publishedOn": "2023-10-13T03:42:45.000Z",
          "wordCount": 2452,
          "title": "Function calling に Pydantic を使ってみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--45DE-vzr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Function%2520calling%2520%25E3%2581%25AB%2520Pydantic%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oshima_123%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjAzMGZmOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--45DE-vzr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Function%2520calling%2520%25E3%2581%25AB%2520Pydantic%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oshima_123%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjAzMGZmOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/waka07/articles/development-diary_1-3",
          "author": "Waka",
          "description": "作りたいシステム\n忙しい人のためのギフト提案型AI「AiSAP!(エイサップ)」\n忙しい社会人のために、AIが可能な限り素早く（ASAP: As Soon As Possible）、最適なギフトを提案してくれるWebサービス。\n※本記事の目的は個人開発の流れの紹介なので、アルゴリズムや技術の説明について正確性を欠いている箇所があるかもしれません。ご了承ください。\n（詳しい方はコメント等でご指摘いただけると幸いです）\n\n 推薦アルゴリズムとは\nこのシステムの肝となるのが「推薦アルゴリズム」です。\n「推薦アルゴリズム」とは、大量のアイテムの中から、様々なデータに基づいて、ユーザにおすすめ...",
          "link": "https://zenn.dev/waka07/articles/development-diary_1-3",
          "publishedOn": "2023-10-12T23:15:10.000Z",
          "wordCount": 203,
          "title": "【個人開発 #1-3】レコメンドシステムを作ってみた vol.3　〜推薦アルゴリズム「協調フィルタリング」〜",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sWNOKfO7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%2520%25231-3%25E3%2580%2591%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520vol.3%25E3%2580%2580%25E3%2580%259C%25E6%258E%25A8%25E8%2596%25A6%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%258C%25E5%258D%2594%25E8%25AA%25BF%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%258D%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Waka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMTFjYWNkY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sWNOKfO7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%2520%25231-3%25E3%2580%2591%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520vol.3%25E3%2580%2580%25E3%2580%259C%25E6%258E%25A8%25E8%2596%25A6%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%258C%25E5%258D%2594%25E8%25AA%25BF%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%258D%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Waka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMTFjYWNkY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/toki_mwc/articles/283ff142b7303e",
          "author": "toki_mwc",
          "description": "はじめに\nAI BunChoというAI小説作成支援サービスがあります。\n今回は、AI BunChoに使用されているモデルをPaperspace上で試してみました。\nGoogle Colab上で試している記事がとても参考になりました。\nhttps://note.com/npaka/n/n4bbc4a9f612e\n今回は、ChatGPTと会話しながら、メタ情報をインプットさせてから物語を生成するようにコードを作成します。\n\n ライブラリのインストール\nジュピターノートブックにコードを追加して、以下のコマンド実行します。\n#必要なライブラリをインストール\n!pip install tran...",
          "link": "https://zenn.dev/toki_mwc/articles/283ff142b7303e",
          "publishedOn": "2023-10-12T12:17:20.000Z",
          "wordCount": 665,
          "title": "【Paperspace】AI BunChoに使用されるモデルで小説を書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6-vrBQRO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Paperspace%25E3%2580%2591AI%2520BunCho%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E5%25B0%258F%25E8%25AA%25AC%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki_mwc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNzRiNzczNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6-vrBQRO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Paperspace%25E3%2580%2591AI%2520BunCho%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E5%25B0%258F%25E8%25AA%25AC%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki_mwc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNzRiNzczNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taniii_shio/articles/7f3b080da4f2a5",
          "author": "Naoto Shioya",
          "description": "pythonの環境構築が難しいので、メモです。\n\n 環境\n\nOS: windows11, WSL(Ubuntu 22.04.2 LTS)\nバージョン管理: asdf v0.13.1\n仮想環境、パッケージ管理: poetry version 1.1.14\n\n\n やりたいこと\n\npoetryで管理している仮想環境(venv)におけるpythonのバージョンを変える\n\n!\n\nすでにpoetryで作成したvenv上にpythonがインストールされている。\n\n\n\n 前提\n\nasdfのインストール\npoetryのインストール\npoetryプロジェクトの作成\n\n\n 手順\n\nasdfでpythonの当該...",
          "link": "https://zenn.dev/taniii_shio/articles/7f3b080da4f2a5",
          "publishedOn": "2023-10-12T06:00:00.000Z",
          "wordCount": 455,
          "title": "adsf, poetryでpythonのバージョンを変える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GuKtbFch--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:adsf%252C%2520poetry%25E3%2581%25A7python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GuKtbFch--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:adsf%252C%2520poetry%25E3%2581%25A7python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Shioya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjIxNTE5ZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/499fee034a89ed",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-318 C - Blue Spring\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, d, p = getIntMap()\n    f = getIntList()\n    f = sorted(f, reverse=True) + [0 for _ in range(d)]\n\n    total = sum(f)\n...",
          "link": "https://zenn.dev/hyperdb/articles/499fee034a89ed",
          "publishedOn": "2023-10-12T05:41:08.000Z",
          "wordCount": 465,
          "title": "［AtCoder］ABC-318｜C - Blue Spring",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--78Xv-WXz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-318%25EF%25BD%259CC%2520-%2520Blue%2520Spring%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--78Xv-WXz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-318%25EF%25BD%259CC%2520-%2520Blue%2520Spring%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shytaani/articles/b69fa2ff274c7a",
          "author": "Toru.T",
          "description": "1. Unit testとは\nUnitとはアプリケーションのテスト可能な最小の部品単位のことです。\nプログラムにおける「Unit」とは、一般的に個々の関数やメソッドのことを指します。\nよって、Unit testは、関数やメソッドレベルでコードが設計通りに動作することを保証するために行うテストです。\n\n 2. Unit testを行うメリット\n1. バグが早期発見できる\nユニットテストは、開発の初期段階でコードの問題を発見するのに役立ちます。例えば、関数やメソッドが期待通りの出力を返さない場合、ユニットテストはこれを捉え、開発者が問題を修正する機会を提供します。\n2. コードの変更が容...",
          "link": "https://zenn.dev/shytaani/articles/b69fa2ff274c7a",
          "publishedOn": "2023-10-12T05:18:12.000Z",
          "wordCount": 601,
          "title": "【社内勉強会②】Unit testについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--byp53-_3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A4%25BE%25E5%2586%2585%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%25E2%2591%25A1%25E3%2580%2591Unit%2520test%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru.T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1FiejZORHAwb08wbTdxWS05dUFJZGlfYVIyVlJUbHdGb1A3ODRieGJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--byp53-_3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A4%25BE%25E5%2586%2585%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%25E2%2591%25A1%25E3%2580%2591Unit%2520test%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru.T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1FiejZORHAwb08wbTdxWS05dUFJZGlfYVIyVlJUbHdGb1A3ODRieGJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit22",
          "author": "derwind",
          "description": "目的\ncuQuantum 対応の Qiskit Aer を毎回ビルドするのは大変なので、Google Colab 上でお手軽に使いましょうという内容。実は自分では特に何もやってないのだが、情報が埋もれているので[1]、それを掘り返して少し試してみるという感じになる。\n\n 現在の PyPI 版にはちょっとした問題がある\n[qiskit-aer-gpu] ImportError: libcustatevec.so.1 という Issue を大分前に起票したのだが、デフォルトでは qiskit-aer-gpu 0.12.2 から必要なライブラリが見えておらずパスを通さないとならない状態であ...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit22",
          "publishedOn": "2023-10-11T11:43:57.000Z",
          "wordCount": 1453,
          "title": "Qiskit で遊んでみる (22) — Google Colab 上で Qiskit Aer GPU",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0mX6ou6x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252822%2529%2520%25E2%2580%2594%2520Google%2520Colab%2520%25E4%25B8%258A%25E3%2581%25A7%2520Qiskit%2520Aer%2520GPU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0mX6ou6x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252822%2529%2520%25E2%2580%2594%2520Google%2520Colab%2520%25E4%25B8%258A%25E3%2581%25A7%2520Qiskit%2520Aer%2520GPU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mjun0812/articles/7bccb874bb74c4",
          "author": "もりりん",
          "description": "先日，PyTorchの画像処理系がまとまったライブラリ，TorchVisionのバージョン0.16.0が公開されました．\nこのアップデートで，データ拡張でよく用いられるtorchvision.transformsのバージョンv2のドキュメントが加筆されました．\ntorchvision.transforms.v2自体はベータ版として0.15.0から存在していたものの，今回のアップデートでドキュメントが充実し，recommendになったことから，実際に以前の方法とどのように異なるのか見ていきたいと思います．\nなお，v2はまだベータ版です．0.17.0で安定版となるようです．\n\nリリースノート...",
          "link": "https://zenn.dev/mjun0812/articles/7bccb874bb74c4",
          "publishedOn": "2023-10-11T10:21:51.000Z",
          "wordCount": 3277,
          "title": "TorchVisionのtransforms.v2を触ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ypxakEfq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TorchVision%25E3%2581%25AEtransforms.v2%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%258A%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1NmNjYzA5MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ypxakEfq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TorchVision%25E3%2581%25AEtransforms.v2%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%258A%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1NmNjYzA5MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/vaxila_labs/articles/db5cb42122f460",
          "author": "mrasu",
          "description": "例外が起きた時、エラーメッセージやスタックトレースは便利ですが、例外を起こした値自体も気になります。\nそんなときに、例外が起きた関数で使われていたローカル変数がわかると役に立ちます。\nローカル変数の値がわかれば、例外を起こした値自体がわからなくても、それを導くための変数がわかります。\n\n tl;dr\n\nPythonでは例外のtracebackを見ると例外発生時のローカル変数がわかる\nOpenTelemetryでローカル変数を記録するためには、record_exception をラップすればOK\nパッケージを作りました\n\nhttps://github.com/vaxila-labs/pyt...",
          "link": "https://zenn.dev/vaxila_labs/articles/db5cb42122f460",
          "publishedOn": "2023-10-11T10:21:20.000Z",
          "wordCount": 967,
          "title": "Pythonで例外時の変数をOpenTelemetryに記録する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N-SvRe57--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E4%25BE%258B%25E5%25A4%2596%25E6%2599%2582%25E3%2581%25AE%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592OpenTelemetry%25E3%2581%25AB%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vaxila%2520Labs%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:mrasu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5NTI2ZmM2NGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkZmIzMzNjMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N-SvRe57--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E4%25BE%258B%25E5%25A4%2596%25E6%2599%2582%25E3%2581%25AE%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592OpenTelemetry%25E3%2581%25AB%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vaxila%2520Labs%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:mrasu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5NTI2ZmM2NGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkZmIzMzNjMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dc840d20c9066f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-319 C - False Hope\n\n\n\n 提出結果\nimport itertools\nimport math\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    c = getIntList() + getIntList() + getIntList()\n    v = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, ...",
          "link": "https://zenn.dev/hyperdb/articles/dc840d20c9066f",
          "publishedOn": "2023-10-11T08:59:51.000Z",
          "wordCount": 736,
          "title": "［AtCoder］ABC-319｜C - False Hope",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gG84DWmC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-319%25EF%25BD%259CC%2520-%2520False%2520Hope%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gG84DWmC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-319%25EF%25BD%259CC%2520-%2520False%2520Hope%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sansuke05/articles/ad971fe2607f81",
          "author": "サンスケ",
          "description": "すぐに使いたい人向け\nDockerfileがこちらにあります\nhttps://gist.github.com/sansuke05/c4e79e1815d41f70f962bdf03d9f39f0\n\n はじめに\n個人開発でモバイル端末からText To Speechを使いたい需要が発生したため、キャラクターの音声合成を使える COEIROINK をクラウド上で動作させることにしました。\nその時にどのようなことをやったかを今回まとめることにしました。\n長くなりそうなので、この記事ではまずDocker上で動かせるようにするまでにやったことをまとめています。\n\n Docker上で動かせるよう...",
          "link": "https://zenn.dev/sansuke05/articles/ad971fe2607f81",
          "publishedOn": "2023-10-10T18:30:06.000Z",
          "wordCount": 712,
          "title": "COEIROINK(CPU)をクラウド対応するまでにやったこと(Docker上で動かせるようにするまで編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7N4DSa20--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:COEIROINK%2528CPU%2529%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2528Docker%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzNTlhMGMzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7N4DSa20--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:COEIROINK%2528CPU%2529%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2528Docker%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzNTlhMGMzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kit_ok/articles/d0558e5f7e14a9",
          "author": "カイト@データ基盤屋",
          "description": "結論\n\n文字コードチェック自体は file_content = uploaded_file.read() した後に file_content.decode(\"utf-8\") して UnicodeDecodeError を検知するなどで簡単に可能\nファイルオブジェクトをreadしているので、ファイルの読み込みカーソルが最下部まで行ってしまうので、 uploaded_file.seek(0) でカーソルを先頭に戻してやる必要がある\nもっと楽に文字コードのバリデーションができる方法があれば知りたい\n\n\n 今回起きたこと・ハマったポイント\n仕事で、「streamlitでアップロードしたファイ...",
          "link": "https://zenn.dev/kit_ok/articles/d0558e5f7e14a9",
          "publishedOn": "2023-10-10T10:54:03.000Z",
          "wordCount": 443,
          "title": "StreamlitのFile Uploadで文字コードチェック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HN05L6Ja--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25AEFile%2520Upload%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%2588%2540%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%259F%25BA%25E7%259B%25A4%25E5%25B1%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTBkYjZkMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HN05L6Ja--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25AEFile%2520Upload%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%2588%2540%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%259F%25BA%25E7%259B%25A4%25E5%25B1%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTBkYjZkMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/emp_tech_blog/articles/ffa83b5231b15c",
          "author": "ssnay",
          "description": "LeetCodeってなんですか？\nシリコンバレーの名だたる企業や日本でも大きなサービスを展開するようなソフトウェア企業では、エンジニア採用でコーディング面接がある場合が多く、このサイトはその対策としてよく利用されるものです。\n\n 今回の問題\n早いコードができたわけではないですが、他の解答よりシンプルなコードになっていると思ったので紹介しようと思いました。\n・https://leetcode.com/problems/sqrtx/\n問題文\nGiven a non-negative integer x, \nreturn the square root of x rounded down ...",
          "link": "https://zenn.dev/emp_tech_blog/articles/ffa83b5231b15c",
          "publishedOn": "2023-10-10T07:29:41.000Z",
          "wordCount": 782,
          "title": "LeetCode: 69.Sqrt(x) 解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VnQeWYbp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:LeetCode%253A%252069.Sqrt%2528x%2529%2520%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:EMP%2520Tech%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:ssnay%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhYTMzODRhNGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0tXeWUzaDhOdk5LQWJ0Qk1XZnhhYXBobktNYXY0NGpqY1c1NmM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VnQeWYbp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:LeetCode%253A%252069.Sqrt%2528x%2529%2520%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:EMP%2520Tech%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:ssnay%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhYTMzODRhNGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0tXeWUzaDhOdk5LQWJ0Qk1XZnhhYXBobktNYXY0NGpqY1c1NmM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c24a804ac30e4f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-320 C - Slot Strategy 2 (Easy)\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef pick(a, n, m):\n    return a[n % m]\n\n\ndef main():\n    m = getInt()\n    s = getStringRow(3)\n\n    r = []\n    for x in range(m):\n      ...",
          "link": "https://zenn.dev/hyperdb/articles/c24a804ac30e4f",
          "publishedOn": "2023-10-10T04:56:39.000Z",
          "wordCount": 608,
          "title": "［AtCoder］ABC-320｜C - Slot Strategy 2 (Easy)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JLTitnhg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-320%25EF%25BD%259CC%2520-%2520Slot%2520Strategy%25202%2520%2528Easy%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JLTitnhg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-320%25EF%25BD%259CC%2520-%2520Slot%2520Strategy%25202%2520%2528Easy%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/karaage0703/articles/9e58dec9eeaa86",
          "author": "karaage0703",
          "description": "Notion API Python SDK\nとりあえず試したのでメモです。\n以下公式が詳しいです。\nhttps://github.com/ramnes/notion-sdk-py\n\n Notion側\n以下でインテグレーションを作成します。\nhttps://www.notion.so/my-integrations\n以下の通りでOKです。\n\nインテグレーションを作成すると、トークンを取得できます。取得したら、環境変数に設定しておきましょう。\n$ export NOTION_TOKEN=\"NOTION_INTEGRATION_TOKEN\"\n制御したいページの右上の…をクリックして「+コネ...",
          "link": "https://zenn.dev/karaage0703/articles/9e58dec9eeaa86",
          "publishedOn": "2023-10-09T16:48:31.000Z",
          "wordCount": 378,
          "title": "Notion API x Python",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sONYkSD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Notion%2520API%2520x%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karaage0703%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sONYkSD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Notion%2520API%2520x%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karaage0703%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tk_hamaguchi/articles/788c9f7f2d290e",
          "author": "tk_hamaguchi",
          "description": "記事の概要\nPythonでCLIを作ろうと思った時、rubyでいうところの bundle gem 的なものがないかと探していたところ、hatchに辿り着いたので使い方をメモしておきます。\nこの記事で取り扱うのは下記の内容です。\n\n環境準備\nパッケージの雛形生成\nローカル環境での動作確認\nLintチェック\nテスト\nカバレッジ\nパッケージング\n依存ライブラリの管理\n\n\n 0. 環境準備\nまずは作業用のフォルダと仮想環境を準備する。\n$ mkdir sandbox_hatch\n$ cd sandbox_hatch\n$ python3.11 -m venv venv\n$ source ven...",
          "link": "https://zenn.dev/tk_hamaguchi/articles/788c9f7f2d290e",
          "publishedOn": "2023-10-09T15:21:23.000Z",
          "wordCount": 4537,
          "title": "PythonでCLIを含んだパッケージをhatchで作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M-cAd0jr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7CLI%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592hatch%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk_hamaguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lIb3g3cVdUTDcyQ25MTHFwOVA5Z2lYeW83SGtFdlZoMy11c09BWEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M-cAd0jr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7CLI%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592hatch%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk_hamaguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lIb3g3cVdUTDcyQ25MTHFwOVA5Z2lYeW83SGtFdlZoMy11c09BWEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/understanding_coroutine_in_python",
          "author": "Tamtam",
          "description": "コルーチンの前に..ジェネレータの基本\nコルーチンについていきなり説明する前に、その前提知識となるジェネレータについて解説します。\nPythonの用語集からジェネレータの意味を引用します。\n\n(ジェネレータ) generator iterator を返す関数です。 通常の関数に似ていますが、 yield 式を持つ点で異なります。 yield 式は、 for ループで使用できたり、next() 関数で値を 1 つずつ取り出したりできる、値の並びを生成するのに使用されます。\n\nジェネレータは、イテレーション中に要素を動的に生成するイテレータになります。\n特徴としてはyield を使い「値...",
          "link": "https://zenn.dev/fitness_densuke/articles/understanding_coroutine_in_python",
          "publishedOn": "2023-10-09T12:24:02.000Z",
          "wordCount": 1833,
          "title": "Pythonのコルーチンをそこはかとなく理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bt2-U9mL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25B3%25E3%2582%2592%25E3%2581%259D%25E3%2581%2593%25E3%2581%25AF%25E3%2581%258B%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%258F%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bt2-U9mL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25B3%25E3%2582%2592%25E3%2581%259D%25E3%2581%2593%25E3%2581%25AF%25E3%2581%258B%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%258F%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/y_taiki/articles/aws_sam_setup",
          "author": "taiki",
          "description": "はじめに\nSAMを使って、ローカルでAPI Gatewayを起動し、lambda_function.pyにリクエストできる環境を構築します\n\n SAMとは\nAWSでサーバーレスアプリケーションを構築するためのフレームワークです。\nこのフレームワークを使用することで、AWS Lambda、Amazon API Gateway、およびその他のサーバーレスリソースのアプリケーションを定義、デプロイすることができます。\nSAM CLIを使用すると、ローカルの開発環境でAWS LambdaやAmazon API Gatewayなどを模倣することができます。\n\n 前提\n以下の内容は、インストール...",
          "link": "https://zenn.dev/y_taiki/articles/aws_sam_setup",
          "publishedOn": "2023-10-09T09:14:16.000Z",
          "wordCount": 629,
          "title": "【SAM】Lambda + API Gatewayの開発環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J6pktcVC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SAM%25E3%2580%2591Lambda%2520%252B%2520API%2520Gateway%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmlZZmE0SW5SS29Pbi0xdjBsdDQwR0Z2MHJZVXNFcDJDWDE4Znc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J6pktcVC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590SAM%25E3%2580%2591Lambda%2520%252B%2520API%2520Gateway%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmlZZmE0SW5SS29Pbi0xdjBsdDQwR0Z2MHJZVXNFcDJDWDE4Znc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/k5h/articles/243e31ce883eb3",
          "author": "k5h",
          "description": "こんにちは．\n最近論文を提出して研究にひと段落ついたので，実験しながらちょこちょこ作ってたPythonのMarkdown生成ライブラリを公開しました．\n元々は，実験結果を研究室で共有するために，pythonから直接markdown形式の表を直感的に出力できるようにしようと思って作っていました，\n作っているうちに，思ったよりいい感じになってきて，他に人でも役に立てるようなものになったんじゃないかと思ったので，綺麗にラッピングしてPyPIに上げてみました．\nもしよければ使ってみてくれると嬉しいです．\n\n mdfy\n\n\n\n\n\n Installation\npip install mdfy\n\n ど...",
          "link": "https://zenn.dev/k5h/articles/243e31ce883eb3",
          "publishedOn": "2023-10-09T07:48:26.000Z",
          "wordCount": 1238,
          "title": "ちょこちょこ作ってたmarkdown生成ライブラリを公開しました🐍",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G3jldq2l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2593%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2593%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259Fmarkdown%25E7%2594%259F%25E6%2588%2590%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k5h%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YjlhZjQwOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G3jldq2l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2593%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2593%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259Fmarkdown%25E7%2594%259F%25E6%2588%2590%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k5h%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YjlhZjQwOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/whitecat_22/articles/9e0682c17ac818",
          "author": "whitecat_22",
          "description": "はじめに\n先日Django REST Framework（DRF）を利用してAPIを作成しました。\nAPIのドキュメントをつくることも考慮すると、Swaggerのドキュメント生成を基本機能としてサポートしているFastAPIに傾きかけましたが、やはりDjangoの強力な管理機能は業務アプリに欠かせません。\nDRFで作成したAPIのドキュメントを簡単に作成できないかと調べていたところ、少しの工夫でFastAPIと同様にAPIドキュメントを自動作成することができることを知りました。\n今回は、DRFで実装したAPIからAPIドキュメントの作成を自動化する手順をここに残します。\n先人たちの知...",
          "link": "https://zenn.dev/whitecat_22/articles/9e0682c17ac818",
          "publishedOn": "2023-10-09T04:46:27.000Z",
          "wordCount": 857,
          "title": "Django REST FrameworkでのAPI実装からSwagger UIでスキーマを表示してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XZgkSwWv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25A7%25E3%2581%25AEAPI%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%258B%25E3%2582%2589Swagger%2520UI%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XZgkSwWv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25A7%25E3%2581%25AEAPI%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%258B%25E3%2582%2589Swagger%2520UI%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/whitecat_22/articles/b82ee3e7a43011",
          "author": "whitecat_22",
          "description": "背景\n以前からDjangoにおけるWebアプリケーション作成において、ReactやFlutterなどのフロントエンドのフレームワークとの結合を考えております。\n今回は、手始めにフロントエンドにReactを、バックエンドはDjango REST Frameworkを利用したRESTful APIで行なうことを目的にToDoアプリの作成をしながら学習した記録です。\n先人たちの知恵をお借りするなどして解決できたことを、この場をお借りして感謝するとともに、大変恐縮ですが自分のメモとして、こちらへまとめておきます。\n\n はじめに\nReactやPython、Djangoなどの技術仕様も日に日に変...",
          "link": "https://zenn.dev/whitecat_22/articles/b82ee3e7a43011",
          "publishedOn": "2023-10-09T04:43:27.000Z",
          "wordCount": 4505,
          "title": "React+DjangoRESTFramworkでSPAのToDoアプリをつくる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sdo1L5Qz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%252BDjangoRESTFramwork%25E3%2581%25A7SPA%25E3%2581%25AEToDo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sdo1L5Qz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%252BDjangoRESTFramwork%25E3%2581%25A7SPA%25E3%2581%25AEToDo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/datahaikuninja/articles/decode-compressed-response-generated-lambda-edge",
          "author": "datahaikuninja",
          "description": "Lambda@EdgeでHTTPレスポンスを圧縮したら、Viewerのデコードエラーが発生した\nオリジンリクエストトリガーのLambda関数でHTTPレスポンスを圧縮したら、Viewerのデコードエラーが発生してレスポンスボディをロードできなくなる事象が発生しました。\nどのようにエラーを解決したか、備忘録的な記事を書こうと思います。\nLambda@Edgeで圧縮処理を行うのはかなり特殊なケースだと思いますが、同じ事象に困っている人の参考になれば幸いです。\nなお、本記事内のコードはPythonですが、Node.jsでも参考になると思います。\n結論から書くと、Lambda関数がretur...",
          "link": "https://zenn.dev/datahaikuninja/articles/decode-compressed-response-generated-lambda-edge",
          "publishedOn": "2023-10-09T03:35:19.000Z",
          "wordCount": 2089,
          "title": "Lambda@EdgeでHTTPレスポンスを圧縮したら発生した、Viewerのデコードエラーを解決する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8-CDD6i1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lambda%2540Edge%25E3%2581%25A7HTTP%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E3%2580%2581Viewer%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:datahaikuninja%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8-CDD6i1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lambda%2540Edge%25E3%2581%25A7HTTP%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E3%2580%2581Viewer%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:datahaikuninja%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shiki_01/books/my-study-book",
          "author": "shiki-01",
          "description": "プログラマー志望の高校生が勉強したことを自分の備忘録としてまとめるだけ",
          "link": "https://zenn.dev/shiki_01/books/my-study-book",
          "publishedOn": "2023-10-09T02:26:27.000Z",
          "wordCount": 55,
          "title": "一緒に勉強していこうって本",
          "imageUrl": "https://static.zenn.studio/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/tossy21/articles/fe9745b2548595",
          "author": "tossy",
          "description": "Python Slack SDKからSlackのチャンネルへ通知する仕組みをGoogle Cloud Functionsで実現します。\nSlack Appは，前回の記事で作成したものを用います。\nhttps://zenn.dev/tossy21/articles/c9ff5d1e24b407\n\n Cloud FunctionsでSlackへ通知する関数を作成\nCloud Functionsで関数を作成します。\nコードは前回同様のものをベースとして利用します。\n以下のコードをmain.pyとして保存します。\nCloud Functionsでは，関数ディレクトリのルートにあるmain.pyと...",
          "link": "https://zenn.dev/tossy21/articles/fe9745b2548595",
          "publishedOn": "2023-10-08T00:59:48.000Z",
          "wordCount": 610,
          "title": "Cloud FunctionsのHTTPトリガーを使って，Slackのチャンネルへ通知する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iPvjh43q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Functions%25E3%2581%25AEHTTP%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25AC%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25EF%25BC%258CSlack%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%25E3%2581%25B8%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYTdiNWJkY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iPvjh43q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Functions%25E3%2581%25AEHTTP%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25AC%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25EF%25BC%258CSlack%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%25E3%2581%25B8%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYTdiNWJkY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/eito_blog/articles/0eda0d55736f27",
          "author": "エイト",
          "description": "LINE APIを利用することで、botから自分のLINEにメッセージを送信するプログラムを作成することができます。\n本記事では上記プログラム作成のために必要な下記の情報を取得する手順について解説していきます。\n\nチェネルアクセストークン\nユーザーID\n\n\n LINE Developersにアクセス\n添付URLにアクセスし、「今すぐはじめよう」をクリックします。\nhttps://developers.line.biz/ja/services/messaging-api/\nLINEアカウントでログインより、ログインします。\n\n\n LINE Developersへの登録\nLINE Devel...",
          "link": "https://zenn.dev/eito_blog/articles/0eda0d55736f27",
          "publishedOn": "2023-10-08T00:56:41.000Z",
          "wordCount": 165,
          "title": "【LINE API】LINE APIを取得する手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bkWxBkgd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LINE%2520API%25E3%2580%2591LINE%2520API%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bkWxBkgd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LINE%2520API%25E3%2580%2591LINE%2520API%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taisan11/articles/4fd5fe6581e07d",
          "author": "たいさん!",
          "description": "注意\nこれは適当にrinnaの文章生成系のaiをまとめたものです。どんぐらいの性能をしてるかを見て選ぶものです\nなので紹介などは自分で調べてください\n手抜き\n\n gpt-japanese\n\n 1b\n1.3B パラメータの日本語 GPT モデル\n\n モデルアーキテクチャ\n24 層、2048 隠れサイズのトランスフォーマーベースの言語モデル。\n\n トレーニング\nモデルは、従来の言語モデリング目標を最適化するために、日本語 C4、日本語 CC-100、および日本語 Wikipediaでトレーニングされました。同じデータから選択された検証セットでは約 14 パープレキシティに達します。\n\n ...",
          "link": "https://zenn.dev/taisan11/articles/4fd5fe6581e07d",
          "publishedOn": "2023-10-08T00:30:28.000Z",
          "wordCount": 420,
          "title": "りんなAIモデル一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L8PM83MV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%258A%25E3%2582%2593%25E3%2581%25AAAI%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%2595%25E3%2582%2593%2521%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxZDE1NzViN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--L8PM83MV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%258A%25E3%2582%2593%25E3%2581%25AAAI%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%2595%25E3%2582%2593%2521%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxZDE1NzViN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/whitecat_22/articles/f826daf43155cd",
          "author": "whitecat_22",
          "description": "背景\n以前からDjangoにおけるWebアプリケーション作成において、ReactやFlutterなどのフロントエンドのフレームワークとの結合を考えております。\n今回は、それに先立ちフロントエンドとバックエンドとのやりとりをDjango REST Frameworkを利用したRESTful APIで行なうために学習した記録です。\n先人たちの知恵をお借りするなどして解決できたことを、この場をお借りして感謝するとともに、大変恐縮ですが自分のメモとして、こちらへまとめておきます。\n\n はじめに\nチグサさんのブログ：「チグサウェブ」の記事を参考に、Django REST Frameworkを利...",
          "link": "https://zenn.dev/whitecat_22/articles/f826daf43155cd",
          "publishedOn": "2023-10-07T13:57:28.000Z",
          "wordCount": 3201,
          "title": "Django REST FrameworkでAPIを作成してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r7DK5QXf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25A7API%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--r7DK5QXf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25A7API%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:whitecat_22%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2eUZtdktTTWRSUlBfNzVKcGFKUHcxRkJDY2F6UHR1dkx0U20yPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tossy21/articles/c9ff5d1e24b407",
          "author": "tossy",
          "description": "Python Slack SDKのchat.postMessageを使って，Slackのチャンネルへ通知します。\n\n Slack Appの作成\n\n\nhttps://api.slack.com/apps へアクセス\n\n\nCreate New Appを押下\n\n\nCreate an appで「from scratch」を選択\n\n\nApp Name と workspace を選択し，Create Appを押下\n\n\nFeaturesの「OAuth & Permissions」を押下\n\n\nScopesの「Bot Token Scopes」で「Add an OAuth Scope」を押下\n\n\n...",
          "link": "https://zenn.dev/tossy21/articles/c9ff5d1e24b407",
          "publishedOn": "2023-10-07T12:07:40.000Z",
          "wordCount": 617,
          "title": "Python Slack SDKのchat.postMessageを使って，Slackのチャンネルへ通知する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2wQiHmG---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Slack%2520SDK%25E3%2581%25AEchat.postMessage%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25EF%25BC%258CSlack%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%25E3%2581%25B8%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYTdiNWJkY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2wQiHmG---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Slack%2520SDK%25E3%2581%25AEchat.postMessage%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25EF%25BC%258CSlack%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%25E3%2581%25B8%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYTdiNWJkY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/pejpo/articles/8b60c9ee0122ee",
          "author": "Dr_O",
          "description": "はじめに\nPythonでSMiPolyというライブラリを作り、PyPIで公開していますが、この度、condaでインストールできるように、conda-forgeに登録しました(Anaconda.orgではこちら)。登録は、公式のインストラクションのStep-by-step Instructionsを中心に読んで進めました。\nZennでも、「Conda-ForgeにPythonパッケージを公開する手順」や、「自作パッケージをconda-forgeに登録してみた」といった記事が投稿されており、大変参考にさせていただきました。\n\n 概要\nPyPIに登録し、pipでインストールできる状態として...",
          "link": "https://zenn.dev/pejpo/articles/8b60c9ee0122ee",
          "publishedOn": "2023-10-07T09:07:27.000Z",
          "wordCount": 289,
          "title": "conda-forgeに自作ライブラリを登録した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YqJLqw7h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:conda-forge%25E3%2581%25AB%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dr_O%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YqJLqw7h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:conda-forge%25E3%2581%25AB%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dr_O%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/masinc/articles/885ed8cb51c6ee",
          "author": "masinc",
          "description": "2023/10/2 に Python 3.12 がリリースされました。\n今回は、Python 3.12 の気になった新機能を試してみました。\n\n 型パラメータ構文\n\n Generics 関連\nPython にも他の言語のジェネリクスのような記法が追加されました。\n\n Generics 関数\nPython3.11 以下の場合:\nfrom typing import TypeVar\n\nT = TypeVar('T')\n\ndef max(a: T, b: T) -> T:\n    return a if a > b else b\n\nPython3.12:\ndef max[T](a:...",
          "link": "https://zenn.dev/masinc/articles/885ed8cb51c6ee",
          "publishedOn": "2023-10-05T21:02:01.000Z",
          "wordCount": 1208,
          "title": "Python 3.12 の新機能試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N9H-8NA6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.12%2520%25E3%2581%25AE%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masinc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N9H-8NA6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.12%2520%25E3%2581%25AE%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masinc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/enterrocken/articles/d4f04e842eba2f",
          "author": "yuki.hirano",
          "description": "はじめに\n初めまして。\n都内IT企業で、データアルゴリズムチームのエンジニアをしております、Noraです。\n今回は、SlackAPIとOpenAI APIを活用して、チャットボットを構築します。\n今回はPythonを利用した実装です。\n社内Slackにチャットボットを構築することで、メンバーの質問内容を把握できるようになります。\nまた、スレッドの内容を記憶した返答をできるようになると、満足度も向上し、様々なチャット内容を蓄積・展開できます。\n（OpenAI APIは従量課金制なので、使い過ぎには気をつけましょう）\n\n 利用ツール・言語\n\n Python\n今回の実装はPythonを使用...",
          "link": "https://zenn.dev/enterrocken/articles/d4f04e842eba2f",
          "publishedOn": "2023-10-05T13:58:27.000Z",
          "wordCount": 854,
          "title": "【Python】ChatGPT+Slack APIでチャットボットを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X6t_qiid--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591ChatGPT%252BSlack%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki.hirano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXh1MGVFSGV5anMwelFidEdMZE9QZTRNTG1JNThCYlo4cTRTblNHdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X6t_qiid--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591ChatGPT%252BSlack%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki.hirano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXh1MGVFSGV5anMwelFidEdMZE9QZTRNTG1JNThCYlo4cTRTblNHdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ssfuno/articles/962c7d61ded576",
          "author": "すふー",
          "description": "イントロダクション\nplotlyはインタラクティブなグラフを描けるPythonのライブラリです。こちらの記事を拝見して、GEBCOの地形データをsurface plotで表示してみたいと思ったので試してみました。\nhttps://qiita.com/tmiyama/items/bba94d4125d9b67edf84\n伊豆諸島のあたりを表示してみた結果がこちらです！（中央奥は伊豆半島）\n海底と比べると島ってすごく高いんだなと感じますね🏝️\n\n\n 動作環境\n\nPython 3.10.12\nnetCDF4 1.6.4\nplotly 5.15.0\n\n\n データのダウンロード\nGEBCOはパ...",
          "link": "https://zenn.dev/ssfuno/articles/962c7d61ded576",
          "publishedOn": "2023-10-05T11:51:34.000Z",
          "wordCount": 421,
          "title": "plotlyでGEBCOの地形データを可視化してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j0cArMYm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:plotly%25E3%2581%25A7GEBCO%25E3%2581%25AE%25E5%259C%25B0%25E5%25BD%25A2%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j0cArMYm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:plotly%25E3%2581%25A7GEBCO%25E3%2581%25AE%25E5%259C%25B0%25E5%25BD%25A2%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hiyokotti/articles/9213b4f2fa07e2",
          "author": "新米ひよこ",
          "description": "初めに\nLiDARセンサなどで3次元空間をスキャンした際に、センサのわずかな設置角度ズレなどによって期待のデータとは異なるデータが取れてしまう場合があると思います。\n今回はそんな時に役立つデータの補正方法（の一例）を紹介したいと思います。\nちょっと数学的な用語などはうろ覚えで書いてますので、間違いあればバッシバシにご指摘ください。。。\n\n 思想\n案件によってさまざまだとは思いますが、今回は3次元空間内の床面を基準としてセンサの傾きを補正します。\n①スキャンした点群データから床面となる平面を特定する\n②特定した平面の方程式（ax+by+cz+d=0)を使って回転軸ベクトルを決定する\n③...",
          "link": "https://zenn.dev/hiyokotti/articles/9213b4f2fa07e2",
          "publishedOn": "2023-10-05T08:56:08.000Z",
          "wordCount": 1022,
          "title": "点群データのアライメント（回転）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I1AQh7cH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2582%25B9%25E7%25BE%25A4%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25EF%25BC%2588%25E5%259B%259E%25E8%25BB%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2596%25B0%25E7%25B1%25B3%25E3%2581%25B2%25E3%2582%2588%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUN6aEMtZGNQTTNtZng5azZYQ2xVYjhRaWpLZzhKeTFYSTJBTUI3SEtlVEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I1AQh7cH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2582%25B9%25E7%25BE%25A4%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25EF%25BC%2588%25E5%259B%259E%25E8%25BB%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2596%25B0%25E7%25B1%25B3%25E3%2581%25B2%25E3%2582%2588%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUN6aEMtZGNQTTNtZng5azZYQ2xVYjhRaWpLZzhKeTFYSTJBTUI3SEtlVEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hiyokotti/articles/f21d41fcfadca6",
          "author": "新米ひよこ",
          "description": "はじめに\n昨今なにかとアツいスクレイピング。\n様々な理由で興味がある人もいるのではないでしょうか\n私自身も\n\n趣味であるTCG（主にポケモンカード）を何とかECサイトで定価購入したい\nでもECサイトの定価販売なんて秒で売り切れるから買えない\n代わりに機械が勝手に買ってくれたらうれしいな\nという願望からスクレイピングに手を出し、何とか自動購入ツールを完成させました。\n\n今回はそんな私がスクレイピングに入門するにあたって学んだことを\n備忘録として記します。\n※様々な記事で言われていることですが、スクレイピングを禁止しているサイトもあるのでご自身で規約を読まれて自己責任でお願いします。\n\n...",
          "link": "https://zenn.dev/hiyokotti/articles/f21d41fcfadca6",
          "publishedOn": "2023-10-05T08:54:37.000Z",
          "wordCount": 648,
          "title": "スクレイピング入門　（Python）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XWMFkpeu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25EF%25BC%2588Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2596%25B0%25E7%25B1%25B3%25E3%2581%25B2%25E3%2582%2588%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUN6aEMtZGNQTTNtZng5azZYQ2xVYjhRaWpLZzhKeTFYSTJBTUI3SEtlVEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XWMFkpeu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25EF%25BC%2588Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2596%25B0%25E7%25B1%25B3%25E3%2581%25B2%25E3%2582%2588%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUN6aEMtZGNQTTNtZng5azZYQ2xVYjhRaWpLZzhKeTFYSTJBTUI3SEtlVEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/a_adachi/articles/fc314c754f4488",
          "author": "a-adachi",
          "description": "n番煎じですが、備忘録として書き残します。\nIIIFマニフェストを元に画像をダウンロードするスクリプトです。標準ライブラリのみで動作すると思います。\npython iiif_dl.py https://iiif.example.com/path/to/manifest\nGitHubにもアップロードしています。\nhttps://github.com/adachi-a/iiif-image-downloader/\n誤りやお気づきの点などありましたらぜひコメントいただけますと幸いです。\n\niiif_dl.py\nimport json\nimport os\nimport sys\nimport ti...",
          "link": "https://zenn.dev/a_adachi/articles/fc314c754f4488",
          "publishedOn": "2023-10-05T05:48:02.000Z",
          "wordCount": 1195,
          "title": "IIIFマニフェストを元に画像をダウンロードするPythonスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l4acg34n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IIIF%25E3%2583%259E%25E3%2583%258B%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%2585%2583%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:a-adachi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGI1NDg3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l4acg34n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IIIF%25E3%2583%259E%25E3%2583%258B%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%2585%2583%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:a-adachi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGI1NDg3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8a84ecc784b47a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-320 A - Leyland Number\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(a ** b + b ** a)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/8a84ecc784b47a",
          "publishedOn": "2023-10-05T04:44:31.000Z",
          "wordCount": 236,
          "title": "［AtCoder］ABC-320｜A - Leyland Number",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M6gXlYKd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-320%25EF%25BD%259CA%2520-%2520Leyland%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M6gXlYKd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-320%25EF%25BD%259CA%2520-%2520Leyland%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1fdaa82f30a397",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-320 B - Longest Palindrome\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    c = 0\n    for i in range(len(s), 0, -1):\n        for j in range(0, len(s) - i + 1):\n            w = s[j:j+i]\n            r = w[::-1]\n            if w == r:\n                ...",
          "link": "https://zenn.dev/hyperdb/articles/1fdaa82f30a397",
          "publishedOn": "2023-10-05T04:44:30.000Z",
          "wordCount": 374,
          "title": "［AtCoder］ABC-320｜B - Longest Palindrome",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xHtnYodp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-320%25EF%25BD%259CB%2520-%2520Longest%2520Palindrome%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xHtnYodp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-320%25EF%25BD%259CB%2520-%2520Longest%2520Palindrome%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mesummery/articles/9d8e4e30c3275e",
          "author": "Na",
          "description": "つくったもの\n\n🔗 Tech Sloths\n英語のテックブログなどを中心に、OpenAI APIにより要約と翻訳を行いメディア化しました。\nAIによる、記事の内容を活かした「アイディアや導入例」の提案なども掲載しています。\n\n 開発した背景\n\n日々アップデートされる技術情報、どこから手をつけるかわからなくなりがちだった\nテックブログは長文が多くて読むのに時間がかかる印象があった\n\n英語の文章を読む心理的ハードルの高さがあった\n\nOpenAI API Function calling について知り、何かやりたかった\n\n\n 使用した技術\n\n フロントエンド\n\nNotion\n\nなるべく工数...",
          "link": "https://zenn.dev/mesummery/articles/9d8e4e30c3275e",
          "publishedOn": "2023-10-05T03:00:00.000Z",
          "wordCount": 463,
          "title": "3日間でテック記事のAI要約・翻訳メディアをつくってみました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dyPjg4gh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:3%25E6%2597%25A5%25E9%2596%2593%25E3%2581%25A7%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AEAI%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%25BB%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Na%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNDAxOGU2NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dyPjg4gh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:3%25E6%2597%25A5%25E9%2596%2593%25E3%2581%25A7%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AEAI%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%25BB%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Na%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNDAxOGU2NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/lucidfrontier45/articles/8902653414edc6",
          "author": "lucidfrontier45",
          "description": "やりたいこと\nscikit-learnのnaive_bayesにはいくつかのモデルが実装されていますが、それ以外の確率分布、特にKDEでフィットした経験分布を用いてベイズ分類機を作りたい。\n\n やり方\n基本的には以下の通りです。\n\n\nC: class\n\nX: 観測値\n\nC^* = \\mathrm{argmax}_C P(C)P(X|C)\n任意の形のP(X|C)を利用できるようにできるだけ汎用的に作りたいのでこれを抽象クラスにしてAPIだけ定義し、それ以外の部分を実際に実装します。fitで観測データからパラメータを推定し、pdfで確率(密度)を返します。\n\n 分布抽象クラスのAPI\nf...",
          "link": "https://zenn.dev/lucidfrontier45/articles/8902653414edc6",
          "publishedOn": "2023-10-04T14:03:01.000Z",
          "wordCount": 2593,
          "title": "任意の確率分布でベイズ分類機を作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MresCg46--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E7%25A2%25BA%25E7%258E%2587%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25A7%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E5%2588%2586%25E9%25A1%259E%25E6%25A9%259F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lucidfrontier45%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxY2RkYzI0MmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MresCg46--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E7%25A2%25BA%25E7%258E%2587%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25A7%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E5%2588%2586%25E9%25A1%259E%25E6%25A9%259F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lucidfrontier45%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxY2RkYzI0MmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/3ebcac8e5c229f",
          "author": "しろ",
          "description": "前書き\n作っているもののオプション設定を作ろうと思い、たどり着いた解決方法です。\n参照の記事をもとにChatGPTで解決することができました。\nhttps://note.com/sirodon_256/n/nd92fc6c26cc8\n\n やりたいこと\n\nAPIでロールプレイの設定の情報取得できるように\n\n\n 本題\n\n APIの処理\n\napi.py\nfrom fastapi import FastAPI\nimport subprocess\nimport os\nimport character_roleplay\n\napp = FastAPI()\n\n@app.get(\"/roll_mode...",
          "link": "https://zenn.dev/shiro_toy_box/articles/3ebcac8e5c229f",
          "publishedOn": "2023-10-04T13:41:14.000Z",
          "wordCount": 2273,
          "title": "APIから受け取ったJSONデータをUnityで辞書型に変換する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NBpiXO4---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:API%25E3%2581%258B%25E3%2582%2589%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2581%25A3%25E3%2581%259FJSON%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Unity%25E3%2581%25A7%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NBpiXO4---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:API%25E3%2581%258B%25E3%2582%2589%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2581%25A3%25E3%2581%259FJSON%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Unity%25E3%2581%25A7%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kemomimi02/articles/13da0afb8cdb3d",
          "author": "ミンミ",
          "description": "必要なもの\nRaspberry Pi 2 model B v1.2\n\nPaSoRi RC-S380\n\nTP-Link TL-WN725N\n（Raspberry Pi 2 model BにWifiが搭載されていないため）\n\n電磁スピーカー\nPCのビープ音を出すスピーカーを使いました\n\n電磁スピーカー Amazon URL\n\n Raspberry Pi にOSをインストールする\n下記サイトから Raspberry Pi Imager をインストール\nRaspberry Pi OS\nRaspberry Pi Imagerを起動したら、「OSを選ぶ」から「Raspberry Pi OS」を...",
          "link": "https://zenn.dev/kemomimi02/articles/13da0afb8cdb3d",
          "publishedOn": "2023-10-04T08:48:51.000Z",
          "wordCount": 1435,
          "title": "Raspberry PiとNFCでスマートフォンでタッチするとリクエストを送るようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--chYpRBgc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%25E3%2581%25A8NFC%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2581%25A7%25E3%2582%25BF%25E3%2583%2583%25E3%2583%2581%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E9%2580%2581%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259F%25E3%2583%25B3%25E3%2583%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTFQWjdyYUZKLTI2MkJwLThRTmNqdTBVMXBPNUdXRWMycDYyaDhldW9PUzJzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--chYpRBgc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%25E3%2581%25A8NFC%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2581%25A7%25E3%2582%25BF%25E3%2583%2583%25E3%2583%2581%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E9%2580%2581%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259F%25E3%2583%25B3%25E3%2583%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTFQWjdyYUZKLTI2MkJwLThRTmNqdTBVMXBPNUdXRWMycDYyaDhldW9PUzJzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/fastapi_testing_tutorial",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、FastAPIとSQLiteで作ったREST APIをテストする方法を解説する。\n\n 対象とする読者\n\nFastAPIをこれから学ぶひと\nFastAPIで実際にテストしたい人\nこれからFastAPIを実務で導入したいひと\n\n\n REST APIを開発する手順\nFastAPIを使用して、SQLModelとSQLiteを用いた簡単なJWT認証付きのREST APIを開発する手順を以下に示す。\n\n (1) 必要なライブラリのインストール\npip install fastapi[all] uvicorn sqlmodel\n\n (2) モデルの定義:\n\n /app/m...",
          "link": "https://zenn.dev/nameless_sn/articles/fastapi_testing_tutorial",
          "publishedOn": "2023-10-04T07:54:20.000Z",
          "wordCount": 2655,
          "title": "FastAPI✕SQLite✕SQLModelで作ったJWT認証付きREST APIで、簡単なテストをする流れ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7L-ICUCP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E2%259C%2595SQLite%25E2%259C%2595SQLModel%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FJWT%25E8%25AA%258D%25E8%25A8%25BC%25E4%25BB%2598%25E3%2581%258DREST%2520API%25E3%2581%25A7%25E3%2580%2581%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%25B5%2581%25E3%2582%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7L-ICUCP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E2%259C%2595SQLite%25E2%259C%2595SQLModel%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FJWT%25E8%25AA%258D%25E8%25A8%25BC%25E4%25BB%2598%25E3%2581%258DREST%2520API%25E3%2581%25A7%25E3%2580%2581%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%25B5%2581%25E3%2582%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f0d60808c79988",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-319 A - Legendary Players\n\n\n\n 提出結果\ndef getString():\n    return input()\n\ndef main():\n    s = getString()\n    d = {\n        'tourist': 3858,\n        'ksun48': 3679,\n        'Benq': 3658,\n        'Um_nik': 3648,\n        'apiad': 3638,\n        'Stonefeang': 3630,\n        'ecnerwala': 36...",
          "link": "https://zenn.dev/hyperdb/articles/f0d60808c79988",
          "publishedOn": "2023-10-04T07:31:04.000Z",
          "wordCount": 332,
          "title": "［AtCoder］ABC-319｜A - Legendary Players",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2f3HC9g9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-319%25EF%25BD%259CA%2520-%2520Legendary%2520Players%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2f3HC9g9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-319%25EF%25BD%259CA%2520-%2520Legendary%2520Players%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/94903215e001eb",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-319 B - Measure\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\ndef main():\n    n = getInt()\n    a = [j for j in range(1, 10) if n % j == 0]\n\n    r = ''\n    for i in range(n + 1):\n        x = [b for b in a if i % (n / b) == 0]\n        if len(x) == 0:\n            r += '-'\n        els...",
          "link": "https://zenn.dev/hyperdb/articles/94903215e001eb",
          "publishedOn": "2023-10-04T07:31:03.000Z",
          "wordCount": 405,
          "title": "［AtCoder］ABC-319｜B - Measure",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1re03D1p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-319%25EF%25BD%259CB%2520-%2520Measure%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1re03D1p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-319%25EF%25BD%259CB%2520-%2520Measure%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/5cab3bfd05a9a2",
          "author": "たきろぐ",
          "description": "Overture Maps Foundationというものがあります。前回、位置データ (Placesデータ) をダウンロードして保存しました。\nhttps://zenn.dev/takilog/articles/e96d8c1e132db4\n今回はMatplotlibではなく、Mapboxを利用して、ダウンロードしてきたPOI情報を地図上に可視化してみます。\n\n データの確認\n前回の記事でダウンロードして総数のうち、10,000個のPOIを格納してgeojson形式に変換したものを用意しました。このような形式になっています。基本的には点 (Point) として、名前とID・カテゴリ名・...",
          "link": "https://zenn.dev/takilog/articles/5cab3bfd05a9a2",
          "publishedOn": "2023-10-04T05:32:40.000Z",
          "wordCount": 510,
          "title": "Overture Maps Foundationのデータを活用したい (3): Mapboxを用いたクラスタ可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BdJJiAKW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Overture%2520Maps%2520Foundation%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%25283%2529%253A%2520Mapbox%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BdJJiAKW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Overture%2520Maps%2520Foundation%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%25283%2529%253A%2520Mapbox%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takuowake/articles/52e2803d258a57",
          "author": "Takuo",
          "description": "はじめに\ngraph-toolはPythonのライブラリで、大規模なネットワークの解析や操作を高速に行うことができるツールです。以下では、graph-toolの基本的な使い方を紹介します。\n\n インストール\nまずはgraph-toolをインストールします。詳細なインストール手順は公式ドキュメントを参照してください。\nUbuntu OSのDocker上でインストールする方法については、以下を参考にしてください。\nhttps://zenn.dev/takuowake/articles/7c654e3b2a7df6\n\n graph-toolの使い方\n\n 基本的なグラフの作成\nfrom gr...",
          "link": "https://zenn.dev/takuowake/articles/52e2803d258a57",
          "publishedOn": "2023-10-04T03:09:51.000Z",
          "wordCount": 506,
          "title": "graph-toolの基本的な使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zZi3zJrP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:graph-tool%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MmQ0OTllYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zZi3zJrP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:graph-tool%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MmQ0OTllYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nakurei/articles/list-copy-with-python",
          "author": "NakuRei",
          "description": "これはなに\nPythonでlistをコピーする方法について調べたメモ。\n\n 結論 | 結局どの手法が良いのか\nどの方法が優れているかは状況によるが、上記の調査結果から、筆者は下記の手法を選択しようと思った。\n\n浅いコピー : copy.copy()を利用\n深いコピー : copy.deepcopy()を利用\n\n\n はじめに\nPythonでは、b = aでリストをコピーできない。\nb = aでリストをコピーしようとすると、新しいリストが作成されるのではなく、既存のリストaへの新しい参照bが作成される。つまり、aとbは同じオブジェクトを指す。\na = [1, [2, 3], 4]\nb =...",
          "link": "https://zenn.dev/nakurei/articles/list-copy-with-python",
          "publishedOn": "2023-10-03T16:47:29.000Z",
          "wordCount": 1396,
          "title": "Pythonでlistをコピーしたいだけなのに、調べたら方法がたくさんあったという話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zQCEP5w9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7list%25E3%2582%2592%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25AB%25E3%2580%2581%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%25E3%2582%2589%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%258C%25E3%2581%259F%25E3%2581%258F%25E3%2581%2595%25E3%2582%2593%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjNThmYWI0YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zQCEP5w9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7list%25E3%2582%2592%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25AB%25E3%2580%2581%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%25E3%2582%2589%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%258C%25E3%2581%259F%25E3%2581%258F%25E3%2581%2595%25E3%2582%2593%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjNThmYWI0YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/udonmaru/articles/2b4238a9f99016",
          "author": "udonmaru",
          "description": "chatgptに最悪なコードを作ってもらいました\n\n 普通に作ってもらった\nimport random as r,math as m;exec(''.join([chr(108-(i%2)*32)+chr(97+(i%2)*4) for i in range(12)]));x,y,z,a,b,c=1,2,3,4,5,6\ndef f(x,y,z,a,b,c):return m.sqrt(x**2+y**2+z**2),m.sqrt(a**2+b**2+c**2)\ndef g(v,w):return r.choice([v,w])\nprint(g(*f(x,y,z,a,b,c)))\n\n ダメ...",
          "link": "https://zenn.dev/udonmaru/articles/2b4238a9f99016",
          "publishedOn": "2023-10-03T12:41:28.000Z",
          "wordCount": 1276,
          "title": "最悪なコードと最高なコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--h3IDoqGA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E6%2582%25AA%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A8%25E6%259C%2580%25E9%25AB%2598%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:udonmaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwODVjMWI5ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--h3IDoqGA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E6%2582%25AA%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A8%25E6%259C%2580%25E9%25AB%2598%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:udonmaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwODVjMWI5ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/atu4403/articles/howto-git-cliff",
          "author": "atu4403",
          "description": "はじめに\nCHANGELOGを自動生成するツールは多種多様です。Conventional Commitsに対応したコミットメッセージから生成するもの、GitHub上でのリリースやタグ付けまで行うものなどがあります。\nCHANGELOGを自動生成する際には、バージョンタグに対応したコミットメッセージを基にしてくれると便利です。コミットメッセージを適切に付けるだけで、後はツールにお任せできます。ただし、いくつかの懸念点が存在します。\n\n 懸念点 1: チキンエッグプロブレム\nCHANGELOG自動生成ツールは便利ですが、一つの大きな問題があります。それは、Gitのタグとコミットメッセージ...",
          "link": "https://zenn.dev/atu4403/articles/howto-git-cliff",
          "publishedOn": "2023-10-03T10:42:11.000Z",
          "wordCount": 1262,
          "title": "CHANGELOGの悩みを一発解決！git-cliffの使い方からカスタマイズまで📚",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TxkcEiAF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CHANGELOG%25E3%2581%25AE%25E6%2582%25A9%25E3%2581%25BF%25E3%2582%2592%25E4%25B8%2580%25E7%2599%25BA%25E8%25A7%25A3%25E6%25B1%25BA%25EF%25BC%2581git-cliff%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%258B%25E3%2582%2589%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25BE%25E3%2581%25A7%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atu4403%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhYmI2YjcxOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TxkcEiAF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CHANGELOG%25E3%2581%25AE%25E6%2582%25A9%25E3%2581%25BF%25E3%2582%2592%25E4%25B8%2580%25E7%2599%25BA%25E8%25A7%25A3%25E6%25B1%25BA%25EF%25BC%2581git-cliff%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%258B%25E3%2582%2589%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25BE%25E3%2581%25A7%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atu4403%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhYmI2YjcxOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/airiin/articles/1400294ab87dae",
          "author": "AIRI",
          "description": "欠損値の補完\n欠損値補完の流れは以下の通り。\n\n欠損値の数を確認\nヒストグラムで表示し、欠損値の補完方法を考える\n欠損値を補完する\n欠損値の数を確認\n\n\n 欠損値を平均値で補完する場合\ndata.isnull().sum()\n# 各カラムの欠損値の数が表示される。\n\nplt.hist(data['カラム名'])\nplt.show()\n# 指定したカラムのヒストグラムが表示される。\n\naverage = data['カラム名'].mean()\ndata.update(data['カラム名'].fillna(average))\n# 欠損値を平均値で補完。\n\ndata['カラム名'].is...",
          "link": "https://zenn.dev/airiin/articles/1400294ab87dae",
          "publishedOn": "2023-10-03T10:21:00.000Z",
          "wordCount": 1043,
          "title": "Python｜機械学習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QX0H_x0A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BD%259C%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIRI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ZDBjMWQ2ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QX0H_x0A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BD%259C%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIRI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ZDBjMWQ2ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shogura/articles/lane-tracker",
          "author": "shogura",
          "description": "はじめに\nドイツで自動車のソフトウェアエンジニアリングを学んでる奴 \"shogura\" です。\n「Shaping the Future of mobility, together」を掲げ、自動車に関するソフトウェアエンジニアリングのプログラムを提供しているSEA:MEに参加しています。SEA:MEでは「組み込みシステム」「自動運転」「モビリティエコシステム」の3つのモジュールから自分の興味に合った分野を学習することができます。\n本記事では、自動運転モジュールの一環であるPiRacerで決まったレーンを自動走行でさせるという課題の一部である道路白線検出プログラムについてどのように実装し...",
          "link": "https://zenn.dev/shogura/articles/lane-tracker",
          "publishedOn": "2023-10-03T09:00:00.000Z",
          "wordCount": 1383,
          "title": "Python3 + OpenCVで道路白線検出プログラムを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0zc6zthN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%2520%252B%2520OpenCV%25E3%2581%25A7%25E9%2581%2593%25E8%25B7%25AF%25E7%2599%25BD%25E7%25B7%259A%25E6%25A4%259C%25E5%2587%25BA%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shogura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlMDM2MzdkMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0zc6zthN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%2520%252B%2520OpenCV%25E3%2581%25A7%25E9%2581%2593%25E8%25B7%25AF%25E7%2599%25BD%25E7%25B7%259A%25E6%25A4%259C%25E5%2587%25BA%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shogura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlMDM2MzdkMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ouma_san/articles/d6734a48743156",
          "author": "お馬さん",
          "description": "あいさつ\n初めまして、お馬さんです。大学生やっています。大学で初めてプログラミングを触りました。\n初めの記事なので誤字やもっとこうしたほうがいいなどがあるかもしれませんがどうぞお手柔らかにお願いします。\n\n 環境\n\nAndroid Studio Electric Eel | 2022.1.1\nkotlin: 1.7.0\nminSdk: 24\ntargetSdk: 33\n\n\n 最終目標\nAndroidでPythonのライブラリを使用できるようにする。\nAndroidの単一データをPythonで処理し、Androidで取得できるようにする。\nAndroidの配列データをPythonで処理...",
          "link": "https://zenn.dev/ouma_san/articles/d6734a48743156",
          "publishedOn": "2023-10-03T07:10:29.000Z",
          "wordCount": 7908,
          "title": "Androidアプリ内でPythonを実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lhojFVpx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%2586%2585%25E3%2581%25A7Python%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E9%25A6%25AC%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I1OWNlMjgyYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lhojFVpx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%2586%2585%25E3%2581%25A7Python%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E9%25A6%25AC%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I1OWNlMjgyYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2657d97d909f0b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-318 A - Full Moon\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, m, p = getIntMap()\n    a = [i * p + m for i in range(n // p + 1) if i * p + m <= n]\n\n    print(len(a))\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2657d97d909f0b",
          "publishedOn": "2023-10-03T04:29:11.000Z",
          "wordCount": 308,
          "title": "［AtCoder］ABC-318｜A - Full Moon",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yIdS4yFU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-318%25EF%25BD%259CA%2520-%2520Full%2520Moon%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yIdS4yFU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-318%25EF%25BD%259CA%2520-%2520Full%2520Moon%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/22275b66bab66a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-318 B - Overlapping sheets\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\ndef getMax(xy):\n    m = 0\n    for x in xy:\n        m = max(m, max(x))\n    return m\n\ndef getSum(xy):\n    s = 0\n    for x in...",
          "link": "https://zenn.dev/hyperdb/articles/22275b66bab66a",
          "publishedOn": "2023-10-03T04:29:11.000Z",
          "wordCount": 571,
          "title": "［AtCoder］ABC-318｜B - Overlapping sheets",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qjq4nbSg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-318%25EF%25BD%259CB%2520-%2520Overlapping%2520sheets%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qjq4nbSg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-318%25EF%25BD%259CB%2520-%2520Overlapping%2520sheets%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yktakaha4/articles/assert_function_calls_in_all_unittests",
          "author": "Yuuki Takahashi",
          "description": "小ネタです🍣\nPythonでプログラミングをするにあたって print はとても便利です\nビルトイン関数のためimportは不要ですし、実装やテストの最中にちょっとだけ現在の状態を確認したいときに、誰しもお世話になったことがあるのでないかと思います\nhttps://docs.python.org/ja/3.11/library/functions.html#print\nしかしながら、Pythonにはロギングの仕組みとしてlogging モジュールが用意されており、プロダクションコードにおいてはこちらを利用すべきです\nhttps://docs.python.org/ja/3/howto/l...",
          "link": "https://zenn.dev/yktakaha4/articles/assert_function_calls_in_all_unittests",
          "publishedOn": "2023-10-03T04:05:13.000Z",
          "wordCount": 1055,
          "title": "unittestで特定の関数呼び出しをテスト全体でアサーションする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Z1Wp5AO3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:unittest%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E5%2585%25A8%25E4%25BD%2593%25E3%2581%25A7%25E3%2582%25A2%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Z1Wp5AO3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:unittest%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E5%2585%25A8%25E4%25BD%2593%25E3%2581%25A7%25E3%2582%25A2%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/satoru_output/articles/zenn_python_text",
          "author": "サトル アウトプット用",
          "description": "事前準備\nPythonがインストール済みであること。\n\n 導入手順\n下記コマンドを入力\nimport re\n\n 正規表現で検索する\nfindall関数を使ってマッチする文字列を表示させる\nサンプルコード\nimport re\n\ntext = \"b!,bu!,buu!,buuu!,buuuu!\"\n\n#正規表現*を作った場合\n#*は直前の正規表現が0回以上繰り返す意味\nres1 = re.findall(r\"bu*!\", text)\nprint(res1)\n#正規表現?を作った場合\n#?は直前の正規表現が0回もしくは1回存在するという意味\nres2 = re.findall(r\"bu?!\"...",
          "link": "https://zenn.dev/satoru_output/articles/zenn_python_text",
          "publishedOn": "2023-10-02T23:35:11.000Z",
          "wordCount": 149,
          "title": "Pythonで正規表現を使ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gfmcQ-gP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%2588%25E3%2583%25AB%2520%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E7%2594%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YWE2YjI4MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gfmcQ-gP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%2588%25E3%2583%25AB%2520%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E7%2594%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YWE2YjI4MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nii/articles/english-frequency",
          "author": "nii",
          "description": "1.はじめに\n皆さん、英語勉強していますか？\n最近では様々なドキュメントが翻訳されたり自動翻訳ツールが充実してきたりと便利な世の中になっていますが、まだまだ英語が必要になる場面も多いです。\n私も英語の必要性を感じてTOEICの勉強を始めました。そこそこ基礎が完成できたと考え、少し背伸びして英字ニュースを読んでみたりしました。\nしかし1ヶ月くらいニュースを読んだところ、あることに気づきました。\n「単語、全然わからん」と。\nTOEICと実際に使用されている単語は少なからずズレているようです。今だにTOEIC頻出単語であるwheelbarrow(手押し車)やcanopy(天蓋)を英字新聞で...",
          "link": "https://zenn.dev/nii/articles/english-frequency",
          "publishedOn": "2023-10-02T22:31:58.000Z",
          "wordCount": 1055,
          "title": "【個人開発】英字ニュースから単語の出現回数を調べた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ijYeFPxh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E8%258B%25B1%25E5%25AD%2597%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%258B%25E3%2582%2589%25E5%258D%2598%25E8%25AA%259E%25E3%2581%25AE%25E5%2587%25BA%25E7%258F%25BE%25E5%259B%259E%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5M2FmMTYyNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ijYeFPxh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E8%258B%25B1%25E5%25AD%2597%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%258B%25E3%2582%2589%25E5%258D%2598%25E8%25AA%259E%25E3%2581%25AE%25E5%2587%25BA%25E7%258F%25BE%25E5%259B%259E%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5M2FmMTYyNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/raio/articles/c3359584402555",
          "author": "Raio｜高校生エンジニア",
          "description": "はじめに\nみなさん、こんにちは。高校生エンジニアのRaioです！\n平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻\n↓筆者について↓\nhttps://qiita.com/Raio14f/items/ef0fb67685b36298bcb0\n今回の記事では、【2023年10月】0円で読めるおすすめ技術書TOP5を紹介します！\nご興味ある方は、是非最後までご覧ください！\n\n 技術書を0円で読む方法\nKindleUnlimitedを使うことで、技術書を0円で何冊でも読むことが出来ます🙌\n今回、紹介する技術書はKindleUnlimitedに加入すると...",
          "link": "https://zenn.dev/raio/articles/c3359584402555",
          "publishedOn": "2023-10-02T11:27:47.000Z",
          "wordCount": 428,
          "title": "【2023年10月】0円で読めるおすすめ技術書5選まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GxtyqKvi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B410%25E6%259C%2588%25E3%2580%25910%25E5%2586%2586%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258B%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B85%25E9%2581%25B8%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GxtyqKvi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B410%25E6%259C%2588%25E3%2580%25910%25E5%2586%2586%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258B%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B85%25E9%2581%25B8%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/airiin/articles/5ae894b62219d1",
          "author": "AIRI",
          "description": "matplotlibとは\n分析結果を可視化するのに利用されるライブラリ。さまざまな種類のグラフが作成できる。\n\n matplotlibの読み込み\nimport matplotlib.pyplot as plt\n# matplotlibの読み込み。\n\n%matplotlib inline\n# グラフをノートブック内に直接表示するためのマジックコマンド。\n\nimport warnings\n# Python標準ライブラリの warnings をインポート。プログラム実行中の警告を制御。\n\nwarnings.simplefilter('ignore')\n# 全ての警告を無視する。\n\nimpo...",
          "link": "https://zenn.dev/airiin/articles/5ae894b62219d1",
          "publishedOn": "2023-10-02T10:28:06.000Z",
          "wordCount": 827,
          "title": "Python｜matplotlibの基本コマンド",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--47l6Cj_C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BD%259Cmatplotlib%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIRI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ZDBjMWQ2ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--47l6Cj_C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BD%259Cmatplotlib%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIRI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ZDBjMWQ2ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/airiin/articles/9b6ebb86923098",
          "author": "AIRI",
          "description": "Numpy（ヌンパイ）とは\nndarray（N次元配列）を作成することができるライブラリ。\n高速な処理が可能で、コードがシンプルで読みやすくなる。\nそのため、計算負荷が高い処理を行う際は、ndarrayにデータを格納すること。\n\n Numpyの基本コマンド\n\n numpyの読み込み\nimport numpy as np\n\n ndarrayの作成\nnp.array([1,2,3])\n# array([1,2,3])を作成\n\nnp.array(['a',1,2])\n# 最初の要素のデータ型に変換された array(['a','1','2'])を作成\n\nnp.arange(5)\n# 要素数...",
          "link": "https://zenn.dev/airiin/articles/9b6ebb86923098",
          "publishedOn": "2023-10-02T07:19:50.000Z",
          "wordCount": 1445,
          "title": "Python｜Numpyの基本コマンド",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HMoLVhxt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BD%259CNumpy%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIRI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ZDBjMWQ2ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HMoLVhxt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BD%259CNumpy%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIRI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ZDBjMWQ2ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dbbaaa1db39f4c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-317 B - MissingNo.\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\ndef getIntList():\n    return list(map(int, input().split()))\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    a.sort()\n\n    for i in range(n - 1):\n        if a[i + 1] - a[i] == 1:\n            continue\n        p...",
          "link": "https://zenn.dev/hyperdb/articles/dbbaaa1db39f4c",
          "publishedOn": "2023-10-02T04:39:54.000Z",
          "wordCount": 352,
          "title": "［AtCoder］ABC-317｜B - MissingNo.",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0znzFvv3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-317%25EF%25BD%259CB%2520-%2520MissingNo.%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0znzFvv3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-317%25EF%25BD%259CB%2520-%2520MissingNo.%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/887cef1f3a14f8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-317 A - Potions\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\ndef getIntList():\n    return list(map(int, input().split()))\n\ndef main():\n    n, h, x = getIntMap()\n    a = [0] + getIntList()\n    b = [i for i in range(len(a)) if a[i] >= x - h]\n\n    print(min(b))\n\ni...",
          "link": "https://zenn.dev/hyperdb/articles/887cef1f3a14f8",
          "publishedOn": "2023-10-02T04:39:53.000Z",
          "wordCount": 354,
          "title": "［AtCoder］ABC-317｜A - Potions",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mTj_ldt9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-317%25EF%25BD%259CA%2520-%2520Potions%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mTj_ldt9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-317%25EF%25BD%259CA%2520-%2520Potions%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/airiin/articles/66350d2cfaeae4",
          "author": "AIRI",
          "description": "pandasとは\npandasは、データの集計や加工に使用されるライブラリ。\nデータの読み込み、表示、整形、書き出し等が可能。\n\n データの読み書き\n\n データの読み込み（ファイルから）\n\nGoogle Colabで実行\n[1] import pandas as pd\n[2] import numpy as np\n[3] data = pd.read_csv('./data.csv', index_col=False) \n\nimport pandas\npandasを利用できるようにする\nas pd\npandas と書く部分を pdと書ける要因設定。本来ならpandas.read_cs...",
          "link": "https://zenn.dev/airiin/articles/66350d2cfaeae4",
          "publishedOn": "2023-10-02T02:50:35.000Z",
          "wordCount": 1977,
          "title": "Python｜pandasの基本コマンド",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dZFILvqX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BD%259Cpandas%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIRI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ZDBjMWQ2ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dZFILvqX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BD%259Cpandas%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIRI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ZDBjMWQ2ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/dl-advance-eval-metrics",
          "author": "NekoAllergy",
          "description": "はじめに\n物体検出タスクは、写真や映像の中から「物体が何か？」と「物体がどこにあるか？」を見つける技術です。\n物体検出では、モデルがどれだけ上手く物体を見つけられたかを判断するための基準がたくさんあります。\n\n物体検出モデルの精度\n今回は、物体検出における評価指標（TP/TN/FP/FN/Precisio/Recall）について解説します。\n\n 1. 基本的な用語\nまずはじめに、基本となる4つの用語を押さえておきましょう。\n\n基本の4つ\n\n True Positive (TP)\n物体検出モデルが物体を「検出した」と予測し、その予測が正しかった場合。\n例：画像に犬がいて、モデルがその犬...",
          "link": "https://zenn.dev/nekoallergy/articles/dl-advance-eval-metrics",
          "publishedOn": "2023-10-01T22:00:00.000Z",
          "wordCount": 325,
          "title": "【物体検出】評価指標（TP/TN/FP/FN/Precisio/Recall）を分かり易く解説【図解】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R9RccXjg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%25E3%2580%2591%25E8%25A9%2595%25E4%25BE%25A1%25E6%258C%2587%25E6%25A8%2599%25EF%25BC%2588TP%252FTN%252FFP%252FFN%252FPrecisio%252FRecall%25EF%25BC%2589%25E3%2582%2592%25E5%2588%2586%25E3%2581%258B%25E3%2582%258A%25E6%2598%2593%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NekoAllergy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R9RccXjg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%25E3%2580%2591%25E8%25A9%2595%25E4%25BE%25A1%25E6%258C%2587%25E6%25A8%2599%25EF%25BC%2588TP%252FTN%252FFP%252FFN%252FPrecisio%252FRecall%25EF%25BC%2589%25E3%2582%2592%25E5%2588%2586%25E3%2581%258B%25E3%2582%258A%25E6%2598%2593%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NekoAllergy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/iammytoo/articles/6d6c43d0660b9b",
          "author": "miyamoto",
          "description": "概要\n本記事では、Pythonでローカルに簡易的なWebサーバーを立て、そこにリクエストすることで、AWS署名v4が必要なサービスに、送られてきた内容にそのまま署名を付けてリクエストを投げるプログラムを紹介します。\n\n 動機\nローカル環境で動作確認をするのと同じワークフローでAWSに乗っけたdev環境等にアクセスする方法を用意したかったため。\nこれを使うとテスト等について、ドメインを変えるだけで実行できるのがかなりうれしい。世間によくあるAPIテストのフレームワークで、AWSの署名v4が実装されていそうなのは、postmanぐらいしかなさそうだったため、CI等であったりしても便利かな...",
          "link": "https://zenn.dev/iammytoo/articles/6d6c43d0660b9b",
          "publishedOn": "2023-10-01T14:09:22.000Z",
          "wordCount": 746,
          "title": "ローカル環境のノリでAWSの署名v4付きリクエストをしよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TnYGpfwH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E3%2583%258E%25E3%2583%25AA%25E3%2581%25A7AWS%25E3%2581%25AE%25E7%25BD%25B2%25E5%2590%258Dv4%25E4%25BB%2598%25E3%2581%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miyamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmZmMzODM3NDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TnYGpfwH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E3%2583%258E%25E3%2583%25AA%25E3%2581%25A7AWS%25E3%2581%25AE%25E7%25BD%25B2%25E5%2590%258Dv4%25E4%25BB%2598%25E3%2581%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miyamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmZmMzODM3NDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/jun784/articles/2406d7c922422a",
          "author": "Jun Kawasaki",
          "description": "https://qiita.com/YOCKOW/items/0b9635c62840998708f7\njs側\n・コンテンツタイプを指定してはいけない\nhttps://www.geeksforgeeks.org/how-to-extract-the-data-from-an-immutablemultidict/\nflask.py側\n・request.form.get('speach_text')\nを利用する",
          "link": "https://zenn.dev/jun784/articles/2406d7c922422a",
          "publishedOn": "2023-10-01T14:04:25.000Z",
          "wordCount": 119,
          "title": "python の flaskでpostデータを受け取れないとき",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aqBWhdxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%2520%25E3%2581%25AE%2520flask%25E3%2581%25A7post%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%2520Kawasaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djcFAtXzBjNXY0VjA4dzBvSWxMMjNCdmpJMTRrUTBmUWVEUi1SZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aqBWhdxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%2520%25E3%2581%25AE%2520flask%25E3%2581%25A7post%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%2520Kawasaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djcFAtXzBjNXY0VjA4dzBvSWxMMjNCdmpJMTRrUTBmUWVEUi1SZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/70db82c336b4db",
          "author": "yKesamaru",
          "description": "[Docker] MongoDB接続がタイムアウトする場合の対処法\n\n\n\n[Docker] MongoDB接続がタイムアウトする場合の対処法\n\nはじめに\n注意\n環境\nMongoDBと繋がらなくなった時、調べるべき手順のリスト\n\n解法\n\nホストのファイアーウォール設定\n\nmongoshコマンドの使用\n\nMongoDBの設定確認\n\n\nDockerのネットワーク\n\n\nまとめ\n参考文献\n\n\n\n\n はじめに\nDockerを使用してMongoDBコンテナを構築しました。構築から時間が経つと、接続がタイムアウトする問題に直面しました。\n具体的には\nclient = MongoClient('mon...",
          "link": "https://zenn.dev/ykesamaru/articles/70db82c336b4db",
          "publishedOn": "2023-10-01T13:40:08.000Z",
          "wordCount": 1659,
          "title": "[Docker] MongoDB接続がタイムアウトする場合の対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c4VmPMZk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BDocker%255D%2520MongoDB%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%258C%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c4VmPMZk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BDocker%255D%2520MongoDB%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%258C%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shiro46/articles/42c79863658b63",
          "author": "SHIRO",
          "description": "はじめに\n以前、Rのgghighlightというパッケージを真似てpython用のライブラリを作ったんですが（下記記事を参照）、使いづらいところがあったのでいくつか修正して新しいパッケージとして整理しました。\nhttps://zenn.dev/shiro46/articles/0b1df96a1bab7a\n\n パッケージの概要\npythonのseabornを使ってグラフを描く時に、hue引数を指定すると系列を簡単に分けられるのですが、数が増えすぎると見づらくなることがあります。\n\n色が多くなり、パッと見て注目ポイントがわからない図\n今回は、系列が多いときに一部の系列のみカラー表示とす...",
          "link": "https://zenn.dev/shiro46/articles/42c79863658b63",
          "publishedOn": "2023-10-01T12:38:46.000Z",
          "wordCount": 298,
          "title": "【python】seabornで系列数が多い時にハイライト表示したグラフが描けるライブラリ Vol.2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uzIAcW7Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591seaborn%25E3%2581%25A7%25E7%25B3%25BB%25E5%2588%2597%25E6%2595%25B0%25E3%2581%258C%25E5%25A4%259A%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AB%25E3%2583%258F%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2588%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%258C%25E6%258F%258F%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520Vol.2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uzIAcW7Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591seaborn%25E3%2581%25A7%25E7%25B3%25BB%25E5%2588%2597%25E6%2595%25B0%25E3%2581%258C%25E5%25A4%259A%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AB%25E3%2583%258F%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2588%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%258C%25E6%258F%258F%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520Vol.2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/wisteria30/articles/2f6b8433a62919",
          "author": "かっか",
          "description": "はじめに\n結論から言うと、依存ライブラリであるtree-sitter-languagesがaarch64アーキテクチャのmanylinux2014版のwheelファイルを提供していないが原因です。\n加えてこのライブラリはソースインポートをサポートしていないので、根本解決はメンテナーに対応するバイナリファイルを作成してもらう他ないです。\nこれに該当する記事全然見つからなくて、poetryやllama-indexって意外とまだ使われていないなーと実感しました。\n\n 暫定対処\n\nimage build時に--platform linux/amd64 を付けてx86アーキテクチャで開発する\n...",
          "link": "https://zenn.dev/wisteria30/articles/2f6b8433a62919",
          "publishedOn": "2023-10-01T12:33:06.000Z",
          "wordCount": 722,
          "title": "poetryでllama-indexをm1 docker環境にinstallできなくてつらい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4gcq-B4W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%25E3%2581%25A7llama-index%25E3%2582%2592m1%2520docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25ABinstall%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A6%25E3%2581%25A4%25E3%2582%2589%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25A3%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lBT25tc1dwSEdtbzJ1TUItZzFlR2RKOWlLYXJvN0RRa1lfOFRGUGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4gcq-B4W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%25E3%2581%25A7llama-index%25E3%2582%2592m1%2520docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25ABinstall%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A6%25E3%2581%25A4%25E3%2582%2589%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25A3%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lBT25tc1dwSEdtbzJ1TUItZzFlR2RKOWlLYXJvN0RRa1lfOFRGUGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyd/articles/c96c8600e2308b",
          "author": "hyd",
          "description": "概要\nPythonを本格的にお仕事で使うことになったので、オレオレ勉強だけでなく入門書からやり直そうと決意。1週間かけて「新・明解 Python入門 第2版」を読んだので、その記録です。\n\n p60 多重の値比較\nList3-16とList3-18が等価。この書き方に慣れることができるだろうか。\n\nList3-16\nif 3<= month and month <= 5:\n    print('それは春です。')\nelif 6 <= month and month <= 8:\n    print('それは夏です。')\nelif 9 <= month an...",
          "link": "https://zenn.dev/hyd/articles/c96c8600e2308b",
          "publishedOn": "2023-10-01T11:54:22.000Z",
          "wordCount": 2225,
          "title": "新・明解 Python入門 第2版 感想文",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WA5duTgk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2583%25BB%25E6%2598%258E%25E8%25A7%25A3%2520Python%25E5%2585%25A5%25E9%2596%2580%2520%25E7%25AC%25AC2%25E7%2589%2588%2520%25E6%2584%259F%25E6%2583%25B3%25E6%2596%2587%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hyd%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1bWluVUowcFgydEsxVWllUVNuby1KRE9KZDNuQnRnbks1UmhUWFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WA5duTgk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2583%25BB%25E6%2598%258E%25E8%25A7%25A3%2520Python%25E5%2585%25A5%25E9%2596%2580%2520%25E7%25AC%25AC2%25E7%2589%2588%2520%25E6%2584%259F%25E6%2583%25B3%25E6%2596%2587%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hyd%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1bWluVUowcFgydEsxVWllUVNuby1KRE9KZDNuQnRnbks1UmhUWFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/raio/articles/0506765ae3d135",
          "author": "Raio｜高校生エンジニア",
          "description": "はじめに\nみなさん、こんにちは。高校生エンジニアのRaioです！\n平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻\n↓筆者について↓\nhttps://qiita.com/Raio14f/items/ef0fb67685b36298bcb0\n今回の記事では、0円で読める機械学習のおすすめ技術書5選を紹介します！\nご興味ある方は、是非最後までご覧ください！\n\n 技術書を無料で読む方法\nKindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌\n今回、紹介する技術書はKindleUnlimitedに加入することで無料...",
          "link": "https://zenn.dev/raio/articles/0506765ae3d135",
          "publishedOn": "2023-10-01T11:02:49.000Z",
          "wordCount": 414,
          "title": "0円で読める機械学習のおすすめ技術書5選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OAPLIvXy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:0%25E5%2586%2586%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AE%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B85%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OAPLIvXy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:0%25E5%2586%2586%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AE%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B85%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kterashi02/articles/86c76f8d96382b",
          "author": "kterashi02",
          "description": "はじめに\nDockerコンテナで動作するFastAPIのコードを以下のようにVSCodeでデバッグ（変数の状態を確認したり、ステップ実行したり）するための方法を記載します。\nDjangoやFlaskでも同様の方法でデバッグの設定を行うことができると思います。\n\n コンテナ側の設定\nrequirementsファイルにdebugpyを追加\ndebugpy\ndockerfile内でdebugpyで起動するように設定\nCMD [\"python3\", \"-m\", \"debugpy\", \"--listen\", \"0.0.0.0:5678\", \"-m\", \"uvicorn\", \"app.main:...",
          "link": "https://zenn.dev/kterashi02/articles/86c76f8d96382b",
          "publishedOn": "2023-10-01T10:03:17.000Z",
          "wordCount": 1473,
          "title": "Dockerコンテナ内のFastAPIのコードをVS Codeでデバッグする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3EyBz8nQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%2586%2585%25E3%2581%25AEFastAPI%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592VS%2520Code%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kterashi02%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxZDY4ZTdkMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3EyBz8nQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%2586%2585%25E3%2581%25AEFastAPI%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592VS%2520Code%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kterashi02%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxZDY4ZTdkMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/monogotu_ds/articles/3b8609ac263621",
          "author": "monogotu_ds",
          "description": "目的\nM1 Mac上のDockerコンテナ内で、Pythonの数理最適化ライブラリPuLPを動かしたい。\n\n 事象\n\nM1 Mac上のDockerコンテナに、単にPuLPをインストールしてoptimizeメソッドを実行すると、以下のようなエラーが生じる。OSError: [Errno 8] Exec format error: '/src/.venv/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc'\n\n\nPythonの仮想環境venvでは、上記エラーは発生しなかった。\n\n\n 推定原因\n\n上記エラーは、最適化ソル...",
          "link": "https://zenn.dev/monogotu_ds/articles/3b8609ac263621",
          "publishedOn": "2023-10-01T07:39:34.000Z",
          "wordCount": 871,
          "title": "Pythonの最適化ライブラリPuLP をM1 Mac × Dockerで動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--to9PlU7K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAPuLP%2520%25E3%2582%2592M1%2520Mac%2520%25C3%2597%2520Docker%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:monogotu_ds%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlYTZkYWY0ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--to9PlU7K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAPuLP%2520%25E3%2582%2592M1%2520Mac%2520%25C3%2597%2520Docker%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:monogotu_ds%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlYTZkYWY0ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/koupro0204/articles/e25d99a8975cfc",
          "author": "い。",
          "description": "今回は毎回更新されるchromeに合わせたドライバーを自動でしてくれるコードを解説していきます。\nZennに投稿するようなので解説になります。\n環境によって変わると思うので先ずは環境から\n\n 環境\n\nWindows 11\nselenium         4.13.0\nPython 3.11.5\nChrome 115以降\n\n必要な情報はこれくらいですかね。\n特にSeleniumはバージョンによって起動の仕方とか違うので気を付けてください。\nchromeは115より前のバージョンだとダウンロード先が変わるので注意してください。\n一応以前のバージョンのやつもGithub内に入れておきます。（...",
          "link": "https://zenn.dev/koupro0204/articles/e25d99a8975cfc",
          "publishedOn": "2023-09-30T22:39:55.000Z",
          "wordCount": 1971,
          "title": "【Python】seleniumで使うChromeDriverを自動更新",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j3G9fW08--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591selenium%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586ChromeDriver%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B4%25E6%2596%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j3G9fW08--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591selenium%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586ChromeDriver%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B4%25E6%2596%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/spacemarket/articles/0b2102f35c28e9",
          "author": "miotava",
          "description": "代入式・ウォルラス（セイウチ）演算子とは\n代入式はウォルラス演算子（:=）で変数に値を割り当てる新しい構文で、Python 3.8から導入された機能になります。\n通常の代入文と同じように変数への代入を実行するだけでなく、その結果を式全体の値として返します。\n・・・といってもちょっと分かりづらいと思うので、通常の代入文との比較を交えて説明したいと思います。\n\n 通常の\"代入文\"を使った方法\nimport random\n\ndef get_some_integer():\n    return random.randint(0, 5)\n\n# 通常の方法\nvalue = get_some_in...",
          "link": "https://zenn.dev/spacemarket/articles/0b2102f35c28e9",
          "publishedOn": "2023-09-30T14:20:38.000Z",
          "wordCount": 1163,
          "title": "Pythonでウォルラス演算子を使う際には変数スコープに注意する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wTi2HvEF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%25A9%25E3%2582%25B9%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AB%25E3%2581%25AF%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AB%25E6%25B3%25A8%25E6%2584%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:miotava%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5YjE3ZGU0ZTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wTi2HvEF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%25A9%25E3%2582%25B9%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AB%25E3%2581%25AF%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AB%25E6%25B3%25A8%25E6%2584%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:miotava%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5YjE3ZGU0ZTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/259ff950936212",
          "author": "tirimen",
          "description": "本記事の目的\n異常検知の代表的手法であるMT法について自分用のメモを残す。\n\n MT法とは\n異常検知手法の代表的な手法である。異常検知には、回帰や決定木、深層学習などの手法でも行えるが、MT法の良いところは「計算速度が速く、説明可能な統計的手法」である。下記のリンクがMT法の特徴を詳しくまとめているので、確認してほしい。\nhttps://www.angletry.com/diffmt/\n\n 理論編：MT法を分解して考えてみよう\n\n ステップ0：前準備\nシンプルに考えたいので、2変量の装置時系列データを考える。ここでは変量を圧力と水温としておく。時刻1からnまでのデータ組X=(X_1,...",
          "link": "https://zenn.dev/tirimen/articles/259ff950936212",
          "publishedOn": "2023-09-30T05:11:09.000Z",
          "wordCount": 1477,
          "title": "PythonでMT法を用いて異常検知してみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wV7Aglbd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7MT%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wV7Aglbd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7MT%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/waka07/articles/development-diary_1-2",
          "author": "Waka",
          "description": "作りたいシステム\n忙しい人のためのギフト提案型AI「AiSAP!(エイサップ)」\n忙しい社会人のために、AIが可能な限り素早く（ASAP: As Soon As Possible）、最適なギフトを提案してくれるWebサービス。\n\n 画面イメージ\n画面イメージはこんな感じです。\nドロップダウンで条件を選択して検索ボタンを押下すると、ランキングされた商品一覧が表示されます。\n\n\n DB設計\nER図はこんな感じです。\n\n商品テーブル：商品情報を管理。商品1つにつき1つのIDを付与。\n受け取り手テーブル：受け取り手の情報を管理。受け取り手のパターンは検索条件のパターン数だけ存在するため有限な...",
          "link": "https://zenn.dev/waka07/articles/development-diary_1-2",
          "publishedOn": "2023-09-30T00:56:58.000Z",
          "wordCount": 116,
          "title": "【個人開発 #1-2】レコメンドシステムを作ってみた vol.2　〜画面イメージ・DB設計・処理の流れ〜",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lD4aoSuS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%2520%25231-2%25E3%2580%2591%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520vol.2%25E3%2580%2580%25E3%2580%259C%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25BBDB%25E8%25A8%25AD%25E8%25A8%2588%25E3%2583%25BB%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E6%25B5%2581%25E3%2582%258C%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Waka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMTFjYWNkY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lD4aoSuS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%2520%25231-2%25E3%2580%2591%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520vol.2%25E3%2580%2580%25E3%2580%259C%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25BBDB%25E8%25A8%25AD%25E8%25A8%2588%25E3%2583%25BB%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E6%25B5%2581%25E3%2582%258C%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Waka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMTFjYWNkY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-narou-syosetu-api",
          "author": "derwind",
          "description": "目的\n小説家になろう というサイトがあって、ユーザーが投稿した小説を読めるらしい。たぶん 転生したらスライムだった件 が有名？\nたまたま なろう小説API というものを見つけたので、普段は叩かない Web API を叩いてみようという内容。\n\n 実装\n必要なモジュールを import する:\nimport io\nimport json\nimport gzip\nimport requests\n\n 欲しい情報を指定する\n検索項目を絞る。今回は「小説名」「作者名」「小説のあらすじ」「ジャンル」をターゲットにしてみたい。また、大域負荷を下げるために、of フィールドでターゲットの情報だけをフ...",
          "link": "https://zenn.dev/derwind/articles/dwd-narou-syosetu-api",
          "publishedOn": "2023-09-29T15:30:09.000Z",
          "wordCount": 1562,
          "title": "なろう小説API というものを呼んでみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hxsAy3GY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2582%258D%25E3%2581%2586%25E5%25B0%258F%25E8%25AA%25ACAPI%2520%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E5%2591%25BC%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hxsAy3GY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2582%258D%25E3%2581%2586%25E5%25B0%258F%25E8%25AA%25ACAPI%2520%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E5%2591%25BC%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/raio/articles/5430bedac9757d",
          "author": "Raio｜高校生エンジニア",
          "description": "はじめに\nみなさん、こんにちは。高校生エンジニアのRaioです！\n平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻\n↓筆者について↓\nhttps://qiita.com/Raio14f/items/ef0fb67685b36298bcb0\n今回の記事では、綺麗なコードの書き方が学べる技術書5選を紹介します！\nご興味ある方は、是非最後までご覧ください！\n\n 技術書を無料で読む方法\nKindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌\n\n200万冊以上の書籍が何冊でも読み放題\n月額980円が今なら1ヶ月無料\n...",
          "link": "https://zenn.dev/raio/articles/5430bedac9757d",
          "publishedOn": "2023-09-29T09:13:16.000Z",
          "wordCount": 326,
          "title": "綺麗なコードの書き方が学べる技術書3選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GdO0xRj8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B6%25BA%25E9%25BA%2597%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%258C%25E5%25AD%25A6%25E3%2581%25B9%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B83%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GdO0xRj8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B6%25BA%25E9%25BA%2597%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%258C%25E5%25AD%25A6%25E3%2581%25B9%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B83%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e3123d9d545c2f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-315 A - tcdr\n\n\n\n 提出結果\ndef getString():\n    return input()\n\ndef main():\n    s = list(getString())\n    t = [c for c in s if c not in ['a', 'e', 'i', 'o', 'u']]\n\n    print(\"\".join(t))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e3123d9d545c2f",
          "publishedOn": "2023-09-29T05:36:15.000Z",
          "wordCount": 275,
          "title": "［AtCoder］ABC-315｜A - tcdr",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LFogHKv8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-315%25EF%25BD%259CA%2520-%2520tcdr%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LFogHKv8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-315%25EF%25BD%259CA%2520-%2520tcdr%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/bffa54a5e72b24",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-315 B - The Middle Day\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\ndef getIntList():\n    return list(map(int, input().split()))\n\ndef main():\n    m = getInt()\n    d = getIntList()\n\n    c = (sum(d) + 1) // 2\n\n    r = []\n    for i in range(m):\n        if sum(d[:i]) > c:\n        ...",
          "link": "https://zenn.dev/hyperdb/articles/bffa54a5e72b24",
          "publishedOn": "2023-09-29T05:36:14.000Z",
          "wordCount": 482,
          "title": "［AtCoder］ABC-315｜B - The Middle Day",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VAHra0qT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-315%25EF%25BD%259CB%2520-%2520The%2520Middle%2520Day%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VAHra0qT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-315%25EF%25BD%259CB%2520-%2520The%2520Middle%2520Day%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/inaturam/articles/c3a40db166de61",
          "author": "inaturam",
          "description": "matplotlib cheatsheetsのよく使う部分だけをまとめた早見表を作成しました。\nまた、グラフの枠線、軸、補助線の描写の、上部にURLがついているグラフはnkayさんのQiitaの記事matplotlibのめっちゃまとめのものを引用させて頂いています。\"matplotlibのめっちゃまとめ\"はmatplotlibの本質的な部分を射ながら網羅的にまとめられた非常に良い記事で、入出力に関しても具体的に例示されていますので、plotsに苦手意識がある方はこの記事を読んでおくことを強くおすすめします。\nhttps://qiita.com/nkay/items/d1eb91e33b9...",
          "link": "https://zenn.dev/inaturam/articles/c3a40db166de61",
          "publishedOn": "2023-09-28T15:34:47.000Z",
          "wordCount": 178,
          "title": "Matplotlib Cheatsheets Cheatsheet",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mbh2tk_M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Matplotlib%2520Cheatsheets%2520Cheatsheet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:inaturam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNTA4ZjI2YzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mbh2tk_M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Matplotlib%2520Cheatsheets%2520Cheatsheet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:inaturam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNTA4ZjI2YzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/k02miu/articles/5e14024bd2294b",
          "author": "k02miu",
          "description": "はじめに\nSpreadSheetに記載されたGoogleDriveのフォルダIDのファイルをコピーしてDBに登録するような処理を作っていたところ２箇所ほど躓いたので記載しておきます。\n謎のゴミファイルがくっついてくる。\nフォルダを覗いてもそんなファイルはない。。\nみたいなやつの真相です。\n\n どんな状態\n処理はPythonでgoogleapiclientを使用してます。\n\nあるドライブのフォルダの下に入っているファイルの一覧を取得しようとしたが、取得できない。\nフォルダには動画が一つしかない状態なのにも関わらず謎のファイルがくっついてくる。\n\n\n 原因\n\nドライブが共有のものの場合、...",
          "link": "https://zenn.dev/k02miu/articles/5e14024bd2294b",
          "publishedOn": "2023-09-28T13:55:53.000Z",
          "wordCount": 255,
          "title": "GoogleDrive APIでつまづいたとこ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0V_dDSQb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoogleDrive%2520API%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%25BE%25E3%2581%25A5%25E3%2581%2584%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k02miu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pZODZEUVgxcVBTbEt3a1FseWFCS3Uzd2VtRk02UVhNLUxNWWdZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0V_dDSQb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoogleDrive%2520API%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%25BE%25E3%2581%25A5%25E3%2581%2584%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k02miu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pZODZEUVgxcVBTbEt3a1FseWFCS3Uzd2VtRk02UVhNLUxNWWdZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/raio/articles/0bdd5a5e32f32f",
          "author": "Raio｜高校生エンジニア",
          "description": "はじめに\nみなさん、こんにちは。高校生エンジニアの@Raioです🙌\n平日は公立高校に通いながら、放課後や休日はSkyGrid株式会社のエンジニアとして働いています🧑🏻‍💻\n今回の記事では、\nフリーランスエンジニア必見！年収100万超えたい人におすすめ案件サイト\nをご紹介します！\n\nフリーランスエンジニアやってるけど、年収が上がらない\n今よりも収入を増やしたい\n年収1000万円超えたい\n\nこんな方に、おすすめの記事となっております！\nご興味ある方は、是非最後までご覧ください👀\n\n エミリーエンジニアとは？\n「エミリーエンジニア」とは、フリーランスエンジニアを専門としたエージェントサービ...",
          "link": "https://zenn.dev/raio/articles/0bdd5a5e32f32f",
          "publishedOn": "2023-09-28T11:31:35.000Z",
          "wordCount": 312,
          "title": "フリーランスで年収1000万超えたい人におすすめ案件サイト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NiAI-lS3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25A7%25E5%25B9%25B4%25E5%258F%258E1000%25E4%25B8%2587%25E8%25B6%2585%25E3%2581%2588%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E6%25A1%2588%25E4%25BB%25B6%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NiAI-lS3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25A7%25E5%25B9%25B4%25E5%258F%258E1000%25E4%25B8%2587%25E8%25B6%2585%25E3%2581%2588%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E6%25A1%2588%25E4%25BB%25B6%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/1aba202d413776",
          "author": "yKesamaru",
          "description": "[faiss] データセットから似ている顔を検索する\n\n\n\n[faiss] データセットから似ている顔を検索する\n\n\nはじめに\n\n顔データセット\n顔写真\n\n\n実装\n実行結果\nまとめ\n\n\n\n\n はじめに\nモデルの学習に使われていない顔データセットを用い、用意した写真と似ている顔を検索します。\n今回の記事では、顔写真を1枚用意し、faissを用いて直接データセットから検索します。\n\n 顔データセット\nfind . -maxdepth 2 -type f -name *.png | wc -l\n57637\n約5万7千枚の顔写真が含まれるデータセットを用意しました。\n\n 顔写真\n\n\n 実装\n...",
          "link": "https://zenn.dev/ykesamaru/articles/1aba202d413776",
          "publishedOn": "2023-09-28T10:56:26.000Z",
          "wordCount": 371,
          "title": "[faiss] データセットから似ている顔を検索する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TMf-azkd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bfaiss%255D%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E4%25BC%25BC%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E9%25A1%2594%25E3%2582%2592%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TMf-azkd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bfaiss%255D%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E4%25BC%25BC%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E9%25A1%2594%25E3%2582%2592%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/18_awesome_python_repos_2023",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、Web開発でPythonを学ぶ上で絶対に確認するべきGitHubリポジトリを18個、私の独断と偏見で解説する。\n\n 対象とする読者\n\nこれからPythonをWeb開発で導入したい人\nPythonを使ったWeb開発に興味がある人\nPythonに関連した情報収集している人\nタイトルでなんとなく気になった人\n\n\n Django\n\nDjangoはPythonで開発されたWebフレームワークである。最大の特徴は、バックエンド開発に必要な機能がデフォルトで搭載されている点にある。手軽に、簡単なWebアプリケーションを開発したいなら選択肢に入る。\n\n Flask\n\nシンプ...",
          "link": "https://zenn.dev/nameless_sn/articles/18_awesome_python_repos_2023",
          "publishedOn": "2023-09-28T09:47:40.000Z",
          "wordCount": 357,
          "title": "PythonでWeb開発を学ぶ上で確認するべきGitHubリポジトリ 18選 2023年版",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y0zpFNh---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Web%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25E4%25B8%258A%25E3%2581%25A7%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258DGitHub%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%252018%25E9%2581%25B8%25202023%25E5%25B9%25B4%25E7%2589%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y0zpFNh---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Web%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25E4%25B8%258A%25E3%2581%25A7%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258DGitHub%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%252018%25E9%2581%25B8%25202023%25E5%25B9%25B4%25E7%2589%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/aabd8cf6b8531b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-314 B - Roulette\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\ndef getIntList():\n    return list(map(int, input().split()))\n\ndef main():\n    n = getInt()\n    c = []\n    a = [[]]\n\n    for i in range(n):\n        c.append(getInt())\n        a.append(getIntList())\n\n    x = getInt()\n   ...",
          "link": "https://zenn.dev/hyperdb/articles/aabd8cf6b8531b",
          "publishedOn": "2023-09-28T05:25:35.000Z",
          "wordCount": 542,
          "title": "［AtCoder］ABC-314｜B - Roulette",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IJ7aZPgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-314%25EF%25BD%259CB%2520-%2520Roulette%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IJ7aZPgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-314%25EF%25BD%259CB%2520-%2520Roulette%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7b808932e044b3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-314 A - 3.14\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\ndef main():\n    n = getInt()\n    p = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679';\n\n    print(p[:n+2])\n\nif __name__ == \"__main__\":\n    main()```",
          "link": "https://zenn.dev/hyperdb/articles/7b808932e044b3",
          "publishedOn": "2023-09-28T05:25:35.000Z",
          "wordCount": 219,
          "title": "［AtCoder］ABC-314｜A - 3.14",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--utwhkvY7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-314%25EF%25BD%259CA%2520-%25203.14%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--utwhkvY7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-314%25EF%25BD%259CA%2520-%25203.14%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/zuzuzu/articles/oss_contribute",
          "author": "zu",
          "description": "概要\nOSS活動を開始して2ヵ月ほど経ちました。\n最初は「OSS活動なんて選ばれた優秀なエンジニアしか出来ない」と思っていました。\nしかし実際に始めてみたところすんなりマージまでいきました。\nOSS活動は自分にあったIssueを選択出来れば誰でも出来ると思います。\nそして得られたモノも多いのでそちらについて話していきながら\nどうすればOSS活動が出来るのか解説していきたいと思います。\n\n 自己紹介\n\nIT業界歴 10年\nしかし6年間運用監視業務を行っていた\n実質経験4年程度のインフラエンジニア\n直近の案件ではSREをしてたので CIツール , terraform , ansibleを...",
          "link": "https://zenn.dev/zuzuzu/articles/oss_contribute",
          "publishedOn": "2023-09-28T05:22:09.000Z",
          "wordCount": 247,
          "title": "2ヵ月OSS活動をした結果…",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QfiZaqSj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2%25E3%2583%25B5%25E6%259C%2588OSS%25E6%25B4%25BB%25E5%258B%2595%25E3%2582%2592%25E3%2581%2597%25E3%2581%259F%25E7%25B5%2590%25E6%259E%259C%25E2%2580%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYzkyNjY5ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QfiZaqSj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2%25E3%2583%25B5%25E6%259C%2588OSS%25E6%25B4%25BB%25E5%258B%2595%25E3%2582%2592%25E3%2581%2597%25E3%2581%259F%25E7%25B5%2590%25E6%259E%259C%25E2%2580%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYzkyNjY5ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/iasl/articles/4e2f0192bf9f0c",
          "author": "toky",
          "description": "あれから、数回動作確認していて思いました。1フレームしか処理していないじゃないか!と... videoBLIPで学習させたモデルを使っているのにもったいない。ということで、しっかり動画像に反映させていきます。\n\n 勉強せねば...\nということで、さっそくvideoBLIPをより深く理解していこう思います。\n\n demoを実行&&考察\nそれでは、まずはapp.pyを見ていきます。app.pyの16行目にある通り、model: VideoBlipForConditionalGenerationという、Blip2VisionModelを継承したクラスを用いています。Blip2V...",
          "link": "https://zenn.dev/iasl/articles/4e2f0192bf9f0c",
          "publishedOn": "2023-09-28T02:08:21.000Z",
          "wordCount": 3371,
          "title": "カメラ情報を用いてリアルタイムで状況をテキストに起こしたい (Ros2) part3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Xj9RF5Sl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E7%258A%25B6%25E6%25B3%2581%25E3%2582%2592%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%2528Ros2%2529%2520part3%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%25B2%2590%25E9%2598%259C%25E5%25A4%25A7%25E5%25AD%25A6%25E3%2582%25A2%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:toky%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwZWMxNmVjM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4YmM3ZTVhNGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Xj9RF5Sl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E7%258A%25B6%25E6%25B3%2581%25E3%2582%2592%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%2528Ros2%2529%2520part3%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%25B2%2590%25E9%2598%259C%25E5%25A4%25A7%25E5%25AD%25A6%25E3%2582%25A2%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:toky%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwZWMxNmVjM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4YmM3ZTVhNGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/daidai_daitai/articles/6b828ad32bb6c2",
          "author": "橙。",
          "description": "その2では何をしたのか\n\"その2\"では日経先物のタイムバーにSQごとのidを割り当て、残存時間を計算しました\n今回も使用しますので、まだ見ていない方は参照してください\nhttps://zenn.dev/daidai_daitai/articles/64f45e2d3df2b0\n\n その3では何をするのか\nSQごとのidを使用し値動きの特徴などを見ていきます\n・マイナーSQとメジャーSQで値動きに違いがあるのか\n・上昇しやすい月、下落しやすい月はあるのか\nなどを見ていきます。少し長くなりそうなので適当に記事を分割して書いていく事にします。\n\n 概要\n\nSQごとにidを割り当てる\nSQカ...",
          "link": "https://zenn.dev/daidai_daitai/articles/6b828ad32bb6c2",
          "publishedOn": "2023-09-27T13:29:36.000Z",
          "wordCount": 5879,
          "title": "日経先物分析その3...SQ別の値動きに特徴はあるか（1）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fdJZI5g9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE3...SQ%25E5%2588%25A5%25E3%2581%25AE%25E5%2580%25A4%25E5%258B%2595%25E3%2581%258D%25E3%2581%25AB%25E7%2589%25B9%25E5%25BE%25B4%25E3%2581%25AF%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%25EF%25BC%25881%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fdJZI5g9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE3...SQ%25E5%2588%25A5%25E3%2581%25AE%25E5%2580%25A4%25E5%258B%2595%25E3%2581%258D%25E3%2581%25AB%25E7%2589%25B9%25E5%25BE%25B4%25E3%2581%25AF%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%25EF%25BC%25881%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}