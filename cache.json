{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/labcode/books/1acc4991f8f8b8",
          "author": "LabCode（ラボコード）",
          "description": "📰 概要\n本書は、Pythonを用いた偏微分方程式の数値シミュレーションを学べる技術書です。\n\n偏微分方程式の理論を解説する書籍は数多く存在しますが、実際の実装にフォーカスした書籍はそれほど多くありません。\n本書では、偏微分方程式の数値計算理論を始点とし、実装方法に至るまでを具体的に解説していきます。\n\n実装に関しては、計算に関してだけではなく、グラフやアニメーションの作成方法、計算ログの取り方についても、コード例を交えて詳細に説明しています。\n\n理論から実装までの全過程を一貫して学びたい方に最適な一冊です。\n\nまえがきと第1章は無料で公開しておりますので、ぜひご一読ください。\n\n👍 本書でできるようになること\n主に以下の四つのことができるようになります。\n\n・ 偏微分方程式から差分方程式を導けるようになる\n・ 差分方程式をプログラムに落とし込み、計算できるようになる\n・ 計算結果をグラフやアニメーションを使って可視化できるようになる\n・ 計算結果をログとして出力できるようになる\n\n💰 販売価格\n期間限定で ¥2,500→¥1,000 (60% OFF!!)で販売しております！\n\n📰 アップデート情報\n2024/02/14：技術書初版がリリースされました。\n\n本技術書は随時アップデートされていきます。\n一度購入された方はアップデートされたとしても追加料金は発生しませんのでご安心ください。",
          "link": "https://zenn.dev/labcode/books/1acc4991f8f8b8",
          "publishedOn": "2024-02-13T16:17:32.000Z",
          "wordCount": 155,
          "title": "【中級者向け】Pythonで学ぶ偏微分方程式の数値シミュレーション",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fc5ATSRi--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80ZTE4Mzc5NzdlLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fc5ATSRi--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80ZTE4Mzc5NzdlLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/kotoba_tech/articles/3eb0984d8fdfb8",
          "author": "Kazuki Fujii",
          "description": "はじめに\nKotoba Technologiesでインターンをしている東京工業大学 B4 横田研究室の藤井(@okoge_kaz)です。\nKotoba TechnologiesはNLPと分散並列学習に関する技術を用いて、日本及び非英語圏におけるLLMやマルチモーダルモデルの実運用に向けた研究開発を行っています。\n今回は、Transformerに代わるアーキテクチャとして注目を集めているMamba(State Space Model: 状態空間モデル)を分散学習するためのライブラリであるkotomambaを開発、公開しました。\n本記事は、このライブラリの使用方法と、Mambaについて簡...",
          "link": "https://zenn.dev/kotoba_tech/articles/3eb0984d8fdfb8",
          "publishedOn": "2024-02-13T08:00:00.000Z",
          "wordCount": 2295,
          "title": "Kotomamba: Mamba State Space Model 分散学習ライブラリ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ARKSNlWL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotomamba%253A%2520Mamba%2520State%2520Space%2520Model%2520%25E5%2588%2586%25E6%2595%25A3%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kazuki%2520Fujii%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2ZGQwZTkyOTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kotoba%2520Technologies%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYTAwZDNmYWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ARKSNlWL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotomamba%253A%2520Mamba%2520State%2520Space%2520Model%2520%25E5%2588%2586%25E6%2595%25A3%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kazuki%2520Fujii%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2ZGQwZTkyOTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kotoba%2520Technologies%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYTAwZDNmYWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hir0_728/articles/78b87e79b1053b",
          "author": "HIR0",
          "description": "はじめに\n開発を行っていく中で、ユニークな文字列を必要なタイミングがあった。\n本記事では、Pythonを利用した環境において、生成する文字列がユニークであることを目標とし、\nその手法にどんなものがあるかをまとめる。\n\n 前提条件\n\n生成する文字列は衝突する確率が低いこと\n実装はPythonで行う\n\n\n 考えられる手段\n\nランダムモジュールを利用する\nタイムスタンプを利用する\nUUIDを利用する\nハッシュ関数を利用する\nユニークキー生成ライブラリを利用する\n\n\n 1. ランダムモジュールを利用する\nまずは単純にランダムな数字や文字を組み合わせてユニークな文字列を生成してみる。\nだがしか...",
          "link": "https://zenn.dev/hir0_728/articles/78b87e79b1053b",
          "publishedOn": "2024-02-13T03:41:58.000Z",
          "wordCount": 817,
          "title": "ユニークな文字列(キー)を生成したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TdmbWDhR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A6%25E3%2583%258B%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AA%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%2528%25E3%2582%25AD%25E3%2583%25BC%2529%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HIR0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxNjQ1MmNkOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TdmbWDhR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A6%25E3%2583%258B%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AA%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%2528%25E3%2582%25AD%25E3%2583%25BC%2529%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HIR0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxNjQ1MmNkOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nazo/articles/9230a54acb41e4",
          "author": "nazo",
          "description": "pytest-asyncio も SQLAlchemy も優秀なのでそんなに困ることはないのですが、いくつかはまりどころがあったのでメモしておきます。\n\n aiomysql では sync_engine が使えない\naiomysql は asyncio でしか使えないようになっているので、sync_engine が利用できません。あまり困ることはないですが、 click などを使う時でも async を強制されるので少し面倒です。 asyncio.run() で囲みましょう。\nデータベース全体の操作は SQLAlchemy の少し外側に出ることが多いので、 async を対応させるのはひ...",
          "link": "https://zenn.dev/nazo/articles/9230a54acb41e4",
          "publishedOn": "2024-02-13T02:30:00.000Z",
          "wordCount": 1775,
          "title": "SQLAlchemy+aiomysql+pytest-asyncioを使ったデータベースのテストの書き方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4ocr0UyN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%252Baiomysql%252Bpytest-asyncio%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nazo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZb0xlSnJaX3FJdGlhbThncXZyVkhIVUxRSXFWcUs5VGNqaXp1MWo4PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4ocr0UyN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%252Baiomysql%252Bpytest-asyncio%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nazo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZb0xlSnJaX3FJdGlhbThncXZyVkhIVUxRSXFWcUs5VGNqaXp1MWo4PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/buenotheebiten/articles/396e06533e7e9a",
          "author": "えびてん",
          "description": "LangChainでHTMLテキストを分割して処理をするためにHTMLHeaderTextSplitterを使用した時に、下記エラーが出てしまいました。\nValueError: Input object has no document: lxml.etree._ElementTree\n\n 解決方法「lxmlライブラリのバージョン変更」\n原因としては、lxmlのバージョンが低かったことで起きたエラーのようです。\npip install lxml==4.9.4\n\n まとめ\nエラー部分に関係するライブラリのバージョン確認が大事だと改めて認識しました。\nGoogle Colaboratoryでは...",
          "link": "https://zenn.dev/buenotheebiten/articles/396e06533e7e9a",
          "publishedOn": "2024-02-13T01:58:31.000Z",
          "wordCount": 85,
          "title": "【LangChain】HTMLHeaderTextSplitterで出たエラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--emYcPNBc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591HTMLHeaderTextSplitter%25E3%2581%25A7%25E5%2587%25BA%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--emYcPNBc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591HTMLHeaderTextSplitter%25E3%2581%25A7%25E5%2587%25BA%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nondescript/articles/60cd1d84ee1e79",
          "author": "素人の戯言",
          "description": "TL;DR\n\nserver.ymlでauth-default-access: deny-all\n\n\nntfy user add posterとntfy access poster \\\"*\\\" wo && ntfy token add posterで投稿用トークン取得\n\nntfy user add ユーザー名とntfy access ユーザー名 \"*\" roで購読権限付与\nWebhookサーバーを建て、Mattermostからのメッセージをカスタマイズしてトークン認証でntfyサーバーにPOST\n\n\n 背景\n自前の通知サーバーを用いたMattermost公式のAndro...",
          "link": "https://zenn.dev/nondescript/articles/60cd1d84ee1e79",
          "publishedOn": "2024-02-12T17:19:24.000Z",
          "wordCount": 1433,
          "title": "MattermostのスマホPush通知をWebhook+ntfy(Basic認証付き)で代用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AyqEXwRK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mattermost%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%259E%25E3%2583%259BPush%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592Webhook%252Bntfy%2528Basic%25E8%25AA%258D%25E8%25A8%25BC%25E4%25BB%2598%25E3%2581%258D%2529%25E3%2581%25A7%25E4%25BB%25A3%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AyqEXwRK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mattermost%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%259E%25E3%2583%259BPush%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592Webhook%252Bntfy%2528Basic%25E8%25AA%258D%25E8%25A8%25BC%25E4%25BB%2598%25E3%2581%258D%2529%25E3%2581%25A7%25E4%25BB%25A3%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nyaru_tech/articles/987f6038e059eb",
          "author": "にゃる～技術があれば覆水すら盆に返る～",
          "description": "記事概要:\nPythonのWebフレームワークであるFastAPIを使用して、画像のアップロードと表示を行う方法について解説します。このガイドでは、FastAPIを使用して画像をバイナリデータとして保存し、それらの画像を表示する方法を示します。\n\n 画像のアップロード\nFastAPIを使用して画像をアップロードするためには、POSTリクエストを受け付け、UploadFileを使用して画像ファイルを受け取ります。以下の例では、/Contents/Createエンドポイントが画像のアップロードを処理しています。\n\npython\n@app.post(\"/Contents/Create\")\n...",
          "link": "https://zenn.dev/nyaru_tech/articles/987f6038e059eb",
          "publishedOn": "2024-02-12T17:04:25.000Z",
          "wordCount": 556,
          "title": "Python FastAPIを使用して画像のアップロードと表示を行う方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d3GADkq2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520FastAPI%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A8%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2582%2583%25E3%2582%258B%25EF%25BD%259E%25E6%258A%2580%25E8%25A1%2593%25E3%2581%258C%25E3%2581%2582%25E3%2582%258C%25E3%2581%25B0%25E8%25A6%2586%25E6%25B0%25B4%25E3%2581%2599%25E3%2582%2589%25E7%259B%2586%25E3%2581%25AB%25E8%25BF%2594%25E3%2582%258B%25EF%25BD%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzMTEwY2JhOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d3GADkq2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520FastAPI%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A8%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2582%2583%25E3%2582%258B%25EF%25BD%259E%25E6%258A%2580%25E8%25A1%2593%25E3%2581%258C%25E3%2581%2582%25E3%2582%258C%25E3%2581%25B0%25E8%25A6%2586%25E6%25B0%25B4%25E3%2581%2599%25E3%2582%2589%25E7%259B%2586%25E3%2581%25AB%25E8%25BF%2594%25E3%2582%258B%25EF%25BD%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzMTEwY2JhOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hamao/articles/97968d347e4696",
          "author": "hamao",
          "description": "したこと\nタイトルの通り、GoCVを使って、ナンプレの自動読み取りをしてみました。\nn+1番煎じですが、昔からの夢だったので作ってみることにしました。Pythonの記事はいくつかあったのですが、そのまま写すだけだと少しつまらないので、せっかくなのでGoで書くことにしました。\n\n 完成品\n\n\n 環境\nM1 Mac\nOS: macOS Sonoma version 14.2.1\n$ brew --version                    \nHomebrew 4.2.7-140-g352f57d\nHomebrew/homebrew-core (git revision 2615...",
          "link": "https://zenn.dev/hamao/articles/97968d347e4696",
          "publishedOn": "2024-02-12T16:02:59.000Z",
          "wordCount": 496,
          "title": "GoCVを使って自動でナンプレを解いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NBzFc4-U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoCV%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2583%258A%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hamao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MGMyYzE1MmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NBzFc4-U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoCV%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2583%258A%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hamao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MGMyYzE1MmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/reochiyo/articles/kaggle_article_1",
          "author": "reochiyo",
          "description": "はじめに\nどうも、都内の大学で情報系の学科を専攻している千代丸と申します。\nこの記事はKaggleに参加して機械学習を勉強しよう！というものの超入門記事になっています。\n私は普段から機械学習や生成AIなどの文献を読み漁っており、ハンズオン形式でもっと深く理解したいという思いから最近Kaggleに参加しました。\n\n この記事を読んで欲しい人\n\n「Kaggle」もしくは「機械学習」という言葉を聞いたことがある人・興味がある人\nAI系、データサイエンスに興味がある人\n機械学習、データサイエンスなどを始めたいが何から始めればいいかわからない人\n\n\n Kaggleって何？\nKaggle（呼び方...",
          "link": "https://zenn.dev/reochiyo/articles/kaggle_article_1",
          "publishedOn": "2024-02-12T16:00:14.000Z",
          "wordCount": 169,
          "title": "【Kaggle】Kaggleで学習する機械学習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dsDgilph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Kaggle%25E3%2580%2591Kaggle%25E3%2581%25A7%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:reochiyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVpvZ25XNnJPckxBU1owZXd2Si1rY29qS0JVa1BMTzl1T0ctbDNMRVZzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dsDgilph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Kaggle%25E3%2580%2591Kaggle%25E3%2581%25A7%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:reochiyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVpvZ25XNnJPckxBU1owZXd2Si1rY29qS0JVa1BMTzl1T0ctbDNMRVZzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/daidai_daitai/articles/be62e3e9882441",
          "author": "橙。",
          "description": "はじめに\nこの記事は「GIS × Python Tutorial」の関連記事です。\n前回はgeopandasの基本的な使い方を解説したので、今回はgeodatasetsのAPIを使用して、シカゴ周辺のデータを取得し、データをこねくり回してみましょう。\n実際にデータを分析する際には、いくつかのデータを組み合わせる場合が多いので、この中から今回は以下のデータを取得し組み合わせて見ましょう。全てシカゴのデータです\n\n2000年と2010年の地域別にみる人口の変化（Polygon）\n2011年の放置車両（Point）\n\ngeodatasets\nhttps://geodatasets.read...",
          "link": "https://zenn.dev/daidai_daitai/articles/be62e3e9882441",
          "publishedOn": "2024-02-12T12:41:29.000Z",
          "wordCount": 6998,
          "title": "GIS × Python Tutorial Session5 ~ geopandas 実践編 ~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nzMTEYGD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIS%2520%25C3%2597%2520Python%2520Tutorial%2520Session5%2520%7E%2520geopandas%2520%25E5%25AE%259F%25E8%25B7%25B5%25E7%25B7%25A8%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nzMTEYGD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIS%2520%25C3%2597%2520Python%2520Tutorial%2520Session5%2520%7E%2520geopandas%2520%25E5%25AE%259F%25E8%25B7%25B5%25E7%25B7%25A8%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takanari_dev/articles/2024-02-12-azure-devops-python-package-pipeline",
          "author": "takanari",
          "description": "はじめに\nこれは以下の記事の続きである。本記事は以下の記事のcatlibという自作パッケージについて、テストやビルドを自動化するものである。\nhttps://zenn.dev/takanari_dev/articles/2024-02-06-azure-devops-python-package\n\n やりたいこと\n\n\nmainブランチへのマージ時に自作 Python パッケージのテストを自動的に行う\nタグを切ったときに Azure Artifacts へのデプロイを自動的に行う\n\n\n テスト自動化\n\n パイプラインの準備\nローカル環境のリポジトリ直下から.azure-pipeline...",
          "link": "https://zenn.dev/takanari_dev/articles/2024-02-12-azure-devops-python-package-pipeline",
          "publishedOn": "2024-02-12T12:40:11.000Z",
          "wordCount": 1650,
          "title": "Azure Pipelines で Python の自作パッケージのテスト＆ビルド自動化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dL6yrg7E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Pipelines%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25EF%25BC%2586%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takanari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmNDg2NWU2NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dL6yrg7E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Pipelines%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25EF%25BC%2586%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takanari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmNDg2NWU2NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takanari_dev/articles/2024-02-06-azure-devops-python-package",
          "author": "takanari",
          "description": "はじめに\n仕事で Azure DevOps を使おうとしているが、いかんせん情報が少ない。（ただし、公式ドキュメントは充実している。）GitHub よりもケーススタディ的な記事が少なく自分が苦労したので、備忘録として記事を書きたくなった。今回は Azure Artifacts に Python の独自ライブラリを（手動で）置いてみることを試したので、それを書く。\nまた、前半はほとんど Python のパッケージ作成の話である。Python の自作パッケージ / ライブラリの配布等の記事も探しにくかったので、そちらのほうでも参考になれば幸いである。\nそもそも Azure DevOps ...",
          "link": "https://zenn.dev/takanari_dev/articles/2024-02-06-azure-devops-python-package",
          "publishedOn": "2024-02-12T12:40:11.000Z",
          "wordCount": 2539,
          "title": "Python のパッケージを Poetry で自作して Azure Artifacts に置いてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jr1X8vRG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%2520Poetry%2520%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%2520Azure%2520Artifacts%2520%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takanari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmNDg2NWU2NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jr1X8vRG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%2520Poetry%2520%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%2520Azure%2520Artifacts%2520%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takanari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmNDg2NWU2NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/buenotheebiten/articles/244a8716f00858",
          "author": "えびてん",
          "description": "LangChainのGitHubを見ていたら、いくつかChatGPTなどでも利用できそうなプロンプトを見かけたので、まとめのメモです。\nhttps://github.com/langchain-ai/langchain/tree/master\n\n 1. LLMの要約チェック\n「事実確認」や「テキストに対して事実をもとに修正を行う」などのプロンプトがありました。\n全体的に下記のプロンプトに加えて、外部データとして事実データを参照した方が精度が上がりそうなイメージがしました。\n\n 1-1. テキスト全てが正しいかどうか判定\n複数のテキストの内容が全て正しいかどうか、を判定するプロンプトです。...",
          "link": "https://zenn.dev/buenotheebiten/articles/244a8716f00858",
          "publishedOn": "2024-02-12T12:12:26.000Z",
          "wordCount": 959,
          "title": "【LangChain】GitHubリポジトリ内のプロンプトをみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YlB7H6qM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591GitHub%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E5%2586%2585%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YlB7H6qM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591GitHub%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E5%2586%2585%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/9c651bf26d33ea",
          "author": "Tanny",
          "description": "この記事は、Zennの記事投稿キャンペーン（テーマ：Google Cloud）の応募記事です。以前に自作したPythonスクリプトをGCP上で定期実行する手順を紹介します。\nhttps://info.zenn.dev/2024-02-01-campaign-gc24\n\n はじめに\n2023年の1月に、「降水確率に応じてSwitchBotのスマートライトの色を変える」というPythonスクリプトを自作し、大変多くの反響をいただきました。\nhttps://zenn.dev/tanny/articles/808487545eb30f\nこのPythonスクリプトはGitHub Actionsを利...",
          "link": "https://zenn.dev/tanny/articles/9c651bf26d33ea",
          "publishedOn": "2024-02-12T11:19:04.000Z",
          "wordCount": 615,
          "title": "GCP Cloud Functionsでシークレット付きのPythonスクリプトを定期実行する手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xdY6rSei--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%2520Cloud%2520Functions%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258D%25E3%2581%25AEPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259A%25E6%259C%259F%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xdY6rSei--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%2520Cloud%2520Functions%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258D%25E3%2581%25AEPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259A%25E6%259C%259F%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/buenotheebiten/articles/8dbf5cfef5f3eb",
          "author": "えびてん",
          "description": "LangChainでLLMやツール使用、データの前処理など、さまざまな処理をラクにつなげることができる「Chains」のドキュメントを読み解いたメモです。\nhttps://python.langchain.com/docs/modules/chains\nhttps://api.python.langchain.com/en/stable/langchain_api_reference.html#module-langchain.chains\npip install -U openai langchain langchain-openai\n\n 「Chains」とは\nLLM、ツール、データ前...",
          "link": "https://zenn.dev/buenotheebiten/articles/8dbf5cfef5f3eb",
          "publishedOn": "2024-02-12T07:53:53.000Z",
          "wordCount": 1447,
          "title": "【LangChain】複数処理をつなげる「Chains」読解メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5Fye-2cg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591%25E8%25A4%2587%25E6%2595%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%2592%25E3%2582%258B%25E3%2580%258CChains%25E3%2580%258D%25E8%25AA%25AD%25E8%25A7%25A3%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5Fye-2cg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591%25E8%25A4%2587%25E6%2595%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%2592%25E3%2582%258B%25E3%2580%258CChains%25E3%2580%258D%25E8%25AA%25AD%25E8%25A7%25A3%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kazu1/articles/4e70817baa7dfb",
          "author": "Kazu1",
          "description": "!\nこの記事は、Djangoのマイグレーションについてより理解したいと考えている方々に向けたものです。\nDjangoがマイグレーションをどのように追跡し、適用するか、そして開発者が新しいマイグレーションを作成する際にDjangoがどのようにモデルの変更を検出するかについて解説しています。\n\n\n Djangoがどのようにマイグレーションを追跡するか\n既にマイグレーションを適用している状態で再度、migrateコマンドを実行すると以下のようになりますね。\npython manage.py migrate\nOperations to perform:\n  Apply all migration...",
          "link": "https://zenn.dev/kazu1/articles/4e70817baa7dfb",
          "publishedOn": "2024-02-12T06:47:59.000Z",
          "wordCount": 1317,
          "title": "【深く】DjangoのMigrationを理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a7SXRyfR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25B7%25B1%25E3%2581%258F%25E3%2580%2591Django%25E3%2581%25AEMigration%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazu1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTU4ZjUxZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a7SXRyfR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25B7%25B1%25E3%2581%258F%25E3%2580%2591Django%25E3%2581%25AEMigration%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazu1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTU4ZjUxZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ryota_09/articles/1b44973515dc4c",
          "author": "りょた",
          "description": "こんにちは！@Ryo54388667です!☺️\n普段は都内でフロントエンドエンジニアとして業務をしてます！\n主にTypeScriptやNext.jsといった技術を触っています。\n今回はOpenAIのAPI、Function callingという機能を試してみたいと思います。\n\n 📌 Function calling とは\n\nIn an API call, you can describe functions and have the model intelligently choose to output a JSON object containing arguments to cal...",
          "link": "https://zenn.dev/ryota_09/articles/1b44973515dc4c",
          "publishedOn": "2024-02-12T06:10:44.000Z",
          "wordCount": 1647,
          "title": "【OpenAI API】Function calling による振り分けを試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8oB-8Ztm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590OpenAI%2520API%25E3%2580%2591Function%2520calling%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkNmQyMTZhMWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8oB-8Ztm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590OpenAI%2520API%25E3%2580%2591Function%2520calling%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkNmQyMTZhMWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tsaeki/articles/bc868a8d8fd6ae",
          "author": "tsaeki",
          "description": "https://github.com/pyenv/pyenv の導入してみます。\n\n 環境\nubuntu with WSL2でzsh使ってます。\n\n 事前にパッケージをインストール\n事前に必要なパッケージをインストールしておきます。\nhttps://github.com/pyenv/pyenv/wiki#suggested-build-environment\nsudo apt update; sudo apt install build-essential libssl-dev zlib1g-dev \\\nlibbz2-dev libreadline-dev libsqlite3-dev ...",
          "link": "https://zenn.dev/tsaeki/articles/bc868a8d8fd6ae",
          "publishedOn": "2024-02-12T04:35:05.000Z",
          "wordCount": 612,
          "title": "pyenvの導入",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P2_WLdOH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pyenv%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsaeki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyMjMxNzZiYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P2_WLdOH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pyenv%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsaeki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyMjMxNzZiYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/program_ke/articles/b2505f918ace8e",
          "author": "Ke",
          "description": "はじめに\nPythonで利用できるpyinstallerの忘備録です。\n(webサイトを公開する際、htmlなどのファイルもexeにまとめたい場合）\nzenn自体初めて触るのでご指摘ください(o*。_。)oペコッ\n\n pythonで複数ファイルをexe化する\n①pip install pyinstaller\n②pyinstaller file.py -onefile --noconsole\n実行すると下記のような.specファイルが生成されると思う\n\nspecファイル\na = Analysis(\n    ['filename.py'],\n    pathex=[],\n    bina...",
          "link": "https://zenn.dev/program_ke/articles/b2505f918ace8e",
          "publishedOn": "2024-02-12T00:04:41.000Z",
          "wordCount": 392,
          "title": "中学2年生のPython勉強①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fWHLrvMX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25AD%25E5%25AD%25A62%25E5%25B9%25B4%25E7%2594%259F%25E3%2581%25AEPython%25E5%258B%2589%25E5%25BC%25B7%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0o0dnl2UjRrUTVqc0QycDBzcS1LaUxjX25uSFpVY1JhVDBPVDkyUmRUanc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fWHLrvMX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25AD%25E5%25AD%25A62%25E5%25B9%25B4%25E7%2594%259F%25E3%2581%25AEPython%25E5%258B%2589%25E5%25BC%25B7%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0o0dnl2UjRrUTVqc0QycDBzcS1LaUxjX25uSFpVY1JhVDBPVDkyUmRUanc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/calloc134/articles/9aa88e42b95345",
          "author": "calloc134",
          "description": "はじめに\nこんにちは。かろっくです。\n今回はゆるい記事です。\nデザインで使えそうなスクリプトを三つほど Python で書いてみました。\nChatGPT にかなり頼ったので、自分でもあまりコードを理解できてない部分がありますがご了承ください・・・。\nPython での画像処理もほぼ初めて書いたので、許してください\n\n 文字パーツ分割\n\nこのような透明な画像に対して、文字のパーツを分割するスクリプトです。\n\nそれぞれ画像として分割されるので、位置を調整して使うことができます。\nイメージ(Aviutl において、震えるアニメーションを適用してあります)\n\nhttps://twitter....",
          "link": "https://zenn.dev/calloc134/articles/9aa88e42b95345",
          "publishedOn": "2024-02-11T14:14:34.000Z",
          "wordCount": 190,
          "title": "デザインで使えそうなスクリプトをPythonで書いてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8B1SIQmi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:calloc134%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0MGU4NGU1YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8B1SIQmi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:calloc134%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0MGU4NGU1YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/keita_f/articles/6e1323fe023fa1",
          "author": "KITFJN",
          "description": "前回、FastAPIとSQLmoelを使用して、webアプリケーションを作成しました。\nhttps://zenn.dev/keita_f/articles/4493e3cfd76aec\nこのアプリケーションに、別のモデルを追加して、さらに、二つのデータベースに関連性を持たせます。\n\n BaseUserModelの設定変更\n前回作成したBaseUserModelを少し変更します。\n\nbackend/v1/model/user_model.py\n class BaseUserModel(BaseUser, table = True):\n   id: Optional[int] = Field...",
          "link": "https://zenn.dev/keita_f/articles/6e1323fe023fa1",
          "publishedOn": "2024-02-11T12:54:06.000Z",
          "wordCount": 3391,
          "title": "Alembicでマイグレーション（FastAPI+SQLModel）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1GjkTA-g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alembic%25E3%2581%25A7%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25EF%25BC%2588FastAPI%252BSQLModel%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KITFJN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNDYxZWNjNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1GjkTA-g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alembic%25E3%2581%25A7%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25EF%25BC%2588FastAPI%252BSQLModel%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KITFJN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNDYxZWNjNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/abaoaqu/articles/61634dcd4fd378",
          "author": "abaoaqu",
          "description": "概要\nCloud Functions(python) から別プロジェクトの Artifact Registry に格納されている python パッケージをインストールする手順を記載します。\n\n 対象読者\n\nGoogle Cloud のサービスをコンソールまたはCLIで構築した経験のある方\nPython の開発環境を構築した経験のある方\n\n\n 環境\n\n ローカル端末\n\nOS: macOS Sonoma 14.1\nチップ: Apple M3 Max\nGoogle Cloud SDK: 463.0.0\nPythonパッケージ\n\npip: 24.0\nsetuptools: 69.0.3\nw...",
          "link": "https://zenn.dev/abaoaqu/articles/61634dcd4fd378",
          "publishedOn": "2024-02-11T12:09:16.000Z",
          "wordCount": 1357,
          "title": "Cloud Functions から別プロジェクトの Artifact Registry にあるpythonパッケージを使用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PH8oa2dr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Functions%2520%25E3%2581%258B%25E3%2582%2589%25E5%2588%25A5%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%2520Artifact%2520Registry%2520%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258Bpython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:abaoaqu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGFRdVhsdnNfcDNNbXdFNTNkREpCZG1hT3M1bVlncHR0bTh5M0Iyc2lGZWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PH8oa2dr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Functions%2520%25E3%2581%258B%25E3%2582%2589%25E5%2588%25A5%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%2520Artifact%2520Registry%2520%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258Bpython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:abaoaqu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGFRdVhsdnNfcDNNbXdFNTNkREpCZG1hT3M1bVlncHR0bTh5M0Iyc2lGZWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nyaru_tech/articles/4f51343b263cf2",
          "author": "にゃる～技術があれば覆水すら盆に返る～",
          "description": "概要\nPythonのプロジェクトを管理する際に、必要なライブラリや依存関係を管理するのは重要です。pipreqsは、Pythonプロジェクトの依存関係を自動的に検出し、requirements.txtファイルを生成するツールです。この記事では、pipreqsの使い方を紹介します。\n\n 本文\n最初に、pipreqsをインストールする必要があります。ターミナルまたはコマンドプロンプトを開き、次のコマンドを実行します。\n\nbash\npip install pipreqs\n\npipreqsを使用して、Pythonプロジェクトのディレクトリ内のファイルから依存関係を検出し、requiremen...",
          "link": "https://zenn.dev/nyaru_tech/articles/4f51343b263cf2",
          "publishedOn": "2024-02-11T10:25:15.000Z",
          "wordCount": 115,
          "title": "３分でわかるpipreqsでrequirements.txtを自動的に生成する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BnuVFP4D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2593%25E5%2588%2586%25E3%2581%25A7%25E3%2582%258F%25E3%2581%258B%25E3%2582%258Bpipreqs%25E3%2581%25A7requirements.txt%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2582%2583%25E3%2582%258B%25EF%25BD%259E%25E6%258A%2580%25E8%25A1%2593%25E3%2581%258C%25E3%2581%2582%25E3%2582%258C%25E3%2581%25B0%25E8%25A6%2586%25E6%25B0%25B4%25E3%2581%2599%25E3%2582%2589%25E7%259B%2586%25E3%2581%25AB%25E8%25BF%2594%25E3%2582%258B%25EF%25BD%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzMTEwY2JhOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BnuVFP4D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2593%25E5%2588%2586%25E3%2581%25A7%25E3%2582%258F%25E3%2581%258B%25E3%2582%258Bpipreqs%25E3%2581%25A7requirements.txt%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2582%2583%25E3%2582%258B%25EF%25BD%259E%25E6%258A%2580%25E8%25A1%2593%25E3%2581%258C%25E3%2581%2582%25E3%2582%258C%25E3%2581%25B0%25E8%25A6%2586%25E6%25B0%25B4%25E3%2581%2599%25E3%2582%2589%25E7%259B%2586%25E3%2581%25AB%25E8%25BF%2594%25E3%2582%258B%25EF%25BD%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzMTEwY2JhOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/svertkatter/articles/d7941f95b52385",
          "author": "svertkatter",
          "description": "こんにちは。TouchDesignerでLINEに通知を送りたいですよね。\n特にWebSocketを使用してネットワークが切れていないかなと不安になっている中、通知してくれたほうが助かります。\n調べていく中で、Slackを利用した通知方法などはありますが、LINEでしている人はいなかったと思うので、この記事でそのやり方を説明しようと思います。\n\n 前提条件\nまず前提をお話します。この記事を書いてる人間、つまり私はド素人です。プログラミングを生業にしている訳ではありません。ご了承ください。\n\n\nTouchDesigner\n\nバージョン：2022.35320\n\n\n\nPython\n\n3.9.5...",
          "link": "https://zenn.dev/svertkatter/articles/d7941f95b52385",
          "publishedOn": "2024-02-11T08:19:01.000Z",
          "wordCount": 462,
          "title": "TouchDesignerでLINEに通知を送る方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--arxl-xS5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TouchDesigner%25E3%2581%25A7LINE%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592%25E9%2580%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:svertkatter%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkNWI3MjMzOWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--arxl-xS5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TouchDesigner%25E3%2581%25A7LINE%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592%25E9%2580%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:svertkatter%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkNWI3MjMzOWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuto_mo/articles/29682f6b0c402c",
          "author": "yuu",
          "description": "今回はpythonの@propertyについて軽く解説します。\n\n ＠propertyとは\n@propertyは、クラスのインスタンス変数を簡潔に呼び出せるようにする組み込みのデコレータです。\nデコレータは、装飾される関数を引数として取り、新しい関数を返す高階関数ですが、@propertyはその関数における特殊メソッドをオーバーライドし、関数の呼び出し方によって返す関数を変更します。\n言葉で表すと非常に難解なので、例を見ていきましょう。\n\n 例\nclass Person:\n    def __init__(self, name):\n        self._name = name\n\n ...",
          "link": "https://zenn.dev/yuto_mo/articles/29682f6b0c402c",
          "publishedOn": "2024-02-11T06:48:26.000Z",
          "wordCount": 997,
          "title": "@propertyとは",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n_YxXzIQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%2540property%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTcwZWIzMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n_YxXzIQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%2540property%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTcwZWIzMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nakurei/articles/forcing-keywords-as-arguments-in-python",
          "author": "NakuRei",
          "description": "これはなに\nPythonの関数で、利用時にキーワードによる指定を強制できると知ったのでまとめたメモ。\n\n この記事が役立つ人\n\nすでにPythonの基本的な知識を持っている人で\n\n関数呼び出し時にキーワード指定を強制したい人\nコードの可読性や保守性を向上させたい人\n\n\n\n\n 本記事の要約\nPython関数の引数の定義で、*の後に引数を定義すると、利用者にキーワードによる指定を強制できる。この引数はキーワード専用引数（Keyword-Only Arguments）と呼ばれる。下記の例では、is_upperをキーワード専用引数として定義している。\n\n関数定義\n# `*`の後に定義した引数...",
          "link": "https://zenn.dev/nakurei/articles/forcing-keywords-as-arguments-in-python",
          "publishedOn": "2024-02-11T00:00:00.000Z",
          "wordCount": 1270,
          "title": "Pythonで引数にキーワードを強制する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1RfMWK8S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25BC%25B7%25E5%2588%25B6%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZjNjZmQ5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1RfMWK8S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25BC%25B7%25E5%2588%25B6%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZjNjZmQ5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/d00e803c5b8743",
          "author": "Josh Nobus",
          "description": "はじめに\n友達がこんなことを呟いていた。\nhttps://x.com/xeki00/status/1753426382410183054?s=20\n気持ちは分かるよ。私も Python には滅んでほしいと思っている。そしてプログラミング界隈にはこんなジョークがあるんだ。\nhttps://x.com/wsuzume/status/1753427254645051723?s=20\nパンがないならケーキを焼いて食べればいいのに。対する友の返答はこうだった。\nhttps://x.com/xeki00/status/1753427989805891862?s=20\n\n え、マジ？ 作るけど？\n...",
          "link": "https://zenn.dev/wsuzume/articles/d00e803c5b8743",
          "publishedOn": "2024-02-10T12:05:57.000Z",
          "wordCount": 8078,
          "title": "悪ノリで Lisp トランスパイラを実装した with Python。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TnIFLFuw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2582%25AA%25E3%2583%258E%25E3%2583%25AA%25E3%2581%25A7%2520Lisp%2520%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%2520with%2520Python%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjZDAzYjNkNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TnIFLFuw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2582%25AA%25E3%2583%258E%25E3%2583%25AA%25E3%2581%25A7%2520Lisp%2520%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%2520with%2520Python%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjZDAzYjNkNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kaityo256/articles/union_find_physics",
          "author": "ロボ太",
          "description": "概要\nUnion-Findアルゴリズムは、グラフ系でよく使われるアルゴリズムですが、物性物理においても重要な役割を果たします。その実装と使われ方について少しメモしておきます。\n\n Union-Findアルゴリズム\n何か2つの物が与えられたとき、それらがある意味において「同じグループに所属するかどうか」が判定できるとき、その関係を同値関係と呼びます。例えば相似などが典型例で、図形Aと図形Bが相似、図形Bと図形Cが相似ならば、図形Aと図形Cも相似です。このように「友達の友達は友達」みたいな関係が同値関係です。とりあえず同値関係を\\simで表現することにしましょう。ある集合の要素a,b,c...",
          "link": "https://zenn.dev/kaityo256/articles/union_find_physics",
          "publishedOn": "2024-02-10T11:27:35.000Z",
          "wordCount": 992,
          "title": "Union-Findアルゴリズムと計算科学の話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2u5R7aG3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Union-Find%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A8%25E8%25A8%2588%25E7%25AE%2597%25E7%25A7%2591%25E5%25AD%25A6%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AD%25E3%2583%259C%25E5%25A4%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzOGNiYTA0OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2u5R7aG3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Union-Find%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A8%25E8%25A8%2588%25E7%25AE%2597%25E7%25A7%2591%25E5%25AD%25A6%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AD%25E3%2583%259C%25E5%25A4%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzOGNiYTA0OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tonokokko/articles/77d3f3f6f9c143",
          "author": "とのこっこ",
          "description": "Pythonのdataclassについてまとめています。\n「self.var = var」みたいに連打しなくてよくなるのは便利ですね！\n初見だと意味不明でしたが...\n試験的に、生成AIとのやりとりして調べた結果を記事の形にまとめてもらっています。\n\n @dataclassデコレータについて\n\nPython 3.7以降で利用可能な@dataclassデコレータを使用すると、クラスの定義を簡潔に書くことができます。\n\n@dataclassは、インスタンス変数のための__init__メソッドなどを自動的に生成します。\n\n\n 独自の__init__メソッドを定義する場合\n\n\n@dataclas...",
          "link": "https://zenn.dev/tonokokko/articles/77d3f3f6f9c143",
          "publishedOn": "2024-02-10T03:06:19.000Z",
          "wordCount": 283,
          "title": "Pythonのdataclassについての備忘録",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dKGXkYZu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEdataclass%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A3%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMzkxNDI5MzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dKGXkYZu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEdataclass%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A3%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMzkxNDI5MzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/xcter/articles/05db4018cfdc71",
          "author": "XCTER",
          "description": "何を作ったか\nZennで自分が「いいねした投稿」と「読んでいる本」をNotionのデータベースに保存するスクリプトを作りました。Notionのアカウントとpythonの実行環境があれば誰でも使えるようになっています。\nすぐに試したい方は、こちらのREADMEを読んで試してみてください\nこんなもの↓ができます！（これは私がいいねした投稿の一覧です）\nhttps://zealous-rosehip-7a8.notion.site/a3c1dd8fa96a42fbb6e162e91354a68d?v=324c9e7e593746838d64ee2123d175e6&pvs=4\n\n ...",
          "link": "https://zenn.dev/xcter/articles/05db4018cfdc71",
          "publishedOn": "2024-02-10T02:37:10.000Z",
          "wordCount": 417,
          "title": "Zennで「いいねした投稿」と「読んでいる本」をNotionで管理する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--K_tbQU5v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E3%2581%25A7%25E3%2580%258C%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%25E3%2581%2597%25E3%2581%259F%25E6%258A%2595%25E7%25A8%25BF%25E3%2580%258D%25E3%2581%25A8%25E3%2580%258C%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2582%258B%25E6%259C%25AC%25E3%2580%258D%25E3%2582%2592Notion%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:XCTER%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3MjIyNTcyODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--K_tbQU5v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E3%2581%25A7%25E3%2580%258C%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%25E3%2581%2597%25E3%2581%259F%25E6%258A%2595%25E7%25A8%25BF%25E3%2580%258D%25E3%2581%25A8%25E3%2580%258C%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2582%258B%25E6%259C%25AC%25E3%2580%258D%25E3%2582%2592Notion%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:XCTER%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3MjIyNTcyODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/spiralai/articles/8af7cbf526c2e1",
          "author": "わいけい",
          "description": "こんにちは。わいけいです。\n今回の記事では、生成AI界隈ではかなり浸透している RAG について改めて解説していきます。\n「低予算で言語モデルを使ったアプリを開発したい」というときに真っ先に選択肢に上がるRAGですが、私自身もRAGを使ったアプリケーションの実装を業務の中で何度も行ってきました。\n今回はその知見をシェア出来れば幸いです。\n\n RAG（Retrieval-Augmented Generation)とは\nまず、 そもそもRAGとは何ぞや？ というところから見ていきましょう。\nRAG（Retrieval-Augmented Generation) は自然言語処理（NLP）と特に...",
          "link": "https://zenn.dev/spiralai/articles/8af7cbf526c2e1",
          "publishedOn": "2024-02-10T01:50:02.000Z",
          "wordCount": 2712,
          "title": "GPT連携アプリ開発時の必須知識、RAGをゼロから解説する。概要＆Pythonコード例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a5GZEvFf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E9%2580%25A3%25E6%2590%25BA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AE%25E5%25BF%2585%25E9%25A0%2588%25E7%259F%25A5%25E8%25AD%2598%25E3%2580%2581RAG%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%25E6%25A6%2582%25E8%25A6%2581%25EF%25BC%2586Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%258F%25E3%2581%2584%25E3%2581%2591%25E3%2581%2584%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDE5NGY4ZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Spiral.AI%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3MjY1NjZiZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a5GZEvFf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%25E9%2580%25A3%25E6%2590%25BA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AE%25E5%25BF%2585%25E9%25A0%2588%25E7%259F%25A5%25E8%25AD%2598%25E3%2580%2581RAG%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%25E6%25A6%2582%25E8%25A6%2581%25EF%25BC%2586Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%258F%25E3%2581%2584%25E3%2581%2591%25E3%2581%2584%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDE5NGY4ZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Spiral.AI%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3MjY1NjZiZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/jim_soros/articles/8429c4b2a91b76",
          "author": "ねこまいたけだよ",
          "description": "Blender 4.0 Python API Documentation を日本語で嚙み砕く\nhttps://docs.blender.org/api/current/index.html\n\n 【Quickstart】\nhttps://docs.blender.org/api/current/info_quickstart.html\n\n先ずはEnable Developer Extra and Python Tooltips.を表示できるようにチェック --> 上部Edit-Prefarence-interface-PythonTooltips と DeveloperExtra...",
          "link": "https://zenn.dev/jim_soros/articles/8429c4b2a91b76",
          "publishedOn": "2024-02-10T01:28:19.000Z",
          "wordCount": 1111,
          "title": "1次ソース公式ドキュメントBlender 4.0 Python API Documentation を日本語で嚙み砕く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--k7Qfy3Xq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1%25E6%25AC%25A1%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588Blender%25204.0%2520Python%2520API%2520Documentation%2520%25E3%2582%2592%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25A7%25E5%259A%2599%25E3%2581%25BF%25E7%25A0%2595%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AD%25E3%2581%2593%25E3%2581%25BE%25E3%2581%2584%25E3%2581%259F%25E3%2581%2591%25E3%2581%25A0%25E3%2582%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1MzViNWUxODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--k7Qfy3Xq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1%25E6%25AC%25A1%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588Blender%25204.0%2520Python%2520API%2520Documentation%2520%25E3%2582%2592%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25A7%25E5%259A%2599%25E3%2581%25BF%25E7%25A0%2595%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AD%25E3%2581%2593%25E3%2581%25BE%25E3%2581%2584%25E3%2581%259F%25E3%2581%2591%25E3%2581%25A0%25E3%2582%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1MzViNWUxODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nope/articles/2278e0a922b5b9",
          "author": "nope",
          "description": "はじめに\nみなさんポケモンは好きでしょうか。\nポケモンには、現在18種類のタイプが存在しますが、中には弱点が多くて不利なタイプがありますよね。例えば、草タイプや氷タイプは弱点が多く、一方で鋼タイプや電気タイプは耐性が多くて有利に見えます。\nそこで、もし実際にこれらのタイプのポケモンが同じ環境で共生していたら、何百世代か後には、弱点が多いタイプは自然淘汰され、耐性が多いタイプが優勢になるのでは？？という疑問が湧きました。\n\n今回は遺伝的アルゴリズムを用いて、異なるタイプのポケモンが共存する環境をシミュレーションします。能力が全く同じであると仮定した場合、どのタイプのポケモンが生き残るの...",
          "link": "https://zenn.dev/nope/articles/2278e0a922b5b9",
          "publishedOn": "2024-02-09T16:48:15.000Z",
          "wordCount": 1038,
          "title": "ポケモン界における最強タイプを遺伝的アルゴリズムで求めてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yKV6CTsc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259D%25E3%2582%25B1%25E3%2583%25A2%25E3%2583%25B3%25E7%2595%258C%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%259C%2580%25E5%25BC%25B7%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2582%2592%25E9%2581%25BA%25E4%25BC%259D%25E7%259A%2584%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A7%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nope%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxMDJiOWIwNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yKV6CTsc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259D%25E3%2582%25B1%25E3%2583%25A2%25E3%2583%25B3%25E7%2595%258C%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%259C%2580%25E5%25BC%25B7%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2582%2592%25E9%2581%25BA%25E4%25BC%259D%25E7%259A%2584%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A7%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nope%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxMDJiOWIwNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/smartcamp/articles/8b24739ab8cba3",
          "author": "信玄餅",
          "description": "高速・高精度なASR(自動音声認識)サービスを提供するDeepgramというサービスがあると噂を聞いたので試してみました。\n\n Deepgramとは\nDeepgramは2015年に設立されたアメリカのスタートアップ企業です。\nAIを用いた企業向けの音声認識に特化しており、スタートアップからSpotifyやNASAのような大企業まで多数のクライアントにサービスを提供しています。\nhttps://deepgram.com/\n公式サイトによると主な競合他社に比べて速度・精度・コストのいずれも優れており、更に日本語を含む30カ国以上の言語に対応しているとのことです。\n主なプロダクトは以下の3つで...",
          "link": "https://zenn.dev/smartcamp/articles/8b24739ab8cba3",
          "publishedOn": "2024-02-09T14:52:21.000Z",
          "wordCount": 936,
          "title": "高速・高精度な音声文字起こしが出来るという噂の「Deepgram」を試してみた (導入編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lCqHTfTO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25AB%2598%25E9%2580%259F%25E3%2583%25BB%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2581%25AA%25E9%259F%25B3%25E5%25A3%25B0%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%258C%25E5%2587%25BA%25E6%259D%25A5%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E5%2599%2582%25E3%2581%25AE%25E3%2580%258CDeepgram%25E3%2580%258D%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2528%25E5%25B0%258E%25E5%2585%25A5%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E4%25BF%25A1%25E7%258E%2584%25E9%25A4%2585%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyNGYwMGIzM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SMARTCAMP%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0OTAzNjAyZTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lCqHTfTO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25AB%2598%25E9%2580%259F%25E3%2583%25BB%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2581%25AA%25E9%259F%25B3%25E5%25A3%25B0%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%258C%25E5%2587%25BA%25E6%259D%25A5%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E5%2599%2582%25E3%2581%25AE%25E3%2580%258CDeepgram%25E3%2580%258D%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2528%25E5%25B0%258E%25E5%2585%25A5%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E4%25BF%25A1%25E7%258E%2584%25E9%25A4%2585%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyNGYwMGIzM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SMARTCAMP%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0OTAzNjAyZTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ak_yoshimatsu/articles/69457d3f44fe55",
          "author": "よしまつ",
          "description": "wsl2でPythonの開発環境を整えた際の備忘録。\n\n 参考サイト\nWindows で Web 開発に Python を使用する | Microsoft Lean\n\n Python,pip,venvをインストール\n\n 1. Linuxディストリビューションの更新（wsl2）\n最新バージョンを使用するために、以下のコマンドでwsl2を最新に更新。\nsudo apt update & sudo apt upgrade\n\n 2. Pythonの更新\nPython3がすでにインストールされていることを確認。\npython3 --version\n>> Pyhon 3.10.1...",
          "link": "https://zenn.dev/ak_yoshimatsu/articles/69457d3f44fe55",
          "publishedOn": "2024-02-09T14:35:45.000Z",
          "wordCount": 332,
          "title": "WSL2でPython,pip,venvをインストールして仮想環境を作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WB6y_3-p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25A7Python%252Cpip%252Cvenv%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25BE%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4ZGYwOTYwZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WB6y_3-p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25A7Python%252Cpip%252Cvenv%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25BE%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4ZGYwOTYwZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/buenotheebiten/articles/af5cfba98b1b8f",
          "author": "えびてん",
          "description": "「LangChain」のLLMで長文参照する時のテキスト処理をしてくれる「Text Splitters」機能のメモです。\nhttps://python.langchain.com/docs/modules/data_connection/document_transformers/\n\n Text Splittersの種類\n具体的には下記8つの方法がありました。\n\n\n\n名前\n説明\n\n\n\n\nSplit by character\n\n指定文字で分割してまとめる最もシンプルな方法。（default: \"\"）\n\n\nRecursively split by character\n\n指定文字リストに従って...",
          "link": "https://zenn.dev/buenotheebiten/articles/af5cfba98b1b8f",
          "publishedOn": "2024-02-09T11:24:29.000Z",
          "wordCount": 1952,
          "title": "【LangChain】長文テキスト処理する機能「Text Splitters」読解メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W0B6PmNQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591%25E9%2595%25B7%25E6%2596%2587%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%258CText%2520Splitters%25E3%2580%258D%25E8%25AA%25AD%25E8%25A7%25A3%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W0B6PmNQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591%25E9%2595%25B7%25E6%2596%2587%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%258CText%2520Splitters%25E3%2580%258D%25E8%25AA%25AD%25E8%25A7%25A3%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ryutag/articles/1af81e56f20650",
          "author": "ryuta goto【dely株式会社】",
          "description": "導入と概要\nこんにちは、delyの後藤です。\n弊社では、Saas管理ツールとしてdxeco を導入しています。\nツール内のインサイトとして契約更新前のnヶ月前になったらUI上にお知らせを出してくれる機能があり、それをSlackに通知する仕組みを作ったところ、意外にもウケが良かったのでzennに記事を作ることにしました。\n(ちなみに導入時の私のインタビュー記事は こちら ですw)\n\n 設計\nAPIを叩いて、流し込むだけの難しいことは何もしていない形で作成しました。\n\n データ登録と設定\nデータの登録と、いつお知らせを受け取りたいか、という設定はdxecoのUI上で手登録を行います。\nこ...",
          "link": "https://zenn.dev/ryutag/articles/1af81e56f20650",
          "publishedOn": "2024-02-09T10:58:31.000Z",
          "wordCount": 1863,
          "title": "Saasの契約更新月が近づいてきたら通知する仕組みをつくりました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bcXGSwhC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Saas%25E3%2581%25AE%25E5%25A5%2591%25E7%25B4%2584%25E6%259B%25B4%25E6%2596%25B0%25E6%259C%2588%25E3%2581%258C%25E8%25BF%2591%25E3%2581%25A5%25E3%2581%2584%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E3%2582%2589%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryuta%2520goto%25E3%2580%2590dely%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2580%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzUzZjlhZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bcXGSwhC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Saas%25E3%2581%25AE%25E5%25A5%2591%25E7%25B4%2584%25E6%259B%25B4%25E6%2596%25B0%25E6%259C%2588%25E3%2581%258C%25E8%25BF%2591%25E3%2581%25A5%25E3%2581%2584%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E3%2582%2589%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryuta%2520goto%25E3%2580%2590dely%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2580%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzUzZjlhZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/welmo/articles/a79b8b45573383",
          "author": "進藤　翔太",
          "description": "ご挨拶\n株式会社Welmoでエンジニアとして働いている進藤です。Welmoは介護業界の様々な社会課題（介護負担の増大・労働者不足など）を、ICTと先端技術の力で解決するために日々努めています。\n\n はじめに\n文章の類似度を計算することは、テキストデータを扱う多くのプロジェクトで重要です。このため、Pythonの SentenceTransformer ライブラリは非常に役立つツールです。この記事では、SentenceTransformer ライブラリを使用して、文章の類似度を計算する基本的な手法について解説します。\n\n SentenceTransformerとは？\nSentenceT...",
          "link": "https://zenn.dev/welmo/articles/a79b8b45573383",
          "publishedOn": "2024-02-09T02:18:49.000Z",
          "wordCount": 1713,
          "title": "PythonのSentenceTransformerを用いた文章類似度比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6Ku4dHMH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AESentenceTransformer%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E9%25A1%259E%25E4%25BC%25BC%25E5%25BA%25A6%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%2580%25B2%25E8%2597%25A4%25E3%2580%2580%25E7%25BF%2594%25E5%25A4%25AA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmYjRhYTNmN2UuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Welmo%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkREZTFnR0lweTgwNVpGeVBpMGp0TkxqMVBhU29BaWFPNkpneWowN2hCPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6Ku4dHMH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AESentenceTransformer%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E9%25A1%259E%25E4%25BC%25BC%25E5%25BA%25A6%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%2580%25B2%25E8%2597%25A4%25E3%2580%2580%25E7%25BF%2594%25E5%25A4%25AA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmYjRhYTNmN2UuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Welmo%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkREZTFnR0lweTgwNVpGeVBpMGp0TkxqMVBhU29BaWFPNkpneWowN2hCPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/buenotheebiten/articles/15546ada9106a0",
          "author": "えびてん",
          "description": "LangChainでGPT-4を利用するには「Chat Models」を利用します。\n\nChat Models | 🦜️🔗 Langchain\n\n\n セットアップ\n\nインストール\n\npip install langchain-openai\n\nAPIキーのセット\n\n方法1) 環境変数OPENAI_API_KEYにセットする\n方法2) ChatOpenAI(openai_api_key=\"YOUR_API_KEY\")でセットする\n\n\n\n\n 1. 簡単なコード\nfrom langchain_openai import ChatOpenAI\n\n# --- APIキー ---\nOPENAI_API...",
          "link": "https://zenn.dev/buenotheebiten/articles/15546ada9106a0",
          "publishedOn": "2024-02-09T01:48:39.000Z",
          "wordCount": 996,
          "title": "【Python】LangChainでGPT-4を使ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NbcRMSOL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591LangChain%25E3%2581%25A7GPT-4%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NbcRMSOL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591LangChain%25E3%2581%25A7GPT-4%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/emoclew/articles/bdc0cb017a0ccf",
          "author": "emoclew",
          "description": "動機\nローカルで動くLLMがほしいなと思って、いろいろと調べていました。\nしかし、軽量のLLMは日本語が怪しくなるという話をよく聞きます\nそこで、一度機械翻訳を間に入れて、\n日本語指示 → 機械翻訳 → 英語指示 → LLM→英語結果 → 機械翻訳 → 日本語結果\nとしたいと思います。\n（実際に、機械翻訳を入れたときの性能がどうなるかは要検証です）\n機械翻訳について調べてみると、気軽に使えるAPIでは、DeepLもしくはGoogle Translateが最も性能が良いようです。時点で、MicrosoftのTranslate。\nまた、LLMを使った機械翻訳も研究されているようですが、D...",
          "link": "https://zenn.dev/emoclew/articles/bdc0cb017a0ccf",
          "publishedOn": "2024-02-08T23:51:42.000Z",
          "wordCount": 2203,
          "title": "機械翻訳APIコンテナの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uABykGZ---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A9%259F%25E6%25A2%25B0%25E7%25BF%25BB%25E8%25A8%25B3API%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emoclew%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXVmTzdVbGY4Tl9uV3hlamh0ZHpxSmtMVGpfWTlhNG1vZ0dOWDQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uABykGZ---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A9%259F%25E6%25A2%25B0%25E7%25BF%25BB%25E8%25A8%25B3API%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emoclew%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXVmTzdVbGY4Tl9uV3hlamh0ZHpxSmtMVGpfWTlhNG1vZ0dOWDQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/d60/articles/1e0419b3a4d0c7",
          "author": "d88",
          "description": "Pythonで無料でTwitterのBotを作る方法！！\n\n\n この記事の概要\n無料で、APIキーなしでツイッターAPIを利用できるPythonのライブラリ「Twikit」を紹介します。\n\n Twikitとは\nTwikitは、スクレイピングを利用して、ツイートの投稿、ツイートの検索、ユーザーのツイートの取得、トレンドの取得などができるPythonのライブラリです。\nこれを使えば、一定時間毎にツイートを投稿するボットを作ったりすることができます。\nhttps://github.com/d60/twikit\n\n このライブラリの特徴\nこのライブラリの最大の特徴は、APIキー不要かつ無料で...",
          "link": "https://zenn.dev/d60/articles/1e0419b3a4d0c7",
          "publishedOn": "2024-02-08T06:11:17.000Z",
          "wordCount": 295,
          "title": "Pythonで無料でTwitterのBotを作る方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Oupte8ud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7Twitter%25E3%2581%25AEBot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d88%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1OGQ3Nzk0NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Oupte8ud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7Twitter%25E3%2581%25AEBot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d88%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1OGQ3Nzk0NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/saorio/articles/330892959959cf",
          "author": "saorio",
          "description": "pyprojectのいらないライブラリを簡単に見つけられる deptryが便利。\npyproject.tomlがあるディレクトリでdeptry .を実行すると不要なライブラリや設定ミスを確認できる。CIに入れて定期的に確認するのが良さそう。",
          "link": "https://zenn.dev/saorio/articles/330892959959cf",
          "publishedOn": "2024-02-08T05:00:47.000Z",
          "wordCount": 59,
          "title": "deptryでpyprojectをお掃除する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--u6-abwLe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:deptry%25E3%2581%25A7pyproject%25E3%2582%2592%25E3%2581%258A%25E6%258E%2583%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeXdkTVdMN2tBQUxpcHF6ZmFGNGJLOEZsVWszQ1cwckd6YjFrRT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--u6-abwLe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:deptry%25E3%2581%25A7pyproject%25E3%2582%2592%25E3%2581%258A%25E6%258E%2583%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeXdkTVdMN2tBQUxpcHF6ZmFGNGJLOEZsVWszQ1cwckd6YjFrRT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hartree_fock/articles/8cc22fe15cc995",
          "author": "hartree_fock",
          "description": "はじめに\nhttps://qiita.com/mo256man/items/3a8a1f304ecdfaef6e15",
          "link": "https://zenn.dev/hartree_fock/articles/8cc22fe15cc995",
          "publishedOn": "2024-02-07T15:58:14.000Z",
          "wordCount": 71,
          "title": "ARマーカーで動画内の特定の画面を切り出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OjwR2JgD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AR%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2581%25A7%25E5%258B%2595%25E7%2594%25BB%25E5%2586%2585%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E5%2588%2587%25E3%2582%258A%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hartree_fock%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGFmNzJlMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OjwR2JgD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AR%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2581%25A7%25E5%258B%2595%25E7%2594%25BB%25E5%2586%2585%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E5%2588%2587%25E3%2582%258A%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hartree_fock%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGFmNzJlMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hartree_fock/articles/3365a05a82a1fa",
          "author": "hartree_fock",
          "description": "はじめに\nPython標準GUI「Tkinter」を使ってみます。\n\n 参考サイト\nhttps://techplay.jp/column/552\nhttps://ossa2019.stars.ne.jp/Remember/tkinter/tk3.html\nhttps://pg-chain.com/python-radiobutton\n\n やりたいこと\nやりたいことの流れは以下の通り。\n① 起動するとGUIが表示\n- GUIにはA,B,Cの3つのボタンが表示されている\n- GUIには「OK」ボタンがある。\n② A,B,Cのいずれかのボタンを押すと、そのボタンがハイライトされる\n③ ボタ...",
          "link": "https://zenn.dev/hartree_fock/articles/3365a05a82a1fa",
          "publishedOn": "2024-02-07T15:46:02.000Z",
          "wordCount": 411,
          "title": "Python標準GUI「Tkinter」を使ってみる。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RSFtsDno--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E6%25A8%2599%25E6%25BA%2596GUI%25E3%2580%258CTkinter%25E3%2580%258D%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hartree_fock%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGFmNzJlMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RSFtsDno--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E6%25A8%2599%25E6%25BA%2596GUI%25E3%2580%258CTkinter%25E3%2580%258D%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hartree_fock%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGFmNzJlMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/reportscan_python_1",
          "author": "Torachi0401",
          "description": "はじめに\n手書き帳票の数字を、別のシステムに入力するために転記することはありませんか？\nめちゃくちゃめんどくさいし、すごい工数がかかる作業ですよね～\nそこで、Pythonを使って、手書きの帳票をスキャナで読みとり、該当箇所の数字を読み取る\nプログラムを作成してみたので紹介します。\nさっさとプログラムを見たい方は以下より↓\n\n コード全文\nGitHubに公開してます。\n該当業務の要件としては以下になります。\n\n 現状の業務の要件\n\n手書きの帳票が集まってくる\nその帳票をスキャナでPDFとして読み取る\n手書きの数字（8桁）＋YYYYMMDDをPDFのファイル名にリネームする\nさらに手書き...",
          "link": "https://zenn.dev/torachi0401/articles/reportscan_python_1",
          "publishedOn": "2024-02-07T14:43:18.000Z",
          "wordCount": 112,
          "title": "Pythonだけで帳票の手書き文字をOCRで読みとる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ju0yaIil--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E5%25B8%25B3%25E7%25A5%25A8%25E3%2581%25AE%25E6%2589%258B%25E6%259B%25B8%25E3%2581%258D%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592OCR%25E3%2581%25A7%25E8%25AA%25AD%25E3%2581%25BF%25E3%2581%25A8%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ju0yaIil--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E5%25B8%25B3%25E7%25A5%25A8%25E3%2581%25AE%25E6%2589%258B%25E6%259B%25B8%25E3%2581%258D%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592OCR%25E3%2581%25A7%25E8%25AA%25AD%25E3%2581%25BF%25E3%2581%25A8%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kyonaka/articles/d6b66d8f9ae934",
          "author": "Kyonaka@AWSエンジニア",
          "description": "はじめに\nAWS エンジニアになる前は Python を独学で学び、Pandas や Matplotlib などデータ分析に関わるライブラリを触ってきました。\n実務で使うことはあるのかと思っていましたが、ようやく学んだことを活かせる時が来たので記事にしようと思います。\n\n どんな業務で扱うことになったのか？\nAWS エンジニア(インフラ担当)として、『AWS リソースの使用状況を月次で報告する』 という月一の定例業務が発生することになりました。\nEC2 インスタンスの 1 ヶ月の CPU やメモリの使用率などの推移を見て、今後のキャパシティプランニングに役立てる目的のためです。\n私が...",
          "link": "https://zenn.dev/kyonaka/articles/d6b66d8f9ae934",
          "publishedOn": "2024-02-07T05:58:28.000Z",
          "wordCount": 251,
          "title": "実務でPandasとMatplotlibを使う時がやっと来た",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1tTEnuPH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E5%258B%2599%25E3%2581%25A7Pandas%25E3%2581%25A8Matplotlib%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2599%2582%25E3%2581%258C%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A8%25E6%259D%25A5%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kyonaka%2540AWS%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MTZhOWZhNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1tTEnuPH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E5%258B%2599%25E3%2581%25A7Pandas%25E3%2581%25A8Matplotlib%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2599%2582%25E3%2581%258C%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A8%25E6%259D%25A5%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kyonaka%2540AWS%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MTZhOWZhNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/syu_tan/articles/c56919106e3682",
          "author": "emmyeil",
          "description": "Segmentation Models Pytorch の バックボーン(Backbone) を設定したいように変更する時の方法と注意点\n\n はじめに\nhttps://pytorch.org/\nディープラーニングのための自動微分をしてくれる PyTroch において、セグメンテーションのタスクのモデルを簡単に提供してくれるのが Segmentation Models Pytorchです。\n\nモデル作成の初学者から Kaggle などのコンペ、業務でも仕様できるくらい便利なライブラリーです。\nhttps://smp.readthedocs.io/en/latest/\nもう既にバックボーンと...",
          "link": "https://zenn.dev/syu_tan/articles/c56919106e3682",
          "publishedOn": "2024-02-07T05:27:56.000Z",
          "wordCount": 11128,
          "title": "Segmentation Models Pytorch の BackBone をカスタムする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xlxB015g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Segmentation%2520Models%2520Pytorch%2520%25E3%2581%25AE%2520BackBone%2520%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emmyeil%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxODg1NmFkMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xlxB015g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Segmentation%2520Models%2520Pytorch%2520%25E3%2581%25AE%2520BackBone%2520%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emmyeil%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxODg1NmFkMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tonbi_attack/articles/a1f581d8becd1b",
          "author": "tonbiattack",
          "description": "はじめに\nJava や Python など、多くのプログラミング言語で List やその他のコレクション型のデータ構造は頻繁に使用されます。これらのコレクションにオブジェクトを追加する際、特に複雑なアプリケーションや可読性の非常に低いコードでは、デバッグが難しくなることがあります。特に、List のオブジェクトクラスなどが多用されている場合、問題の追跡と解決はより複雑になります。このような状況を解決するための有効なデバッグ方法の一つが、List の Add メソッドなどのメソッドをラップしてブレークポイントで捕まえるテクニックです。\n\n 方法の概要\nこの方法では、既存の List に...",
          "link": "https://zenn.dev/tonbi_attack/articles/a1f581d8becd1b",
          "publishedOn": "2024-02-06T15:33:23.000Z",
          "wordCount": 991,
          "title": "List操作のデバッグを効率化するラッパークラス活用法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yCS8umdB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:List%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonbiattack%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGQ4MThjYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yCS8umdB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:List%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonbiattack%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGQ4MThjYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kaeru39/articles/1ea73bfa40c7df",
          "author": "kaeru39",
          "description": "目的\nローカルLLMの推論速度を改善する手法がいくつか報告されています。\n今回は実際に報告されている5つの手法を実装して推論速度がどの程度改善するか確認します。\n\n 推論処理の高速化手法\n\n 1. torch.compile\n\n計算グラフを構築\n各演算をCPUやGPUのデバイスに特化した細かい命令に分解\n与えられた入力に対して上記の命令を呼び出して演算を効率化\n\nhttps://pytorch.org/get-started/pytorch-2.0/#technology-overview\n\n 実装\nモデルを読み込んだ直後にtorch.compileを追加\nmodel = AutoM...",
          "link": "https://zenn.dev/kaeru39/articles/1ea73bfa40c7df",
          "publishedOn": "2024-02-06T14:35:32.000Z",
          "wordCount": 1371,
          "title": "ローカルLLMの推論速度を高速化する5つの手法と比較評価",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---PWgbZ9I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E3%2581%25AE%25E6%258E%25A8%25E8%25AB%2596%25E9%2580%259F%25E5%25BA%25A6%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B5%25E3%2581%25A4%25E3%2581%25AE%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---PWgbZ9I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E3%2581%25AE%25E6%258E%25A8%25E8%25AB%2596%25E9%2580%259F%25E5%25BA%25A6%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B5%25E3%2581%25A4%25E3%2581%25AE%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/deask/articles/97d71c0c86d312",
          "author": "deask",
          "description": "はじめに\nSPCSが遂に東京リージョンでもPuPrされましたね。\nAvailable regions\nこれをきっかけに、SPCSのチュートリアルを行ったり自前のコンテナをSPCSに移管したりしてみました。\n今回は、SPCSや移管をどう行ったかについて書いていきます。\n\n 想定読者\nSPCSについてまだよくわからない人\nSPCSにコンテナを移管する例が知りたい人\n\n SPCSについて\n\n SPCSとは\nSPCS(Snowpark Container Services)とは、Snowflakeが提供するフルマネージドコンテナサービスです。\nSPCSはSnowflakeと統合されており、以...",
          "link": "https://zenn.dev/deask/articles/97d71c0c86d312",
          "publishedOn": "2024-02-06T09:49:01.000Z",
          "wordCount": 705,
          "title": "SPCS(Snowpark Container Services)でコンテナをお試し移管してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OS7J2aal--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SPCS%2528Snowpark%2520Container%2520Services%2529%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E7%25A7%25BB%25E7%25AE%25A1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:deask%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkYWM5MmU0ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OS7J2aal--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SPCS%2528Snowpark%2520Container%2520Services%2529%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E7%25A7%25BB%25E7%25AE%25A1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:deask%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkYWM5MmU0ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/straydog/articles/4783ed8b29573b",
          "author": "stray dog",
          "description": "はじめに\nほったらかしてた備忘録。F5 押した際にデバッグが走るようにする設定する。\n\n 内容\n「.vscode」フォルダ直下の「launch.json」ファイルに以下のような内容を設定する。\nなければ作成してください。\n\nlaunch.json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Python: flask\", // 任意の名前\n      \"type\": \"python\",\n      \"request\": \"launch\",\n      \"module\": \"flask\",\n   ...",
          "link": "https://zenn.dev/straydog/articles/4783ed8b29573b",
          "publishedOn": "2024-02-06T01:30:14.000Z",
          "wordCount": 271,
          "title": "VscodeにおけるFlaskのデバッガ設定【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xlrohVYY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vscode%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BFlask%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AC%25E8%25A8%25AD%25E5%25AE%259A%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xlrohVYY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vscode%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BFlask%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AC%25E8%25A8%25AD%25E5%25AE%259A%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/overflow_offers/articles/prefect-is-perfect",
          "author": "bibio",
          "description": "はじめに\nおはこんばんちは。\nOffers と、Offers MGR を運営している株式会社 overflow のバックエンドエンジニアばばです。\nWeb サービスを開発している皆様であれば、高度なデータ処理の大変さ・つらさを味わったことはあるかと思います。\nたとえば\n\nグラフ用データを作成するには、API からデータ取得が終わった後に、DWH で集計して、その後バッチ処理かけてごにょごにょ\n想定してたよりデータ量が多くて、許容時間内に処理が終わらないー\nあの API 、 Rate Limit 厳しいからから並列数制御しないといつまでたっても取得がおわらない・・・\n\nなど、悩みはつき...",
          "link": "https://zenn.dev/overflow_offers/articles/prefect-is-perfect",
          "publishedOn": "2024-02-06T00:00:00.000Z",
          "wordCount": 5040,
          "title": "Prefectでプロダクトデータ処理基盤のDXを向上させようとしているはなし | Offers Tech Blog",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tyD463oA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prefect%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2587%25A6%25E7%2590%2586%25E5%259F%25BA%25E7%259B%25A4%25E3%2581%25AEDX%25E3%2582%2592%25E5%2590%2591%25E4%25B8%258A%25E3%2581%2595%25E3%2581%259B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2597%2520%257C%2520Offers%2520Tech%2520Blog%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:bibio%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4M2UwNWE5MjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Offers%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhYjg3MTk1ZjguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tyD463oA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prefect%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2587%25A6%25E7%2590%2586%25E5%259F%25BA%25E7%259B%25A4%25E3%2581%25AEDX%25E3%2582%2592%25E5%2590%2591%25E4%25B8%258A%25E3%2581%2595%25E3%2581%259B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2597%2520%257C%2520Offers%2520Tech%2520Blog%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:bibio%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4M2UwNWE5MjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Offers%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhYjg3MTk1ZjguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tasiten/articles/80cd7994087011",
          "author": "tasiten",
          "description": "目的\n去年の11月頃にOpenAIからカスタマイズ可能なChatGPTである，「GPTs」が発表された．特定の処理だけをさせるものを作ることができる．これはChatGPT Plusユーザーなら無料で作成・使用が出来る．\nまた何か開発する際などには技術的メモを残すものだが，それを時間が経って見返すときになかなか見つからないときがある．\nそこで今回は今までWeb上にメモしたドキュメントをPDF化してそれをGPTに学習させることで，対話形式で技術的メモを引き出せるようにする．\nちなみにデータサイズが小さいという理由で，一度htmlファイルを学習させたがhtmlのコードが多く学習されたため，...",
          "link": "https://zenn.dev/tasiten/articles/80cd7994087011",
          "publishedOn": "2024-02-05T18:51:23.000Z",
          "wordCount": 678,
          "title": "技術メモPDFから学習させるGPTの作り方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NrtQk8CP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E3%2583%25A1%25E3%2583%25A2PDF%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2595%25E3%2581%259B%25E3%2582%258BGPT%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tasiten%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyYzQwMzJlNWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NrtQk8CP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E3%2583%25A1%25E3%2583%25A2PDF%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2595%25E3%2581%259B%25E3%2582%258BGPT%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tasiten%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyYzQwMzJlNWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nondescript/articles/abbfd1f6a7ac93",
          "author": "素人の戯言",
          "description": "TL;DR\n\nNextcloudサーバー上でコマンドocc talk:bot:installで作成する\nWebhook→トークへのレスポンス\n\nレスポンス先\n\nNextCloudのURL/ocs/v2.php/apps/spreed/api/v1/bot/{トークID}/message\n\n\nヘッダ\n\n\nX-Nextcloud-Talk-Bot-Random：任意の64桁16進文字列\n\nX-Nextcloud-Talk-Bot-Signature：X-Nextcloud-Talk-Bot-Randomと返信メッセージのバイト列をBot作成時のシークレットを用いてHMACで暗号化した16...",
          "link": "https://zenn.dev/nondescript/articles/abbfd1f6a7ac93",
          "publishedOn": "2024-02-05T15:32:12.000Z",
          "wordCount": 1001,
          "title": "Nextcloud Talkのチャットボットを仕様通りに構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v4oaR0ea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nextcloud%2520Talk%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BB%2595%25E6%25A7%2598%25E9%2580%259A%25E3%2582%258A%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v4oaR0ea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nextcloud%2520Talk%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BB%2595%25E6%25A7%2598%25E9%2580%259A%25E3%2582%258A%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nishimoto/articles/9b29f8257b436a",
          "author": "nishimoto",
          "description": "SentenceTransformer上でContrieverを使えるようにしたよ！\nFacebookの作成したContrieverをSentenceTransformerで使えるようにしました！リポジトリは以下です。\nhttps://huggingface.co/nishimoto/contriever-sentencetransformer\nREADMEに記載がありますが、以下のようにSentenceTransformerライブラリ上でContrieverを使用することができます。\n# !pip install -U sentence-transformers\n\nfrom sen...",
          "link": "https://zenn.dev/nishimoto/articles/9b29f8257b436a",
          "publishedOn": "2024-02-05T11:14:19.000Z",
          "wordCount": 280,
          "title": "TransformerモデルをSentenceTransformersで使えるようにするには",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W4YKvc25--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformer%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592SentenceTransformers%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W4YKvc25--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformer%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592SentenceTransformers%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takeyan/articles/ae1c6f81be6559",
          "author": "takerin",
          "description": "pyside6＋αを使ったpythonスクリプトをexeファイルにする際にcx＿freezeを使ったが幾つかハマった所があったので忘備録として残します。\npip install cx_Freeze\nを実行してcx＿freezeをインストールしsetup.pyを作る。\nfrom cx_Freeze import setup, Executable\nimport sys\n\n# Dependencies are automatically detected, but some might need fine-tuning\nbuild_exe_options = {\"packages\": [\"o...",
          "link": "https://zenn.dev/takeyan/articles/ae1c6f81be6559",
          "publishedOn": "2024-02-05T08:15:37.000Z",
          "wordCount": 710,
          "title": "cx＿freezeでハマったところ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aaN5Yehl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cx%25EF%25BC%25BFfreeze%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takerin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmM0WjNXZmhEZnNGS2hsVU1pVmhnQXEyNzA0Nl95YmlTV19rQ0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aaN5Yehl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cx%25EF%25BC%25BFfreeze%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takerin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmM0WjNXZmhEZnNGS2hsVU1pVmhnQXEyNzA0Nl95YmlTV19rQ0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/emoclew/books/3087b7cff69946",
          "author": "emoclew",
          "description": "WindowsでDocker、WSL2、Git、VS Codeをインストールしてpythonの開発環境を整えるための手順をまとめた本",
          "link": "https://zenn.dev/emoclew/books/3087b7cff69946",
          "publishedOn": "2024-02-05T07:33:15.000Z",
          "wordCount": 100,
          "title": "Windowsでのpython開発環境構築 with Docker, WSL2, Git and VS Code",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xQVlh8-f--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84NTI1OWE2NDQ4LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xQVlh8-f--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84NTI1OWE2NDQ4LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/ymd65536/articles/vertexai_gemini_llm",
          "author": "Kento.Yamada",
          "description": "はじめに\nこの記事ではVertexAIとLangChainを使ってLLMから応答を得る方法を探ってみました。\n参考資料\n\ngoogle_vertex_ai_palm\nRetrieval indexing\nlangchain.indexes.vectorstore.VectorstoreIndexCreator\nVertex AI PaLM APIとLangChainで容易になった生成AIアプリケーションの構築\nquestion_answering_documents_langchain_matching_engine.ipynb\nVectorStoreIndexWrapper\nrec...",
          "link": "https://zenn.dev/ymd65536/articles/vertexai_gemini_llm",
          "publishedOn": "2024-02-05T02:14:11.000Z",
          "wordCount": 2642,
          "title": "VertexAIとLangChain サンプルコード集",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Czm9H5NH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VertexAI%25E3%2581%25A8LangChain%2520%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kento.Yamada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3NjI2OTlhYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Czm9H5NH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VertexAI%25E3%2581%25A8LangChain%2520%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kento.Yamada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3NjI2OTlhYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/keitakn/articles/tools-with-function-calling",
          "author": "keitakn",
          "description": "概要\nOpenAI Python library を使ってFunction callingの並列実行に対応した実装を紹介する記事です。\nユーザーへの返答はStreamingで返答します。\n私は最近LLMを使ったアプリケーション開発案件に関わっていますが、BtoB・BtoCに関わらずユーザー体験の観点からStreaming対応が必要になることが多いです。\nその為、この記事のサンプルコードは実際のプロダクトにも応用できると思います。\n\n 対象読者\nOpenAIを使ったアプリケーション開発の概要を理解している方が対象となります。\n\n 筆者のバックグラウンド\n普段はTypeScript（Ne...",
          "link": "https://zenn.dev/keitakn/articles/tools-with-function-calling",
          "publishedOn": "2024-02-05T02:06:04.000Z",
          "wordCount": 5295,
          "title": "OpenAI Streaming + Function callingの並列実行に対応する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N3WVmowm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520Streaming%2520%252B%2520Function%2520calling%25E3%2581%25AE%25E4%25B8%25A6%25E5%2588%2597%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keitakn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YWRiOTY3ZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N3WVmowm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520Streaming%2520%252B%2520Function%2520calling%25E3%2581%25AE%25E4%25B8%25A6%25E5%2588%2597%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keitakn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YWRiOTY3ZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/headwaters/articles/f3540383b4bf24",
          "author": "Shuichiro Sakata",
          "description": "ゴール：Windows PCに配置したファイルをWindows上のIoT Edgeモジュールから閲覧および編集ができる\nRaspberry Piに入れた自作IoT Edgeモジュールを用いて、Raspberry Piに配置したファイルをIoT Edgeモジュールから閲覧や編集ができるようにしました。\nそのモジュールをWindows PCに入れて実行することになり、ファイル共有処理も使用する必要が出ました。\n本記事はその共有の方法についてまとめています。\n\n 説明すること\n\nゴールを達成するためのIoT Edgeモジュールのデプロイ設定\nWindowsの共有フォルダおよびその中に入れる...",
          "link": "https://zenn.dev/headwaters/articles/f3540383b4bf24",
          "publishedOn": "2024-02-05T00:01:08.000Z",
          "wordCount": 1018,
          "title": "Windows PCとWindows上のIoT Edgeモジュール間でファイル共有を行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7NGuVTgC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520PC%25E3%2581%25A8Windows%25E4%25B8%258A%25E3%2581%25AEIoT%2520Edge%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E9%2596%2593%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2585%25B1%25E6%259C%2589%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shuichiro%2520Sakata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYmQ1ZTMxYzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7NGuVTgC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520PC%25E3%2581%25A8Windows%25E4%25B8%258A%25E3%2581%25AEIoT%2520Edge%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E9%2596%2593%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2585%25B1%25E6%259C%2589%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shuichiro%2520Sakata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYmQ1ZTMxYzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/dataheroes/articles/d9671363c6d257",
          "author": "Kentaro Maeda",
          "description": "/tmpと /dev/shmが使えた。\nSnowpark Optimized Warehouseに新たなユースケースを見出したかもしれない。\n\n なぜほしいか？\nファイルパスで非構造化ファイルを受け取るライブラリはよくある。\n例えば、画像処理ライブラリのPillowはImage.open(image_path)のようにファイルパスを受け取る。他にも、MLモデルや動画ファイルをファイルパスとして渡すことはよくあると思う。\nただ、UDFからほとんどの領域は書き込み権限がない。\nPermissionError: [Errno 1] Operation not permitted\n\n 結論\n冒頭...",
          "link": "https://zenn.dev/dataheroes/articles/d9671363c6d257",
          "publishedOn": "2024-02-05T00:00:00.000Z",
          "wordCount": 623,
          "title": "[Snowflake]UDFでユーザー管理のキャッシュ領域がほしい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f00Wsz-D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BSnowflake%255DUDF%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E9%25A0%2598%25E5%259F%259F%25E3%2581%258C%25E3%2581%25BB%25E3%2581%2597%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kentaro%2520Maeda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDFkYTVlNTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Snowflake%2520Data%2520Heroes%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYTJlMzdkM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f00Wsz-D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BSnowflake%255DUDF%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E9%25A0%2598%25E5%259F%259F%25E3%2581%258C%25E3%2581%25BB%25E3%2581%2597%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kentaro%2520Maeda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDFkYTVlNTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Snowflake%2520Data%2520Heroes%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYTJlMzdkM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/efx/articles/d9671363c6d257",
          "author": "Kentaro Maeda",
          "description": "/tmpと /dev/shmが使えた。\nSnowpark Optimized Warehouseに新たなユースケースを見出したかもしれない。\n\n なぜほしいか？\nファイルパスで非構造化ファイルを受け取るライブラリはよくある。\n例えば、画像処理ライブラリのPillowはImage.open(image_path)のようにファイルパスを受け取る。他にも、MLモデルや動画ファイルをファイルパスとして渡すことはよくあると思う。\nただ、UDFからほとんどの領域は書き込み権限がない。\nPermissionError: [Errno 1] Operation not permitted\n\n 結論\n冒頭...",
          "link": "https://zenn.dev/efx/articles/d9671363c6d257",
          "publishedOn": "2024-02-05T00:00:00.000Z",
          "wordCount": 600,
          "title": "[Snowflake]UDFでユーザー管理のキャッシュ領域がほしい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w40MgufQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BSnowflake%255DUDF%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E9%25A0%2598%25E5%259F%259F%25E3%2581%258C%25E3%2581%25BB%25E3%2581%2597%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kentaro%2520Maeda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYTJlMzdkM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--w40MgufQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BSnowflake%255DUDF%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E9%25A0%2598%25E5%259F%259F%25E3%2581%258C%25E3%2581%25BB%25E3%2581%2597%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kentaro%2520Maeda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYTJlMzdkM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/cfc7277d92b7f3",
          "author": "laiso",
          "description": "昨年末ぐらいからworkerdのPyodide統合の開発が活発になっている\nsearch results: repo:cloudflare/workerd  pyodide\nPyodideはWasmを使ってPythonインタプリターをブラウザ上で実行する環境で、これがリリースされるとRustサポートのようにCloudflare WorkersにPythonで書いたコードを直接デプロイできるようになると思われる\nhttps://developers.cloudflare.com/workers/runtime-apis/webassembly/rust/\ncloudflare/python...",
          "link": "https://zenn.dev/laiso/articles/cfc7277d92b7f3",
          "publishedOn": "2024-02-04T13:16:51.000Z",
          "wordCount": 336,
          "title": "workerdのpyodide統合を試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ngtLQYWM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:workerd%25E3%2581%25AEpyodide%25E7%25B5%25B1%25E5%2590%2588%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4Nzc0MDcyMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ngtLQYWM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:workerd%25E3%2581%25AEpyodide%25E7%25B5%25B1%25E5%2590%2588%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4Nzc0MDcyMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/khisa/articles/397b1d9e289352",
          "author": "ひさ",
          "description": "PythonのスクレイピングフレームワークScrapyを利用して、プレスなどのPDFファイルを収集、LLM（OpenAI API）でサマリを作成し、結果をデータベースに格納するという一連の流れを実現してみました。Scrapy、OpenAI APIともごく基本的な使い方しかしていませんが、あっという間に自動収集するプログラムが作成できましたので紹介します。\n\n Scrapyで収集したPDFファイルの内容をLLMに読み込ませてサマリーを作成\n今回やりたいことは以下のとおりです。\n\nScrapyで特定のWebサイトの最新情報（今回はプレスリリースのタイトル、日付、PDFファイルなど）を取得する...",
          "link": "https://zenn.dev/khisa/articles/397b1d9e289352",
          "publishedOn": "2024-02-04T13:15:16.000Z",
          "wordCount": 3424,
          "title": "scrapyでプレスのPDFファイルを収集してLLMで要約する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aqGdVlDj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:scrapy%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25AEPDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%258F%258E%25E9%259B%2586%25E3%2581%2597%25E3%2581%25A6LLM%25E3%2581%25A7%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2581%2595%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHFKaUVHa1VQMkc5WGpIeHlTa3p4bld3Z3JNcHFhT19hUFVKcWEyQ2YxWUZFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aqGdVlDj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:scrapy%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25AEPDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%258F%258E%25E9%259B%2586%25E3%2581%2597%25E3%2581%25A6LLM%25E3%2581%25A7%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2581%2595%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHFKaUVHa1VQMkc5WGpIeHlTa3p4bld3Z3JNcHFhT19hUFVKcWEyQ2YxWUZFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kotopasi/articles/ee03e9f3343ad6",
          "author": "あまたつ",
          "description": "はじめに\nPythonで実装した関数をFlaskのAPIで返したら日本語だけ文字化けしたときの対処法を載せます\n\n 動作環境\n\nmac macOS 14.2.1\nPython 3.9\n\n\n 手順\n以下のコードを追加します\nfrom flask import Flask\n\napp=Flask(__name__)\n+ app.json.ensure_ascii = False\nflaskライブラリのjsonifyで解決できるという記事が多かったのですが、Flaskのバージョンが2.3.2 以上の場合､Flaskの設定ファイルから文字コードの設定を変更する必要があるみたいです。\n\n おわり...",
          "link": "https://zenn.dev/kotopasi/articles/ee03e9f3343ad6",
          "publishedOn": "2024-02-04T09:56:55.000Z",
          "wordCount": 131,
          "title": "[Python] APIで返した日本語が文字化けしたときの対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--H0XHUDxv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520API%25E3%2581%25A7%25E8%25BF%2594%25E3%2581%2597%25E3%2581%259F%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%258C%25E6%2596%2587%25E5%25AD%2597%25E5%258C%2596%25E3%2581%2591%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--H0XHUDxv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520API%25E3%2581%25A7%25E8%25BF%2594%25E3%2581%2597%25E3%2581%259F%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%258C%25E6%2596%2587%25E5%25AD%2597%25E5%258C%2596%25E3%2581%2591%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kotopasi/articles/10b9d575b563c7",
          "author": "あまたつ",
          "description": "はじめに\n技育CAMPキャラバン@東京ハッカソンでフロントバック間のAPIの繋ぎ込みに苦戦しましたが、バックエンド側でCORSを許可することで解決しました\n\n 動作環境\n\nmac macOS 14.2.1\nPython 3.9\n\n\n 手順\nCORSライブラリをimportして設定するだけです\nfrom flask import Flask\n+ from flask_cors import CORS\n\napp=Flask(__name__)\n+ CORS(app)\n\n おわりに\nCORSの理解浅いので勉強しなきゃ...\n\n 参考",
          "link": "https://zenn.dev/kotopasi/articles/10b9d575b563c7",
          "publishedOn": "2024-02-04T09:54:34.000Z",
          "wordCount": 140,
          "title": "[Python] バックエンド側でCORSを許可する設定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--x6q4bsnQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E5%2581%25B4%25E3%2581%25A7CORS%25E3%2582%2592%25E8%25A8%25B1%25E5%258F%25AF%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--x6q4bsnQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E5%2581%25B4%25E3%2581%25A7CORS%25E3%2582%2592%25E8%25A8%25B1%25E5%258F%25AF%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takuty/articles/5a94628bd87179",
          "author": "Takuty",
          "description": "はじめに\nFastAPI で API 開発をしていて Get メソッドを叩く時にhttp://lcalhost:8080/items?name=Aのようにクエリパラメータに対応した Get メソッドはよく出でくると思います\nただ、検索ページの API のようにクエリパラメータが５個 10 個と必要になった時にどうしていますか\nメソッドの引数に５個 10 個と指定するのはあまりに不自然だと思いましたので現状これが良さそうだなというのをこちらに記載していきたい思います\n\n 前提\n商品のリストを Get メソッドで検索する、という想定です\n検索項目としては\n\n商品の ID\n商品名\n商品値段...",
          "link": "https://zenn.dev/takuty/articles/5a94628bd87179",
          "publishedOn": "2024-02-04T08:36:12.000Z",
          "wordCount": 1447,
          "title": "FastAPIのGetメソッドパラメータをBaseModelで受け取れるようにしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iAO-z2JX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25AEGet%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592BaseModel%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258C%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYjE0OTVjMjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iAO-z2JX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25AEGet%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592BaseModel%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258C%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYjE0OTVjMjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/massu_devix/articles/8184386de66394",
          "author": "mas_dx",
          "description": "はじめに\nprefect の構成要素のうち、 deployment について理解します。\nまた説明の中で、関連要素である flow や task についても触れます。\n前回は prefect の基本要素について触れました。\nhttps://zenn.dev/massu_devix/articles/a016774865d647\n\n deployment とは\ndeployment とは、 prefect に登録した flow を リモートで実行可能なエンティティ に昇華させるオブジェクトです。\nflow とは prefect におけるワークフローとしての起動単位です。 flow を起...",
          "link": "https://zenn.dev/massu_devix/articles/8184386de66394",
          "publishedOn": "2024-02-04T07:58:50.000Z",
          "wordCount": 805,
          "title": "prefect の deployment について理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_F2rSuHC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:prefect%2520%25E3%2581%25AE%2520deployment%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mas_dx%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxMDc1MzMyYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_F2rSuHC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:prefect%2520%25E3%2581%25AE%2520deployment%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mas_dx%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxMDc1MzMyYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sawarae/articles/27d848a17fe7fc",
          "author": "sawara",
          "description": "「Pythonによる数値計算入門」で最小二乗法の例をnumpy.linalg.solveで解く例があったので、それのsvd版を書いておきます。\nimport numpy as np\n\n# y = 2x + 3に誤差を加えたデータ\n# 数値はPythonによる数値計算入門より\n\nN = 5\nX = np.zeros(N)\nY = np.zeros(N)\nZ = np.zeros(N)\n\nX[0] = 0.0; Y[0] = 3.00\nX[1] = 1.0; Y[1] = 4.51\nX[2] = 2.0; Y[2] = 7.54\nX[3] = 3.0; Y[3] = 8.43\nX[4] = ...",
          "link": "https://zenn.dev/sawarae/articles/27d848a17fe7fc",
          "publishedOn": "2024-02-04T07:00:16.000Z",
          "wordCount": 642,
          "title": "numpyで特異値分解",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FWHAfPoW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:numpy%25E3%2581%25A7%25E7%2589%25B9%25E7%2595%25B0%25E5%2580%25A4%25E5%2588%2586%25E8%25A7%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sawara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y3Zya1d3WGwybERvWGo2X3NDNEt4am5xa2R2c1dfSV9pc1Rpci09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FWHAfPoW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:numpy%25E3%2581%25A7%25E7%2589%25B9%25E7%2595%25B0%25E5%2580%25A4%25E5%2588%2586%25E8%25A7%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sawara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y3Zya1d3WGwybERvWGo2X3NDNEt4am5xa2R2c1dfSV9pc1Rpci09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/afk2777/articles/zenn-nvim-jupyter",
          "author": "makio",
          "description": "はじめに\nはじめまして、makioです。\n仮想通貨自動売買プログラムの開発をしています。\nデータ分析の勉強がてらkaggleに入門しようとブラウザやらvscodeでjupyterを操作していましたが、「vimでやりてぇー」という気持ちが抑えきれずneovim上でjuypterをやる方法を模索しました。\n調べた結果、nevim上で以下のようなことができるようになりました。\n\njuypter notebook(*.ipynb)を開くと自動でpythonファイルとして開く。\n保存時にipynbに編集内容を反映する。\n「#%%」で囲われた箇所を一つのセルとしてコードを実行できる。\nnvimの...",
          "link": "https://zenn.dev/afk2777/articles/zenn-nvim-jupyter",
          "publishedOn": "2024-02-04T06:39:07.000Z",
          "wordCount": 453,
          "title": "どうしてもneovimでjupyterlabしたいんや",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fcdKsGCx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A9%25E3%2581%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582neovim%25E3%2581%25A7jupyterlab%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2582%2593%25E3%2582%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5NjE4NjhmNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fcdKsGCx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A9%25E3%2581%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582neovim%25E3%2581%25A7jupyterlab%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2582%2593%25E3%2582%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5NjE4NjhmNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sekochan/articles/721fb53c99f753",
          "author": "sekochan",
          "description": "requestsは別途installしてimportする必要があるのでurllib3を使う\n例\nimport json\nimport urllib3\nfrom urllib3 import PoolManager\n\ndef req():\n\n    url = f\"https://sample.com\"\n    \n    http = urllib3.PoolManager()\n    response = http.request('GET', url)\n    decoded_data = response.data.decode('utf-8')\n    json_data = js...",
          "link": "https://zenn.dev/sekochan/articles/721fb53c99f753",
          "publishedOn": "2024-02-04T02:41:52.000Z",
          "wordCount": 104,
          "title": "【Python】Lambdaで外部APIを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qIX3u4it--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Lambda%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sekochan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVBxaUFjNERyaWZ0YkZMd0o0YVQzb3V0NEtIUmJVZk5fX21yNUp0alJMMHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qIX3u4it--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Lambda%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sekochan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVBxaUFjNERyaWZ0YkZMd0o0YVQzb3V0NEtIUmJVZk5fX21yNUp0alJMMHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kotopasi/articles/cab921a085775e",
          "author": "あまたつ",
          "description": "はじめに\n技育CAMPキャラバンハッカソンで音楽マッチングアプリを作成したときにFlaskでAPIを作成したときの備忘録です\n\n 動作環境\n\nmacOS 14.2.1\n\n\n 手順\n\n ルーティングURLに引数をとる\nFrom flask import Flask\n\napp=Flask(__name__)\n@app.route('/hello/<string:name>')\ndef hello(name):\n    return {\"hello\":name}\nこれで/hello/以降に入れた文字列がnameに代入されて返ってくる\nhttp://localhost:5000/...",
          "link": "https://zenn.dev/kotopasi/articles/cab921a085775e",
          "publishedOn": "2024-02-04T02:01:39.000Z",
          "wordCount": 164,
          "title": "[Flask] 引数を取って動的なAPIを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--diHFOgR7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BFlask%255D%2520%25E5%25BC%2595%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E3%2581%25A3%25E3%2581%25A6%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AAAPI%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--diHFOgR7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BFlask%255D%2520%25E5%25BC%2595%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E3%2581%25A3%25E3%2581%25A6%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AAAPI%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kotopasi/articles/7dc6a1478a5060",
          "author": "あまたつ",
          "description": "はじめに\n技育CAMPキャラバンハッカソンで音楽マッチングアプリを作成したときにSpotifyAPIで遊んでみた備忘録です\n\n 動作環境\n\nmacOS 14.2.1\n\n\n 目標\n\nSpotifyAPIを利用できるようにする\n曲情報を取得する\n\n\n 手順\n\n SpotifyAPIを利用できるようにする\nAPIダッシュボードからログインしたあと以下を入力することでclientIDとsecretKeyを取得する\n\n\n 曲情報を取得する\nPythonでSpotify APIを使うために、spotipyライブラリを使う\nimport spotipy\nfrom spotipy.oauth2 im...",
          "link": "https://zenn.dev/kotopasi/articles/7dc6a1478a5060",
          "publishedOn": "2024-02-04T01:43:21.000Z",
          "wordCount": 416,
          "title": "[Python]Spotify APIで楽曲の情報を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8_bcBRMI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255DSpotify%2520API%25E3%2581%25A7%25E6%25A5%25BD%25E6%259B%25B2%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8_bcBRMI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255DSpotify%2520API%25E3%2581%25A7%25E6%25A5%25BD%25E6%259B%25B2%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nomhiro/articles/sk-plan-type",
          "author": "しろくま",
          "description": "はじめに\nSemanticKernelをまだまだ使いこなせてませんが、AOAIのドーナツ本を読む中で、Plannerの種類がいくつかあることを知りました。そのため、Plannerの種類を整理してみます。\nここではPythonで使えるPlannerを試します。\nC#版ではいくつかPlannerに変更があったようなので、そちらについては別途調査します。Migrating from the Sequential and Stepwise planners to the new Handlebars and Stepwise planner\n\n そもそもSemanticKernelとは\nSe...",
          "link": "https://zenn.dev/nomhiro/articles/sk-plan-type",
          "publishedOn": "2024-02-03T13:18:09.000Z",
          "wordCount": 2141,
          "title": "PythonにおけるSemanticKernelのPlannerの種類を整理する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L_w2EZqL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BSemanticKernel%25E3%2581%25AEPlanner%25E3%2581%25AE%25E7%25A8%25AE%25E9%25A1%259E%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0YmFmOGY4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--L_w2EZqL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BSemanticKernel%25E3%2581%25AEPlanner%25E3%2581%25AE%25E7%25A8%25AE%25E9%25A1%259E%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0YmFmOGY4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yottabyte/articles/74b20c15ca48d3",
          "author": "Raio｜高校生エンジニア",
          "description": "生成AI時代を勝ち抜く事業・組織のつくり方\n\n\n生成AI時代のビジネス・サービスづくりの教科書。\n生成AIをいかに活用して新たな価値を生むか、成功のフレームワークを大公開！\nOpenAIの対話型AI「ChatGPT」をはじめとした生成AIは、もはや一過性のブームではない。\nとはいえ、\n「使ってみたけれど思ったほど仕事に役立たない」「どう活用すべきか分からない」\n「ビジネスに本当に生かせるのか疑問」など、\n懐疑的な声もあふれている。\n本書は、そんな疑いや疑問を払拭するための指南書だ。\nそれも、経営層や事業リーダー、サービスづくりに携わる方たちが真に求めている知識やノウハウを提供すること...",
          "link": "https://zenn.dev/yottabyte/articles/74b20c15ca48d3",
          "publishedOn": "2024-02-03T10:56:12.000Z",
          "wordCount": 240,
          "title": "【2024年2月】エンジニアなら読むべき技術書まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qQwIlk0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B42%25E6%259C%2588%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AA%25E3%2582%2589%25E8%25AA%25AD%25E3%2582%2580%25E3%2581%25B9%25E3%2581%258D%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjYWMwZjI3ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qQwIlk0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B42%25E6%259C%2588%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AA%25E3%2582%2589%25E8%25AA%25AD%25E3%2582%2580%25E3%2581%25B9%25E3%2581%258D%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjYWMwZjI3ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/joanofarc/articles/abe_2020_description",
          "author": "JoanOfArc",
          "description": "0. この記事の趣旨\nこの記事では BTYD モデルの一種として提案された 周期的な購買行動に対応した顧客の 生涯価値の導出と顧客維持介入戦略への応用(阿部 2020) について、その数理構造を解説することを目的としています。一応 python を用いた推定の実装についても触れるつもりではありますが、私は数値最適化や計算の高速化については十分な知見がないので、ご利用の際はご注意ください。ソースコードは以下にあります。\nhttps://github.com/BlackJack2021/Zenn_abe_2020_description\n\n 1. モデルの概要\n本章では、以下の 2 点に...",
          "link": "https://zenn.dev/joanofarc/articles/abe_2020_description",
          "publishedOn": "2024-02-03T07:27:17.000Z",
          "wordCount": 6128,
          "title": "【BTYDモデル】阿部(2020)の解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yz_j93i7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590BTYD%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2580%2591%25E9%2598%25BF%25E9%2583%25A8%25282020%2529%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yz_j93i7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590BTYD%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2580%2591%25E9%2598%25BF%25E9%2583%25A8%25282020%2529%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/t_katsumoto/articles/8073607afd0dc0",
          "author": "Katsumoto Takashi",
          "description": "つまりどういう事か。Tableauでダッシュボードの全体サイズを変えると各オブジェクトの位置や大きさまで変わってしまうが、いやいや、サイズだけ変えたいから！オブジェクトそのままでいいから！という時にどうするかというお話である。\n勿論、変わって欲しい時もある。しかし、そうでない時もある・・固定サイズで浮動オブジェクトも色々配置して作り込んでいる時などは特にそうだろう。もう少しだけ幅足して、ここにこれが置ければ。。なんて事があったとしても、サイズを変えると全てのオブジェクトの位置や大きさが変わってしまうものだから、サイズ変更前のワークブックのコピーを開いて、そこにある元のオブジェクトの情報を...",
          "link": "https://zenn.dev/t_katsumoto/articles/8073607afd0dc0",
          "publishedOn": "2024-02-03T06:08:07.000Z",
          "wordCount": 156,
          "title": "Tableauダッシュボードのサイズをオブジェクト無視で変更する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a4tocIFy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E7%2584%25A1%25E8%25A6%2596%25E3%2581%25A7%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Katsumoto%2520Takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWZsNDQ2RlNJN0t4SlhhSzUwWm1kSTg0N3oxclZ1Vkp4NDVYT1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a4tocIFy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E7%2584%25A1%25E8%25A6%2596%25E3%2581%25A7%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Katsumoto%2520Takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWZsNDQ2RlNJN0t4SlhhSzUwWm1kSTg0N3oxclZ1Vkp4NDVYT1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuichi_dev/articles/d601ebab84b7ac",
          "author": "Yuichi",
          "description": "dlt(data load tool)とは\nPython のオープンソース ライブラリで、おもに多様なデータソースからデータ基盤にデータを転送するときに利用する。embulkあたりが競合かなSaaSだとfivetranやtroccoあたりが競合かなという理解。\n\nhttps://dlthub.com/\n\n コネクタ\nデータ転送元としては、ほどんどのDBが対応しており、広告系だとGAとかFBがあり今後の拡充に期待\nhttps://dlthub.com/docs/dlt-ecosystem/verified-sources/\n\n セットアップ\ndltをインストール\npip install...",
          "link": "https://zenn.dev/yuichi_dev/articles/d601ebab84b7ac",
          "publishedOn": "2024-02-03T04:46:01.000Z",
          "wordCount": 539,
          "title": "dlt(data load tool)を試す。[Harlequin SQL IDE]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--taXZdrUG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dlt%2528data%2520load%2520tool%2529%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%25E3%2580%2582%255BHarlequin%2520SQL%2520IDE%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMmI0ZGExMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--taXZdrUG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dlt%2528data%2520load%2520tool%2529%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%25E3%2580%2582%255BHarlequin%2520SQL%2520IDE%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMmI0ZGExMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/t0mmy/articles/internal_server_error_by_websocket",
          "author": "t0mmy",
          "description": "概要\nDjango + Dapahne + Channlels 構成の Websokcet サーバーにて、502エラーが発生する事態に遭遇しました。\n原因や解決策を、調べた範囲で書いていきます。\n\n 結論\nサーバー側に、実質的な Websocket 接続上限が存在していた。\n上限を超えてWebsocket接続を試みた結果、接続時に502エラーが発生した。\nWebsocketの上限は、マシンの CPU コア数に依存する模様。\nまた、環境変数で上限を設定することもできる。\n\n 構成\n\n\n 遭遇した問題\nある日、WebsocketクライアントからWebsocket接続を試みたところ、エラー...",
          "link": "https://zenn.dev/t0mmy/articles/internal_server_error_by_websocket",
          "publishedOn": "2024-02-03T00:36:23.000Z",
          "wordCount": 439,
          "title": "Django + daphne + channels構成のWebsocketサーバーで502エラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AIs9Y-oy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520%252B%2520daphne%2520%252B%2520channels%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AEWebsocket%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A7502%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t0mmy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cwOV9uUGFwUktkM1E4VnVoc25fY0pSZTEzZmtPZTBseFpEbTNhNGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AIs9Y-oy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520%252B%2520daphne%2520%252B%2520channels%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AEWebsocket%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A7502%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t0mmy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cwOV9uUGFwUktkM1E4VnVoc25fY0pSZTEzZmtPZTBseFpEbTNhNGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shomtsm/articles/6110fac57d3f40",
          "author": "松嶋松",
          "description": "venvとは\npythonで仮想環境を作るためのモジュール\nPython3.3以降で標準ライブラリの一部になった\n\n なぜ仮想環境必要か\n仮想環境は、プロジェクトごとに異なるパッケージやパッケージバージョンを管理するために使用される。\nシステム全体のPythonインストールを変更せずに、プロジェクト固有の依存関係を維持することができる。\njavascript/node.jsのpackage.jsonがあって、インストールして関連パッケージがnode_modulesに格納されると同じイメージ\n\n 仮想環境基本コマンド\n前提としてPythonがシステムにインストールされていること\nつまり...",
          "link": "https://zenn.dev/shomtsm/articles/6110fac57d3f40",
          "publishedOn": "2024-02-03T00:25:42.000Z",
          "wordCount": 797,
          "title": "[python初心者] 仮想環境venvのことを調べました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZpKlBolJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpython%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%255D%2520%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583venv%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%25BE%25E5%25B6%258B%25E6%259D%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlM2NkZGY0NmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZpKlBolJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpython%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%255D%2520%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583venv%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%25BE%25E5%25B6%258B%25E6%259D%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlM2NkZGY0NmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sekochan/articles/b76fde0c53f7dd",
          "author": "sekochan",
          "description": "やりたいこと\n\nAPIGateway, lambdaでAPIを作成\nlambdaからAurora Postgresに接続\nAurora PostgresでPost GISを使用\n住所を送ると、DBに登録したlocationを近い順にtop10を返す\n\n1. は終わっているので2. 3. 4.をやります。\n\n AuroraとAurora Serverlessの違い\n・主な違いはRDS Proxyに対応したこと\nRDS Proxyはコネクションをプールさせておくことで同時接続数などの問題を回避できる。\n参考：\nhttps://acro-engineer.hatenablog.com/en...",
          "link": "https://zenn.dev/sekochan/articles/b76fde0c53f7dd",
          "publishedOn": "2024-02-02T14:55:27.000Z",
          "wordCount": 618,
          "title": "Lambda・Aurora Postgres・PostGISで地理情報APIを構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pCTZGiuN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lambda%25E3%2583%25BBAurora%2520Postgres%25E3%2583%25BBPostGIS%25E3%2581%25A7%25E5%259C%25B0%25E7%2590%2586%25E6%2583%2585%25E5%25A0%25B1API%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sekochan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVBxaUFjNERyaWZ0YkZMd0o0YVQzb3V0NEtIUmJVZk5fX21yNUp0alJMMHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pCTZGiuN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lambda%25E3%2583%25BBAurora%2520Postgres%25E3%2583%25BBPostGIS%25E3%2581%25A7%25E5%259C%25B0%25E7%2590%2586%25E6%2583%2585%25E5%25A0%25B1API%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sekochan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVBxaUFjNERyaWZ0YkZMd0o0YVQzb3V0NEtIUmJVZk5fX21yNUp0alJMMHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nishimoto/articles/11b1953caaf832",
          "author": "nishimoto",
          "description": "Python全般\n\n Pythonで並列処理\n# func: function, 並列化したい処理\n# args_list: list, 入力とするもののリスト\n\nfrom tqdm.notebook import tqdm\nfrom multiprocessing import Pool, cpu_count\nwith Pool(cpu_count()) as p:\n    result_list = list(tqdm(p.imap(func, args_list), total=len(args_list)))\n\n pythonでfull pathからfilenameを取得する...",
          "link": "https://zenn.dev/nishimoto/articles/11b1953caaf832",
          "publishedOn": "2024-02-02T12:31:19.000Z",
          "wordCount": 690,
          "title": "Python便利メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WvpeX0iS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Python%25E4%25BE%25BF%25E5%2588%25A9%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WvpeX0iS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Python%25E4%25BE%25BF%25E5%2588%25A9%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/meboo/articles/0bda616ec521ab",
          "author": "meboo",
          "description": "※このページの主要部分は作成したpythonコードを用いて出力したのものです。\n※作成するにあたりChatGPTとの会話をまず記載します。\n※ChatGPTに書いてもらったコードを自分で微修正して完成させたものを本ページの最後に掲載しています。\n\n あなたの発言\n※「要素とストーリー構造.html」というファイルをアップロード。これはChatGPTとの会話ページをCtrl+Sで保存したものです。\nファイルアップロードしたものはChatGPTのページをHTMLとして保存したファイルとなります。\n・このような構造のHTMLを読み込んで、以下の変換を行うpythonスクリプトを書いてください。...",
          "link": "https://zenn.dev/meboo/articles/0bda616ec521ab",
          "publishedOn": "2024-02-02T06:14:12.000Z",
          "wordCount": 955,
          "title": "ChatGPTのhtmlページをマークダウンに変換するプログラムをChatGPT自身に書いてもらう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NCsL7Lcm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AEhtml%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592ChatGPT%25E8%2587%25AA%25E8%25BA%25AB%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meboo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hwVUEzU2ZiLWZrbG5BbUhwRDBhbzlsbUJhN3QzNzNYWUZiQXdxV0JBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NCsL7Lcm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AEhtml%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592ChatGPT%25E8%2587%25AA%25E8%25BA%25AB%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meboo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hwVUEzU2ZiLWZrbG5BbUhwRDBhbzlsbUJhN3QzNzNYWUZiQXdxV0JBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/00/articles/gradio-with-css",
          "author": "koji",
          "description": "最近仕事で、 Gradioベースのアプリケーションの見た目をデザイナーのデザインしたものに寄せる作業が発生して、Gradioに無理やりCSSを当てるということをやってました。\n本記事では、Gradioサイトに乗っているInterfaceのサンプルを使いますが、Blockでも全く同じことが可能です。\nimport gradio as gr\n\ndef greet(name):\n    return \"Hello \" + name + \"!\"\n\ndemo = gr.Interface(fn=greet, inputs=\"text\", outputs=\"text\")\ndemo.launch()\n...",
          "link": "https://zenn.dev/00/articles/gradio-with-css",
          "publishedOn": "2024-02-02T02:18:13.000Z",
          "wordCount": 618,
          "title": "GradioでCSSを使う方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8t4hDInE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradio%25E3%2581%25A7CSS%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlOGI2NmE3YjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8t4hDInE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradio%25E3%2581%25A7CSS%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlOGI2NmE3YjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/iwatagumi/articles/14787c4ccec626",
          "author": "kirigaya",
          "description": "みなさんこんにちは！kirigayaです。\nみなさんJinja使ってますか？\nどうでもいい話ですが最初は神社とは知らずジンジャーと呼んでいました。\n今回はpythonコードの中で柔軟にSQLを生成する記事です。\n動的生成のイメージとしてはクエリの中に変数を埋め込んで変数を変えるだけで\nクエリの内容を変える感じです。\n使える場面としては決まったクエリ内でフィルター条件だけ変えたいと言った場面です。\n環境はColabノートブックを使います。\nDBはdukdbを使います。ノートブック上にすぐ構築できて色々便利です。\n1セルずつ実行していきましょう。\n初期セットアップ\n!pip install ...",
          "link": "https://zenn.dev/iwatagumi/articles/14787c4ccec626",
          "publishedOn": "2024-02-02T00:51:11.000Z",
          "wordCount": 275,
          "title": "JinjaでSQLを動的生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GNxnRoGI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jinja%25E3%2581%25A7SQL%25E3%2582%2592%25E5%258B%2595%25E7%259A%2584%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kirigaya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MjI0YmNkMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%25B2%25A9%25E7%2594%25B0%25E7%25B5%2584%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmNGYxNzkwNDMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GNxnRoGI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jinja%25E3%2581%25A7SQL%25E3%2582%2592%25E5%258B%2595%25E7%259A%2584%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kirigaya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MjI0YmNkMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%25B2%25A9%25E7%2594%25B0%25E7%25B5%2584%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmNGYxNzkwNDMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/awtnb/articles/7ec2de7a4fb742",
          "author": "AWtnb",
          "description": "SKK（CorvusSKK）を使い始めました。keyhacと組み合わせることでさらに快適な日本語入力ライフを送れるようになったので備忘録です。\n最新状況：\nhttps://github.com/AWtnb/keyhac\n以前に書いたkeyhacの紹介記事：\nhttps://zenn.dev/awtnb/books/adf6c5162a9f08\n\n詳細は上記のリポジトリや紹介記事を見ていただければと思いますが、keyhacは基本的に configure 関数の中に処理を書いていきます。\n以下のコードはすべてこの関数内に記述していきます（インデントを省略しているのでコピペ時にはご注意ください...",
          "link": "https://zenn.dev/awtnb/articles/7ec2de7a4fb742",
          "publishedOn": "2024-02-02T00:02:05.000Z",
          "wordCount": 3058,
          "title": "SKKを意識したkeyhac設計",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1KfRI7H7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SKK%25E3%2582%2592%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259Fkeyhac%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AWtnb%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MTdhZTAxZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1KfRI7H7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SKK%25E3%2582%2592%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259Fkeyhac%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AWtnb%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MTdhZTAxZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/safubuki/articles/turtle-20240128-stable-ext",
          "author": "タートルヴィレッジ・ゆう",
          "description": "画像生成AIは、掛け算の組み合わせ（例えば、亀×犬や花×亀など）から、想像もできないようなものを生み出し驚かされます。画像生成AIには様々なツールがありますが、今回は扱うStable Diffusion WebUI（以下、WebUI）は、自分のPCに環境を作ることができます。そして、他の人が作成した拡張機能を自由に組み合わせて、自分の好きなようにカスタマイズすることができます。\n私は拡張機能を便利に利用していましたが、自分でも作ってみたいと思い、2024年正月に挑戦してみました！\nさらに、WebUIには、Indexリストから欲しい拡張機能を探して、簡単にインストールできる仕組みがあります...",
          "link": "https://zenn.dev/safubuki/articles/turtle-20240128-stable-ext",
          "publishedOn": "2024-02-01T18:13:11.000Z",
          "wordCount": 1522,
          "title": "【Stable Diffusion】WebUI拡張機能開発！作り方からIndexリスト登録まで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0ze0bBUf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Stable%2520Diffusion%25E3%2580%2591WebUI%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2581%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2581%258B%25E3%2582%2589Index%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AB%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2583%25BB%25E3%2582%2586%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOThkZDlhOWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0ze0bBUf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Stable%2520Diffusion%25E3%2580%2591WebUI%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2581%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2581%258B%25E3%2582%2589Index%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AB%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2583%25BB%25E3%2582%2586%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOThkZDlhOWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/slopetech/articles/b4d5b89d5a7480",
          "author": "hedgeek",
          "description": "問題\nmultiprocessingライブラリで並列化処理を実施している際、子プロセスが異常停止する（OOM KillerなどにKillされるなど）と、親プロセスがハングアップしてしまう問題があります。\nこれはCPythonのIssueでも報告されており、対処方法が日本語記事にはあまり見当たらなかったので備忘録として記載しておきます。\n再現コードとして、下記を用意しました。実行してみると、親プロセスが子プロセスの異常終了を検知できず応答なしの状態になることが確認できます。\nimport multiprocessing\nimport sys\n\n\ndef worker_fn(dummy:...",
          "link": "https://zenn.dev/slopetech/articles/b4d5b89d5a7480",
          "publishedOn": "2024-02-01T10:34:42.000Z",
          "wordCount": 678,
          "title": "Pythonのmultiprocessingで子プロセスの異常終了を検知したい時の対処方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Fm4eJhZt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEmultiprocessing%25E3%2581%25A7%25E5%25AD%2590%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E7%25B5%2582%25E4%25BA%2586%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hedgeek%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNDg4MzVhYmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Fm4eJhZt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEmultiprocessing%25E3%2581%25A7%25E5%25AD%2590%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E7%25B5%2582%25E4%25BA%2586%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hedgeek%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNDg4MzVhYmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/bonsai_engineer/articles/878bf88da5b1bb",
          "author": "盆栽エンジニア",
          "description": "最近はlinuxやハードウェアやネットワークなど低レイヤの勉強をしています。プログラムはどの言語でも最終的に機械語で実行されており、なら他の言語のプログラムも実行できるではと思い、調べてみました。そうするとJavaScriptでC言語が実行できたのでやり方を共有します。\n\n 環境\n\n\n 1.C言語のプログラムを準備\nC言語の簡単なプログラムを準備します。適当な引数を受け取りそれを標準出力で吐くようなものにしました。\n\nmain.c\nconst { exec } = require('child_process');\n\nconst argValue = 'tttttt aa aaaa';\n...",
          "link": "https://zenn.dev/bonsai_engineer/articles/878bf88da5b1bb",
          "publishedOn": "2024-02-01T08:28:08.000Z",
          "wordCount": 538,
          "title": "JavaScriptでC言語のプログラムを実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f8tuHN6Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7C%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f8tuHN6Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7C%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/atsushi570/articles/293516d4abd6e3",
          "author": "atsushi",
          "description": "概要\nMacBookで文章をベクトル化するときに、CPUとGPUのどちらが早く処理できるかあたり評価を行った。\n文章が短いときはCPUが早い。\nただし、モデルにもよって異なるので用途によって検討必要。\n\n 環境\n\n\n\nitem\nspec\n\n\n\n\npc\nM1 MacBook\n\n\nOS\n14.2.1\n\n\npython\n3.11.5\n\n\ntorch\n2.1.2\n\n\ntransformers\n4.37.2\n\n\nmodel\nintfloat/multilingual-e5-small\n\n\n\n\n コード（の一部）\n# トークナイズするテキスト\n        texts = [ ここの文字列は評...",
          "link": "https://zenn.dev/atsushi570/articles/293516d4abd6e3",
          "publishedOn": "2024-02-01T05:00:21.000Z",
          "wordCount": 680,
          "title": "M1 MacBook でCPUとGPU(MPS)のどちらが早く文章をベクトル化できるか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FmaSHHl0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520MacBook%2520%25E3%2581%25A7CPU%25E3%2581%25A8GPU%2528MPS%2529%25E3%2581%25AE%25E3%2581%25A9%25E3%2581%25A1%25E3%2582%2589%25E3%2581%258C%25E6%2597%25A9%25E3%2581%258F%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E5%258C%2596%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atsushi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekxXNzkyOVNhaF8wV1NBb0k5azdja1FOQ2FFanEyUHdyOXlySWs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FmaSHHl0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520MacBook%2520%25E3%2581%25A7CPU%25E3%2581%25A8GPU%2528MPS%2529%25E3%2581%25AE%25E3%2581%25A9%25E3%2581%25A1%25E3%2582%2589%25E3%2581%258C%25E6%2597%25A9%25E3%2581%258F%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E5%258C%2596%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atsushi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekxXNzkyOVNhaF8wV1NBb0k5azdja1FOQ2FFanEyUHdyOXlySWs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tnakabeppu/articles/d45cefc1ae3e67",
          "author": "nakabeppu@kikagaku",
          "description": "PyTorchでカスタマイズした目的（損失）関数を設定したい\n\n 1.はじめに\nディープラーニングの実装において、PyTorch はその柔軟性と効率性で広く利用されています。特に、カスタム損失関数を用いることで、特定の問題に合わせた最適化が可能になります。しかし、このプロセスには、 Numpy との相互作用に関連する一つの重要な落とし穴があります。本記事では、PyTorch の自動微分エンジンと Numpy を用いたカスタム損失関数の作成における問題点とその解決策について解説します。\n\n 2.理論\n\n 2-1.PyTorch の自動微分エンジンの基礎\nPyTorch の最大の特徴の一...",
          "link": "https://zenn.dev/tnakabeppu/articles/d45cefc1ae3e67",
          "publishedOn": "2024-01-31T17:46:34.000Z",
          "wordCount": 2434,
          "title": "PyTorch Custom Loss with NumPy",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cw2utRAY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:PyTorch%2520Custom%2520Loss%2520with%2520NumPy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakabeppu%2540kikagaku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSldnbFZOU2FyNXFDZnlxYTd5VW05R21WOFVFc1BicEdrQkw0WkM4bHdTWVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cw2utRAY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:PyTorch%2520Custom%2520Loss%2520with%2520NumPy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakabeppu%2540kikagaku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSldnbFZOU2FyNXFDZnlxYTd5VW05R21WOFVFc1BicEdrQkw0WkM4bHdTWVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/toratti/articles/e3668ee484e5df",
          "author": "とらっち",
          "description": "SNMP周りをちゃんと()整理し，pysnmpというライブラリについて使ってみました．この記事書き始めたのは2023の年末だったけどpysnmpの実験が間に合ってなくて…\nさらにTerraformしてたから尚更…\n軽くこんなライブラリ使ってみたよって話にしようと思ったらかなり長くなってしまいました．\n不備がありそうなので修正予定です．\n\n SNMPとは\nTCP/IPネットワーク上でネットワーク管理するためのプロトコルでUDP上で動作するらしいです．\nSimple Network Management Protocolを略してSNMP．\n登場人物は，SNMPマネージャーとSNMPエージェン...",
          "link": "https://zenn.dev/toratti/articles/e3668ee484e5df",
          "publishedOn": "2024-01-31T15:51:00.000Z",
          "wordCount": 2587,
          "title": "pysnmpの話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bRdoRnUr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:pysnmp%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2589%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWE1ZTI0NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bRdoRnUr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:pysnmp%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2589%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWE1ZTI0NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tonbi_attack/articles/0835a5ea9203f1",
          "author": "tonbiattack",
          "description": "はじめに\n動的型付け言語はその柔軟性で知られていますが、この柔軟性が時には代償を伴います。一方で、静的型付け言語はその厳格さにより多くのメリットを提供します。FastAPI と Pydantic を使用することで、Python のような動的型付け言語でも型の安全性を部分的に享受できるようになりました。しかし、この体験はまた、静的型付け言語におけるエディタの補助や型システムの堅牢さがいかに価値あるものかを痛感させられました。型ヒントとデータバリデーションを通じて得られた疑似的な型安全性は、静的型付け言語の持つ本質的な型安全性とエディタのサポートには及びません。この経験から、静的型付け言...",
          "link": "https://zenn.dev/tonbi_attack/articles/0835a5ea9203f1",
          "publishedOn": "2024-01-31T13:27:57.000Z",
          "wordCount": 274,
          "title": "動的型付け言語の限界と静的型付け言語の真価",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vEzP3rNK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%2595%25E7%259A%2584%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E9%2599%2590%25E7%2595%258C%25E3%2581%25A8%25E9%259D%2599%25E7%259A%2584%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E7%259C%259F%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonbiattack%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vEzP3rNK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%2595%25E7%259A%2584%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E9%2599%2590%25E7%2595%258C%25E3%2581%25A8%25E9%259D%2599%25E7%259A%2584%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E7%259C%259F%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonbiattack%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/saldra/articles/8785e45e1db493",
          "author": "Sald ra",
          "description": "はじめに\nllama.cppは実はpythonでも使える。\nhttps://github.com/abetlen/llama-cpp-python\nこれの良いところはpythonアプリに組み込むときに使える点。GPUオフロードにも対応しているのでcuBLASを使ってGPU推論できる。一方で環境変数の問題やpoetryとの相性の悪さがある。\n「llama-cpp-python+cuBLASでGPU推論させる」を目標に、簡易的な備忘録として残しておく。\n今回はUbuntuなので、Windowsは適宜READMEのWindws Notesを見ておくこと。\n\n 事前準備\nなお、nvidia-...",
          "link": "https://zenn.dev/saldra/articles/8785e45e1db493",
          "publishedOn": "2024-01-31T02:55:45.000Z",
          "wordCount": 251,
          "title": "【cuBLAS】llama-cpp-pythonでのGPU推論入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q0HVsiOm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590cuBLAS%25E3%2580%2591llama-cpp-python%25E3%2581%25A7%25E3%2581%25AEGPU%25E6%258E%25A8%25E8%25AB%2596%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sald%2520ra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5MTEyYWU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q0HVsiOm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590cuBLAS%25E3%2580%2591llama-cpp-python%25E3%2581%25A7%25E3%2581%25AEGPU%25E6%258E%25A8%25E8%25AB%2596%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sald%2520ra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5MTEyYWU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/vs_blog/articles/2992bb9df43118",
          "author": "じん",
          "description": "はじめまして。じんと申します。株式会社バニッシュ・スタンダードの Data AI Unit というチームのマネージャーを拝命しております。社名に中黒「・」があることに違和感を感じる方が多いように感じていますが、自然言語処理屋として英語の単語の間には「・」を入れる派なので割と社名に違和感がない勢です。駆け出しの頃には YRP 野比におりました。365日24時間火の灯る街でした。\n\n Disclaimer\n\n記事の概要：本記事は Python で簡潔にアプリケーションを構築可能なフレームワークである Flet の内容を含んでいますが、一方で、本記事の趣旨はむしろ、フロントエンドとはほど遠い分...",
          "link": "https://zenn.dev/vs_blog/articles/2992bb9df43118",
          "publishedOn": "2024-01-31T00:12:09.000Z",
          "wordCount": 338,
          "title": "Flet はいいぞ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LGOuEWvW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Flet%2520%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2584%25E3%2581%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2598%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOTFhMjZiZDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2590%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25BB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMjExYmQyODYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LGOuEWvW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Flet%2520%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2584%25E3%2581%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2598%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOTFhMjZiZDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2590%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25BB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMjExYmQyODYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mopinfish/articles/automating-gis-03",
          "author": "Otsuka Noboru",
          "description": "概要\nヘルシンキ大学地球科学・地理学科の GIS コースの教材であるAutomating GIS Processes 203を読んでいきます。\n\n Lesson3\n\n 講義動画\nhttps://youtu.be/xs_csmGkVVU\n\n Overview\n\nジオコーディングとは、地名や住所を座標に変換するプロセスである。このレッスンでは、Geopandas と geopy を使って住所をジオコーディングする方法を学びます。\nGeopy やその他のジオコーディングライブラリ（geocoder など）は、ウェブサービス（「ジオコーダ」）を使って世界中の住所、都市、国、ランドマークの座標...",
          "link": "https://zenn.dev/mopinfish/articles/automating-gis-03",
          "publishedOn": "2024-01-30T23:11:27.000Z",
          "wordCount": 202,
          "title": "Automating GIS Processes 2023 を読む その３",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PpsVZwjR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Automating%2520GIS%2520Processes%25202023%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PpsVZwjR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Automating%2520GIS%2520Processes%25202023%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hiroga/articles/devcontainer-dockerfile-python",
          "author": "hiroga",
          "description": "TL;DR\n\nDockerfileで構築したPython環境をdevcontainerのFeatureで上書きしてしまい、ModuleNotFoundErrorが発生した\nDev ContainerのFeatureは、VSCodeの拡張機能だけでなく、ランタイムのインストールも行う\nDev Containerを使うときは、ランタイムの設定はDockerfile側かdevcontainer側のどちらかに統一するべき\n\n\n 動機\nWindows環境でPlaywrightを使ってスクレイピングをするにあたって、ローカルを汚さないようにDev Containersを使って開発環境を構築しまし...",
          "link": "https://zenn.dev/hiroga/articles/devcontainer-dockerfile-python",
          "publishedOn": "2024-01-30T22:43:32.000Z",
          "wordCount": 486,
          "title": "devcontainerのためにDockerfileを書くべきか考察",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tS5babWK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:devcontainer%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABDockerfile%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2581%258B%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroga%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfZHF2VHk5OFdpTG1EZ1Q1Ry1jLVNmWjRwaEdCcGdncGVKSjhqUzhzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tS5babWK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:devcontainer%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABDockerfile%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2581%258B%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroga%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfZHF2VHk5OFdpTG1EZ1Q1Ry1jLVNmWjRwaEdCcGdncGVKSjhqUzhzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hiroga/articles/devcontainer-python-postcreatecommand",
          "author": "hiroga",
          "description": "TL;DR\n\nDockerfileで構築したPython環境をdevcontainerのFeatureで上書きしてしまい、ModuleNotFoundErrorが発生した\nDev ContainerのFeatureは、VSCodeの拡張機能だけでなく、ランタイムのインストールも行う\nDev Containerを使うときは、ランタイムの設定はDockerfile側かdevcontainer側のどちらかに統一するべき\n\n\n 動機\nWindows環境でPlaywrightを使ってスクレイピングをするにあたって、ローカルを汚さないようにDev Containersを使って開発環境を構築しまし...",
          "link": "https://zenn.dev/hiroga/articles/devcontainer-python-postcreatecommand",
          "publishedOn": "2024-01-30T22:42:36.000Z",
          "wordCount": 487,
          "title": "devcontainerのためにDockerfileを書くべきか考察",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tS5babWK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:devcontainer%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABDockerfile%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2581%258B%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroga%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfZHF2VHk5OFdpTG1EZ1Q1Ry1jLVNmWjRwaEdCcGdncGVKSjhqUzhzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tS5babWK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:devcontainer%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABDockerfile%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2581%258B%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroga%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfZHF2VHk5OFdpTG1EZ1Q1Ry1jLVNmWjRwaEdCcGdncGVKSjhqUzhzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yumefuku/articles/wsl2-llm-install",
          "author": "ゆめふく",
          "description": "はじめに\nはじめまして、こちら初記事となります（温かい目で見てください）。\n今回の執筆の経緯は以下となります。\n最近のローカルllmの流行りに乗っかろう\n↓\nwindowsで環境構築しようとしたら、なんかインストール周りが面倒 & 管理がしづらい\n↓\nWSL2(ubuntu)に環境構築してみよう\n↓\n手順を残しておきたい\nとなりました。\nすでにいくつかの記事でllmの環境構築手順は紹介されておりましたが、自分なりに行った手順をまとめましたので展開します。\nまた今回は使いませんが、せっかくなのでPyTorchのインストールも行います（CUDA_Toolkitをインストールする際...",
          "link": "https://zenn.dev/yumefuku/articles/wsl2-llm-install",
          "publishedOn": "2024-01-30T16:06:01.000Z",
          "wordCount": 1918,
          "title": "WSL2にCUDA(CUBLAS) + llama-cpp-pythonでローカルllm環境を構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2h_30pnJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25ABCUDA%2528CUBLAS%2529%2520%252B%2520llama-cpp-python%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABllm%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2582%2581%25E3%2581%25B5%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlZmI4YjZmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2h_30pnJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25ABCUDA%2528CUBLAS%2529%2520%252B%2520llama-cpp-python%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABllm%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2582%2581%25E3%2581%25B5%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlZmI4YjZmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/daidai_daitai/articles/35041ed9b84a01",
          "author": "橙。",
          "description": "はじめに\nこの記事は「GIS × Python Tutorial」の関連記事です。\n今回はgeopandasでのデータ分析を行っていきます。pythonを使用する方であればpandasを使用した事がある方が多いかと思いますので、分からない部分はgeopandasドキュメントを見て行けば躓かずに理解できるかと思います。またgeopandasのgeometryはshapelyのgeometryオブジェクトが入力されるので、個別のメソッドはshapelyの公式ドキュメント、あるいは前回のSession3の記事を参考にしてください。\n\n geopandasとは\ngeopandasは、pand...",
          "link": "https://zenn.dev/daidai_daitai/articles/35041ed9b84a01",
          "publishedOn": "2024-01-30T13:55:53.000Z",
          "wordCount": 4219,
          "title": "GIS × Python Tutorial Session4 ~ geopandas 練習編 ~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IQqAFp-2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIS%2520%25C3%2597%2520Python%2520Tutorial%2520Session4%2520%7E%2520geopandas%2520%25E7%25B7%25B4%25E7%25BF%2592%25E7%25B7%25A8%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IQqAFp-2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIS%2520%25C3%2597%2520Python%2520Tutorial%2520Session4%2520%7E%2520geopandas%2520%25E7%25B7%25B4%25E7%25BF%2592%25E7%25B7%25A8%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nondescript/articles/11e750f159e1d2",
          "author": "素人の戯言",
          "description": "TL;DR\n\n起動コマンドに--user-data-dir=\"フォルダのパス\"を付与して起動(管理者権限でVSCodeを起動)\n\n\n 内容\nユーザーインストーラー版でインストールした場合、ショートカットで「管理者権限としてプログラムを実行する」にチェックするだけでは不十分で、ユーザーデータの保存フォルダパスを明示的に指定する必要がある。\nこれについては以下の記事にあるLinuxと同等の効果を発揮する。\n\nただし、なぜこのオプションで管理者権限で実行できるようになるかという理由については、明確に仕様として記載されているドキュメントは見つけられなかった。\nまたフォルダはどこでも良いようだ...",
          "link": "https://zenn.dev/nondescript/articles/11e750f159e1d2",
          "publishedOn": "2024-01-30T13:50:56.000Z",
          "wordCount": 203,
          "title": "WindowsのVSCode(ユーザーインストーラー版)で管理者権限でデバッグする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AB8M4pQ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25AEVSCode%2528%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E7%2589%2588%2529%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E8%2580%2585%25E6%25A8%25A9%25E9%2599%2590%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AB8M4pQ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25AEVSCode%2528%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E7%2589%2588%2529%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E8%2580%2585%25E6%25A8%25A9%25E9%2599%2590%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/eito_blog/articles/2e353b96a42494",
          "author": "エイト",
          "description": "DeepL APIを利用することで、英文を翻訳するプログラムを作成することができます。\n本記事では上記プログラム作成のために必要な下記の情報を取得する手順について解説していきます。\n\n認証キー\n\n\n APIページにアクセス\n添付URLにアクセスし、「無料で登録する」をクリックし、アカウントを作成してください。。\nhttps://www.deepl.com/ja/pro-api?cta=header-pro-api/\n\n\n 認証キーを取得する\nアカウントを管理するをクリックしてください。\n\nアカウントタブをクリックしてください。\n\nDeepL APIで使用する認証キーから認証キーを取得して...",
          "link": "https://zenn.dev/eito_blog/articles/2e353b96a42494",
          "publishedOn": "2024-01-30T13:35:47.000Z",
          "wordCount": 132,
          "title": "【DeepL API】DeepL APIを取得する手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9JZz78dr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DeepL%2520API%25E3%2580%2591DeepL%2520API%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9JZz78dr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DeepL%2520API%25E3%2580%2591DeepL%2520API%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shibata/articles/39722d3c6ea3a8",
          "author": "Shibata",
          "description": "概要\nORMを使ったレコードの操作は便利ですが、特に更新操作時に気をつけないとスパゲッティコードの種になりがちと思ったことと、実際書かれがちなコードを改善していこうと思います。\n\n 実装\n下記は簡単な例です。\n<User(name='Yamada Taro', age='40')>になるかと思います。\nfrom sqlalchemy import Column, Integer, Sequence, String, create_engine\nfrom sqlalchemy.orm import declarative_base, sessionmaker\n\nengine...",
          "link": "https://zenn.dev/shibata/articles/39722d3c6ea3a8",
          "publishedOn": "2024-01-30T12:13:54.000Z",
          "wordCount": 2184,
          "title": "Pythonでの実務でよくありそうな内容のリファクタを検討してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DrbW8Wq9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E5%258B%2599%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E3%2581%2582%25E3%2582%258A%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AA%25E5%2586%2585%25E5%25AE%25B9%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%258E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shibata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkMzZkZWRiNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DrbW8Wq9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E5%258B%2599%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E3%2581%2582%25E3%2582%258A%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AA%25E5%2586%2585%25E5%25AE%25B9%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%258E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shibata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkMzZkZWRiNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/oyama_llc/articles/5874fc75eab272",
          "author": "Oyama LLC",
          "description": "GIFアニメーションファイルには、複数の画像とそれぞれの画像の表示時間などのメタデータが含まれる。GIFアニメーションを編集するためには、そのファイルに含まれるすべての画像を適切に処理する必要がある。PILでの処理方法を以下に紹介する。\n\n 対象ファイルがGIFアニメーションか判別する\ndef is_animated_gif(path: str) -> bool:\n    try:\n        with Image.open(path) as img:\n            if img.format != 'GIF':\n                return Fals...",
          "link": "https://zenn.dev/oyama_llc/articles/5874fc75eab272",
          "publishedOn": "2024-01-30T05:15:51.000Z",
          "wordCount": 1070,
          "title": "GIFアニメーションをPythonで処理する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DEAQCQ_x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIF%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592Python%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Oyama%2520LLC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWk1U0VuTXMyNlpqQ1F3MmF1enRxMk5rYWJLcVJ6aC1FOU1COEV4RHp1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DEAQCQ_x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIF%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592Python%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Oyama%2520LLC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWk1U0VuTXMyNlpqQ1F3MmF1enRxMk5rYWJLcVJ6aC1FOU1COEV4RHp1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/open8/articles/python-special-method",
          "author": "Kento Toriumi",
          "description": "__〇〇__メソッドの正体 is「特殊メソッド」\nPython で開発する際、__init__ をはじめとする __ (アンダースコア*2) で囲まれたメソッドを目にする機会があると思います。\nこれらのメソッドは「特殊メソッド」と呼ばれ、Python では以下のように定義されています。\n\nspecial method\n(特殊メソッド) ある型に特定の操作、例えば加算をするために Python から暗黙に呼び出されるメソッド。この種類のメソッドは、メソッド名の最初と最後にアンダースコア2つがついています。\n\nつまり、独自で定義したクラス内でこれら特殊メソッドをオーバーライドすることで、...",
          "link": "https://zenn.dev/open8/articles/python-special-method",
          "publishedOn": "2024-01-30T04:17:26.000Z",
          "wordCount": 2889,
          "title": "【Python】__〇〇__ メソッドの正体",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lP-1Y762--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591__%25E3%2580%2587%25E3%2580%2587__%2520%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E6%25AD%25A3%25E4%25BD%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kento%2520Toriumi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNzgwOTc5N2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:OPEN8%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BIaVk1YjZmTmVNSFM2aWdFeWpZc0tHNm0wQy04dGROdURwUnVtS0E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lP-1Y762--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591__%25E3%2580%2587%25E3%2580%2587__%2520%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E6%25AD%25A3%25E4%25BD%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kento%2520Toriumi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNzgwOTc5N2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:OPEN8%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BIaVk1YjZmTmVNSFM2aWdFeWpZc0tHNm0wQy04dGROdURwUnVtS0E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/bonsai_engineer/articles/76f1935c055f8d",
          "author": "盆栽エンジニア",
          "description": "概要\n勉強としてミニPC3台でkubernetesクラスターを構築します。メモ代わりに記事書くので雑ですみません。\n\n 構成\n物理的なもので用意したのはミニPC3台とネットワークスイッチとWiFiルータです。\n\nKubernetesの構成はマスターノード1台とワーカーノード2台です。後々NASをアタッチしたり、マスターノードを冗長構成にしたいなと考えてます。\n\nCNIはFlannelを選択しました。\n\n 手順\n\n 1. kubeadmのインストール\nkubeadmなどのコマンドはkubernetesのドキュメントを参考にしインストールしました。\n\n 2. スワップ機能をOFFにする\n...",
          "link": "https://zenn.dev/bonsai_engineer/articles/76f1935c055f8d",
          "publishedOn": "2024-01-30T03:13:41.000Z",
          "wordCount": 850,
          "title": "kubeadmでkubernetesクラスターの自作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f9sAN_9S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kubeadm%25E3%2581%25A7kubernetes%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E8%2587%25AA%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f9sAN_9S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kubeadm%25E3%2581%25A7kubernetes%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E8%2587%25AA%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mopinfish/articles/automating-gis-02",
          "author": "Otsuka Noboru",
          "description": "概要\nヘルシンキ大学地球科学・地理学科の GIS コースの教材であるAutomating GIS Processes 203を読んでいきます。\n\n Lesson2\n\n 講義動画\nhttps://youtu.be/DzkEbhQEbpY\n\n Overview\n\nこのレッスンでは、Geopandasを使ってPythonで空間データを扱う方法を学びます。Geopandasは、表データを分析するPandasと、ジオメトリを扱うshapelyのパワーを組み合わせたものです。\n空間データをファイルから読み書きする方法、ジオメトリを操作する方法、異なる座標参照系（CRS）間でデータを変換する方法を...",
          "link": "https://zenn.dev/mopinfish/articles/automating-gis-02",
          "publishedOn": "2024-01-29T22:49:42.000Z",
          "wordCount": 406,
          "title": "Automating GIS Processes 2023 を読む その２",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--isgTK3lX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Automating%2520GIS%2520Processes%25202023%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--isgTK3lX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Automating%2520GIS%2520Processes%25202023%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/ca7190ce158512",
          "author": "JboyHashimoto",
          "description": "どれだけ種類があるんですか?\n変数の名前のつけ方と記号の使い方でよく悩みます🫠\nどれが良いのだろうと考えます。jQueryとかだと、camelCaseが多かった気がします...\n.envの定数を書くときは、UPPERCASEを使ってましたね。UPPER_SNAKE_CASEを使ったこともありましたね。基本大文字な気がする。\nkebab-caseはVue2.6を使っていたときに、本で書いてあったので、これが良いパターンなのかなと思って使ってました。\n変数書くときは、普段はlowercaseが多いですね。\n\n\n\n命名規則\n説明\n用途\n\n\n\n\nキャメルケース (camelCase)\n最初の...",
          "link": "https://zenn.dev/joo_hashi/articles/ca7190ce158512",
          "publishedOn": "2024-01-29T14:43:06.000Z",
          "wordCount": 509,
          "title": "変数の命名規則にはルールがあるらしい?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RMqLax0C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E5%2591%25BD%25E5%2590%258D%25E8%25A6%258F%25E5%2589%2587%25E3%2581%25AB%25E3%2581%25AF%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RMqLax0C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E5%2591%25BD%25E5%2590%258D%25E8%25A6%258F%25E5%2589%2587%25E3%2581%25AB%25E3%2581%25AF%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ts0/articles/4285fffdf38a8b",
          "author": "ts",
          "description": "前言\nJupyter Notebookで仮想環境venvを使う方法を記述します。（2024/01/29)\n\n 環境\nWindows 11\npython 3.11.5\n\n 利用手順\n\n プロジェクトディレクトリの作成\nコマンドプロンプトを開き、ディレクトリをプロジェクト直下に移動します。\n[project_dir]はプロジェクトのフォルダのパスです。\ncd [project dir]\n\n 仮想環境の作成\n以下のコマンドを実行し、仮想環境を作成します。[env_name]は仮想環境名であり、任意の名前を設定できます。\npython3 -m venv [env_name]\n\n 仮想環境の有...",
          "link": "https://zenn.dev/ts0/articles/4285fffdf38a8b",
          "publishedOn": "2024-01-29T13:47:52.000Z",
          "wordCount": 195,
          "title": "Jupyter Notebookで仮想環境venvを使う（2024/01/29)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ha-DD1Fe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2520Notebook%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583venv%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25EF%25BC%25882024%252F01%252F29%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ts%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0UxTUJfTWdFcGRRMUxhbWNkNTQ4OWFId3JIMS1KSU9NbkVaNHZYNkxiPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ha-DD1Fe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2520Notebook%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583venv%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25EF%25BC%25882024%252F01%252F29%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ts%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0UxTUJfTWdFcGRRMUxhbWNkNTQ4OWFId3JIMS1KSU9NbkVaNHZYNkxiPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/gsy0911/articles/80a48e0cee92c7",
          "author": "gsy0911",
          "description": "はじめに\nCognitoの全ユーザーの情報をまとめて取得したいときはありませんか？ネットで検索するとちらほらと出てきますが、Generatorで実装したものがなかったので備忘録的に残しておきます。\n\n コード\nコードは以下の通りです。\nfrom typing import Generator, List\nimport boto3\n\nclient = boto3.client('cognito-idp')\n\n\ndef cognito_list_all_users(user_pool_id: str) -> Generator[List[dict], None, None]:\n  ...",
          "link": "https://zenn.dev/gsy0911/articles/80a48e0cee92c7",
          "publishedOn": "2024-01-29T13:06:10.000Z",
          "wordCount": 1333,
          "title": "Cognitoの全ユーザーを取得するPythonスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gc8x7SKI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cognito%25E3%2581%25AE%25E5%2585%25A8%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gsy0911%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pYb1RkaTMzQ3BNcEc3eDVOSXE2TVpabS1SRF8tQk1Mc29LU0VYRmc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gc8x7SKI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cognito%25E3%2581%25AE%25E5%2585%25A8%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gsy0911%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pYb1RkaTMzQ3BNcEc3eDVOSXE2TVpabS1SRF8tQk1Mc29LU0VYRmc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yottabyte/articles/ab9d62b00cf38e",
          "author": "Raio｜高校生エンジニア",
          "description": "アジャイルプラクティスガイドブック チームで成果を出すための開発技術の実践知\n\n\nチーム・組織にプラクティスを導入し、根付かせるために！\n116の手法を一冊にまとめた“実践”の手引き\nチームでのアジャイル開発には、開発技術やツールなどの「技術プラクティス」の活用が重要です。\nプラクティスはそれぞれの目的や役割を意識することで効果を発揮します。しかし、目まぐるしく状況が変化する開発では、当初の目的を忘れて、プラクティスに取り組むこと自体が目的化してしまうチームも少なくありません。\n本書は、チーム・組織でアジャイル開発に取り組んできた著者が、プラクティスの効果的な選択・活用のしかたについ...",
          "link": "https://zenn.dev/yottabyte/articles/ab9d62b00cf38e",
          "publishedOn": "2024-01-29T12:53:56.000Z",
          "wordCount": 2174,
          "title": "【2024年】ITエンジニア本大賞まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZvUwmkQq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B4%25E3%2580%2591IT%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E6%259C%25AC%25E5%25A4%25A7%25E8%25B3%259E%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjYWMwZjI3ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZvUwmkQq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B4%25E3%2580%2591IT%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E6%259C%25AC%25E5%25A4%25A7%25E8%25B3%259E%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjYWMwZjI3ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yottabyte/articles/4c044f66a5af35",
          "author": "Raio｜高校生エンジニア",
          "description": "世界一流エンジニアの思考法\n\n\nnoteでも大人気！　米マイクロソフトのエンジニアが放つ最前線の仕事術\n頭が先、手は後。一流の仕事のカギは順序にある。\n――楠木建（経営学者）\n知的生産へのリスペクトがイノベーションの源泉だ。\n――落合陽一（メディアアーティスト）\n「怠惰であれ！」「早く失敗せよ」――\n米マイクロソフトの現役ソフトウェアエンジニアの著者が、超巨大クラウドの開発の最前線で学んだ思考法とは？\n“三流プログラマ”でもできた〈生産性爆上がり〉の技術！\n・試行錯誤は「悪」。“基礎の理解”に時間をかける\n・より少ない時間で価値を最大化する考え方とは？\n・「準備」と「持ち帰り」をやめ...",
          "link": "https://zenn.dev/yottabyte/articles/4c044f66a5af35",
          "publishedOn": "2024-01-29T11:13:14.000Z",
          "wordCount": 224,
          "title": "【2024年1月】エンジニアなら読むべき技術書TOP5",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--td27Rcbs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B41%25E6%259C%2588%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AA%25E3%2582%2589%25E8%25AA%25AD%25E3%2582%2580%25E3%2581%25B9%25E3%2581%258D%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8TOP5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjYWMwZjI3ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--td27Rcbs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B41%25E6%259C%2588%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AA%25E3%2582%2589%25E8%25AA%25AD%25E3%2582%2580%25E3%2581%25B9%25E3%2581%258D%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8TOP5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjYWMwZjI3ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hikaelis/articles/34db1f3d8fa2d6",
          "author": "hikaelis",
          "description": "アルゴリズムの勉強のために以下の本を読んだので、読んでいた時のメモ\n上級編\n中級編は前記事\nhttps://www.kadokawa.co.jp/product/321904000758/\n\n 再帰関数と全探索\n関数の中で同じ関数を呼び出す関数\n終了条件必ずつける\nN重のfor loop→コード書くのが難しい\n→同じ処理(つまり再帰関数)をfor i in Nすればいいよね。\n\n ナップザック問題\n重さWの中で品物の価値の和を最大化する問題\n品物を選ぶか選ばないかを0,1で表して0と1の数列を作ると、2^N乗通りの計算が必要となる\nN重のfor文はNが確定してないと書けない\n→再帰関数　...",
          "link": "https://zenn.dev/hikaelis/articles/34db1f3d8fa2d6",
          "publishedOn": "2024-01-29T10:41:10.000Z",
          "wordCount": 217,
          "title": "【まとめ】アルゴリズム的思考力が身につく！Atcoder ②",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1l2fKDyW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E7%259A%2584%25E6%2580%259D%25E8%2580%2583%25E5%258A%259B%25E3%2581%258C%25E8%25BA%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%258F%25EF%25BC%2581Atcoder%2520%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaelis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmFlMWI5ZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1l2fKDyW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E7%259A%2584%25E6%2580%259D%25E8%2580%2583%25E5%258A%259B%25E3%2581%258C%25E8%25BA%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%258F%25EF%25BC%2581Atcoder%2520%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaelis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmFlMWI5ZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hikaelis/articles/69c75ca3d425f9",
          "author": "hikaelis",
          "description": "アルゴリズムの勉強のために以下の本を読んだので、読んでいた時のメモ\n中級編\nhttps://www.kadokawa.co.jp/product/321904000758/\n\n バケット・連想配列\n\n バケット\nnum[v]← 配列Aの中の値のvの個数　vは正の整数に限られる！\n配列Aから直接数えてもいいけど、setにAの値入れて行って要素数数えると楽　計算量O(1)\n\n 連想配列\nnum[s] ←文字列sが何個あるか\n添え字が文字列でも使える便利\nPython3ではcollections.defaultdict型を使う\n(一般的にはdict使うけど、競技プログラミングでは存在しないキー...",
          "link": "https://zenn.dev/hikaelis/articles/69c75ca3d425f9",
          "publishedOn": "2024-01-29T09:55:25.000Z",
          "wordCount": 183,
          "title": "【まとめ】アルゴリズム的思考力が身につく！Atcoder ①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yTcVaSdr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E7%259A%2584%25E6%2580%259D%25E8%2580%2583%25E5%258A%259B%25E3%2581%258C%25E8%25BA%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%258F%25EF%25BC%2581Atcoder%2520%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaelis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmFlMWI5ZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yTcVaSdr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E7%259A%2584%25E6%2580%259D%25E8%2580%2583%25E5%258A%259B%25E3%2581%258C%25E8%25BA%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%258F%25EF%25BC%2581Atcoder%2520%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaelis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmFlMWI5ZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/muetaro/articles/django_meetup_tokyo_12",
          "author": "むえたろう",
          "description": "Django Meetup Tokyo #12 に参加しました。\nすごく良かったので感想を書こうと思います。\n\n 私とDjango\n\n2017~2018（とあるスタートアップA）\n\n社内の広告配信システム数値管理システム（4名のうちの一人）\n\n（先輩がdjangoマニアでmanage.pyを魔改造したり…）\n\n\nしかし私のメインの担当は某オンラインクレーンゲーム(php & node.js)でしたので、そちらを優先する以上チケット消費が雑で、いつもみんなに迷惑をかけていました。（えー！なるっちの担当箇所がバグだらけ！？）\n\n\n2019/8 ~ 2022/3（とあるスタートアップB...",
          "link": "https://zenn.dev/muetaro/articles/django_meetup_tokyo_12",
          "publishedOn": "2024-01-29T08:20:33.000Z",
          "wordCount": 253,
          "title": "Django Meetup Tokyo #12",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bLMjtkZh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Django%2520Meetup%2520Tokyo%2520%252312%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2581%2588%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1N2Y5NTE4OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bLMjtkZh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Django%2520Meetup%2520Tokyo%2520%252312%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2581%2588%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1N2Y5NTE4OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/halmet7000/articles/6d3d6e3adddc83",
          "author": "HAL",
          "description": "はじめに\n前回、sympyを用いて固定端の片持ち梁を解析しました。\n（https://zenn.dev/halmet7000/articles/000fe097378382）\n今回はそれを一般化できたので共有します。\n時間がなかったため記事内容はカスです。すみません。\n過去問の答え合わせやsympyの練習にどうぞ。\ncolab:https://colab.research.google.com/drive/1LiBu57fFNymdoTkepuPB8pNtS_BBISqx?usp=sharing\n\n 入力と出力の例\n![]\nこれのSFD,BMD,たわみ角,たわみのグラフが正しく出力さ...",
          "link": "https://zenn.dev/halmet7000/articles/6d3d6e3adddc83",
          "publishedOn": "2024-01-29T07:20:27.000Z",
          "wordCount": 6902,
          "title": "材料力学の梁問題のシミュレータを作った（完全版）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---3OBTOcn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%2590%25E6%2596%2599%25E5%258A%259B%25E5%25AD%25A6%25E3%2581%25AE%25E6%25A2%2581%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2588%25E5%25AE%258C%25E5%2585%25A8%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAL%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkZmQzYmRmZTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---3OBTOcn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%2590%25E6%2596%2599%25E5%258A%259B%25E5%25AD%25A6%25E3%2581%25AE%25E6%25A2%2581%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2588%25E5%25AE%258C%25E5%2585%25A8%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAL%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkZmQzYmRmZTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/spacemarket/articles/042e4d977103fa",
          "author": "dumbled0re",
          "description": "はじめに\nこんにちは。スペースマーケットでインターンしています、dumbled0reです。\n一ヶ月前に大学を卒業して韓国から帰って来ましたが、韓国はマイナス10℃とかの世界なので日本は暖かいなと感じています。韓国は寒い。\n僕は普段からYoutubeで動画を見ていますが、動画が長いと見たい箇所に辿り着くまで少しずつ飛ばしながら動画を見ていることがあります。これ結構めんどくさいなと思っています。\nなので、LangChainを用いて〇〇については動画の何分くらいからなのか尋ねたら時間を教えてくれたり、要約してくれるなどの能力をGPTに与えてみました。\n\n 事前準備\n\n OpenAI API...",
          "link": "https://zenn.dev/spacemarket/articles/042e4d977103fa",
          "publishedOn": "2024-01-29T06:10:04.000Z",
          "wordCount": 3970,
          "title": "【LangChain】GPTにYoutube動画を扱える能力を注入",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KuvShRre--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591GPT%25E3%2581%25ABYoutube%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E8%2583%25BD%25E5%258A%259B%25E3%2582%2592%25E6%25B3%25A8%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:dumbled0re%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MTY4OGExZGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KuvShRre--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591GPT%25E3%2581%25ABYoutube%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E8%2583%25BD%25E5%258A%259B%25E3%2582%2592%25E6%25B3%25A8%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:dumbled0re%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MTY4OGExZGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/uchi1203/articles/ac5f70976b9dea",
          "author": "uchi1203",
          "description": "init.py ってなにもの\nmyDir\n - __init_.py\n - sample.py\nmain.py\nみたいにいるファイル、何者なのか\n\n Pythonにおける定義（イメージ）\nモジュール => pythonのファイル\nパッケージ => ディレクトリとその中身\nmyDir\n - __init_.py\n - sample.py\nmain.py\nこの時、myDirはパッケージで、sample.pyはモジュール\n__init__.pyはこのパッケージに何があるかをまとめる場所\n（もともとは、単一モジュールのパッケージを呼び出す際に短縮する方法だった？）\nimport ...",
          "link": "https://zenn.dev/uchi1203/articles/ac5f70976b9dea",
          "publishedOn": "2024-01-29T05:28:29.000Z",
          "wordCount": 229,
          "title": "Pythonの__init__についてメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--69S1K48X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE__init__%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uchi1203%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5MmNlNmQxZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--69S1K48X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE__init__%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uchi1203%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5MmNlNmQxZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/topo/articles/5ddedb7ea81130",
          "author": "ToPo",
          "description": "はじめに\n\n\nsimple-text-generative-AIというローカルLLM（Large Langage Model）の初心者向けGUIアプリを作成しました。\nローカルLLMとの基本的な会話やファインチューニングを誰でも行えるようにすることを目指しています。\nこの記事では、前回の記事の続きで、simple-text-generative-AIによるローカルLLMとの会話までの使い方を説明します。\n\n\n 前回の記事\nこの記事では、simple-text-generative-AIの概要と導入方法をまとめています。\nhttps://zenn.dev/topo/articles/7...",
          "link": "https://zenn.dev/topo/articles/5ddedb7ea81130",
          "publishedOn": "2024-01-28T14:29:50.000Z",
          "wordCount": 282,
          "title": "ローカルLLM向けのGUIアプリを作成した 2【会話編】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yOPjr5EP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AEGUI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25202%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ToPo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3OWM3OWMxYjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yOPjr5EP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AEGUI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25202%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ToPo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3OWM3OWMxYjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/iwatagumi/articles/0db12ddd2374be",
          "author": "kirigaya",
          "description": "Rustの勉強1日目\nは〜？と思ったところのメモ\n\n 文字列の違い\npythonの場合\ntext1 = \"Hello\"\ntext2 = text1\nprint(text1)\nprint(text2)\nRustの場合\nfn main(){\nlet s1 = String::from(\"Hello\");\nlet s2 = s1;\nprintln!(\"{}\", s1)\nprintln!(\"{}\", s2)\n}\nこの方法ではエラーになります...\n正しくは\nfn main() {\n    let x = \"Hello\";\n    let y = x;\n    println!(\"{}\", x);...",
          "link": "https://zenn.dev/iwatagumi/articles/0db12ddd2374be",
          "publishedOn": "2024-01-28T10:00:05.000Z",
          "wordCount": 543,
          "title": "Rustの勉強",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BlkLnpQv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Rust%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kirigaya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MjI0YmNkMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%25B2%25A9%25E7%2594%25B0%25E7%25B5%2584%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmNGYxNzkwNDMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BlkLnpQv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Rust%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kirigaya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MjI0YmNkMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%25B2%25A9%25E7%2594%25B0%25E7%25B5%2584%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmNGYxNzkwNDMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/1df3fc4658d1dd",
          "author": "しろ",
          "description": "pythonの環境を共有する際にrequirements.txtを使ったやり方にtorchを含む場合\nそのまま自分の環境をpip freeze > requirements.txtすると\ntorch==2.1.2+cu118のようにバージョンとそれ以外のものが含まれたものが記述されます。\nこのままインストールするとエラーが出てしまいます。\nそれを回避するために出力したrequirements.txtを編集します。\n出力したrequirements.txtにはほかにもライブラリが含まれますが省いています。\n\nrequirements.txt　編集前\ntorch==2.1.2+cu11...",
          "link": "https://zenn.dev/shiro_toy_box/articles/1df3fc4658d1dd",
          "publishedOn": "2024-01-28T08:18:05.000Z",
          "wordCount": 110,
          "title": "requirements.txtのちょっとしたテクニック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j1lBbxNZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:requirements.txt%25E3%2581%25AE%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j1lBbxNZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:requirements.txt%25E3%2581%25AE%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/husty/articles/2a08fdde40aab3",
          "author": "Takumi Yamashita",
          "description": "はじめに\n突然ですが、C++からPythonを使いたいことはありませんか？\nたとえば組み込み系のモジュール開発やPoCで部分的にAIを使ってみたいとき。深層学習のフレームワークによってはC言語のAPIを提供していたり、ONNXなどモデル自体が多言語対応のものもありますが、そうやって、なんとかしてPythonを避けていませんか？\nPythonからCのモジュールを呼び出すのはよくあるけれど、その逆はできないと思っていませんか？\nこれ実は、公式なやり方でできます。\nhttps://docs.python.org/3/extending/embedding.html\nこちらのページ内のサンプ...",
          "link": "https://zenn.dev/husty/articles/2a08fdde40aab3",
          "publishedOn": "2024-01-28T06:17:41.000Z",
          "wordCount": 611,
          "title": "C++からPythonを操る黒魔術",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UuTqCJQk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:C%252B%252B%25E3%2581%258B%25E3%2582%2589Python%25E3%2582%2592%25E6%2593%258D%25E3%2582%258B%25E9%25BB%2592%25E9%25AD%2594%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Yamashita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTc2d2ZGdzdianFISFJDR3BZMDlnOElELUM1dzZfSGN3WkVXbzdZZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UuTqCJQk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:C%252B%252B%25E3%2581%258B%25E3%2582%2589Python%25E3%2582%2592%25E6%2593%258D%25E3%2582%258B%25E9%25BB%2592%25E9%25AD%2594%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Yamashita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTc2d2ZGdzdianFISFJDR3BZMDlnOElELUM1dzZfSGN3WkVXbzdZZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/killinsun/articles/d7caf4c5334e96",
          "author": "首無しキリン",
          "description": "LINE Messasging API を活用して LINE Bot を作るとき、ネットでドキュメントや作例をみると「チャネルアクセストークン（長期）」と「チャネルシークレット」を使って構築する例が多くあります。\n私も今までその構成で BOT を開発していたのですが、今は 「ChannelAccessToken v2.1」なるものがあり、現在の推奨として公式ドキュメントに案内されています。\nただ、公式ドキュメントや公式SDKの情報だけだと初学者にはハマりどころや情報不足感も否めないため、備忘録として私なりの管理方法を記載します。\n\n 前提\n\nLINE Developers Console...",
          "link": "https://zenn.dev/killinsun/articles/d7caf4c5334e96",
          "publishedOn": "2024-01-28T05:14:13.000Z",
          "wordCount": 2199,
          "title": "[Python] ChannelAccessToken v2.1 で LINE BOTを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8pkcwt7T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520ChannelAccessToken%2520v2.1%2520%25E3%2581%25A7%2520LINE%2520BOT%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A6%2596%25E7%2584%25A1%25E3%2581%2597%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmYTM3MDU1NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8pkcwt7T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520ChannelAccessToken%2520v2.1%2520%25E3%2581%25A7%2520LINE%2520BOT%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A6%2596%25E7%2584%25A1%25E3%2581%2597%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmYTM3MDU1NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nondescript/articles/cabb2a25be14ec",
          "author": "素人の戯言",
          "description": "概要\n\nレート制限のあるステージングhttps://acme-staging-v02.api.letsencrypt.orgや本番https://acme-v02.api.letsencrypt.org/directoryを実際に使わずに無制限でLet's Encryptの証明書を疑似的に自己証明書で取得するローカル検証環境\nhosts修正とFlaskサーバー起動の簡易操作のみで、step-ca、step-cli不使用\n\n\n TL;DR\n\nダミーのレスポンス処理をFlask(SSL)で実装\n\n\n 事前準備\n前提：Docker版Certbot(certbot/certbot:amd64...",
          "link": "https://zenn.dev/nondescript/articles/cabb2a25be14ec",
          "publishedOn": "2024-01-28T04:18:23.000Z",
          "wordCount": 3452,
          "title": "Certbot用ACMEサーバーをFlaskで偽装し、DNS-01で自己証明書を取得",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kiOuOTru--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Certbot%25E7%2594%25A8ACME%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592Flask%25E3%2581%25A7%25E5%2581%25BD%25E8%25A3%2585%25E3%2581%2597%25E3%2580%2581DNS-01%25E3%2581%25A7%25E8%2587%25AA%25E5%25B7%25B1%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kiOuOTru--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Certbot%25E7%2594%25A8ACME%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592Flask%25E3%2581%25A7%25E5%2581%25BD%25E8%25A3%2585%25E3%2581%2597%25E3%2580%2581DNS-01%25E3%2581%25A7%25E8%2587%25AA%25E5%25B7%25B1%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/massu_devix/articles/a016774865d647",
          "author": "mas_dx",
          "description": "はじめに\nprefect の構成要素について理解します。\nここでの構成要素とは、prefect をローカル環境で動かすための要素を指します。\n（そのため、SaaS である prefect cloud については言及しません。）\nこの記事では、以下の要素について説明しています。\n\nprefect-server\ndatabase\n\n\n prefect とは\nprefect とは、手軽にデータ処理 pipeline を構築することができるワークフロー管理ツールです。\nhttps://docs.prefect.io/latest/\n\n prefect のインストール\n公式ドキュメントを参照し...",
          "link": "https://zenn.dev/massu_devix/articles/a016774865d647",
          "publishedOn": "2024-01-28T04:07:14.000Z",
          "wordCount": 479,
          "title": "prefect をローカルで動かすための構成要素を理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mmhe74_---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:prefect%2520%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%25A7%258B%25E6%2588%2590%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mas_dx%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxMDc1MzMyYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mmhe74_---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:prefect%2520%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%25A7%258B%25E6%2588%2590%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mas_dx%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxMDc1MzMyYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/keita_f/articles/4493e3cfd76aec",
          "author": "KITFJN",
          "description": "開発環境の設定(docker)\ndockerの設定をしていきます。\n\nbackend/Dockerfile\nFROM python:latest\nWORKDIR /backend\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONBUFFERED 1\n\n# pipを使ってpoetryをインストール\nRUN pip install poetry\n\n# poetryの定義ファイルをコピー (存在する場合)\nCOPY pyproject.toml* poetry.lock* ./\n\n# poetryでライブラリをインストール (pyproject.tomlが既...",
          "link": "https://zenn.dev/keita_f/articles/4493e3cfd76aec",
          "publishedOn": "2024-01-27T23:30:00.000Z",
          "wordCount": 11168,
          "title": "FastAPIアプリケーション〜環境設定からログイン処理まで〜",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yQvYZxl4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2580%259C%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%258B%25E3%2582%2589%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25BE%25E3%2581%25A7%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KITFJN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNDYxZWNjNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yQvYZxl4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2580%259C%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%258B%25E3%2582%2589%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25BE%25E3%2581%25A7%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KITFJN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNDYxZWNjNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/575c58ed6b57de",
          "author": "たきろぐ",
          "description": "背景\n趣味でジョギング (実態はジョギングとは言えない速度…) をやるのですが、ある地点からスタートして戻ってくるコースを考える必要があります。普段は固定のコースを走るのですが、たまには別のルートを行かないと飽きてしまいます。なので、スタートを固定して、いくつか候補が欲しくなります。このような巡回ルート探しを手伝ってくれるアプリはいろいろ世の中にあり、例えば「Trail Router」などがあります。\nhttps://trailrouter.com/\nこの記事は、似た計算をやってみようと思って書きました。\n\n 考えたこと\n実装した計算の考え方を先に説明します。\n\n 周回ルートの設定\n...",
          "link": "https://zenn.dev/takilog/articles/575c58ed6b57de",
          "publishedOn": "2024-01-27T13:57:07.000Z",
          "wordCount": 1200,
          "title": "Mapbox Directions APIを使って一周する経路を作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fyj2MOnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mapbox%2520Directions%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E4%25B8%2580%25E5%2591%25A8%25E3%2581%2599%25E3%2582%258B%25E7%25B5%258C%25E8%25B7%25AF%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fyj2MOnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mapbox%2520Directions%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E4%25B8%2580%25E5%2591%25A8%25E3%2581%2599%25E3%2582%258B%25E7%25B5%258C%25E8%25B7%25AF%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shibainu0007/articles/1feea9ddf5cd6f",
          "author": "しばいぬ",
          "description": "イントロダクション\ngBizINFO（ジービズインフォ）は、「世界最先端IT国家創造宣言」に基づいて運用される政府の情報提供サイトです。約400万の国内法人情報が掲載されており、法人番号、法人名、本社所在地の基本情報に加え、府省との契約情報や表彰情報など、政府が公開する様々な法人活動情報を一括検索し、閲覧できます。\n　gBizINFOの情報がAPIを通じて自由に活用できることにより、取引先の最新の活動情報を社内イントラネットに取り込むなど、ビジネスにおいて多様な使い方が可能となります。\n\n 今回のゴール\n本ブログ記事では、国税庁法人番号公表サイトから入手可能な法人データとgBizIN...",
          "link": "https://zenn.dev/shibainu0007/articles/1feea9ddf5cd6f",
          "publishedOn": "2024-01-27T12:00:00.000Z",
          "wordCount": 1076,
          "title": "【python】gBizINFO APIで企業分析が捗る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ytEfhhxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591gBizINFO%2520API%25E3%2581%25A7%25E4%25BC%2581%25E6%25A5%25AD%25E5%2588%2586%25E6%259E%2590%25E3%2581%258C%25E6%258D%2597%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%25E3%2581%2584%25E3%2581%25AC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFRlODlGRVJoWnFjMnc5bEtTYzRkZVQtTWdLekxtc1N4am9SUWI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ytEfhhxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591gBizINFO%2520API%25E3%2581%25A7%25E4%25BC%2581%25E6%25A5%25AD%25E5%2588%2586%25E6%259E%2590%25E3%2581%258C%25E6%258D%2597%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%25E3%2581%2584%25E3%2581%25AC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFRlODlGRVJoWnFjMnc5bEtTYzRkZVQtTWdLekxtc1N4am9SUWI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hanata/articles/1981872b5f4363",
          "author": "hanata",
          "description": "polarsでは、pl.whenを用いることで条件分岐によるカラム生成を行うことができる。SQLのcase when文に相当するものである。\n特定のカラムの条件に応じて、新たに文字列型のカラムを生成するケースにおいて、polarsのversionの違いでハマったことがあったので、備忘録として残しておく。\nまずは polars==0.18.3 の場合。\n以下のように書くことで、文字列の値を持つ colc が生成される。\nimport polars as pl\n\ndf = pl.DataFrame({\n    'cola': [1, 2, 2, 3]\n    , 'colb': [4, 5,...",
          "link": "https://zenn.dev/hanata/articles/1981872b5f4363",
          "publishedOn": "2024-01-27T10:26:09.000Z",
          "wordCount": 762,
          "title": "【Polars】polars.whenで文字列型のカラムを生成する時の注意",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HHwlEmy5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Polars%25E3%2580%2591polars.when%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E5%259E%258B%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hanata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ZWRhZjgwZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HHwlEmy5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Polars%25E3%2580%2591polars.when%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E5%259E%258B%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hanata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ZWRhZjgwZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/masasan/articles/b7da4e15156a5a",
          "author": "Masa",
          "description": "やりたかったこと\n\nPythonを使って、OpenAI APIをより意図通りに使えるようになる\n\n\n リファレンス\n\nshi3zさんのYouTube\nhttps://youtu.be/LC0GOvvxns4?si=y_b6PJUEauzpUfUC\n\n\n 使用したもの\n\nGoogle colab\nOpenAI API\n\n\n コード\n\n 準備\n# 環境変数の設定\nAPIKEY=\"<APIキー>\"\n\n# インストール\n!pip install openai==0.28\n\nimport openai\n\n# APIキーの設定\nopenai.api_key =APIKEY\nimpo...",
          "link": "https://zenn.dev/masasan/articles/b7da4e15156a5a",
          "publishedOn": "2024-01-27T09:22:55.000Z",
          "wordCount": 1139,
          "title": "ログ-マンガのキャラクターのアイデアを生成する-OpenAI API,Python",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SIU5UeLN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2582%25B0-%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25AC%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A2%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B-OpenAI%2520API%252CPython%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0xtNWdORVlIN3lyZ2RUNEJ2NXpVYnR6SFgxT1phVjdnTk9UWGVQc1NZUEM0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SIU5UeLN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2582%25B0-%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25AC%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A2%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B-OpenAI%2520API%252CPython%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0xtNWdORVlIN3lyZ2RUNEJ2NXpVYnR6SFgxT1phVjdnTk9UWGVQc1NZUEM0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nishimoto/articles/1587fe7a29f145",
          "author": "nishimoto",
          "description": "第2回 金融データ活用チャレンジ のベースラインを作成してみます。このZenn記事では全体的な方針をさっくり書いています。早くコードを動かしたい人はColabへのリンクからColabへ移行してください\n\n 基本情報\n\n\n\n\n\n\n\n\n\nコンペURL\nhttps://signate.jp/competitions/1325\n\n\nコンペ課題概要\n企業向けローンの返済可否予測\n\n\n全コード\n\nColabへのリンク（Public score: 0.6738)\n\n\n\n\n EDA\n\nあんまりNotebookでは頑張っていません。\n\n最低限、各列の基礎的な統計情報（列の型、NaNがある行数、値の種類）を...",
          "link": "https://zenn.dev/nishimoto/articles/1587fe7a29f145",
          "publishedOn": "2024-01-27T08:45:04.000Z",
          "wordCount": 1998,
          "title": "Signate 第2回 金融データ活用チャレンジ ベースラインサマリー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---dC34H2R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Signate%2520%25E7%25AC%25AC2%25E5%259B%259E%2520%25E9%2587%2591%25E8%259E%258D%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25B4%25BB%25E7%2594%25A8%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%2520%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---dC34H2R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Signate%2520%25E7%25AC%25AC2%25E5%259B%259E%2520%25E9%2587%2591%25E8%259E%258D%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25B4%25BB%25E7%2594%25A8%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%2520%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sankantsu/articles/3de204445e9b4a",
          "author": "sankantsu",
          "description": "概要\nPython の import 文は、プログラムの実行中に他のモジュールを読みこむために使われます。\nおおまかな import 文の動作として、sys.path から指定された名前のモジュールを探して見つかったものを読みこむというように理解している人が多いのではないかと思います。\nこの理解は概ね正しいですが、実際には sys.path の探索は import system の一部分でしかなく、他の機構が用いられることもあります。さらにはカスタマイズした実装を使って import system の動作を拡張したり置き替えたりすることさえ可能です。\nPython の import ...",
          "link": "https://zenn.dev/sankantsu/articles/3de204445e9b4a",
          "publishedOn": "2024-01-27T04:11:09.000Z",
          "wordCount": 1807,
          "title": "【Python】import system の全体像",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oArlL8Xl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591import%2520system%2520%25E3%2581%25AE%25E5%2585%25A8%25E4%25BD%2593%25E5%2583%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sankantsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTc0Nzk2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oArlL8Xl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591import%2520system%2520%25E3%2581%25AE%25E5%2585%25A8%25E4%25BD%2593%25E5%2583%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sankantsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTc0Nzk2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kakerun/articles/491aeef26c56b8",
          "author": "かけるん",
          "description": "今更ながらCodespacesを使って、PoetryによるPythonの開発環境を作ったりしてみました。\n\n 準備\n\n リポジトリを作成\nまずはGitHubでリポジトリを作成しましょう。\n今回は空のリポジトリから作っていきます。\n記事内ではリポジトリ名をtutorialとします。\n別名にする場合は適宜置き換えてください。\nまた、まったく空のリポジトリではCodespacesを使用できないので、リポジトリ作成時にADD a README fileにチェックを入れておきましょう（initial commitさえできれば良いので何でも良い）\n\nREADMEを追加\n\n 環境設定\n\n Codesp...",
          "link": "https://zenn.dev/kakerun/articles/491aeef26c56b8",
          "publishedOn": "2024-01-26T12:00:16.000Z",
          "wordCount": 809,
          "title": "GitHub CodespacesでPoetryによるPython開発環境を作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6Spo7wCC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Codespaces%25E3%2581%25A7Poetry%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BPython%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2591%25E3%2582%258B%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2VjMDI0NzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6Spo7wCC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Codespaces%25E3%2581%25A7Poetry%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BPython%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2591%25E3%2582%258B%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2VjMDI0NzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/lily_jenny/articles/7411b6b0a73c7b",
          "author": "HAJIME-TOKYO",
          "description": "1.VSCodeの画面の一番下のステータスバーの右側に現在設定されているPythonのバージョンが表示されています。（下図 右下の赤枠)\n\n2.画面右下のPythonのバージョンをクリックすると、コマンドパレットに「インタープリターの選択」と表示され、VSCodeが認識しているインストールされているPythonのバージョンの一覧が表示されます。（下図 右下の赤枠）\n一覧から変更したいバージョンをクリックします。\n\n3.この例では、バージョンを3.9.6を選択したので、ステータスバーの表示が3.9.6に変更されました。\n\n無事に、Pythonのバージョンを変更することが出来ました。",
          "link": "https://zenn.dev/lily_jenny/articles/7411b6b0a73c7b",
          "publishedOn": "2024-01-26T04:18:27.000Z",
          "wordCount": 68,
          "title": "【VSCode】Pythonのバージョン切り替え",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ad4Upb8J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590VSCode%25E3%2580%2591Python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAJIME-TOKYO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ZjE2ZDNiYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ad4Upb8J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590VSCode%25E3%2580%2591Python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAJIME-TOKYO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ZjE2ZDNiYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/labcode/articles/97a7410a0698f9",
          "author": "LabCode（ラボコード）",
          "description": "はじめに\nバーグラフを描画したい、折れ線グラフを描画したい、、etc と思ったときに、それぞれのグラフを描画しやすい形に生データを整形したデータ（ファイル）が必要になります。\nそんなときに、自分で自由にデータ整形ができるとデータ解析の幅が広がりますし、自分が表現したいようにグラフを描画することができるようになります。\n今回は、マップ上にバーグラフを表示するために必要なデータファイルの整形の方法と、Streamlitを使って整形したデータを地図上にプロットする方法をご紹介します！\n動作検証済み環境\nmacOS Monterey(12.4), python3.7.10\n\n データ整形の目...",
          "link": "https://zenn.dev/labcode/articles/97a7410a0698f9",
          "publishedOn": "2024-01-25T23:42:31.000Z",
          "wordCount": 4284,
          "title": "【Python】気象庁の降水量データを整形して、地図上にバーグラフを表示してみた【Streamlit】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QQG5bZGR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Pythontreamlit%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LabCode%25EF%25BC%2588%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YWEyYjdlZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QQG5bZGR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Pythontreamlit%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LabCode%25EF%25BC%2588%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YWEyYjdlZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-sklearn-pca",
          "author": "derwind",
          "description": "目的\nScikit-learnが実験的にGPU対応していたので調査してみた！ という良記事があって、一部分 scikit-learn で GPU を活用できるようなので PCA (主成分分析) を試してみたい。\n\n どのくらい対応している？\n11.1. Array API support (experimental) を見ると LinearDiscriminantAnalysis 以外にも decomposition.PCA もいけそうなので、今回はこれを Google Colab 上の T4 で試す。\n\n 実装\nまずは、従来通りに CPU で試して、次に PyTorch の Ten...",
          "link": "https://zenn.dev/derwind/articles/dwd-sklearn-pca",
          "publishedOn": "2024-01-25T16:01:23.000Z",
          "wordCount": 1567,
          "title": "scikit-learn の PCA で GPU を活用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kS9ghaAY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:scikit-learn%2520%25E3%2581%25AE%2520PCA%2520%25E3%2581%25A7%2520GPU%2520%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kS9ghaAY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:scikit-learn%2520%25E3%2581%25AE%2520PCA%2520%25E3%2581%25A7%2520GPU%2520%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/d7c64464977273",
          "author": "Tanny",
          "description": "はじめに\nこの記事は、「レガシーコードからの脱却ーソフトウェアの寿命を延ばし価値を高める9つのプラクティス」の「11章 プラクティス7 テストでふるまいを明示する」のテストコードをPythonで書いた内容を紹介しています。\nhttps://amzn.to/3ObTV2v\nこの書籍では、レガシーコード（＝バグを多く含み、壊れやすく拡張が難しいコード）を避けるためのプラクティスが9つ紹介されています。各プラクティスに対して、日常生活における例を挙げてその実践が重要となる背景が説明されており、とても腹落ちしやすい内容でした。\n理論的な説明が多い本書ですが、その中でも11章の「プラクティス7...",
          "link": "https://zenn.dev/tanny/articles/d7c64464977273",
          "publishedOn": "2024-01-25T12:26:36.000Z",
          "wordCount": 2012,
          "title": "「レガシーコードからの脱却」のテストコードをPythonで書いてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--482ryYUJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2583%25AC%25E3%2582%25AC%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E8%2584%25B1%25E5%258D%25B4%25E3%2580%258D%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--482ryYUJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2583%25AC%25E3%2582%25AC%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E8%2584%25B1%25E5%258D%25B4%25E3%2580%258D%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/forte/articles/301f50a23468f1",
          "author": "FORTE",
          "description": "はじめに\n結論から言うと自作関数の第一引数にresponseを指定するのが必要なんですが、\nこれに気付くまでハマったので備忘録として残しておきます。\n\n ハマったケース\nTavernでAPIのE2Eテストを書いている際に、responseを受け取った後に自作関数を呼び出したくなる事があります。\n例えば以下のような場合があります。\n\nAPI内でDBに登録・更新されるデータだがレスポンスに含まれない、かつ、後のテストで使用するデータのため、直接DBを参照してデータ取得する必要がある場合\nテストのために作成したデータの後始末(削除)をしたいが削除APIが存在しないため、DBを直接操作してレ...",
          "link": "https://zenn.dev/forte/articles/301f50a23468f1",
          "publishedOn": "2024-01-25T11:18:50.000Z",
          "wordCount": 349,
          "title": "Tavernのresponseで自作関数を呼び出すときの注意点",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wQAzHNjl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tavern%25E3%2581%25AEresponse%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259C%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FORTE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZTTVJeTdqV2txN19XYzR6NWdJYktBX0dqclRUb3dEVjdWc2tCS3c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wQAzHNjl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tavern%25E3%2581%25AEresponse%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259C%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FORTE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZTTVJeTdqV2txN19XYzR6NWdJYktBX0dqclRUb3dEVjdWc2tCS3c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/topo/articles/7146c33b25ea68",
          "author": "ToPo",
          "description": "はじめに\n\nsimple-text-generative-AIという自分のPCで動くローカルLLM（Large Langage Model）向けのGUIアプリを作成しました。\nLLMモデルのロードから、chatbotとしての利用、新規モデルの追加、ファインチューニングなどを誰でも簡単にできることを目指しています。\nこの記事は、simple-text-generative-AIの紹介と導入までの内容です。\n\nローカルLLMとは\n\n自身のPCなどローカルな環境で使用できる文章生成を行うAIモデルです。大規模言語モデルとも呼ばれます。\nLLMの代表的なものとしてChatGPTがありますが、...",
          "link": "https://zenn.dev/topo/articles/7146c33b25ea68",
          "publishedOn": "2024-01-25T00:36:54.000Z",
          "wordCount": 270,
          "title": "ローカルLLM向けのGUIアプリを作成した 1【導入編】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cl4eMKpw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AEGUI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25201%25E3%2580%2590%25E5%25B0%258E%25E5%2585%25A5%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ToPo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3OWM3OWMxYjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cl4eMKpw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AEGUI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25201%25E3%2580%2590%25E5%25B0%258E%25E5%2585%25A5%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ToPo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3OWM3OWMxYjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/labcode/articles/7eaca4f7e9dbcf",
          "author": "LabCode（ラボコード）",
          "description": "音声データをPythonで取り込んで表示したり解析したりしたいと思ったことはありませんか？\nこの記事では音声データの入出力をPythonで行えるpydubのインストールと基本的な使用方法（音声データの読み込み）について説明します。\npydubで音声データファイルの入力ができれば，Numpyが提供する関数等を使用してPython上で音声データの解析・加工ができるようになります。\n動作検証済み環境\n\nmacOS Catalina(10.15.7), python3.7.10, Jupyter Notebook, OpenCV 3.4.2\n\n Pythonで音声データを読み込み，波形を描画する...",
          "link": "https://zenn.dev/labcode/articles/7eaca4f7e9dbcf",
          "publishedOn": "2024-01-24T22:11:34.000Z",
          "wordCount": 1379,
          "title": "【Python】pydub使ったら音声データの解析がめっちゃ簡単だった",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cwXtL0-0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pydub%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E9%259F%25B3%25E5%25A3%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%258C%25E3%2582%2581%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LabCode%25EF%25BC%2588%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YWEyYjdlZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cwXtL0-0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pydub%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E9%259F%25B3%25E5%25A3%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%258C%25E3%2582%2581%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LabCode%25EF%25BC%2588%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YWEyYjdlZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/bashow0316/articles/9ed0c695e4eea2",
          "author": "bashow0316",
          "description": "Mac で RAG による最新情報の LLM を構築してみた\n\n はじめに\n様々な企業が、AI 活用を視野に入れ始めて、取組みを良く見かけるようになり、Large Language Models (LLMs/LLM) も業務で活用される事例も増えております。そして、AI とデータを柔軟に管理してツールやプロセス、コストパフォーマンス、スケーラブルをバランス良くするための手法である MLOps や 、MLOps と GenAIOps を LLM 基準で開発と運用に考慮した LLMOps 、Retrieval-augmented generation (RAG) の配信と運用を考慮した ...",
          "link": "https://zenn.dev/bashow0316/articles/9ed0c695e4eea2",
          "publishedOn": "2024-01-24T17:34:12.000Z",
          "wordCount": 2314,
          "title": "Mac で RAG による最新情報の LLM を構築してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hlJhZprK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%2520%25E3%2581%25A7%2520RAG%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%2580%25E6%2596%25B0%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%25AE%2520LLM%2520%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bashow0316%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4Y2ZlYzNiNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hlJhZprK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%2520%25E3%2581%25A7%2520RAG%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%2580%25E6%2596%25B0%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%25AE%2520LLM%2520%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bashow0316%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4Y2ZlYzNiNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nondescript/articles/f456023e2dd99f",
          "author": "素人の戯言",
          "description": "※二段階認証有効アカウント非対応\n\n TL;DR\n\n\nInstalledAppFlow.run_local_server()をopen_browser=False指定でバックグラウンド待機\n\nInstalledAppFlow.authorization_url()でクエリにredirect_uriが入るまで再取得\nundetected_chromedriver使用\n\n\n コード全容\n\nauto_oauth2.py\nimport os\nimport pickle\nimport shutil\nimport time\nimport traceback\nfrom argparse import ...",
          "link": "https://zenn.dev/nondescript/articles/f456023e2dd99f",
          "publishedOn": "2024-01-24T14:23:44.000Z",
          "wordCount": 2225,
          "title": "完全自動でGoogle OAuth2.0認証情報を取得",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g1bTnyTa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%258C%25E5%2585%25A8%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7Google%2520OAuth2.0%25E8%25AA%258D%25E8%25A8%25BC%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g1bTnyTa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%258C%25E5%2585%25A8%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7Google%2520OAuth2.0%25E8%25AA%258D%25E8%25A8%25BC%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tomodo_ysys/articles/edinet-chatgpt-financial-report",
          "author": "ともど@SIerエンジニア",
          "description": "はじめに\nStableDiffusionで作成したアニメ絵のイラスト、せっかくだから何かに使えないか？\nいろいろ考えた結果、今回は保有銘柄の決算が出たらLINEで要約教えてくれる秘書のお姉さんにしよう！と思いつきました。保有銘柄の決算報告書が新規アップロードされていないかEDINETで確認し、あればchatGPTで要約してLINEに通知します。\nNISAで調子に乗って銘柄数を増やしすぎた投資初心者の私には願ってもない機能です。\n\n 今回実現したいこと\nEDINET APIを利用してウォッチリストの銘柄の半期報告書、四半期報告書が新規に提出されていないかを確認します。提出されている場合...",
          "link": "https://zenn.dev/tomodo_ysys/articles/edinet-chatgpt-financial-report",
          "publishedOn": "2024-01-24T14:22:16.000Z",
          "wordCount": 7376,
          "title": "【My秘書】chatGPT×EDINET×LINEで保有銘柄の決算要約してくれるお姉さん",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SKQKPjF3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590My%25E7%25A7%2598%25E6%259B%25B8%25E3%2580%2591chatGPT%25C3%2597EDINET%25C3%2597LINE%25E3%2581%25A7%25E4%25BF%259D%25E6%259C%2589%25E9%258A%2598%25E6%259F%2584%25E3%2581%25AE%25E6%25B1%25BA%25E7%25AE%2597%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2581%258A%25E5%25A7%2589%25E3%2581%2595%25E3%2582%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2582%25E3%2581%25A9%2540SIer%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOWQ0NjYyMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SKQKPjF3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590My%25E7%25A7%2598%25E6%259B%25B8%25E3%2580%2591chatGPT%25C3%2597EDINET%25C3%2597LINE%25E3%2581%25A7%25E4%25BF%259D%25E6%259C%2589%25E9%258A%2598%25E6%259F%2584%25E3%2581%25AE%25E6%25B1%25BA%25E7%25AE%2597%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2581%258A%25E5%25A7%2589%25E3%2581%2595%25E3%2582%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2582%25E3%2581%25A9%2540SIer%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOWQ0NjYyMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/zurukumo/articles/9c439ef31d5791",
          "author": "つるくも",
          "description": "概要\n『3ポイントシュートの上手さとフリースローの上手さは比例する。』\nバスケットボールのファンコミュニティの間では上記のような言説がしばしば常識のように語られる。特に3ポイントシュートが下手な若手の選手に対して、「この選手はフリースローの確率が良いから、そのうち3ポイントの確率も上がっていくはずだ」のような文脈で語られることが多い印象だ。\n3ポイントシュートもフリースローもシュートという大枠で見れば同じだが、足を接地した状態で放つフリースローとジャンプと同時に放たれる3ポイントシュートとで本当に上手さは比例するのだろうか？\n今回、nba.comのデータを分析して仮説を検証する。\n\n...",
          "link": "https://zenn.dev/zurukumo/articles/9c439ef31d5791",
          "publishedOn": "2024-01-24T12:12:02.000Z",
          "wordCount": 1424,
          "title": "3ポイントシュートの上手さとフリースローの上手さは関係があるか？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J64sh9u7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:3%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E4%25B8%258A%25E6%2589%258B%25E3%2581%2595%25E3%2581%25A8%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25AE%25E4%25B8%258A%25E6%2589%258B%25E3%2581%2595%25E3%2581%25AF%25E9%2596%25A2%25E4%25BF%2582%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2582%258B%25E3%2581%258F%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjQyOWEzZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J64sh9u7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:3%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E4%25B8%258A%25E6%2589%258B%25E3%2581%2595%25E3%2581%25A8%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25AE%25E4%25B8%258A%25E6%2589%258B%25E3%2581%2595%25E3%2581%25AF%25E9%2596%25A2%25E4%25BF%2582%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2582%258B%25E3%2581%258F%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjQyOWEzZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hoshinagi1219/articles/091bdb6755b16f",
          "author": "HoshimoriNagisa",
          "description": "はじめに\n新しいPCを購入した際に真っ先に行う、pythonの環境構築をまとめました。\n\npython本体のインストール\npyenv-winで複数のバージョンを使用可能に\nvenvで仮想環境作成\n\n\n 動作確認環境\n\n PC情報\nOS：Windows 10 Home　｜　CPU：Inter(R) Core(TM) i5-3230M　｜　メモリ：4.00GB\n\n\n pythonバージョン\n\npython：3.12.1\n\npyenv-win：3.1.1\n\n\n\n\n 1. python本体のインストール\n\n 1.1 インストーラーのダウンロード\npythonの公式サイト(https://ww...",
          "link": "https://zenn.dev/hoshinagi1219/articles/091bdb6755b16f",
          "publishedOn": "2024-01-24T10:00:00.000Z",
          "wordCount": 701,
          "title": "【私的】Python環境構築（pyenv-win+venv）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tTFvjONa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A7%2581%25E7%259A%2584%25E3%2580%2591Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%2588pyenv-win%252Bvenv%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HoshimoriNagisa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEhWVklSWlkwSGlkcGQ2dnZybWFSVzZPN2syeGxIQ2xzRTBMcmtsMF82PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tTFvjONa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A7%2581%25E7%259A%2584%25E3%2580%2591Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%2588pyenv-win%252Bvenv%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HoshimoriNagisa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEhWVklSWlkwSGlkcGQ2dnZybWFSVzZPN2syeGxIQ2xzRTBMcmtsMF82PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuu7751/articles/24ef1aa32a7fab",
          "author": "yu-min",
          "description": "背景\n機械学習モデルを使って、予測を実行するアプリケーションをstreamlitで作っていたのですが、予測実行のたびにモデル読み込みで時間がかかっていたので、これを省略するためにchatGPTさんに解決方法を聴きました。\n\n やったこと\n\n before\n以下がアプリコードです。time.sleep(10)が実際には機械学習モデルのpickle.loadになるわけですが、これだと推論ボタンを押すたびにモデルをloadして走ることになります。\nimport streamlit as st\nimport pickle\nimport time\n\ndef load_model():\n    ...",
          "link": "https://zenn.dev/yuu7751/articles/24ef1aa32a7fab",
          "publishedOn": "2024-01-24T03:58:14.000Z",
          "wordCount": 564,
          "title": "Streamlitで機械学習モデルをキャッシュして、推論表示を早くする話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--stbINsxU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E6%258E%25A8%25E8%25AB%2596%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2582%2592%25E6%2597%25A9%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yu-min%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeUV1MllxOFphT3JNRXlacEFNOFBYelhtZ0x1Z29fM2hKU0J1TTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--stbINsxU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E6%258E%25A8%25E8%25AB%2596%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2582%2592%25E6%2597%25A9%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yu-min%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeUV1MllxOFphT3JNRXlacEFNOFBYelhtZ0x1Z29fM2hKU0J1TTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/0msys/articles/6706370656478a",
          "author": "0msys",
          "description": "今回作ったもの\nStreamlitで作ったダッシュボードを自動でスライドショーできるか試してみました。\n↓が完成したものです。\n\n※スライドバーやチェックボックスを操作するたびに再描画され、乱数で作っているグラフが変化しているのはご愛嬌です。\n一応イメージしていたものはできました。\nhttps://github.com/0msys/streamlit-slide-show-test\n\n 作成した背景\n複数のダッシュボードを自動でスライドショーで回しながら常設ディスプレイで表示しておきたいことがあり、今まではStreamlitではできなかったのでGrafanaを使ってやっていたのですが...",
          "link": "https://zenn.dev/0msys/articles/6706370656478a",
          "publishedOn": "2024-01-24T03:00:01.000Z",
          "wordCount": 1846,
          "title": "Streamlitで作ったダッシュボードを自動でスライドショーさせる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JEkw3EFU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0msys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTg2YjNkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JEkw3EFU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0msys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTg2YjNkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/y_endo_hasibiro/articles/10f9303f6993ca",
          "author": "ハシビロ",
          "description": "みなさんプロセスとスレッドの違いを説明できますか？\n僕はできなくて恥をかいたので反省がてらに記事にしました。\n\n 概略\n概念的には以下です。\n\n\n 解説\n\n プロセス\nプロセスはインスタンスの概念です。\nプログラムの実行に必要なプログラムコードとその動作に必要なリソース（メモリ、ファイルハンドル、I/Oデバイスなど）が含まれています。\n各プロセスに対して独立したメモリ領域を割り当てるため、他プロセスとのリソースの競合が起きません。\n基本的にはCPUコア数とプロセス数は同数にすることが多いです。\n\n スレッド\nスレッドはプロセス内部のタスク単位です。\nプロセスの中には最低一つのスレッドが含...",
          "link": "https://zenn.dev/y_endo_hasibiro/articles/10f9303f6993ca",
          "publishedOn": "2024-01-24T02:45:33.000Z",
          "wordCount": 118,
          "title": "プロセスとスレッドの概念の違い",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--44LZj2PL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25A8%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2582%25B7%25E3%2583%2593%25E3%2583%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSU5tcjhxdnNnZzBVZm5iLUlJeUdQOE8wS3gySDlnRjJ6bi1wQm1NVE12PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--44LZj2PL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25A8%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2582%25B7%25E3%2583%2593%25E3%2583%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSU5tcjhxdnNnZzBVZm5iLUlJeUdQOE8wS3gySDlnRjJ6bi1wQm1NVE12PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hitoe_kami/articles/0010-articles-reddit-monitoring",
          "author": "MiyukiP",
          "description": "TL;DR\n\n\nRedditのアニメチャンネルで日次で盛り上がったアニメを監視します\nCloud Run Jobsを日次で起動させます\n以下のようにGoogleSheetに日次でアニメのスレッドが書き込まれていきます\n\n\n\n\n はじめに\nどうも、アニメマスターです。\n皆さんアニメは好きですか？\n私は三度の飯より好きです！\nアニメ好きを長いことやっているとアニメを観るだけでは飽き足らず、アニメの感想を共有したり、クール内でどのアニメが人気なのかを監視したくなります。\nということで、本稿ではRedditという世界最大の掲示板アプリのアニメチャンネルの盛り上がりを日次監視していきます。\n\n...",
          "link": "https://zenn.dev/hitoe_kami/articles/0010-articles-reddit-monitoring",
          "publishedOn": "2024-01-24T01:11:38.000Z",
          "wordCount": 4236,
          "title": "今日からはじめるアニメ監視",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aV4DDXOy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E6%2597%25A5%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E7%259B%25A3%25E8%25A6%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MiyukiP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxZjQ5NDZmOGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aV4DDXOy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E6%2597%25A5%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E7%259B%25A3%25E8%25A6%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MiyukiP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxZjQ5NDZmOGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mopinfish/articles/automating-gis-01",
          "author": "Otsuka Noboru",
          "description": "概要\nヘルシンキ大学地球科学・地理学科の GIS コースの教材であるAutomating GIS Processes 203を読んでいきます。\n\n Lesson1\n\n 講義動画\nhttps://youtu.be/heEKeH2ECSk\n\n Overview\n\nPythonのshapelyパッケージを使って、Pythonで「単純な特徴」を作成し、操作する方法を学びます。\n\nhttps://autogis-site.readthedocs.io/en/latest/lessons/lesson-1/overview.html\n\nPythonを使って空間データを扱い、分析する方法を学びます...",
          "link": "https://zenn.dev/mopinfish/articles/automating-gis-01",
          "publishedOn": "2024-01-23T22:39:07.000Z",
          "wordCount": 313,
          "title": "Automating GIS Processes 2023 を読む その１",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LxZ3cAep--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Automating%2520GIS%2520Processes%25202023%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LxZ3cAep--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Automating%2520GIS%2520Processes%25202023%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/alcnaka/articles/107976a28d060e",
          "author": "alcnaka",
          "description": "Rustではなく、Pythonの方のPolarsの話です。最近は機会があればPandasではなくPolarsで書いてみようと手を出していますが、なかなか慣れません。\n今回は、リンク付きのExcelファイルをいい感じに出力しようとして、調べるのに結構時間がかかってしまいました。\npolarsのwrite_excelメソッドで出力すると、=HYPERLINK(\"https://example.com\", \"リンクのサンプル\") の様な文字列がそのまま出力されて、クリックできません。一旦xlsxwrite.Workbookを持ってきて、それをwrite_excleメソッドに渡して出力すると、求...",
          "link": "https://zenn.dev/alcnaka/articles/107976a28d060e",
          "publishedOn": "2024-01-23T11:32:30.000Z",
          "wordCount": 854,
          "title": "【Python】Polarsからリンク付きのExcelを出力する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9kqMvi2y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Polars%25E3%2581%258B%25E3%2582%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%258D%25E3%2581%25AEExcel%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:alcnaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmVjODEwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9kqMvi2y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Polars%25E3%2581%258B%25E3%2582%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%258D%25E3%2581%25AEExcel%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:alcnaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmVjODEwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kumaaa1212/articles/65dfb512183030",
          "author": "kuma",
          "description": "FastAPI 環境構築を説明していきます。\nざっくりな流れとして、、、\nPCにPython入れる　（pyenv）\n↓\n仮想環境を作る　（venv）\n↓\n必要なものをインストールする　（pip）\n\n Pythonをインストールする\nhttps://original-game.com/python_course/install/mac-homebrew-pyenv/\nこの記事を参考にして、Pythonをインストールする。\n(pyenvを使ってバージョン管理をしています。)\n\n 仮想環境\n仮想環境とは、パソコンやストレージなどのハードウェア内で仮想的に構築された環境のことです。\nつまり、、物...",
          "link": "https://zenn.dev/kumaaa1212/articles/65dfb512183030",
          "publishedOn": "2024-01-23T07:35:32.000Z",
          "wordCount": 191,
          "title": "FastAPI 環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ehtxi-IW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:FastAPI%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kuma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4YzZlNWFmZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ehtxi-IW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:FastAPI%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kuma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4YzZlNWFmZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kumaaa1212/articles/c6c5989b674493",
          "author": "kuma",
          "description": "業務でfastAPIを使うことになったので、学習がてらFastAPIについてまとめます。\n\n FastAPI 概要\n\nAPIを構築するためのモダンで高速なPyhton Webフレームワーク\n型ヒントに基づいて開発を行う。（基本的にPythonは型を重視して開発少ない）\n\n\n FastAPI メリット\n\nパフォーマンス・開発・処理が高速（非同期処理をサポート）\n型ヒントでの安全性が高い。\n自動ドキュメント生成機能\n\n型を元にopenAPIを自動生成してくれる。\n\n\n大企業もFastAPIを採用している。\n\n\n\n\n 他フレームワークとの比較\n\ndjango\n\n１つでなんでもできる万能型\n組み...",
          "link": "https://zenn.dev/kumaaa1212/articles/c6c5989b674493",
          "publishedOn": "2024-01-23T05:46:50.000Z",
          "wordCount": 437,
          "title": "FastAPIとは？　「基本のキ」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vXhE3EQd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E3%2580%2580%25E3%2580%258C%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2582%25AD%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kuma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4YzZlNWFmZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vXhE3EQd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E3%2580%2580%25E3%2580%258C%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2582%25AD%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kuma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4YzZlNWFmZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/gdtypk/articles/python-default-dict",
          "author": "ろん",
          "description": "はじめに\n配列で出てきたものを種類ごとにカウントしたいことってあると思います。\nPythonでは標準でcollectionsライブラリが用意されていて、\nその中のdefaultdictが良い感じだったので紹介します。\ndefaultdictの公式ドキュメント\nhttps://docs.python.org/ja/3.10/library/collections.html#collections.defaultdict\n\n やりたいこと\n以下のような配列があった時、種類ごとに何回配列に出てきたかカウントしたいです。\n\npython\nfruits = [\"りんご\", \"ばなな\", \"みか...",
          "link": "https://zenn.dev/gdtypk/articles/python-default-dict",
          "publishedOn": "2024-01-23T00:49:27.000Z",
          "wordCount": 344,
          "title": "defaultdictを使って楽に配列カウントをする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--env1yUBN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:defaultdict%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25A5%25BD%25E3%2581%25AB%25E9%2585%258D%25E5%2588%2597%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiYWMyOTFmNjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--env1yUBN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:defaultdict%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25A5%25BD%25E3%2581%25AB%25E9%2585%258D%25E5%2588%2597%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiYWMyOTFmNjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/migawari1253/articles/e6f7df001a355c",
          "author": "あいうえおかきくけこ",
          "description": "TL;DR\n\n音楽をメルスペクトログラムで画像化\nメルスペクトログラムをUMAPで次元削減 + G-meansによるクラスタリングし、似ている音楽ごとを教師なしでグループ分け\n\n\n 動機\n今回の検討の発端は、趣味でやっているDTMの悩み事です。DTMとはDesktop Top Musicの略で、パソコンを使った音楽制作のことです。正直下手の横好きなのですが、オリジナルの曲を自作できるのは魅力的です。\nさて、DTMをやっていると「サンプルパック」というものをよく使います。サンプルパックとは、オーディオファイル(.wav等)がたくさん入っているパッケージのようなものです。例えば、以下のよ...",
          "link": "https://zenn.dev/migawari1253/articles/e6f7df001a355c",
          "publishedOn": "2024-01-23T00:07:26.000Z",
          "wordCount": 1709,
          "title": "音楽をメルスペクトログラム+UMAP + G-meansでクラスタリングしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RVuGQtKg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E3%2583%25A1%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%259A%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%252BUMAP%2520%252B%2520G-means%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2581%2586%25E3%2581%2588%25E3%2581%258A%25E3%2581%258B%25E3%2581%258D%25E3%2581%258F%25E3%2581%2591%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2NOQmV5TFhVWWY2VHR1S25WeWs5ZjNvVTlBWlpPX2ozMlR0X3VIX1M0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RVuGQtKg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E3%2583%25A1%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%259A%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%252BUMAP%2520%252B%2520G-means%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2581%2586%25E3%2581%2588%25E3%2581%258A%25E3%2581%258B%25E3%2581%258D%25E3%2581%258F%25E3%2581%2591%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2NOQmV5TFhVWWY2VHR1S25WeWs5ZjNvVTlBWlpPX2ozMlR0X3VIX1M0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/0msys/articles/3524948d15c8d5",
          "author": "0msys",
          "description": "はじめに\n最近自分がドはまりしているStreamlitを開発するための、テンプレートリポジトリを作りました。\n開発コンテナを使っているので、ローカル環境を汚さずに色々なアプリをスクラップ＆ビルドできます。\nhttps://github.com/0msys/streamlit-template-devcontainer\n\n リポジトリの使い方\n\nテンプレートリポジトリになっているので、Use this templateボタンから、自分のリポジトリを作成してください。\n以降の使い方についてはREADME.mdに書いてありますので、ここでは割愛します。\nわからないことがあれば、コメント欄に...",
          "link": "https://zenn.dev/0msys/articles/3524948d15c8d5",
          "publishedOn": "2024-01-22T16:56:59.000Z",
          "wordCount": 167,
          "title": "Streamlitの開発コンテナテンプレートを作りました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s----mBaPS3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0msys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTg2YjNkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s----mBaPS3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0msys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTg2YjNkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/0msys/articles/3395011fb5c987",
          "author": "0msys",
          "description": "背景\nこちらの記事で紹介したStreamlitの開発コンテナテンプレートを作るときに、\nコンテナ内のユーザーを非rootにするために、DockerFile作成でかなりハマったので、その内容をまとめました。\n\n 結論\n上記の記事で紹介したリポジトリのDockerFileが結論ですが、\nコンテナ内のユーザーを非rootにする場合、\n\n作成したユーザーのディレクトリでPATHを通す\n\npip installの際に--userオプションをつける\n\nの2点を行う必要があるようです。\nhttps://github.com/0msys/streamlit-template-devcontainer...",
          "link": "https://zenn.dev/0msys/articles/3395011fb5c987",
          "publishedOn": "2024-01-22T16:56:58.000Z",
          "wordCount": 858,
          "title": "Pythonコンテナで非rootユーザーを使おうとしてハマった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Zsm3hLdI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E9%259D%259Eroot%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0msys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTg2YjNkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Zsm3hLdI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E9%259D%259Eroot%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0msys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTg2YjNkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hgmdev/articles/202401152155",
          "author": "H.G.M Developers🛠️",
          "description": "保育ICTを愛するみなさまこんにちは、H.G.M Developers S.K です。\n\n はじめに\n負荷テストを行うことになり、その事前調査として負荷テストツールの locust を使ってみました。\nlocust はテストスクリプトを Python で書けるため、普段 Python を書き慣れている人間には取っ付きやすかったので、サクッと試してみました！\n\n 開発環境\n\nMacBook Pro M1\nVS Code\n\n\n ライブラリ\n\nPython 3.10\npipenv 2022.9.24\nlocust 2.19.1\n\n\n 環境構築\npipenv で仮想環境を作成します。\n$ pip...",
          "link": "https://zenn.dev/hgmdev/articles/202401152155",
          "publishedOn": "2024-01-22T05:41:10.000Z",
          "wordCount": 602,
          "title": "負荷テストツールlocustを試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--V1qp7Wci--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B2%25A0%25E8%258D%25B7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABlocust%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:H.G.M%2520Developers%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliNDQ4NTA1NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--V1qp7Wci--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B2%25A0%25E8%258D%25B7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABlocust%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:H.G.M%2520Developers%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliNDQ4NTA1NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kubomi/articles/311856ee3f7daa",
          "author": "kubomi",
          "description": "はじめに\n先日、M1 MacでPythonのNLTKライブラリ（Natural Language Toolkit）を使用しようとした際に、予期せぬImportErrorに直面しました。これは、異なるアーキテクチャ間での互換性の問題でした。\nこの記事では、問題の原因、解決策、そしてこの経験から得た教訓を共有します。\n\n 問題の原因\nエラーは次のようなものでした。\n\nImportError: dlopen(...): tried: ... (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm...",
          "link": "https://zenn.dev/kubomi/articles/311856ee3f7daa",
          "publishedOn": "2024-01-22T00:54:58.000Z",
          "wordCount": 293,
          "title": "M1 MacでPython NLTKライブラリのImportErrorを解決する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WPgq_6Xt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Mac%25E3%2581%25A7Python%2520NLTK%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AEImportError%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kubomi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdTd0d5V2FJMXkzOGx5N1QwX3lnMjJCSUpiVm9lWWsyTHBDUHd3QUx0b05fbj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WPgq_6Xt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Mac%25E3%2581%25A7Python%2520NLTK%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AEImportError%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kubomi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdTd0d5V2FJMXkzOGx5N1QwX3lnMjJCSUpiVm9lWWsyTHBDUHd3QUx0b05fbj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tekuteku_1104/articles/4c244c6d7159ee",
          "author": "らっしー",
          "description": "はじめに\n最近エンジニア向けの転職サイトを見ていると『データサイエンティスト募集』の文言をよく見かけるようになりました。データサイエンティストというと回帰分析や分類問題・統計学などいろいろと難しいそうな業務に取り組んでるイメージがあるかと思います。今回はそんな難しそうな業務は一旦置いといて、その前段階としてとりあえずデータ分析をできる環境を作ってみよう！ってことでやっていきましょう。\n\n 開発環境\n\ndocker for windows\nFW : Django\nDB : MySQL\n\n\n ディレクトリ・ファイル構成\n\nbash\nPS C:\\MyLocalRepository\\djan...",
          "link": "https://zenn.dev/tekuteku_1104/articles/4c244c6d7159ee",
          "publishedOn": "2024-01-22T00:46:17.000Z",
          "wordCount": 1071,
          "title": "『Django + Docker 』でデータ分析の環境構築をしてみた！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--roBu6wug--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258EDjango%2520%252B%2520Docker%2520%25E3%2580%258F%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2589%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXpEY2hVU3MzQzNvODYydUZ1dHlmZ1hERUZYRnl0ZWZncnphOHg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--roBu6wug--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258EDjango%2520%252B%2520Docker%2520%25E3%2580%258F%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2589%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXpEY2hVU3MzQzNvODYydUZ1dHlmZ1hERUZYRnl0ZWZncnphOHg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/dataheroes/articles/34416dfb611347",
          "author": "Kentaro Maeda",
          "description": "Snowflakeのワーカーノードのスペック調べてみた。\nローカルディスク容量が倍に、CPUアーキテクチャがx86_64からaarch64になってた。\nいつのまにかスペックが上がってました。\n\n 現在のワーカーノードのスペック\n2024年１月現在は、以下のようなマシンでクエリが実行される。\n１ノードあたり\n\n\n\nパラメータ\n値\n\n\n\n\nインスタンスタイプ\nC6g.2xlarge\n\n\nプラットフォーム\nElastic Kubernetes Service\n\n\nオペレーティングシステム\nAmazon Linux 2（Linux Kernel 5.4.181）\n\n\nCPU コア\n\n8コア/ノー...",
          "link": "https://zenn.dev/dataheroes/articles/34416dfb611347",
          "publishedOn": "2024-01-21T22:15:00.000Z",
          "wordCount": 1002,
          "title": "Snowflakeのワーカーノードがサイレント大幅アップグレードされてた！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--p1urS2uA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snowflake%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258C%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2588%25E5%25A4%25A7%25E5%25B9%2585%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kentaro%2520Maeda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDFkYTVlNTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Snowflake%2520Data%2520Heroes%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYTJlMzdkM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--p1urS2uA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snowflake%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258C%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2588%25E5%25A4%25A7%25E5%25B9%2585%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kentaro%2520Maeda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDFkYTVlNTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Snowflake%2520Data%2520Heroes%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYTJlMzdkM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kotopasi/articles/91bb0feeab9bbc",
          "author": "あまたつ",
          "description": "はじめに\nngrokを使ってColab上からFastAPIサーバーを立てる備忘録です\n\n 目標\n\nColabでFastAPIのエンドポイントを作る\nngrokでサーバーを外部に公開する\n\n\n 手順\n!pip install -q fastapi nest-asyncio uvicorn pyngrok \n\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware\nimport nest_asyncio\nfrom pyngrok import ngrok\nimport uvicorn\n\n...",
          "link": "https://zenn.dev/kotopasi/articles/91bb0feeab9bbc",
          "publishedOn": "2024-01-21T15:46:44.000Z",
          "wordCount": 448,
          "title": "[Colab]Colab上でFastAPIのサーバーを立てる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--u86QEhmV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BColab%255DColab%25E4%25B8%258A%25E3%2581%25A7FastAPI%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkMTc2MzFlYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--u86QEhmV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BColab%255DColab%25E4%25B8%258A%25E3%2581%25A7FastAPI%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkMTc2MzFlYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/m10k1/articles/0c549c887968b4",
          "author": "m10k1",
          "description": "MainWindowをカスタマイズ\nもうちょっと実用的なアプリケーションとして画像ビューワーを作ってみましょう\n\nImageViewer_001.py\nimport sys\nfrom PySide6.QtWidgets import QApplication, QMainWindow\n\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle(\"Hello World\")\n        self.setGeometry(1...",
          "link": "https://zenn.dev/m10k1/articles/0c549c887968b4",
          "publishedOn": "2024-01-21T13:33:43.000Z",
          "wordCount": 1407,
          "title": "PySide6 002",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cg7eIsML--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:PySide6%2520002%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m10k1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pseFQ2amhWc0JSTmlHZjktclduSldqbHVtTHlaWDhEZjBHQkdyemc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cg7eIsML--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:PySide6%2520002%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m10k1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pseFQ2amhWc0JSTmlHZjktclduSldqbHVtTHlaWDhEZjBHQkdyemc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/20cfffcc111f07",
          "author": "laiso",
          "description": "",
          "link": "https://zenn.dev/laiso/articles/20cfffcc111f07",
          "publishedOn": "2024-01-21T13:29:34.000Z",
          "wordCount": 80,
          "title": "GitHub GraphQL APIで指定したユーザーがスポンサーかどうかを確認する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--h8-egPNB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520GraphQL%2520API%25E3%2581%25A7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%258C%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2581%258B%25E3%2581%25A9%25E3%2581%2586%25E3%2581%258B%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--h8-egPNB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520GraphQL%2520API%25E3%2581%25A7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%258C%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2581%258B%25E3%2581%25A9%25E3%2581%2586%25E3%2581%258B%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/daidai_daitai/articles/a69287f10c3304",
          "author": "橙。",
          "description": "はじめに\nニュースなどを聞いていると\n「日経平均株価は窓を開けて続伸し...」\nなどと言っているのを耳にします。そもそも窓とは何なのでしょうか。\n窓とは前日始値から終値の範囲外から（あるいは高安値）翌日の取引が始まった場合の隙間の事を指しているようです。\n\n「開けた窓はいずれ閉める」などの言葉を見る事もありますが、本当に窓を閉めるのでしょうか。\n日経平均株価を検証しても使えないので、今回は日経先物miniのデータを使用し、Session別に価格を集計、窓を埋めるまでの時間を計測してみます。\n!\nこの記事中で使用される価格データが、必ずしも正しいものではないかもしれません。気になった方...",
          "link": "https://zenn.dev/daidai_daitai/articles/a69287f10c3304",
          "publishedOn": "2024-01-21T12:25:58.000Z",
          "wordCount": 15500,
          "title": "日経先物分析その4...開けた窓はいつ埋めるのか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HrAtPdwp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE4...%25E9%2596%258B%25E3%2581%2591%25E3%2581%259F%25E7%25AA%2593%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25A4%25E5%259F%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HrAtPdwp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE4...%25E9%2596%258B%25E3%2581%2591%25E3%2581%259F%25E7%25AA%2593%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25A4%25E5%259F%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/m10k1/articles/fbb33e79661050",
          "author": "m10k1",
          "description": "PySide6を使ってアプリケーションが作れる漢に俺はなる！\n\n はじめに\n\n PySide6とは\nPySideって何？っていう方に説明をするとPySideはQtと呼ばれるマルチプラットフォームGUI開発フレームワークです。Qt自体は、C++言語で記述されています。Pythonにはバインディングと言ってC/C++で書かれたコード呼び出すことができる機能があるので、Qtのバインディングとして開発されたのがPySideというわけです。これにより、PythonでもマルチプラットフォームなGUIアプリケーションを作成できるようになるわけです。\n\n 主な特徴\nクロスプラットフォーム対応： PySi...",
          "link": "https://zenn.dev/m10k1/articles/fbb33e79661050",
          "publishedOn": "2024-01-21T10:07:50.000Z",
          "wordCount": 367,
          "title": "PySide6 入門 001",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZPdPQdH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:PySide6%2520%25E5%2585%25A5%25E9%2596%2580%2520001%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m10k1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pseFQ2amhWc0JSTmlHZjktclduSldqbHVtTHlaWDhEZjBHQkdyemc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZPdPQdH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:PySide6%2520%25E5%2585%25A5%25E9%2596%2580%2520001%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m10k1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pseFQ2amhWc0JSTmlHZjktclduSldqbHVtTHlaWDhEZjBHQkdyemc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hayata_yamamoto/books/26f109546a5159",
          "author": "山本隼汰 | Hayata Yamamoto",
          "description": "本書は、 AWS Lambda, DynamoDB を用いて、FastAPI (Python) で簡単なサーバーサイドを開発・デプロイするまでの流れと手順を共有するものです。\n※なお、内容は順次公開および追加され、読者の皆様からのご意見を反映しながら完成を目指します\n\nフィードバックがある方に関しては、以下よりお気軽に投稿お願いします\nhttps://zenn.dev/hayata_yamamoto/scraps/b6e35ec688323a",
          "link": "https://zenn.dev/hayata_yamamoto/books/26f109546a5159",
          "publishedOn": "2024-01-21T08:30:22.000Z",
          "wordCount": 111,
          "title": "【順次追加】AWS Lambda, FastAPI, DynamoDB で作るサーバーレスAPI",
          "imageUrl": "https://static.zenn.studio/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/kazuhito/articles/da87c94004e1f4",
          "author": "kazuhito",
          "description": "LLaVA-JP\nLLaVA-JPは日本語VLMです👀\nhttps://github.com/tosiyuki/LLaVA-JP\nLLaVA-JPの詳細は、作者の@toshi_456様がQiitaにまとめられています。\nhttps://qiita.com/toshi_456/items/248005a842725f9406e3\n\n Colaboratoryノートブック\nお試しに使用したノートブックは以下です👀\nColaboratoryで上から順に実行したら動くと思います。\nGPUでの実行を推奨しますが、CPUでも動作します。\n（CPU実行は生成される文章の長さによっては相当な時間がか...",
          "link": "https://zenn.dev/kazuhito/articles/da87c94004e1f4",
          "publishedOn": "2024-01-21T01:48:58.000Z",
          "wordCount": 131,
          "title": "LLaVA-JPをColaboratoryでお試し。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CCpsjPR7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLaVA-JP%25E3%2582%2592Colaboratory%25E3%2581%25A7%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuhito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CCpsjPR7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLaVA-JP%25E3%2582%2592Colaboratory%25E3%2581%25A7%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuhito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/apo_zenn/articles/5e08aca8f385a4",
          "author": "apo_zenn",
          "description": "手順\n\n画像読み込み\nz方向に足し合わせ\n書き出し\n\n\n コード\n3D画像(tiff形式など)の読み込みはskimageが便利です．pipで簡単にインストールできます．\n書き出しも簡単です．\n\ntest.py\nfrom skimage import io\nimport numpy as np\n\nimage = io.imread(\"test.tif\") #画像読み込み\nimage = np.sum(image, axis=0)# Max Projection\nio.imsave(\"Max Projection.tif\", image)# 画像書き出し\n\nz方向への足し合わせはnump...",
          "link": "https://zenn.dev/apo_zenn/articles/5e08aca8f385a4",
          "publishedOn": "2024-01-21T00:43:53.000Z",
          "wordCount": 180,
          "title": "pythonで3D画像の最大輝度投影 (Max Intensity Projection)を行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2Fyz42zW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A73D%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E6%259C%2580%25E5%25A4%25A7%25E8%25BC%259D%25E5%25BA%25A6%25E6%258A%2595%25E5%25BD%25B1%2520%2528Max%2520Intensity%2520Projection%2529%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMWY3NGQ1ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2Fyz42zW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A73D%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E6%259C%2580%25E5%25A4%25A7%25E8%25BC%259D%25E5%25BA%25A6%25E6%258A%2595%25E5%25BD%25B1%2520%2528Max%2520Intensity%2520Projection%2529%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMWY3NGQ1ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/20240119_azure_batch",
          "author": "kazuyan",
          "description": "はじめに\nAzure Batch は、Azure 上で大規模な並列処理を行うためのサービスです。\nAzure Batch を利用することで、コンピューティングノード（仮想マシン）での処理を自動的にスケジュールしたり、タスクの実行状況を監視したりできます。\nただ、Azure Batch に関する日本語の情報はあまり多くないため、なかなか手を出しにくいという方も多いのではないでしょうか。\n今回は、Azure Batch を利用して物体検出モデル (YOLOv8) を動かしてみたので、その手順を共有したいと思います。\nhttps://learn.microsoft.com/ja-jp/az...",
          "link": "https://zenn.dev/microsoft/articles/20240119_azure_batch",
          "publishedOn": "2024-01-20T12:46:19.000Z",
          "wordCount": 2410,
          "title": "Azure Batch で物体検出モデル (YOLOv8) を動かしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A7-YJKxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Batch%2520%25E3%2581%25A7%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2520%2528YOLOv8%2529%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazuyan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cxbnRHSDJHMnZoU3RSank3cFlUTVlXTER5X1hEYmFRMEk3SEpESWc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A7-YJKxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Batch%2520%25E3%2581%25A7%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2520%2528YOLOv8%2529%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazuyan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cxbnRHSDJHMnZoU3RSank3cFlUTVlXTER5X1hEYmFRMEk3SEpESWc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/8c30ef3781ff8c",
          "author": "JboyHashimoto",
          "description": "🌓ユングの心理学で考えられたものらしい?\n検索してたら、YUMEMIさんのサイトに辿り着いた?\nhttps://notion.yumemi.co.jp/シャドーについて\nなんかまた技術の話からズレたネタと思われそうですが後でします笑\n\n シャドーなるものはどうやってできるのか?\n昔から色々な人を見てきたけど、外食産業で働いていたときもITの仕事についてもそれぽい人を見たことがある。\n\n 🌔特徴はどんな感じか?\nわかりやすいサイトから引用した文章だとこんな感じ:\n\n一方で、小さい頃から「だらしない自分、弱い自分、頼りない自分」というものを自分が否定しながら生きてきた場合に、その否定して...",
          "link": "https://zenn.dev/joo_hashi/articles/8c30ef3781ff8c",
          "publishedOn": "2024-01-20T12:14:06.000Z",
          "wordCount": 251,
          "title": "シャドーなるものを見たことがある",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3pWEUWnc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%2589%25E3%2583%25BC%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E8%25A6%258B%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3pWEUWnc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%2589%25E3%2583%25BC%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E8%25A6%258B%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/khun_aa/articles/6a9277e18a667a",
          "author": "Takuto Onikubo",
          "description": "経緯\n\nクラウド上の計算機サーバで機械学習モデルをhugging faceからダウンロードしようとした。\n公式ではgit-lfsを使うように書いてあったが、リモート環境でsudoが使えなかったためインストールできない。\nそこでpythonのhuggingface_hubを使ってダウンロードした。\n\n\n 方法\n\n以下のコードをpythonで実行\n\nimport huggingface_hub\n \nmodel_id = \"stabilityai/stable-diffusion-2-1-base\"  # レポジトリ名\nlocal_dir = \"models\"  # 保存先フォルダ名\nhu...",
          "link": "https://zenn.dev/khun_aa/articles/6a9277e18a667a",
          "publishedOn": "2024-01-20T10:56:22.000Z",
          "wordCount": 157,
          "title": "git-lfsを使わずにhugging faceのレポジトリをダウンロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_ayfzT0J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:git-lfs%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2581%25ABhugging%2520face%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuto%2520Onikubo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5Njc1OGJkZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_ayfzT0J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:git-lfs%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2581%25ABhugging%2520face%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuto%2520Onikubo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5Njc1OGJkZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ahoxa/articles/534768300cda5c",
          "author": "Ahoxa",
          "description": "はじめに\nこんにちは！当記事をご覧くださりありがとうございます！\nこの記事はProgateで学んだGoの知識をアウトプットする場としてまとめたものです。\nPythonやRubyなど比較的簡単な言語の基礎知識を学んでいることを前提とし、比較演算子や文字の連結、四則演算などについては概ねどの言語でも同じなので省略しています。\nまた、筆者がPython畑出身ですのでPythonから見たGoの感想をところどころ述べています。\n指摘などございましたら是非コメントお願いいたします。\nでは、始めていきましょう！！\n\n Hello,Worldからif,elseまで\nここではほかの言語でも共通である文...",
          "link": "https://zenn.dev/ahoxa/articles/534768300cda5c",
          "publishedOn": "2024-01-19T16:55:16.000Z",
          "wordCount": 878,
          "title": "Goで最低限必要な文法たち",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iSUBvr02--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2581%25A7%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E6%2596%2587%25E6%25B3%2595%25E3%2581%259F%25E3%2581%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ahoxa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0dDaDh2ZHhzNGl5ckJsRnlKUzQ2YVc4d2RoUnc1RXVweEJlTjk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iSUBvr02--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2581%25A7%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E6%2596%2587%25E6%25B3%2595%25E3%2581%259F%25E3%2581%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ahoxa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0dDaDh2ZHhzNGl5ckJsRnlKUzQ2YVc4d2RoUnc1RXVweEJlTjk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nihiru/articles/1589cf2706313c",
          "author": "Nihiru",
          "description": "はじめに\nDjangoでレシピの投稿サイトを開発していて、ユーザーが操作した後に操作結果を通知したいと思いました。\nそこでDjangoで標準提供されているフラッシュメッセージを使って実装したので、備忘録としてまとめておきます。\n\n Viewでメッセージフレームワークを読み込む\nまずは、通知させたい画面のViewファイルでメッセージフレームワークを読み込みます。\nfrom django.contrib import messages\nmessagesをimportすることで、メッセージフレームワークを使用できます。\nこのメッセージフレームワークはsettings.pyに初めから追加され...",
          "link": "https://zenn.dev/nihiru/articles/1589cf2706313c",
          "publishedOn": "2024-01-19T02:41:09.000Z",
          "wordCount": 562,
          "title": "フラッシュメッセージを実装してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CnKSXSYQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nihiru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEtPVVgwOTdDdGF4S2d1MDdYUnFzNkJrM29VS2xmZmNydXROVFA0RVNwNnE0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CnKSXSYQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nihiru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEtPVVgwOTdDdGF4S2d1MDdYUnFzNkJrM29VS2xmZmNydXROVFA0RVNwNnE0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hashito/articles/d315135388fd66",
          "author": "hashito",
          "description": "はじめに\nChat GPTは結構なんでも出来るのですが、結果をいくつかに分けて",
          "link": "https://zenn.dev/hashito/articles/d315135388fd66",
          "publishedOn": "2024-01-19T00:33:13.000Z",
          "wordCount": 76,
          "title": "Chat GPT APIにてJSONで結果を取得する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XWbIYKuQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chat%2520GPT%2520API%25E3%2581%25AB%25E3%2581%25A6JSON%25E3%2581%25A7%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hashito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMmRhOTE0MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XWbIYKuQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chat%2520GPT%2520API%25E3%2581%25AB%25E3%2581%25A6JSON%25E3%2581%25A7%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hashito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMmRhOTE0MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/aay/articles/96a5f0dab25d0b",
          "author": "ayaka",
          "description": "はじめに\n機械学習を学習していると、データ処理のフェーズにおいてlistとarrayの扱いに躓いた。そこで、本記事ではlistとarrayの特徴をまとめ、それぞれの違いとlist->array、array->listの変換についてもまとめていこうと思う。\n\n list\nPythonの標準のリスト。\n\n リスト内の要素は型の違うデータを混在することができる。\na = [1, 2, 3, 4, 5]\nb = [1, 3.141592, 'apple']\n\nprint(a) # [1, 2, 3, 4, 5]\nprint(b) # [1, 3.141592, 'apple']\n...",
          "link": "https://zenn.dev/aay/articles/96a5f0dab25d0b",
          "publishedOn": "2024-01-18T11:28:10.000Z",
          "wordCount": 604,
          "title": "listとarrayの違い",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UvcixSLu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:list%25E3%2581%25A8array%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ayaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0N2JhMzQyODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UvcixSLu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:list%25E3%2581%25A8array%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ayaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0N2JhMzQyODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hatemoto/articles/c3fae865e257ab",
          "author": "hatemoto",
          "description": "はじめに\nエコーボットの作成\n環境構築\n\n 開発環境\n\nWSL(Ubuntu)\nPython 3.10.12\n\n\n トークンの設定\nAppトークンとBotトークンは，ボットの設定をしている時にメモしたものを使用する．\nAPP_TOKEN = \"xapp-x-xxxxxxxxxx-xxxxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\nBOT_TOKEN = \"xoxb-xxxxxxxxxxxxxxx-xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxx\"\n\n イベントが発生したときに受け取る情報\nイベントが発生したときにサーバーか...",
          "link": "https://zenn.dev/hatemoto/articles/c3fae865e257ab",
          "publishedOn": "2024-01-18T09:03:33.000Z",
          "wordCount": 487,
          "title": "Slackボット① エコーボット",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a72j6Q_A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E2%2591%25A0%2520%25E3%2582%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hatemoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3MDIyOTY0MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a72j6Q_A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E2%2591%25A0%2520%25E3%2582%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hatemoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3MDIyOTY0MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hatemoto/articles/ce321ede465877",
          "author": "hatemoto",
          "description": "はじめに\nSlackボットを作成するための環境構築．\n\n 開発環境\n\nWSL\nPython 3.10.12\n\n\n Slackボットの設定\n\n ボットの作成\n\nSlackを開く\nボットを追加したいワークスペースを開く\n「設定と管理」 > 「アプリを管理する」\n右上の「ビルド」\n「Create New App」 > 「From scratch」を選択\n\n\n「App Name」にアプリの名前，「Pick a workspace to develop your app in:」からボットを追加したいワークスペースを選択し，「Create App」をクリック\n\n\n\n\n スコープの設...",
          "link": "https://zenn.dev/hatemoto/articles/ce321ede465877",
          "publishedOn": "2024-01-18T08:26:12.000Z",
          "wordCount": 345,
          "title": "Slackボット ⓪ 環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GjNBb_Ut--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%2520%25E2%2593%25AA%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hatemoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3MDIyOTY0MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GjNBb_Ut--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%2520%25E2%2593%25AA%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hatemoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3MDIyOTY0MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/dataheroes/articles/0f04ead21013a3",
          "author": "Kentaro Maeda",
          "description": "問題\nLENGTH関数は一部の絵文字や外国語(書記素クラスタ)を正しくカウントできない。\n\n絵文字だけならともかく、フランス語や韓国語などのメジャーな言語でも問題は発生する。\n\n 解決策\n正確性が必要な場合、PythonなどのUDFでカウントする必要がある。\n以下のように正しく文字列をカウントするUDFを作る。\nCREATE OR REPLACE FUNCTION COUNT_GC(s varchar)\nreturns number\nlanguage python\nruntime_version = 3.11\npackages = ('pyicu')\nhandler = 'count...",
          "link": "https://zenn.dev/dataheroes/articles/0f04ead21013a3",
          "publishedOn": "2024-01-18T08:21:26.000Z",
          "wordCount": 366,
          "title": "[Snowflake] SELECT LENGTH('🙆‍♀️')= 4 ←???",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Oc0Veo4R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BSnowflake%255D%2520SELECT%2520LENGTH%2528%2527%2520%2527%2529%253D%25204%2520%25E2%2586%2590%253F%253F%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kentaro%2520Maeda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDFkYTVlNTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Snowflake%2520Data%2520Heroes%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYTJlMzdkM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Oc0Veo4R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BSnowflake%255D%2520SELECT%2520LENGTH%2528%2527%2520%2527%2529%253D%25204%2520%25E2%2586%2590%253F%253F%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kentaro%2520Maeda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDFkYTVlNTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Snowflake%2520Data%2520Heroes%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYTJlMzdkM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hatemoto/articles/09dd1a87ff4aa0",
          "author": "hatemoto",
          "description": "はじめに\nPythonでWin32 APIを扱う．\n基本的はウィンドウの作成を行う．\n\n 開発環境\n\nWindows10 Home\nPyCharm\nPython3.11\n\n\n 定数の定義\n\n win_const.py\nWHITE_BRUSH = 0\nBLACK_BRUSH = 2\n\nCS_HREDRAW = 0x0002\nCS_VREDRAW = 0x0001\n\nCW_USEDEFAULT = 0x80000000\n\nIDC_ARROW = 32512\n\nWS_OVERLAPPEDWINDOW = 0x00CF0000\n\nWM_DESTROY = 0x0002\n\nSW_SHOWDEF...",
          "link": "https://zenn.dev/hatemoto/articles/09dd1a87ff4aa0",
          "publishedOn": "2024-01-18T03:34:10.000Z",
          "wordCount": 1111,
          "title": "PythonでWin32 API ①（ウィンドウの作成）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---j1amBFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Win32%2520API%2520%25E2%2591%25A0%25EF%25BC%2588%25E3%2582%25A6%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A6%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hatemoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3MDIyOTY0MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---j1amBFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Win32%2520API%2520%25E2%2591%25A0%25EF%25BC%2588%25E3%2582%25A6%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A6%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hatemoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3MDIyOTY0MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kubomi/articles/214a2ced7f2562",
          "author": "kubomi",
          "description": "Pythonを使用しようとした際に zsh: command not found: python というエラーに直面したので、この問題の原因と解決策を簡単に記録します。\n\n 原因\nこのエラーは、主に以下の理由で発生します：\n\nPythonがインストールされていない\nPythonがシステムのPATHに含まれていない\nPythonコマンドが異なる名前でインストールされている（例えばpython3）\n\n\n 解決策\n\n Pythonのインストールを確認\nまず、Pythonがシステムにインストールされているかを確認しましょう。ターミナルで以下のコマンドを実行します：\npython3 --versi...",
          "link": "https://zenn.dev/kubomi/articles/214a2ced7f2562",
          "publishedOn": "2024-01-17T07:58:31.000Z",
          "wordCount": 223,
          "title": "zsh: command not found: pythonを解決する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--snQQn6f6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zsh%253A%2520command%2520not%2520found%253A%2520python%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kubomi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdTd0d5V2FJMXkzOGx5N1QwX3lnMjJCSUpiVm9lWWsyTHBDUHd3QUx0b05fbj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--snQQn6f6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zsh%253A%2520command%2520not%2520found%253A%2520python%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kubomi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdTd0d5V2FJMXkzOGx5N1QwX3lnMjJCSUpiVm9lWWsyTHBDUHd3QUx0b05fbj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/bonsai_engineer/articles/409678cf22382a",
          "author": "盆栽エンジニア",
          "description": "感情分析の実装方法\n感情分析は、自然言語処理技術を使用して、与えられたテキストから感情や感情のニュアンスを抽出するタスクです。この記事では、Pythonを使用して感情分析を実装する基本的な手順を説明します。\n\n 必要なライブラリのインストール\n最初に、感情分析に使用するライブラリをインストールします。以下のコマンドでNLTKとTextBlobをインストールします。\npip3 install nltk\npip3 install textblob\n\n NLTKのデータセットのダウンロード\n次に、データセットをダウンロードします。\n\ndownload.py\nimport nltk\nnltk...",
          "link": "https://zenn.dev/bonsai_engineer/articles/409678cf22382a",
          "publishedOn": "2024-01-17T02:35:24.000Z",
          "wordCount": 683,
          "title": "自然言語処理（NLP）技術を用いた感情分析の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Dc2CbuCF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2588NLP%25EF%25BC%2589%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Dc2CbuCF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2588NLP%25EF%25BC%2589%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/junko_ai/articles/33ab68f0dcebc8",
          "author": "junko",
          "description": "Pythonを使った日付関連のデータ処理を行う際に、ちょこちょこ使うコードをまとめました。エラー解決などに役立ちます。\npandasライブラリを使用するため、最初に下記を加えてからコードをいれていきます。\nimport pandas as pd\nサンプルデータとして train_df データフレームを使用し、日付情報は date カラムに格納されていると仮定します。\n\n データ型確認\nデータフレーム内の各カラムのデータ型を確認します。\ntrain_df.dtypes\n\n カラム確認\nデータフレーム内のカラム名のリストを取得します。\ntrain_df.columns\n\n データフレームの概...",
          "link": "https://zenn.dev/junko_ai/articles/33ab68f0dcebc8",
          "publishedOn": "2024-01-17T02:28:07.000Z",
          "wordCount": 329,
          "title": "Pythonで日付関連の処理を行う時に、重宝するコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--egjm_NGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E9%2596%25A2%25E9%2580%25A3%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2599%2582%25E3%2581%25AB%25E3%2580%2581%25E9%2587%258D%25E5%25AE%259D%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:junko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNTdjMjg4N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--egjm_NGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E9%2596%25A2%25E9%2580%25A3%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2599%2582%25E3%2581%25AB%25E3%2580%2581%25E9%2587%258D%25E5%25AE%259D%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:junko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNTdjMjg4N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hgmdev/articles/202401150800",
          "author": "H.G.M Developers🛠️",
          "description": "保育ICTを愛するみなさまこんにちは、H.G.M developers T.K です。\n\n はじめに\nRuffにformatter機能(Blackの機能)が追加されたことを知ったことが作業に至るきっかけでした。\n所属プロジェクトではlinterは既にFlake8, isort, Blackを導入しておりましたが、Ruffの導入で１つに統合できかつRust製で高速に処理できるため業務改善に繋がるのではないかと考え作業に当たりました。\n\n この記事を読んで欲しい人\n\nPythonの開発でlinterを検討している方\n開発エディタでVS Codeを利用している方\n\n\n 開発環境\n\nMac M1...",
          "link": "https://zenn.dev/hgmdev/articles/202401150800",
          "publishedOn": "2024-01-16T02:37:35.000Z",
          "wordCount": 801,
          "title": "Ruff（Pythonのlinter）を導入してみた🦾",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s0BPdaSf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ruff%25EF%25BC%2588Python%25E3%2581%25AElinter%25EF%25BC%2589%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:H.G.M%2520Developers%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliNDQ4NTA1NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s0BPdaSf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ruff%25EF%25BC%2588Python%25E3%2581%25AElinter%25EF%25BC%2589%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:H.G.M%2520Developers%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliNDQ4NTA1NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kobayutapon/articles/490d93ab683337",
          "author": "コバユタ",
          "description": "Raspberry Pi OSのベースがBullseyeベースになっていろいろカメラ関連が変わったのでまとめておきます。\n\n カメラの設定\n\n パッケージの追加\n必要なパッケージを追加します。\nsudo apt install libcamera-apps\n\n デバイスツリーの設定\n次に、/boot/config.txtにカメラ用のdevice treeの設定を追記します。\n公式カメラV1の場合は以下の通りになります。\ndtoverlay=ov5647\n指定するパラメータは以下の通り（出展元はこちら：https://www.raspberrypi.com/documentation/co...",
          "link": "https://zenn.dev/kobayutapon/articles/490d93ab683337",
          "publishedOn": "2024-01-16T01:52:44.000Z",
          "wordCount": 402,
          "title": "Raspberry Pi Zero2 Wでカメラ・OpenCV環境を整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VYUzUMn8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Zero2%2520W%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2583%25BBOpenCV%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%2590%25E3%2583%25A6%25E3%2582%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2J6SVJNTHZLREJYd0NFYUQyaDctMktyYk9rU3F5NjNLSWtodEk3UzlMQmZvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VYUzUMn8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Zero2%2520W%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2583%25BBOpenCV%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%2590%25E3%2583%25A6%25E3%2582%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2J6SVJNTHZLREJYd0NFYUQyaDctMktyYk9rU3F5NjNLSWtodEk3UzlMQmZvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/anieca/articles/8dafcd97560ca5",
          "author": "Anieca",
          "description": "よく忘れるのでメモしています\n公式の手順を確認したほうが良いです\n\n 特権ユーザーでやること\nとりあえず sudo user を作るだけ\n# 更新\napt update\napt upgrade -y\n\n# user 追加\nadduser anieca\nusermod -aG sudo anieca\n\n 通常ユーザーでやること\nfish, Python, AWS, Docker の設定\n# python\nsudo apt install build-essential zlib1g-dev libssl-dev liblzma-dev libsqlite3-dev libffi-dev l...",
          "link": "https://zenn.dev/anieca/articles/8dafcd97560ca5",
          "publishedOn": "2024-01-16T00:22:33.000Z",
          "wordCount": 696,
          "title": "Ubuntu22.04 の EC2 を起動したらやること",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5HAxNaAS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu22.04%2520%25E3%2581%25AE%2520EC2%2520%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2582%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Anieca%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDakJoZ0dFejZDQUN6NEpia3MxMVFzaEM2bGFId2Vsc1J5SlNDPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5HAxNaAS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu22.04%2520%25E3%2581%25AE%2520EC2%2520%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2582%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Anieca%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDakJoZ0dFejZDQUN6NEpia3MxMVFzaEM2bGFId2Vsc1J5SlNDPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}