{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/tfutada/articles/acf8adbb2ba5be",
          "author": "TF",
          "description": "この記事はオープンソースのベクトル検索エンジンQdrant(クワッドラント)の使い方と類似記事検索についての前編になります。\n\n初心者向けにコンセプトの理解を優先し、難しい用語の使用はあえて避けています。\n\nhttps://qdrant.tech/\n\n 使用するもの\n\n\nQdrant オープンソースベクトル検索エンジン (Rust実装)\n\nGiNZA spaCy ドキュメントのベクトル化\n\nlivedoorニュースコーパス ライブドアのニュース記事 (株式会社ロンウィット)\nPython 3.10\n\n\n Qdrantとは？\nオープンソースのRust製ベクトル検索エンジンです。クライアント...",
          "link": "https://zenn.dev/tfutada/articles/acf8adbb2ba5be",
          "publishedOn": "2022-09-20T00:55:50.000Z",
          "wordCount": 3175,
          "title": "Qdrant ベクトル検索エンジン - 前編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JHJtJUcd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Qdrant%2520%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%2520-%2520%25E5%2589%258D%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JHJtJUcd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Qdrant%2520%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%2520-%2520%25E5%2589%258D%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shinue/articles/40560352dcf70b",
          "author": "shin-ue",
          "description": "はじめに\n異常検知AIソフトウェア・クラウドサービスを提供しているアダコテックでエンジニアをしているshin-ueです！\n今回は、弊社内で保有する電子部品を撮像した画像データに対して、異常検知を実施してみます。\n\n\n そもそも異常検知って？\n異常検知における異常とは、みなさん何を思い浮かべますか？\n例えば、毎日休まず周期的な信号を出力してくれるシステムが一家に一台あったとします。\n機械とよくケンカする僕みたいな人間は「ほんとうに周期的な信号だしてるのか！？」と疑いをかけてモニタリングしてしまいます。\n\nt=9~11の出力値がいつもと違う変化をしているぞ・・・不良品だコイツこのやろう！...",
          "link": "https://zenn.dev/shinue/articles/40560352dcf70b",
          "publishedOn": "2022-09-20T00:05:42.000Z",
          "wordCount": 1021,
          "title": "異常検知技術を比較してみた（ルールベース, HLAC, PatchCore）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6vEDyj6B--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin-ue%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%252C%2520HLAC%252C%2520PatchCore%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUSVVQSVpEV05WYnEwdmhiX19tcU1BTXkzaFloQmFzY0pmWldxPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6vEDyj6B--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin-ue%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%252C%2520HLAC%252C%2520PatchCore%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUSVVQSVpEV05WYnEwdmhiX19tcU1BTXkzaFloQmFzY0pmWldxPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/motokoike/articles/2520a473887adc",
          "author": "元小池",
          "description": "1.基本設定編\nVSCode（Visual Studio Code）自体のおすすめの基本設定を紹介します。\n!\nデフォルトは、無効化されているため、機能を有効にする必要があります。\n\n\n 1.1 Insert Final Newline\nファイル保存時にファイルの最終行は改行を必須にする。\n\n\n 1.2 Trim Trailing Whitespace\nファイル保存時に行末の空白（半角スペース）を自動で削除する。\n\n\n 2.拡張機能編\nVSCode（Visual Studio Code）自体のおすすめの拡張機能を紹介します。\n\n 2.1 Japanese Language Pack ...",
          "link": "https://zenn.dev/motokoike/articles/2520a473887adc",
          "publishedOn": "2022-09-19T16:08:52.000Z",
          "wordCount": 286,
          "title": "pythonでVSCodeをコーディングする際のおすすめの基本設定・拡張機能",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a7ABDvaz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%2585%2583%25E5%25B0%258F%25E6%25B1%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7VSCode%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%25BB%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ITFAzeGN6LS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkNjI1NGRmNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a7ABDvaz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%2585%2583%25E5%25B0%258F%25E6%25B1%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7VSCode%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%25BB%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ITFAzeGN6LS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkNjI1NGRmNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/soh92/articles/9863ae6a511f72",
          "author": "ソウ",
          "description": "経緯度を逆ジオコーディング\nGoogleMaps APIのreverse_geocodeを使って経緯度から所在を取得します。\n  googleapikey = 'apikey'\n  gmaps = googlemaps.Client(key=googleapikey)\n\n  geocord = lat + \", \" + lon\n\n  results = gmaps.reverse_geocode((geocord), language='ja')\n  add = [d.get('formatted_address') for d in results]\n  list_add = a...",
          "link": "https://zenn.dev/soh92/articles/9863ae6a511f72",
          "publishedOn": "2022-09-19T08:45:36.000Z",
          "wordCount": 499,
          "title": "PLATEAUのCityGMLに所在（建物の住所）を追加するスクリプトを作った。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8Hs-yglu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25BD%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PLATEAU%25E3%2581%25AECityGML%25E3%2581%25AB%25E6%2589%2580%25E5%259C%25A8%25EF%25BC%2588%25E5%25BB%25BA%25E7%2589%25A9%25E3%2581%25AE%25E4%25BD%258F%25E6%2589%2580%25EF%25BC%2589%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1reVgxTmQwXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmYTYxNzRiNDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8Hs-yglu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25BD%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PLATEAU%25E3%2581%25AECityGML%25E3%2581%25AB%25E6%2589%2580%25E5%259C%25A8%25EF%25BC%2588%25E5%25BB%25BA%25E7%2589%25A9%25E3%2581%25AE%25E4%25BD%258F%25E6%2589%2580%25EF%25BC%2589%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1reVgxTmQwXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmYTYxNzRiNDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/pejpo/articles/5080662546764c",
          "author": "Dr_O",
          "description": "はじめに\nPythonで書いたプログラムをパッケージにする際、pyproject.tomlを使う方法が、今後取り入れられていくということを知りました。また、パッケージマネージャとしてPoetryを使い、pyproject.tomlを作成できるということも判りました。\nそこでまず、Poetryをインストールしようとしたのですが、window10へのインストールで、引っかかったところがあったので、メモとして、やったことを残します。記事中、環境変数の設定に言及していますが、他への影響もあると思うので、ご自身の判断でお願いします。\n\n 概要\n英語ではありますが、公式サイトを見ながらインストー...",
          "link": "https://zenn.dev/pejpo/articles/5080662546764c",
          "publishedOn": "2022-09-19T08:44:25.000Z",
          "wordCount": 214,
          "title": "Poetryをwindows10にinstallしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c609wkfp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Dr_O%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Poetry%25E3%2582%2592windows10%25E3%2581%25ABinstall%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10Wm9YMXVpMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c609wkfp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Dr_O%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Poetry%25E3%2582%2592windows10%25E3%2581%25ABinstall%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10Wm9YMXVpMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/python3654/articles/9693f6a56beeea",
          "author": "とりごん",
          "description": "はじめに\nhttps://huggingface.co/docs/transformers/training\n\n ファインチューニング\n事前学習済みのモデルを使用することには大きな利点があります。 計算コストを削減し、最先端のモデルをゼロから学習することなく使用できます。Transformersを使うと、幅広いタスク向けの何千もの事前学習済みモデルにアクセスできます。事前学習済みのモデルを使用する場合、タスクに固有のデータセットでモデルを学習します。これはファインチューニングとして知られており非常に有用な手法です。\n\n データセットの準備\n事前学習済みのモデルをファインチューニングす...",
          "link": "https://zenn.dev/python3654/articles/9693f6a56beeea",
          "publishedOn": "2022-09-19T06:39:19.000Z",
          "wordCount": 660,
          "title": "transformersのtutorialを読んでみた - part3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B4cADP3X--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:transformers%25E3%2581%25AEtutorial%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2520-%2520part3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B4cADP3X--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:transformers%25E3%2581%25AEtutorial%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2520-%2520part3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/jim_soros/articles/4d10ce4b617198",
          "author": "jim_soros",
          "description": "●結論\nmap()よりもfor文が全てにおいて僅かに早い。(python3.10)\n\n・検証A、1万字の文字列をジェネレーターにした後、繋げて文字列を作る(abc...➡abc...)\n・検証B、1万字の文字列をジェネレーターにした後、@文字を挟んで繋げて文字列を作る(abc...➡a@b@c@...)\nそれぞれに対して\n・検証1、for文 {VS} map()\n・検証2、for文のネスト(検証A/Bを10回繰り返す) {VS} map()のネスト(検証A/Bを10回繰り返す)\n・検証3、for文の2重ネスト(検証A/Bを10回10回繰り返す) {VS} map()の2重ネスト(検証A/...",
          "link": "https://zenn.dev/jim_soros/articles/4d10ce4b617198",
          "publishedOn": "2022-09-19T05:54:38.000Z",
          "wordCount": 1943,
          "title": "都市伝説pythonのfor文とmap()の処理速度は全然違う説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j0ogt1N---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jim_soros%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2583%25BD%25E5%25B8%2582%25E4%25BC%259D%25E8%25AA%25ACpython%25E3%2581%25AEfor%25E6%2596%2587%25E3%2581%25A8map%2528%2529%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E9%2580%259F%25E5%25BA%25A6%25E3%2581%25AF%25E5%2585%25A8%25E7%2584%25B6%25E9%2581%2595%25E3%2581%2586%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00STJGRktscy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjYjA5YmQyMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j0ogt1N---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jim_soros%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2583%25BD%25E5%25B8%2582%25E4%25BC%259D%25E8%25AA%25ACpython%25E3%2581%25AEfor%25E6%2596%2587%25E3%2581%25A8map%2528%2529%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E9%2580%259F%25E5%25BA%25A6%25E3%2581%25AF%25E5%2585%25A8%25E7%2584%25B6%25E9%2581%2595%25E3%2581%2586%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00STJGRktscy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjYjA5YmQyMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/fcbda5d2dc1362",
          "author": "osn_Lofi",
          "description": "はじめに\n機械学習アプリを超爆速で作ることができるライブラリーのご紹介です。\nGradioというライブラリーになります。\n \nhttps://gradio.app/\n \n百聞は一見にしかずで、早速、実装してみましょう。\n \n\n <実装するアプリの内容>\n名前（●●）を入力したら、Hello ●●！と返してくれるアプリの実装です。\n \n!\nGoogleColaboratoryで実装できます。\n\n \n\n gradioのインストール\n!pip install gradio\n\n 実装\nたった、これだけです。\n画像系などにも対応しています。詳細は冒頭のリンクをご覧ください。\nimp...",
          "link": "https://zenn.dev/robes/articles/fcbda5d2dc1362",
          "publishedOn": "2022-09-19T05:52:33.000Z",
          "wordCount": 281,
          "title": "【Python】これは驚いた！Gradioを使えば機械学習アプリを超爆速で実装できる！！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GlbkQGj---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%2593%25E3%2582%258C%25E3%2581%25AF%25E9%25A9%259A%25E3%2581%2584%25E3%2581%259F%25EF%25BC%2581Gradio%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25B0%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%25B6%2585%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GlbkQGj---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%2593%25E3%2582%258C%25E3%2581%25AF%25E9%25A9%259A%25E3%2581%2584%25E3%2581%259F%25EF%25BC%2581Gradio%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25B0%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%25B6%2585%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/424cb97503d16e",
          "author": "osn_Lofi",
          "description": "はじめに\nSNSでのツイートや、ECサイトでの購買ビューから、消費者の行動や嗜好を分析するの使われる手法として、トピックモデルがあります。\nここでは、トピックモデルのうち最も有名なLDA(潜在的ディリクレ配分法） について、簡単な概要とともにPythonを使ってどのように実装していくのかを紹介していきます。\nまた実装結果について、PyLDAvisやワードクラウドを使って可視化していきたいと思います。\n \n\n トピックモデル（LDA)とは\nトピックモデルとは、文書が複数の潜在的なトピックから確率的に生成されると仮定したモデルです。トピックモデルでは、トピックごとに単語の出現頻度分布を想...",
          "link": "https://zenn.dev/robes/articles/424cb97503d16e",
          "publishedOn": "2022-09-19T05:21:10.000Z",
          "wordCount": 2054,
          "title": "【自然言語処理】【Python】トピックモデル（LDA）を実装し、PyLDAvisを使ってインタラクティブに可視化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UgcfELIK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2588%25E3%2583%2594%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25EF%25BC%2588LDA%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2580%2581PyLDAvis%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2581%25AB%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UgcfELIK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2588%25E3%2583%2594%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25EF%25BC%2588LDA%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2580%2581PyLDAvis%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2581%25AB%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kangetsu_121/articles/d99e8306c0d895",
          "author": "kangetsu_121",
          "description": "文学作品の冒頭を読んで作者を当てる Web サービス、「文豪推理」を友人の @kokokocococo555 さんと開発しました。\n\n文豪推理問題\n\nTwitterシェア時の OGP 表示\nユーザー登録などはなくすぐ遊べるので、https://bungo-suiri.tailoor.dev からぜひ遊んでみてください！\n2人とも本職 PG ではなく、試行錯誤しながら開発しました。\n初めてのまともな個人開発で学びが多くあったので、サービス紹介と経験の還元を目的として本記事にまとめます。\n!\n開発本職の方から見ると改善点など多々あるかと思いますが、記事のコメント、コンタクトフォームなどからご...",
          "link": "https://zenn.dev/kangetsu_121/articles/d99e8306c0d895",
          "publishedOn": "2022-09-19T05:18:10.000Z",
          "wordCount": 1787,
          "title": "【個人開発】文学作品の冒頭を読んで作者を当てる Web サービスを開発しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L0UnxhbM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kangetsu_121%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E6%2596%2587%25E5%25AD%25A6%25E4%25BD%259C%25E5%2593%2581%25E3%2581%25AE%25E5%2586%2592%25E9%25A0%25AD%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E4%25BD%259C%25E8%2580%2585%25E3%2582%2592%25E5%25BD%2593%25E3%2581%25A6%25E3%2582%258B%2520Web%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jUTdrZVpCbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmOTU5MmJmYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--L0UnxhbM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kangetsu_121%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E6%2596%2587%25E5%25AD%25A6%25E4%25BD%259C%25E5%2593%2581%25E3%2581%25AE%25E5%2586%2592%25E9%25A0%25AD%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E4%25BD%259C%25E8%2580%2585%25E3%2582%2592%25E5%25BD%2593%25E3%2581%25A6%25E3%2582%258B%2520Web%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jUTdrZVpCbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmOTU5MmJmYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/technicarium/articles/d836fc075748af",
          "author": "テク二カリウム",
          "description": "Lチカの動作確認もできたので次の目標であった人感センサー（焦電型赤外線センサー）で検知したらLine通知をさせてみました。\n!\n【注意】\n\nGPIOとセンサーの間に保護抵抗を入れていません、本来は入れずべきかも。\n検証プログラムのため単純な無限ループにしています。\nプログラムは例外処理をしていません。\n終了は強制終了させてしまうのでGPIOのcleanup()を呼び出していません。\nrequestパッケージとRPi.GPIOパッケージはインストール済\n\n\n\n Raspberry Piと焦電型赤外線センサーの接続\n\n ジャンパーワイヤー作成と接続\n\n使用した焦電型赤外線センサーとの接続は3...",
          "link": "https://zenn.dev/technicarium/articles/d836fc075748af",
          "publishedOn": "2022-09-19T04:56:13.000Z",
          "wordCount": 604,
          "title": "Raspberry Piと人感センサーでLINE通知",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N_udPEyw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%25E3%2581%25A8%25E4%25BA%25BA%25E6%2584%259F%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2581%25A7LINE%25E9%2580%259A%25E7%259F%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N_udPEyw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%25E3%2581%25A8%25E4%25BA%25BA%25E6%2584%259F%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2581%25A7LINE%25E9%2580%259A%25E7%259F%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/loss_function",
          "author": "mimitako",
          "description": "機械学習と損失関数\n機械学習における損失関数は精度と対を成す存在です。精度を上げるなら損失関数を小さくすることが求められます。\nでも、経験が少ない私のような初心者はほんとかな？とひねくれて考えるものです。\nじゃぁ、見てみようじゃないかということで下記の記事で出てきた結果を元に、傾向がちゃんとあるのかどうかを確認してみます。\nhttps://zenn.dev/mimitako/articles/c4085419e963b5\nhttps://zenn.dev/mimitako/articles/random_statement\n\n 損失関数の結果を確認する。\nrandom_stateを0...",
          "link": "https://zenn.dev/mimitako/articles/loss_function",
          "publishedOn": "2022-09-19T04:28:19.000Z",
          "wordCount": 132,
          "title": "機械学習の損失関数を見てみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DE4oaE5N--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AE%25E6%2590%258D%25E5%25A4%25B1%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E8%25A6%258B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DE4oaE5N--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AE%25E6%2590%258D%25E5%25A4%25B1%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E8%25A6%258B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nmemoto/articles/analyze-alb-access-log-with-pandas",
          "author": "nmemoto",
          "description": "AWS ALBのアクセスログをPandasを使い、ALBが返したレスポンスのステータスコード別分間件数、ALBの背後にあるターゲットグループがALBに返したステータスコード別分間件数、ターゲットグループの処理時間の分間パーセンタイル値を集計するためのPythonスクリプトを作成しました。\n\n Pythonスクリプトの説明\nこの集計を行うために作成したスクリプトを分割して説明します。\n\n ログをデータフレームに変換\n以下のスクリプトでログをデータフレームとしました。なお、集計したい複数のアクセスログは予めスクリプト内のdir_pathに格納している前提としています。\nALBのアクセスログの...",
          "link": "https://zenn.dev/nmemoto/articles/analyze-alb-access-log-with-pandas",
          "publishedOn": "2022-09-19T00:16:46.000Z",
          "wordCount": 2051,
          "title": "AWS ALBのアクセスログをPandasで集計する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HSH0B3_s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nmemoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AWS%2520ALB%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592Pandas%25E3%2581%25A7%25E9%259B%2586%25E8%25A8%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oUlluMDBMeS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0ZTAwYzYzNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HSH0B3_s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nmemoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AWS%2520ALB%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592Pandas%25E3%2581%25A7%25E9%259B%2586%25E8%25A8%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oUlluMDBMeS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0ZTAwYzYzNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/random_statement",
          "author": "mimitako",
          "description": "random_statement とは\n機械学習であるデータから訓練データとテストデータへ分割する際に sikit-learn の train_test_split を利用することが多いと思います。\nここでパラメータとして random_state というものが出てくるのですが、みんなどうやって決めているの？と疑問に思うことが多々あります。\nrandom_state は乱数の発生機ですが、seed 値を与えると、毎回同じ乱数を発生させるため再現性が得られます。\nランダムですがカオスではないので、ある法則に従っていると思って良さそうです。\nここで考えられるのが、random_state...",
          "link": "https://zenn.dev/mimitako/articles/random_statement",
          "publishedOn": "2022-09-18T23:51:13.000Z",
          "wordCount": 182,
          "title": "random_statementを考えてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XpULDUPp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:random_statement%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XpULDUPp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:random_statement%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/c4085419e963b5",
          "author": "mimitako",
          "description": "Tensorflow を使ってみる\n気になってはいたけど、使ったことがないんです。ということで、初めて Tensorflow を使ってみましたので記録も兼ねてここに記載します。\n\n 使用したライブラリ\n今回使用したライブラリは以下のとおりです。\npandas 1.2.3\nnumpy 1.20.2\ntensorflow 2.10.0\nscikit-learn 1.0.2\nseaborn 0.11.2\n\n タスクを定義\n今回は分類タスクである Iris ことあやめの分類を行います。この分類タスクは調べればすぐに出てきますので詳細は割愛します。まずは、基本的な流れを学ぶために、とりあえず走...",
          "link": "https://zenn.dev/mimitako/articles/c4085419e963b5",
          "publishedOn": "2022-09-18T14:14:15.000Z",
          "wordCount": 1643,
          "title": "Tensorflowを使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2EWdXYR3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Tensorflow%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2EWdXYR3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Tensorflow%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/koya6565/articles/9f05924666fbd2",
          "author": "T.S",
          "description": "（単なる偶然ですが）ちょうど3年前の9/18、dynamic parallelism in workflowsがStep Functionsでサポートされました。それ以前は、index参照したりChoiceやWaitでループ処理したり並列実行するためにもう一つワークフローを起動したり、Step Functions(以下、SFn)による動的な並列処理実装はまあまあ手間がかかりました。\nhttps://aws.amazon.com/about-aws/whats-new/2019/09/aws-step-functions-adds-support-for-dynamic-paralleli...",
          "link": "https://zenn.dev/koya6565/articles/9f05924666fbd2",
          "publishedOn": "2022-09-18T14:00:28.000Z",
          "wordCount": 1694,
          "title": "Step FunctionsのMap Stateによる動的並列処理の簡単な実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--u2F_eOdq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:T.S%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Step%2520Functions%25E3%2581%25AEMap%2520State%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%258B%2595%25E7%259A%2584%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03UmZkaUdFTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NzJjNmE3ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--u2F_eOdq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:T.S%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Step%2520Functions%25E3%2581%25AEMap%2520State%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%258B%2595%25E7%259A%2584%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03UmZkaUdFTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NzJjNmE3ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ddpn08/articles/stablediffusion-webui-colab",
          "author": "だだっこぱんだ",
          "description": "こんにちは、だだっこぱんだです。\n自分は普段、Colab上でwebuiを立ち上げてStableDiffusionで遊んでいます。\nしかし、モデルが変えにくかったり引数をいちいち記入するのが面倒だったりしたので、使いやすいようにノートブックを作りました。この記事では、その使い方をざっくり紹介します。\n\n 作ったもの\nStableDiffusionのいろんなwebuiを好きなモデルで簡単に実行できるColab用のノートブックをつくりました。\n\n リポジトリ\n👇こちらで公開しています\nhttps://github.com/ddPn08/stable-diffusion-webui-colab\n...",
          "link": "https://zenn.dev/ddpn08/articles/stablediffusion-webui-colab",
          "publishedOn": "2022-09-18T10:22:35.000Z",
          "wordCount": 272,
          "title": "StableDiffusionのいろんなWebUIたちをColabで使えるようにしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---SaXzaGM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2593%25E3%2581%25B1%25E3%2582%2593%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:StableDiffusion%25E3%2581%25AE%25E3%2581%2584%25E3%2582%258D%25E3%2582%2593%25E3%2581%25AAWebUI%25E3%2581%259F%25E3%2581%25A1%25E3%2582%2592Colab%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHRTBySGZ6M3dVbjZqVndpRG1iVUxTVFluSTNLSFl4VmFjdXJzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---SaXzaGM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2593%25E3%2581%25B1%25E3%2582%2593%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:StableDiffusion%25E3%2581%25AE%25E3%2581%2584%25E3%2582%258D%25E3%2582%2593%25E3%2581%25AAWebUI%25E3%2581%259F%25E3%2581%25A1%25E3%2582%2592Colab%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHRTBySGZ6M3dVbjZqVndpRG1iVUxTVFluSTNLSFl4VmFjdXJzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nishikoh/articles/f656f07bedf7eb",
          "author": "nishikoh",
          "description": "はじめに\nトランクベースの開発でCD(デリバリー/デプロイ)を良い感じにする方法がないか調べていたところFeatureFlagを試したくなりました。私が普段使っているWebAPIフレームワークのFastAPIでFeatureFlagを使ってみます。\n\n fastapi-featureflags\nFastAPI用に開発されたfastapi-featureflagsを使っていきます。これを使うことでFastAPIのエンドポイントからFeatureFlagの切り替えが出来ます。FeatureFlagの数がN個ある場合、何の工夫もしなければ2のN乗個の環境を用意して検証しますが、管理用のエン...",
          "link": "https://zenn.dev/nishikoh/articles/f656f07bedf7eb",
          "publishedOn": "2022-09-18T07:03:53.000Z",
          "wordCount": 862,
          "title": "FastAPIでFeatureFlagを使ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PoFOwN79--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nishikoh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:FastAPI%25E3%2581%25A7FeatureFlag%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01QUhaREN4VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MzI0MTlkMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PoFOwN79--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nishikoh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:FastAPI%25E3%2581%25A7FeatureFlag%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01QUhaREN4VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MzI0MTlkMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/cazziwork/articles/885e9f88ccf3fd",
          "author": "Takeshi Haraguchi",
          "description": "この記事はある日急に「やばい、ライセンスが足りない！」「今から発注しても間に合わない！」なんてことにならないよう、APIで様々なSaaSのライセンスをチェックする方法についてまとめたものです。\nなお、コードサンプルはすべてPythonで、対象サービスは事前にライセンスを追加しないと利用できないサービスが中心となっています。\n\n GitHub Enterprise\nGitHubはREST APIでは取得ができないため、GraphQL APIで取得する必要があります。GraphQL APIについては こちら を、ライセンス数取得用のAPIについては こちらをを参照。\n\n リクエストサンプル\n...",
          "link": "https://zenn.dev/cazziwork/articles/885e9f88ccf3fd",
          "publishedOn": "2022-09-17T20:42:15.000Z",
          "wordCount": 653,
          "title": "利用サービスの残ライセンスをAPIで確認する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fJlZuYTn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takeshi%2520Haraguchi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2588%25A9%25E7%2594%25A8%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AE%25E6%25AE%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592API%25E3%2581%25A7%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01czFYNU1FUC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNzYxYzg1YmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fJlZuYTn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takeshi%2520Haraguchi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2588%25A9%25E7%2594%25A8%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AE%25E6%25AE%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592API%25E3%2581%25A7%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01czFYNU1FUC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNzYxYzg1YmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kasega0/articles/dd51b63071ebea",
          "author": "かせがお",
          "description": "いままでEC2でゴリゴリ学習させていたものをSageMaker Notebookに移植することになり、それなりに苦労したので自分用のテンプレート作成も兼ねてハマりどころをまとめます。\n\n 今回作成した雛型\nhttps://github.com/kasegao/sagemaker-sample\n\n 概要\n基本的にはこれまで学習用に作成していたプログラムの80-90%ぐらいはそのまま流用できます。綺麗に実装していれば既存プログラムにはほぼ手を入れずに移植できると思います。残りはSageMakerから既存スクリプトを呼び出すための玄関部分と、データ入出力用のS3とのやり取りスクリプトさえ用意し...",
          "link": "https://zenn.dev/kasega0/articles/dd51b63071ebea",
          "publishedOn": "2022-09-17T16:55:09.000Z",
          "wordCount": 233,
          "title": "SageMaker Notebook 上で PyTorch の学習を回す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2E725BYm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%259B%25E3%2581%258C%25E3%2581%258A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SageMaker%2520Notebook%2520%25E4%25B8%258A%25E3%2581%25A7%2520PyTorch%2520%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E5%259B%259E%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvU0E4MmFVbUhJQTNFblBIb01zd0dBblFodDJ0OFpiODlzbTMwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2E725BYm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%259B%25E3%2581%258C%25E3%2581%258A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SageMaker%2520Notebook%2520%25E4%25B8%258A%25E3%2581%25A7%2520PyTorch%2520%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E5%259B%259E%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvU0E4MmFVbUhJQTNFblBIb01zd0dBblFodDJ0OFpiODlzbTMwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/a5dc08bb594ac1",
          "author": "よしだ",
          "description": "最適化\n今回はNNを最適化する手法を確認します。\nNNが深くなるほど、ネットワークを通して安定的な勾配を伝播させることが重要になります。そうしないと、勾配が消滅したり爆発したりする可能性があるためです。そのため、今回は前回の重みの初期化に引き続き、最適化に関して見ていきます。\nimport os\nimport json\nimport math\nimport japanize_matplotlib\nimport numpy as np \nimport time\nimport copy\n\nimport matplotlib.pyplot as plt\nfrom matplotlib im...",
          "link": "https://zenn.dev/yoshida0312/articles/a5dc08bb594ac1",
          "publishedOn": "2022-09-17T12:41:03.000Z",
          "wordCount": 12111,
          "title": "Intro2DL : NNのOptimizerとその特徴",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ui7ddYGJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%2520%253A%2520NN%25E3%2581%25AEOptimizer%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E7%2589%25B9%25E5%25BE%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ui7ddYGJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%2520%253A%2520NN%25E3%2581%25AEOptimizer%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E7%2589%25B9%25E5%25BE%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kiyasu7028/articles/af72096f4555cd",
          "author": "kiyasu7028",
          "description": "Mattermostでもslackbotを使うと通知用Botを簡単に作れます。\nというわけでいきなり実践編です。\n\n 内向きのWebhookを作成する\nWeb画面から作るのはいろんなところで紹介されているので、今回はあえてコマンドで作ってみようと思います。\n参考ページ：mmctl webhook create-incoming\n必須オプションはchannel(defaultの投稿先) と user(defaultの名前) のようです。\nbitnami@debian:~/python3$ mmctl webhook create-incoming\nError: required flag(...",
          "link": "https://zenn.dev/kiyasu7028/articles/af72096f4555cd",
          "publishedOn": "2022-09-17T12:12:17.000Z",
          "wordCount": 407,
          "title": "Mattermost用Bot作成(slackbot利用)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nT6X6a9p--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kiyasu7028%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Mattermost%25E7%2594%25A8Bot%25E4%25BD%259C%25E6%2588%2590%2528slackbot%25E5%2588%25A9%25E7%2594%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS12TVhJMWJMMS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3ZWMxZDc5NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nT6X6a9p--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kiyasu7028%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Mattermost%25E7%2594%25A8Bot%25E4%25BD%259C%25E6%2588%2590%2528slackbot%25E5%2588%25A9%25E7%2594%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS12TVhJMWJMMS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3ZWMxZDc5NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zgw426/articles/d3cde75282511c",
          "author": "suo-takefumi",
          "description": "カメラデバイス固定台の3Dモデルを作ります\n3DCGソフトのBlenderで、Pythonスクリプトを使い3Dオブジェクトを作成します。\n作成したオブジェクトは主に3Dプリンターで造形することを目的にしています。\n以下の動画はBlenderで3Dオブジェクトを作成し3Dプリンターで造形するまでのながれです。\nhttps://youtu.be/-drzycYZWME\n3Dオブジェクトの作成/移動/加工/削除の全ての制作工程をPythonスクリプトにしているので、スクリプトの再実行で同じものを作れます。スクリプトをテキストデータで保存すればgitで管理できるのも利点です。\n\n スクリプト...",
          "link": "https://zenn.dev/zgw426/articles/d3cde75282511c",
          "publishedOn": "2022-09-17T10:51:50.000Z",
          "wordCount": 161,
          "title": "[Blender] Pythonスクリプトでカメラデバイスの固定台となる3Dモデルを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sJqISVpm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:suo-takefumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BBlender%255D%2520Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E5%259B%25BA%25E5%25AE%259A%25E5%258F%25B0%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258B3D%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycHpTZF9NNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1M2E2OTUzMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sJqISVpm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:suo-takefumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BBlender%255D%2520Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E5%259B%25BA%25E5%25AE%259A%25E5%258F%25B0%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258B3D%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycHpTZF9NNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1M2E2OTUzMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/241f6c3fac1486",
          "author": "osn_Lofi",
          "description": "はじめに\n古くから、自然言語処理の世界では、単語をスコアリングする手法として、TF-IDFというのがあります。\n古くからあるにもかかわらず、普通に暮らしていると馴染みのない概念だと思います。かく言う私も、Pythonで自然言語処理を学ぶまでは名前すら聞いたことがありませんでした。\nここでは、そんなTF-IDFについて、はじめて触れる方にも分かるように概念を丁寧に説明するとともに、Pythonを使った実装方法についてご紹介していきたいと思います。\n \n\n 🐱TF-IDFとは\n一言でいうと、ある文書の含まれる単語の重要度を示す指標です。文書の中で重要な単語をとらえることで、その文書の特徴...",
          "link": "https://zenn.dev/robes/articles/241f6c3fac1486",
          "publishedOn": "2022-09-17T10:22:44.000Z",
          "wordCount": 1975,
          "title": "【自然言語処理】【Python】TF-IDFを理解しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NwcIAPFZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591TF-IDF%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NwcIAPFZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591TF-IDF%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/chari/articles/20220917_im-mem_csv_generation_and_upload",
          "author": "wtkmn",
          "description": "CSVをインメモリで生成しS3にアップロードするメモ\nimport io \nimport csv\nimport boto3\n\ns3 = boto3.client('s3')\nbucket = 'sample-bucket'\nkey = 'sample.csv'\n\nbuff = io.StringIO()\nwriter = csv.DictWriter(f, fieldnames=['A', 'B', 'C'])\n\n# CSVに関連する処理\nwriter.writeheader()\nwriter.writerow({\"A\": \"a\", \"B\": \"b\", \"C\": \"c\"})\n\n# S...",
          "link": "https://zenn.dev/chari/articles/20220917_im-mem_csv_generation_and_upload",
          "publishedOn": "2022-09-17T07:24:55.000Z",
          "wordCount": 260,
          "title": "CSVをインメモリで生成しS3にアップロードするメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jYqignCz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:wtkmn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CSV%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25A7%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597S3%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2plcVlrd21vY29YNFhsakFhSU4ybEM5Q1hjeEtrVXFIRXoxTUl3aEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jYqignCz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:wtkmn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CSV%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25A7%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597S3%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2plcVlrd21vY29YNFhsakFhSU4ybEM5Q1hjeEtrVXFIRXoxTUl3aEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yutake27/articles/d55926de49d0c8",
          "author": "yutake27",
          "description": "これはng\n@pytest.mark.django_db\nclass TestUserViewSet:\n    @pytest.mark.parametrize(\n        \"user\",\n        [\n            UserAFactory(),\n            UserBFactory(),\n            UserCFactory(),\n            UserDFactory(),\n        ],\n    )\n    def test_user_can_do(self, user):\n        user.do()\n代わりに...",
          "link": "https://zenn.dev/yutake27/articles/d55926de49d0c8",
          "publishedOn": "2022-09-17T06:01:30.000Z",
          "wordCount": 272,
          "title": "djangoのdbにアクセスするような変数をpytest.mark.parametrizeでパラメータ化することはできない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zTR8XgOa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yutake27%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:django%25E3%2581%25AEdb%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AA%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592pytest.mark.parametrize%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FY0xuNktQcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNTc2ZTM0OTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zTR8XgOa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yutake27%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:django%25E3%2581%25AEdb%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AA%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592pytest.mark.parametrize%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FY0xuNktQcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNTc2ZTM0OTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zgw426/articles/adf1cc41e953bd",
          "author": "suo-takefumi",
          "description": "MatplotlibのグラフでAR\nMatplotlibで描画したグラフをOpenCVでARマーカーにマッピングすることができました。\n\n デモ\n02_matplot2d_no-transparency.pyのデモ\nMatplotlibの2DグラフをARマーカーにマッピングしています。\nhttps://youtu.be/t4DyeLGA0gk\n\n03_matplot3d_no-transparency.pyのデモ\nMatplotlibの3DグラフをARマーカーにマッピングしています。マーカーの傾きに合わせて3Dグラフの視点を変更しています。\nhttps://youtu.be/vzQA...",
          "link": "https://zenn.dev/zgw426/articles/adf1cc41e953bd",
          "publishedOn": "2022-09-17T02:40:37.000Z",
          "wordCount": 381,
          "title": "Matplotlibで描画したグラフをOpenCVでARマーカーにマッピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ycfBI9ey--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:suo-takefumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Matplotlib%25E3%2581%25A7%25E6%258F%258F%25E7%2594%25BB%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592OpenCV%25E3%2581%25A7AR%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2581%25AB%25E3%2583%259E%25E3%2583%2583%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycHpTZF9NNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1M2E2OTUzMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ycfBI9ey--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:suo-takefumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Matplotlib%25E3%2581%25A7%25E6%258F%258F%25E7%2594%25BB%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592OpenCV%25E3%2581%25A7AR%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2581%25AB%25E3%2583%259E%25E3%2583%2583%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycHpTZF9NNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1M2E2OTUzMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/quag_cactus/articles/6d09787323d1b1",
          "author": "QuagCactus",
          "description": "概要\n複数の独立したPythonプロセス間の通信ができる高水準のモジュール IPMMAP を作成しました。\nhttps://github.com/quag-cactus/ipmmap\n\nIPMMAPでは、mmap（標準モジュール）を用いて共有メモリ領域を使ったプロセス間通信を提供します。\nクラスベースのデータ構造を採用することで、可読性を高めています。\nfastainerを使用してプロセス間排他ロックを実装することで、安全な共有メモリへのアクセスを実現しています。\n\n\n 背景と要件\nとあるプロジェクトで、複数のpythonプロセスを連携して動作させる必要が出てきました。連携いに際して...",
          "link": "https://zenn.dev/quag_cactus/articles/6d09787323d1b1",
          "publishedOn": "2022-09-17T02:26:26.000Z",
          "wordCount": 836,
          "title": "Pythonで排他ロック可能な共有メモリライブラリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zpCMKN2y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:QuagCactus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E6%258E%2592%25E4%25BB%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E5%2585%25B1%25E6%259C%2589%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fX0dxVjdRWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNzc5MTVjOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zpCMKN2y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:QuagCactus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E6%258E%2592%25E4%25BB%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E5%2585%25B1%25E6%259C%2589%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fX0dxVjdRWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNzc5MTVjOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshiishunichi/articles/2542500bb8f81d",
          "author": "yoshiishunichi",
          "description": "動画\nこちらの動画の解説に使っている記事です。ぜひ見てください。\nhttps://youtu.be/AlVLv4L-zeQ\n動画媒体の方がコードとか触ったことない人もとっつきやすいと思ったので Youtube に投稿してみました。\n頑張って喋ったので Zenn の読者さんも良かったら見てみてください。\n\n 内容\n最近流行りの Stable Diffusion で、誰でも簡単に AI に絵を描かせてみましょう。\nプログラミングがわからない人でもできるように、頑張って説明してみます。\n\n Stable Diffusion って何？\n\nStable Diffusionは、オープンソースとし...",
          "link": "https://zenn.dev/yoshiishunichi/articles/2542500bb8f81d",
          "publishedOn": "2022-09-16T14:59:30.000Z",
          "wordCount": 1160,
          "title": "AI に絵を描かせる方法を誰よりも丁寧に説明するYoutube動画を投稿した【Stable  Diffusion】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N8-LeBP0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshiishunichi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:AI%2520%25E3%2581%25AB%25E7%25B5%25B5%25E3%2582%2592%25E6%258F%258F%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25AA%25B0%25E3%2582%2588%25E3%2582%258A%25E3%2582%2582%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%2599%25E3%2582%258BYoutube%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2597%25E3%2581%259F%25E3%2580%2590Stable%2520%2520Diffusion%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BfaG1Dc09aUTVHWFZpQXpvblQ5c2RSRnY5a2FaNlRfOHZKUW1ZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N8-LeBP0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshiishunichi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:AI%2520%25E3%2581%25AB%25E7%25B5%25B5%25E3%2582%2592%25E6%258F%258F%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25AA%25B0%25E3%2582%2588%25E3%2582%258A%25E3%2582%2582%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%2599%25E3%2582%258BYoutube%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2597%25E3%2581%259F%25E3%2580%2590Stable%2520%2520Diffusion%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BfaG1Dc09aUTVHWFZpQXpvblQ5c2RSRnY5a2FaNlRfOHZKUW1ZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mory22k/articles/afff58b77e164a",
          "author": "mory22k",
          "description": "前回: https://zenn.dev/mory22k/articles/e3222d02724251\n簡単なガウス過程回帰モデルを PyTorch で実装します。\nfrom matplotlib import pyplot as plt\nimport torch\nimport seaborn as sns\n\n ガウス過程回帰モデル\n「回帰モデル」は、ある入出力データをもとに、欠落しているデータの補完 や、データがない領域の出力値の予測 などを行うモデル全般を指すものです。その中でもガウス過程回帰モデルは出力値を点推定ではなくベイズ推定の枠組みで柔軟に予測するモデルです。\n\n ガウス過...",
          "link": "https://zenn.dev/mory22k/articles/afff58b77e164a",
          "publishedOn": "2022-09-16T14:25:08.000Z",
          "wordCount": 6282,
          "title": "[PyTorch] Torchでもガウス過程回帰したい、専用ライブラリなしで、ついでにハイパーパラメータを最適化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qGuQ4Eo7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255BPyTorch%255D%2520Torch%25E3%2581%25A7%25E3%2582%2582%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2581%25E5%25B0%2582%25E7%2594%25A8%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7%25E3%2580%2581%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25AB%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qGuQ4Eo7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255BPyTorch%255D%2520Torch%25E3%2581%25A7%25E3%2582%2582%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2581%25E5%25B0%2582%25E7%2594%25A8%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7%25E3%2580%2581%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25AB%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gamella/articles/bdd980d4929a90",
          "author": "tomo@Alpaca",
          "description": "はじめに\nこちらは先日行われたマケデコ(discord: https://discord.com/invite/xg6P5RXwaa)のキックオフイベントで行ったセッションの内容を補足するブログです。こちらマケデコ内でセッションに参加できないが、資料を公開してほしいというリクエストを受け、北山の発表部分について記載しました(UKIさんのAsk me anythingセッションは残念ながら公開予定はないです)。\nhttps://mkdeco.connpass.com/event/259046/\n本セッションでは、 J-Quants API ベータ版を使用して、J-Quantsファンダメ...",
          "link": "https://zenn.dev/gamella/articles/bdd980d4929a90",
          "publishedOn": "2022-09-16T04:46:33.000Z",
          "wordCount": 411,
          "title": "JQuants APIを用いて日本最大の株式分析コンペで準優勝した決算評価モデルを動かす方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2ucWzrJu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomo%2540Alpaca%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:JQuants%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E6%2597%25A5%25E6%259C%25AC%25E6%259C%2580%25E5%25A4%25A7%25E3%2581%25AE%25E6%25A0%25AA%25E5%25BC%258F%25E5%2588%2586%25E6%259E%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2581%25A7%25E6%25BA%2596%25E5%2584%25AA%25E5%258B%259D%25E3%2581%2597%25E3%2581%259F%25E6%25B1%25BA%25E7%25AE%2597%25E8%25A9%2595%25E4%25BE%25A1%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KWHB4UUR6ei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2ucWzrJu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomo%2540Alpaca%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:JQuants%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E6%2597%25A5%25E6%259C%25AC%25E6%259C%2580%25E5%25A4%25A7%25E3%2581%25AE%25E6%25A0%25AA%25E5%25BC%258F%25E5%2588%2586%25E6%259E%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2581%25A7%25E6%25BA%2596%25E5%2584%25AA%25E5%258B%259D%25E3%2581%2597%25E3%2581%259F%25E6%25B1%25BA%25E7%25AE%2597%25E8%25A9%2595%25E4%25BE%25A1%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KWHB4UUR6ei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kazaki/articles/4bc99a27e33d24",
          "author": "菊谷　知真",
          "description": "画像内の「最も多くの面積を占める色」を取得したく、考案したのがRGB全ての最頻値を取るというやり方でした。\nBGRを3byte分の文字列に結合してstatistics.mode()で最頻値を取得してRGBそれぞれに分解し直してます。\n一見同じ色に見えても、webカメラからの画像ソースだったりするとRGB値全てがキレイに揃わないことも多いですが、\ninRange()で範囲を指定するときその基準となる色には使えそうです。\nそのへんの事情を考慮すると本当はこういうのはクラスタリングで取得するのが最適なんですかね？🤔\nもっとうまい実装法を知りたいです。\nimport cv2\nimport num...",
          "link": "https://zenn.dev/kazaki/articles/4bc99a27e33d24",
          "publishedOn": "2022-09-16T04:20:34.000Z",
          "wordCount": 326,
          "title": "OpenCVで画像内の「最頻色」を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TLYPSqSn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%258F%258A%25E8%25B0%25B7%25E3%2580%2580%25E7%259F%25A5%25E7%259C%259F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:OpenCV%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E5%2586%2585%25E3%2581%25AE%25E3%2580%258C%25E6%259C%2580%25E9%25A0%25BB%25E8%2589%25B2%25E3%2580%258D%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15Q1RCMmZtUC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTZlZTg2N2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TLYPSqSn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%258F%258A%25E8%25B0%25B7%25E3%2580%2580%25E7%259F%25A5%25E7%259C%259F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:OpenCV%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E5%2586%2585%25E3%2581%25AE%25E3%2580%258C%25E6%259C%2580%25E9%25A0%25BB%25E8%2589%25B2%25E3%2580%258D%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15Q1RCMmZtUC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTZlZTg2N2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/c2d3f2af82eae8",
          "author": "よしだ",
          "description": "初期化\n今回はNNを初期化する手法を確認します。\nNNが深くなるほど、ネットワークを通して安定的な勾配を伝播させることが重要になります。そうしないと、勾配が消滅したり爆発したりする可能性があるためです。そのため、今回は重みの初期化に関して見ていきます。\nimport os\nimport json\nimport math\nimport japanize_matplotlib\nimport numpy as np \nimport time\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom tqdm...",
          "link": "https://zenn.dev/yoshida0312/articles/c2d3f2af82eae8",
          "publishedOn": "2022-09-15T14:29:32.000Z",
          "wordCount": 4950,
          "title": "Intro2DL：NNにおける重みの初期化方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9r2LUx_0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%25EF%25BC%259ANN%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E9%2587%258D%25E3%2581%25BF%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9r2LUx_0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%25EF%25BC%259ANN%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E9%2587%258D%25E3%2581%25BF%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kwashizzz/articles/ml-stable-diffusion-colab-fn",
          "author": "わっしー",
          "description": "はじめに\nこんにちは、わっしーです。最近、画像生成のアプリやデモが流行って、めっちゃ試したくなりますよね。私も、実際に動かし、あくたんこと湊あくあさんの画像を用いてFineTuningしてみました。あくたんの、チャンネル登録よろしくお願いします。\n以下、生成した画像ですが、どうでしょうか！めっちゃすごくて感動です。特にお気に入りは、真ん中左の、ちょっと生意気なあくたんの画像です。\n\n画質がいいやつも置いときますね。\n\n実際には、ランダムシードを変更しつつ、何百枚も生成して、よかったものを選択しています。\n本記事では、自前で収集した画像群を用いてFineTuningする方法を紹介します...",
          "link": "https://zenn.dev/kwashizzz/articles/ml-stable-diffusion-colab-fn",
          "publishedOn": "2022-09-15T14:00:55.000Z",
          "wordCount": 503,
          "title": "【Gooble Colab】Stable DiffusionをFine Tuningして、あくたんを生成してみた!",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---ErfHUi4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Gooble%2520Colab%25E3%2580%2591Stable%2520Diffusion%25E3%2582%2592Fine%2520Tuning%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E3%2581%2582%25E3%2581%258F%25E3%2581%259F%25E3%2582%2593%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---ErfHUi4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Gooble%2520Colab%25E3%2580%2591Stable%2520Diffusion%25E3%2582%2592Fine%2520Tuning%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E3%2581%2582%25E3%2581%258F%25E3%2581%259F%25E3%2582%2593%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gansoishiyaki/articles/353d1e0daec2a9",
          "author": "ふぇ",
          "description": "ターミナルからBlenderを実行することによって、ログも出力させる\ncd 保存したいディレクトリ\n/Applications/Blender.app/Contents/MacOS/Blender\n# bpyインポート\nimport bpy\n\nFILE_NAME = \"animation.fbx\"\n\n# FBXモデルをエクスポートする（メッシュオブジェクト指定）\ndef export_animation():\n    \"\"\"\n    Export FBX file only animation for Unity.\n    \"\"\"\n\n    # FBXインポート\n    # bpy.op...",
          "link": "https://zenn.dev/gansoishiyaki/articles/353d1e0daec2a9",
          "publishedOn": "2022-09-15T13:41:52.000Z",
          "wordCount": 242,
          "title": "BlenderでUnity用にアニメーションのみExportするスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dqJ-4cl2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25B5%25E3%2581%2587%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Blender%25E3%2581%25A7Unity%25E7%2594%25A8%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2581%25BFExport%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BTSjVzZ0x4TDNqbEFEcmdsY1NsSnY0bUc4UGgxRnRuelQ2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dqJ-4cl2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25B5%25E3%2581%2587%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Blender%25E3%2581%25A7Unity%25E7%2594%25A8%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2581%25BFExport%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BTSjVzZ0x4TDNqbEFEcmdsY1NsSnY0bUc4UGgxRnRuelQ2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/t_zomu/articles/770eea7f4848ca",
          "author": "takashno",
          "description": "はじめに\nHTTPクライアントとしてよく利用される requests ではリトライ・タイムアウトの設定が当然あります。通常のロジック開発においては、あまりそういうケースはないのでしょうが、たまにリトライやタイムアウトの設定をUnitTestでテストしたいと思うことがありました。\nrequests 自体を requests_mock などでMock化することはよくあるかもしれませんが、それではテストが行えません。こんなことはHTTPClientを実装するとき以外発生しないのかもしれませんが、メモとして残します。\n\n pytest-httpserver\nhttps://pytest-ht...",
          "link": "https://zenn.dev/t_zomu/articles/770eea7f4848ca",
          "publishedOn": "2022-09-15T12:21:31.000Z",
          "wordCount": 354,
          "title": "Pytest で requests の Retry・Timeout設定 のテストしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jE-na0WY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takashno%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Pytest%2520%25E3%2581%25A7%2520requests%2520%25E3%2581%25AE%2520Retry%25E3%2583%25BBTimeout%25E8%25A8%25AD%25E5%25AE%259A%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11dVJlaGRhZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlNWJiMmM3ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jE-na0WY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takashno%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Pytest%2520%25E3%2581%25A7%2520requests%2520%25E3%2581%25AE%2520Retry%25E3%2583%25BBTimeout%25E8%25A8%25AD%25E5%25AE%259A%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11dVJlaGRhZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlNWJiMmM3ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/jkoba/articles/c6b76098a7bd75",
          "author": "jkoba",
          "description": "どうしてもミニマムな通信に絞りたい時の技\n\n 背景\n社内の古き良き審査ルールではネットワークACLに 0.0.0.0/0 のAllowがあると無条件に怒られる。\nセキュリティグループやその他諸々の手段で制御していても……\nクローズドなVPCのCodeBuildからS3にログを出力させる必要があるが、CodeBuildではS3のインターフェースVPCエンドポイントを指定する方法がない。\nゲートウェイVPCエンドポイント経由でS3に接続させたいが、S3のIPアドレスのCIDRが時々変わる……\n\n 実現すること\n\n社内ルールでギルティ扱いされるネットワークACLの 0.0.0.0/0 のA...",
          "link": "https://zenn.dev/jkoba/articles/c6b76098a7bd75",
          "publishedOn": "2022-09-15T09:08:34.000Z",
          "wordCount": 1044,
          "title": "S3への通信を許可するネットワークACLを動的に更新する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S1-9Wo4i--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jkoba%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:S3%25E3%2581%25B8%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E3%2582%2592%25E8%25A8%25B1%25E5%258F%25AF%25E3%2581%2599%25E3%2582%258B%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AFACL%25E3%2582%2592%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04ZDlDcFhiMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5ZDY3ZjY5NjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S1-9Wo4i--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jkoba%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:S3%25E3%2581%25B8%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E3%2582%2592%25E8%25A8%25B1%25E5%258F%25AF%25E3%2581%2599%25E3%2582%258B%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AFACL%25E3%2582%2592%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04ZDlDcFhiMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5ZDY3ZjY5NjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/python3654/articles/2e87e9bdb92a9a",
          "author": "とりごん",
          "description": "はじめに\n最近transformersというライブラリを勉強していて、今はtutorialsを読んでいます！せっかくなので、tutorialsの内容を訳して記事にしようと思っています！今回は第二弾ということで、以下の記事を参考に書きました～ ぜひ最後まで読んでください！(google colabで実装しながら読んで頂けると良いと思います！)\nなお、以下の記事では言語、音声、画像の処理について説明していますが、本記事では言語の処理の説明のみとなります。(今後、音声、画像についても記事を書きたいと思っています。)\nhttps://huggingface.co/docs/transform...",
          "link": "https://zenn.dev/python3654/articles/2e87e9bdb92a9a",
          "publishedOn": "2022-09-15T01:51:34.000Z",
          "wordCount": 1799,
          "title": "transformersのtutorialを読んでみた - part2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7Fsv5koo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:transformers%25E3%2581%25AEtutorial%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2520-%2520part2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7Fsv5koo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:transformers%25E3%2581%25AEtutorial%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2520-%2520part2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dicechick373/articles/cc22c584721678",
          "author": "dicechick373",
          "description": "目標\nGoogle ColabでGCSを利用する\n\n やり方\n\n GCP認証\n下記コードを実行して、GCPに接続\nfrom google.colab import auth\nauth.authenticate_user()\n\n gcsfuseをインストール\n認証に成功したらgcsfuseをインストール\n!echo \"deb http://packages.cloud.google.com/apt gcsfuse-`lsb_release -c -s` main\" | sudo tee /etc/apt/sources.list.d/gcsfuse.list\n!curl https:/...",
          "link": "https://zenn.dev/dicechick373/articles/cc22c584721678",
          "publishedOn": "2022-09-15T00:48:19.000Z",
          "wordCount": 300,
          "title": "Google ColabでGCSを利用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uehLitZc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Colab%25E3%2581%25A7GCS%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uehLitZc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Colab%25E3%2581%25A7GCS%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ymd/articles/b446e4b04814d3",
          "author": "ymd",
          "description": "2022/9/15\n目的：論文で提案されている様々なlossの改善の恩恵をlighGBMでも受けれるようにする\n\n 手順\n\nobjective function (loss)を自作する\ntrainのfobjに自作objective functionを渡す\n\n\n objective functionを作る\npredsとlabels (lgb.Datasetの中に情報がある)を入力にして、gradとhessianを返せばいい。\n\nこれはlightbmの最適化がニュートン法 (2次の勾配まで使う)を使っているため\n\n回帰問題のgrad(1次微分)とhessian(2次微分)は\n\nよって自作関数...",
          "link": "https://zenn.dev/ymd/articles/b446e4b04814d3",
          "publishedOn": "2022-09-14T23:03:56.000Z",
          "wordCount": 1574,
          "title": "LighGBMでcustom objectを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BmYmXZaO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymd%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:LighGBM%25E3%2581%25A7custom%2520object%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VMldadDdpdy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyODIzZDUwM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BmYmXZaO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymd%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:LighGBM%25E3%2581%25A7custom%2520object%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VMldadDdpdy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyODIzZDUwM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kwashizzz/articles/ml-stable-diffusion-colab",
          "author": "わっしー",
          "description": "はじめに\nこんにちは、わっしーです。最近、画像生成のアプリやデモが流行っており、生成モデルに入力するプロンプトテキストが呪文と言われるようにまでなっています。私もStable Diffusionを試し、以下のようなピンク色のアニメキャラクターを生成できました。\n\n本記事では、Google Colab上でStable Diffusionを動かす方法を紹介します。\n※Google ColabのPro+(GPU:A100)を使用し、動作確認をしています。\n\n 環境設定\nまずは、実行に必要なライブラリやStable Diffusionの重みをダウンロードします。\n# stable diffu...",
          "link": "https://zenn.dev/kwashizzz/articles/ml-stable-diffusion-colab",
          "publishedOn": "2022-09-14T17:05:45.000Z",
          "wordCount": 564,
          "title": "【Gooble Colab】Stable Diffusionを動かしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wLcDS_1H--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Gooble%2520Colab%25E3%2580%2591Stable%2520Diffusion%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wLcDS_1H--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Gooble%2520Colab%25E3%2580%2591Stable%2520Diffusion%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/technicarium/articles/a8b5eb4b8c5b0e",
          "author": "テク二カリウム",
          "description": "Raspberry Pi OSのSDカードへの書き込みに始まり、PyenvによるPythonバージョン管理、Pipenvによる仮想環境、開発環境としてVSCodeのインストール、ブレッドボード上でのLEDと抵抗の配置、GPIOとブレッドボードの接続用コード（オス・メス ジャンパーワイヤー）と一式揃ったのでやっとLチカにチャレンジしました。\n\n 前提条件\n\n OS\n>cat /etc/os-release \nPRETTY_NAME=\"Debian GNU/Linux 11 (bullseye)\"\nNAME=\"Debian GNU/Linux\"\nVERSION_ID=\"11\"\nVERS...",
          "link": "https://zenn.dev/technicarium/articles/a8b5eb4b8c5b0e",
          "publishedOn": "2022-09-14T14:25:14.000Z",
          "wordCount": 792,
          "title": "Raspberry PiでLチカ（完成）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kMFPMatP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%25E3%2581%25A7L%25E3%2583%2581%25E3%2582%25AB%25EF%25BC%2588%25E5%25AE%258C%25E6%2588%2590%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kMFPMatP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%25E3%2581%25A7L%25E3%2583%2581%25E3%2582%25AB%25EF%25BC%2588%25E5%25AE%258C%25E6%2588%2590%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/michy/articles/064863f3703de6",
          "author": "zaiwa",
          "description": "はじめに\nこの記事ではDiffusersを使ったMacのStableDiffusionでimg2imgを実行するまでの手順を紹介します。\n\n 対象読者\n・M1/M2シリーズのMacユーザ\n・stable-diffusionとその発展型のモデルを気軽に試せる環境がほしい人\n・stable-diffusion環境メンテと最新化に稼働を割く暇がない人\n\n Diffusersとは？\n推論・学習に必要なツールが機械学習周りの機能一式が揃ったツールボックスです。\nモデルの切り替えや追加学習などのツールが1コマンドですべて入るので、AIイラストの環境がライトに構築可能です。\n\n Diffusers...",
          "link": "https://zenn.dev/michy/articles/064863f3703de6",
          "publishedOn": "2022-09-14T13:00:14.000Z",
          "wordCount": 962,
          "title": "【Diffusers】MacでStableDiffusionのImg2Imgのpython環境を整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VmzjOSNY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zaiwa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Diffusers%25E3%2580%2591Mac%25E3%2581%25A7StableDiffusion%25E3%2581%25AEImg2Img%25E3%2581%25AEpython%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HbTdEeDZfZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhMDFjNTg2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VmzjOSNY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zaiwa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Diffusers%25E3%2580%2591Mac%25E3%2581%25A7StableDiffusion%25E3%2581%25AEImg2Img%25E3%2581%25AEpython%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HbTdEeDZfZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhMDFjNTg2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dicechick373/articles/58354a5f1f542f",
          "author": "dicechick373",
          "description": "目標\n\nestat-APIから統計表のメタ情報を取得する\nestat-APIから統計表データを取得する\nestat-APIのレスポンスJSONを加工してpandas DataFrameに変換する\nDataFrameをGoogleBigQueryに保存する\n\n\n 前提条件\n\nestat-APIの利用者登録済\nESTAT_APPIDは環境変数で管理\n\n利用するライブラリは次のとおり\nimport urllib.parse\nimport urllib.request\nimport json\nimport pandas as pd\n\n 統計表情報の取得\n社会・人口統計体系の「Ａ人口・世帯」の...",
          "link": "https://zenn.dev/dicechick373/articles/58354a5f1f542f",
          "publishedOn": "2022-09-14T07:16:20.000Z",
          "wordCount": 2885,
          "title": "estat-APIのレスポンスをGoogleBigQueryに格納する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sNyKqf49--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:estat-API%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592GoogleBigQuery%25E3%2581%25AB%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sNyKqf49--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:estat-API%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592GoogleBigQuery%25E3%2581%25AB%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/2175b317a5410e",
          "author": "yKesamaru",
          "description": "!\n一部加筆修正しました\n\n2022年9月14日17時18分\n\n\n\n int/str型変換における破壊的変更のお知らせ\nこんにちは。東海顔認証のyKesamaruです。\nhttps://www.youtube.com/watch?app=desktop&v=eTucYT2LpNU\n今さっき上記YouTubeで知ったのですが、なかなかのニュースが飛び込んできました。\n2022年9月7日水曜日[1]、Pythonにおいて下位互換性を破壊するセキュリティーアップデートが緊急でリリースされました。 [2]\nすくなからずプロジェクトに変更を強いられるケースが発生するかもしれません。といって...",
          "link": "https://zenn.dev/ykesamaru/articles/2175b317a5410e",
          "publishedOn": "2022-09-14T06:02:45.000Z",
          "wordCount": 2460,
          "title": "Python: int/str 型変換における破壊的変更のお知らせ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S3n5oWcb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yKesamaru%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%253A%2520int%252Fstr%2520%25E5%259E%258B%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E7%25A0%25B4%25E5%25A3%258A%25E7%259A%2584%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25AE%25E3%2581%258A%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tVm5Lai1FbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTFmYzI4MjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S3n5oWcb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yKesamaru%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%253A%2520int%252Fstr%2520%25E5%259E%258B%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E7%25A0%25B4%25E5%25A3%258A%25E7%259A%2584%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25AE%25E3%2581%258A%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tVm5Lai1FbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTFmYzI4MjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/quiver/articles/93e91ba2f29fa9",
          "author": "quiver",
          "description": "『ゼロから作るDeep Learning』などの著者がある斎藤康毅さんが、ゼロシリーズの最新作として、『最強の三目並べAIをゼロから作る』というYouTube動画を公開されていたので、やってみました。\nhttps://twitter.com/SaitohKoki/status/1564198954476089344\n最終的に作成する最強の三目並べ(Tic-Tac-Toe)AIは、次のデモページで遊べます。\nhttps://koki0702.github.io/tictactoe-pyscript/\n\n\n 学習の流れ\n動画は5本からなり、以下のトピックを学べます。\n\nガイダンス(7分02秒...",
          "link": "https://zenn.dev/quiver/articles/93e91ba2f29fa9",
          "publishedOn": "2022-09-13T21:37:00.000Z",
          "wordCount": 229,
          "title": "『最強の三目並べAIをゼロから作る』をやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dd_scfzE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:quiver%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%258E%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AE%25E4%25B8%2589%25E7%259B%25AE%25E4%25B8%25A6%25E3%2581%25B9AI%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E4%25BD%259C%25E3%2582%258B%25E3%2580%258F%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oQ0FMSXMyMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZTA5M2I2ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dd_scfzE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:quiver%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%258E%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AE%25E4%25B8%2589%25E7%259B%25AE%25E4%25B8%25A6%25E3%2581%25B9AI%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E4%25BD%259C%25E3%2582%258B%25E3%2580%258F%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oQ0FMSXMyMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZTA5M2I2ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/python3654/articles/7afb7095d6f50f",
          "author": "とりごん",
          "description": "はじめに\n最近transformersというライブラリを勉強していて、今はtutorialsを読んでいます！せっかくなので、tutorialsの内容を訳して記事にしようと思っています！今回は第一弾ということで、以下の記事を参考に書きました～ ぜひ最後まで読んでください！(google colabで実装しながら読んで頂けると良いと思います！)\nhttps://huggingface.co/docs/transformers/v4.21.3/en/pipeline_tutorial\n\n 推論用パイプライン\npipeline()を使えば、テキスト生成、画像のセグメンテーション、音声分類など...",
          "link": "https://zenn.dev/python3654/articles/7afb7095d6f50f",
          "publishedOn": "2022-09-13T14:41:55.000Z",
          "wordCount": 1378,
          "title": "transformersのtutorialを読んでみた - part1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--maQJD6OX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:transformers%25E3%2581%25AEtutorial%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2520-%2520part1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--maQJD6OX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:transformers%25E3%2581%25AEtutorial%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2520-%2520part1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/jim_soros/articles/79570a92519342",
          "author": "jim_soros",
          "description": "上司や友達から知らないプログラミング言語のcodeを見せられた時には\n無駄にcodeを読まずコメントアウトを見つけよう。\nそして、コメントアウトの部分を飛ばし飛ばし読み上げよう。\nすると、上司や友達はこいつ出来るやん！！ってなる。\nその後、こっそりググって詳細を調べよう。\n以上。こうして世界は回っている。\npython))\n#単数行コメントアウト\n\"\"\"複数行コメントアウト\"\"\" \nsh))\n#単数行コメントアウト \n<<\"#__comment__複数行コメントアウト\"#__comment__\npowershell))\n#単数行コメントアウト\n<#複数行コメントアウト#...",
          "link": "https://zenn.dev/jim_soros/articles/79570a92519342",
          "publishedOn": "2022-09-13T10:28:28.000Z",
          "wordCount": 170,
          "title": "知らないプログラミング言語のcodeを読む裏技?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VPCLO3rC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jim_soros%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AEcode%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%25E8%25A3%258F%25E6%258A%2580%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00STJGRktscy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjYjA5YmQyMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VPCLO3rC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jim_soros%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AEcode%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%25E8%25A3%258F%25E6%258A%2580%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00STJGRktscy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjYjA5YmQyMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kz2021/articles/a9380b23732f30",
          "author": "kz2021",
          "description": "はじめに\nこれは、Web APIとGCPを利用し5日間の天気データ取得の作業を自動化した記事です。\nこれらの記事を参考にしています。\nhttps://qiita.com/atsuken/items/23c0f0395514cafaf47d\nhttps://qiita.com/matsu0130/items/4849ebb3681e827274d3\n\n 必要なもの・作業の流れ\n・OpenweathermapのAPIキー\n・GCPのアカウント（要はgoogleアカウント）\nOpenweathermapは、世界の天気に関する情報を取得することが出来るサービスです。\nhttps://open...",
          "link": "https://zenn.dev/kz2021/articles/a9380b23732f30",
          "publishedOn": "2022-09-13T06:33:53.000Z",
          "wordCount": 1429,
          "title": "GCPを利用した基盤構築及びデータ取得作業の定期実行について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hrHvQe9G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kz2021%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GCP%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E5%259F%25BA%25E7%259B%25A4%25E6%25A7%258B%25E7%25AF%2589%25E5%258F%258A%25E3%2581%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E4%25BD%259C%25E6%25A5%25AD%25E3%2581%25AE%25E5%25AE%259A%25E6%259C%259F%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OTjllQW0zbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNDg2NzRlM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hrHvQe9G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kz2021%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GCP%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E5%259F%25BA%25E7%259B%25A4%25E6%25A7%258B%25E7%25AF%2589%25E5%258F%258A%25E3%2581%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E4%25BD%259C%25E6%25A5%25AD%25E3%2581%25AE%25E5%25AE%259A%25E6%259C%259F%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OTjllQW0zbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNDg2NzRlM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/jim_soros/articles/0a218bcdb42912",
          "author": "jim_soros",
          "description": "●オブジェクト指向プログラミング四種盛り。\n　味比べ。\n　言語間の違いを知ることでプログラミングを深く学ぶ。\n　クラス変数とインスタンス変数について違いが大きい。。。などなど\n1)) python,キーボード入力の文字列を繋げて出力する\nclass print_text:\n    #text = \"jim_soros\" #class var\n\n    def __init__(self) -> None:\n        self.text = \"\" #instance var\n\n    def input_print_text(self) -> str:\n        n...",
          "link": "https://zenn.dev/jim_soros/articles/0a218bcdb42912",
          "publishedOn": "2022-09-13T03:59:14.000Z",
          "wordCount": 1469,
          "title": "オブジェクト指向プログラミング四種盛り(py,java,c#,js)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2suguV55--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jim_soros%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%259B%259B%25E7%25A8%25AE%25E7%259B%259B%25E3%2582%258A%2528py%252Cjava%252Cc%2523%252Cjs%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00STJGRktscy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjYjA5YmQyMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2suguV55--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jim_soros%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%259B%259B%25E7%25A8%25AE%25E7%259B%259B%25E3%2582%258A%2528py%252Cjava%252Cc%2523%252Cjs%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS00STJGRktscy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjYjA5YmQyMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hiroya_w/articles/c023c54c32f8a9",
          "author": "Hiroya-W",
          "description": "KLab Server Side Camp 第 3 回 に参加してきました\n9/1 ~ 9/7 の 5 日間、KLab Server Side Camp 第 3 回に参加してきました。\n\nKLab Server Side Camp（クラブサーバサイドキャンプ）は、サーバサイド特化型の技術系インターンです。\n本イベントの為にオリジナルで自社開発したスマホ向けゲーム（音ゲー）を題材に、そのゲームアプリの中でサーバサイドの技術がどのように使われているかを、講義形式で進めつつ実際に課題にも取り組み手を動かしてもらいながら経験を積むことができるサーバサイド特化型のインターンです。\n\nhttp:...",
          "link": "https://zenn.dev/hiroya_w/articles/c023c54c32f8a9",
          "publishedOn": "2022-09-13T01:06:49.000Z",
          "wordCount": 1194,
          "title": "KLab Server Side Camp 第 3 回 に参加してきました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0UZUzQMb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hiroya-W%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:KLab%2520Server%2520Side%2520Camp%2520%25E7%25AC%25AC%25203%2520%25E5%259B%259E%2520%25E3%2581%25AB%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fbDhFMkRqTy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiOTRhYTA4MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0UZUzQMb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hiroya-W%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:KLab%2520Server%2520Side%2520Camp%2520%25E7%25AC%25AC%25203%2520%25E5%259B%259E%2520%25E3%2581%25AB%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fbDhFMkRqTy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiOTRhYTA4MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ktnyt/articles/78cc20dc57a154",
          "author": "Mirei (Kotone) Itaya",
          "description": "「テストのコードも例外なく型ヒントをつけたいなあ」\nそんな気持ちでPythonを書いていたところ、型ヒントがついている関数のモックを作れないかなという興味からやってみたところなんとなくそれっぽいものができたのでご紹介します。\nやりたいことのイメージとしては\nfunction_mock = FunctionMock(引数).returns(返り値)\nret = function_mock(値) # ここでassertionが走る\nuse(ret) # 指定した返り値が帰っている\n\n モック本体のコード\nfrom __future__ import annotations\n\nfrom typ...",
          "link": "https://zenn.dev/ktnyt/articles/78cc20dc57a154",
          "publishedOn": "2022-09-12T22:40:03.000Z",
          "wordCount": 1839,
          "title": "Pythonで型ヒントがついた関数のモックを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mhlKkylJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mirei%2520%2528Kotone%2529%2520...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E5%259E%258B%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E3%2581%25A4%25E3%2581%2584%25E3%2581%259F%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1EallVUEtleC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyMzZlYjEyYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mhlKkylJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mirei%2520%2528Kotone%2529%2520...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E5%259E%258B%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E3%2581%25A4%25E3%2581%2584%25E3%2581%259F%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1EallVUEtleC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyMzZlYjEyYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimat/articles/e2e8799f4db567",
          "author": "shimat",
          "description": "題材\n時々見ているYouTubeチャンネル「おもしろ地理」さんで、変わった形の市区町村が話題になっていました。\nhttps://twitter.com/omoshirochiri/status/1536972764535574528?s=20&t=qJKWBP9taN1m5BUAsAuFGA\nこういうことを計算で探してみましょう。\nそもそも昔から形には興味がありました。1日数時間Google Mapsを眺めても飽きない性分です。\n細長いとかちぎれそうなど、尺度はいろいろあると思いますが、今回はでこぼこした、いびつな形を狙ってみました。なお地理は好きですが、GeoJSON等の技...",
          "link": "https://zenn.dev/shimat/articles/e2e8799f4db567",
          "publishedOn": "2022-09-12T12:25:41.000Z",
          "wordCount": 4944,
          "title": "いびつな形の市区町村を探す [Python+GeoJSON+OpenCV]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TQw-5Fl---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%2584%25E3%2581%25B3%25E3%2581%25A4%25E3%2581%25AA%25E5%25BD%25A2%25E3%2581%25AE%25E5%25B8%2582%25E5%258C%25BA%25E7%2594%25BA%25E6%259D%2591%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2599%2520%255BPython%252BGeoJSON%252BOpenCV%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11cmZ5M2RXcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOTgyYTAyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TQw-5Fl---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%2584%25E3%2581%25B3%25E3%2581%25A4%25E3%2581%25AA%25E5%25BD%25A2%25E3%2581%25AE%25E5%25B8%2582%25E5%258C%25BA%25E7%2594%25BA%25E6%259D%2591%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2599%2520%255BPython%252BGeoJSON%252BOpenCV%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11cmZ5M2RXcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOTgyYTAyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/michy/articles/102a0558096199",
          "author": "zaiwa",
          "description": "はじめに\nこの記事ではstableDiffusionの環境をDiffusersを使ってMacのローカルに構築する方法と、waifu-diffusionなどの学習済みモデルを切り替えながら画像を出力する方法を解説します。\n\n 対象読者\n・M1/M2シリーズのMacユーザ\n・stable-diffusionとその発展型のモデルを気軽に試せる環境がほしい人\n・stable-diffusion環境メンテと最新化に稼働を割く暇がない人\n\n 使用するツール\n\ndiffusers(0.3.0)\nhomebrew\npythonの仮想環境(miniforge or miniconda)\njupyter...",
          "link": "https://zenn.dev/michy/articles/102a0558096199",
          "publishedOn": "2022-09-12T11:12:20.000Z",
          "wordCount": 744,
          "title": "【AIイラスト】M1/M2 Macのローカルにメンテが楽なStableDiffusion環境を構築する(Diffusers)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xhCQgU3v--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zaiwa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590AI%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E3%2580%2591M1%252FM2%2520Mac%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AB%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2581%258C%25E6%25A5%25BD%25E3%2581%25AAStableDiffusion%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2528Diffusers%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HbTdEeDZfZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhMDFjNTg2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xhCQgU3v--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zaiwa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590AI%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E3%2580%2591M1%252FM2%2520Mac%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AB%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2581%258C%25E6%25A5%25BD%25E3%2581%25AAStableDiffusion%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2528Diffusers%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HbTdEeDZfZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhMDFjNTg2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sunaboy/articles/8159041b984210",
          "author": "すな坊や",
          "description": "前置き\nPyhonとTensoleflowで画像分類器を作っています。仕事と関連がなくはないですが、完全に趣味です。\nある日Tensoleflowが突然認識されなくなり(VScodeで「このライブラリは存在しません」といったメッセージが出る)、これを機にPythonの環境をPCからDocekrに移してみようと考えました。\nしかし色々調べていくうちに、「Tensoleflowを使うならDocekrよりSingularityのほうが良い」というのを見かけ、「そこまで言うなら触ってみよう」と思って導入してみたので、その記録です。\n\n Singularityとは？\nDockerと同じ環境構...",
          "link": "https://zenn.dev/sunaboy/articles/8159041b984210",
          "publishedOn": "2022-09-12T10:14:55.000Z",
          "wordCount": 791,
          "title": "Dockerよりお手軽？　Singularityを導入してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VcXf0Bvx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2599%25E3%2581%25AA%25E5%259D%258A%25E3%2582%2584%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25E3%2582%2588%25E3%2582%258A%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25EF%25BC%259F%25E3%2580%2580Singularity%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS12XzZ2VkFtdC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YzQwYmMwZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VcXf0Bvx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2599%25E3%2581%25AA%25E5%259D%258A%25E3%2582%2584%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25E3%2582%2588%25E3%2582%258A%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25EF%25BC%259F%25E3%2580%2580Singularity%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS12XzZ2VkFtdC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YzQwYmMwZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takaya9/articles/ecef7517c24c26",
          "author": "takaya8",
          "description": "Djangoに欠かせないMVCの考え方\n（MTVと紹介する記事もあるけど正直どっちでもいい。大事なのは機能の理解）\n頭が固い私はとにかくイメージを掴むことを大切にした\nM:model。データベース周りの設定\nV:ViewのVだがDjangoのtemplate部分のこと。ざっくり言うとhtmlの部分\nC:Controller。こっちがDjangoのView\n　テンプレートとモデル間でデータのやり取りをするところ。データの運び屋のような感じ\nここまではネットを見ればたくさん出てくる\nじゃあ具体的にどんな感じよ？というのと、URLとの繋がりが直感的にわかりにくい\nまずmvcイメージは\nMode...",
          "link": "https://zenn.dev/takaya9/articles/ecef7517c24c26",
          "publishedOn": "2022-09-12T08:16:38.000Z",
          "wordCount": 111,
          "title": "DjangoのMVCとURLの関係",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a32SCd2m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takaya8%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Django%25E3%2581%25AEMVC%25E3%2581%25A8URL%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FsWURaM01jVmljLUlCTlU1dmJEQVpUS3lIeGNYZjFWbms5S1ExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a32SCd2m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takaya8%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Django%25E3%2581%25AEMVC%25E3%2581%25A8URL%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FsWURaM01jVmljLUlCTlU1dmJEQVpUS3lIeGNYZjFWbms5S1ExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryoutoku/articles/915208a8ba7619",
          "author": "ryoutoku",
          "description": "はじめに\nプロジェクトに入るたび、「アイエエエ!? ジッソウ!? ジッソウナンデ!?」という Django 実装に出会う事が多いので、他山の石として。\n\n 極論な結論\nココを見、ココに準ずる。\nhttps://django-best-practice-ja.readthedocs.io/ja/latest/\n\n 超個人的!!ベストプラクティス\n以降は個人的に考えるベストプラクティス。\nDjango だけでなく、チーム開発や Django REST framework などの要素も含む。\n\n Django 一般\n\n Pipenv や poetry を入れ、本番環境と開発環境の modu...",
          "link": "https://zenn.dev/ryoutoku/articles/915208a8ba7619",
          "publishedOn": "2022-09-12T06:31:37.000Z",
          "wordCount": 1055,
          "title": "超個人的!!Djangoベストプラクティス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iSFXLGJG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryoutoku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25B6%2585%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%2521%2521Django%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djc0tjQ3NMaEpkWkx5amhBTmJwdlZlS3libWFkbzVobVRzNktPWkE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iSFXLGJG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryoutoku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25B6%2585%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%2521%2521Django%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djc0tjQ3NMaEpkWkx5amhBTmJwdlZlS3libWFkbzVobVRzNktPWkE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryoutoku/articles/e6e0b0ac8a9b7d",
          "author": "ryoutoku",
          "description": "はじめに\nプロジェクトに入るたび、「アイエエエ!? ジッソウ!? ジッソウナンデ!?」という実装に出会う事が多いので、他山の石として。\nそれっぽく動くが、実装者が想定していないであろう動作をしそうな、バグになりそうな実装をまとめる。\nPython ベースのサンプルコードだが、他言語一般でも同様に考えることができる。\n\n メソッドのデフォルト引数にオブジェクト型を指定する\nここの「オブジェクト型」はint型などではない以下のようなオブジェクト型である。\n\nlist\ndict\nその他、クラスとか\n\n\n 問題\n初期化されていると思っていた変数が、初期化されずに使いまわされる。\n\n 対策案\n...",
          "link": "https://zenn.dev/ryoutoku/articles/e6e0b0ac8a9b7d",
          "publishedOn": "2022-09-12T05:45:26.000Z",
          "wordCount": 3138,
          "title": "超個人的!!Pythonにおけるバグになりやすい実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uy0rbvZt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryoutoku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25B6%2585%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%2521%2521Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%2590%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djc0tjQ3NMaEpkWkx5amhBTmJwdlZlS3libWFkbzVobVRzNktPWkE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uy0rbvZt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryoutoku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25B6%2585%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%2521%2521Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%2590%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djc0tjQ3NMaEpkWkx5amhBTmJwdlZlS3libWFkbzVobVRzNktPWkE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dicechick373/articles/47fe79558259df",
          "author": "dicechick373",
          "description": "目標\n\nGCSのtxtファイルから数字を読み込む\nGCFで数字を利用して何らかの処理を行う\n＋1した数字をGCSのtxtファイルに保存\n\nのようなことをしたい。\n\n コード\n\n main.py\ndef main(request):\n    # バケット\n    bucket_name = 'YOUR BUCKET NAME'\n    bucket = storage_client.get_bucket(bucket_name)\n\n    # countを記録するファイルを開く\n    blob_count = bucket.blob('count.txt')\n    count = ...",
          "link": "https://zenn.dev/dicechick373/articles/47fe79558259df",
          "publishedOn": "2022-09-12T02:47:22.000Z",
          "wordCount": 318,
          "title": "Google Cloud Storageのキャッシュを保持したくない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--miY-qRbF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cloud%2520Storage%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%2592%25E4%25BF%259D%25E6%258C%2581%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--miY-qRbF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cloud%2520Storage%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%2592%25E4%25BF%259D%25E6%258C%2581%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/johnkf/articles/5b0fa5069ea752",
          "author": "John.K.Fuku",
          "description": "前回に続いてローカルのコンシューマー用GPUで\nどこまで画像生成AIが利用出来るか試してみようシリーズ\n環境は引き続き下記のローカル環境を使用していきます。\nOS:Ubuntu20.04\nGPU:RTX 3090\nVRAM:24GB\nRAM:16GB\n$ nvidia-smi\nMon Sep 12 10:03:47 2022       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 470.103.01   Driver Version: 470....",
          "link": "https://zenn.dev/johnkf/articles/5b0fa5069ea752",
          "publishedOn": "2022-09-12T02:18:42.000Z",
          "wordCount": 1755,
          "title": "trinart_stable_diffusion_v2 をローカル環境のUbuntu と RTX 3090で実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B789uuDr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:John.K.Fuku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:trinart_stable_diffusion_v2%2520%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AEUbuntu%2520%25E3%2581%25A8%2520RTX%25203090%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jeDNZNnMwei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkOTUzZmY1ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B789uuDr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:John.K.Fuku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:trinart_stable_diffusion_v2%2520%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AEUbuntu%2520%25E3%2581%25A8%2520RTX%25203090%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jeDNZNnMwei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkOTUzZmY1ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takakiriy/articles/e359dda3d9959a",
          "author": "Takakiri",
          "description": "フィクスチャーはどこで定義しているのか\npytest のフィクスチャー(fixture)を使うと、テスト データ などがツリー状に整理されるようになりますが、それにも関わらずどこで定義されているかを見付けることは非常に難しいです。 Visual Studio Code などの IDE が定義へのジャンプに対応していれば難しくはないのですが、2022年現在は対応していません。 その機能を持った Visual Studio Code の拡張機能があるようですが、まともに動作しません。\nそこで、フィクスチャーがどこにあるかを検索する簡単な Linux 用 bash スクリプトを作りました。...",
          "link": "https://zenn.dev/takakiriy/articles/e359dda3d9959a",
          "publishedOn": "2022-09-11T16:33:21.000Z",
          "wordCount": 832,
          "title": "【pytest】 フィクスチャーの定義へジャンプするスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dWd6wB_j--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takakiri%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590pytest%25E3%2580%2591%2520%25E3%2583%2595%25E3%2582%25A3%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%25B8%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gwNE5Wa291bkxmWnVxTW81QkRDNlBzX09zUmlpajkwUjhKS0RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dWd6wB_j--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takakiri%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590pytest%25E3%2580%2591%2520%25E3%2583%2595%25E3%2582%25A3%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%25B8%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gwNE5Wa291bkxmWnVxTW81QkRDNlBzX09zUmlpajkwUjhKS0RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/python3654/articles/8d87bb501b5345",
          "author": "とりごん",
          "description": "はじめに\n最近transformersというとても便利なライブラリがあることを知りました！今回はtransformersの初心者向けのガイドを参考に記事を書きたいと思います！(具体的には、テキストの感情分析を扱います。)\nhttps://huggingface.co/docs/transformers/quicktour\n\n Pipeline\npipeline()を使えば、代表的なタスクについて簡単に学習済みのモデルを使用できます。\nテキスト：感情分析、テキスト生成、NER(固有表現抽出)、質問応答、空欄補充、要約、翻訳、特徴抽出\n画像：画像分類、セグメンテーション、物体検出\n音声：...",
          "link": "https://zenn.dev/python3654/articles/8d87bb501b5345",
          "publishedOn": "2022-09-11T14:41:27.000Z",
          "wordCount": 1520,
          "title": "transformersに入門してみた！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w22xaody--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:transformers%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--w22xaody--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:transformers%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/muscle1994/articles/8f7a88f8a20627",
          "author": "muscleProgramer",
          "description": "https://zenn.dev/muscle1994/articles/d0c8fbc44fe25d\n上記の記事の続きです。\n今回は作った環境において、pythonを使ってhello world!を出してみましょう。\nまず、hello world!を出すための新規ファイルを作成しましょう。\n名前はHelloWorld.pyで作成します。\n\n作成が完了したら、pythonのコードを書いていきましょう。\n\n\n とりあえずHello world！を出すコードを作成\n以下のようなコードを作成した。\nこれを実行して、Hello world!を出力してみよう。\n内容としてはHello world!...",
          "link": "https://zenn.dev/muscle1994/articles/8f7a88f8a20627",
          "publishedOn": "2022-09-11T13:56:11.000Z",
          "wordCount": 124,
          "title": "PythonでHello world",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J01HU1bw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:muscleProgramer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7Hello%2520world%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y28tS0o3MmFkYlhKRHNIYVk3N05HeUJaWGVUZTZQMWxhcFVjQkVPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J01HU1bw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:muscleProgramer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7Hello%2520world%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y28tS0o3MmFkYlhKRHNIYVk3N05HeUJaWGVUZTZQMWxhcFVjQkVPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shena46/articles/bbfffc8a6a6233",
          "author": "Shena",
          "description": "概要\n関連ツール(参考)\n\n作ったもの\n\n概要\nデータ構造と役割分担\n\n\n\nハンズオン\n\n目次画像の OCR\ntidy-toc: OCR で得たテキストファイルのクリーニング\nre-numbering: ページ番号調整\n2ymltoc: yaml 形式へ整形\n\n\nまとめ\n参考文献\n\n\n 概要\n一般に, 自炊(紙媒体の本から電子媒体の本を得る作業)して作ったPDF本には目次が付いていない. 目次が必要であれば, 何らかの手段で自分で付与する作業が発生する. 目次付与を行うツールはいくつか存在するが(関連ツールを参照), いずれも\n\n入力\n\n目次を付与したいPDF\n目次内容を記述したテキス...",
          "link": "https://zenn.dev/shena46/articles/bbfffc8a6a6233",
          "publishedOn": "2022-09-11T11:54:45.000Z",
          "wordCount": 1742,
          "title": "自炊PDF本に短時間で詳細な目次を付与するツール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wBUZrsas--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shena%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%2587%25AA%25E7%2582%258APDF%25E6%259C%25AC%25E3%2581%25AB%25E7%259F%25AD%25E6%2599%2582%25E9%2596%2593%25E3%2581%25A7%25E8%25A9%25B3%25E7%25B4%25B0%25E3%2581%25AA%25E7%259B%25AE%25E6%25AC%25A1%25E3%2582%2592%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14OFluYTRoNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTRmY2ViYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wBUZrsas--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shena%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%2587%25AA%25E7%2582%258APDF%25E6%259C%25AC%25E3%2581%25AB%25E7%259F%25AD%25E6%2599%2582%25E9%2596%2593%25E3%2581%25A7%25E8%25A9%25B3%25E7%25B4%25B0%25E3%2581%25AA%25E7%259B%25AE%25E6%25AC%25A1%25E3%2582%2592%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14OFluYTRoNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTRmY2ViYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fjnkt98/articles/fae30cea7dc2f7",
          "author": "藤那花多",
          "description": "AtCoder Beginner Contest 268 C - Chinese RestaurantをPythonで解きます。\n\n 問題\n問題文をAtCoderのページより引用します。\n\n\n 問題文\n回転テーブルの周りに人0、人1、\\ldots、人N-1がこの順番で反時計回りに等間隔で並んでいます。また、人iの目の前には料理p_iが置かれています。\nあなたは次の操作を0回以上何度でも行うことが出来ます。\n\n回転テーブルを反時計回りに1周の\\frac{1}{N}だけ回す。これによって、(この操作の直前に)人iの目の前にあった料理は人(i+1) \\bmod Nの目の前に移動する。\n\n操作を...",
          "link": "https://zenn.dev/fjnkt98/articles/fae30cea7dc2f7",
          "publishedOn": "2022-09-11T09:36:55.000Z",
          "wordCount": 832,
          "title": "ABC268 C - Chinese Restaurant Python解答例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--69h2sBQ---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC268%2520C%2520-%2520Chinese%2520Restaurant%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--69h2sBQ---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC268%2520C%2520-%2520Chinese%2520Restaurant%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shittoku_xxx/articles/13afd6fdfac44e",
          "author": "しっとく",
          "description": "概要\nscipy(python)のラゲール陪多項式（Associated Laguerre polynomial）を使用する際の注意点についての記事です。\n水素原子におけるシュレディンガー方程式の解を描画したいと思った時、その解の中にラゲール陪多項式という特殊函数が出てきます。有難いことにscipyライブラリには、ラゲール陪多項式を計算するモジュールがあり、これを利用できます。（scipy.special.assoc_laguerreなど）\n問題なのが、ラゲール陪多項式の定義が資料によって揺れており、恐らく殆ど全ての量子力学の教科書に載っている定義とscipyで実装されているものが異...",
          "link": "https://zenn.dev/shittoku_xxx/articles/13afd6fdfac44e",
          "publishedOn": "2022-09-11T05:01:09.000Z",
          "wordCount": 5566,
          "title": "【Python】水素原子の解の描画：ラゲール陪多項式計算モジュール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--POmFLtMh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2597%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%258F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E6%25B0%25B4%25E7%25B4%25A0%25E5%258E%259F%25E5%25AD%2590%25E3%2581%25AE%25E8%25A7%25A3%25E3%2581%25AE%25E6%258F%258F%25E7%2594%25BB%25EF%25BC%259A%25E3%2583%25A9%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25AB%25E9%2599%25AA%25E5%25A4%259A%25E9%25A0%2585%25E5%25BC%258F%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fUE1LdklLVS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmNDk4NTFkMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--POmFLtMh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2597%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%258F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E6%25B0%25B4%25E7%25B4%25A0%25E5%258E%259F%25E5%25AD%2590%25E3%2581%25AE%25E8%25A7%25A3%25E3%2581%25AE%25E6%258F%258F%25E7%2594%25BB%25EF%25BC%259A%25E3%2583%25A9%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25AB%25E9%2599%25AA%25E5%25A4%259A%25E9%25A0%2585%25E5%25BC%258F%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fUE1LdklLVS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmNDk4NTFkMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/77c6011beb94b5",
          "author": "よしだ",
          "description": "活性化関数\n活性化関数はNNに非線形性を付加するため、DLにおいて非常に重要な役割を担っています。\nここでは、いくつかの活性化関数とその特徴を見ていきます。\nimport os\nimport json\nimport math\nimport japanize_matplotlib\nimport numpy as np \nimport time\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom tqdm import tqdm\n\nimport torch\nimport torch.nn as nn...",
          "link": "https://zenn.dev/yoshida0312/articles/77c6011beb94b5",
          "publishedOn": "2022-09-10T15:06:54.000Z",
          "wordCount": 9215,
          "title": "Intro2DL：活性化関数とその特徴 pytorchによる実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ngsnvKjj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%25EF%25BC%259A%25E6%25B4%25BB%25E6%2580%25A7%25E5%258C%2596%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E7%2589%25B9%25E5%25BE%25B4%2520pytorch%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ngsnvKjj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%25EF%25BC%259A%25E6%25B4%25BB%25E6%2580%25A7%25E5%258C%2596%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E7%2589%25B9%25E5%25BE%25B4%2520pytorch%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kwi/articles/876a75c34984d4",
          "author": "kwi",
          "description": "例えば rdflib で HTTP 越しに SPARQL クエリしたいとき。一般的には公開 SPARQL エンドポイントでクエリする例がよく出ている。このように平文通信でアクセスできるなら問題ないけれども、認証がかかっていると工夫がいる。ドキュメントによると urllib を使っているから、よろしくやるように書かれている。\nあらかじめ用意されている auth パラメータで HTTP Basic 認証は対応できる。これ以上、たとえば、未認証の場合に別のサイトにリダイレクトで飛ばされて、そこで認証が終わってから戻されるといったフローの場合は下準備がいる。\nどのようにするかあまり例がなかったの...",
          "link": "https://zenn.dev/kwi/articles/876a75c34984d4",
          "publishedOn": "2022-09-10T12:43:45.000Z",
          "wordCount": 674,
          "title": "urllib を拡張する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zcmfEkaa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kwi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:urllib%2520%25E3%2582%2592%25E6%258B%25A1%25E5%25BC%25B5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zcmfEkaa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kwi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:urllib%2520%25E3%2582%2592%25E6%258B%25A1%25E5%25BC%25B5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/a3e1a6e80efd99",
          "author": "osn_Lofi",
          "description": "はじめに\n自然言語処理をはじめたら、一度は作ってみたいのが共起ネットワークではないかと思います。\n私自身、共起ネットワークについては、書籍やネット記事を参考にしながら、これまで何度も作ってきました。\nしかしながら、文章→共起行列→共起ネットワークとなる一連の過程において、特に共起行列を作成するコードの理解が十分ではないと思い至り、今回、勉強もかねて、共起行列の作成過程を残すことにしました。\n共起ネットワークに興味を持たれている方の参考になればと思います。\n\n 共起ネットワーク\n単語どおしのつながりを可視化してくれる手法で、文章の構造的な特徴を直感的に理解するのによく利用されます。\n文...",
          "link": "https://zenn.dev/robes/articles/a3e1a6e80efd99",
          "publishedOn": "2022-09-10T11:57:49.000Z",
          "wordCount": 2606,
          "title": "【自然言語処理】【Python】共起ネットワークの作り方を理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OVBARYFs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E5%2585%25B1%25E8%25B5%25B7%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OVBARYFs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E5%2585%25B1%25E8%25B5%25B7%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/johnkf/articles/bb89cdd60a175b",
          "author": "John.K.Fuku",
          "description": "Google Colabで実行するだけのほうが楽ではありますが\nローカル環境のほうがvram多いGPU積んだのでせっかくなので使いたい人とか向けの記事。\n※Colabを使用したい方はこちらから\"Open in Colab\"でノートブックが開けますので\nひたすらそれを実行すると良いです。\nhttps://huggingface.co/hakurei/waifu-diffusion\nローカル環境\n-Ubuntu 20.04\n-RTX 3090\n1.Waifu-diffusionからリポジトリをローカル環境にクローンする。\nhttps://github.com/harubaru/waifu-d...",
          "link": "https://zenn.dev/johnkf/articles/bb89cdd60a175b",
          "publishedOn": "2022-09-10T09:36:53.000Z",
          "wordCount": 1538,
          "title": "Waifu Diffusionをローカル環境で動かした手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bzCr7m65--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:John.K.Fuku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Waifu%2520Diffusion%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jeDNZNnMwei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkOTUzZmY1ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bzCr7m65--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:John.K.Fuku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Waifu%2520Diffusion%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jeDNZNnMwei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkOTUzZmY1ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tomomaru87/articles/1ef214dee45991",
          "author": "tomomaru87",
          "description": "brew install pyenvを叩く。\nbrew install python3を叩く\npython3 -m pip install selenium\nこっからは好きなライブラリをたくさんインストールできるお。\njupyter notebook\nこいつを叩くと統合IDEが起動する。\nあとは楽しくコードを書こう。",
          "link": "https://zenn.dev/tomomaru87/articles/1ef214dee45991",
          "publishedOn": "2022-09-10T07:04:58.000Z",
          "wordCount": 82,
          "title": "【Python】Seleniumの環境構築までにやったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DgjL3OXB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomomaru87%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Selenium%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfTFZHNGZXdWVlN18wdVFhUE9CN1YtWnVnT3VIdHV5MzZMaVpJWldNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DgjL3OXB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomomaru87%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Selenium%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfTFZHNGZXdWVlN18wdVFhUE9CN1YtWnVnT3VIdHV5MzZMaVpJWldNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tfutada/articles/c3d172533c698c",
          "author": "TF",
          "description": "Node.js、Python、Go、Rustそれぞれでのファイル・ダウンロードの方法になります。\n\n 前提条件\nお堅く書きますと、\n膨大な数の巨大なzipファイルを効率よく(低予算で)ダウンロードするクライアント・プログラム\nという要件になります。\n\n 補足事項\nサーバは無限にスケールすると想定\nペイロードの中身を開けて演算処理はしない。そのためI/Oバウンドになる。\nファイルディスクリプタ(ソケット)は無限にある\n!\nもちろん、負荷をかけるときはご自身のサーバを使用してください。GitHubなどを使用してはダメです。\n\n\n 基本設計指針\n\nストリーミングを使用し、メモリの消費を少なくす...",
          "link": "https://zenn.dev/tfutada/articles/c3d172533c698c",
          "publishedOn": "2022-09-10T03:56:32.000Z",
          "wordCount": 2403,
          "title": "言語別のファイルダウンロード方法 - Node.js Python Rust Go",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J38FT3JG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2588%25A5%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E6%2596%25B9%25E6%25B3%2595%2520-%2520Node.js%2520Python%2520Rust%2520Go%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J38FT3JG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2588%25A5%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E6%2596%25B9%25E6%25B3%2595%2520-%2520Node.js%2520Python%2520Rust%2520Go%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/8ea32494d40f06",
          "author": "osn_Lofi",
          "description": "はじめに\n話題の画像生成AIStableDiffusionを、GoogleColaboratoryを使って爆速で実装することができました。（正味30分程度で実装できました）\nここでは、実装方法などについて、余計な説明なしに爆速でご紹介したいと思います。\n \n\n StableDiffusionとは\nテキストから画像を生成してくれるオープンソースのAIです。\nいわゆるText to Imageというやつです。\n2022年8月に英Stability AIが、HuggingFaceで無償公開しました。\n\n\n それでは実装方法を見ていきましょう\n\n HuggingFaceでのアクセストークンの...",
          "link": "https://zenn.dev/robes/articles/8ea32494d40f06",
          "publishedOn": "2022-09-10T02:45:49.000Z",
          "wordCount": 796,
          "title": "【画像生成】Python初心者でも話題のStableDiffusionを爆速で実装できた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wKWsYtGH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590%25E7%2594%25BB%25E5%2583%258F%25E7%2594%259F%25E6%2588%2590%25E3%2580%2591Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEStableDiffusion%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wKWsYtGH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590%25E7%2594%25BB%25E5%2583%258F%25E7%2594%259F%25E6%2588%2590%25E3%2580%2591Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEStableDiffusion%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gamella/articles/eaf7fe5a96bdf0",
          "author": "tomo@Alpaca",
          "description": "はじめに\n先週からマケデコというMarket APIのDeveloper Communityの運営をスタートしており、その中で我々が問題設計を担当した以下のKaggleコンペにおいて どのような問題設計と実際にどうやって解いてみたのか？ という質問を頂いた。この記事では、そのあたりについてKaggleで金融コンペを開催するための(僕が知っている)すべてを記載してみようと思います。\nhttps://www.kaggle.com/competitions/jpx-tokyo-stock-exchange-prediction/\nもし、このような話に興味があればマケデコDiscordのリン...",
          "link": "https://zenn.dev/gamella/articles/eaf7fe5a96bdf0",
          "publishedOn": "2022-09-10T02:22:26.000Z",
          "wordCount": 478,
          "title": "Kaggleで金融コンペを開催するための(僕が知っている)すべて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r00PAkpS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomo%2540Alpaca%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Kaggle%25E3%2581%25A7%25E9%2587%2591%25E8%259E%258D%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2582%2592%25E9%2596%258B%25E5%2582%25AC%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2528%25E5%2583%2595%25E3%2581%258C%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%2529%25E3%2581%2599%25E3%2581%25B9%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KWHB4UUR6ei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--r00PAkpS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomo%2540Alpaca%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Kaggle%25E3%2581%25A7%25E9%2587%2591%25E8%259E%258D%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2582%2592%25E9%2596%258B%25E5%2582%25AC%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2528%25E5%2583%2595%25E3%2581%258C%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%2529%25E3%2581%2599%25E3%2581%25B9%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KWHB4UUR6ei0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/saya9875/articles/ef129bf5314eec",
          "author": "Saya",
          "description": "下記のようなモデルがあったとします。\nimport uuid\nfrom django.db import models\n\n\nclass Author(models.Model):\n    uuid = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    name = models.CharField(max_length=200)\n    email = models.EmailField()\n１つのフィールドに更新をかけるだけだったら、\nauthor = Author.objects.ge...",
          "link": "https://zenn.dev/saya9875/articles/ef129bf5314eec",
          "publishedOn": "2022-09-10T01:38:02.000Z",
          "wordCount": 235,
          "title": "Djangoで複数フィールドに更新をかけたい時",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YF7KiNgi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Saya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AB%25E6%259B%25B4%25E6%2596%25B0%25E3%2582%2592%25E3%2581%258B%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16TXZqYmc0cy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhODYxNjRmOTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YF7KiNgi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Saya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AB%25E6%259B%25B4%25E6%2596%25B0%25E3%2582%2592%25E3%2581%258B%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16TXZqYmc0cy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhODYxNjRmOTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dicechick373/articles/6e0b6bdc3fbe7e",
          "author": "dicechick373",
          "description": "目標\n\nGCFでsitemap.xmlを作成する\nGCSに保存する\n\n\n コード\n\n main.py\nimport json\nimport xml.etree.ElementTree as ET\nimport datetime\nimport urllib.request\nimport os\nimport tempfile\nfrom google.cloud import storage\nstorage_client = storage.Client()\n\ndef main(request):\n\n    urlset = ET.Element('urlset')\n    urlset....",
          "link": "https://zenn.dev/dicechick373/articles/6e0b6bdc3fbe7e",
          "publishedOn": "2022-09-09T22:50:36.000Z",
          "wordCount": 568,
          "title": "GoogleCloudFunctionsでsitemap.xmlを作成してCloudStorageに保存する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--U3NMY9Rr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:GoogleCloudFunctions%25E3%2581%25A7sitemap.xml%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6CloudStorage%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--U3NMY9Rr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:GoogleCloudFunctions%25E3%2581%25A7sitemap.xml%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6CloudStorage%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dicechick373/articles/297454b3752abd",
          "author": "dicechick373",
          "description": "目標\n\nGCFでRESAS-APIの都道府県一覧を取得\nRESAS-API-KEYはsecret managerで管理\n\n\n コード\n\n main.py\nimport json\nimport urllib.request\nimport os\n\ndef main(request):\n    return json.dumps(getPrefList(),ensure_ascii=False, indent=4)\n\n# RESAS-APIから都道府県一覧を取得\ndef getPrefList():\n    RESAS_API_KEY = os.getenv('RESAS_API_KEY'...",
          "link": "https://zenn.dev/dicechick373/articles/297454b3752abd",
          "publishedOn": "2022-09-09T22:24:34.000Z",
          "wordCount": 459,
          "title": "GoogleCloudFunctionsでRESAS-APIの都道府県一覧を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qRhncaLA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:GoogleCloudFunctions%25E3%2581%25A7RESAS-API%25E3%2581%25AE%25E9%2583%25BD%25E9%2581%2593%25E5%25BA%259C%25E7%259C%258C%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qRhncaLA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:GoogleCloudFunctions%25E3%2581%25A7RESAS-API%25E3%2581%25AE%25E9%2583%25BD%25E9%2581%2593%25E5%25BA%259C%25E7%259C%258C%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gaipoi/articles/33774a5cb9feeb",
          "author": "gaipoi",
          "description": "Pythonにおける基本構文 with\nファイルを新規で作成する場合はopen関数を使って開くと、開いたファイルに対して読み書きを実行することが可能となる。作業終了後は close() をコールして閉じる必要がある。\n# MARK: - open関数\n\n# w: 書き込み専用で記載、ファイル名が存在している場合は上書き\n# r: 読み込み専用\n# x: 新規ファイルの書き込み\nfile = open('sample-file.txt', 'w', encoding = 'utf-8') \n\nfile.write('Hello World')\nfile.close()\nこのように、ファ...",
          "link": "https://zenn.dev/gaipoi/articles/33774a5cb9feeb",
          "publishedOn": "2022-09-09T13:54:03.000Z",
          "wordCount": 215,
          "title": "Pythonのwith構文とは?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g8Oxn8Uu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gaipoi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25AEwith%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25A8%25E3%2581%25AF%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Zc0FYUnZzbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2OTllMjlmZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g8Oxn8Uu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gaipoi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25AEwith%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25A8%25E3%2581%25AF%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Zc0FYUnZzbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2OTllMjlmZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zuoli/articles/f363e9eb3ed43b",
          "author": "zuoli",
          "description": "はじめに\nPyTorchでは、ディープラーニングのモデルを量子化する様々な方法が用意されています。今回はPyTorchでサポートされている量子化方法について、ドキュメントに記載されているコードをベースに確認していこうと思います。\n\n PyTorchでの量子化について\n深層学習の分野では、重みやバイアスといったパラメータの量子化bit数を下げる変換のことを量子化と呼びます。 PyTorchではモデルは浮動小数点(FP32)でパラメータを保存しており、量子化することでこれらを固定小数点(INT8)へ変換することができます。量子化によりモデルサイズは1/4となり、計算も2~4倍ほど高速にな...",
          "link": "https://zenn.dev/zuoli/articles/f363e9eb3ed43b",
          "publishedOn": "2022-09-09T13:28:24.000Z",
          "wordCount": 1907,
          "title": "PyTorchの量子化を3種類動かしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ScCmDZNu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zuoli%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PyTorch%25E3%2581%25AE%25E9%2587%258F%25E5%25AD%2590%25E5%258C%2596%25E3%2582%25923%25E7%25A8%25AE%25E9%25A1%259E%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Ncm9MUGtLMC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkOWJlYTc4NmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ScCmDZNu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zuoli%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PyTorch%25E3%2581%25AE%25E9%2587%258F%25E5%25AD%2590%25E5%258C%2596%25E3%2582%25923%25E7%25A8%25AE%25E9%25A1%259E%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Ncm9MUGtLMC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkOWJlYTc4NmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimat/articles/baee671a1a00d0",
          "author": "shimat",
          "description": "先に結論\nopencv-python-headlessを使いましょう。\n最小サンプルコード\nhttps://github.com/shimat/streamlit_with_opencv_sample\n公開したサンプル\nhttps://shimat-streamlit-with-opencv-sample-main-t0iuwf.streamlitapp.com/\n\n Streamlit Community Cloudについて\nCommunity Cloudは、Streamlitの公式ホスティングサービスです。[1]\nhttps://streamlit.io/cloud\n以下を用意す...",
          "link": "https://zenn.dev/shimat/articles/baee671a1a00d0",
          "publishedOn": "2022-09-09T12:43:41.000Z",
          "wordCount": 526,
          "title": "Streamlit Community CloudでOpenCVアプリを公開する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TZCDTZ10--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Streamlit%2520Community%2520Cloud%25E3%2581%25A7OpenCV%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11cmZ5M2RXcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOTgyYTAyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TZCDTZ10--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Streamlit%2520Community%2520Cloud%25E3%2581%25A7OpenCV%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11cmZ5M2RXcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOTgyYTAyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mory22k/articles/1a4fc1209a7287",
          "author": "mory22k",
          "description": "前回：https://zenn.dev/mory22k/articles/e3a51a259e590e\n前回の記事では、NumPy を使用して基本的にゼロからニューラルネットワークを実装しました。\nhttps://zenn.dev/mory22k/articles/e3a51a259e590e\n最大の問題点は、レイヤーごとに誤差逆伝播の計算式を手計算で導出する必要があることです。例えば全結合層では、次のように backward() を実装していました (若干変更を加えています):\nclass Affine:\n    def __init__(self, input_size, outpu...",
          "link": "https://zenn.dev/mory22k/articles/1a4fc1209a7287",
          "publishedOn": "2022-09-09T12:23:18.000Z",
          "wordCount": 4796,
          "title": "[PyTorch] ニューラルネットワークをゼロから実装だけど勾配計算はライブラリに頼って楽をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Aln4xLYs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BPyTorch%255D%2520%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A9%25E5%258B%25BE%25E9%2585%258D%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AB%25E9%25A0%25BC%25E3%2581%25A3%25E3%2581%25A6%25E6%25A5%25BD%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Aln4xLYs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BPyTorch%255D%2520%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A9%25E5%258B%25BE%25E9%2585%258D%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AB%25E9%25A0%25BC%25E3%2581%25A3%25E3%2581%25A6%25E6%25A5%25BD%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/t_fukuyama/articles/33ab5b2f1c5747",
          "author": "t.fukuyama",
          "description": "はじめに\n最近、自分が学び始めの時はクラス、コンストラクタ、オブジェクトなど横文字などが多くよくわからんかったなーと思い出し、変数やUI構築を学ぶ前に一番最初にオブジェクト指向の全体像をもっと把握しておくべきだったと思っているのでそんな方向けに書いた。友達もIT業界就職したい友達も多いし見て損はないと思われる。\nオブジェクト指向言語の中でもJavaで以下解説している\n参考記事\n\n 対象読者\nオブジェクト指向がよくわからない人向けです。また、値オブジェクトやクラス設計のルール、可読性の勉強をしたい人向けにも役に立つかもしれない。ちなみに僕は値オブジェクトの重要性を痛感し、この記事を書こ...",
          "link": "https://zenn.dev/t_fukuyama/articles/33ab5b2f1c5747",
          "publishedOn": "2022-09-09T05:02:51.000Z",
          "wordCount": 794,
          "title": "【入門】オブジェクト指向言語とクラス設計の超簡単まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Mb_en1xP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:t.fukuyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A8%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25AE%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wUm01dGVXSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5MWNkZWFlNmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Mb_en1xP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:t.fukuyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A8%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25AE%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wUm01dGVXSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5MWNkZWFlNmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kitchy/articles/5312d3c418f99e",
          "author": "kitchy",
          "description": "はじめに\n学部時代NLPをやっていて、某大学院M1の今は音声認識をしている自分ですが、ひょんなことからVoice Conversionについて勉強できる機会があったので、Voice Conversion Challenge2020 (VCC20)のベースラインとして提示されている2つの論文についてちょうさしたので、情報をまとめておきます。\n\n Voice　Conversionとは？\nhttps://engineering.dena.com/blog/2022/06/voice-conversion-technology-2-livestreaming/\nDeNAさんのテックブログが一...",
          "link": "https://zenn.dev/kitchy/articles/5312d3c418f99e",
          "publishedOn": "2022-09-08T09:45:43.000Z",
          "wordCount": 751,
          "title": "VCC2020の2つのBaseline modelの調査",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ao_eCyWK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kitchy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VCC2020%25E3%2581%25AE2%25E3%2581%25A4%25E3%2581%25AEBaseline%2520model%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Ua2hURC02VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4MGM0ZTc3NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ao_eCyWK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kitchy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VCC2020%25E3%2581%25AE2%25E3%2581%25A4%25E3%2581%25AEBaseline%2520model%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Ua2hURC02VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4MGM0ZTc3NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/thimblee/articles/ml_prml_relevance-vector-machine",
          "author": "Thimblee",
          "description": "はじめに\nPRML(Pattern Recognition and Machine Learning)で関連ベクトルマシンについて学んだ内容をまとめて、実際のデータを使って学習しました。主に7章2節の内容です。学習アルゴリズムの全体像を示すことを意識したので、導出は端折っている部分が多いです。詳しい解の導出は、PRMLの本文や演習問題にあります。そのほかに参考になるものは最後にまとめてあります。\n\n 関連ベクトルマシンのアルゴリズム\n\n 変数一覧\n\n訓練データの数 N\n\n基底関数の数 M\n\n訓練データの説明変数 \\mathbf{X} = \\left\\{\\mathbf{x}_1, \\m...",
          "link": "https://zenn.dev/thimblee/articles/ml_prml_relevance-vector-machine",
          "publishedOn": "2022-09-08T05:09:23.000Z",
          "wordCount": 3179,
          "title": "関連ベクトルマシンをPythonコードを交えて紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--blryTo6R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Thimblee%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2596%25A2%25E9%2580%25A3%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%2592Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BA%25A4%25E3%2581%2588%25E3%2581%25A6%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1BUWhUYkZNbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViMzVkNWJjOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--blryTo6R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Thimblee%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2596%25A2%25E9%2580%25A3%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%2592Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BA%25A4%25E3%2581%2588%25E3%2581%25A6%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1BUWhUYkZNbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViMzVkNWJjOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/bd83b15077825c",
          "author": "よしだ",
          "description": "例題：XOR\nPytorchにおけるNNの学習/推論を行うにあたり、XORの例題を使用します。\nXORとは、x_1とx_2の片方が1で残りが0であればラベル１、それら以外のケースであればラベル0を入力するような問題で、単純な線形関数ではうまく推論できないです。\nこの例題を解くために、Pytorchのモジュールを使用していきます。\nimport os\nimport numpy as np \nimport time\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom tqdm import tqdm\n\n モデル構築の流...",
          "link": "https://zenn.dev/yoshida0312/articles/bd83b15077825c",
          "publishedOn": "2022-09-07T13:05:38.000Z",
          "wordCount": 3914,
          "title": "Intro2DL：Pytorchの基礎　XORの例題をもとに",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6b_tgqNK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%25EF%25BC%259APytorch%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2580%2580XOR%25E3%2581%25AE%25E4%25BE%258B%25E9%25A1%258C%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6b_tgqNK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%25EF%25BC%259APytorch%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2580%2580XOR%25E3%2581%25AE%25E4%25BE%258B%25E9%25A1%258C%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/keras-act-func01",
          "author": "NekoAllergy",
          "description": "はじめに\n前回までの内容で、モデルの作成、層の追加、データの入力　という基本を実行できました。\n↓ 前回の内容\nhttps://zenn.dev/nekoallergy/articles/keras-create-model02\nただ、作成したモデルは不完全です。なぜなら、活性化関数を指定していないから です。実際に人工知能を作る際は、モデル内の活性化関数を決める必要があります。\n今回は、モデルの各層に活性化関数を指定する方法を紹介します。そのうえで、そのモデルにデータを流して結果を確認してみます。正しく活性化関数が適用されているかをチェックしましょう。\n\n 今回の目的\n\n活性化関...",
          "link": "https://zenn.dev/nekoallergy/articles/keras-act-func01",
          "publishedOn": "2022-09-07T12:00:00.000Z",
          "wordCount": 1007,
          "title": "【図解】keras でモデルに活性化関数を指定する方法は？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iqslmddb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591keras%2520%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E6%25B4%25BB%25E6%2580%25A7%25E5%258C%2596%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iqslmddb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591keras%2520%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E6%25B4%25BB%25E6%2580%25A7%25E5%258C%2596%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/minamiso/articles/4b4d319600cdd7",
          "author": "minami",
          "description": "Pythonをアンインストールする\n公式からMacにインストールしたPythonをアンインストールしたとき、地味に面倒だったので備忘として書いておきます。\n\n python3の削除\n$ sudo rm -rf /usr/local/bin/python3\n/usr/bin/pythonではないので注意。\n\n Python.framework（ってなに？）を削除\n$ sudo rm -rf /Library/Frameworks/Python.framework\n/System/Library/Frameworks/Python.frameworkではないので注意。\n\n シンボリックリ...",
          "link": "https://zenn.dev/minamiso/articles/4b4d319600cdd7",
          "publishedOn": "2022-09-07T03:56:23.000Z",
          "wordCount": 292,
          "title": "[macOS]公式からインストールしたPythonをアンインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LX9DvevT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minami%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BmacOS%255D%25E5%2585%25AC%25E5%25BC%258F%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259FPython%25E3%2582%2592%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LX9DvevT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minami%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BmacOS%255D%25E5%2585%25AC%25E5%25BC%258F%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259FPython%25E3%2582%2592%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kinnkinn/articles/4b017400aecaf5",
          "author": "kinnkinn",
          "description": "はじめに\nプログラムを書いているとバージョン管理のために現在時刻が欲しいときがありますよね？？\nそんな時にいい感じで出力できる簡単なプログラムをPythonで書きました．\nモジュールとして他のプログラムで使ってもいいかも．\n\n プログラム\nimport datetime\n\ndef printnow():\n    #別のプログラムで呼び出す用\n    now = datetime.datetime.now()\n    today1 = now.strftime('%Y/%m/%d/%H:%M')\n    print(today1)\n\ndef main():\n    now = date...",
          "link": "https://zenn.dev/kinnkinn/articles/4b017400aecaf5",
          "publishedOn": "2022-09-06T15:22:25.000Z",
          "wordCount": 346,
          "title": "いい感じに現在時刻を表示したい！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--scbxZ0cL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kinnkinn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2581%2584%25E3%2581%2584%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB%25E7%258F%25BE%25E5%259C%25A8%25E6%2599%2582%25E5%2588%25BB%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yR0NXM3JJSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Y2M3ZGVjYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--scbxZ0cL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kinnkinn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2581%2584%25E3%2581%2584%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB%25E7%258F%25BE%25E5%259C%25A8%25E6%2599%2582%25E5%2588%25BB%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yR0NXM3JJSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Y2M3ZGVjYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/chimuichimu/articles/954fc680a6252f",
          "author": "chimuichimu",
          "description": "概要\n時系列データの周期性解析で Lomb-Scargle 法を使う場面が最近あった。\nLomb-Scargle 法はいくつかのライブラリで提供されているようだが、今回は Scipy で提供されるモジュールを使用した。備忘録として使用法をメモしておく。\n\n Lomb-Scargle ピリオドグラムとは\nLomb-Scargle ピリオドグラム（Lomb (1976)[1], Scargle (1982)[2]）とは、不規則にサンプリングされた時系列データから、周期性を見つけ出す統計的手法である。\n周期性の解析に用いられる手法として、高速フーリエ変換（Fast Fourier Tran...",
          "link": "https://zenn.dev/chimuichimu/articles/954fc680a6252f",
          "publishedOn": "2022-09-06T13:27:52.000Z",
          "wordCount": 983,
          "title": "Scipy の Lomb-Scargle ピリオドグラムを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DYfZnvYR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chimuichimu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Scipy%2520%25E3%2581%25AE%2520Lomb-Scargle%2520%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AA%25E3%2583%2589%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1LRWJhMkFTRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkMTJiMmFiNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DYfZnvYR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chimuichimu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Scipy%2520%25E3%2581%25AE%2520Lomb-Scargle%2520%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AA%25E3%2583%2589%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1LRWJhMkFTRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkMTJiMmFiNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/usagipy/articles/f53eade58f1ac3",
          "author": "usagipy",
          "description": "作ったサイト名：話題のテック　下がサイトです\n話題のテック\nhttps://wadainotech.com\n\n 40代のプログラミング初心者が8ヶ月目webサービスを作りたい\nWebサービスとかめんどくさいだろうなぁ。。。どうやってつくるのかなぁ\nよし、本を買おう！買いました\nPythonではじめる Webサービス&スマホアプリの書きかた・作りかた\nhttps://amzn.to/3TiTYuj\nこの本のコンセプト\nリリースしろ\nたくさん作れ\n1/3を読んだ時点でとりあえず作ろうと思いました\nこの本はpythonのフレームワークのFlaskを使っています。\nFlaskってなんて読...",
          "link": "https://zenn.dev/usagipy/articles/f53eade58f1ac3",
          "publishedOn": "2022-09-06T13:08:00.000Z",
          "wordCount": 282,
          "title": "40代プログラミング初心者がPython＋FlaskでQiitaとZenとはてぶのトレンドまとめサイト作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i_Cc9CtE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:usagipy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:40%25E4%25BB%25A3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258CPython%25EF%25BC%258BFlask%25E3%2581%25A7Qiita%25E3%2581%25A8Zen%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25A6%25E3%2581%25B6%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS13VEFrYmI2Yy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4YTE5NjcxMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i_Cc9CtE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:usagipy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:40%25E4%25BB%25A3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258CPython%25EF%25BC%258BFlask%25E3%2581%25A7Qiita%25E3%2581%25A8Zen%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25A6%25E3%2581%25B6%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS13VEFrYmI2Yy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4YTE5NjcxMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/keras-create-model02",
          "author": "NekoAllergy",
          "description": "はじめに\n前回は、Keras でモデルを作成し、層を追加することができました。\n↓ 前回の内容\nhttps://zenn.dev/nekoallergy/articles/keras-create-model01\n作成したモデルはまだ不完全ですが、既に動かせる状態です。つまり、このモデルに何かのデータを入力すると、何かしらの出力を返してくれます。\nまだ学習をしていないので出力される数値に意味はありませんが、モデルの動作やデータ形状を確認するために、順伝搬させてみましょう。\n\n 今回の目的\n\nモデルの動作や、データ形状を確認する\nモデルにデータを入れて、出力される結果を見てみる\n\n\n...",
          "link": "https://zenn.dev/nekoallergy/articles/keras-create-model02",
          "publishedOn": "2022-09-06T12:00:00.000Z",
          "wordCount": 627,
          "title": "【図解】keras でモデルにデータを入れて結果をみてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YvNBRxUv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591keras%2520%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E3%2581%25BF%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YvNBRxUv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591keras%2520%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E3%2581%25BF%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hevo2/articles/b126d593d0f754",
          "author": "hevo2",
          "description": "はじめに\n\nQiitaに書いた以下の記事と同様のもの\n\nMacbook Air M2（mem16GB）のローカル環境でStable Diffusionを動かす（2022.9.6版）\n\n\npython3必須。minicondaを利用。学習済みモデルファイル（約4GB）は事前にダウンロードしておくこと\n1画像出力で3分30秒くらい。\n\n\n 参考ページ\n\n使うリポジトリ\n\nhttps://github.com/lstein/stable-diffusion\n\n\n参考としたドキュメント\n\nhttps://github.com/lstein/stable-diffusion/blob/main...",
          "link": "https://zenn.dev/hevo2/articles/b126d593d0f754",
          "publishedOn": "2022-09-06T06:52:47.000Z",
          "wordCount": 422,
          "title": "Macbook Air M2（mem16GB）のローカル環境でStable Diffusionを動かす（2022.9.6版）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dhBS-8Zu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hevo2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Macbook%2520Air%2520M2%25EF%25BC%2588mem16GB%25EF%25BC%2589%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Stable%2520Diffusion%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%25882022.9.6%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dvekRSbjdoMDNOV0Z6ajBMbmlDaVFIanNXbVlHYnFjQ1VrMm02WVE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dhBS-8Zu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hevo2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Macbook%2520Air%2520M2%25EF%25BC%2588mem16GB%25EF%25BC%2589%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Stable%2520Diffusion%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%25882022.9.6%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dvekRSbjdoMDNOV0Z6ajBMbmlDaVFIanNXbVlHYnFjQ1VrMm02WVE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/1504c751190d09",
          "author": "よしだ",
          "description": "Pytorch\n本リポジトリでは、研究用途を中心に多く使用されているPytorchの基礎をまとめようとしたのですが、UvA Deep Learning Tutorials https://github.com/phlippe/uvadlc_notebooks\nをほとんど日本語化しただけのようになってしまいました。今後は、このチュートリアルをベースに追加の関数やモデルも実装しながら拡充していこうと思います。\nimport numpy as np\nバージョンの確認\nimport torch\n\nprint(torch.__version__)\n1.12.1\n\nseedの設定\npytorch...",
          "link": "https://zenn.dev/yoshida0312/articles/1504c751190d09",
          "publishedOn": "2022-09-06T06:45:33.000Z",
          "wordCount": 1692,
          "title": "Intro2DL : Pytorchの基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RhrNAYvK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%2520%253A%2520Pytorch%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RhrNAYvK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Intro2DL%2520%253A%2520Pytorch%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yaakiyu_s/articles/43deb462a663c7",
          "author": "yaakiyu_school",
          "description": "discord.py2.0でハイブリッドコマンドを使う。\ndiscordにはスラッシュコマンドと呼ばれる機能があります。botとユーザーがメッセージを使わなくてもやりとりできる機能です。\nまた、discord.pyには古くから「コマンド」の概念がありました。!pingというメッセージを送信するとPong!って言われて、!helpだとI won't help you!って言われる、みたいな。\n(helpしてくれないbotは意地悪なので使いたくないですが())\nそれを簡単に作るために作られたフレームワークがdiscord.ext.commandsです。\nこのcommandsの機能(メッセ...",
          "link": "https://zenn.dev/yaakiyu_s/articles/43deb462a663c7",
          "publishedOn": "2022-09-06T05:05:28.000Z",
          "wordCount": 647,
          "title": "discord.py v2.0でハイブリッドコマンド",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B6UTFuRO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yaakiyu_school%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:discord.py%2520v2.0%25E3%2581%25A7%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tOUhHUWt6Ni0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlOTcwYWY5NzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B6UTFuRO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yaakiyu_school%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:discord.py%2520v2.0%25E3%2581%25A7%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tOUhHUWt6Ni0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlOTcwYWY5NzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tfutada/articles/717b60a6e7961a",
          "author": "TF",
          "description": "Stable Diffusionの関連ブログがあちこちに量産されていますね。実際のサービスにどう落とし込みマネタイズするか、色々なアイデアが浮かびそうです。\nこの記事では機械学習をやったことのないエンジニアを想定した、GCPのGCE(ディープラーニングVM)を使用した手順書になります。\n\nStable Diffusionとは、プロンプトと称するテキストから画像を生成するAIです。CompVis, Stability AI, LAIONの研究者、エンジニアによって開発されました。　Stability AIのEmadがTwitterで活発に情報発信しています。\n\n!\n普段からクラウド環境で開...",
          "link": "https://zenn.dev/tfutada/articles/717b60a6e7961a",
          "publishedOn": "2022-09-06T04:02:50.000Z",
          "wordCount": 1779,
          "title": "Stable Diffusionのインストール手順書(GCP版)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GlFcQfNj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffusion%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2589%258B%25E9%25A0%2586%25E6%259B%25B8%2528GCP%25E7%2589%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GlFcQfNj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffusion%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2589%258B%25E9%25A0%2586%25E6%259B%25B8%2528GCP%25E7%2589%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ktoyod/articles/803b9f1b2860b6",
          "author": "ktoyod",
          "description": "Links\n\nInstall Elasticsearch with Docker | Elasticsearch Guide [8.3] | Elastic\nPython Elasticsearch 基本的な使い方まとめ - Qiita\n\n\n 概要\nElasticsearch を触ってみた。Elasticsearch が何か、という点については他の記事に譲るとしてこの記事では、とりあえず手元で動かすことをスコープにする。\n具体的には、\n\nDocker を使って Elasticsearch を起動する\nDocker を使って Kibana を起動し、Elasticsearch の中身を...",
          "link": "https://zenn.dev/ktoyod/articles/803b9f1b2860b6",
          "publishedOn": "2022-09-06T00:56:48.000Z",
          "wordCount": 1819,
          "title": "Elasticsearch をとりあえず手元で動かしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kCpXWQw1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ktoyod%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Elasticsearch%2520%25E3%2582%2592%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E6%2589%258B%25E5%2585%2583%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeDFoeHlNay1KZ0ZpVXFocVV2aE1rWVdlSjhsU1JDUS1GOVdKZmI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kCpXWQw1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ktoyod%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Elasticsearch%2520%25E3%2582%2592%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E6%2589%258B%25E5%2585%2583%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeDFoeHlNay1KZ0ZpVXFocVV2aE1rWVdlSjhsU1JDUS1GOVdKZmI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/keras-create-model01",
          "author": "NekoAllergy",
          "description": "はじめに\nKeras を使って、ディープラーニングのモデルを作成してみましょう。\n\n ■ 対象者\n機械学習に関する用語をある程度知っている方を対象としています。\n具体的には、次のような基本用語がなんとなくイメージできるなら OK です。\n\nニューラルネットワーク\n入力層、中間層、出力層\n重み、バイアス\n順伝搬\n\n補足：DeepLearning の基礎を知りたい方はこちらからどうぞ ↓\nhttps://zenn.dev/nekoallergy/books/904df952389317\n\n ■ この記事で分かること\n\nKeras でモデルを作る方法\nモデルに層を追加する方法\nモデルや重...",
          "link": "https://zenn.dev/nekoallergy/articles/keras-create-model01",
          "publishedOn": "2022-09-05T14:00:00.000Z",
          "wordCount": 588,
          "title": "【図解】kerasでモデルを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Dsf1wTa6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591keras%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Dsf1wTa6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591keras%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/canonrock/articles/standfm_user_to_episode",
          "author": "canonrock",
          "description": "はじめに\nこんにちは、stand.fm でMLエンジニアをしているcanonrockです。\nstand.fmでは各画面に表示するコンテンツのパーソナライズを進めており、先日その一環としてホーム画面に各ユーザーへおすすめの放送を表示する機能を追加しました。本記事ではおすすめ放送表示機能のシステム構成やABテスト結果をご紹介しようと思います。\n\n おすすめ放送表示機能の目的と概要\n\n 概要\nstand.fmではアプリを開いた時に最初に出る画面をホーム画面と呼んでいます。ホーム画面では画像のようにテーマ別にセクションが並び、セクション内に放送がいくつか表示されます。\n\nホーム画面に表示され...",
          "link": "https://zenn.dev/canonrock/articles/standfm_user_to_episode",
          "publishedOn": "2022-09-05T07:34:30.000Z",
          "wordCount": 1591,
          "title": "放送レコメンド機能をTensorFlow Recommendersで作り、ABテストしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2UDZDeSa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:canonrock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E6%2594%25BE%25E9%2580%2581%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592TensorFlow%2520Recommenders%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258A%25E3%2580%2581AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nb09hRzVlSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlMjhkMTZmNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2UDZDeSa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:canonrock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E6%2594%25BE%25E9%2580%2581%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592TensorFlow%2520Recommenders%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258A%25E3%2580%2581AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nb09hRzVlSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlMjhkMTZmNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dicechick373/articles/47e437246d79c1",
          "author": "dicechick373",
          "description": "目標\n\nGoogleCloudFunctions（GCF）でseleniumを利用する\nウェブサイトのscreenshotをGoogleCloudStorage（GCS）に保存する\n\n\n 完成品\nhttps://github.com/dicechick373/gcf-selenium-screenshot\n\n main.py\n'YOUR BUCKET NAME'にバケット名を指定\nimport json\nimport os\nimport time\nfrom selenium import webdriver\nfrom google.cloud import storage\n\ndef ...",
          "link": "https://zenn.dev/dicechick373/articles/47e437246d79c1",
          "publishedOn": "2022-09-05T05:02:34.000Z",
          "wordCount": 555,
          "title": "GoogleCloudFunctionsでseleniumを利用してscreenshotを保存する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iR2hgrqN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:GoogleCloudFunctions%25E3%2581%25A7selenium%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6screenshot%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iR2hgrqN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dicechick373%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:GoogleCloudFunctions%25E3%2581%25A7selenium%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6screenshot%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dnX0Jjcl96SzBJWUdTUzVveXNnRVRkY2REME41allVRnN2ZTN4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kinnkinn/articles/aeb0c68fcb81ba",
          "author": "kinnkinn",
          "description": "はじめに\nこの資料は私がC言語を学んでからPythonを勉強したという経験から書いているものです．\nまた分かりやすさや実際に自分が引っかかったところに重点を置いているので間違いや変な所を見つけたらコメント欄で教えてください．\n\n\n 目次\n\n環境構築\npythonの特徴\n標準出力とコメントアウト\n配列\n制御文\n関数\n文字列\nモジュール（外部ライブラリ）\n\nnumpy\nmatplotlib\n\n\nコマンドライン引数\nテキストファイル\n便利な関数\n便利な表現\n問題\nまとめ\n\n\n\n 環境構築\npythonが実行できる環境を作るにはいくつか方法がある\n\nローカルで環境構築する\n\nローカルで環境構...",
          "link": "https://zenn.dev/kinnkinn/articles/aeb0c68fcb81ba",
          "publishedOn": "2022-09-05T04:12:09.000Z",
          "wordCount": 2057,
          "title": "C言語を理解した人へ超わかるPython講座（基礎編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lJIKzgrM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kinnkinn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:C%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E4%25BA%25BA%25E3%2581%25B8%25E8%25B6%2585%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BPython%25E8%25AC%259B%25E5%25BA%25A7%25EF%25BC%2588%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yR0NXM3JJSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Y2M3ZGVjYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lJIKzgrM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kinnkinn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:C%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E4%25BA%25BA%25E3%2581%25B8%25E8%25B6%2585%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BPython%25E8%25AC%259B%25E5%25BA%25A7%25EF%25BC%2588%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yR0NXM3JJSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Y2M3ZGVjYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kotaro_inoue/articles/415e58dc474729",
          "author": "Kotaro Inoue",
          "description": "これまでのお話\nアダコテックではHLACという特徴量を用いた異常検知モデルを提供し、これまで3回に渡って要素技術を解説してきました。\n\n世界一やさしいHLAC入門！(間違い探し編)\n実は単純？良品学習入門！\nワンオペの限界っ！アンサンブルモデル入門！\n\n今回はちょっと毛色を変えて、私自身の興味があったHLACそのものに関する実装の話です！\n関連としてはCTO紹介の下記の濃淡HLACを対象として\nhttps://zenn.dev/kei1978/articles/3191203ece3a74\nt-ibe先生の処理高速化まわりの記事に関連します。\nhttps://zenn.dev/t_i...",
          "link": "https://zenn.dev/kotaro_inoue/articles/415e58dc474729",
          "publishedOn": "2022-09-05T01:01:31.000Z",
          "wordCount": 23928,
          "title": "SIMD下座！？HLACを楽々ベクトル化！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lHi3WVmJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kotaro%2520Inoue%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SIMD%25E4%25B8%258B%25E5%25BA%25A7%25EF%25BC%2581%25EF%25BC%259FHLAC%25E3%2582%2592%25E6%25A5%25BD%25E3%2580%2585%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E5%258C%2596%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycDhvU0p1dC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjOTBlNzZhZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lHi3WVmJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kotaro%2520Inoue%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SIMD%25E4%25B8%258B%25E5%25BA%25A7%25EF%25BC%2581%25EF%25BC%259FHLAC%25E3%2582%2592%25E6%25A5%25BD%25E3%2580%2585%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E5%258C%2596%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycDhvU0p1dC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjOTBlNzZhZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hibiki_kato/articles/a663c89477085d",
          "author": "hibiki_kato",
          "description": "概要\n2022/8/31にpoetry1.2.0が公開されました。同時に今まで使っていたインストーラが使えなくなったので移行方法をメモします。\nhttps://python-poetry.org/blog/announcing-poetry-1.2.0/\n\n エラーが出た状況\ndocker環境でpoetryを使っていました。今まで使っていたのはこれ\nRUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -\n\n エラー\n#10 0.445 Re...",
          "link": "https://zenn.dev/hibiki_kato/articles/a663c89477085d",
          "publishedOn": "2022-09-04T15:55:08.000Z",
          "wordCount": 634,
          "title": "poetryのインストーラを新しいものに移行しなければならない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Th62mt0O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hibiki_kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:poetry%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25A9%25E3%2582%2592%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2582%2582%25E3%2581%25AE%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2591%25E3%2582%258C%25E3%2581%25B0%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NcThweE9jUi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllYmNjMjlkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Th62mt0O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hibiki_kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:poetry%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25A9%25E3%2582%2592%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2582%2582%25E3%2581%25AE%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2591%25E3%2582%258C%25E3%2581%25B0%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NcThweE9jUi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllYmNjMjlkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/books/python-standard-book",
          "author": "mimitako",
          "description": "Pythonについてまとまった技術書があっても検索性に劣ったり、実用的な書き方が見つからなかったりしていませんか？また、インターネットで検索しても網羅的に調べることができないため苦労することも多々あります。そこで、この本ではそれらの問題点を解決するべくPythonの公式サイトを実用ベースにしてみました。",
          "link": "https://zenn.dev/mimitako/books/python-standard-book",
          "publishedOn": "2022-09-04T14:02:00.000Z",
          "wordCount": 58,
          "title": "Python文法の基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G7_0IVHT--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xNzQ1ZTg3NmRhLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G7_0IVHT--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xNzQ1ZTg3NmRhLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/sindicum/articles/4662c8ffbe4156",
          "author": "sindicum",
          "description": "PythonからPostgreSQLへのアクセスにはpsycopg2を用いる。\nバージョン3であるpsycopg3も登場しているが、筆者の環境はApple M1(ARM)のため非対応とのこと（令和4年8月現在）。\nhttps://www.psycopg.org/psycopg3/docs/basic/install.html\n\n 実行環境\n\nApple M1(macOS Monterery)\nPython 3.9.13\nPostgreSQL 13.6\npsycopg2 2.9.3\n\npsycopg2をインポート、PostgreSQLの接続設定を記述。\nimport psycopg2\nds...",
          "link": "https://zenn.dev/sindicum/articles/4662c8ffbe4156",
          "publishedOn": "2022-09-04T12:49:07.000Z",
          "wordCount": 723,
          "title": "Python上でPostGIS検索結果をGeoJSONにて出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mnwt4vvd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sindicum%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E4%25B8%258A%25E3%2581%25A7PostGIS%25E6%25A4%259C%25E7%25B4%25A2%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592GeoJSON%25E3%2581%25AB%25E3%2581%25A6%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pIblJhSWpXejUxSUJDeTFlX042MElodEkzNzNlbURKbjdtT3Bib3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mnwt4vvd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sindicum%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E4%25B8%258A%25E3%2581%25A7PostGIS%25E6%25A4%259C%25E7%25B4%25A2%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592GeoJSON%25E3%2581%25AB%25E3%2581%25A6%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pIblJhSWpXejUxSUJDeTFlX042MElodEkzNzNlbURKbjdtT3Bib3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ninjin_umigame/articles/5e79219e994137",
          "author": "人３",
          "description": "背景\nウミガメのスープは、シチュエーションパズルの別名です。同名のタイトルのクイズが有名であることから、シチュエーションパズル全体を指して「ウミガメのスープ」と呼ばれることが一般的です。シチュエーションパズルの定義を以下に示します。\n\nシチュエーションパズルは通常何人かのグループで遊ぶ。一人が問題を出し、他の人はイエス（はい、肯定）・ノー（いいえ、否定）で答えられる質問を出す(場合によっては「関係ありません」などのイエス・ノー以外の答もあり得る)。質問者は、出題者が考えているストーリー、あるいは物を推測して語る。それがすべての謎を説明できたとき、このパズルは解けたことになる。　― W...",
          "link": "https://zenn.dev/ninjin_umigame/articles/5e79219e994137",
          "publishedOn": "2022-09-04T11:30:56.000Z",
          "wordCount": 417,
          "title": "Sentence BERTでウミガメのスープ出題AIを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VZZiPs5T--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E4%25BA%25BA%25EF%25BC%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Sentence%2520BERT%25E3%2581%25A7%25E3%2582%25A6%25E3%2583%259F%25E3%2582%25AC%25E3%2583%25A1%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25BC%25E3%2583%2597%25E5%2587%25BA%25E9%25A1%258CAI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBckc4MTFsOXAxS1M4c3diNDR1WlZoTzR6Y21ELUZ0LXRTOU1nPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VZZiPs5T--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E4%25BA%25BA%25EF%25BC%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Sentence%2520BERT%25E3%2581%25A7%25E3%2582%25A6%25E3%2583%259F%25E3%2582%25AC%25E3%2583%25A1%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25BC%25E3%2583%2597%25E5%2587%25BA%25E9%25A1%258CAI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBckc4MTFsOXAxS1M4c3diNDR1WlZoTzR6Y21ELUZ0LXRTOU1nPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/momiji777/articles/52670c84bddf5b",
          "author": "momiji777",
          "description": "皆さん、機械学習をするにあたり学習データの収集に苦労したことはないでしょうか。\n今回は、学習するにあたり役に立つライブラリ「icrawler」を紹介します。\nライブラリの詳細については、github(@gist\n)を確認して頂ければ良いですが、簡単に言えばWebクローラーです。\n画像サイトのFlickrだけでなく、Google、Bing、Baiduの検索エンジンも利用することができます。\nでは、実際にサンプルコードを書いていきます。\nまずは、インストールをしましょう。\npip install icrawler\nインストールができましたら、コードを書いていきます。\nfrom icrawle...",
          "link": "https://zenn.dev/momiji777/articles/52670c84bddf5b",
          "publishedOn": "2022-09-04T10:43:57.000Z",
          "wordCount": 101,
          "title": "機械学習に役立つ画像収集ライブラリの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sKYPG0mx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4%25E7%2594%25BB%25E5%2583%258F%25E5%258F%258E%25E9%259B%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sKYPG0mx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4%25E7%2594%25BB%25E5%2583%258F%25E5%258F%258E%25E9%259B%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-optimization02",
          "author": "derwind",
          "description": "目的\n前回に引き続きという形で今回は SVM（サポートベクターマシン）を扱う。\nSVM は何となく本で読んで何となくサポートベクトルと決定境界とのマージンを最大化するように最適化されるといったことを読んでそれなりに納得し、API を叩くことになると思う。結局何が行われているのかさっぱり分からないままになるので、実際に手を動かして計算をしてみたいと思う。\n\n 今回の範囲\n3 点からなるデータセットにおいて、決定境界を求める。主問題を設定し、そこから双対問題を求める。これを具体的に眺めることでどういったものであるかを少しでも掴んでいく。\n\n データセット\n3 パターン考えたが以下のものが...",
          "link": "https://zenn.dev/derwind/articles/dwd-optimization02",
          "publishedOn": "2022-09-04T10:21:58.000Z",
          "wordCount": 1953,
          "title": "最適化について考える (2) — SVM",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9_BxpCRM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520SVM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9_BxpCRM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520SVM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kinnkinn/articles/1e2235d485cde8",
          "author": "kinnkinn",
          "description": "コマンドライン引数の雛形を作ってみた！\n\n はじめに\n自分がよく使うコマンドの多くはオプションをつけて実行することができ，そのオプションは基本的にどこにつけても認識してくれます．\n実はこのようなオプションの判定はコマンドライン引数によって文字列として受け取り，それを処理することによって実現されています．\nこんな便利なコマンドライン引数ですが，実装すると結構めんどくさいのでそれを解決するコマンドライン引数の雛形をPythonで作ってみました．\n\n コマンドライン引数雛形.py\nimport sys\n\n\ndef printhelp(str):\n    print('Erorr:',str...",
          "link": "https://zenn.dev/kinnkinn/articles/1e2235d485cde8",
          "publishedOn": "2022-09-04T08:54:30.000Z",
          "wordCount": 1027,
          "title": "コマンドライン引数の雛形を作ってみた！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pMqiAAhU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kinnkinn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AE%25E9%259B%259B%25E5%25BD%25A2%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yR0NXM3JJSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Y2M3ZGVjYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pMqiAAhU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kinnkinn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AE%25E9%259B%259B%25E5%25BD%25A2%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yR0NXM3JJSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Y2M3ZGVjYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/e4exp/articles/f1c75f0acf9e59",
          "author": "e4exp",
          "description": "前提\nやりたいこと\n\nクライアント(ブラウザ)からサーバにファイルをアップロードする\nサーバ側で何かファイルに処理を行い、進捗をクライアント側で表示する\n\n使用する言語など\n\nクライアント側: TypeScript (React)\nサーバ側: Python (Flask), Gunicorn, Redis, Docker\n\n\n 方針\n\nクライアントはファイルを1回だけPOSTし、進捗を聞くリクエストを定期的にPOSTする\nサーバは最初のリクエストを受け取ったワーカーと別のワーカーがリクエストを受け取るので、redis(データベース)に進捗状況を格納しながら変換を進め、進捗リクエストが...",
          "link": "https://zenn.dev/e4exp/articles/f1c75f0acf9e59",
          "publishedOn": "2022-09-04T05:11:17.000Z",
          "wordCount": 3916,
          "title": "サーバ側の重い処理の進捗をクライアント側で表示する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Z0O8qw1s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:e4exp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E5%2581%25B4%25E3%2581%25AE%25E9%2587%258D%25E3%2581%2584%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E9%2580%25B2%25E6%258D%2597%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E5%2581%25B4%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fTWZlaVZsdC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzM0YWQwNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Z0O8qw1s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:e4exp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E5%2581%25B4%25E3%2581%25AE%25E9%2587%258D%25E3%2581%2584%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E9%2580%25B2%25E6%258D%2597%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E5%2581%25B4%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fTWZlaVZsdC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzM0YWQwNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/c70badd4a1e593",
          "author": "osn_Lofi",
          "description": "はじめに\nt-SNEという手法を用いて、高次元の文章ベクトルを低次元に圧縮したうえで、 PythonライブラリーのPlotlyを用いてインタラクティブに可視化してみました。\n\n t-SNEについて\nディープラーニングの父と呼ばれるジェフリー・ヒントンによって開発されたアルゴリズムです。（2008年発表）\n高次元の世界におけるデータ間の距離を条件付き確率で求め、低次元の世界でも同様の確率分布を想定したうえでデータ間の距離を求めにいくものです。\n具体的には、高次元・低次元の2つの分布間の距離の指標であるカルバック・ダイムラー情報量をコスト関数として、それを最小化するように低次元データを求...",
          "link": "https://zenn.dev/robes/articles/c70badd4a1e593",
          "publishedOn": "2022-09-04T04:54:18.000Z",
          "wordCount": 1318,
          "title": "【自然言語処理】【Python】有価証券報告書のテキストデータをt-SNEとPlotlyを使って可視化した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HscNmIyT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592t-SNE%25E3%2581%25A8Plotly%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HscNmIyT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592t-SNE%25E3%2581%25A8Plotly%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fjnkt98/articles/2845fd946597c9",
          "author": "藤那花多",
          "description": "AtCoder Beginner Contest E - Erasing Vertices 2をPythonで解きます。\n\n 問題\n問題文をAtCoderのページより引用します。\n\n\n 問題文\nN頂点M辺の単純無向グラフ（すなわち、自己辺も多重辺もない無向グラフ）が与えられます。i本目の辺は頂点U_iと頂点V_iを結んでいます。頂点iには正整数A_iが書かれています。\nあなたは、以下の操作をN回繰り返します。\n\nまだ削除されていない頂点xを選び、「頂点x」と「頂点xを端点に持つ辺全て」を削除する。この操作のコストは、頂点xと辺で直接結ばれていて、かつまだ削除されていない頂点に書かれている...",
          "link": "https://zenn.dev/fjnkt98/articles/2845fd946597c9",
          "publishedOn": "2022-09-04T04:00:13.000Z",
          "wordCount": 1001,
          "title": "ABC267 E - Erasing Vertices 2 Python解答例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hFENkvWj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC267%2520E%2520-%2520Erasing%2520Vertices%25202%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hFENkvWj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC267%2520E%2520-%2520Erasing%2520Vertices%25202%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fjnkt98/articles/66dc44813fc64e",
          "author": "藤那花多",
          "description": "AtCoder Beginner Contest 267 D - Index × A(Not Continuous ver.)をPythonで解きます。\n\n 問題\n問題文をAtCoderのページより引用します。\n\n\n 問題文\n長さNの整数列A=(A_1,A_2,\\dots,A_N)が与えられます。\n長さMのAの部分列(連続でなくてもよい)B=(B_1,B_2,\\dots,B_M)に対する、\\displaystyle \\sum_{i=1}^{M} i \\times B_iの最大値を求めてください。\n\n 注記\n数列の部分列とは、数列から0個以上の要素を取り除いた後、残りの要素を元の順序で連結...",
          "link": "https://zenn.dev/fjnkt98/articles/66dc44813fc64e",
          "publishedOn": "2022-09-04T03:35:17.000Z",
          "wordCount": 909,
          "title": "ABC267 D - Index × A(Not Continuous ver.) Python解答例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SzHSt8ls--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:ABC267%2520D%2520-%2520Index%2520%25C3%2597%2520A%2528Not%2520Continuous%2520ver.%2529%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SzHSt8ls--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:ABC267%2520D%2520-%2520Index%2520%25C3%2597%2520A%2528Not%2520Continuous%2520ver.%2529%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fjnkt98/articles/ce7b3cd8b3f8b1",
          "author": "藤那花多",
          "description": "AtCoder Beginner Contest 267 B - Split?をPythonで解きます。\n\n 問題\n問題文をAtCoderのページより引用します。\n\n\n 問題文\nボウリングのピンは1から10の番号が付けられており、上から見ると下図のように配置されます。\nこの図の二つの点線に挟まれた部分を列と呼ぶことにします。\n例えば、ピン1, 5とピン3, 9はそれぞれ同じ列に存在します。\nいくつかのピンが倒れた状態のうち、特殊なものはスプリットと呼ばれます。\nピンの配置がスプリットであるとは、以下の条件が全て成り立つことを言います。\n\nピン1が倒れている。\nある二つの異なる列であって、...",
          "link": "https://zenn.dev/fjnkt98/articles/ce7b3cd8b3f8b1",
          "publishedOn": "2022-09-04T03:12:24.000Z",
          "wordCount": 804,
          "title": "ABC267 B - Split? Python解答例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NKIbad7O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC267%2520B%2520-%2520Split%253F%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NKIbad7O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC267%2520B%2520-%2520Split%253F%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fjnkt98/articles/8477e17dd507df",
          "author": "藤那花多",
          "description": "AtCoder Beginner Contest 267 C - Index × A(Continuous ver.)をPythonで解きます。\n\n 問題\n問題文をAtCoderのページより引用します。\n\n\n 問題文\n長さNの整数列A=(A_1,A_2,\\dots,A_N)が与えられます。\n長さMのAの連続部分列B=(B_1,B_2,\\dots,B_M)に対する、\\displaystyle \\sum_{i=1}^{M} i \\times B_iの最大値を求めてください。\n\n 制約\n\n1 \\le M \\le N \\le 2 \\times 10^5\n- 2 \\times 10^5 \\le A...",
          "link": "https://zenn.dev/fjnkt98/articles/8477e17dd507df",
          "publishedOn": "2022-09-04T03:12:23.000Z",
          "wordCount": 1284,
          "title": "ABC267 C - Index × A(Continuous ver.) Python解答例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TeQ5p1gq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:ABC267%2520C%2520-%2520Index%2520%25C3%2597%2520A%2528Continuous%2520ver.%2529%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TeQ5p1gq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:ABC267%2520C%2520-%2520Index%2520%25C3%2597%2520A%2528Continuous%2520ver.%2529%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/motokoike/books/ef28866a3835cf",
          "author": "元小池",
          "description": "特定の競走馬がいると自動ツイートするTwitter（ツイッター）bot（ボット）をPythonとAWS Lambdaを利用し作成しました。\nこちらがそのTwitterアカウントです。\n\nhttps://twitter.com/MeishoBot\n\nこちらのTwitterBOTの作成方法・実際に稼働しているソースコード、AWS Lambdaの設定を解説します。",
          "link": "https://zenn.dev/motokoike/books/ef28866a3835cf",
          "publishedOn": "2022-09-03T21:49:08.000Z",
          "wordCount": 80,
          "title": "PythonでAWS Lambdaを利用して特定の競走馬がいると自動ツイートする",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/yuki_kimoto/articles/2a1b4e4d276b9a",
          "author": "yuki_kimoto",
          "description": "Perlの条件分岐 - ワンポイント解説【Python,Ruby,PHP,Java,JavaScriptとの違いは?】\nhttps://www.youtube.com/watch?v=5L-ibfbnQSg",
          "link": "https://zenn.dev/yuki_kimoto/articles/2a1b4e4d276b9a",
          "publishedOn": "2022-09-03T21:46:50.000Z",
          "wordCount": 89,
          "title": "Perlの条件分岐 - ワンポイント解説【Python,Ruby,PHP,Java,JavaScriptとの違いは?】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ITj0z6yP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuki_kimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Perl%25E3%2581%25AE%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%2590%2520-%2520%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2590Python%252CRuby%252CPHP%252CJava%252CJavaScript%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AF%253F%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hhWnVKWENiVlZGOGZpdGNVQzF5UUNGV2V6TjZkdHU2cl9ZdWwyWkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ITj0z6yP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuki_kimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Perl%25E3%2581%25AE%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%2590%2520-%2520%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2590Python%252CRuby%252CPHP%252CJava%252CJavaScript%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AF%253F%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hhWnVKWENiVlZGOGZpdGNVQzF5UUNGV2V6TjZkdHU2cl9ZdWwyWkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/seito/articles/d11c0c9c85265a",
          "author": "堀口セイト",
          "description": "概要\nDjango(REST framework) + PostgreSQLのアプリケーションをElastic Beanstalk環境にデプロイしたものの、管理画面にアクセスできない...というか管理者アカウント生成で詰まったのでその備忘録に。\nローカル環境では python manage.py createsuperuser で管理者ユーザーを生成できる。\nが、そのあとでデプロイするだけだと管理画面にアクセスはできても、ログインができない。\n結論、重要な点だけ抜き出すと下記のファイルをイジる必要がある\n\n./.ebextensions/django.config\n./{myapp}...",
          "link": "https://zenn.dev/seito/articles/d11c0c9c85265a",
          "publishedOn": "2022-09-03T19:53:31.000Z",
          "wordCount": 482,
          "title": "Elastic Beanstalk 環境にDjangoアプリの管理者ユーザーを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YgN0DRR9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25A0%2580%25E5%258F%25A3%25E3%2582%25BB%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Elastic%2520Beanstalk%2520%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25ABDjango%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%25E8%2580%2585%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SY2xrWjJtVC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MTYyNWVjY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YgN0DRR9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25A0%2580%25E5%258F%25A3%25E3%2582%25BB%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Elastic%2520Beanstalk%2520%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25ABDjango%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%25E8%2580%2585%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SY2xrWjJtVC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MTYyNWVjY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/0b9034cfa3b66d",
          "author": "osn_Lofi",
          "description": "はじめに\n以前、BERTを使って歌詞の文章ベクトルを算出し可視化する試みを行いました。BERTは優秀なんですが、入力できるトークン数が512に限られるため、長い文章のベクトル算出には向いていないんですよね。\n \n今回は、上場企業約2,500社が有価証券報告書で書いている割と長文の文章について、Doc2Vecを使って文章ベクトルを算出し、あわせて、文章ベクトルから類似文書を検索してみました。\n個人的には、BERTよりもDoc2Vecの方が納得感のいく結果を出している気がしています。\nここでは、文章ベクトルの算出方法・類似文書検索方法について、お伝えしていきたいと思います。\n \nhttp...",
          "link": "https://zenn.dev/robes/articles/0b9034cfa3b66d",
          "publishedOn": "2022-09-03T09:33:02.000Z",
          "wordCount": 3730,
          "title": "【自然言語処理】Doc2Vecで文章ベクトルを算出し、類似文書検索をやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SkiR8x9k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591Doc2Vec%25E3%2581%25A7%25E6%2596%2587%25E7%25AB%25A0%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E3%2582%2592%25E7%25AE%2597%25E5%2587%25BA%25E3%2581%2597%25E3%2580%2581%25E9%25A1%259E%25E4%25BC%25BC%25E6%2596%2587%25E6%259B%25B8%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SkiR8x9k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591Doc2Vec%25E3%2581%25A7%25E6%2596%2587%25E7%25AB%25A0%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E3%2582%2592%25E7%25AE%2597%25E5%2587%25BA%25E3%2581%2597%25E3%2580%2581%25E9%25A1%259E%25E4%25BC%25BC%25E6%2596%2587%25E6%259B%25B8%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kiwamachan/articles/e6e339a7532724",
          "author": "kiwamachan",
          "description": "AtCoder Beginner Contest 266 の復習記録です。難易度が青色レベル以下の、A問題からF問題までをやります。使用言語はPythonです。\n\n A問題\nhttps://atcoder.jp/contests/abc266/tasks/abc266_a\n\n 考え方\n文字列の長さと、中央の文字のインデックスを比較してみます。\n\n\n\n文字列の長さ\n中央の文字\n\n\n\n\n3\n1\n\n\n7\n3\n\n\n15\n7\n\n\nN\nN//2\n\n\n\n\n 提出コード\nS = input()\nn = len(S)//2\nprint(S[n])\n\n B問題\nhttps://atcoder.jp/cont...",
          "link": "https://zenn.dev/kiwamachan/articles/e6e339a7532724",
          "publishedOn": "2022-09-03T09:25:23.000Z",
          "wordCount": 2456,
          "title": "[ABC266] AtCoder Beginner Contest 266（A-F 問題 Python）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UTFGM1uN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kiwamachan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255BABC266%255D%2520AtCoder%2520Beginner%2520Contest%2520266%25EF%25BC%2588A-F%2520%25E5%2595%258F%25E9%25A1%258C%2520Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03c1BISHJQRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3ZjZjYWE5ZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UTFGM1uN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kiwamachan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255BABC266%255D%2520AtCoder%2520Beginner%2520Contest%2520266%25EF%25BC%2588A-F%2520%25E5%2595%258F%25E9%25A1%258C%2520Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03c1BISHJQRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3ZjZjYWE5ZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takamin55/articles/8b119e13bf9f09",
          "author": "takamin55",
          "description": "pythonをコンソール上で実行しているときに、カーソル移動やコマンド履歴をたどるために矢印を入力したところ、\n[[D^\nみたいな感じで（うろ覚え）カーソルが移動してくれない場合の対処法。\n以下をインストール。※なおUbuntu 20.04です。\n$ pip install gnureadline\n以下はだめでした！！\nこちらの方法だとpythonコマンド自体が動かなくなった。（Cか何かの方でエラーになる）\n$ sudo apt install libreadline-dev\n$ pip install readline\n公式の方にも非推奨だと書いてある。\nこの方法を推奨する記事が多数出...",
          "link": "https://zenn.dev/takamin55/articles/8b119e13bf9f09",
          "publishedOn": "2022-09-03T09:18:59.000Z",
          "wordCount": 151,
          "title": "pythonコンソールで矢印（←↑など）が効かない場合の対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v8hEy_kj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takamin55%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E7%259F%25A2%25E5%258D%25B0%25EF%25BC%2588%25E2%2586%2590%25E2%2586%2591%25E3%2581%25AA%25E3%2581%25A9%25EF%25BC%2589%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15WkduQVNQaS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkMGVlM2MxZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v8hEy_kj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takamin55%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E7%259F%25A2%25E5%258D%25B0%25EF%25BC%2588%25E2%2586%2590%25E2%2586%2591%25E3%2581%25AA%25E3%2581%25A9%25EF%25BC%2589%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15WkduQVNQaS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkMGVlM2MxZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/momiji777/articles/df333c6f0f6c2d",
          "author": "momiji777",
          "description": "会社や学校でPythonを利用する際、オフライン環境やプロキシの問題でライブラリをインストールできない状況に遭遇した方もいると思います。\n本動画では、そのような状況を回避しながらインストールする方法をご紹介します。\nhttps://youtu.be/w2U6B5AXI7A",
          "link": "https://zenn.dev/momiji777/articles/df333c6f0f6c2d",
          "publishedOn": "2022-09-03T04:03:47.000Z",
          "wordCount": 68,
          "title": "オフラインでPythonライブラリをインストールする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7UFjyGJ_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A7Python%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7UFjyGJ_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A7Python%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/pluie/articles/20220902-pdb-analysis-by-biopython",
          "author": "pluie",
          "description": "はじめに\n本記事では、Bioinformaticsに用いられるPythonライブラリであるBiopythonを用いて、PDBファイルを解析する基本的な方法について記す。\n\n 対象とするPDBファイル\nPDB ID=2A0Lを対象として解析を試みる。ちなみに、このPDBを選択した理由は特にない。\n\n BiopythonによるPDBファイル解析\n\n Structure\nPDBファイルはgzip圧縮されているため、以下のように\nimport gzip\nfrom Bio.PDB import PDBParser\n    parser = PDBParser()\n    with gzip.o...",
          "link": "https://zenn.dev/pluie/articles/20220902-pdb-analysis-by-biopython",
          "publishedOn": "2022-09-02T16:18:32.000Z",
          "wordCount": 1707,
          "title": "BiopythonによるPDBファイル解析",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5MjIqtpF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:pluie%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Biopython%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BPDB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E8%25A7%25A3%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZta0FhaDlYNi1TN0FjeGU0YjFmQzVqWWY4ME1MM3hnY0NBQzRRb0Q9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5MjIqtpF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:pluie%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Biopython%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BPDB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E8%25A7%25A3%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZta0FhaDlYNi1TN0FjeGU0YjFmQzVqWWY4ME1MM3hnY0NBQzRRb0Q9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/catminusminus/articles/d2a72b522c9554",
          "author": "Catminusminus",
          "description": "成果物\nまずは成果物から紹介します。これが動きます。\nfrom typing import Protocol\n\nclass Animal:\n    def __init__(self):\n        self._sound = use(AnimalSound)\n\n    def make_sound(self):\n        self._sound.make_sound()\n\n\nclass AnimalSound(Protocol):\n    def make_sound(self):\n        ...\n\n\nclass CatSound:\n    def make_so...",
          "link": "https://zenn.dev/catminusminus/articles/d2a72b522c9554",
          "publishedOn": "2022-09-02T15:43:22.000Z",
          "wordCount": 780,
          "title": "Algebraic Effectsで実現するシンプルなDI",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ArctxYTM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Catminusminus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Algebraic%2520Effects%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AADI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1pRXQxOVdORy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExNDI4ZDQ1MTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ArctxYTM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Catminusminus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Algebraic%2520Effects%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AADI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1pRXQxOVdORy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExNDI4ZDQ1MTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimoc/articles/a7ad0b020c55b3",
          "author": "mimoc",
          "description": "モールス信号メッセンジャーデバイス : mobus\n\n\n モールス信号を入力してメッセージを送り合う、'mobus'というデバイスを作成しました。\n\n 'mobus'で何ができるの？\n\n\nmobus同士で、インターネットを通じてメッセージのやりとりを行う事ができます。\n\n\nmobusからLINEへメッセージを送る事ができます。\n\n\nLINEにメッセージを送信する様子\n\n\n\n\nmobus同士でのメッセージのやり取りの様子\n\n\n\n\nInstagramでも動作する様子をUPしています！\n\n\nmobusの操作方法\n\n\n\n\n 作ろうと思ったきっかけ\n現代ではアマチュア無線を行なっている方以外だ...",
          "link": "https://zenn.dev/mimoc/articles/a7ad0b020c55b3",
          "publishedOn": "2022-09-02T15:40:22.000Z",
          "wordCount": 236,
          "title": "モールス信号メッセンジャーデバイス : mobus",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--D0Ks-23D--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimoc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B9%25E4%25BF%25A1%25E5%258F%25B7%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%2520%253A%2520mobus%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1GRGM4dHB0NS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MGQ4MTM3MDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--D0Ks-23D--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimoc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B9%25E4%25BF%25A1%25E5%258F%25B7%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%2520%253A%2520mobus%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1GRGM4dHB0NS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MGQ4MTM3MDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/uekou/articles/dbd52f80aec49a",
          "author": "uekou",
          "description": "やること\nPythonで非同期処理を行うためのモジュールであるasyncioに含まれるasyncio.Queueを利用して、簡単なキューのput/getプログラムを作成します。\n今回は非同期関数としてキューにデータを投入する役割をする関数をproducer、キューからデータを取得して処理する役割をする関数をconsumerとします。\n「とりあえずasyncio.Queueを使う」ことを目的として、producer/consumerの仕様はそれぞれ下記のようにします。\nproducer\n計15個のタスクを順番に投入する。\nconsumer\nその時点でキューに存在するタスクを取得し、fo...",
          "link": "https://zenn.dev/uekou/articles/dbd52f80aec49a",
          "publishedOn": "2022-09-02T15:14:58.000Z",
          "wordCount": 1446,
          "title": "Pythonのasyncio.Queueを使ってみる（非同期処理）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iGKGhUS0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uekou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AEasyncio.Queue%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FOEhZZElrdS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjhlZGJkNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iGKGhUS0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uekou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AEasyncio.Queue%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FOEhZZElrdS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjhlZGJkNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/95a284323eba9b",
          "author": "osn_Lofi",
          "description": "はじめに\nPython初心者のわたくしが偉そうなことは言えませんが、自然言語処理においては、形態素解析が命と思っています。\n \nmecab用の 優秀な辞書NEologd を使って、形態素解析のためのトークナイザー(関数) を作ったので、今後、自分が形態素解析をする際に使うためにも、記事として残しておきたいと思います。\n \n具体的には、テキストを与えたら、\n\n記号類を削除\n数字を0にする\nストップワードを除外する\nそのうえで、名詞・動詞・形容詞だけを抽出する\n\nというトークナイザー（関数） になります。\nNEologdは週に2回以上更新されるなど、新語・固有表現に強い辞書として定評があ...",
          "link": "https://zenn.dev/robes/articles/95a284323eba9b",
          "publishedOn": "2022-09-02T12:48:57.000Z",
          "wordCount": 1211,
          "title": "【自然言語処理】形態素解析のためのトークナイザー（関数）を作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xIJmJ0QT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%258A%25E3%2582%25A4%25E3%2582%25B6%25E3%2583%25BC%25EF%25BC%2588%25E9%2596%25A2%25E6%2595%25B0%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xIJmJ0QT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%258A%25E3%2582%25A4%25E3%2582%25B6%25E3%2583%25BC%25EF%25BC%2588%25E9%2596%25A2%25E6%2595%25B0%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/4ab5a7f992000d",
          "author": "osn_Lofi",
          "description": "0. はじめに\n上場企業が作成する有価証券報告書には、企業の経営成績がどうなっているのか？といった財務情報に加え、企業として何を課題と捉えどう取り組んでいくのか？といった非財務情報の記載があります。\n最近は、気候変動リスクや人権問題への対応など企業の社会的責任の遂行に注目が集まる中、機関投資家が企業を評価する目線も、短期的な視点である財務情報から、中長期的な視点である非財務情報にうつりつつあります。\n \nこれからの時代、財務情報（数値データ）ではなく、非財務情報（テキストデータ）の分析ニーズが高まることが予想されます。こうした点も踏まえ、まことに僭越ながら、Pythonを使って有価...",
          "link": "https://zenn.dev/robes/articles/4ab5a7f992000d",
          "publishedOn": "2022-09-02T10:15:52.000Z",
          "wordCount": 1162,
          "title": "【自然言語処理】【Python】有価証券報告書の非財務情報（テキストデータ）を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LKxUZi9r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2581%25AE%25E9%259D%259E%25E8%25B2%25A1%25E5%258B%2599%25E6%2583%2585%25E5%25A0%25B1%25EF%25BC%2588%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25EF%25BC%2589%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LKxUZi9r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2581%25AE%25E9%259D%259E%25E8%25B2%25A1%25E5%258B%2599%25E6%2583%2585%25E5%25A0%25B1%25EF%25BC%2588%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25EF%25BC%2589%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takaha4k/articles/5114cd4bd4d208",
          "author": "takaha4k",
          "description": "pyenvとは\nPCに異なるバージョンのPythonを容易にインストールできる。\n\n やること\npyenvをWSL2(Ubuntu22.4)に整える。\n\n pyenvをインストール\nWSLの場合\ncurl https://pyenv.run | bash\nMacの場合\nbrew update\nbrew upgrade\nbrew install pyenv\n環境変数を追記\n※Macの場合、標準がbashでなくてzshなので、vim ~/.zshrc\nvim ~/.bashrc\nexport PATH=\"$HOME/.pyenv/bin:$PATH\"\neval \"$(pyenv init...",
          "link": "https://zenn.dev/takaha4k/articles/5114cd4bd4d208",
          "publishedOn": "2022-09-02T08:33:30.000Z",
          "wordCount": 272,
          "title": "pyenvを導入してPython開発環境を整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bXNPRZNB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takaha4k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pyenv%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6Python%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RS25SRThtdy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMGM1MDU4ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bXNPRZNB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takaha4k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pyenv%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6Python%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RS25SRThtdy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMGM1MDU4ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mory22k/articles/e3222d02724251",
          "author": "mory22k",
          "description": "ガウス過程回帰モデルにおけるカーネルは、回帰関数の形状を決定する非常に重要な要素です。この記事では、Primitive Kernels と呼ばれるカーネルのファミリーを使って、それらを比較していきます。\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n ガウス過程回帰モデル\n次の記事で実装したモデルを改良して使用します。\nhttps://zenn.dev/mory22k/articles/1186466adfbe6f\nclass GaussianProcessRegressor:\n    def __init__(self...",
          "link": "https://zenn.dev/mory22k/articles/e3222d02724251",
          "publishedOn": "2022-09-02T07:06:58.000Z",
          "wordCount": 4396,
          "title": "[NumPy] ガウス過程回帰モデルのカーネルで遊ぶ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bf2Ixd1O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BNumPy%255D%2520%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%25E3%2581%25A7%25E9%2581%258A%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bf2Ixd1O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BNumPy%255D%2520%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%25E3%2581%25A7%25E9%2581%258A%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tmasuo/articles/8ea1a74cc3294d",
          "author": "tmasuo",
          "description": "🎈 Streamlit とは？\nPython だけ でアプリケーションを作成するためのフレームワークです。\nhttps://streamlit.io/\n従来データを扱う Web アプリを作成しようとすると、\n\nフロントの言語（HTML, JS およびライブラリ群）\nバックエンドの言語（例えば Java, データアクセスに SQL）\n\nのように様々な言語使う必要がありましたが、Python のみで実現できます。なのでアプリ作成の敷居がだいぶ低くなるのではないかと思います。\nまた Python だと Pandas をはじめとするデータをハンドリングするライブラリはもちろん、データサイエン...",
          "link": "https://zenn.dev/tmasuo/articles/8ea1a74cc3294d",
          "publishedOn": "2022-09-02T02:40:48.000Z",
          "wordCount": 483,
          "title": "#30DaysOfStreamlit をやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pLxcaBI---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tmasuo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%252330DaysOfStreamlit%2520%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zNy1Ed3ZaUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0ZjU1NzVhYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pLxcaBI---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tmasuo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%252330DaysOfStreamlit%2520%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zNy1Ed3ZaUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0ZjU1NzVhYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dmn/articles/d5351f987eed9c",
          "author": "dmn",
          "description": "色々とローカルで作業していたものを備忘のために書き連ねていこうというモチベーションで投稿します\n半年後くらいに「あれどうやるんだっけ？」みたいになった際に振り返るための記事であり、読みにくいところあるかと思いますがご容赦ください\n\n 利用サービス\n\nhttps://docs.cryptowat.ch/rest-api\n注意点\n\nrate limitがあるのでやたらめったらリクエスト飛ばすと怒られる\n\nhttps://docs.cryptowat.ch/rest-api/rate-limit\n\n\n\n\n\n\n サンプルコード\nfrom datetime import datetime\nfrom...",
          "link": "https://zenn.dev/dmn/articles/d5351f987eed9c",
          "publishedOn": "2022-09-01T14:37:41.000Z",
          "wordCount": 387,
          "title": "仮想通貨のOHLC時系列データ取得方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s0hqbQPd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dmn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E4%25BB%25AE%25E6%2583%25B3%25E9%2580%259A%25E8%25B2%25A8%25E3%2581%25AEOHLC%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s0hqbQPd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dmn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E4%25BB%25AE%25E6%2583%25B3%25E9%2580%259A%25E8%25B2%25A8%25E3%2581%25AEOHLC%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/koya6565/articles/e72ce1b418308b",
          "author": "T.S",
          "description": "先月localstackがついにv1.0になりました。\nAnnouncing LocalStack 1.0 General Availability!\n上記ブログを読むとGAに伴う機能強化も色々あり、\n\n\nLocalStack Extensionsを使うとLocalStackの応答をフックして任意のコードを実行できる\nデータの永続性を定義しやすくなった\nロギング強化\n\nなど、他にもLocalStack自体の開発サイクルを改善したことにも触れています。\nこれから自分もLocalStackを使う機会は増えそうだな、と再認識したので今回はboto3をpytestする単純なものから。\n\n 前提\n...",
          "link": "https://zenn.dev/koya6565/articles/e72ce1b418308b",
          "publishedOn": "2022-09-01T13:22:55.000Z",
          "wordCount": 1894,
          "title": "boto3をlocalstack環境でpytestする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--k3Sj_l4Z--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:T.S%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:boto3%25E3%2582%2592localstack%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7pytest%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03UmZkaUdFTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NzJjNmE3ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--k3Sj_l4Z--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:T.S%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:boto3%25E3%2582%2592localstack%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7pytest%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03UmZkaUdFTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NzJjNmE3ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takaha4k/articles/c522c98df1c65b",
          "author": "takaha4k",
          "description": "VSCodeの設定\n\n\n\n\n pre-commitを導入する\npre-commit公式\nインストール\npip install pre-commit\n設定ファイル作成\npre-commit sample-config > .pre-commit-config.yaml\ngit反映\npre-commit install\n設定を記述\nrepos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: v3.3.0\n  hooks:\n  - id: check-added-large-files\n  - id: ch...",
          "link": "https://zenn.dev/takaha4k/articles/c522c98df1c65b",
          "publishedOn": "2022-09-01T08:58:28.000Z",
          "wordCount": 524,
          "title": "PythonでAWS開発環境を整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Oz6hpghD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takaha4k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7AWS%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RS25SRThtdy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMGM1MDU4ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Oz6hpghD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takaha4k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7AWS%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RS25SRThtdy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMGM1MDU4ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yamagishihrd/articles/2022-09_01-google-spreadsheet-with-python",
          "author": "Hiroki",
          "description": "記事概要\nPython から Google スプレッドシートを操作するアプリケーションを作成する機会があったので、必要な設定などを備忘のため記事化したものです。\n本記事では、以下のようなスプレッドシートを用意して、対象シートのすべての値を取得する所まで実施します。\n\nprint(spreadsheet.sheet1.get_all_values())\n\n# [['Hello, gspread!']]\n\n Google Cloud Platform 側の設定\n\n プロジェクトの作成\n任意の名称でプロジェクトを作成します。（本記事では DEMO-gspread としています）\n\n\n AP...",
          "link": "https://zenn.dev/yamagishihrd/articles/2022-09_01-google-spreadsheet-with-python",
          "publishedOn": "2022-09-01T00:32:05.000Z",
          "wordCount": 844,
          "title": "gspread で Python から Google スプレッドシートを扱えるようにするまで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_zZH1Y8I--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hiroki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:gspread%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%258B%25E3%2582%2589%2520Google%2520%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kVVpwVXBFSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxNGYyNDY4ZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_zZH1Y8I--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hiroki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:gspread%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%258B%25E3%2582%2589%2520Google%2520%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kVVpwVXBFSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxNGYyNDY4ZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/thetalemon/articles/ecd01b2f9552e6",
          "author": "まなさす",
          "description": "これは何\n\nJupyterをいれたまえという天の声を受けて入れたらStable Diffusionの実行とかみ合わせがとても良いので布教するための記事\n\n\n この記事で説明すること\n\nStableDiffusionをAnaconda + VSCode + Jupyter Notebook構成で動かす方法\n前段の環境構築は引用記事だけご紹介\n後半のVSCode登場してからがこの記事における説明内容\n\n\n この構成を推す理由\n\nStable Diffusionではpromptを書き換えて何度も実行することになる\n\njupyterを導入すると、それがとてもやりやすい\n\n\nAnacondaは...",
          "link": "https://zenn.dev/thetalemon/articles/ecd01b2f9552e6",
          "publishedOn": "2022-09-01T00:29:45.000Z",
          "wordCount": 647,
          "title": "Stable DiffusionをVSCode + Jupyter Notebookで動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qmuvkw4f--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BE%25E3%2581%25AA%25E3%2581%2595%25E3%2581%2599%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Stable%2520Diffusion%25E3%2582%2592VSCode%2520%252B%2520Jupyter%2520Notebook%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1palVVMzR0SS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2M2NiNjFmODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qmuvkw4f--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BE%25E3%2581%25AA%25E3%2581%2595%25E3%2581%2599%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Stable%2520Diffusion%25E3%2582%2592VSCode%2520%252B%2520Jupyter%2520Notebook%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1palVVMzR0SS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2M2NiNjFmODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kleamp1e/articles/202208-aiohttp-get-range",
          "author": "kleamp1e",
          "description": "はじめに\nHTTP経由で大きなファイルの一部を取得したい場合、HTTP範囲（Range）リクエストを使うことで実現できます。\nHTTP範囲リクエストについては、MDNが詳しいです。\nhttps://developer.mozilla.org/ja/docs/Web/HTTP/Range_requests\n今回は、Pythonの非同期HTTPライブラリaiohttpを使って、HTTP範囲リクエストを送信してみました。\n\n インストール\naiohttpはpipコマンドでインストールできます。\npip install aiohttp\nhttps://pypi.org/project/aio...",
          "link": "https://zenn.dev/kleamp1e/articles/202208-aiohttp-get-range",
          "publishedOn": "2022-08-31T15:09:37.000Z",
          "wordCount": 744,
          "title": "aiohttpを使って範囲（Range）リクエストを送信する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sZBCN8Yq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kleamp1e%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:aiohttp%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25AF%2584%25E5%259B%25B2%25EF%25BC%2588Range%25EF%25BC%2589%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSXFmblBGM2NPY2w2UTdrVUdZS3E4MllSd1VocFBka1lRUWRmPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sZBCN8Yq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kleamp1e%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:aiohttp%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25AF%2584%25E5%259B%25B2%25EF%25BC%2588Range%25EF%25BC%2589%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSXFmblBGM2NPY2w2UTdrVUdZS3E4MllSd1VocFBka1lRUWRmPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/technicarium/articles/42f3970be5d716",
          "author": "テク二カリウム",
          "description": "Pythonの仮想環境も無事作成できたのでVSC(Visual Studio Code)をインストールしました。\n\n VSCインストール\nsudo apt install code\n\n VSC起動\nターミナルからコマンド起動だけではなく「ラズベリーパイアイコン→プログラミング→Visual Studio Code」で起動可能でした\n\n 日本語の言語パックのインストール\n初回起動時に日本語の言語パックのインストール案内が右下に表示されるので指示に従うだけでインストールされました。\n\n python用拡張機能インストール\n左側の「拡張機能」アイコンをクリックし”python”でキーワード検索...",
          "link": "https://zenn.dev/technicarium/articles/42f3970be5d716",
          "publishedOn": "2022-08-31T12:54:20.000Z",
          "wordCount": 171,
          "title": "Raspberry Pi + VSC(Visual Studio Code)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9JgdJsEk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%2520%252B%2520VSC%2528Visual%2520Studio%2520Code%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9JgdJsEk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%2520%252B%2520VSC%2528Visual%2520Studio%2520Code%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/usagipy/articles/01088d357e96a8",
          "author": "usagipy",
          "description": "友達がpythonでPCゲームのレベル上げツールを作っていた\nそれを聞いて、pythonって便利なのね。と思いその後色々あってプログラミングを勉強することにした\nプログラマー35歳までみたいな世の中で40代おそすぎ！ってあるかもしれない\nPCがあって、無料の教材はネットに転がってるし、本もたくさんあるし、挑戦するのは無料だし2022年の1月ぐらいから勉強を始めた\n入門書って成果物がないからつまらないなと思ってそれ以外になんかないかなって本屋さんをふらふらしてたら\n\n python自動化 みたいな書籍がいっぱいあることに気がついた\nなるほど、もしかしたら仕事楽になるんじゃないかそんな思いか...",
          "link": "https://zenn.dev/usagipy/articles/01088d357e96a8",
          "publishedOn": "2022-08-31T12:11:21.000Z",
          "wordCount": 536,
          "title": "40代プログラミング初心者がpython始めて半年！独学で勉強が続いている理由と読んだ本",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dGs_JxYo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:usagipy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:40%25E4%25BB%25A3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258Cpython%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25A6%25E5%258D%258A%25E5%25B9%25B4%25EF%25BC%2581%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25A7%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%258C%25E7%25B6%259A%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%25E3%2581%25A8%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS13VEFrYmI2Yy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4YTE5NjcxMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dGs_JxYo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:usagipy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:40%25E4%25BB%25A3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258Cpython%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25A6%25E5%258D%258A%25E5%25B9%25B4%25EF%25BC%2581%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25A7%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%258C%25E7%25B6%259A%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%25E3%2581%25A8%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS13VEFrYmI2Yy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4YTE5NjcxMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimat/articles/7bd35eeab37210",
          "author": "shimat",
          "description": "筆者の環境・参考文献\n\nPython 3.10\n\n本記事の内容は3.7以降なら使えるはず (nullcontext)\n\n\n\n一言でいえば、contextlibを勉強しなければと思いました。\n内容は以下をただ書き直しているだけになりますが:\n\nhttps://stackoverflow.com/questions/27803059/conditional-with-statement-in-python\nhttps://docs.python.org/3/library/contextlib.html#replacing-any-use-of-try-finally-and-flag-...",
          "link": "https://zenn.dev/shimat/articles/7bd35eeab37210",
          "publishedOn": "2022-08-31T10:55:50.000Z",
          "wordCount": 802,
          "title": "[Python] 条件付きwith・複数リソースの一括解放",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hRc1KXhS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BPython%255D%2520%25E6%259D%25A1%25E4%25BB%25B6%25E4%25BB%2598%25E3%2581%258Dwith%25E3%2583%25BB%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E4%25B8%2580%25E6%258B%25AC%25E8%25A7%25A3%25E6%2594%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11cmZ5M2RXcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOTgyYTAyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hRc1KXhS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BPython%255D%2520%25E6%259D%25A1%25E4%25BB%25B6%25E4%25BB%2598%25E3%2581%258Dwith%25E3%2583%25BB%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E4%25B8%2580%25E6%258B%25AC%25E8%25A7%25A3%25E6%2594%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11cmZ5M2RXcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOTgyYTAyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/optfit/articles/20bc2852459bdf",
          "author": "OptFit",
          "description": "こんにちは。Opt Fit見習いエンジニアのりょりょりょです。\n弊社では，FastAPIを使用しています。\n例外処理のコードを別ファイルに分けるのに少し躓いたのでまとめます。\n\n やりたいこと\n\nFastAPIにおいて，ハンドラーを使ってエラー処理\nメイン処理，ハンドラー処理，エラー処理をそれぞれ別のファイルに分ける\n\nその際に循環インポートを避ける\n\n\n なぜやりたいか\n\n１つのファイルに全てまとめると，ファイルが肥大化していき，わかりづらくメンテナンス性も低いため\n\n例えば，APIのエンドポイントでもAPIRouterを使用することで複数ファイルに分割することができます。\n\n\n\n\n ...",
          "link": "https://zenn.dev/optfit/articles/20bc2852459bdf",
          "publishedOn": "2022-08-31T08:30:41.000Z",
          "wordCount": 629,
          "title": "[FastAPI][循環インポート回避]エラーハンドラーを別ファイルに分ける",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iFWxRdyD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:OptFit%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BFastAPI%255D%255B%25E5%25BE%25AA%25E7%2592%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E5%259B%259E%25E9%2581%25BF%255D%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E5%2588%25A5%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E5%2588%2586%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1DYzJZdjJTRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTNkYmUyMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iFWxRdyD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:OptFit%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BFastAPI%255D%255B%25E5%25BE%25AA%25E7%2592%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E5%259B%259E%25E9%2581%25BF%255D%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E5%2588%25A5%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E5%2588%2586%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1DYzJZdjJTRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTNkYmUyMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nukokoi/articles/98817502dbf05a",
          "author": "nukokoi",
          "description": "環境\n\nWindows 10 Pro\nVisual studio code\npython 3.9.13\n\n\n 音声認識\n\nvosk\nalphacep/vosk-api: Offline speech recognition API for Android, iOS, Raspberry Pi and servers with Python, Java, C# and Node\n\n\n 翻訳\n\ndeepl free API\nDeepLcom/deepl-python: Official Python library for the DeepL language translation A...",
          "link": "https://zenn.dev/nukokoi/articles/98817502dbf05a",
          "publishedOn": "2022-08-31T06:37:15.000Z",
          "wordCount": 183,
          "title": "配信画面に音声認識の字幕と翻訳字幕を出した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2tN5w1ZG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nukokoi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2585%258D%25E4%25BF%25A1%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AB%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%25AE%25E5%25AD%2597%25E5%25B9%2595%25E3%2581%25A8%25E7%25BF%25BB%25E8%25A8%25B3%25E5%25AD%2597%25E5%25B9%2595%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1yeXNNbm9VeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzYjZjM2YxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2tN5w1ZG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nukokoi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2585%258D%25E4%25BF%25A1%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AB%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%25AE%25E5%25AD%2597%25E5%25B9%2595%25E3%2581%25A8%25E7%25BF%25BB%25E8%25A8%25B3%25E5%25AD%2597%25E5%25B9%2595%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1yeXNNbm9VeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzYjZjM2YxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kazuma_soon/articles/d66b3b86b668b2",
          "author": "kazuma-soon",
          "description": "背景\n\n「インデックスファンドに投資する」というのが、投資の王道となってきました。\n基本的には「毎月定額を積み立てる」という買い方が主流になっています。\nただ、「株価が下がれば買い増しする」だったり、「先月の結果で柔軟に購入額を変える」など様々な戦略があるかと思います。\n私自身、誰かの「株安はバーゲンだ！！！」という言葉を思い出し、今回の検証を行いました。\n※結果に関しては、へっぽこエンジニアである私の実装です。\n※「結果は間違いだ！！！怪しい！！！信じられない！！！」という前提でお願いします。。。\n作成コード\n\n 結果\n\n- 前提\n　　　　- emaxis slim全世界株式の標準...",
          "link": "https://zenn.dev/kazuma_soon/articles/d66b3b86b668b2",
          "publishedOn": "2022-08-31T03:01:36.000Z",
          "wordCount": 257,
          "title": "インデックスファンドの買い方とパフォーマンスの関係を検証してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ktWrBFhO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuma-soon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E8%25B2%25B7%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UVHVJOVJHeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ktWrBFhO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuma-soon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E8%25B2%25B7%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UVHVJOVJHeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tomoyamachi/articles/bc9c7ff7e0e126",
          "author": "Tomoya Amachi",
          "description": "想定している人\n\nローカルマシンで実行したくない/できない\nPythonを動かすための環境構築は最低限の手間で済ませたい\n\n\n 最初に\nStableDiffusionという、文字から画像を自動生成してくれるやつが何やらすごいという話を聞いたので週末で動かしてみた。\nローカル環境に機械学習をする環境は作ってないし、確実に大量のディスク容量が必要になる。CUDAとかのインストールも大変そうだったので、EC2インスタンスで最初から設定してあるAMIを使うことに決めた。\n\n 事前準備: GPUが利用できるインスタンスのQuotaを引き上げ\n今回、GPUを利用するということでG5インスタンスを...",
          "link": "https://zenn.dev/tomoyamachi/articles/bc9c7ff7e0e126",
          "publishedOn": "2022-08-31T02:31:45.000Z",
          "wordCount": 526,
          "title": "G5インスタンスをTerraformでつくって、10分でStableDiffusionを動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WMKeL6lh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tomoya%2520Amachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:G5%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592Terraform%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%258110%25E5%2588%2586%25E3%2581%25A7StableDiffusion%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h1V3NmOGpWWjBibGloUlpzU2J6c0pMNHlTQW5lNlpES2pRSDJsSHFRPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WMKeL6lh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tomoya%2520Amachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:G5%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592Terraform%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%258110%25E5%2588%2586%25E3%2581%25A7StableDiffusion%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h1V3NmOGpWWjBibGloUlpzU2J6c0pMNHlTQW5lNlpES2pRSDJsSHFRPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/technicarium/articles/ae2df596870246",
          "author": "テク二カリウム",
          "description": "Pyenvを使用してPythonの複数バージョンを切り替えが可能になったので次は開発毎それぞれの開発環境を作成・管理するためにPipenvで開発環境を作成することにしました。\n\n Pyenvのインストール\nhttps://zenn.dev/technicarium/articles/00b32d390e82ec\n\n 環境\n\n OS\n>cat /etc/os-release \nPRETTY_NAME=\"Debian GNU/Linux 11 (bullseye)\"\nNAME=\"Debian GNU/Linux\"\nVERSION_ID=\"11\"\nVERSION=\"11 (bullsey...",
          "link": "https://zenn.dev/technicarium/articles/ae2df596870246",
          "publishedOn": "2022-08-30T14:24:39.000Z",
          "wordCount": 1849,
          "title": "Raspberry Pi OS + Pyenv + Pipenvで仮想環境作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6TCHm_iq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%2520OS%2520%252B%2520Pyenv%2520%252B%2520Pipenv%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6TCHm_iq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%2520OS%2520%252B%2520Pyenv%2520%252B%2520Pipenv%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yutohub/articles/1dea6baae5a2d4",
          "author": "yutohub",
          "description": "導入\nコーディングテストに必要なアルゴリズムを図でやさしく説明してみた！ ではアルゴリズムの紹介をしたのですが、実際にアルゴリズムを使って問題を解くところまではできませんでした。\nそこで、この記事ではPython3でコーディングテストや競技プログラミングに取り組むときに、よく使うアルゴリズムの実装や標準ライブラリーの使い方をまとめました。\nさらに、練習問題を通してアルゴリズムを使って問題を解く経験を積めるようになっています。\n\nおまけ程度ですが自分の解答をつけておいたので、よかったら参考にしてください。\n\nこの記事では、以下のような人を対象にしています。\n基本的なアルゴリズムについて...",
          "link": "https://zenn.dev/yutohub/articles/1dea6baae5a2d4",
          "publishedOn": "2022-08-30T13:48:33.000Z",
          "wordCount": 14037,
          "title": "【Python3】コーディングテスト用チートシート（練習問題付き）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RSXaYpMi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yutohub%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python3%25E3%2580%2591%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E7%2594%25A8%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2588%25E7%25B7%25B4%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E4%25BB%2598%25E3%2581%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1lVUZRWFRXUC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RSXaYpMi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yutohub%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python3%25E3%2580%2591%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E7%2594%25A8%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2588%25E7%25B7%25B4%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E4%25BB%2598%25E3%2581%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1lVUZRWFRXUC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sora0513/articles/c2ca31642ab115",
          "author": "Takafumi Kawano",
          "description": "（恐らく初 zenn にチャレンジ）\n今流行の Stable-Diffusion を手元の 2022 M2 Macbook Air (mem24GB) で試してみたのでメモ。\n学習モデルはsd-v1-4.ckptを使用して、下記のコマンドで1枚できるのに約２分程度かかってました。\n$ python scripts/txt2img.py --prompt \"a photograph of an cat into a bottle\" --plms\n\n\n 参考リンク\n\n主に下記の記事を参考に環境構築。\n\nhttps://qiita.com/reopa_sharkun/items/0f7a03b...",
          "link": "https://zenn.dev/sora0513/articles/c2ca31642ab115",
          "publishedOn": "2022-08-30T11:44:50.000Z",
          "wordCount": 862,
          "title": "[Stable-Diffusion] 2022 M2 Macbook Air (mem24GB) で試す（2022/8/30版）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WtNVdIG---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takafumi%2520Kawano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%255BStable-Diffusion%255D%25202022%2520M2%2520Macbook%2520Air%2520%2528mem24GB%2529%2520%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2599%25EF%25BC%25882022%252F8%252F30%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lFQlJxVW5Sb2VZSXdmbGZIeEVMdmFFSUVncGk3ZjBoY1REaDJQdThZPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WtNVdIG---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takafumi%2520Kawano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%255BStable-Diffusion%255D%25202022%2520M2%2520Macbook%2520Air%2520%2528mem24GB%2529%2520%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2599%25EF%25BC%25882022%252F8%252F30%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lFQlJxVW5Sb2VZSXdmbGZIeEVMdmFFSUVncGk3ZjBoY1REaDJQdThZPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kaityo256/articles/boltzmann_machine2",
          "author": "ロボ太",
          "description": "はじめに\n機械学習で用いられるボルツマンマシン、特に制限ボルツマンマシン(Restricted Boltzmann Machine, RBM)の解説その2です。その1の続きなので、そちらを見てから読んでください。\n\n 前回までのあらすじ\nぼっち飯のDaveは、いつも学食前のテラスでお弁当を食べていますが、同じクラスのAliceとBobが学食をよく利用していることに気づきます。しかし、AliceとBobは同時に現れることは少ないようです。AliceとBobは仲が悪いのでしょうか？\n\nそこでDaveは239日にわたって二人を観察し、AliceとBobが学食に来た日、来ていない日の統計を取...",
          "link": "https://zenn.dev/kaityo256/articles/boltzmann_machine2",
          "publishedOn": "2022-08-30T10:02:18.000Z",
          "wordCount": 1525,
          "title": "制限ボルツマンマシンの基礎 ～推定編～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SZfoiDlC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25AD%25E3%2583%259C%25E5%25A4%25AA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E5%2588%25B6%25E9%2599%2590%25E3%2583%259C%25E3%2583%25AB%25E3%2583%2584%25E3%2583%259E%25E3%2583%25B3%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2520%25EF%25BD%259E%25E6%258E%25A8%25E5%25AE%259A%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1semRkTWZ2Ry0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzOGNiYTA0OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SZfoiDlC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25AD%25E3%2583%259C%25E5%25A4%25AA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E5%2588%25B6%25E9%2599%2590%25E3%2583%259C%25E3%2583%25AB%25E3%2583%2584%25E3%2583%259E%25E3%2583%25B3%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2520%25EF%25BD%259E%25E6%258E%25A8%25E5%25AE%259A%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1semRkTWZ2Ry0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzOGNiYTA0OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ykiki/articles/a2f3cffa8116d1",
          "author": "Ykiki",
          "description": "はじめに\nこの記事はAWS Sagemaker Studioで独自Containerを使う-前編-とAWS Sagemaker Studioで独自Containerを使う-中編-の続きです。こちらを読んでいない方はそちらからどうぞ。\n\n 学習スクリプト\nさて、前の記事でDockerfileのビルドを行いました。ここからそのコンテナを使用して学習を行います。\n初めに入力データや出力先、containerイメージを指定します。\n\ntrain.ipynd\nimport boto3\nimport sagemaker\nfrom sagemaker import get_execution_ro...",
          "link": "https://zenn.dev/ykiki/articles/a2f3cffa8116d1",
          "publishedOn": "2022-08-30T07:02:49.000Z",
          "wordCount": 1641,
          "title": "AWS Sagemaker Studioで独自Containerを使う-後編-",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ni5RZrnU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ykiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AWS%2520Sagemaker%2520Studio%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AAContainer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586-%25E5%25BE%258C%25E7%25B7%25A8-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BfNWpPTVMzNkhwMUQybGlFcHRlTnJMMGxLczdRZDAyOUlqd2F2Z2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ni5RZrnU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ykiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AWS%2520Sagemaker%2520Studio%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AAContainer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586-%25E5%25BE%258C%25E7%25B7%25A8-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BfNWpPTVMzNkhwMUQybGlFcHRlTnJMMGxLczdRZDAyOUlqd2F2Z2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hipapa/articles/89650a160a3a6e",
          "author": "hipapa",
          "description": "TL;DR\n\nparserメモ\n\n\n 通常のparser\n\n parser.py\nfrom argparse import ArgumentParser\n\n\ndef parse_args():\n    parser = ArgumentParser(description='')\n    parser.add_argument('env', # 引数名、--なしの場合は必須、ありの場合は任意\n                        choices=['prd', 'stg', 'dev'], # 引数の選択肢\n                        type=str,...",
          "link": "https://zenn.dev/hipapa/articles/89650a160a3a6e",
          "publishedOn": "2022-08-30T02:18:58.000Z",
          "wordCount": 575,
          "title": "python parser リファレンス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jpDzzMiz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hipapa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520parser%2520%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04UmRvc1NmRS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViZTU5ZDMwY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jpDzzMiz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hipapa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520parser%2520%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04UmRvc1NmRS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViZTU5ZDMwY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/bd403aa6d03100",
          "author": "yKesamaru",
          "description": "Python：メモリーリークの探し方3選\n探すのが難しいと言われるメモリーリーク。先日あるプロジェクトのメモリーリークをFixしましたのでその時に使用した3つの方法をご紹介します。\n\n 1. Memory_leak\nまず拙作のMemory_leakからご紹介します。\nhttps://github.com/yKesamaru/Memory_leak\n\nOutput the result of the tracemalloc module with formatted.\n\n\n 使用例\n\n 書き方\nfrom memory_leak import Memory_leak\nm = Memory...",
          "link": "https://zenn.dev/ykesamaru/articles/bd403aa6d03100",
          "publishedOn": "2022-08-30T01:53:03.000Z",
          "wordCount": 1872,
          "title": "# Python：メモリーリークの探し方3選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YiwRE6pA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yKesamaru%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%2523%2520Python%25EF%25BC%259A%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E6%258E%25A2%25E3%2581%2597%25E6%2596%25B93%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tVm5Lai1FbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTFmYzI4MjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YiwRE6pA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yKesamaru%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%2523%2520Python%25EF%25BC%259A%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E6%258E%25A2%25E3%2581%2597%25E6%2596%25B93%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tVm5Lai1FbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTFmYzI4MjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/ed3c614b08b0c4",
          "author": "nakamura196",
          "description": "BeautifulSoupでxml:id属性を与える方法の備忘録です。\n以下の方法ではエラーが発生してしまいます。\nfrom bs4 import BeautifulSoup\nsoup = BeautifulSoup(features=\"xml\")\nsoup.append(soup.new_tag(\"p\", abc=\"xyz\", xml:id=\"abc\"))\nprint(soup)\n以下のように記述すると正しく実行できました。\nfrom bs4 import BeautifulSoup\nsoup = BeautifulSoup(features=\"xml\")\nsoup.append(so...",
          "link": "https://zenn.dev/nakamura196/articles/ed3c614b08b0c4",
          "publishedOn": "2022-08-29T23:43:58.000Z",
          "wordCount": 227,
          "title": "BeautifulSoupでxml:id属性を与える方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q4T5R6CU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:BeautifulSoup%25E3%2581%25A7xml%253Aid%25E5%25B1%259E%25E6%2580%25A7%25E3%2582%2592%25E4%25B8%258E%25E3%2581%2588%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q4T5R6CU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:BeautifulSoup%25E3%2581%25A7xml%253Aid%25E5%25B1%259E%25E6%2580%25A7%25E3%2582%2592%25E4%25B8%258E%25E3%2581%2588%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hagakun_dev/articles/b178e669b2dbe0",
          "author": "はがくん@薬剤師のなかではコード書くの好き",
          "description": "せっかく描くなら美しい女性を描きたい！\n\nhttps://twitter.com/hagakun_yakuzai/status/1564240690451603456?s=20&t=8049moKKtlOa6F1pUxXzDA\nStable Diffusionは歴史上最も重要なAIアートモデルだと言われています。\n👆の画像は全てStable Diffusionを使って描いた女性たちです。No Named Womensですが、彼女たちは本当に美しい。\nStable Diffusionにはたくさんの導入記事があり、準備万端！って方が非常に多いと思いますが、いざ描こう！と思ったとき...",
          "link": "https://zenn.dev/hagakun_dev/articles/b178e669b2dbe0",
          "publishedOn": "2022-08-29T22:03:00.000Z",
          "wordCount": 716,
          "title": "【公開】Stable Diffusionで美しい女性のポートレートを描くprompt(呪文)を公開するチュートリアル🚀【入門編】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6bLZXBXP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%258C%25E3%2581%258F%25E3%2582%2593%2540%25E8%2596%25AC%25E5%2589%25A4%25E5%25B8%25AB%25E3%2581%25AE%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A7%25E3%2581%25AF%25E3%2582%25B3%25E3%2583%25BC...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590%25E5%2585%25AC%25E9%2596%258B%25E3%2580%2591Stable%2520Diffusion%25E3%2581%25A7%25E7%25BE%258E%25E3%2581%2597%25E3%2581%2584%25E5%25A5%25B3%25E6%2580%25A7%25E3%2581%25AE%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258F%258F%25E3%2581%258Fprompt%2528%25E5%2591%25AA%25E6%2596%2587%2529%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%2520%25E3%2580%2590%25E5%2585%25A5%25E9%2596%2580%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03dUZKZkVBbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyZDdiMzc4M2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6bLZXBXP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%258C%25E3%2581%258F%25E3%2582%2593%2540%25E8%2596%25AC%25E5%2589%25A4%25E5%25B8%25AB%25E3%2581%25AE%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A7%25E3%2581%25AF%25E3%2582%25B3%25E3%2583%25BC...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590%25E5%2585%25AC%25E9%2596%258B%25E3%2580%2591Stable%2520Diffusion%25E3%2581%25A7%25E7%25BE%258E%25E3%2581%2597%25E3%2581%2584%25E5%25A5%25B3%25E6%2580%25A7%25E3%2581%25AE%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258F%258F%25E3%2581%258Fprompt%2528%25E5%2591%25AA%25E6%2596%2587%2529%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%2520%25E3%2580%2590%25E5%2585%25A5%25E9%2596%2580%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03dUZKZkVBbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyZDdiMzc4M2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/keras-datasets",
          "author": "NekoAllergy",
          "description": "はじめに\nkeras に含まれている 7 つのデータセットについて紹介します。\nそれぞれのデータセットについて、データ数や種類についてまとめました。\n機械学習をする際の参考にしてください。\n\n keras とは？\n\nkeras とは、深層学習フレームワークの 1 つです。\nkeras を使用することで、数学的な難しい部分をゼロから開発することなく、比較的短いソースコードで人工知能を作ることができます。\nkeras は、Google の深層学習フレームワーク「tensorflow」をインストールすることで使えるようになります。tensorflow の中に keras が同梱されていま...",
          "link": "https://zenn.dev/nekoallergy/articles/keras-datasets",
          "publishedOn": "2022-08-29T09:00:01.000Z",
          "wordCount": 3401,
          "title": "【図解】kerasのサンプルデータセット7選まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MycvUv95--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591keras%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%25887%25E9%2581%25B8%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MycvUv95--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591keras%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%25887%25E9%2581%25B8%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ykiki/articles/a4cf45684e3382",
          "author": "Ykiki",
          "description": "はじめに\nこの記事はAWS Sagemaker Studioで独自Containerを使う-前編-の続きです。\nこの記事を見ていない方はそちらからどうぞ。\n\n IAMロールの設定\n新しくsagemaker用のIAMロールを作成します。ここではSagemakerExcutionRoleという名前で作成します。（名前は適宜変更してください）\nまず初めに、「許可を追加」からポリシーをアタッチを選択して、[AmazonSageMakerFullAccess]を追加します。\n\nその後、codebuildのアクセス許可を含める必要があります。\nここでは[build-and-push-contai...",
          "link": "https://zenn.dev/ykiki/articles/a4cf45684e3382",
          "publishedOn": "2022-08-29T07:51:05.000Z",
          "wordCount": 659,
          "title": "AWS Sagemaker Studioで独自Containerを使う-中編-",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xpLK9BhL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ykiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AWS%2520Sagemaker%2520Studio%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AAContainer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586-%25E4%25B8%25AD%25E7%25B7%25A8-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BfNWpPTVMzNkhwMUQybGlFcHRlTnJMMGxLczdRZDAyOUlqd2F2Z2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xpLK9BhL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ykiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AWS%2520Sagemaker%2520Studio%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AAContainer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586-%25E4%25B8%25AD%25E7%25B7%25A8-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BfNWpPTVMzNkhwMUQybGlFcHRlTnJMMGxLczdRZDAyOUlqd2F2Z2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/scirexs/articles/037bab6bf6f892",
          "author": "scirexs",
          "description": "自分用メモですが誰かの役に立てば。\n\n 公式リファレンス\n\n\nPython latest stable release document\n\n組み込み関数\n組み込み定数\n組み込み型\n組み込み例外\n\n\n\n\n 演算\n\n 演算子\n演算子の優先順位\nx割るyの商と剰余を考えた時、x = (x // y) * y + x % y となる値が返却される。(マイナス値の演算結果は直感的でない)\n\n\n\n演算種類\n記法\n\n\n\n\n代入, 四則, べき乗\n=, +, -, *, /, **\n\n\n商と剰余\n//, %\n\n\n要素結合\n+\n\n\n比較\n==, !=, <, >, <=, >=, ...",
          "link": "https://zenn.dev/scirexs/articles/037bab6bf6f892",
          "publishedOn": "2022-08-29T06:26:42.000Z",
          "wordCount": 4577,
          "title": "Python簡易リファレンス(メモ)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--caRnO4tO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:scirexs%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E7%25B0%25A1%25E6%2598%2593%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B9%2528%25E3%2583%25A1%25E3%2583%25A2%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--caRnO4tO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:scirexs%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E7%25B0%25A1%25E6%2598%2593%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B9%2528%25E3%2583%25A1%25E3%2583%25A2%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/manntera/articles/97a39d8d6d9890",
          "author": "まんてらスタジオ",
          "description": "注意点\nまんてらはバックエンド系の経験が非常に薄いです！(なんならGCPは初経験)\n参考にする時は気を付けて下さい！\n\n 何するの？\nGoogle Compute Engine上で、DiscordのBOTをDockerを使って動作させてみたい！\nとりあえず、Discordサーバーのテキストチャンネルで何か発言したらその内容をオウム返しするBOTを作って見る！\n\n ざっくり何したの？\n\n Discordでの操作\n\nアプリケーションを作成する\nBOTの設定をする\nOAuth2の設定をして任意のサーバーにBOTを突っ込む\nアクセストークンを得る\n\n\n GCPでの操作\n\nGoogle Clo...",
          "link": "https://zenn.dev/manntera/articles/97a39d8d6d9890",
          "publishedOn": "2022-08-28T17:30:50.000Z",
          "wordCount": 1400,
          "title": "Dockerを用いたDiscordBOTの環境構築をGCE上でやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Mj83y_hs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BE%25E3%2582%2593%25E3%2581%25A6%25E3%2582%2589%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25B8%25E3%2582%25AA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FDiscordBOT%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592GCE%25E4%25B8%258A%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kSkFvRGZRSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NWJmOTI0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Mj83y_hs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BE%25E3%2582%2593%25E3%2581%25A6%25E3%2582%2589%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25B8%25E3%2582%25AA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FDiscordBOT%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592GCE%25E4%25B8%258A%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kSkFvRGZRSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NWJmOTI0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ama_c/articles/43bd4171a9855d",
          "author": "ama-c",
          "description": "はじめに\n僕はこれまで python をなあなあで触ってきたので，「あれ，このimportの仕方っていけるんだっけ」と毎回調べています．そんな自分とおさらばするための記事です．\n嘘がありましたらご教授いただければ幸いです．\n!\npython2系と3系とでルールが大きく異なり，3系であっても3.3以降とそれ以前とではルールが異なります．本記事では，2系と3.3以前の違いにも触れつつ，3.3以降で適用されるルールを確認していきます．\n\n本記事では，pythonのインポート方法である，「絶対インポート」と「相対インポート」のルールを確認し，そのルールが決められた理由を理解して覚えることを目...",
          "link": "https://zenn.dev/ama_c/articles/43bd4171a9855d",
          "publishedOn": "2022-08-28T15:28:38.000Z",
          "wordCount": 698,
          "title": "理解して覚えるpython ～import編～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xJMIgmH8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ama-c%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E8%25A6%259A%25E3%2581%2588%25E3%2582%258Bpython%2520%25EF%25BD%259Eimport%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xeEY4OTBSeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNTc0NmE4ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xJMIgmH8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ama-c%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E8%25A6%259A%25E3%2581%2588%25E3%2582%258Bpython%2520%25EF%25BD%259Eimport%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xeEY4OTBSeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNTc0NmE4ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/pienthon/articles/5d7f6043cb702e",
          "author": "にゃーん(Pienthon)",
          "description": "AtCoderとは？\n毎週土曜日や日曜日に、リアルタイムでプログラミング能力を競うことができるサイトです。\n3,000以上の過去問を解くこともでき、初心者から上級者まで楽しむことができます。\n今回はアルゴリズムで緑を目指していきます。\n\n とりあえず参加してみた\nまずは敵を知ることから戦いは始まります。\nとりあえずAtCoder Biginner Contest 265に参加してきました。\nPythonは大学の授業でかじった程度、アルゴリズムの知識はほぼありません。\nこんな状態で挑んだ結果、こんな感じの成績になりました。\n\n\n パフォーマンス：175、Rating：9\n\nとりあえず、...",
          "link": "https://zenn.dev/pienthon/articles/5d7f6043cb702e",
          "publishedOn": "2022-08-28T14:30:10.000Z",
          "wordCount": 128,
          "title": "AtCoder初心者から最短入緑を目指す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Nx0WXkKG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AB%25E3%2582%2583%25E3%2583%25BC%25E3%2582%2593%2528Pienthon%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258B%25E3%2582%2589%25E6%259C%2580%25E7%259F%25AD%25E5%2585%25A5%25E7%25B7%2591%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1aQlJZZEFSbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWJkYTIzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Nx0WXkKG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AB%25E3%2582%2583%25E3%2583%25BC%25E3%2582%2593%2528Pienthon%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258B%25E3%2582%2589%25E6%259C%2580%25E7%259F%25AD%25E5%2585%25A5%25E7%25B7%2591%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1aQlJZZEFSbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWJkYTIzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fjnkt98/articles/98c9dfbd0702a4",
          "author": "藤那花多",
          "description": "AtCoder Beginner Contest 266 F - Well-defined Path Queries on a NamoriをPythonで解きます。\n\n 問題\n問題文をAtCoderのページより引用します。\n\n\n 問題文\n頂点に1からNの番号がついたN頂点N辺の連結な単純無向グラフGが与えられます。i番目の辺は頂点u_iと頂点v_iを双方向に結んでいます。\n以下のQ個のクエリに答えてください。\n\n頂点x_iから頂点y_iに向かう単純パス（同じ頂点を2度通らないパス）が一意に定まるか判定せよ。\n\n\n 制約\n\n3 \\leq N \\leq 2 \\times 10^5\n1 \\l...",
          "link": "https://zenn.dev/fjnkt98/articles/98c9dfbd0702a4",
          "publishedOn": "2022-08-28T14:15:48.000Z",
          "wordCount": 1435,
          "title": "ABC266 F - Well-defined Path Queries on a Namori Python解答例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nOHQwy1y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:ABC266%2520F%2520-%2520Well-defined%2520Path%2520Queries%2520on%2520a%2520Namori%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nOHQwy1y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:ABC266%2520F%2520-%2520Well-defined%2520Path%2520Queries%2520on%2520a%2520Namori%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fjnkt98/articles/90919fedf69f4c",
          "author": "藤那花多",
          "description": "AtCoder Beginner Contest 266 D - Snuke Panic (1D)をPythonで解きます。\n\n 問題\n問題文をAtCoderのページより引用します。\n\n\n 問題文\n高橋君はすぬけ君たちを捕まえようとしています。\n数直線上の座標0,1,2,3,4の5箇所に穴があり、すぬけ君たちの巣につながっています。\nこれからN匹のすぬけ君が穴から出てきます。i番目のすぬけ君は時刻T_iに座標X_iの穴から出てきて、大きさはA_iであることがわかっています。\n高橋君は時刻0に座標0におり、数直線上を単位時間あたり1以下の速さで移動することができます。\nすぬけ君が穴から出て...",
          "link": "https://zenn.dev/fjnkt98/articles/90919fedf69f4c",
          "publishedOn": "2022-08-28T14:15:48.000Z",
          "wordCount": 1117,
          "title": "ABC266 D - Snuke Panic (1D) Python解答例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hd9qdCcH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC266%2520D%2520-%2520Snuke%2520Panic%2520%25281D%2529%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hd9qdCcH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2597%25A4%25E9%2582%25A3%25E8%258A%25B1%25E5%25A4%259A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC266%2520D%2520-%2520Snuke%2520Panic%2520%25281D%2529%2520Python%25E8%25A7%25A3%25E7%25AD%2594%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NdEpIb2RTQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMGU2ODA1N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ukimochi/articles/4c05d60202689e",
          "author": "ukimochi",
          "description": "内容\n\nlocalでテストしていると、安全証明を強いられる\nseleniumでテストする際に、自動で回避させたい\n\n\n IE\n    if driver.title == \"このサイトは安全ではありません\":\n        try:\n            elm = driver.find_elements_by_id(\"moreInfoContainer\")\n            elm.click()\n        except:\n            print(\"ERROR\")\n\n        try:\n            elm = driver.find_...",
          "link": "https://zenn.dev/ukimochi/articles/4c05d60202689e",
          "publishedOn": "2022-08-28T13:00:23.000Z",
          "wordCount": 165,
          "title": "seleniumの安全証明回避処理",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--txH6n1sr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ukimochi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:selenium%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E8%25A8%25BC%25E6%2598%258E%25E5%259B%259E%25E9%2581%25BF%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbDdHU095c0ZmNmw5TW9TX2M0ajVvOE1ST3VrZWR0R1VTSEQ4Zkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--txH6n1sr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ukimochi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:selenium%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E8%25A8%25BC%25E6%2598%258E%25E5%259B%259E%25E9%2581%25BF%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbDdHU095c0ZmNmw5TW9TX2M0ajVvOE1ST3VrZWR0R1VTSEQ4Zkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/331bd44603cb90",
          "author": "mimitako",
          "description": "初めてZennに投稿します。\nDisc容量が大きくなったとはいえ、写真の高解像度化によって画像のサイズも大きくなっています。\nスマホでバンバン写真を撮影できるので、意外とストレージ容量を圧迫します。\n\n アプリの公開\nアプリはこちらに公開しています。\nhttps://github.com/miris-mimitako/convert_images_python\nsettings.jsonで変換したいディレクトリの指定をすればひとまず動きますので、ぜひ検証してみてください。\n\n ライブラリ\n今回のアプリはほとんどPythonの基本ライブラリで構築しており、pillowのみpip insta...",
          "link": "https://zenn.dev/mimitako/articles/331bd44603cb90",
          "publishedOn": "2022-08-28T12:57:20.000Z",
          "wordCount": 151,
          "title": "Pythonで作る一括画像変換アプリ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uQumHbpq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E4%25B8%2580%25E6%258B%25AC%25E7%2594%25BB%25E5%2583%258F%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uQumHbpq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E4%25B8%2580%25E6%258B%25AC%25E7%2594%25BB%25E5%2583%258F%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tomofyro/articles/55bc5dc90685ad",
          "author": "tomofyro / トモフィロー",
          "description": "はじめに\n今日は目標としているシステムの最後の学習内容です。\nスクレイピングでWebの情報を取得するロジックです。\n\n 使ったパッケージ\n\n request\n前回のAPIの記事で説明したHTMLのリクエストが行えるツールになっています。\ncontentやheaderの情報を取得できます。\nhttps://note.nkmk.me/python-requests-usage/\n\nインストールコマンド\n$ pip install requests\n\n\n BeautifulSoup\nHTMLやXMLをpythonで使いやすいようにパースしてくれるライブラリです。\nrequestで読み込んだ...",
          "link": "https://zenn.dev/tomofyro/articles/55bc5dc90685ad",
          "publishedOn": "2022-08-28T10:48:16.000Z",
          "wordCount": 654,
          "title": "【python】スクレイピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yQLHDIFl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomofyro%2520%252F%2520%25E3%2583%2588%25E3%2583%25A2%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AD%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590python%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xdklYLV9QTC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1MWQ0OTNjNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yQLHDIFl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomofyro%2520%252F%2520%25E3%2583%2588%25E3%2583%25A2%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AD%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590python%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xdklYLV9QTC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1MWQ0OTNjNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/deeprecommend/books/27edf7e5025da4",
          "author": "DeepRecommend",
          "description": "ふるさと納税上限シミュレーション × 楽天API連携 × 量子コンピューティング × 最適化問題\n\n「ふるさと納税 訳あり」で\n楽天APIからふるさと納税返礼品一覧を取得して\n組合せ最適化問題のひとつナップサック問題を解く量子アルゴリズム（QAOA:量子近似最適化アルゴリズム）で\nシミュレーションで出した控除上限額までで\n最も総重量が重くなるような返礼品の組み合わせを求めて\nとにかくふるさと納税で得するためのプログラムを組みました。\n\n※Python言語です。\n※あくまでも、学習と研究開発用にご活用ください。\n※現状、サービスとしてはご利用いただけません。",
          "link": "https://zenn.dev/deeprecommend/books/27edf7e5025da4",
          "publishedOn": "2022-08-28T10:39:07.000Z",
          "wordCount": 97,
          "title": "量子最適化を使ってふるさと納税で 得をするプログラムを配布します",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KwqLiph7--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mMGVlYjQzYmIyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KwqLiph7--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mMGVlYjQzYmIyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/thimblee/articles/ml_prml_support-vector-machine",
          "author": "Thimblee",
          "description": "はじめに\nPRML(Pattern Recognition and Machine Learning)でハードマージンのサポートベクターマシンについて学んだ内容をまとめて、pythonで実装しました。主に7章1節の内容です。より一般的なソフトマージンのモデルについては扱っていません。そのほか参考になるものは記事の一番下にのせてあります。\n\n 理論\n\n 問題設定\nN個の既知のデータの組((\\mathbf{x}_1, t_1), ... (\\mathbf{x}_N, t_N)), t_i \\in \\{-1, 1\\}があります。今、新しく\\mathbf{x}_{N+1}を知った時、t_{N...",
          "link": "https://zenn.dev/thimblee/articles/ml_prml_support-vector-machine",
          "publishedOn": "2022-08-28T10:21:18.000Z",
          "wordCount": 2337,
          "title": "サポートベクターマシンをPythonコードを交えて紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s9bOEao4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Thimblee%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2599%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%2592Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BA%25A4%25E3%2581%2588%25E3%2581%25A6%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1BUWhUYkZNbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViMzVkNWJjOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s9bOEao4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Thimblee%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2599%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%2592Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BA%25A4%25E3%2581%2588%25E3%2581%25A6%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1BUWhUYkZNbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViMzVkNWJjOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kitchy/articles/a30d141c4edd2f",
          "author": "kitchy",
          "description": "はじめに\n現在、私は音声言語処理研究室でASR分野の研究に勤しんでいる某大学の大学院生です。インターンではpythonでMLや暗号系の開発を行ったりしています。\n夏休みのお盆明けにインターンも落ち着いて、開発をしたいと思い始めていた６月くらいに、研究室メンバーと「せっかく音声認識に強い研究室なんだから、自動でミーティングを書き起こすシステムほしいよね」という話をした結果、研究室内でハッカソンをすることになりました。\nメンバーは自分を含めたM1が２人（１日だけ参加が１人）、B4が３人の合計５人で8/1７~8/19の３日間で開発行いました。\nそこで開発した音声認識システムの概要を記してい...",
          "link": "https://zenn.dev/kitchy/articles/a30d141c4edd2f",
          "publishedOn": "2022-08-28T10:15:37.000Z",
          "wordCount": 959,
          "title": "研究室内ゼミ音声認識システム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YQXPBQVV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kitchy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25E5%2586%2585%25E3%2582%25BC%25E3%2583%259F%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Ua2hURC02VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4MGM0ZTc3NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YQXPBQVV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kitchy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25E5%2586%2585%25E3%2582%25BC%25E3%2583%259F%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Ua2hURC02VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4MGM0ZTc3NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/7981bc81ee083d",
          "author": "shimo",
          "description": "以下のようなシェルスクリプトを作ったけど、gitなしでPythonのrequestでダウンロードできないかと思ってやってみました。\nhttps://zenn.dev/shimo_s3/articles/c3c00ec33fd952\n\n 結論\nできるけど、遅い。gitより早くなるかもと思ったけど、遅くなりました。git 23秒 python 183秒。(https://github.com/aws-samples/aws-cdk-examples.git のpython/　で比較)\n\n\n やりたいこと\ngir repositoryから、1つのディレクトリ(フォルダ)だけをダウンロードしたい...",
          "link": "https://zenn.dev/shimo_s3/articles/7981bc81ee083d",
          "publishedOn": "2022-08-28T09:49:26.000Z",
          "wordCount": 236,
          "title": "githubから1つのディレクトリだけをダウンロードするPythonスクリプト(遅くて意味なし)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BPtbzTOE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:github%25E3%2581%258B%25E3%2582%25891%25E3%2581%25A4%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2528%25E9%2581%2585%25E3%2581%258F%25E3%2581%25A6%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AA%25E3%2581%2597%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BPtbzTOE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:github%25E3%2581%258B%25E3%2582%25891%25E3%2581%25A4%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2528%25E9%2581%2585%25E3%2581%258F%25E3%2581%25A6%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AA%25E3%2581%2597%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/keras-mnist01",
          "author": "NekoAllergy",
          "description": "はじめに\n深層学習フレームワーク「Keras」を使って、画像分類 AI を作ります。\n今回は、サンプルデータ「MNIST」を使用します。\n手書き数字の画像(28×28px)が 10 クラスのどれに当てはまるかを分類します。\n\n 01 準備\n必要なライブラリ\n requirements.txt\nnumpy\ntensorflow\n\n\n\n 02 コード全文\nコード全文\n clf_mnist.py\nimport numpy as np\nfrom tensorflow import keras\nfrom tensorflow.keras.datasets import mnist\n\n(tra...",
          "link": "https://zenn.dev/nekoallergy/articles/keras-mnist01",
          "publishedOn": "2022-08-28T08:15:32.000Z",
          "wordCount": 1614,
          "title": "【図解】KerasでMNIST画像分類",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aV7igN5S--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591Keras%25E3%2581%25A7MNIST%25E7%2594%25BB%25E5%2583%258F%25E5%2588%2586%25E9%25A1%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aV7igN5S--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591Keras%25E3%2581%25A7MNIST%25E7%2594%25BB%25E5%2583%258F%25E5%2588%2586%25E9%25A1%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ykiki/articles/fe5f87cd4432ed",
          "author": "Ykiki",
          "description": "はじめに\n今日、クラウドでDeep Learning Modelのトレーニングを行うことは必須技術となってきました。\nAWSを始めGCPやAzureでも似たようなサービスを提供していますが、S3やEC2などのAWSのサービスをしている場合、やはりトレーニング自体もAWS内で行うことがスムーズです。\n今回は、独自のモデルをDockerを使用して学習する方法を説明します。\n\n セットアップ\nAWSコンソールからSageMakerを選択し、\"今すぐ始める\"ボタンでセットアップを行います。\nここではSagemaker Domainの設定だけで十分です。\n\nその後、コントロールパネルからstu...",
          "link": "https://zenn.dev/ykiki/articles/fe5f87cd4432ed",
          "publishedOn": "2022-08-28T04:30:47.000Z",
          "wordCount": 2318,
          "title": "AWS Sagemaker Studioで独自Containerを使う1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nHyCpL7D--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ykiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AWS%2520Sagemaker%2520Studio%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AAContainer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25861%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BfNWpPTVMzNkhwMUQybGlFcHRlTnJMMGxLczdRZDAyOUlqd2F2Z2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nHyCpL7D--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ykiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AWS%2520Sagemaker%2520Studio%25E3%2581%25A7%25E7%258B%25AC%25E8%2587%25AAContainer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25861%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BfNWpPTVMzNkhwMUQybGlFcHRlTnJMMGxLczdRZDAyOUlqd2F2Z2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/books/deeplearning-advanced",
          "author": "NekoAllergy",
          "description": "深層学習フレームワーク「Keras」を使って、AIを作ってみます。\n\n【できるようになること】\n✅ サンプルデータを使って、簡単な画像分類AIを作成できる\n✅ 用意されている有名モデルを使って、画像分類AIを作成できる\n✅ 有名モデルを転移学習させ、用途に合ったAIを作成できる\n\n【キーワード】\n💬 MNIST, FashionMNIST, Cifar10\n💬 VGG, ResNet, EfficientNet, MobileNet\n💬 TensorFlowHub\n💬 転移学習、FineTuning\n💬 モデル保存、重み保存\n\n【追加予定】\n💡 最新モデルを使って、精度の高いAIを作成できる\n💡 学習済モデルをAPI化しWeb上で使用することができる\n💡 GCPのGPU環境を構築してディープラーニングができる\n💡 CloudVisionAPIを使って画像認識ができる",
          "link": "https://zenn.dev/nekoallergy/books/deeplearning-advanced",
          "publishedOn": "2022-08-28T03:00:20.000Z",
          "wordCount": 143,
          "title": "【実践】ネコでも分かるDeepLearningの応用まとめ【Keras入門】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xig3_jbU--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iNDU2Yzg1YmM5LmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xig3_jbU--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iNDU2Yzg1YmM5LmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/zgw426/articles/5499803b021413",
          "author": "suo-takefumi",
          "description": "ARで壁に穴をあける(デモ動画)\n何を言ってるかわからないと思いますでのデモ動作をご覧ください。\nhttps://youtu.be/G7gJNwqv2Cw\nデモ動画では2枚のARマーカーを縦に重ねてそれぞれの板に穴があいたようなギミックを施しています。\n\n 環境\n\nWindows(カメラ付き)\nラズパイ①(カメラ付き)\nラズパイ②(カメラ付き)\nARマーカー付きの板\n\n\n Windows(カメラ付き)\n2つの壁を貫通するPythonスクリプトはWindows11(カメラ付き)環境で実行します。\nPS C:\\> python --version\nPython 3.9.5\n\nPS ...",
          "link": "https://zenn.dev/zgw426/articles/5499803b021413",
          "publishedOn": "2022-08-28T00:06:56.000Z",
          "wordCount": 2095,
          "title": "ARで2つの壁を貫通する仕組みを開発しています",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RiY8Y3sv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:suo-takefumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AR%25E3%2581%25A72%25E3%2581%25A4%25E3%2581%25AE%25E5%25A3%2581%25E3%2582%2592%25E8%25B2%25AB%25E9%2580%259A%25E3%2581%2599%25E3%2582%258B%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycHpTZF9NNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1M2E2OTUzMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RiY8Y3sv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:suo-takefumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AR%25E3%2581%25A72%25E3%2581%25A4%25E3%2581%25AE%25E5%25A3%2581%25E3%2582%2592%25E8%25B2%25AB%25E9%2580%259A%25E3%2581%2599%25E3%2582%258B%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ycHpTZF9NNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1M2E2OTUzMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/technicarium/articles/00b32d390e82ec",
          "author": "テク二カリウム",
          "description": "OS標準でインストールされているPythonとは異なるバージョンをインストールして用途によって使い分けられるようにPyenvをインストールして切り替えるようにしました。\n\n 環境\n$ cat /etc/os-release \nPRETTY_NAME=\"Debian GNU/Linux 11 (bullseye)\"\nNAME=\"Debian GNU/Linux\"\nVERSION_ID=\"11\"\nVERSION=\"11 (bullseye)\"\nVERSION_CODENAME=bullseye\nID=debian\nHOME_URL=\"https://www.debian.org/\"\nSUPP...",
          "link": "https://zenn.dev/technicarium/articles/00b32d390e82ec",
          "publishedOn": "2022-08-27T12:49:23.000Z",
          "wordCount": 2346,
          "title": "Raspberry Pi OS + PyenvでPythonバージョンの切り替え",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8dGLe4ut--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%2520OS%2520%252B%2520Pyenv%25E3%2581%25A7Python%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8dGLe4ut--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2586%25E3%2582%25AF%25E4%25BA%258C%25E3%2582%25AB%25E3%2583%25AA%25E3%2582%25A6%25E3%2583%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%2520OS%2520%252B%2520Pyenv%25E3%2581%25A7Python%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mUXp0SzFyTi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhOTg5ZmI5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/6uclz1/articles/d7736b06d24f1a",
          "author": "6uclz1",
          "description": "初めに\nGoogle Colaboratory で動かしていることを前提。\n自分は Colab Pro にしているので、VRAMあたりで無料版の人は実行できないものがあるかも\nその際は出力する画像数とかを減らせばいけると思います。\n出力する先をGoogle Driveにしたり、画像をいっぱい生成したりできるようにまとめてる記事が\n見当たらなかったので作成。\n\n セットアップ\nほぼここを参照\nhttps://note.com/npaka/n/ndd549d2ce556\n本家の見た方が本質の理解には繋がるかも\nhttps://colab.research.google.com/githu...",
          "link": "https://zenn.dev/6uclz1/articles/d7736b06d24f1a",
          "publishedOn": "2022-08-27T12:05:14.000Z",
          "wordCount": 1137,
          "title": "Stable Diffusion をGoogle Colabで実行する際に便利なコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ySuR0Cea--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:6uclz1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Stable%2520Diffusion%2520%25E3%2582%2592Google%2520Colab%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VWU5nZEFIeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyMTRmMDE0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ySuR0Cea--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:6uclz1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Stable%2520Diffusion%2520%25E3%2582%2592Google%2520Colab%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VWU5nZEFIeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyMTRmMDE0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/td2sk/articles/eb772103a3a8ff",
          "author": "td2sk",
          "description": "TL;DR\n\nStable Diffusion でプロンプトに重みをつけたり、意味の世界で足したり引いたりするよ\n\n例: ピラミッド - エジプト + 日本 = ?\n\n\n画風をシームレスに変換できるよ\nseed 変更だと大きく変わってしまうけど、小さい重みで補正かければ構図を維持したまま絵に微調整を加えられるよ\n\n\n 意味の足し算・引き算\nStable Diffusion では、内部的に以下の 2 ステップの処理を行うことでテキストを画像に変換している\n\nテキストをベクトル(数の組)に変換する\nベクトルを画像に変換する\n\nところで、以下の動画を見てほしい\nhttps://www.yo...",
          "link": "https://zenn.dev/td2sk/articles/eb772103a3a8ff",
          "publishedOn": "2022-08-27T10:04:42.000Z",
          "wordCount": 744,
          "title": "Stable Diffusion のプロンプトで意味の足し算・引き算をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UTsgUq0E--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:td2sk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffusion%2520%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2581%25A7%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AE%25E8%25B6%25B3%25E3%2581%2597%25E7%25AE%2597%25E3%2583%25BB%25E5%25BC%2595%25E3%2581%258D%25E7%25AE%2597%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeW1FaGs1X2c3Mmt5bnhXb2R1R1hOUFNPZWJ3bTNUYndBb003NUk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UTsgUq0E--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:td2sk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffusion%2520%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2581%25A7%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AE%25E8%25B6%25B3%25E3%2581%2597%25E7%25AE%2597%25E3%2583%25BB%25E5%25BC%2595%25E3%2581%258D%25E7%25AE%2597%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeW1FaGs1X2c3Mmt5bnhXb2R1R1hOUFNPZWJ3bTNUYndBb003NUk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/catminusminus/articles/3f203b274cae14",
          "author": "Catminusminus",
          "description": "JSでは\nfunction * f() {\n  return 10;\n}\n\nconst ret = f().next();\n\nconsole.log(ret.value);　 // output: 10\nconsole.log(ret.done);  // output: true\nというのができる。つまり、最初のnextで終わって（done == true）値を返す(10)。\nこれをPythonでやるにはどうすればよいかというのを考えた結果、以下になった。\ndef f():\n  return 10\n  yield\n\ntry:\n  next(f())\nexcept StopIterati...",
          "link": "https://zenn.dev/catminusminus/articles/3f203b274cae14",
          "publishedOn": "2022-08-27T06:16:16.000Z",
          "wordCount": 253,
          "title": "最初の一回で終わって値を返すgenerator",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xT47bmMU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Catminusminus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E5%2588%259D%25E3%2581%25AE%25E4%25B8%2580%25E5%259B%259E%25E3%2581%25A7%25E7%25B5%2582%25E3%2582%258F%25E3%2581%25A3%25E3%2581%25A6%25E5%2580%25A4%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599generator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1pRXQxOVdORy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExNDI4ZDQ1MTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xT47bmMU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Catminusminus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E5%2588%259D%25E3%2581%25AE%25E4%25B8%2580%25E5%259B%259E%25E3%2581%25A7%25E7%25B5%2582%25E3%2582%258F%25E3%2581%25A3%25E3%2581%25A6%25E5%2580%25A4%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599generator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1pRXQxOVdORy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExNDI4ZDQ1MTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kwashizzz/articles/ml-anomaly-det-patchcore",
          "author": "わっしー",
          "description": "はじめに\nこんにちは、わっしーです。本記事では、CVPR2022で発表された画像異常検知手法であるPatchCoreの実装について解説します。\nまずは、実際に試した結果です。下図の上は正常画像、下は異常画像です。異常部分が赤くなっており、製品が欠損していることがわかります。\n\nPatchCoreの詳細については、外観検査向け異常検知手法に関する論文紹介の記事がわかりやすいです。\nPatchCoreの利点は、ImageNetなどのデータセットで学習された事前学習モデルの特徴マップを用いるため深層学習モデルの訓練の必要ないことです。\n手法としては、\n\n正常な画像群の特徴マップにおける局所...",
          "link": "https://zenn.dev/kwashizzz/articles/ml-anomaly-det-patchcore",
          "publishedOn": "2022-08-27T04:21:37.000Z",
          "wordCount": 2581,
          "title": "【CVPR2022】画像異常検知 PatchCoreの実装解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n20lDkAs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590CVPR2022%25E3%2580%2591%25E7%2594%25BB%25E5%2583%258F%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%2520PatchCore%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n20lDkAs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590CVPR2022%25E3%2580%2591%25E7%2594%25BB%25E5%2583%258F%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%2520PatchCore%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mory22k/articles/e3a51a259e590e",
          "author": "mory22k",
          "description": "シンプルな順伝播型ニューラルネットワークをNumPyで実装し、簡単な関数を回帰してみます。ただし、この記事では\n\n隠れ層は全結合 + ReLUだけ\n誤差は誤差逆伝播法で計算する\n学習は最急降下法だけ\nミニバッチ学習は実装しない\n\nに絞って実装していきます。\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom pprint import pprint\n\n 基本構成\n以下のようにニューラルネットワークを構成します。\n\n 入力層 / input layer\n元データXを扱いやすい形で入力します。この記事では、単に入力された値...",
          "link": "https://zenn.dev/mory22k/articles/e3a51a259e590e",
          "publishedOn": "2022-08-26T07:00:00.000Z",
          "wordCount": 9240,
          "title": "[NumPy] 簡単なニューラルネットワークをゼロから実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0jDJi4by--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BNumPy%255D%2520%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0jDJi4by--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mory22k%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BNumPy%255D%2520%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3AxakYxZWZ3THdBRmRSeUliY3JTSHVOZy0zOUp0NF9CMkZQYWFkWFdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kymok/articles/b976e67a874277",
          "author": "kymok",
          "description": "概要\nこの記事では，道路中心線と道路縁の線データを用い，道路中心線ごとに道幅を計算する方法について述べます．以下3つの図で，太らせた領域の端と道路縁がおおむね一致していることから，方法は単純ですがそれっぽいデータが得られていることがわかります．\n\n入力：シアン色の一点鎖線は道路中心線．黒い細線は道路縁．\n\n出力：道幅つきの道路中心線\n\n入力と出力を重ねたもの\n\n 使用するデータ\n本稿では以下のデータを用います．\n\n道路中心線：国土地理院ベクトルタイル提供実験のデータを用います．タイル番号は {z, x, y} = {16, 58211, 25803} です．\n道路縁：国土地理院の基盤...",
          "link": "https://zenn.dev/kymok/articles/b976e67a874277",
          "publishedOn": "2022-08-25T19:30:55.000Z",
          "wordCount": 2646,
          "title": "道路中心線と道路縁から道幅をもった道路中心線データをつくる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---uNVA8St--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kymok%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2581%2593%25E8%25B7%25AF%25E4%25B8%25AD%25E5%25BF%2583%25E7%25B7%259A%25E3%2581%25A8%25E9%2581%2593%25E8%25B7%25AF%25E7%25B8%2581%25E3%2581%258B%25E3%2582%2589%25E9%2581%2593%25E5%25B9%2585%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A3%25E3%2581%259F%25E9%2581%2593%25E8%25B7%25AF%25E4%25B8%25AD%25E5%25BF%2583%25E7%25B7%259A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tRm92VGVhLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZTRiZTU5NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---uNVA8St--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kymok%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2581%2593%25E8%25B7%25AF%25E4%25B8%25AD%25E5%25BF%2583%25E7%25B7%259A%25E3%2581%25A8%25E9%2581%2593%25E8%25B7%25AF%25E7%25B8%2581%25E3%2581%258B%25E3%2582%2589%25E9%2581%2593%25E5%25B9%2585%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A3%25E3%2581%259F%25E9%2581%2593%25E8%25B7%25AF%25E4%25B8%25AD%25E5%25BF%2583%25E7%25B7%259A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tRm92VGVhLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZTRiZTU5NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mayuco/articles/2565ebb14e1752",
          "author": "mayuco",
          "description": "概要\nmatplotlibのboxplotで箱ひげ図を出した際に、具体的な四分位数や最小値、最大値の値がわからず困っていました。\n今回は、boxplotで出した画像内に具体的な数値を表示させるコードを書いたので記事にしたいと思います。\n\n 実行環境\npython 3.9.0\nmatplotlib 3.5.3\nnumpy 1.23.2\n\n やったこと\n\n numpyで四分位数を計算\n今回は、numpyで標準正規分布に従うランダムなリストを使って、目標の箱ひげ図を作ります。\n四分位数はnp.percentile()で簡単に計算できます。\nimport numpy as np\n\n# ランダ...",
          "link": "https://zenn.dev/mayuco/articles/2565ebb14e1752",
          "publishedOn": "2022-08-25T13:08:38.000Z",
          "wordCount": 499,
          "title": "matplotlibのboxplotで箱ひげ図の横に数値を表記する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_Zl8PVuv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mayuco%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:matplotlib%25E3%2581%25AEboxplot%25E3%2581%25A7%25E7%25AE%25B1%25E3%2581%25B2%25E3%2581%2592%25E5%259B%25B3%25E3%2581%25AE%25E6%25A8%25AA%25E3%2581%25AB%25E6%2595%25B0%25E5%2580%25A4%25E3%2582%2592%25E8%25A1%25A8%25E8%25A8%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS02RGxXR0R2VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MGMyOGQ1NWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_Zl8PVuv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mayuco%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:matplotlib%25E3%2581%25AEboxplot%25E3%2581%25A7%25E7%25AE%25B1%25E3%2581%25B2%25E3%2581%2592%25E5%259B%25B3%25E3%2581%25AE%25E6%25A8%25AA%25E3%2581%25AB%25E6%2595%25B0%25E5%2580%25A4%25E3%2582%2592%25E8%25A1%25A8%25E8%25A8%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS02RGxXR0R2VS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MGMyOGQ1NWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/u_tan/articles/dca8c4539b4e13",
          "author": "うーたん",
          "description": "PythonでCLIツールを作成しました。\nLT会でも発表しました。\n▼発表したLT会\nhttps://yumenosora.connpass.com/event/255075/\n▼スライド\n\n▼ソースコード\nhttps://github.com/OHMORIYUSUKE/grech\n\n 概要\nこのツールを実行させることで、YAMLで定義されたテストを実行させることができます。\nYAMLファイルにはshellが記載されており、shellの実行結果が正規表現にマッチするかどうかで正誤判定を行います。\n▼テストを実行した様子\n\n\n\n 工夫した点\n\n YAMLファイル\n# このチェック項目の名...",
          "link": "https://zenn.dev/u_tan/articles/dca8c4539b4e13",
          "publishedOn": "2022-08-24T13:09:06.000Z",
          "wordCount": 1003,
          "title": "PythonでCLIツールを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c3dItPhR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2586%25E3%2583%25BC%25E3%2581%259F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7CLI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1uMDBpZDJiQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1NzQ2Zjc4MjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c3dItPhR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2586%25E3%2583%25BC%25E3%2581%259F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7CLI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1uMDBpZDJiQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1NzQ2Zjc4MjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/7af434269ffa1b",
          "author": "laiso",
          "description": "Macで画像を生成したいだけだったらGoogle Colab で はじめる Stable Diffusion v1.4｜npaka｜noteのColabで実行していることをローカルに持ってきて、CUDAのかわりにCPU使ってやればできると思う。\n\nmain.py\nfrom diffusers import StableDiffusionPipeline\n\npipe = StableDiffusionPipeline.from_pretrained(\"CompVis/stable-diffusion-v1-4\", use_auth_token=YOUR_TOKEN)\npipe.to(\"cp...",
          "link": "https://zenn.dev/laiso/articles/7af434269ffa1b",
          "publishedOn": "2022-08-24T12:06:12.000Z",
          "wordCount": 742,
          "title": "CompVis/stable-diffusionの環境をApple Siliconで構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mEJZDouf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:laiso%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:CompVis%252Fstable-diffusion%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Apple%2520Silicon%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ya0VzOW5xSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mEJZDouf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:laiso%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:CompVis%252Fstable-diffusion%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Apple%2520Silicon%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ya0VzOW5xSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/uekou/articles/522e58e98014a2",
          "author": "uekou",
          "description": "普段はtensorflow 2.X系を使っているのですが、どうしてもtensorflow 1.X系を使わないといけない状況になり、Docker Desktop(WSL2バックエンド)で環境構築したのでその手順を記載します。\n\n ①WindowsにGPUドライバをインストール\nまず、Windowsにドライバ(CUDA)のインストールを行います。\n既にCUDAをWindowsにインストール済みの方はこの手順を飛ばして頂いて構いません。\nhttps://www.nvidia.com/Download/index.aspx?lang=en-us\nちなみに、NVIDIAの公式のドキュメントに記載が...",
          "link": "https://zenn.dev/uekou/articles/522e58e98014a2",
          "publishedOn": "2022-08-24T10:00:52.000Z",
          "wordCount": 787,
          "title": "WSL2とDocker Desktopでtensorflow-gpu 1.X系の環境構築をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7ebJ0U-U--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uekou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:WSL2%25E3%2581%25A8Docker%2520Desktop%25E3%2581%25A7tensorflow-gpu%25201.X%25E7%25B3%25BB%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FOEhZZElrdS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjhlZGJkNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7ebJ0U-U--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uekou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:WSL2%25E3%2581%25A8Docker%2520Desktop%25E3%2581%25A7tensorflow-gpu%25201.X%25E7%25B3%25BB%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FOEhZZElrdS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjhlZGJkNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hpp/articles/6307447e5a037d",
          "author": "hpp",
          "description": "まとめ\npyproject.tomlの[tool.poetry]のpackagesに以下のようにモジュールを追加しましょう。\n\npyproject.toml\npackages = [\n    { include = \"hoge\" },\n    { include = \"fuga\" },\n]\n\n\ngist\nGitHub\n\n\n 背景から詳しく\nPythonのモジュールシステムは他の言語と結構な違いがあり、どのファイルからどのモジュールをimportできるのかで頭を悩ませることが多々あります。\n例えば、次のようなディレクトリ階層を持つプロジェクトについて考えてみましょう。\n.\n├── py...",
          "link": "https://zenn.dev/hpp/articles/6307447e5a037d",
          "publishedOn": "2022-08-24T09:27:30.000Z",
          "wordCount": 631,
          "title": "Poetryでsys.path.appendを回避する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZfcyV3UF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hpp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Poetry%25E3%2581%25A7sys.path.append%25E3%2582%2592%25E5%259B%259E%25E9%2581%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dFelg5bGVLNzNDeDJ1eGVKTmdpOERyOFJmWXM3bS1TMzZuSnhmPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZfcyV3UF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hpp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Poetry%25E3%2581%25A7sys.path.append%25E3%2582%2592%25E5%259B%259E%25E9%2581%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dFelg5bGVLNzNDeDJ1eGVKTmdpOERyOFJmWXM3bS1TMzZuSnhmPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/b97e3ac0c0b7da",
          "author": "osn_Lofi",
          "description": "はじめに\nわたくし、Python歴1年の初心者ですが、このたび、苦労に苦労を重ねて、自然言語処理タスクの文章要約を実装できました。\n自然言語処理に興味のあるPython初心者のお役に立てればと、記事に残したいと思います。\n \n実装にあたっては、ネットの記事も手あたり次第調べましたが、最終的には、以下の本が大変参考になりました。\nただし、バージョンの変更により、この本の通りに実装しても、2022年8月時点ではエラーになる箇所があります。出版社経由で著者の方にお聞きして一部コードを修正したほか、自分なりに工夫をして実装しました。\nhttps://www.borndigital.co.jp...",
          "link": "https://zenn.dev/robes/articles/b97e3ac0c0b7da",
          "publishedOn": "2022-08-24T08:51:11.000Z",
          "wordCount": 1886,
          "title": "【自然言語処理】Python初心者でも文章要約タスクが実装できた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dvf1LIPb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E6%2596%2587%25E7%25AB%25A0%25E8%25A6%2581%25E7%25B4%2584%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2581%258C%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dvf1LIPb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E6%2596%2587%25E7%25AB%25A0%25E8%25A6%2581%25E7%25B4%2584%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2581%258C%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryoma310/articles/63bc3d20a8746c",
          "author": "ryoma310",
          "description": "Stable Diffusionがオープンソースで公開されたので、色々できそうだと思って試してみました。\nとはいえ、手元にNvidiaのGPUなんて持っておらず、最近だとpytorchでApple Silicon搭載のGPUが使えるというのも耳にしていたのでそれでうまいことできないかと考えながらやっていきました。\nまた、個人的にpipenvが好きなのでcondaの代わりにこれを使ってます。\nとりあえず無事コードが動くようになるまで。\n\n 1. 環境\n\nM2のMacBook Air\n\ncpu: 8コア\nmemory: 16GB\nGPU: 10コア\n\n\npipenv\n\n\n 2. 環境構築の前...",
          "link": "https://zenn.dev/ryoma310/articles/63bc3d20a8746c",
          "publishedOn": "2022-08-24T07:00:31.000Z",
          "wordCount": 2486,
          "title": "Stable Diffusion を M2 Macのpipenvで動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1RvxiVT7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryoma310%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffusion%2520%25E3%2582%2592%2520M2%2520Mac%25E3%2581%25AEpipenv%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1LQVlNTTlldC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkOTBlMWY2YjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1RvxiVT7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryoma310%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffusion%2520%25E3%2582%2592%2520M2%2520Mac%25E3%2581%25AEpipenv%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1LQVlNTTlldC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkOTBlMWY2YjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hellohazime/articles/543fcaf862008b",
          "author": "hellohazime",
          "description": "流行りのstable diffusionですが、M1macで動かす手順が\nhttps://github.com/CompVis/stable-diffusion/issues/25#issuecomment-1224040740\nこれで8割くらいはあってるけど、ここに書いてある通りじゃ動かなかったので\n手順を忘れないようメモとして書いておきます。\nなお 22/8/24時点の話なんで、近いうちに治ってると思います。\n\n 環境\n\n\nMacbook Pro(M1 pro)\nMemory 16GB\nOS X Moterey(12.3.1)\n\n\n 必要資材のインストール\ngit-lfs conda...",
          "link": "https://zenn.dev/hellohazime/articles/543fcaf862008b",
          "publishedOn": "2022-08-24T03:43:56.000Z",
          "wordCount": 792,
          "title": "例のコードじゃMacbook(M1 pro) + stable diffusion の環境構築ができなかったので、修正点メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mF0cs8at--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hellohazime%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E4%25BE%258B%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2598%25E3%2582%2583Macbook%2528M1%2520pro%2529%2520%252B%2520stable%2520diffusion%2520%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E4%25BF%25AE%25E6%25AD%25A3%25E7%2582%25B9%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0zeHFldXZmdi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NzM0MDdiMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mF0cs8at--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hellohazime%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E4%25BE%258B%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2598%25E3%2582%2583Macbook%2528M1%2520pro%2529%2520%252B%2520stable%2520diffusion%2520%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E4%25BF%25AE%25E6%25AD%25A3%25E7%2582%25B9%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0zeHFldXZmdi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NzM0MDdiMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nelsia/articles/7918a01c407907",
          "author": "nelsia",
          "description": "概要\nDRFのAPIViewでページネーションを使うときに思ったより苦戦したでその時のメモ。\n動くコードは以下にコミットしてあります。（ファイル名が雑なのは気にしないでください）\nhttps://github.com/nelsia/drf_pagination_apiview_sample\n\n 注意事項\n以下のライブラリバージョンで動作確認しています。\nDjango==4.1\ndjangorestframework==3.13.1\n\n djangoプロジェクトの作成\nまずは、djangoのプロジェクト作成をします。\nここのやり方はそれぞれの環境に合わせて適宜作成してください。\n以下の...",
          "link": "https://zenn.dev/nelsia/articles/7918a01c407907",
          "publishedOn": "2022-08-23T07:46:43.000Z",
          "wordCount": 1343,
          "title": "DRF(django-rest-framework)のAPIViewでページネーションを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jfu77jS9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nelsia%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:DRF%2528django-rest-framework%2529%25E3%2581%25AEAPIView%25E3%2581%25A7%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jfu77jS9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nelsia%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:DRF%2528django-rest-framework%2529%25E3%2581%25AEAPIView%25E3%2581%25A7%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kazuma_soon/articles/f4be358fba4767",
          "author": "kazuma-soon",
          "description": "大昔に scikit-learn を触ったとき、データの分割が引数だけで完結しました。\nPyTorchにもあると持っていたけど、ないっぽいので分割するコードを書いてみました。\n※ディープラーニングやPyTorchの初学者です。間違い・勘違いが含まれているかもしれません。\n\n データ\nデータ数は89行, 13列のものです。\n# 0行目はid\n# 1行目がターゲット\n# 2行目〜は特徴量\narray([[0.000e+00, 3.000e+00, 1.236e+01, ..., 5.600e-01, 1.580e+00,\n        5.200e+02],\n       [1.000e+...",
          "link": "https://zenn.dev/kazuma_soon/articles/f4be358fba4767",
          "publishedOn": "2022-08-23T00:55:44.000Z",
          "wordCount": 750,
          "title": "【PyTorch】データをテスト用・学習用に分割する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oK-BfGgl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuma-soon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590PyTorch%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E7%2594%25A8%25E3%2583%25BB%25E5%25AD%25A6%25E7%25BF%2592%25E7%2594%25A8%25E3%2581%25AB%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UVHVJOVJHeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oK-BfGgl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuma-soon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590PyTorch%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E7%2594%25A8%25E3%2583%25BB%25E5%25AD%25A6%25E7%25BF%2592%25E7%2594%25A8%25E3%2581%25AB%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UVHVJOVJHeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/koyoarai_/articles/02f3ed864c6127bb2049",
          "author": "koyoarai_",
          "description": "話題のStableDiffusionがオープンソースで8/23に公開されたので、手元のマシンで動かすまで試したいと思います🖼\n(下記に記載していますが、自分の環境だとエラーが出てしまったのでイレギュラーな対応をしています🙏)\nhttps://twitter.com/EMostaque/status/1561777122082824192\nStableDiffusionがどんなものかは、深津さんの記事が参考になります。\nhttps://twitter.com/fladdict/status/1561406014540640256\n\n 1. 環境\nRazer Blade (RTX 2070)...",
          "link": "https://zenn.dev/koyoarai_/articles/02f3ed864c6127bb2049",
          "publishedOn": "2022-08-22T23:52:38.000Z",
          "wordCount": 655,
          "title": "話題のStable Diffusionがオープンソース化されたのでローカルで動かしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qwOa1qqq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koyoarai_%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEStable%2520Diffusion%25E3%2581%258C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E5%258C%2596%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2MDQ4c1RkODI4SUl1eWdkdnVPMENUNjVXQjcwVGNURmw4T2tLQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qwOa1qqq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koyoarai_%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEStable%2520Diffusion%25E3%2581%258C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E5%258C%2596%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2MDQ4c1RkODI4SUl1eWdkdnVPMENUNjVXQjcwVGNURmw4T2tLQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kzm4269/articles/9493d29fdc0eb1",
          "author": "kzm4269",
          "description": "元ネタ\nhttps://twitter.com/Sheeeeepla/status/1554028833942441984?s=20&t=CcCYp7Bzw2A24Dwj6V7vAw\n\n 回答\n112文字。\nexec(\"p=print;i=-1\\nwhile(i:=i*2|(__import__('random').random()<.5))&8190^3822:p(['ドド','スコ'][i&1])\\np('ラブ注入♡')\")\n\n 補足\n\nexecの中身\np = print\ni = -1\nwhile (i := i * 2 | (__import__(...",
          "link": "https://zenn.dev/kzm4269/articles/9493d29fdc0eb1",
          "publishedOn": "2022-08-22T23:03:02.000Z",
          "wordCount": 316,
          "title": "ドドスコPythonワンライナー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iyXEipZ8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kzm4269%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%2589%25E3%2583%2589%25E3%2582%25B9%25E3%2582%25B3Python%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pvN243WUk1NXVfYmZRTm94Qk5Rclk0VkxYdU5fWDd0N3Vrb3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iyXEipZ8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kzm4269%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%2589%25E3%2583%2589%25E3%2582%25B9%25E3%2582%25B3Python%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pvN243WUk1NXVfYmZRTm94Qk5Rclk0VkxYdU5fWDd0N3Vrb3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/catminusminus/articles/a417b8ee7cf1f6",
          "author": "Catminusminus",
          "description": "成果物\nひとまずこれが動くようになりました。\nNotInteger = Effect()\nFiveInteger = Effect()\n\n\ndef parse_int(s: str) -> Result[int, str]:\n    try:\n        return Ok(int(s))\n    except:\n        return Err(\"Could not parse int\")\n\n\ndef sum_lines(s: str):\n    lines = s.split()\n    sum = 0\n    for line in lines:\n        ...",
          "link": "https://zenn.dev/catminusminus/articles/a417b8ee7cf1f6",
          "publishedOn": "2022-08-22T17:40:08.000Z",
          "wordCount": 1692,
          "title": "Pythonでも(Oneshot) Algebraic Effectsがしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vHjGwYs8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Catminusminus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2582%2582%2528Oneshot%2529%2520Algebraic%2520Effects%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1pRXQxOVdORy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExNDI4ZDQ1MTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vHjGwYs8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Catminusminus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2582%2582%2528Oneshot%2529%2520Algebraic%2520Effects%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1pRXQxOVdORy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExNDI4ZDQ1MTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/utahka/articles/df9713f4ac990d",
          "author": "utahka",
          "description": "この記事では、Python におけるドキュメンテーション用のコメントを、どのように書くかといった内容を書いていきます。\nドキュメントの重要性をここで説明するまでもありませんが、誰かが使うコードを書くならドキュメントを充実させる必要があります。そして、この誰かには未来の自分も含まれています。\n\n docstring\nPython における docstring とは、関数やクラスの処理が開始する前に書いておくヒアドキュメントのことです。たとえば、NumPy の np.fft.fft 関数の docstring をみてみましょう。\ndef fft(a, n=None, axis=-1, no...",
          "link": "https://zenn.dev/utahka/articles/df9713f4ac990d",
          "publishedOn": "2022-08-22T15:13:18.000Z",
          "wordCount": 1274,
          "title": "Sphinx によるドキュメント生成と docstring のスタイル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MWdl7Xwu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:utahka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Sphinx%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E7%2594%259F%25E6%2588%2590%25E3%2581%25A8%2520docstring%2520%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y28yNHdQY190S0JrZ0JTX2pJLVNWQlZmNm0xWjlNZzgyYzFaWGRWem9rPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MWdl7Xwu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:utahka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Sphinx%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E7%2594%259F%25E6%2588%2590%25E3%2581%25A8%2520docstring%2520%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y28yNHdQY190S0JrZ0JTX2pJLVNWQlZmNm0xWjlNZzgyYzFaWGRWem9rPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kwashizzz/articles/solafune-vehicle-det-mmdet",
          "author": "わっしー",
          "description": "こんにちは！鷲崎(@kwashizzz)です。今回は、Solafuneという衛星データ解析コンテストプラットフォームのマルチ解像度画像の車両検出のコンペティションに挑戦してみました。本記事では、データのダウンロードから、結果の提出まで解説しています。物体検出にはMMDetectionを使用し、今回のコンペの評価指標であるOC-cost(Optimal Correction Cost)の導入方法も解説しています。\nOC-Costに関しては、日本語のこの記事がわかりやすかったです。\nなんと8月22日時点で1位(スコア:0.3090)です！提出しているのが一人なので、当たり前ですが...\nこの...",
          "link": "https://zenn.dev/kwashizzz/articles/solafune-vehicle-det-mmdet",
          "publishedOn": "2022-08-22T14:59:39.000Z",
          "wordCount": 10898,
          "title": "Solafuneのマルチ解像度画像の車両検出コンペ - MMDetectionでやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DF2Z7e3d--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Solafune%25E3%2581%25AE%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E8%25A7%25A3%25E5%2583%258F%25E5%25BA%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E8%25BB%258A%25E4%25B8%25A1%25E6%25A4%259C%25E5%2587%25BA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%2520-%2520MMDetection%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DF2Z7e3d--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258F%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Solafune%25E3%2581%25AE%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E8%25A7%25A3%25E5%2583%258F%25E5%25BA%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E8%25BB%258A%25E4%25B8%25A1%25E6%25A4%259C%25E5%2587%25BA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%2520-%2520MMDetection%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyWFhIRkgwQUNnZDB5R0w5SkRXMFE3MWZSdHZxdDZfNzB3UVNlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kiwamachan/articles/2229be3ae0131e",
          "author": "kiwamachan",
          "description": "AtCoder Beginner Contest 265 の復習記録です。難易度が青色レベル以下の、A問題からE問題までをやります。使用言語はPythonです。\n\n A問題\nhttps://atcoder.jp/contests/abc265/tasks/abc265_a\n\n 考え方\nN 個のりんごを買うとき、 3 で割った余りの端数分は 1 個ずつ購入するしか方法がありませんが、3 で割った商の分だけ、3 個セットで購入することができます。ただし 3 個セットで買うときは、セットを使わないで 1 個ずつ X×3 円で購入するのと、3 個セットの Y 円で購入するので、どちらが得か比較す...",
          "link": "https://zenn.dev/kiwamachan/articles/2229be3ae0131e",
          "publishedOn": "2022-08-22T13:50:30.000Z",
          "wordCount": 2349,
          "title": "[ABC265] AtCoder Beginner Contest 265（A-E 問題 Python）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jHZDnBno--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kiwamachan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255BABC265%255D%2520AtCoder%2520Beginner%2520Contest%2520265%25EF%25BC%2588A-E%2520%25E5%2595%258F%25E9%25A1%258C%2520Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03c1BISHJQRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3ZjZjYWE5ZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jHZDnBno--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kiwamachan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255BABC265%255D%2520AtCoder%2520Beginner%2520Contest%2520265%25EF%25BC%2588A-E%2520%25E5%2595%258F%25E9%25A1%258C%2520Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03c1BISHJQRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3ZjZjYWE5ZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/540c2975de99cc",
          "author": "たきろぐ",
          "description": "はじめに\n以前、Pythonの地図可視化ライブラリとしてよく利用されているFoliumと、ルート検索APIであるOSRM (Open Source Routing Machine)の連携について紹介しました。\nhttps://zenn.dev/takilog/articles/2be029ccd35972\nFoliumは大変よく使われているのですが、地図をHTMLとして出力することが多いため、画像にしたいなという気持ちになります。\n画像に出力する方法としては、内部で地図のオブジェクト m に対して、 m._to_png() を実行する方法があります（ 実装はこちらですね）。要するに、...",
          "link": "https://zenn.dev/takilog/articles/540c2975de99cc",
          "publishedOn": "2022-08-22T12:36:27.000Z",
          "wordCount": 947,
          "title": "Pyppeteerを使ってfoliumの地図を画像に保存する最小限の構成を試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--o6Ylw5El--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Pyppeteer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6folium%25E3%2581%25AE%25E5%259C%25B0%25E5%259B%25B3%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%25E6%259C%2580%25E5%25B0%258F%25E9%2599%2590%25E3%2581%25AE%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--o6Ylw5El--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Pyppeteer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6folium%25E3%2581%25AE%25E5%259C%25B0%25E5%259B%25B3%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%25E6%259C%2580%25E5%25B0%258F%25E9%2599%2590%25E3%2581%25AE%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tmori/articles/349eabcba98e49",
          "author": "tmori",
          "description": "https://atcoder.jp/contests/abc265\n\n A - Apple\n\n 解法1\nx円を3回払ってりんごを3個買う代金(=x*3) とY円払ってりんご3個買う代金 (=y) を比較して場合分けする。\n\nもし、x円を3回払ってりんごを3個買う代金の方が安い場合、y円払ってりんご3個を買う必要がないので、必要個数分をx円1個のりんごで買う。\nもし、y円払ってりんごを3個買う代金の方が安い場合、このりんご3個セットをできるだけ多く買い、残った必要個数をx円1個で買う (ex: 20個の場合, y円3個セットを6セット買い、残り2個をx円で買う)\n\nx, y, n = m...",
          "link": "https://zenn.dev/tmori/articles/349eabcba98e49",
          "publishedOn": "2022-08-22T11:17:00.000Z",
          "wordCount": 2216,
          "title": "【ABC265】AtCoder Beginner Contest 265 A-D メモ【python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ljRg8mIz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tmori%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590ABC265%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520265%2520A-D%2520%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2590python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IT2VrME9VRS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ljRg8mIz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tmori%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590ABC265%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520265%2520A-D%2520%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2590python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IT2VrME9VRS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimada_print/articles/48fec0758dd6b0",
          "author": "嶋田印刷@Web・UI/UXデザインとプログラミングと仮想通貨FXをする人",
          "description": "IT派遣などに行った直後に、まず最初に何をするか？というと大企業などの派遣先の顧客であるエンドユーザーのシステム環境を知る必要があります。多くのエンドユーザーは高性能を求めます。\nバージョンを知るというのは、インストールされているのか？を最初に知る定番な方法です。またバージョンが古いと、高性能なシステムは作れないなどの判断材料になります。\n\n 案件ガチャは調査不足で起きる\n案件ガチャとは求職者はプログラミングがしたいのに、顧客はシステム構築や営業仕事などを求める、昔に言われた雇用のミスマッチです。入社してからこれが分かると揉めます。\nエンドユーザーはITシステム初心者が多いのに対し、IT...",
          "link": "https://zenn.dev/shimada_print/articles/48fec0758dd6b0",
          "publishedOn": "2022-08-22T04:03:28.000Z",
          "wordCount": 234,
          "title": "【案件ガチャ対策】Linuxでバージョンを一覧するシェルスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4v9ne0a8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B6%258B%25E7%2594%25B0%25E5%258D%25B0%25E5%2588%25B7%2540Web%25E3%2583%25BBUI%252FUX%25E3%2583%2587...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%25A1%2588%25E4%25BB%25B6%25E3%2582%25AC%25E3%2583%2581%25E3%2583%25A3%25E5%25AF%25BE%25E7%25AD%2596%25E3%2580%2591Linux%25E3%2581%25A7%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2oxeGszSjZpdFNBMkFFaV9ReWZ0UXJaSDRkMlpfUXVDRXV5aExNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4v9ne0a8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B6%258B%25E7%2594%25B0%25E5%258D%25B0%25E5%2588%25B7%2540Web%25E3%2583%25BBUI%252FUX%25E3%2583%2587...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%25A1%2588%25E4%25BB%25B6%25E3%2582%25AC%25E3%2583%2581%25E3%2583%25A3%25E5%25AF%25BE%25E7%25AD%2596%25E3%2580%2591Linux%25E3%2581%25A7%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2oxeGszSjZpdFNBMkFFaV9ReWZ0UXJaSDRkMlpfUXVDRXV5aExNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/a5chin/articles/let_ai_solve_sudoku",
          "author": "a5chin",
          "description": "はじめに\nPythonを使ってナンプレ・数独の画像から自動で解答を導き出す AI (人工知能) を作ったので記事にします．\n概要としては，PyTorchで作成した CNN を用いて画像認識をさせて文字を獲得したのちに深さ優先探索 (DFS) を行っています．\n下記にてソースコードを公開しているのでぜひ見ていってください！\nStar 等つけていただけるとやる気やモチベーションが上がります↓\n\n\n 成果物\n下記の様にナンプレ・数独の写真から一瞬で答えを導き出すことができます．\n\n\n 背景\nある週末に，家族で新聞のナンプレ・数独を解いていた時のことです．\nどれだけ時間をかけてもあまり空白が...",
          "link": "https://zenn.dev/a5chin/articles/let_ai_solve_sudoku",
          "publishedOn": "2022-08-21T16:30:09.000Z",
          "wordCount": 509,
          "title": "【Python】AI にナンプレ・数独を解かせよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0x28J7OW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:a5chin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591AI%2520%25E3%2581%25AB%25E3%2583%258A%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BB%25E6%2595%25B0%25E7%258B%25AC%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%258B%25E3%2581%259B%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dBNXBkb2hrNGRoWFUzQ0ZXYmNhNHRBZktpTy1xcE5vdUtDRmtBeWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0x28J7OW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:a5chin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591AI%2520%25E3%2581%25AB%25E3%2583%258A%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BB%25E6%2595%25B0%25E7%258B%25AC%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%258B%25E3%2581%259B%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dBNXBkb2hrNGRoWFUzQ0ZXYmNhNHRBZktpTy1xcE5vdUtDRmtBeWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}