{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum07",
          "author": "derwind",
          "description": "目的\ncuQuantum で遊んでみる (6) — 最大カット問題と QUBO と QAOA で cuQuantum を使った、QAOA 的なハミルトニアンの期待値計算を扱った。この計算は素直で分かりやすいのだが、一方で非効率なところもあるように思う。それは何度も CircuitToEinsum を呼び出し、何度も contract を呼ぶことである。まずは contract の呼び出しを減らせないかを考察してみたい。\n\n 問題設定\n3 量子ビットの量子回路において、ハミルトニアン H = Z_0 \\otimes Z_1 + Z_1 \\otimes Z_2 の期待値を計算するものとす...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum07",
          "publishedOn": "2023-09-02T17:17:24.000Z",
          "wordCount": 2733,
          "title": "cuQuantum で遊んでみる (7) — 期待値計算再考",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dCtw7Jkp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25287%2529%2520%25E2%2580%2594%2520%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25E5%2586%258D%25E8%2580%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dCtw7Jkp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25287%2529%2520%25E2%2580%2594%2520%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25E5%2586%258D%25E8%2580%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syu_tan/articles/2c43758b8c349d",
          "author": "emmyeil",
          "description": "ポリゴンの扱いをしている中で以下のようなエラーが発生します。\nGEOSException: TopologyException: \nInput geom 0 is invalid: \nSelf-intersection at 182.71451535122969 3137.9381128435944\n\nエラーの原因は Self-intersection の通りでポリゴン自体が 自己交差 してしまっていることが原因です。\nArcGIS の資料には 自己交差 の例が記載されています。\nhttps://pro.arcgis.com/ja/pro-app/latest/help/editing/...",
          "link": "https://zenn.dev/syu_tan/articles/2c43758b8c349d",
          "publishedOn": "2023-09-02T14:41:13.000Z",
          "wordCount": 4268,
          "title": "geom 0 is INVALID: Self-intersection 自己交差エラーとその回避",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y1gMhU2U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:geom%25200%2520is%2520INVALID%253A%2520Self-intersection%2520%25E8%2587%25AA%25E5%25B7%25B1%25E4%25BA%25A4%25E5%25B7%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%259B%259E%25E9%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emmyeil%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxODg1NmFkMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y1gMhU2U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:geom%25200%2520is%2520INVALID%253A%2520Self-intersection%2520%25E8%2587%25AA%25E5%25B7%25B1%25E4%25BA%25A4%25E5%25B7%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%259B%259E%25E9%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emmyeil%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxODg1NmFkMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syab_syab/articles/32863c7f3ac9a6",
          "author": "しゃぶしゃぶ",
          "description": "はじめに\n外国からの輸入品を日本円から現地の通貨に換算して、向こうではどのくらいの価値があるのかの目安を示すことができるWEBアプリ「YEN$CONVERSION」を完成させてしばらく経ちました。\n開発で疲れ切った頭もようやく回復してきたので、今回は反省点を書こうと思います。\n文章量が多くなりそうなので、2つに分けて投稿したいと思います。\n\nフロントエンド編\nバックエンド編 ← 今ここ\n\nこちらの記事 → React.js + Supabase + GCPで作った個人開発WEBアプリ「YEN$CONVERSION」もよろしくお願いします。\n\n 今回の開発を通しての感想\nとにかく長引い...",
          "link": "https://zenn.dev/syab_syab/articles/32863c7f3ac9a6",
          "publishedOn": "2023-09-02T12:13:00.000Z",
          "wordCount": 271,
          "title": "個人開発の反省点(地獄のバックエンド編)～個人開発WEBアプリYEN$CONVERSION」より～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hsq7pYyK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%258F%258D%25E7%259C%2581%25E7%2582%25B9%2528%25E5%259C%25B0%25E7%258D%2584%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%25B7%25A8%2529%25EF%25BD%259E%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BAWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AAYEN%2524CONVERSION%25E3%2580%258D%25E3%2582%2588%25E3%2582%258A%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVLdDBZeHh0TzVNRVdqV3lrQlQtM0l0UWZPZ1JlaE1EbERNR0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hsq7pYyK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%258F%258D%25E7%259C%2581%25E7%2582%25B9%2528%25E5%259C%25B0%25E7%258D%2584%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%25B7%25A8%2529%25EF%25BD%259E%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BAWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AAYEN%2524CONVERSION%25E3%2580%258D%25E3%2582%2588%25E3%2582%258A%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVLdDBZeHh0TzVNRVdqV3lrQlQtM0l0UWZPZ1JlaE1EbERNR0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuto_mo/articles/3a381c4a4086e7",
          "author": "pomu",
          "description": "今回はpythonのdequeについて解説します。\n\n deque(デック)とは\ndeque(デック)とは、\n・両端に対する要素の追加や削除が高速に行えるデータ構造\nです。\nデータ構造とはpythonで使用されるデータの型のことで、例えばlistやdictもデータ構造の一種です。\n\n 特徴\ndequeの特徴は\n・キュー処理やスタック処理を高速に行う事ができること\nです。\n特に大量のデータを扱う際にはパフォーマンスの違いが顕著になることがあります。\n※キュー処理とスタック処理\n簡単に言うと[1,2,3,4,5]などのデータの先頭や末尾にデータを追加したり、データを消したりすること\n要約：l...",
          "link": "https://zenn.dev/yuto_mo/articles/3a381c4a4086e7",
          "publishedOn": "2023-09-02T09:58:59.000Z",
          "wordCount": 549,
          "title": "dequeの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--K7h-VATr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:deque%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--K7h-VATr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:deque%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/d4b78ea53b02e2",
          "author": "yKesamaru",
          "description": "はじめに\n深層学習におけるモデル学習において、データセットのクレンジングは重要な作業です。\n顔認証システムにおいてのデータセットのクレンジングとは、「人物Aの顔画像ファイルが、間違いなく人物Aのフォルダーに存在しているか」と定義できます。\nこのクレンジング作業は、ある程度自動化していますが、最終的には目視で確認する必要があります。\nなかには知っている人物もありますが、大部分は知らない人物です。\nスクレイピング対象の人物名がマイナーな場合（仮に人物Aとします）、同じ名字の有名人（人物B）がヒットしてしまうこともあります。\n有名人と言っても私は知らないので、顔画像枚数の多い人物Bを、人...",
          "link": "https://zenn.dev/ykesamaru/articles/d4b78ea53b02e2",
          "publishedOn": "2023-09-02T04:01:20.000Z",
          "wordCount": 1279,
          "title": "【Python】データセットの間違い探し",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wrvM8eHf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wrvM8eHf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/inuo/articles/35cc9a14697363",
          "author": "いぬお",
          "description": "2020年ごろに作成したDiscordのBotを色々あって2023年の今実行しようとしたら下記エラーが\n\nTypeError: init() missing 1 required keyword-only argument: 'intents'\nなんか書き方が変わったらしい\n\n\n 従来の記載\nclient = discord.Client()\n\n 新しい記載\nclient = d.scord.Client(intents=discord.Intents.all())\nまあエラー分そのままの意味に書き換えただけだけど\n\n なんか違うエラーが出た\n\ndiscord.errors.Privil...",
          "link": "https://zenn.dev/inuo/articles/35cc9a14697363",
          "publishedOn": "2023-09-02T03:42:16.000Z",
          "wordCount": 207,
          "title": "DiscordBotの仕様変更で受けた影響(2020->2023)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--scb3B4XS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DiscordBot%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E3%2581%259F%25E5%25BD%25B1%25E9%259F%25BF%25282020-%253E2023%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%25AC%25E3%2581%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlY2I2YmNjN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--scb3B4XS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DiscordBot%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E3%2581%259F%25E5%25BD%25B1%25E9%259F%25BF%25282020-%253E2023%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%25AC%25E3%2581%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlY2I2YmNjN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/karaage0703/articles/05b647078a2d8a",
          "author": "karaage0703",
          "description": "ChatGPTにゲーム開発を委託\nこれが面白そうだったので試してみました。\nhttps://nowokay.hatenablog.com/entry/2023/09/01/132459\nDockerとか使おうかなと思いましたが、GitHubを見た感じcondaだったので、MacとMiniForgeで動かすのが一番無難そうと直感したので、そうしました。\nというわけでMacBook Air + MiniForgeです。以下参照にセットアップしましょう。\nhttps://zenn.dev/karaage0703/articles/f3254b14898b4d\n開発中のデバッグで、GUI使...",
          "link": "https://zenn.dev/karaage0703/articles/05b647078a2d8a",
          "publishedOn": "2023-09-02T02:35:54.000Z",
          "wordCount": 308,
          "title": "ChatGPTの仮想会社「ChatDev」にゲームを開発してもらう方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZcMdU97z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E4%25BC%259A%25E7%25A4%25BE%25E3%2580%258CChatDev%25E3%2580%258D%25E3%2581%25AB%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karaage0703%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZcMdU97z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E4%25BC%259A%25E7%25A4%25BE%25E3%2580%258CChatDev%25E3%2580%258D%25E3%2581%25AB%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karaage0703%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/porphyrio/articles/c43ab6b9879af1",
          "author": "porphyrio",
          "description": "はじめに\n東工大の機械系の院試の問題をpythonを使って解いてみます。今回は令和1年度 流体力学 問題1を解いていきます。過去問は以下のページにあります。\nhttps://www.titech.ac.jp/admissions/prospective-students/admissions/past-exam-papers\n\n 問題\n\n\n (1)\nW(z)にz=re^{i\\theta}を代入し、展開した式の実部が速度ポテンシャル、虚部が流れ関数です。\nfrom sympy import symbols, I, ln, cos, sin, re, im, arg, Abs\n\n# 変数...",
          "link": "https://zenn.dev/porphyrio/articles/c43ab6b9879af1",
          "publishedOn": "2023-09-02T01:41:39.000Z",
          "wordCount": 2659,
          "title": "東工大機械系院試をpythonで解いてみた[流体力学編]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cy0BZQ5g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%25B5%2581%25E4%25BD%2593%25E5%258A%259B%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cy0BZQ5g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%25B5%2581%25E4%25BD%2593%25E5%258A%259B%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/usma11dia0/articles/solve-alds-1-8-c",
          "author": "usma11dia0",
          "description": "本記事ではAizu Online Judgeより、ALDS1_8_Cの考え方と実際の解答をpythonで解説します。問題のリンク先は下記となります。\nhttps://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ALDS1_8_C&lang=ja\n\n 方針\n二分探索木の実装に関する問題です。まず二分探索木がどのような条件を満たす木であるかを確認します。\nその後、条件を満たすよう実装していきますが、実装には関数で行う方法とクラスで行う方法の2通りが考えられます。\n今回はクラスでの実装を試みたいと思います。\n\n 二分探索木の特徴\n...",
          "link": "https://zenn.dev/usma11dia0/articles/solve-alds-1-8-c",
          "publishedOn": "2023-09-01T15:10:13.000Z",
          "wordCount": 3087,
          "title": "【AOJ解説(python)】ALDS1_8_C 二分探索木の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2Sp5zkQS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AOJ%25E8%25A7%25A3%25E8%25AA%25AC%2528python%2529%25E3%2580%2591ALDS1_8_C%2520%25E4%25BA%258C%25E5%2588%2586%25E6%258E%25A2%25E7%25B4%25A2%25E6%259C%25A8%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:usma11dia0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MTU3NmFmM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2Sp5zkQS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AOJ%25E8%25A7%25A3%25E8%25AA%25AC%2528python%2529%25E3%2580%2591ALDS1_8_C%2520%25E4%25BA%258C%25E5%2588%2586%25E6%258E%25A2%25E7%25B4%25A2%25E6%259C%25A8%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:usma11dia0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MTU3NmFmM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kentoo1/articles/d5aef1c67901a0",
          "author": "ケントゥ",
          "description": "概要\n前回はAnimeデータセットをRecBole用のデータに変換しました。変換後のデータの先頭部分を少し見てみましょう。\n\n anime.item\n\n\n\n\nitem_id:token\nname:token_seq\ngenre:token_seq\ntype:token\nepisodes:float\navg_rating:float\nmembers:float\n\n\n\n\n32281\nKimi no Na wa.\nDrama, Romance, School, Supernatural\nMovie\n1\n9.37\n200630\n\n\n5114\nFullmetal Alchemist: Brot...",
          "link": "https://zenn.dev/kentoo1/articles/d5aef1c67901a0",
          "publishedOn": "2023-09-01T13:32:58.000Z",
          "wordCount": 350,
          "title": "RecBoleを使ってみよう3　Atomicファイルについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FPXVANX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25863%25E3%2580%2580Atomic%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FPXVANX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25863%25E3%2580%2580Atomic%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/blueman/articles/4aef850be5f439",
          "author": "ブルーマン",
          "description": "この記事はQiitaの記事の転載です!!\nQiitaの記事はこちら!!\nhttps://qiita.com/blueman/items/27be76fd66f238f2e2e1\n\n\n 目次\nはじめに\n実行環境\n画像の画素値へのアクセス方法\n補色の計算方法\n画像上に文字を出力する方法\n複数の画像を横並びに表示する方法\nソースコード\n結果\nまとめ\n\n はじめに\n今回は、前回のTwitter(X)のアンケートでトップだった動画像処理についての記事です。\nそのジャンルの中から、オリジナル画像・画像の画素値ごとの補色を用いて変換した画像・ネガポジ反転した画像を並べて表示させ、ネガポジ反転と補色を用...",
          "link": "https://zenn.dev/blueman/articles/4aef850be5f439",
          "publishedOn": "2023-09-01T10:47:31.000Z",
          "wordCount": 1652,
          "title": "OpenCVを用いた画像の画素ごとの補色を用いた色変換【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y7L14eoA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenCV%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E7%2594%25BB%25E7%25B4%25A0%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A3%259C%25E8%2589%25B2%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%2589%25B2%25E5%25A4%2589%25E6%258F%259B%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y7L14eoA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenCV%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E7%2594%25BB%25E7%25B4%25A0%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A3%259C%25E8%2589%25B2%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%2589%25B2%25E5%25A4%2589%25E6%258F%259B%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/230901-vscode-ipynb",
          "author": "knao124",
          "description": "保存時+Cell実行時にblackでformatする\n{\n    \"[python]\": {\n        \"editor.defaultFormatter\": \"ms-python.black-formatter\"\n    },\n    \"notebook.formatOnSave.enabled\": true,\n    \"notebook.formatOnCellExecution\": true\n}\n\n 参考\n\n\nVisual Studio Code March 2023\n\n保存時\n\n\n\nVisual Studio Code May 2023\n\nCell実行時\n\n\n\nvisua...",
          "link": "https://zenn.dev/knao124/articles/230901-vscode-ipynb",
          "publishedOn": "2023-09-01T05:50:09.000Z",
          "wordCount": 156,
          "title": "VSCode 保存時+Cell実行時にnotebookをblackでformatする設定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S2nhEKk_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%25E4%25BF%259D%25E5%25AD%2598%25E6%2599%2582%252BCell%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25ABnotebook%25E3%2582%2592black%25E3%2581%25A7format%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S2nhEKk_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%25E4%25BF%259D%25E5%25AD%2598%25E6%2599%2582%252BCell%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25ABnotebook%25E3%2582%2592black%25E3%2581%25A7format%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ce2d0f2fe9dc6f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-297 B - chess960\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    r = False\n    if s.find('B') % 2 != s.rfind('B') % 2 and s.find('R') < s.find('K') < s.rfind('R'):\n        r = True\n\n    print('Yes' if r else 'No')\n\n\nif __name__ == \"__main__\"...",
          "link": "https://zenn.dev/hyperdb/articles/ce2d0f2fe9dc6f",
          "publishedOn": "2023-09-01T04:32:22.000Z",
          "wordCount": 315,
          "title": "［AtCoder］ABC-297｜B - chess960",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--D0g26qbs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-297%25EF%25BD%259CB%2520-%2520chess960%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--D0g26qbs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-297%25EF%25BD%259CB%2520-%2520chess960%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2d8ca84bdb66f7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-297 A - Double Click\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, d = getIntMap()\n    t = getIntList()\n\n    c = [i for i in range(1, n) if t[i] - t[i - 1] <= d]\n\n    print(t[min(...",
          "link": "https://zenn.dev/hyperdb/articles/2d8ca84bdb66f7",
          "publishedOn": "2023-09-01T04:32:22.000Z",
          "wordCount": 389,
          "title": "［AtCoder］ABC-297｜A - Double Click",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Kf_RCzH_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-297%25EF%25BD%259CA%2520-%2520Double%2520Click%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Kf_RCzH_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-297%25EF%25BD%259CA%2520-%2520Double%2520Click%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum06",
          "author": "derwind",
          "description": "目的\ncuQuantum で遊んでみる (5) — VQE その 2 で VQE を無理やり実行してみたが、今回は 3 種類の方法で最大カット問題を解いてみたい。\n\n 最大カット問題\nMaximum cut にあるように、頂点と辺がつながったグラフにおいて、頂点を黒と白に塗分ける類のものである。辺で繋がった頂点同士が異なる色で塗られている場合に、その辺は “カット可能” という解釈をする。カットできる箇所を最大化するという組み合わせ最適化問題である。\n明らかに 最大カット問題 のほうが明らかに優しい雰囲気の解説である。\n\n 今回試す手法\n\n\nTYTAN SDK: 疑似量子アニーリング...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum06",
          "publishedOn": "2023-08-31T17:59:41.000Z",
          "wordCount": 3293,
          "title": "cuQuantum で遊んでみる (6) — 最大カット問題と QUBO と QAOA",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cmLCt9va--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25286%2529%2520%25E2%2580%2594%2520%25E6%259C%2580%25E5%25A4%25A7%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%2520QUBO%2520%25E3%2581%25A8%2520QAOA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cmLCt9va--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25286%2529%2520%25E2%2580%2594%2520%25E6%259C%2580%25E5%25A4%25A7%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%2520QUBO%2520%25E3%2581%25A8%2520QAOA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/x_point_1/articles/65a0a20bea145f",
          "author": "うみぶどう",
          "description": "はじめに\nどうも、うみぶどうです。エックスポイントワンで働き始めてまだ日が浅いエンジニアです。\nPythonのジェネレータの動きについて、理解が足りず困った経験から記事を執筆しました。\n表題通りです。どうなるんでしょう。\n\n そもそもジェネレータってなに\nPythonにおいて、繰り返し値を返却することができる関数のことです。\nものすごくざっくり説明すると、関数で値の返却を記述する局面で、\nreturn value\nとするところをreturnの代わりに、yieldを以下のように使用します。\nfor row in rows:\n    yield row\n呼び出される度に一つずつ、値を返却...",
          "link": "https://zenn.dev/x_point_1/articles/65a0a20bea145f",
          "publishedOn": "2023-08-31T14:50:07.000Z",
          "wordCount": 188,
          "title": "ジェネレータでyieldの後に処理が書いてあったらどうなる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NXqUB5LJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7yield%25E3%2581%25AE%25E5%25BE%258C%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25B6%25E3%2581%25A9%25E3%2581%2586%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ODA3MWRhN2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NXqUB5LJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7yield%25E3%2581%25AE%25E5%25BE%258C%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25B6%25E3%2581%25A9%25E3%2581%2586%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ODA3MWRhN2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/collabostyle/articles/d6e32c3d96b2ec",
          "author": "TETRER",
          "description": "はじめに\n今回はExcelで作った文書のレイアウトを、PythonでHTMLに変換するツールを作成してみました。\nサンプルで使った文書は、いわゆるExcel方眼紙の稟議書です。\n\n 結果\n実行結果から書いてしまいますが、Pythonのライブラリ「openpyxl」を使うことで、\nExcelのセルの情報を読み取り、それっぽくHTML＋CSSに変換できることができました！\nですが、再現性を上げるには装飾の反映や、マージセルの考慮などが大変なことも分かりました。\n処理の流れを解説しますが、罫線の種類、背景色、文字色の指定などいろいろ未完成です💦\n\n\n 処理の流れ\n\n 【１】メイン処理\nエン...",
          "link": "https://zenn.dev/collabostyle/articles/d6e32c3d96b2ec",
          "publishedOn": "2023-08-31T14:48:01.000Z",
          "wordCount": 2304,
          "title": "Python（openpyxl）でExcelをHTMLに変換する試み",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5Kr5l7zr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BC%2588openpyxl%25EF%25BC%2589%25E3%2581%25A7Excel%25E3%2582%2592HTML%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:TETRER%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyN2RmN2E0ZWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5Kr5l7zr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BC%2588openpyxl%25EF%25BC%2589%25E3%2581%25A7Excel%25E3%2582%2592HTML%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:TETRER%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyN2RmN2E0ZWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/daidai_daitai/articles/92e8fbbfa79e42",
          "author": "橙。",
          "description": "何をするのか\n日経先物を対象にデータの前処理や分析を行います。一度に全部を書くのが大変なので、シリーズ化しちょこちょこ書いて行こうと思っていますが、勉強中の素人なので間違いは勘弁してください。\n\n その1の目的\n日経先物miniの1分足データを使用し、session名を割り当て、sessionごとにuniqueなIDを割り当てる方法を解説します。\n\n 準備\n\n 使用するデータ\nDataFrame\n \nshape: (2_874_147, 6)\n┌─────────────────────┬───────┬───────┬───────┬───────┬────────┐\n│ date...",
          "link": "https://zenn.dev/daidai_daitai/articles/92e8fbbfa79e42",
          "publishedOn": "2023-08-31T13:55:07.000Z",
          "wordCount": 3101,
          "title": "日経先物分析その1 ... Sessionの割り当て",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LnS4Ac7z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE1%2520...%2520Session%25E3%2581%25AE%25E5%2589%25B2%25E3%2582%258A%25E5%25BD%2593%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LnS4Ac7z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE1%2520...%2520Session%25E3%2581%25AE%25E5%2589%25B2%25E3%2582%258A%25E5%25BD%2593%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seven_901/articles/05bd001edd4aaa",
          "author": "seven_901",
          "description": "概要\n3年ぶりにPythonの開発環境を整えるためにzennなどを調査してみると、最近ではRyeと呼ばれるパッケージ管理ツールが注目されているそうです。\nhttps://rye-up.com/\n早速、こちらのインストール手順を進めてから、日本語のwikipediaを学習させるためのWord2Vecの開発環境を構築しました。\nその時の環境構築の手順と実際にRyeを利用してみた感想を記述したいと思います。\n\n リポジトリ\nhttps://github.com/hagiwa901/word2vec\n\n 環境\n\nMac\nDocker：20.10.0\ndocker-compose：1.27.4...",
          "link": "https://zenn.dev/seven_901/articles/05bd001edd4aaa",
          "publishedOn": "2023-08-31T12:23:05.000Z",
          "wordCount": 793,
          "title": "RyeでWord2Vecの開発環境を構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--p7W5BMjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rye%25E3%2581%25A7Word2Vec%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seven_901%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjZmMyNDM2NTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--p7W5BMjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rye%25E3%2581%25A7Word2Vec%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seven_901%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjZmMyNDM2NTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/terass_dev/articles/c38e38499e0635",
          "author": "hiroya",
          "description": "株式会社TERASS でエンジニアリングマネージャーを担当している hiroya です。\n前回、TERASS エンジニアメンバーのデスク環境座談会と題した記事を公開しましたが、今回はその記事ができるまでの過程をご紹介したいと思います。\nまた、「最新の音声認識モデルを利用することで文字起こし作業がどれだけ簡略化できるか？」といった点について、記事の後半でその手順や実際の精度について説明していきます。\n\n 全体の流れ\n\n 1. 記事のストーリーを決める\n記事全体の流れを想定しながら、どんな感じの内容を盛り込むか決めていきます。\n\n\n 2. スケジュールを確保し、座談会を開催\nTERASSは「...",
          "link": "https://zenn.dev/terass_dev/articles/c38e38499e0635",
          "publishedOn": "2023-08-31T10:48:34.000Z",
          "wordCount": 1226,
          "title": "座談会記事ができるまで 〜Whisper + pyannote.audio で自動書き起こし・話者分離を試してみた〜",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PmWleX1y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BA%25A7%25E8%25AB%2587%25E4%25BC%259A%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2520%25E3%2580%259CWhisper%2520%252B%2520pyannote.audio%2520%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2583%25BB%25E8%25A9%25B1%25E8%2580%2585%25E5%2588%2586%25E9%259B%25A2%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Terass%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:hiroya%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjJkODQzYTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3ZGI3MTE2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PmWleX1y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BA%25A7%25E8%25AB%2587%25E4%25BC%259A%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2520%25E3%2580%259CWhisper%2520%252B%2520pyannote.audio%2520%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2583%25BB%25E8%25A9%25B1%25E8%2580%2585%25E5%2588%2586%25E9%259B%25A2%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Terass%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:hiroya%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjJkODQzYTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3ZGI3MTE2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/mkpoli/articles/ff01135f91d7ee",
          "author": "mkpoli",
          "description": "導入\nアイヌ語は日本語と異なり、閉音節（子音で終わる音節）も存在するので、表記の際音素文字であるラテン文字なら、そのまま p, t, k, m, n, s, r などの子音文字を後ろの付ければ良いわけなので、アイヌ語ローマ字表記では、何も問題が生じない。しかし、元々開音節言語である日本語に特化したカタカナのような仮名文字で表記する際、鼻音 n は「ン」でなんとかなる（実はそれでもまずい事になっているけどここでは割愛する）が、p, t, k, m, n, s, r, h はどうしようもないので、特殊の捨て仮名（小書き仮名文字）を利用することになっている。\n具体的には以下のような特殊仮名...",
          "link": "https://zenn.dev/mkpoli/articles/ff01135f91d7ee",
          "publishedOn": "2023-08-31T08:08:25.000Z",
          "wordCount": 989,
          "title": "アイヌ語仮名「ㇷ゚」に対する正規表現の罠",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dP6qdFDq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%258C%25E8%25AA%259E%25E4%25BB%25AE%25E5%2590%258D%25E3%2580%258C%25E3%2587%25B7%25E3%2582%259A%25E3%2580%258D%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258B%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25AE%25E7%25BD%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mkpoli%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYmE0YjkxMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dP6qdFDq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%258C%25E8%25AA%259E%25E4%25BB%25AE%25E5%2590%258D%25E3%2580%258C%25E3%2587%25B7%25E3%2582%259A%25E3%2580%258D%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258B%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25AE%25E7%25BD%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mkpoli%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYmE0YjkxMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okun/articles/3ed213edd1048e",
          "author": "t_nobu",
          "description": "pandasのDataFrameで大容量データを扱っていると、すぐにメモリ超過してしまいます。\nメモリ超過すると、ついスペック側でメモリを上げたくなってしまいますが、やはり費用が嵩んでしまいます。\nしかし、pandasの実装を少し工夫するだけで、使用メモリを大幅に抑えられることが結構あります。\n私はこれまでメモリを節約するためにあらゆる方法を試してきましたので、今回はおすすめの手法をまとめてみました！\n皆さんのサーバー費用が少しでも抑えられると幸いです。\n\n 基本編\n\n カラムの型指定をする\nカラムについて、型の指定がないと、数値の場合には自動でint64またはfloat64が付与されて...",
          "link": "https://zenn.dev/okun/articles/3ed213edd1048e",
          "publishedOn": "2023-08-31T07:00:45.000Z",
          "wordCount": 391,
          "title": "[保存版] pandasのメモリ節約方法まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EPCe3wBJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E4%25BF%259D%25E5%25AD%2598%25E7%2589%2588%255D%2520pandas%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E7%25AF%2580%25E7%25B4%2584%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:O-KUN%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:t_nobu%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMWVmODg2OWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3MWUwNGEyYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EPCe3wBJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E4%25BF%259D%25E5%25AD%2598%25E7%2589%2588%255D%2520pandas%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E7%25AF%2580%25E7%25B4%2584%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:O-KUN%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:t_nobu%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMWVmODg2OWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3MWUwNGEyYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/maeda56/articles/da8ea39cd5a030",
          "author": "maeda56",
          "description": "conda install ipykernel\npython -m ipykernel install --user --name=環境名",
          "link": "https://zenn.dev/maeda56/articles/da8ea39cd5a030",
          "publishedOn": "2023-08-31T06:13:03.000Z",
          "wordCount": 68,
          "title": "conda環境をjupyter notebookで使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--to7ILWP4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:conda%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592jupyter%2520notebook%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--to7ILWP4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:conda%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592jupyter%2520notebook%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maeda56/articles/7d0a72c90491a5",
          "author": "maeda56",
          "description": "apt-get install g++\npip install git+https://github.com/facebookresearch/pytorch3d.git\n環境はUbuntu22.04.3LTSのanaconda環境。\npip　install pytorch3dやcondaではうまく行かなかった。gitからpipでとってくる方法だとうまく行きました。",
          "link": "https://zenn.dev/maeda56/articles/7d0a72c90491a5",
          "publishedOn": "2023-08-31T05:36:56.000Z",
          "wordCount": 65,
          "title": "Pytorch3dのインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GmCJdpp---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch3d%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GmCJdpp---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch3d%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maeda56/articles/07083a654e98e9",
          "author": "maeda56",
          "description": "anaconda環境でpip install notebookとすると以下のログが出ました。\n(省略)\nAttempting uninstall: pyyaml\n    Found existing installation: PyYAML 5.1.2\nERROR: Cannot uninstall 'PyYAML'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial ...",
          "link": "https://zenn.dev/maeda56/articles/07083a654e98e9",
          "publishedOn": "2023-08-31T05:36:23.000Z",
          "wordCount": 153,
          "title": "pip install notebookでPyYaml error",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ju_SvlwR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:pip%2520install%2520notebook%25E3%2581%25A7PyYaml%2520error%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ju_SvlwR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:pip%2520install%2520notebook%25E3%2581%25A7PyYaml%2520error%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/bdd8a22ba9d6f9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-296 A - Alternately\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = getString()\n\n    print('Yes' if s.find('MM') == -1 and s.find('FF') == -1 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/bdd8a22ba9d6f9",
          "publishedOn": "2023-08-31T05:09:25.000Z",
          "wordCount": 292,
          "title": "［AtCoder］ABC-296｜A - Alternately",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4oQxmYUS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-296%25EF%25BD%259CA%2520-%2520Alternately%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4oQxmYUS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-296%25EF%25BD%259CA%2520-%2520Alternately%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/95d1b7b3b2c836",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-296 B - Chessboard\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    s = getStringRow(8)\n    s.reverse()\n\n    for y in range(8):\n        x = s[y].find('*')\n        if x >= 0:\n            print('%s%d' % (chr(ord('a') + x), y + 1))\n\n\nif __name__...",
          "link": "https://zenn.dev/hyperdb/articles/95d1b7b3b2c836",
          "publishedOn": "2023-08-31T05:09:24.000Z",
          "wordCount": 325,
          "title": "［AtCoder］ABC-296｜B - Chessboard",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WoW_9YoO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-296%25EF%25BD%259CB%2520-%2520Chessboard%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WoW_9YoO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-296%25EF%25BD%259CB%2520-%2520Chessboard%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tmori/articles/5b29373cad0197",
          "author": "tmori",
          "description": "https://atcoder.jp/contests/abc317\n\n A - Potions\n以下の条件になるまで傷口を順番に選択する。\nP_n (傷薬nの回復量) + H (現在の体力) \\geq X (目標体力)\nN, H, X = map(int, input().split())\np_list = list(map(int, input().split()))\n\nfor i, p in enumerate(p_list):\n    if H + p >= X:\n        print(i + 1)\n        exit()\n\n B - MissingNo.\nナオ...",
          "link": "https://zenn.dev/tmori/articles/5b29373cad0197",
          "publishedOn": "2023-08-31T01:22:27.000Z",
          "wordCount": 911,
          "title": "【ABC317】AtCoder Beginner Contest 317 A-D 振り返り【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--e2nIGP7g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC317%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520317%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--e2nIGP7g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC317%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520317%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/d2c_mtech_blog/articles/1d4511c9345e7c",
          "author": "D2C m-tech",
          "description": "はじめに\nこんにちは、D2Cデータサイエンティストの小林です。\n本記事では、Pythonによるハッシュの扱い方とハッシュを用いることで使用するメモリの削減ができるのかを検証します。\nハッシュについては簡単な紹介のみとなりますので、ハッシュについて深く知りたい方は他の記事を参考していただければと思います。\n\n 開発環境\n検証において以下の環境を使用しました。\n\nAWS EC2 (インスタンスタイプ: r5.2xlarge)\nPython 3.10系（3.10.9）\npandas 1.5.1\nmemory_profiler 0.61.0\nhashlib 3.10系で提供されているモジュー...",
          "link": "https://zenn.dev/d2c_mtech_blog/articles/1d4511c9345e7c",
          "publishedOn": "2023-08-31T00:53:37.000Z",
          "wordCount": 757,
          "title": "Pythonにおけるハッシュの扱いとメモリの削減について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Afr35cM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25AE%25E5%2589%258A%25E6%25B8%259B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:D2C%2520m-tech%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:D2C%2520m-tech%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmZTIyZmYyMWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NDFkOTJhMTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Afr35cM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25AE%25E5%2589%258A%25E6%25B8%259B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:D2C%2520m-tech%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:D2C%2520m-tech%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmZTIyZmYyMWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NDFkOTJhMTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoooou/articles/6eac87b85984ea",
          "author": "リョウ",
          "description": "覚書なので、全くもって完ぺきではありません。なのでより良い方法がありましたら、コメントをお願いします。\n参考\nhttps://saturncloud.io/blog/how-to-convert-a-tensorflow-frozen-graph-to-savedmodel/\nhttps://stackoverflow.com/questions/44329185/convert-a-graph-proto-pb-pbtxt-to-a-savedmodel-for-use-in-tensorflow-serving-o/44329200#44329200\nimport tensorflo...",
          "link": "https://zenn.dev/ryoooou/articles/6eac87b85984ea",
          "publishedOn": "2023-08-30T22:04:45.000Z",
          "wordCount": 690,
          "title": "tensorflow v2でfrozen_inference_graph.pbをsaved_modelに変換",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nMTdxXW6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tensorflow%2520v2%25E3%2581%25A7frozen_inference_graph.pb%25E3%2582%2592saved_model%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%25A7%25E3%2582%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NjA1NTA3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nMTdxXW6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tensorflow%2520v2%25E3%2581%25A7frozen_inference_graph.pb%25E3%2582%2592saved_model%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%25A7%25E3%2582%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NjA1NTA3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoooou/articles/676d79492f62c9",
          "author": "リョウ",
          "description": "覚書なので、全くもって完ぺきではありません。なのでより良い方法がありましたら、コメントをお願いします。\n参考　https://github.com/tensorflow/models/blob/master/research/object_detection/colab_tutorials/inference_tf2_colab.ipynb\nimport os\nimport pathlib\n\n# Clone the tensorflow models repository if it doesn't already exist\nif \"models\" in pathlib.Path.cw...",
          "link": "https://zenn.dev/ryoooou/articles/676d79492f62c9",
          "publishedOn": "2023-08-30T21:48:17.000Z",
          "wordCount": 306,
          "title": "google colabでtensorflowのobject_detectionモジュールを使えるようになるまで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HHywTcVR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:google%2520colab%25E3%2581%25A7tensorflow%25E3%2581%25AEobject_detection%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%25A7%25E3%2582%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NjA1NTA3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HHywTcVR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:google%2520colab%25E3%2581%25A7tensorflow%25E3%2581%25AEobject_detection%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%25A7%25E3%2582%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NjA1NTA3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/honomaru/articles/23afaa348280fc",
          "author": "Honoka",
          "description": "毎日やると言いましたが、和訳も元の英語のブログも更新できていません、、というのも体調を大きく崩しており...継続が大事ということで投げ出さず細々と続けていけたらと思います。\nDay2はRay Core(分散コンピューティングを支える基礎となるAPIを提供している部分)概要に入る前の前提知識の整理がメインになります。\nアプリケーションアーキテクチャの本などで基本のきとして載ってる内容なのかなとか思います。\n\n Ray Core の前に...\n\n 1. Rayクラスターとは\nRayクラスターは、アプリケーションのプロセスを分散させたいノードのセットを指します（ベアメタルサーバー、仮想マシン、...",
          "link": "https://zenn.dev/honomaru/articles/23afaa348280fc",
          "publishedOn": "2023-08-30T15:08:43.000Z",
          "wordCount": 406,
          "title": "Day2：Ray Core の前に... ~ N日間Rayを学ぶ  / Python で分散コンピューティング~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--35a7xuba--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Day2%25EF%25BC%259ARay%2520Core%2520%25E3%2581%25AE%25E5%2589%258D%25E3%2581%25AB...%2520%7E%2520N%25E6%2597%25A5%25E9%2596%2593Ray%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2520%2520%252F%2520Python%2520%25E3%2581%25A7%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Honoka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZkhvUlFkcXEyaTRiRXVOQTU1Yk1OMTYxSTFfMlh4NzcyRFZXQ2dfUVJpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--35a7xuba--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Day2%25EF%25BC%259ARay%2520Core%2520%25E3%2581%25AE%25E5%2589%258D%25E3%2581%25AB...%2520%7E%2520N%25E6%2597%25A5%25E9%2596%2593Ray%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2520%2520%252F%2520Python%2520%25E3%2581%25A7%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Honoka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZkhvUlFkcXEyaTRiRXVOQTU1Yk1OMTYxSTFfMlh4NzcyRFZXQ2dfUVJpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rie_amasato/articles/00db1989798b9c",
          "author": "Amasato Rie(遍怜 悧叡)",
          "description": "前に書いた記事ではGitpodというクラウド上でVSCodeライクな環境を使えるサービスを使って、クラウド上にJupyterのターミナルを置いてお手軽iPadでJupyter環境を整えていました\nしかし、Jupyter Notebookが7系アップグレードされたことで問題が発生してしまった\niPadだとShft+Enterでのコードブロック実行後に次のコードブロックにカーソルが移動しない！\nこれ、いくつかのコードブロックを実行したいそき、右手小指でShiftキーを長押ししながら、薬指でEnter、Enter、Enter…って連続してコードブロックを実行できていたのができなくなっています。...",
          "link": "https://zenn.dev/rie_amasato/articles/00db1989798b9c",
          "publishedOn": "2023-08-30T08:12:50.000Z",
          "wordCount": 239,
          "title": "Gitpod上でのJupyter環境で、バージョンを7系から6系にしたお話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rQ9ItoiY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gitpod%25E4%25B8%258A%25E3%2581%25A7%25E3%2581%25AEJupyter%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2580%2581%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25927%25E7%25B3%25BB%25E3%2581%258B%25E3%2582%25896%25E7%25B3%25BB%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Amasato%2520Rie%2528%25E9%2581%258D%25E6%2580%259C%2520%25E6%2582%25A7%25E5%258F%25A1%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYzE4OTZjN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rQ9ItoiY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gitpod%25E4%25B8%258A%25E3%2581%25A7%25E3%2581%25AEJupyter%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2580%2581%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25927%25E7%25B3%25BB%25E3%2581%258B%25E3%2582%25896%25E7%25B3%25BB%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Amasato%2520Rie%2528%25E9%2581%258D%25E6%2580%259C%2520%25E6%2582%25A7%25E5%258F%25A1%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYzE4OTZjN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a3bbb772add1f8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-295 A - Probably English\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringList():\n    return list(input().split())\n\n\ndef main():\n    n = getInt()\n    w = getStringList()\n    d = ['and', 'not', 'that', 'the', 'you']\n\n    w.sort()\n\n    r = False\n    for x in set(w):\n     ...",
          "link": "https://zenn.dev/hyperdb/articles/a3bbb772add1f8",
          "publishedOn": "2023-08-30T07:31:35.000Z",
          "wordCount": 371,
          "title": "［AtCoder］ABC-295｜A - Probably English",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LwGmPoCU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-295%25EF%25BD%259CA%2520-%2520Probably%2520English%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LwGmPoCU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-295%25EF%25BD%259CA%2520-%2520Probably%2520English%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/664232fa21aa5b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-295 B - Bombs\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringListRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef explode(a, x, y, w, h):\n    p = int(a[y][x])\n\n    a[y][x] = '.'\n\n    for j in range(-p, p + 1):\n        for i in range(-p, p + 1...",
          "link": "https://zenn.dev/hyperdb/articles/664232fa21aa5b",
          "publishedOn": "2023-08-30T07:31:35.000Z",
          "wordCount": 683,
          "title": "［AtCoder］ABC-295｜B - Bombs",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ua6fC4XW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-295%25EF%25BD%259CB%2520-%2520Bombs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ua6fC4XW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-295%25EF%25BD%259CB%2520-%2520Bombs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sutamac/articles/630dc87f62e6b4",
          "author": "KNR109",
          "description": "はじめに\n今回はChatGPTを利用した開発におけるアシスタントのやり方とLangChainを活用した実装方法を具体的なアプリ開発を例に解説していきます。\nLangChainの実装方法について、Python未経験の自分でもサクッと実装できたので、初心者でも理解できるように解説をしていきます。\n\n この記事で学べること\n\nChatGPTを使って要件定義、設計、開発などをアシストする活用例が分かる\nアプリ開発においてLangChainの活用方法を学べる\n\n前半でビジネスサイド(いわゆる要件定義、設計)などの解説をし、後半で具体的な開発例を解説する構成になっています。\nLangChainに...",
          "link": "https://zenn.dev/sutamac/articles/630dc87f62e6b4",
          "publishedOn": "2023-08-30T07:00:54.000Z",
          "wordCount": 4597,
          "title": "ChatGPTとLangChainを活用したアプリ開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MH8oOitW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A8LangChain%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KNR109%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ODZiYTE3MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MH8oOitW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A8LangChain%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KNR109%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ODZiYTE3MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsuromurata/articles/b8bcaac383b167",
          "author": "しば🐕AI",
          "description": "huggingface autotrainとは\nhuggingface autotrainとは、データセットさえあれば誰でも簡単にLLMやStable diffusionを学習することができるprojectです。\nhttps://github.com/huggingface/autotrain-advanced\n今回はstable diffusion xlを対象にやってみようと思います。\n\n リンク\nColab\ngithub\n\n 準備\nGoogle Colabを開き、メニューから「ランタイム→ランタイムのタイプを変更」でランタイムを「GPU」に変更します。\n\n 環境構築\nインストール...",
          "link": "https://zenn.dev/tatsuromurata/articles/b8bcaac383b167",
          "publishedOn": "2023-08-30T03:39:59.000Z",
          "wordCount": 942,
          "title": "huggingface autotrainをgoogle colabで試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HQdzBYIZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:huggingface%2520autotrain%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HQdzBYIZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:huggingface%2520autotrain%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lot36z/articles/0453eb2a06ebe5",
          "author": "のっかー",
          "description": "PythonコードをVSCodeでptvsdを使ってリモートデバッグする方法のメモです。\nPythonのバージョンは以下のとおり。\npython --version\n出力結果:\nPython 3.10.8\n\n 必要ライブラリのインストール\n# 必要ライブラリのインストール\npython -m pip install ptvsd==4.3.2\n\n 実行スクリプトの作成\n実行スクリプト(=デバッグしたいスクリプト)を仮で以下のとおり作成。\n\n./sample.py\nimport sys\n\nif __name__ == '__main__':\n    print(\"Hello, \" + sys...",
          "link": "https://zenn.dev/lot36z/articles/0453eb2a06ebe5",
          "publishedOn": "2023-08-30T03:27:50.000Z",
          "wordCount": 473,
          "title": "PythonコードをVSCodeでptvsdを使ってリモートデバッグ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HAOtaLP5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592VSCode%25E3%2581%25A7ptvsd%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HAOtaLP5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592VSCode%25E3%2581%25A7ptvsd%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zuzuzu/articles/e3d4305c403707",
          "author": "zuki",
          "description": "エラー内容\nRun pytest\n  pytest\n  shell: /usr/bin/bash -e {0}\n  env:\n    pythonLocation: /opt/hostedtoolcache/Python/3.7.17/x64\n    PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.7.17/x64/lib/pkgconfig\n    Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.7.17/x64\n    Python2_ROOT_DIR: /opt/hostedtoolca...",
          "link": "https://zenn.dev/zuzuzu/articles/e3d4305c403707",
          "publishedOn": "2023-08-30T02:11:01.000Z",
          "wordCount": 194,
          "title": "[github actions]Error: Process completed with exit code 5.",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HXe4J72T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bgithub%2520actions%255DError%253A%2520Process%2520completed%2520with%2520exit%2520code%25205.%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYzkyNjY5ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HXe4J72T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bgithub%2520actions%255DError%253A%2520Process%2520completed%2520with%2520exit%2520code%25205.%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYzkyNjY5ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/porphyrio/articles/93ef80b71703d3",
          "author": "porphyrio",
          "description": "はじめに\n東工大の機械系の院試の問題をpythonを使って解いてみます。今回は令和3年度の数学の試験を解いていきます。過去問は以下のページにあります。\nhttps://www.titech.ac.jp/admissions/prospective-students/admissions/past-exam-papers\n\n 問１\n\n\n 問1 (1)\n回転体の体積を求める問題です。まず図を書いてみます。\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#仮の値\na = 2\nb = 5\n\n# 円のパラメータ\ncenter = (0,...",
          "link": "https://zenn.dev/porphyrio/articles/93ef80b71703d3",
          "publishedOn": "2023-08-29T15:14:23.000Z",
          "wordCount": 3273,
          "title": "東工大機械系院試をpythonで解いてみた[数学編]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0mSQ8zwL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%2595%25B0%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0mSQ8zwL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%2595%25B0%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kentoo1/articles/30ac7f25d76278",
          "author": "ケントゥ",
          "description": "概要\n前回はPoetryを用いてRecboleの環境構築をし、テストコマンドが通るところまで進めました。\n今回は、Recboleが用意しているデータセットリストの中からAnimeデータセットを取得し、RecBoleで使えるフォーマットに加工する方法を書きます。基本的には公式ドキュメント（Anime.md）の通りに進めればよいのですが、ローカル環境に依存しない形で進めたいので、ここではPoetryを使った方法を紹介します。\n\n データを用意する\n\n データ加工リポジトリのクローン\nmkdir ~/src\ncd ~/src\ngit clone https://github.com/RUC...",
          "link": "https://zenn.dev/kentoo1/articles/30ac7f25d76278",
          "publishedOn": "2023-08-29T14:28:14.000Z",
          "wordCount": 239,
          "title": "RecBoleを使ってみよう2　データの用意",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Mq26oQmi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25862%25E3%2580%2580%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%2594%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Mq26oQmi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25862%25E3%2580%2580%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%2594%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/h_hiroyuki/articles/4b92c64ab41ede",
          "author": "Hiro",
          "description": "はじめに\n衛生画像を活用して健康と衛生に関する情報を得ることは、今や一般的な方法です。本記事では、Pythonを使用して、衛生画像をNDVI（Normalized Difference Vegetation Index）に変換し、そのプロセスを通じて衛生画像の解析方法を紹介します。\n\n 衛生画像とNDVIとは？\n衛生画像は、特定の波長範囲で撮影された画像で、土地や植物の健康状態を評価するのに使用されます。一方、NDVIは植物の植生を示す指標で、緑色と近赤外線の光の反射率を比較することで算出されます。NDVIは、植物の生育状態や土地の質を評価するのに役立つ重要な指標です。\n農業では、例...",
          "link": "https://zenn.dev/h_hiroyuki/articles/4b92c64ab41ede",
          "publishedOn": "2023-08-29T13:47:28.000Z",
          "wordCount": 405,
          "title": "衛生画像をPythonでNDVIに変換して表示する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QjrxHtFp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%259B%25E7%2594%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592Python%25E3%2581%25A7NDVI%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%25A6%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MllIU1h5eTFrNkRvWmpuQUZyLWZRMlc5V05SUk1zMlpvbmlPMGp1Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QjrxHtFp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%259B%25E7%2594%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592Python%25E3%2581%25A7NDVI%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%25A6%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MllIU1h5eTFrNkRvWmpuQUZyLWZRMlc5V05SUk1zMlpvbmlPMGp1Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/honomaru/articles/16121b9124e7b4",
          "author": "Honoka",
          "description": "前書き\n毎日Rayとその周りの知識について、少しでも学習した記録を残していこうと思います。\nRayだけでなくOS周りの知識もつけていきたいなと思います。\nみなさんは、Rayをご存知でしょうか？\n英語でもRayのブログを書いているんですが、調べていて日本語の記事が少ないのかな？と思ったので、日本語でも書いてみようかなというモチベーションです。\n※英語版も同じですが、学習過程の記録なので理解が誤ってる可能性もありますが、誤りに気づいたらできるだけ修正もしていきたいと思います。。\nRayについては、オライリーから書籍が出ています。英語版ですが。。\n\nScaling Python With ...",
          "link": "https://zenn.dev/honomaru/articles/16121b9124e7b4",
          "publishedOn": "2023-08-29T09:18:44.000Z",
          "wordCount": 368,
          "title": "Day 1 ~ N日間Rayを学ぶ  / Python で分散コンピューティング~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--phUBjXjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Day%25201%2520%7E%2520N%25E6%2597%25A5%25E9%2596%2593Ray%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2520%2520%252F%2520Python%2520%25E3%2581%25A7%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Honoka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZkhvUlFkcXEyaTRiRXVOQTU1Yk1OMTYxSTFfMlh4NzcyRFZXQ2dfUVJpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--phUBjXjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Day%25201%2520%7E%2520N%25E6%2597%25A5%25E9%2596%2593Ray%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2520%2520%252F%2520Python%2520%25E3%2581%25A7%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Honoka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZkhvUlFkcXEyaTRiRXVOQTU1Yk1OMTYxSTFfMlh4NzcyRFZXQ2dfUVJpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/f8b749930ed0af16d76c",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/f8b749930ed0af16d76c\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n\n 変更前タイトル：pythonのクラス変数に外部関数を使うときにTypeError: function name takes 0 positional arguments but 1 was...",
          "link": "https://zenn.dev/nomuraya/articles/f8b749930ed0af16d76c",
          "publishedOn": "2023-08-29T07:40:11.000Z",
          "wordCount": 266,
          "title": "pythonのクラス変数に外部関数を使うとTypeError:(省略) but 1 was givenになる問題を考える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SG3Wfa9L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2596%25E9%2583%25A8%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8TypeError%253A%2528%25E7%259C%2581%25E7%2595%25A5%2529%2520but%25201%2520was%2520given%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SG3Wfa9L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2596%25E9%2583%25A8%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8TypeError%253A%2528%25E7%259C%2581%25E7%2595%25A5%2529%2520but%25201%2520was%2520given%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/d68ed63a7dae897eda7c",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/d68ed63a7dae897eda7c\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\nbase_string = 'test'\nINSERT_POINT = 2  #分かりやすくするために大文字\ninsert_string = '--hoge--'\n\n# 2文字目から挿入したい...",
          "link": "https://zenn.dev/nomuraya/articles/d68ed63a7dae897eda7c",
          "publishedOn": "2023-08-29T07:36:41.000Z",
          "wordCount": 202,
          "title": "pythonで任意の場所に文字を挿入したい！（関数・ラムダ式でも書いてみた）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AWOvgTp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%25EF%25BC%2588%25E9%2596%25A2%25E6%2595%25B0%25E3%2583%25BB%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25E3%2581%25A7%25E3%2582%2582%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AWOvgTp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%25EF%25BC%2588%25E9%2596%25A2%25E6%2595%25B0%25E3%2583%25BB%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25E3%2581%25A7%25E3%2582%2582%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/d360b531039cac1a9842",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/d360b531039cac1a9842\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n<a href=\"https://teratail.com/questions/141682\">フルパスを持つPath or strから、任意に指定した階層以上だけを切り捨てたい&...",
          "link": "https://zenn.dev/nomuraya/articles/d360b531039cac1a9842",
          "publishedOn": "2023-08-29T07:36:40.000Z",
          "wordCount": 156,
          "title": "pathlibのメソッドチェーンだけでパスを加工したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5ApO0Uqf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pathlib%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E5%258A%25A0%25E5%25B7%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5ApO0Uqf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pathlib%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E5%258A%25A0%25E5%25B7%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/b1a59a78ddb1b21f172a",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/b1a59a78ddb1b21f172a\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n気付いたらそれだけなんですが、気付くまでに時間が掛かるやつです。\n探しても見つからなかったので備忘録。\n\n やりたいこと\ndef practice(message = None):\n  if ...",
          "link": "https://zenn.dev/nomuraya/articles/b1a59a78ddb1b21f172a",
          "publishedOn": "2023-08-29T07:32:33.000Z",
          "wordCount": 253,
          "title": "備忘録：pythonのelse時に何もしない場合の書き方をワンライナーで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q-bVsL4W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%259Apython%25E3%2581%25AEelse%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%2595%25E3%2582%2582%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q-bVsL4W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%259Apython%25E3%2581%25AEelse%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%2595%25E3%2582%2582%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/ab1f3c7062f9ef6d588f",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/ab1f3c7062f9ef6d588f\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n\n [map,filterなど高階関数がよく分からない場合]listの中にlistを持っていた時にmap関数を使いたい\nなんてことはないんだけど、解説してるサイトが見つからなかったので、後で困...",
          "link": "https://zenn.dev/nomuraya/articles/ab1f3c7062f9ef6d588f",
          "publishedOn": "2023-08-29T07:32:31.000Z",
          "wordCount": 333,
          "title": "[map,filterなど高階関数がよく分からない場合]listの中にlistを持っていた時にmap関数を使いたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AkXAmoPN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bmap%252Cfilter%25E3%2581%25AA%25E3%2581%25A9%25E9%25AB%2598%25E9%259A%258E%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E5%2588%2586%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%255Dlist%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25ABlist%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E6%2599%2582%25E3%2581%25ABmap%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AkXAmoPN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bmap%252Cfilter%25E3%2581%25AA%25E3%2581%25A9%25E9%25AB%2598%25E9%259A%258E%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E5%2588%2586%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%255Dlist%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25ABlist%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E6%2599%2582%25E3%2581%25ABmap%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/a53faad2d3ad566f9b69",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/a53faad2d3ad566f9b69\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n結構簡単に出来るみたいです。\n当初は素直にlist作ってその中にtargetが存在するかチェックするループを使って…としていたんですが、数によってはめちゃくちゃ重くなるforを実行してしまいま...",
          "link": "https://zenn.dev/nomuraya/articles/a53faad2d3ad566f9b69",
          "publishedOn": "2023-08-29T07:25:17.000Z",
          "wordCount": 169,
          "title": "もっと簡単で高速に一意なデータの判別がしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--40XZGICI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E4%25B8%2580%25E6%2584%258F%25E3%2581%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--40XZGICI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E4%25B8%2580%25E6%2584%258F%25E3%2581%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/7ae15e8dc299ea8ad2c8",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/7ae15e8dc299ea8ad2c8\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\nPython2.7でやってます。3系はもっと簡単に出来そう。\n\n ソースコード\nfrom urlparse import urlparse\nimport urllib\n\ndef toGSBL(...",
          "link": "https://zenn.dev/nomuraya/articles/7ae15e8dc299ea8ad2c8",
          "publishedOn": "2023-08-29T07:25:07.000Z",
          "wordCount": 373,
          "title": "Google Safe Browsing ListにCSVから取得したマルチバイト文字を含んだURLを渡す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sgQauXGz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Safe%2520Browsing%2520List%25E3%2581%25ABCSV%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2588%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0URL%25E3%2582%2592%25E6%25B8%25A1%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sgQauXGz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Safe%2520Browsing%2520List%25E3%2581%25ABCSV%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2588%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0URL%25E3%2582%2592%25E6%25B8%25A1%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/78d0174977bb61a52808",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/78d0174977bb61a52808\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n\n XMLファイルをPandas.DataFrameで扱いたい\npandasはcsvやjsonを扱う時は便利ですが、xmlは対応してくれていないのか、良い方法が思いつきませんでした。\nxmlを...",
          "link": "https://zenn.dev/nomuraya/articles/78d0174977bb61a52808",
          "publishedOn": "2023-08-29T07:25:06.000Z",
          "wordCount": 283,
          "title": "XMLファイルをPandas.DataFrameで扱いたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nwLV6DFk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XML%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592Pandas.DataFrame%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nwLV6DFk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XML%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592Pandas.DataFrame%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/51b5a8bf9ef41ed04ac2",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/51b5a8bf9ef41ed04ac2\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n私自身、pythonもあまり理解していると言えないレベルだが、そんなレベルでも手っ取り早くパンダさんすげー！っていいたい記事が見つからなかったので書いた。\n正直、他の記事とかを読むと、周りのレ...",
          "link": "https://zenn.dev/nomuraya/articles/51b5a8bf9ef41ed04ac2",
          "publishedOn": "2023-08-29T07:25:00.000Z",
          "wordCount": 528,
          "title": "pandasの威力を手っ取り早く実感したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cf8Yfxvw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AE%25E5%25A8%2581%25E5%258A%259B%25E3%2582%2592%25E6%2589%258B%25E3%2581%25A3%25E5%258F%2596%25E3%2582%258A%25E6%2597%25A9%25E3%2581%258F%25E5%25AE%259F%25E6%2584%259F%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cf8Yfxvw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AE%25E5%25A8%2581%25E5%258A%259B%25E3%2582%2592%25E6%2589%258B%25E3%2581%25A3%25E5%258F%2596%25E3%2582%258A%25E6%2597%25A9%25E3%2581%258F%25E5%25AE%259F%25E6%2584%259F%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yu_9/articles/cd31b6a904dcde",
          "author": "yukyu",
          "description": "読んだ技術記事の理解を深めるべく、技術記事の内容からクイズを生成するサイトを作りました。\nhttps://quizbite.yukyu.net/about\n\n 使い方\nhttps://quizbite.yukyu.net にテキストボックスに技術記事のURLを入力し、「クイズを作る」をクリックします。\nあとは、クイズが生成されるまで待ちます。生成が終わるまで大体1分半くらいかかります。\n\nhttps://quizbite.yukyu.net/?url=<技術記事のURL>とすると、テキストボックスにurlが入力された状態で共有できます。\n\n デモ動画\nhttps://yout...",
          "link": "https://zenn.dev/yu_9/articles/cd31b6a904dcde",
          "publishedOn": "2023-08-29T06:02:56.000Z",
          "wordCount": 1002,
          "title": "GPT-4とLangChainで技術記事のクイズを生成するサイトを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--u19Zco9A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-4%25E3%2581%25A8LangChain%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukyu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4YzcxMmIzM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--u19Zco9A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-4%25E3%2581%25A8LangChain%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukyu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4YzcxMmIzM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shabaraba/articles/c581b6126b1a23",
          "author": "しゃば",
          "description": "はじめに\n今は訳合ってサービスを閉じてしまっているのですが、スマレジプラットフォームアプリでlook-into-basketsというアプリを公開していました。\nhttps://github.com/shabaraba/look-into-baskets\n取引履歴から期間を指定してアソシエーション分析結果を表示するアプリだったのですが、\n\nフロントとバックが密結合だったので、分割したかった\n「アソシエーション分析」というもの自体が割と使い勝手がよく、いろんなことに応用が効きそう\n\n自作ブログのタグを分析すれば、僕の興味とかスキルセットとか見えるんじゃないか、とか\n\n\n\nという理由から、...",
          "link": "https://zenn.dev/shabaraba/articles/c581b6126b1a23",
          "publishedOn": "2023-08-29T05:48:48.000Z",
          "wordCount": 1577,
          "title": "アソシエーション分析ができるAPIをlambdaとAPI-Gatewayで作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--65sTOJsD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25BD%25E3%2582%25B7%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2588%2586%25E6%259E%2590%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BAPI%25E3%2582%2592lambda%25E3%2581%25A8API-Gateway%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmMjlhNmM2OTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--65sTOJsD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25BD%25E3%2582%25B7%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2588%2586%25E6%259E%2590%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BAPI%25E3%2582%2592lambda%25E3%2581%25A8API-Gateway%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmMjlhNmM2OTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maretol/articles/9d6aca61cbb89e",
          "author": "Maretol",
          "description": "ことのはじまり\nBigQueryで集計した結果をMｙSQLに入れる作業でpythonを用いてこんな感じの実装をしていた（実際はもうちょいいろいろしてる\nquery_job = bq_client.query(some_query)\nquery_job.result()\nresult = query_job.to_dataframe()\n\nresult.to_sql(\n\tsome_table,\n\tconnection,\n\tif_exist=\"append\",\n)\nあるとき、この部分でエラーが起きて対応したのだが（この対応自体は本記事とあまり関係ないため省略）、pandasのドキュメント...",
          "link": "https://zenn.dev/maretol/articles/9d6aca61cbb89e",
          "publishedOn": "2023-08-29T05:15:20.000Z",
          "wordCount": 576,
          "title": "pandasのDataFrame.to_sqlのmethodとchunksize設定について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uXa6jMaP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AEDataFrame.to_sql%25E3%2581%25AEmethod%25E3%2581%25A8chunksize%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maretol%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHd3ROUEQtTzQxSkszUmNIbmUtel9hb1hhQ3d2M2phWlBJVzlDPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uXa6jMaP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AEDataFrame.to_sql%25E3%2581%25AEmethod%25E3%2581%25A8chunksize%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maretol%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHd3ROUEQtTzQxSkszUmNIbmUtel9hb1hhQ3d2M2phWlBJVzlDPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/fb995e930cf0c1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-294 A - Filter\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    b = [i for i in a if i % 2 == 0]\n\n    print(\" \".join(map(str, b)))\n\n\nif __name__ == \"__main__\":\n    ma...",
          "link": "https://zenn.dev/hyperdb/articles/fb995e930cf0c1",
          "publishedOn": "2023-08-29T04:02:50.000Z",
          "wordCount": 326,
          "title": "［AtCoder］ABC-294｜A - Filter",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rXopiIsv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-294%25EF%25BD%259CA%2520-%2520Filter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rXopiIsv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-294%25EF%25BD%259CA%2520-%2520Filter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1f21f49cdf37d5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-294 B - ASCII Art\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef asc(c):\n    return chr(ord('A') + c - 1)\n\n\ndef main():\n    h, w = getIntMap()\n    a = getIntListRow(h)\n\n    f...",
          "link": "https://zenn.dev/hyperdb/articles/1f21f49cdf37d5",
          "publishedOn": "2023-08-29T04:02:50.000Z",
          "wordCount": 420,
          "title": "［AtCoder］ABC-294｜B - ASCII Art",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Gr4_OMpi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-294%25EF%25BD%259CB%2520-%2520ASCII%2520Art%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Gr4_OMpi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-294%25EF%25BD%259CB%2520-%2520ASCII%2520Art%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/suehiro3721p/books/5b47e32964893f",
          "author": "JJ",
          "description": "メルマガ「Pythoで、情報、数学再学習」(パイマガ)のまとめ\nhttps://www.mag2.com/m/0001685552\n\nPython  言語で、高校に導入された教科「情報」を学習し、高校数学、さらに、大学工学部で勉強する数学を勉強します。人工知能の基礎となる統計も学習します。",
          "link": "https://zenn.dev/suehiro3721p/books/5b47e32964893f",
          "publishedOn": "2023-08-29T02:43:54.000Z",
          "wordCount": 64,
          "title": "大人のためのPythoで、情報、数学再学習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s6X8UUTi--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zNjEzOTkwNzA4LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s6X8UUTi--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zNjEzOTkwNzA4LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/dexcter/articles/b90455b7f523c7",
          "author": "dexcter",
          "description": "発生問題\nコマンドにpip install mysqclientと入力すると、以下のエラーメッセージが出てきた\n・・・\n/bin/sh: 1: mysql_config: not found\n/bin/sh: 1: mariadb_config: not found\n/bin/sh: 1: mysql_config: not found\nTraceback (most recent call last):\nFile \"<string>\", line 1, in <module>\nFile \"/tmp/pip-install-pnhw9vzq/mysqlclie...",
          "link": "https://zenn.dev/dexcter/articles/b90455b7f523c7",
          "publishedOn": "2023-08-29T00:08:40.000Z",
          "wordCount": 215,
          "title": "「OSError: mysql_config not found」と言われた時の対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ck2__gA7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258COSError%253A%2520mysql_config%2520not%2520found%25E3%2580%258D%25E3%2581%25A8%25E8%25A8%2580%25E3%2582%258F%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dexcter%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2ZmE0OTdmNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ck2__gA7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258COSError%253A%2520mysql_config%2520not%2520found%25E3%2580%258D%25E3%2581%25A8%25E8%25A8%2580%25E3%2582%258F%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dexcter%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2ZmE0OTdmNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/serverless_streamlit_stlite",
          "author": "Tamtam",
          "description": "stliteとは\nstliteは、Streamlitを完全にWebブラウザ上で動作させるためのものです。\nstliteはPyodideというCPythonをWebAssembly/Emscriptenに移植させたモノを搭載しています。\nPyodideを使うことで、ブラウザ上でmicropipを使ってPythonパッケージをインストールして実行することができます。\n言い換えれば、Streamlit用のPythonサーバーを立てることなく、静的なウェブページをセットアップするだけで、必要な計算をユーザーのマシンで直接実行することができます。\nPythonでWebアプリのプロトタイプを素早...",
          "link": "https://zenn.dev/fitness_densuke/articles/serverless_streamlit_stlite",
          "publishedOn": "2023-08-28T15:14:28.000Z",
          "wordCount": 973,
          "title": "Webブラウザ上で動くサーバーレスなStreamlitのstliteを試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HBuUMfJt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25AAStreamlit%25E3%2581%25AEstlite%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HBuUMfJt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25AAStreamlit%25E3%2581%25AEstlite%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rookzeno/articles/f238f23fcd6e4e",
          "author": "rookzeno",
          "description": "他の人の解法を見ようと思ったのに、あんまり解法が見当たらなかったので書きました。\n上位解法は表彰式に参加して確認しましょう。\n\n タスク\n以下のような中古車販売のデータが与えられるので値段(price)を当てるものです。\n\n\n\n走行距離\n車種\nprice\n\n\n\n\n30000\nトヨタ\n100\n\n\n10000\n日産\nNull\n\n\n\n\n 評価指標\n\\text{MAPE} = \\dfrac{100}{n}\\displaystyle\\sum_{i＝1}^n|\\dfrac{y_i-\\hat{y_i}}{y_i}|\n評価指標がMAPEだったのがこのコンペで難しい部分であり、面白い部分でもあったかもしれ...",
          "link": "https://zenn.dev/rookzeno/articles/f238f23fcd6e4e",
          "publishedOn": "2023-08-28T15:07:49.000Z",
          "wordCount": 1228,
          "title": "SIGNATE Career Up Challenge 2023の24位解法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HNrm5bkv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SIGNATE%2520Career%2520Up%2520Challenge%25202023%25E3%2581%25AE24%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rookzeno%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkYjQxYjk5NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HNrm5bkv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SIGNATE%2520Career%2520Up%2520Challenge%25202023%25E3%2581%25AE24%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rookzeno%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkYjQxYjk5NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/3323b08e1e6e41",
          "author": "よしだ",
          "description": "はじめに\n最近はPPLのStan、NumPyro、PyMCを触っていたのですが、それぞれ一長一短だったため個人的な感覚での評価値ですが、各ライブラリの比較表を残しておきます。\n各ライブラリの細かい使い方は記事一覧から確認してください。\n\n 比較表\n階層モデル〜DL系までのカテゴリは書きやすさで評価しています。\n\n\n\n\nStan\nNumPyro\nPyMC\nMEMO\n\n\n\n\n階層モデル\n△\n◯\n◯\nNumPyroとPyMCでは階層のところを行列演算で自然に書くことができる\n\n\nガウス過程\n△\n△\n◯\nPyMCではカーネル関数やスパースGPなどデフォルトで用意されている\n\n\n時系列モデル（...",
          "link": "https://zenn.dev/yoshida0312/articles/3323b08e1e6e41",
          "publishedOn": "2023-08-28T14:31:00.000Z",
          "wordCount": 138,
          "title": "PPL比較：Stan、NumPyro、PyMC",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tDLc2DzC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PPL%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%259AStan%25E3%2580%2581NumPyro%25E3%2580%2581PyMC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tDLc2DzC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PPL%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%259AStan%25E3%2580%2581NumPyro%25E3%2580%2581PyMC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hiro_0128/books/f74e4a24f5e95d",
          "author": "hirosan",
          "description": "Mattermost のサーバーを構築から公開までの忘備録。",
          "link": "https://zenn.dev/hiro_0128/books/f74e4a24f5e95d",
          "publishedOn": "2023-08-28T12:05:34.000Z",
          "wordCount": 82,
          "title": "ubuntu に nginx, Postgresql, ngrok を使って Mattermost を使ってみた。",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/hk_ilohas/articles/gaussian-process",
          "author": "HK_ilohas",
          "description": "はじめに\nKindle の日替わりセールで買って積読になっていた『ガウス過程と機械学習』を読んだので，ガウス過程回帰について整理し，GPy で試してみました．この記事の内容は『ガウス過程と機械学習』の 2-4 章に対応しています．\nガウス過程回帰とは回帰分析手法の一種で，非線形な関数関係を表すことができます．ガウス過程回帰ではカーネル関数と呼ばれる類似度を表す関数を設定しますが，このカーネル関数を変えることで無限回微分可能な滑らかな関数やブラウン運動，周期性など様々なものを扱えます．\n\n ガウス分布\n平均 \\mu，分散 \\sigma ^2 のガウス分布の確率密度関数は，\n\n\\math...",
          "link": "https://zenn.dev/hk_ilohas/articles/gaussian-process",
          "publishedOn": "2023-08-28T08:30:19.000Z",
          "wordCount": 1425,
          "title": "ガウス過程回帰とGPyのメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uqYbSyIJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%25A8GPy%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uqYbSyIJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%25A8GPy%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/techflagcorp/articles/5f2aead03878b1",
          "author": "dagger1",
          "description": "SlackとChatGPT APIでチャットボットを作る パート5（番外編／Gradioインターフェイス）\nパート1（基礎編）、パート2（会話履歴管理編）、パート3（function calling編）、パート4 （code interpreterぽい編）ときて、パート5では番外編としてインターフェイスをGradioにすげ換えてみたいと思います。Slackを使っていない方も多いと思いますが、そんな皆さんもGradioなら手軽に試すことができます。ただひとつ、実は悲しいお知らせがありまして、パート4 （code interpreterぽい編）でPythonコードの実行に使ったIPyth...",
          "link": "https://zenn.dev/techflagcorp/articles/5f2aead03878b1",
          "publishedOn": "2023-08-28T07:52:11.000Z",
          "wordCount": 860,
          "title": "SlackとChatGPT APIでチャットボットを作る パート5（番外編／Gradioインターフェイス）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C6c71e_D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25885%25EF%25BC%2588%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25EF%25BC%258FGradio%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C6c71e_D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25885%25EF%25BC%2588%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25EF%25BC%258FGradio%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/96fb2d58e273e1",
          "author": "オライリーヨッシー",
          "description": "概要\n本記事では、中間テーブルのデータ表示方法を解説する。「中間テーブルとは #1」に続く記事なので、より詳細を知りたい方はそちらを参考いただきたい。\nhttps://zenn.dev/oreilly_ota/articles/a9a3b4d1dabec0\n\n 中間テーブルのおさらい\n中間テーブルのコードを以下に記載する。\norder_items = db.Table('order_items',\n    db.Column('order_id', db.Integer, db.ForeignKey('order.id'), primary_key=True),\n    db.Col...",
          "link": "https://zenn.dev/oreilly_ota/articles/96fb2d58e273e1",
          "publishedOn": "2023-08-28T05:13:08.000Z",
          "wordCount": 1841,
          "title": "中間テーブルとは #2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZDwavqI1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25AD%25E9%2596%2593%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZDwavqI1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25AD%25E9%2596%2593%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f3fc0c304664d1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-293 A - Swap Odd and Even\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n    t = ''\n\n    i = 0\n    while i < len(s):\n        t += (s[i:i+2])[::-1]\n        i += 2\n    print(t)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f3fc0c304664d1",
          "publishedOn": "2023-08-28T04:50:37.000Z",
          "wordCount": 290,
          "title": "［AtCoder］ABC-293｜A - Swap Odd and Even",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ouQ_PI4I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-293%25EF%25BD%259CA%2520-%2520Swap%2520Odd%2520and%2520Even%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ouQ_PI4I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-293%25EF%25BD%259CA%2520-%2520Swap%2520Odd%2520and%2520Even%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dbb58b46626623",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-293 B - Call the ID Number\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = [0] + getIntList()\n    b = [0 for _ in range(len(a))]\n\n    for i in range(1, len(a)):\n        if b[i] == 0:...",
          "link": "https://zenn.dev/hyperdb/articles/dbb58b46626623",
          "publishedOn": "2023-08-28T04:50:36.000Z",
          "wordCount": 489,
          "title": "［AtCoder］ABC-293｜B - Call the ID Number",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gkcpHoRA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-293%25EF%25BD%259CB%2520-%2520Call%2520the%2520ID%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gkcpHoRA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-293%25EF%25BD%259CB%2520-%2520Call%2520the%2520ID%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sion_pn/articles/a725029649b0f8",
          "author": "Mimaki SiON",
          "description": "https://zenn.dev/sion_pn/articles/afe598bdbfebf9\n前回、AtProtocolを使ってBlueskyにPythonからPostする方法を書きましたが、この方法でURLを含んだテキストを投稿しても、リンクが自動では有効にならないため任意のWebページを開くことが出来ません。\nそのため、Blueskyへリンク付きのPostを投稿したい場合、LinkCardを作成して投稿を行うという手順を踏む必要があります。\n\n 使用ライブラリ\n前回の記事で紹介した、The At Protocol SDK for Pythonを使用して実装を行います。\n本記事投稿...",
          "link": "https://zenn.dev/sion_pn/articles/a725029649b0f8",
          "publishedOn": "2023-08-28T01:40:45.000Z",
          "wordCount": 731,
          "title": "AtProtocolを使ってBlueskyにPythonからLinkCardをPostする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mmuC9pfd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtProtocol%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Bluesky%25E3%2581%25ABPython%25E3%2581%258B%25E3%2582%2589LinkCard%25E3%2582%2592Post%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mimaki%2520SiON%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mmuC9pfd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtProtocol%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Bluesky%25E3%2581%25ABPython%25E3%2581%258B%25E3%2582%2589LinkCard%25E3%2582%2592Post%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mimaki%2520SiON%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/how_to_twitter_bot",
          "author": "Torachi0401",
          "description": "はじめに\n楽天BooksのIT関連の書籍の売れ筋からランダムでTwitterに投稿するシステムを作りました。\n特定のジャンルの売れ筋上位30の中からランダムに1つを選択していますので、場合によっては同じ商品が投稿される場合もあります。\n\n 環境\n\n\nRailway\n\npython3.11\n\ntweepy\nreuests\n\n\n\n\n\n\n ソースコード\nimport tweepy\nfrom const import *\n\n\ndef create_post(_title, _affiliate_url, _item_caption):\n    client = tweepy.Client(c...",
          "link": "https://zenn.dev/torachi0401/articles/how_to_twitter_bot",
          "publishedOn": "2023-08-27T16:15:59.000Z",
          "wordCount": 398,
          "title": "楽天の売れ筋商品からランダムにX(Twitter)に投稿する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Heks1esG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25BD%25E5%25A4%25A9%25E3%2581%25AE%25E5%25A3%25B2%25E3%2582%258C%25E7%25AD%258B%25E5%2595%2586%25E5%2593%2581%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2581%25ABX%2528Twitter%2529%25E3%2581%25AB%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Heks1esG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25BD%25E5%25A4%25A9%25E3%2581%25AE%25E5%25A3%25B2%25E3%2582%258C%25E7%25AD%258B%25E5%2595%2586%25E5%2593%2581%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2581%25ABX%2528Twitter%2529%25E3%2581%25AB%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nori0__/articles/0ef8cbb5bda1d8",
          "author": "nori0__",
          "description": "背景\n今まで投稿した技術記事を一覧で欲しいと言われてたので手作業だるすぎとなったのでコード書くことにした。\n\n 実装\nhttps://github.com/nori1994/OUTPUT_CSV_OF_QIITA_ZENN_ARTICLE\nZennだけでなくQiitaでの記事一覧も欲しかったのでどちらも出力できるようにした。\nQiitaについてはこちら。\n記事作成日と記事名のCSVが出力される。\npublished, title,\nYYYY/mm/dd, article title,\n\n 工夫したところ\n\n\n仮想環境記事を参考に仮想環境が Python3 の標準ライブラリである ve...",
          "link": "https://zenn.dev/nori0__/articles/0ef8cbb5bda1d8",
          "publishedOn": "2023-08-27T15:13:55.000Z",
          "wordCount": 160,
          "title": "Zennに投稿した記事一覧をCSVに出力する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8hd1ptmc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E3%2581%25AB%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592CSV%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nori0__%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4ZjdkODlmZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8hd1ptmc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E3%2581%25AB%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592CSV%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nori0__%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4ZjdkODlmZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yonda/articles/13ff0912b92dce",
          "author": "yonda",
          "description": "最適制御問題を最適化手法を利用して解く直説法\nこれをpythonでやってみるだけのメモ\n例題とモデルの数式は「直接法による最適計算手法と宇宙機への応用」（宇宙開発事業団技術報告， ISSN1345-7888， NASDA-TMR-010010）より利用させてもらう。\n\n 例題1\n1次元の運動\n位置:x\n速度:v\n推力:u\n推力は\n-1 <= u <= 1\nと制限される。\n境界条件は\nx(0) = 0\nv(0) = 0\nv(1) = 0\n目的関数は\n\\max x(1)\nつまり、\n始め（t=0）は静止しているが、\n最後(t=1)にはできるだけ遠いところで静止するような\nロケットの...",
          "link": "https://zenn.dev/yonda/articles/13ff0912b92dce",
          "publishedOn": "2023-08-27T12:53:36.000Z",
          "wordCount": 3437,
          "title": "pythonでの直接法による最適計算の一例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X0D0DCzw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E7%259B%25B4%25E6%258E%25A5%25E6%25B3%2595%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%2580%25E9%2581%25A9%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E4%25B8%2580%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yonda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZmM1MDUwZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X0D0DCzw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E7%259B%25B4%25E6%258E%25A5%25E6%25B3%2595%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%2580%25E9%2581%25A9%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E4%25B8%2580%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yonda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZmM1MDUwZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/sse_fastapi_openai",
          "author": "Tamtam",
          "description": "今回はFastAPIとSSE(Server-Sent Events)を使って、ChatGPTのようなストリーミングによるレスポンスを実装してみたいと思います！\n\n SSE(Server-Sent Events)とは\nSSEとは、サーバーからクライアントへのイベント・ストリームによる非同期通信をHTTP経由で提供する技術です。\nContent-Typeヘッダーにtext/event-streamを指定しデータを送信すると、クライアント側でイベントを受け取ることができます。\nWebSocketとSSEの主な違いは、WebSocketが双方向通信であるのに対し、SSEは単一方向の通信です。\nS...",
          "link": "https://zenn.dev/fitness_densuke/articles/sse_fastapi_openai",
          "publishedOn": "2023-08-27T11:13:22.000Z",
          "wordCount": 859,
          "title": "SSE(Server-Sent Events)をFastAPIで行いChatGPTの回答をストリーミングで返すAPIサーバーの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UYTR4nHC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSE%2528Server-Sent%2520Events%2529%25E3%2582%2592FastAPI%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2584ChatGPT%25E3%2581%25AE%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E8%25BF%2594%25E3%2581%2599AP...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UYTR4nHC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSE%2528Server-Sent%2520Events%2529%25E3%2582%2592FastAPI%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2584ChatGPT%25E3%2581%25AE%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E8%25BF%2594%25E3%2581%2599AP...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/h0tcatnohotmens/articles/ad6fe9ec3a7148",
          "author": "のーり",
          "description": "はじめに\n\nスロットのデータを手入力でcsvに書き込み、ランダムフォレストで大当たり確率・設定の予想をして、検証をした結果を記事にしてみました。\n\n\n 対象読者\n\n機械学習に興味がある方\nスロットの大当たり予想を試してみたい方\n\n\n 大当たり予想の検証をした経緯\n\nスロットは1から6まで設定が存在し、6に近いほど高設定と呼ばれプレイヤーが勝ちやすくなります。\n当然ながら、しょっちゅう設定6が入ることは無いのが現実です。\nそこで、機械学習で過去のデータを学習して予想すれば高設定の台に座りやすくなったり、低設定を打つリスクが下げられるのではと考え実験しました。\n\n\n 注意\nこの記事および...",
          "link": "https://zenn.dev/h0tcatnohotmens/articles/ad6fe9ec3a7148",
          "publishedOn": "2023-08-27T10:20:22.000Z",
          "wordCount": 186,
          "title": "Python3とscikit-learnでスロットの大当たり確率を予想して無双しようとした話(ランダムフォレスト編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WS3_fEdj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2581%25A8scikit-learnw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2583%25BC%25E3%2582%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JSSlNUeC00VDVCS184a2xtWmxsUFZyYWtCZXpVbzIwUG1takFGPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WS3_fEdj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2581%25A8scikit-learnw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2583%25BC%25E3%2582%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JSSlNUeC00VDVCS184a2xtWmxsUFZyYWtCZXpVbzIwUG1takFGPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/jcc/articles/76ba8d333f375d",
          "author": "jc",
          "description": "先日の記事にてパーティション化されたCSVオブジェクトをCloudSQLにimportする方法を紹介しました。\nhttps://zenn.dev/jcc/articles/053ee1e609411d\nSDKを利用して32より多いオブジェクトをまとめる場合、GCPのコミュニティのチュートリアルのコードをそのまま使っていました。（2023.8.10にアーカイブされ済み）\nhttps://github.com/GoogleCloudPlatform/community/blob/master/archived/cloud-storage-infinite-compose/index.md\n文...",
          "link": "https://zenn.dev/jcc/articles/76ba8d333f375d",
          "publishedOn": "2023-08-27T09:58:42.000Z",
          "wordCount": 1857,
          "title": "GCS composeで32以上のオブジェクトをまとめる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ifSSyhwE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCS%2520compose%25E3%2581%25A732%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ifSSyhwE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCS%2520compose%25E3%2581%25A732%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/otinu/articles/4207621a3e2e0d",
          "author": "おチヌ",
          "description": "ご挨拶\nはじめまして！ おチヌと申します。\n普段は Java に触ることが多いですが、個人では Python や JS など自由にやっています。\n何かしらやってることの区切りがついたり、おもしろそうなネタがまとまったりした際に記事などアウトプットしていきたいと考えてます。\n誰かの記事に助けられることが多いので、自分の記事も微力ながら誰かの+@になるとうれしいです。\nどうぞよろしくお願いします。\n\n GmailAPI の設定\n公式ドキュメントが分かりやすかったです。\nhttps://developers.google.com/gmail/api/quickstart/python?hl...",
          "link": "https://zenn.dev/otinu/articles/4207621a3e2e0d",
          "publishedOn": "2023-08-27T09:50:20.000Z",
          "wordCount": 542,
          "title": "Gmailに届く認証コードをGmailAPIから自動確認したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZRv_KwLs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gmail%25E3%2581%25AB%25E5%25B1%258A%25E3%2581%258F%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592GmailAPI%25E3%2581%258B%25E3%2582%2589%25E8%2587%25AA%25E5%258B%2595%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2583%2581%25E3%2583%258C%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkNTNkM2I3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZRv_KwLs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gmail%25E3%2581%25AB%25E5%25B1%258A%25E3%2581%258F%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592GmailAPI%25E3%2581%258B%25E3%2582%2589%25E8%2587%25AA%25E5%258B%2595%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2583%2581%25E3%2583%258C%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkNTNkM2I3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/huraipan/articles/e49e856058625e",
          "author": "huraipan",
          "description": "本当に簡単な作業をしましょう。\nこれは初めてPyhtonを学ぶ方向けの練習問題です。\n名前を入力したら名前の文字数を出力します。\n\n 文字列を入力してもらおう\nまず文字列を入力してもらう必要がありますね\ninput関数を使って名前をもらいます。\ninput(\"名前を教えてください\")\n\n 文字数を数える関数は？\nlen関数を使ったら文字数を数えることができます。\nlen(\"abc\")  # 3\n\n 結合\nじゃあ上で学んだ関数を使って結合しましょう。\nまずinputを使ったところに入力した文字列が残ります。\nこれで入力した名前の文字数をわかりますね。\nlen(input(\"名前を教えてくだ...",
          "link": "https://zenn.dev/huraipan/articles/e49e856058625e",
          "publishedOn": "2023-08-27T06:36:53.000Z",
          "wordCount": 149,
          "title": "[Python]文字列の入力を受けて文字数を数える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EzQElnzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E5%2585%25A5%25E5%258A%259B%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%2592%25E6%2595%25B0%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EzQElnzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E5%2585%25A5%25E5%258A%259B%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%2592%25E6%2595%25B0%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/blueman/articles/8c04b1a57cb4dd",
          "author": "ブルーマン",
          "description": "目次\nはじめに\n実際にやったこと\nおわりに\n\n はじめに\nコマンドプロンプト上でライブラリを実行しようとするとエラーが出て調べてもあまり分からず苦労したので、自分以外にも同様の問題に遭遇している方の助けになればと思い対処法を紹介します。\nライブラリ名をコマンドプロンプトにて入力して使用するライブラリ(例えば、pyinstallerやmanimなど)でコマンドプロンプト上でライブラリを実行しようとしたところ次のようなエラーが出ました。\nエラー文\n\nエラー文\n\nこのエラーを解決するためにpip installを実行してpyinstallerがどこの階層にあるのかを調べると、\n実行結果\n\n...",
          "link": "https://zenn.dev/blueman/articles/8c04b1a57cb4dd",
          "publishedOn": "2023-08-27T01:00:00.000Z",
          "wordCount": 235,
          "title": "コマンドプロンプト上で実行するライブラリのエラー対処法(Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jyIp5pBX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E4%25B8%258A%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jyIp5pBX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E4%25B8%258A%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shim_a2kf3/articles/typed_python_no_0",
          "author": "しま",
          "description": "はじめに\nお仕事でPythonを書いて1年くらい経ちました。\n(Python自体はもう少しやっています。)\n結構カッチリルールを決めてプログラムを書いていく現場に当たったこともあり、型ヒントやmypyを使ってPythonらしからぬ型チェックを強制しています。\n型を意識しなくとも気軽に使えることが利点のPythonで、わざわざ型を意識したコーディングをする理由とはなんでしょうか？\nこの疑問の答えを探しつつ、やっぱりPythonでも型の意識は大事だよね と共感していただけたらと思い、少しずつ記事を書いていこうかと腰を上げた次第です。\n\n おことわり\n本記事と関連する記事は、あくまで個人の...",
          "link": "https://zenn.dev/shim_a2kf3/articles/typed_python_no_0",
          "publishedOn": "2023-08-26T16:02:38.000Z",
          "wordCount": 354,
          "title": "型を意識したPythonのすすめ 第0回",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2B7bHU9N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E3%2582%2592%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259FPython%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2520%25E7%25AC%25AC0%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4YTRkMjU0YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2B7bHU9N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E3%2582%2592%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259FPython%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2520%25E7%25AC%25AC0%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4YTRkMjU0YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kentoo1/articles/f3d0d4fd610f12",
          "author": "ケントゥ",
          "description": "RecBoleのロゴ。公式サイト https://recbole.io/index.html より引用\n\n 概要\nRecBoleは、多機能かつ拡張性の高いレコメンドシステム用のフレームワークで、様々なレコメンドアルゴリズムとデータセット、評価方法を統一的なフォーマットで扱うことができます。\n今回はRecBoleが動作する環境をPoetry上に構築していきます。\n\n 環境構築\n以下の環境で作業を行っています。\n\nハードウェア: MacBook Air (M1, 2020)\nOS: MacOS Ventura 13.4.1\n\n\n Pythonの用意\n今回は ~/src/recbole_sa...",
          "link": "https://zenn.dev/kentoo1/articles/f3d0d4fd610f12",
          "publishedOn": "2023-08-26T11:20:30.000Z",
          "wordCount": 540,
          "title": "RecBoleを使ってみよう 環境構築編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cxmp03SF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cxmp03SF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/9930977e690e63",
          "author": "shimo",
          "description": "pytestで出力の1行目を改行する\nprintデバッグをしているとき、pytestの一行目の開始点が揃わないのでよく惑わされています。\npytest -s --no-header test_rollback.py\n\n 通常\nstdoutはテスト関数名の直後から始まります。\n\n\n pytest_runtest_setupフックを使う\nroot_of_test/conftest.pyにこのように書くと最初に改行してくれる。\ndef pytest_runtest_setup(item):\n    print(\"\\n\")\n\n\n 特定のファイルを除外するとき\n以下をpytestから除外したい...",
          "link": "https://zenn.dev/shimo_s3/articles/9930977e690e63",
          "publishedOn": "2023-08-26T08:18:14.000Z",
          "wordCount": 246,
          "title": "pytest メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OfJOzQpR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pytest%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OfJOzQpR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pytest%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit19",
          "author": "derwind",
          "description": "目的\nNISQ 量子コンピュータの代表的なアルゴリズムの 1 つに VQE (Variational Quantum Eigensolver) というものがある。名前も凄そうだが、解説が圧倒される難しいものが多い。これについて 今北産業 の精神で迫ってみたい。\n\n 結論\nVQE とは要するに以下 (3 行) である:\nqc = QuantumCircuit(1)\nqc.ry(Parameter(\"θ\"), 0)\nprint(VQE(Estimator(), qc, SPSA()).compute_minimum_eigenvalue(Pauli(\"Z\")).optimal_param...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit19",
          "publishedOn": "2023-08-26T08:10:01.000Z",
          "wordCount": 659,
          "title": "Qiskit で遊んでみる (19) — VQE を今北産業する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vzLHfGta--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252819%2529%2520%25E2%2580%2594%2520VQE%2520%25E3%2582%2592%25E4%25BB%258A%25E5%258C%2597%25E7%2594%25A3%25E6%25A5%25AD%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vzLHfGta--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252819%2529%2520%25E2%2580%2594%2520VQE%2520%25E3%2582%2592%25E4%25BB%258A%25E5%258C%2597%25E7%2594%25A3%25E6%25A5%25AD%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/f7f3a11153dd80",
          "author": "laiso",
          "description": "SeamlessM4Tとは\nhttps://gigazine.net/news/20230823-meta-speech-translation-transcription-seamlessm4t/\n\n 環境構築\nLinux+CUDAな環境が一番楽です。Google Colab Proが良いでしょう。\nhttps://note.com/npaka/n/ne7874068482f\n\n 依存ライブラリ\nシステム依存については https://huggingface.co/spaces/facebook/seamless_m4t/blob/main/Dockerfile が参考になります。...",
          "link": "https://zenn.dev/laiso/articles/f7f3a11153dd80",
          "publishedOn": "2023-08-26T04:07:39.000Z",
          "wordCount": 1702,
          "title": "SeamlessM4Tで英語のYouTube動画の日本語音声を自動生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NcEvbly_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SeamlessM4T%25E3%2581%25A7%25E8%258B%25B1%25E8%25AA%259E%25E3%2581%25AEYouTube%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NcEvbly_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SeamlessM4T%25E3%2581%25A7%25E8%258B%25B1%25E8%25AA%259E%25E3%2581%25AEYouTube%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2019-01-02t14_14_32-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "成功しているロゴはGoogle検索しなくても思い出せるやつ\n思い出せないやつは成功しているとは言えないんじゃないか\nGolangのGoPherくんは公式ロゴじゃないらしい、公式ロゴは誰も知らない\n\n\n English\nWhat is the rememberable succeeded logo design? @github @twitter @docker @golang @php\n\n its no googling remembering logo\n\n e.g Docker\n\n\n Github\neasy to remember for engineers\nbut some par...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2019-01-02t14_14_32-09_00",
          "publishedOn": "2023-08-26T03:55:34.000Z",
          "wordCount": 585,
          "title": "Google検索せずにサービスロゴを思い出せるのが成功パターン  @github @twitter @docker @golang @php",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0j2N-r6G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2583%25AD%25E3%2582%25B4%25E3%2582%2592%25E6%2580%259D%25E3%2581%2584%25E5%2587%25BA%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258C%25E6%2588%2590%25E5%258A%259F%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2520%2520%2540github%2520%2540twitter%2520%2540docker...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0j2N-r6G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2583%25AD%25E3%2582%25B4%25E3%2582%2592%25E6%2580%259D%25E3%2581%2584%25E5%2587%25BA%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258C%25E6%2588%2590%25E5%258A%259F%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2520%2520%2540github%2520%2540twitter%2520%2540docker...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-12-26t15_57_03-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "Pythonのgcモジュールでガベージコレクションを行う方法 | TechAcademyマガジン\n\n 疑問、pythonでgcとか必要なの？そんな低レイヤーの処理\n\nプログラマーはメモリの解放を明示的にコーディングしなければなりません。コーディングを忘れたり間違えたりすると、メモリリーク(漏れ)の原因になります。\n\n\n やはり相当低レイヤー向けの処理らしい\n\nPythonは必要に応じて自動的にガベージコレクションを行います。\n通常の用途では明示的にガベージコレクションを行う必要はありません。\n\n\n gc用のモジュールがあるらしい\n\n1行目でgcモジュールをインポートしています。\n\nimp...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-12-26t15_57_03-09_00",
          "publishedOn": "2023-08-26T03:54:35.000Z",
          "wordCount": 273,
          "title": "#python #初心者 #gc #ガベージコレクション #勉強 したい #rubyist @yumainaura",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q1KIYhEn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523python%2520%2523%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%2520%2523gc%2520%2523%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2520%2523%25E5%258B%2589%25E5%25BC%25B7%2520%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%2523rubyist%2520%2540yumainaura%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q1KIYhEn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523python%2520%2523%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%2520%2523gc%2520%2523%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2520%2523%25E5%258B%2589%25E5%25BC%25B7%2520%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%2523rubyist%2520%2540yumainaura%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-12-20t12_56_37-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "おもしろいダジャレを入力すると布団が吹っ飛ぶ装置を作った - Qiita\n\nby @fujit33 さん\n\n ダジャレとはなにか、言語学チックに言うと\n「多様な形での、言葉の反復」と言い直すことが出来るかも。なるほど。\n\n2018年12月現在、Sharekaで対応可能なダジャレは、「完全反復型」「不完全反復型」のみであり、「変形反復型」「潜在表現重複型」は対応していません。\n\n\n 「完全反復型」\n\nアサインされて日が浅いんです\n\n「あさいん」と「あさいん」で完全一致\n\n 「不完全反復型」\n\n裏面のらーめん\n\n「らめん」と「らーめん」が反復されているが、不完全一致\n\n 「変形反復型」\n...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-12-20t12_56_37-09_00",
          "publishedOn": "2023-08-26T03:54:17.000Z",
          "wordCount": 240,
          "title": "そもそも言語学的にダジャレとは何なのか？「おもしろいダジャレを入力すると布団が吹っ飛ぶ装置を作った」で学習したいまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QYb-tRwf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2582%2582%25E3%2581%259D%25E3%2582%2582%25E8%25A8%2580%25E8%25AA%259E%25E5%25AD%25A6%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%25E3%2580%258C%25E3%2581%258A%25E3%2582%2582%25E3%2581%2597%25E3%2582%258D%25E3%2581%2584%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%25B8%2583%25E5%259B%25A3%25E3%2581%258C%25E5%2590%25B9%25E3%2581%25A3%25E9%25A3%259B%25E3%2581%25B6%25E8%25A3%2585%25E7%25BD%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258D%25E3%2581%25A7%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QYb-tRwf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2582%2582%25E3%2581%259D%25E3%2582%2582%25E8%25A8%2580%25E8%25AA%259E%25E5%25AD%25A6%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%25E3%2580%258C%25E3%2581%258A%25E3%2582%2582%25E3%2581%2597%25E3%2582%258D%25E3%2581%2584%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%25B8%2583%25E5%259B%25A3%25E3%2581%258C%25E5%2590%25B9%25E3%2581%25A3%25E9%25A3%259B%25E3%2581%25B6%25E8%25A3%2585%25E7%25BD%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258D%25E3%2581%25A7%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-12-20t12_48_28-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "おもしろいダジャレを入力すると布団が吹っ飛ぶ装置を作った - Qiita\n\nby @fujit33 さん\n\n ルールベースって人工知能なの？\nらしい。\n\n※ルールベースは人工知能ではないと言い張る人は、第２次人工知能ブームでググってください。\n\n\n ルールベースによるアプローチの例\n\n「布団がふっとんだ」を「全てカタカナ」に変える(小文字とか記号も削除)\n「3文字ずつのズレ配列を作る」\n重複判定する\n\n\n['フトン', 'トンガ', 'ンガフ', 'ガフト', 'フトン', 'トンダ']\n\n\n ダジャレ判定判定の結果\nnの設定「二文字重複」と「三文字重複」で結果が変わる。\n精度は変わ...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-12-20t12_48_28-09_00",
          "publishedOn": "2023-08-26T03:54:16.000Z",
          "wordCount": 231,
          "title": "ルールベースのアプローチとは？「おもしろいダジャレを入力すると布団が吹っ飛ぶ装置を作った」まとめ自己学習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6rgbkzZe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E3%2580%258C%25E3%2581%258A%25E3%2582%2582%25E3%2581%2597%25E3%2582%258D%25E3%2581%2584%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%25B8%2583%25E5%259B%25A3%25E3%2581%258C%25E5%2590%25B9%25E3%2581%25A3%25E9%25A3%259B%25E3%2581%25B6%25E8%25A3%2585%25E7%25BD%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258D%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E8%2587%25AA%25E5%25B7%25B1%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6rgbkzZe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E3%2580%258C%25E3%2581%258A%25E3%2582%2582%25E3%2581%2597%25E3%2582%258D%25E3%2581%2584%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%25B8%2583%25E5%259B%25A3%25E3%2581%258C%25E5%2590%25B9%25E3%2581%25A3%25E9%25A3%259B%25E3%2581%25B6%25E8%25A3%2585%25E7%25BD%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258D%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E8%2587%25AA%25E5%25B7%25B1%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-08-02t09_45_50-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "どうしてもという時に、こういう方法もあるよという話。\nInternet Archive: Wayback Machine はWebページのアーカイブサービス。\n圧縮ファイルなどもアーカイブしているようだ。\n\n ホップ\nリンク切れしたURLを入力する\n\n\n ステップ\n見つけた\n\n\n ジャンプ\nダウンロード！\n\n 危なくない？\n公平なアーカイブサービスだから危険度が高いとは思わないが、扱いはお任せする。\nちなみに僕はダウンロードまで進みこそすれ、実際に利用したことはない。\n\n Gist\n\nThe Case of using \"Wayback Machine\" when old version...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-08-02t09_45_50-09_00",
          "publishedOn": "2023-08-26T03:52:32.000Z",
          "wordCount": 280,
          "title": "Wayback Machine を使ってリンク切れした古いバージョンのモジュール・ライブラリをダウンロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n1eRbal5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wayback%2520Machine%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E5%2588%2587%25E3%2582%258C%25E3%2581%2597%25E3%2581%259F%25E5%258F%25A4%25E3%2581%2584%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n1eRbal5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wayback%2520Machine%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E5%2588%2587%25E3%2582%258C%25E3%2581%2597%25E3%2581%259F%25E5%258F%25A4%25E3%2581%2584%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-07-15t13_12_59-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "答え\nリモートサーバーに実行プログラムを送り込む仕組みだから。\nそのプログラム=モジュールが主にpythonで書かれているから。(*)\n\nEFFICIENT ARCHITECTURE\nAnsible works by connecting to your nodes and pushing out small programs, called \"Ansible modules\" to them.\n\nHow Ansible Works | Ansible.com\n\n 試してみよう\n\n ansible コマンドを実行\n$ ansible -i inventory.txt example ...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-07-15t13_12_59-09_00",
          "publishedOn": "2023-08-26T03:52:17.000Z",
          "wordCount": 3016,
          "title": "Ansibleの仕組み | なぜ Ansible はリモートサーバーにも python を必要とするのか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LSwpJCYX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ansible%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2520%257C%2520%25E3%2581%25AA%25E3%2581%259C%2520Ansible%2520%25E3%2581%25AF%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%2582%2520python%2520%25E3%2582%2592%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LSwpJCYX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ansible%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2520%257C%2520%25E3%2581%25AA%25E3%2581%259C%2520Ansible%2520%25E3%2581%25AF%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%2582%2520python%2520%25E3%2582%2592%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-07-06t01_28_34-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "pyenv activate コマンドは pyenv-virtualenv プラグインによる追加コマンド。\npyenv shell とだいたい同じことをするが、シェルのために色々やってくれるっぽい。(曖昧な理解)\n一時的に virtualenv の特定環境を使う場合は pyenv activate を叩いたら良さそう。\n\n コマンド\n\n\npyenv activate [viatualenvの環境名] で有効化\n\npyenv deactivate で無効化\n\n\n 例\n特に分かりやすいのは、 activate した時にシェルに virtualenv の名前を表示してくれるところ。\n\n\n 自動...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-07-06t01_28_34-09_00",
          "publishedOn": "2023-08-26T03:44:51.000Z",
          "wordCount": 3408,
          "title": "pyenv の activate って何？ ( pyenv shell との違い )",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1EP-lL_---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%2520%25E3%2581%25AE%2520activate%2520%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%2520%2528%2520pyenv%2520shell%2520%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2520%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1EP-lL_---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%2520%25E3%2581%25AE%2520activate%2520%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%2520%2528%2520pyenv%2520shell%2520%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2520%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pycetra/articles/chrome_extension_and_selenium_for_end2end",
          "author": "pycetra",
          "description": "はじめに\n第三者のchrome拡張を使ったwebサイトのend2endのテスト環境を作ってみたところ、\n手作業をけっこう減らせたのでこの記事にまとめておきます。\n環境\n\nmacOS:m2\nPython 3.10.6\nselenium 4.11.2\n\n\n 実行方法\ngit clone https://github.com/GoogleChrome/chrome-extensions-samples.git\nmkdir sample; cp ./chrome-extensions-samples/functional-samples/tutorial.hello-world/* ./sa...",
          "link": "https://zenn.dev/pycetra/articles/chrome_extension_and_selenium_for_end2end",
          "publishedOn": "2023-08-26T02:48:39.000Z",
          "wordCount": 478,
          "title": "chrome拡張をseleniumのブラウザに取り込む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JqpHHGP9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chrome%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592selenium%25E3%2581%25AE%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AB%25E5%258F%2596%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pycetra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjkxZTkyMzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JqpHHGP9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chrome%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592selenium%25E3%2581%25AE%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AB%25E5%258F%2596%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pycetra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjkxZTkyMzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumemo/articles/cf56813599259e",
          "author": "YUme",
          "description": "はじめてPythonを触ってみて、「こう書くんだ〜」と思ったことを雑にメモしていきます🐰\nPythonもさくさく書けて楽しい💖\n記載しているコードはすべて以下のバージョンにて動作確認済みです🕊️\n・Python 3.9.6\n・ruby 3.2.2 / Rails 7.0.7\n\n フォーマット\n\n ブロックをコロンとインデントで書く\n\npython\ndef sum(a, b):\n  return a + b\n\n\n クラスや関数を定義するときは、空行が2つ必要\n1行目に定義するときは空行はなくて大丈夫。\n空行が足りないと E302 expected 2 blank lines って言われちゃ...",
          "link": "https://zenn.dev/yumemo/articles/cf56813599259e",
          "publishedOn": "2023-08-25T18:58:48.000Z",
          "wordCount": 2308,
          "title": "Ruby使いがPythonを触ってみたメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Y27oXtCb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ruby%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%258CPython%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YUme%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BZbEpCOHYwZ1JpMVkzMC1ZTmZaSEtXWVpLZXVXMEZjS21ZM1BqYVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Y27oXtCb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ruby%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%258CPython%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YUme%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BZbEpCOHYwZ1JpMVkzMC1ZTmZaSEtXWVpLZXVXMEZjS21ZM1BqYVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/blueman/articles/bb11f8929a0dad",
          "author": "ブルーマン",
          "description": "この記事はQiitaの記事の転載です!!\n元記事はこちら\nhttps://qiita.com/blueman/items/94054906f377afbe910b\n\n\n 目次\nはじめに\n作成した経緯\n実行環境\n正規表現を用いてフォルダにアクセスする方法\n拡張子ありのファイル名の取得方法\nファイル名から拡張子を取得する方法\nプログラムデータと結果・素材データの識別方法\nフォルダの作成方法\nフォルダごとにデータを振り分ける方法\nソースコード\n結果\nまとめ\n\n はじめに\n今回は、前回の記事で振り分けたフォルダの中のデータを拡張子から「結果・素材」フォルダと「ソースコード」フォルダにデータを振り...",
          "link": "https://zenn.dev/blueman/articles/bb11f8929a0dad",
          "publishedOn": "2023-08-25T10:05:50.000Z",
          "wordCount": 810,
          "title": "Pythonのglob・osを用いた拡張子ごとのフォルダ振り分け",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--owUuRXuM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEglob%25E3%2583%25BBos%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%258B%25A1%25E5%25BC%25B5%25E5%25AD%2590%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--owUuRXuM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEglob%25E3%2583%25BBos%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%258B%25A1%25E5%25BC%25B5%25E5%25AD%2590%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/paxdare_labo/articles/99c4e373a9fb58",
          "author": "PAX dare Labo",
          "description": "前置き\nDuckDBというOLAPデータベースをご存じでしょうか。\n去年くらいから、そこはかとなく流行り始めているようで、Python環境で簡単に動くのですが、処理が速いとか色々な形式に対応しているとか、様々な特徴があります。\nと、DuckDBを昨日知ったばかりの私が、これ以上語っていくとボロがでそうなので、それは参考にさせていただいたページの諸先輩方にお任せします。\n[参考]\n\nhttps://zenn.dev/notrogue/articles/1193d0ab8d8eda\nhttps://www.salesanalytics.co.jp/datascience/datascie...",
          "link": "https://zenn.dev/paxdare_labo/articles/99c4e373a9fb58",
          "publishedOn": "2023-08-25T07:25:16.000Z",
          "wordCount": 614,
          "title": "パンダとアヒルの手を組ませて、オープンデータを楽に分析する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6t-IDmPc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2592%25E3%2583%25AB%25E3%2581%25AE%25E6%2589%258B%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BE%25E3%2581%259B%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%2588%2586%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PAX%2520dare%2520Labo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXBSQ092cXJjVGc4SHFoM3oyYmZ3b0pkQVVJZE1ZT2hoc1dVckdsRUNHUnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6t-IDmPc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2592%25E3%2583%25AB%25E3%2581%25AE%25E6%2589%258B%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BE%25E3%2581%259B%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%2588%2586%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PAX%2520dare%2520Labo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXBSQ092cXJjVGc4SHFoM3oyYmZ3b0pkQVVJZE1ZT2hoc1dVckdsRUNHUnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tigrebiz/articles/python-django-tutorial",
          "author": "taiga",
          "description": "本記事の目的\n\n実務でPythonDjangoで開発をすることになったため、チュートリアルをおこなって理解を深める。\n公式チュートリアルを学習しつつ、不明点や分かりにくい点については補足をおこなっていく。\n\n\n 目次\n\n\n本記事の目的\n目次\nDjango公式ドキュメントを見ながらチュートリアルを行う\nDjango の概要\n\nクイックインストールガイド\n\nPythonのインストール\nDjangoのインストール\n仮想開発環境ディレクトリについて\n\n\n\nはじめての Django アプリ作成 その 1\n\nDjango学習の基本\nプロジェクトを作成する\n開発用サーバー\nPolls アプリケーシ...",
          "link": "https://zenn.dev/tigrebiz/articles/python-django-tutorial",
          "publishedOn": "2023-08-25T06:59:48.000Z",
          "wordCount": 2635,
          "title": "【補足解説】Django公式チュートリアル（その１のみ）を初級者向けに補足してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vnW7Thp8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25A3%259C%25E8%25B6%25B3%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Django%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25E3%2581%25AE%25E3%2581%25BF%25EF%25BC%2589%25E3%2582%2592%25E5%2588%259D%25E7%25B4%259A%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AB%25E8%25A3%259C%25E8%25B6%25B3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vnW7Thp8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25A3%259C%25E8%25B6%25B3%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Django%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25E3%2581%25AE%25E3%2581%25BF%25EF%25BC%2589%25E3%2582%2592%25E5%2588%259D%25E7%25B4%259A%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AB%25E8%25A3%259C%25E8%25B6%25B3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/coji/articles/08154798093d04",
          "author": "Coji Mizoguchi",
          "description": "結論\nuvicorn server:app --host :: --port 8080\nこれでホストについてる IPv6 のアドレス全部に bind されます。\n[::] を指定しても動かない。",
          "link": "https://zenn.dev/coji/articles/08154798093d04",
          "publishedOn": "2023-08-25T06:49:41.000Z",
          "wordCount": 111,
          "title": "IPv6 で公開する FastAPI サーバ / uvicorn の起動方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eiq92hPL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IPv6%2520%25E3%2581%25A7%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%2520FastAPI%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%2520%252F%2520uvicorn%2520%25E3%2581%25AE%25E8%25B5%25B7%25E5%258B%2595%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eiq92hPL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IPv6%2520%25E3%2581%25A7%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%2520FastAPI%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%2520%252F%2520uvicorn%2520%25E3%2581%25AE%25E8%25B5%25B7%25E5%258B%2595%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d56c492a01aedd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-292 B - Yellow and Red Card\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, q = getIntMap()\n    ev = getIntListRow(q)\n    c = [0] + [0 for _ in range(n)]\n\n    f...",
          "link": "https://zenn.dev/hyperdb/articles/d56c492a01aedd",
          "publishedOn": "2023-08-25T03:50:56.000Z",
          "wordCount": 435,
          "title": "［AtCoder］ABC-292｜B - Yellow and Red Card",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YoTWcYLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-292%25EF%25BD%259CB%2520-%2520Yellow%2520and%2520Red%2520Card%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YoTWcYLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-292%25EF%25BD%259CB%2520-%2520Yellow%2520and%2520Red%2520Card%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/942930634a99e4",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-292 A - CAPS LOCK\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print(s.upper())\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/942930634a99e4",
          "publishedOn": "2023-08-25T03:50:55.000Z",
          "wordCount": 202,
          "title": "［AtCoder］ABC-292｜A - CAPS LOCK",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AQLJ4NkZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-292%25EF%25BD%259CA%2520-%2520CAPS%2520LOCK%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AQLJ4NkZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-292%25EF%25BD%259CA%2520-%2520CAPS%2520LOCK%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kikuta/articles/notion-api-with-python-to-batch-input-relation",
          "author": "kikuta",
          "description": "gist のリンク\nhttps://gist.github.com/kikutadev/25b4f9fc725b14d2bcb4103182f78539\n\n Colab のリンク\nhttps://colab.research.google.com/gist/kikutadev/25b4f9fc725b14d2bcb4103182f78539/notion-api-batch-relation.ipynb\n\n 使い方\n以下の 5 ステップで進めていきます。\n\nNOTION_TOKEN の取得\nNotion でインテグレーションを追加する\ndatabase_id の取得\nプロパティの編集...",
          "link": "https://zenn.dev/kikuta/articles/notion-api-with-python-to-batch-input-relation",
          "publishedOn": "2023-08-24T15:42:45.000Z",
          "wordCount": 398,
          "title": "NotionのテーブルにNotion APIを使ってリレーションを一括追加するGoogle Colabファイルを公開しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a8bHSaMr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Notion%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25ABNotion%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258BGoogle%2520Colab%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%2585%25AC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kikuta%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZThjYTUzZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a8bHSaMr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Notion%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25ABNotion%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258BGoogle%2520Colab%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%2585%25AC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kikuta%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZThjYTUzZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/coji/articles/1a1fc3fa9ed710",
          "author": "Coji Mizoguchi",
          "description": "なにもかもわからず、３時間ぐらい試行錯誤したので、忘れたときのために。\n\n 結論\nrye init したあとに\n\npyproject.toml に sources を追加 (CPU版の場合)\n\n[[tool.rye.sources]]\nname = \"torch\"\nurl = \"https://download.pytorch.org/whl/cpu\"\ntype = \"index\"\n※ CPU版以外がほしい場合は pytoach 公式サイトの Getting Started で適切なやつを選んで、pip3 install のオプションに指定されてるURLを指定する。\n\nrye add の...",
          "link": "https://zenn.dev/coji/articles/1a1fc3fa9ed710",
          "publishedOn": "2023-08-24T13:55:51.000Z",
          "wordCount": 141,
          "title": "rye で pytorch を追加/インストールする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CXtwjcvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rye%2520%25E3%2581%25A7%2520pytorch%2520%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%252F%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CXtwjcvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rye%2520%25E3%2581%25A7%2520pytorch%2520%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%252F%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/collabostyle/articles/69e3d2cac37707",
          "author": "kony",
          "description": "はじめに\n前回以下の記事でLlamaIndexでPDFファイルを読み込んでQAボットを作成しましたが、LlamaIndexではslackからもデータを読み込む事ができるようなので、やってみました。\nhttps://zenn.dev/collabostyle/articles/cc52ff546df34d\n\n パッケージのインストール\nPythonで以下のパッケージをインストールします。\n今回はslackからデータを読み取るためslack sdkをインストールします。\npip install llama-index\npip install openai\npip install slac...",
          "link": "https://zenn.dev/collabostyle/articles/69e3d2cac37707",
          "publishedOn": "2023-08-24T10:00:59.000Z",
          "wordCount": 485,
          "title": "LlamaIndexでslackのQAボットを作成してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FPqh4bcB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LlamaIndex%25E3%2581%25A7slack%25E3%2581%25AEQA%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:kony%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4NGQxMGUxMGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FPqh4bcB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LlamaIndex%25E3%2581%25A7slack%25E3%2581%25AEQA%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:kony%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4NGQxMGUxMGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/takaha4k/articles/b515ded6cdf15f",
          "author": "takaha4k",
          "description": "TL;DR\nPythonの開発環境を整える際、選択肢がありすぎて困る。\nその困りごとを一掃してくれるのが、Ryeである。\nPythonの開発環境を整えるのであれば、Ryeを使うべし。\n\n Ryeとは\nPythonにおけるone-stop-shop、すなはち、これ１つですべての用事が足りるものらしいです。\n以下は原文。\n\nRye is Armin's personal one-stop-shop for all his Python needs. It installs and manages Python installations, manages pyproject.toml f...",
          "link": "https://zenn.dev/takaha4k/articles/b515ded6cdf15f",
          "publishedOn": "2023-08-24T09:16:57.000Z",
          "wordCount": 366,
          "title": "Python開発環境をディファクトになりつつあるRyeで整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FpCz5_MD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2583%2587%25E3%2582%25A3%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25A4%25E3%2581%25A4%25E3%2581%2582%25E3%2582%258BRye%25E3%2581%25A7%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMGM1MDU4ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FpCz5_MD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2583%2587%25E3%2582%25A3%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25A4%25E3%2581%25A4%25E3%2581%2582%25E3%2582%258BRye%25E3%2581%25A7%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMGM1MDU4ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/t_ooka/articles/aaaa4fba79e53d",
          "author": "t-ooka",
          "description": "Python初心者です。\n最近競プロに興味を持ってコーディング問題を解いていたのですが、ListをListで初期化する際に気づいたことがありまとめます。\n\n 参考コード\nsampleList = [[]]*10\nprint(sampleList)\n# [[], [], [], [], [], [], [], [], [], []] \nsampleList[0].append(1)\nprint(sampleList)\n# [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]\n\n 気づき\n上記の形[[]]*10のように初期化されたListオブジ...",
          "link": "https://zenn.dev/t_ooka/articles/aaaa4fba79e53d",
          "publishedOn": "2023-08-24T04:02:14.000Z",
          "wordCount": 294,
          "title": "Python3の二重Listを初期化するときに気をつけること",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fvY0clCl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2581%25AE%25E4%25BA%258C%25E9%2587%258DList%25E3%2582%2592%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-ooka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MGIxYzQ2ZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fvY0clCl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2581%25AE%25E4%25BA%258C%25E9%2587%258DList%25E3%2582%2592%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-ooka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MGIxYzQ2ZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/91f1cc180318d5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-291 B - Trimmed Mean\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    x = getIntList()\n\n    x.sort()\n    y = x[n:n*4]\n\n    print(sum(y) / (3 * n))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/91f1cc180318d5",
          "publishedOn": "2023-08-24T03:27:01.000Z",
          "wordCount": 313,
          "title": "［AtCoder］ABC-291｜B - Trimmed Mean",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ygwB59nP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-291%25EF%25BD%259CB%2520-%2520Trimmed%2520Mean%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ygwB59nP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-291%25EF%25BD%259CB%2520-%2520Trimmed%2520Mean%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7e5ed3e2d65db7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-291 A - camel Case\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    for i in range(len(s)):\n        if s[i] <= 'Z':\n            print(i + 1)\n            break\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7e5ed3e2d65db7",
          "publishedOn": "2023-08-24T03:27:01.000Z",
          "wordCount": 260,
          "title": "［AtCoder］ABC-291｜A - camel Case",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S8zeH1tn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-291%25EF%25BD%259CA%2520-%2520camel%2520Case%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S8zeH1tn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-291%25EF%25BD%259CA%2520-%2520camel%2520Case%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nano_sudo/articles/eaf0d77646d7b8",
          "author": "須藤ナノ",
          "description": "はじめに\nこんにちは、@nano_sudoです！\nついに、皆様ご待望のgpt3.5-turboのファインチューニングができるようになりました！\nということで、今回は、chatGPT(gpt-3.5-turbo)をファインチューニングする方法を紹介します。\n\n ファインチューニングのメリット\n\nファインチューニングを行うことで、APIを通じて利用可能なモデルをさらに活用することができます:\n\nプロンプトよりも高品質な結果\nプロンプトに収まりきらないほどの例でトレーニングできる能力\n短いプロンプトによるトークンの節約\n\n低レイテンシーのリクエスト\n(OpenAI公式ドキュメント)[Fin...",
          "link": "https://zenn.dev/nano_sudo/articles/eaf0d77646d7b8",
          "publishedOn": "2023-08-23T16:30:46.000Z",
          "wordCount": 4881,
          "title": "chatGPT(gpt3.5-turbo)をファインチューニングしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sNk2KAhx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%2528gpt3.5-turbo%2529%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A0%2588%25E8%2597%25A4%25E3%2583%258A%25E3%2583%258E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxZTllNTY0ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sNk2KAhx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%2528gpt3.5-turbo%2529%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A0%2588%25E8%2597%25A4%25E3%2583%258A%25E3%2583%258E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxZTllNTY0ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pinto0309/articles/216488def0c00b",
          "author": "PINTO",
          "description": "1. 環境\n\nIntel Corei9 Gen.10\nUbuntu 22.04\nTorchVision\nONNX\nTensorFlow\n\n\n 2. パッケージのインストール\nsudo apt-get update \\\n&& sudo apt-get install -y flatbuffers-compiler\n\npip install -U onnx==1.14.0 \\\n&& python -m pip install onnx_graphsurgeon \\\n    --index-url https://pypi.ngc.nvidia.com \\\n...",
          "link": "https://zenn.dev/pinto0309/articles/216488def0c00b",
          "publishedOn": "2023-08-23T15:17:05.000Z",
          "wordCount": 996,
          "title": "TorchVision (MobileNetV3 Large) -> ONNX -> TFLite (シグネチャ推論)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ySox3yBr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TorchVision%2520%2528MobileNetV3%2520Large%2529%2520-%253E%2520ONNX%2520-%253E%2520TFLite%2520%2528%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E6%258E%25A8%25E8%25AB%2596%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PINTO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czMW9DdWpQQmY4YmFpTXFmY0M4bG5jamUxVnZBWUdTeEVZMnN6VXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ySox3yBr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TorchVision%2520%2528MobileNetV3%2520Large%2529%2520-%253E%2520ONNX%2520-%253E%2520TFLite%2520%2528%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E6%258E%25A8%25E8%25AB%2596%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PINTO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czMW9DdWpQQmY4YmFpTXFmY0M4bG5jamUxVnZBWUdTeEVZMnN6VXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/thaim/articles/2023-08-lambroll-subdir",
          "author": "thaim",
          "description": "lambrollでlambda関数を構築する\npythonでlambda関数を構築する。そのデプロイにlambrollを利用したい。対象のディレクトリ構成に応じてどのようにデプロイ設定をすればよいか。\n\n ルートディレクトリにハンドラー関数がある場合\nルートディレクトリに lambda_function.py があり、そこで定義されている関数 lambda_handler を呼び出したい場合。\nこの場合はlambrollのREADMEにある通り、単に lambroll deploy すればよい。\n$ ls\nfunction.json  lambda_function.py\n\n$ ca...",
          "link": "https://zenn.dev/thaim/articles/2023-08-lambroll-subdir",
          "publishedOn": "2023-08-23T14:39:53.000Z",
          "wordCount": 1480,
          "title": "lambrollでサブディレクトリにある関数を指定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a7tqmFOZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:lambroll%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%2596%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:thaim%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlYzExYmI5OWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a7tqmFOZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:lambroll%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%2596%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:thaim%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlYzExYmI5OWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/u1f992/articles/3924f969958853",
          "author": "Koutaro Mukai",
          "description": "https://techcommunity.microsoft.com/t5/excel-blog/announcing-python-in-excel-combining-the-power-of-python-and-the/ba-p/3893439\nこんな話を見かけたのでVBAで再現する回です。\n\n 実装\nhttps://twitter.com/u1F992/status/1694321103873933632\n標準入力に1行書いて出力を読むだけ、かんたんですね！他の言語でもできると思います。久しぶりにVBAを書いたので、ベストプラクティスからは外れているかもしれません。\nOpti...",
          "link": "https://zenn.dev/u1f992/articles/3924f969958853",
          "publishedOn": "2023-08-23T12:16:02.000Z",
          "wordCount": 1380,
          "title": "文字列やセル内容をPythonで実行するワークシート関数をVBAで再現する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_di31KYN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2584%25E3%2582%25BB%25E3%2583%25AB%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592VBA%25E3%2581%25A7%25E5%2586%258D%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koutaro%2520Mukai%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwNDRlMzkzOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_di31KYN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2584%25E3%2582%25BB%25E3%2583%25AB%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592VBA%25E3%2581%25A7%25E5%2586%258D%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koutaro%2520Mukai%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwNDRlMzkzOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/straydog/articles/1724190bd5b31d",
          "author": "stray dog",
          "description": "はじめに\n沼ったのでメモ。2023 年 8 月 23 日時点での情報です。\nheroku の console 上で flask db upgrade をしたら「password authentication failed for user」が出ました。今まで特に問題なく DB と接続できていたのに、なぜか急に出るようになったので、原因を調べてみました。\n\n 原因\n同じ原因で接続できなかった人が以下の issue にいました。SQLAlchemy のバグ対応でリリースされたバージョンに移行すると起こる様子。古い Flask-Migrate の「flask db init」で生成された ...",
          "link": "https://zenn.dev/straydog/articles/1724190bd5b31d",
          "publishedOn": "2023-08-23T09:09:18.000Z",
          "wordCount": 187,
          "title": "flask db upgradeすると「password authentication failed for user」が出る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LUHEFJXr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:flask%2520db%2520upgrade%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2580%258Cpassword%2520authentication%2520failed%2520for%2520us...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LUHEFJXr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:flask%2520db%2520upgrade%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2580%258Cpassword%2520authentication%2520failed%2520for%2520us...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c9734bf6ad7c0a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-290 B - Qual B\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n, k = getIntMap()\n    s = list(getString())\n\n    j = 0\n    for i in range(k):\n        j = s.index('o', j)\n        j += 1\n    print(\"\".join(s[0: j] +...",
          "link": "https://zenn.dev/hyperdb/articles/c9734bf6ad7c0a",
          "publishedOn": "2023-08-23T07:41:41.000Z",
          "wordCount": 375,
          "title": "［AtCoder］ABC-290｜B - Qual B",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9513jvMg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-290%25EF%25BD%259CB%2520-%2520Qual%2520B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9513jvMg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-290%25EF%25BD%259CB%2520-%2520Qual%2520B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/67aa7c83eb6068",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-290 A - Contest Result\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m = getIntMap()\n    a = [0] + getIntList()\n    b = getIntList()\n\n    c = 0\n    for i in b:\n        c += a[i]\n    ...",
          "link": "https://zenn.dev/hyperdb/articles/67aa7c83eb6068",
          "publishedOn": "2023-08-23T07:41:41.000Z",
          "wordCount": 339,
          "title": "［AtCoder］ABC-290｜A - Contest Result",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---sjAMAsl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-290%25EF%25BD%259CA%2520-%2520Contest%2520Result%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---sjAMAsl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-290%25EF%25BD%259CA%2520-%2520Contest%2520Result%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/230822-weekly-scrapbox",
          "author": "knao124",
          "description": "開発生産性 Four Keys を簡単に可視化する\nDORAというチームが研究した成果らしい\n\n計測と現状把握｜開発生産性 実践入門\nエリート DevOps チームであることを Four Keys プロジェクトで確認する | Google Cloud 公式ブログ\n\nFour Keys\n\n(リリース)\n\nデプロイの頻度\n変更のリードタイム\n\n\n(バグ対応)\n\n変更障害率\nサービス復元時間\n\n\n\nGCPでインスタンスを立てて、Githubのデータを取り込むことで簡易に計測できるとのこと\n\ndora-team/fourkeys: Platform for monitoring the fo...",
          "link": "https://zenn.dev/knao124/articles/230822-weekly-scrapbox",
          "publishedOn": "2023-08-23T03:46:19.000Z",
          "wordCount": 447,
          "title": "読んでた記事 230822~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UBvseeI5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%2520230822%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UBvseeI5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%2520230822%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/esm/articles/d2d5ba20c5863b",
          "author": "sfjwr",
          "description": "この記事は「おしゃべりクマちゃん🧸」シリーズの記事になります。インデックスはコチラ。前回の記事はコチラ。\n今回は、発言生成機能に直接は関係ないのですが、これまでに紹介した機能を利用して複数人のキャラクタを作成し、キャラクタ同士の会話を試みた時のことを紹介します😀\n\n 概要\nこれまでに紹介してきた仕組みを利用して、複数のキャラクタを生成し、会話させるアプリケーションを作成しました。\nキャラクタは、前々回紹介したプロンプトの「プロフィール」の部分だけを差し替える形で、複数用意しました。\nアプリケーションの仕組みとしては、\n\nユーザーからの発言を取得\nどのキャラクタが発言するのかを決定(全員が...",
          "link": "https://zenn.dev/esm/articles/d2d5ba20c5863b",
          "publishedOn": "2023-08-23T01:00:00.000Z",
          "wordCount": 253,
          "title": "【FDO43】【会話文章生成 その4】AIキャラクタ同士で会話させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TYn2a_Bw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FDO43%25E3%2580%2591%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%2520%25E3%2581%259D%25E3%2581%25AE4%25E3%2580%2591AI%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E5%2590%258C%25E5%25A3%25AB%25E3%2581%25A7%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25B0%25B8%25E5%2592%258C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%259E%25E3%2583%258D%25E3%2582%25B8%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520Tech%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:sfjwr%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzlhYmNlZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WU00VG5xR2pzRl9UYS10V0xrYVpzVy1YT2pDb1NOTmZ3LXRTVk89czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TYn2a_Bw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FDO43%25E3%2580%2591%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%2520%25E3%2581%259D%25E3%2581%25AE4%25E3%2580%2591AI%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E5%2590%258C%25E5%25A3%25AB%25E3%2581%25A7%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25B0%25B8%25E5%2592%258C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%259E%25E3%2583%258D%25E3%2582%25B8%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520Tech%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:sfjwr%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzlhYmNlZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WU00VG5xR2pzRl9UYS10V0xrYVpzVy1YT2pDb1NOTmZ3LXRTVk89czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/masswork/articles/a14d7f4c7b9664",
          "author": "mass",
          "description": "ExcelとPythonの統合\nExcel内でPythonを使用するパブリックプレビューがリリースされました。\nPythonとExcelの分析を組み合わせることが可能になります。\n※現状はWindowsのベータチャンネル登録者のみのようです。\n\n 主な特徴\n\n\n分析者向けの機能\nExcelの新しいPY関数を使用して、PythonコードをExcelセルに直接入力できます。可視化、データクリーニング、機械学習など、より強力な分析が可能に。\n=PYを入力するだけでPythonモードに移行できる様です。\n\n\nAnacondaとの連携\nAnacondaは、世界中のデータ専門家が使用する主要なP...",
          "link": "https://zenn.dev/masswork/articles/a14d7f4c7b9664",
          "publishedOn": "2023-08-22T23:00:01.000Z",
          "wordCount": 139,
          "title": "ついにExcelにPythonが搭載されるらしいのでまとめてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GOqMxbE---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25ABExcel%25E3%2581%25ABPython%25E3%2581%258C%25E6%2590%25AD%25E8%25BC%2589%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mass%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MmQ0YjJiOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GOqMxbE---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25ABExcel%25E3%2581%25ABPython%25E3%2581%258C%25E6%2590%25AD%25E8%25BC%2589%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mass%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MmQ0YjJiOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/noneprogrammer/articles/ed58b1411cb8f8",
          "author": "none_programmer",
          "description": "txtファイルの家計簿のカテゴリー別グラフ(月集計)を作成するデスクトップアプリをpythonで作成しました。\n\n ファイル構成\n●単一ファイル\n---boss\n    |---main.py\n    |---005_note_money.txt　(入力データ)\n\n クラス図\n\n\n 構造化\n\n\n デスクトップアプリの出力\nTwitterにアップしました。\n\n\n ソースコード\nfrom __future__ import annotations\nimport os \nimport re \nfrom collections import defaultdict\nimport matplotl...",
          "link": "https://zenn.dev/noneprogrammer/articles/ed58b1411cb8f8",
          "publishedOn": "2023-08-22T23:00:00.000Z",
          "wordCount": 4704,
          "title": "オブジェクト指向で構造化プログラミング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KInffmJz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25A7%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:none_programmer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi1FSlJ6TTFSc0pRcDZLM3llSFNpVkQ4aDJjTDMyQm5MWTNHcFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KInffmJz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25A7%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:none_programmer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi1FSlJ6TTFSc0pRcDZLM3llSFNpVkQ4aDJjTDMyQm5MWTNHcFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-convolution04",
          "author": "derwind",
          "description": "目的\nQiskit で遊んでみる (18) — Quantum Convolutional Networks その 1 で量子畳み込みニューラルネットワークの訓練をしたが、普通の畳み込みニューラルネットワークでもやっておくという内容。\n\n データセット\n11_quantum_convolutional_neural_networks.ipynb のデータセットを PyTorch で使いやすいように箱詰めする:\nfrom __future__ import annotations\n\nfrom typing import Any, Callable\n\nimport numpy as np...",
          "link": "https://zenn.dev/derwind/articles/dwd-convolution04",
          "publishedOn": "2023-08-22T17:07:09.000Z",
          "wordCount": 3510,
          "title": "ニューラルネットの畳み込み層 (4) — 量子畳み込みニューラルネットワークと比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3o9wYF4g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E5%25B1%25A4%2520%25284%2529%2520%25E2%2580%2594%2520%25E9%2587%258F%25E5%25AD%2590%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3o9wYF4g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E5%25B1%25A4%2520%25284%2529%2520%25E2%2580%2594%2520%25E9%2587%258F%25E5%25AD%2590%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/957a8659f4eba1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-289 B - レ\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m = getIntMap()\n    if m > 0:\n        a = getIntList()\n\n    l = [i + 1 for i in range(n)]\n    if m == 0:\n        print(\" \"....",
          "link": "https://zenn.dev/hyperdb/articles/957a8659f4eba1",
          "publishedOn": "2023-08-22T05:19:33.000Z",
          "wordCount": 494,
          "title": "［AtCoder］ABC-289｜B - レ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wpY_JvZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-289%25EF%25BD%259CB%2520-%2520%25E3%2583%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wpY_JvZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-289%25EF%25BD%259CB%2520-%2520%25E3%2583%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/27e3854b7e5076",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-289 A - flip\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    t = [i ^ 1 for i in list(map(int, list(s)))]\n\n    print(\"\".join(list(map(str, t))))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/27e3854b7e5076",
          "publishedOn": "2023-08-22T05:19:32.000Z",
          "wordCount": 273,
          "title": "［AtCoder］ABC-289｜A - flip",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ldDora_d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-289%25EF%25BD%259CA%2520-%2520flip%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ldDora_d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-289%25EF%25BD%259CA%2520-%2520flip%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tigrebiz/articles/python-try-exception",
          "author": "taiga",
          "description": "本記事の目的\n\n実務でPythonDjangoを触ることになったので、とりあえず例外処理から理解する。\n完全に理解する。\n実務で使えるレベルにする。\n\nそういうことだ！\n\n 目次\n\n\n本記事の目的\n目次\n\nPython例外処理の基本\n\n例外処理の基本のキ\nPythonの例外処理の解説\n実務レベルの例外処理\n\n\n\nPython例外処理の応用\n\n\nデコレータによる例外処理の共通化\n\nデコレータとは\nデコレータを使ったエラーハンドリングの方法\n\n\n\nカスタムエラークラスを使った例外処理\n\nカスタムエラークラスの具体的な使い方\nカスタムエラークラスの詳細解説\n\n\nより実務的なカスタムクラスを...",
          "link": "https://zenn.dev/tigrebiz/articles/python-try-exception",
          "publishedOn": "2023-08-22T04:19:08.000Z",
          "wordCount": 5370,
          "title": "【完全解説！】Pythonの例外処理を基礎から実務レベルまで完全にマスターする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0eNwIwxP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%25E3%2580%2591Python%25E3%2581%25AE%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E5%258B%2599%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2581%25BE%25E3%2581%25A7%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0eNwIwxP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%25E3%2580%2591Python%25E3%2581%25AE%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E5%258B%2599%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2581%25BE%25E3%2581%25A7%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/cae_taka/articles/309f7e11e4010c",
          "author": "Taka",
          "description": "動機\n前回の記事でNastranファイルを読み込めたので同じ要領でkeywordファイルの入出力をやってみます。\nLs-Dynaのkeywordファイルは、個人的に慣れ親しんだ形式なので節点、要素以外にPART,Section,材料,セット（パート、節点）も扱えるようしようと思います。\n\n 今回やること\nkeywordファイルの入出力を行います。\n\n プログラムの説明\n\nkeywordファイルは、キーワード（*NODEなど）とキーワードの間に中身が記述されています。\n\n*NODE\n     100        331.7869       -215.0759        -109...",
          "link": "https://zenn.dev/cae_taka/articles/309f7e11e4010c",
          "publishedOn": "2023-08-22T02:58:25.000Z",
          "wordCount": 4881,
          "title": "CAEのためのPython3(keywordファイルの入出力)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MTypI0v0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython3%2528keyword%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MTypI0v0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython3%2528keyword%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/9dc79b70dccd5e",
          "author": "nakamura196",
          "description": "概要\n以下のようなGoogle Mapsの短縮URLから緯度経度を取得する機会がありました。\nhttps://goo.gl/maps/aPxUgDJ9KP2FLFkN7\nhttps://goo.gl/maps/aPxUgDJ9KP2FLFkN7\n\nこの時、2つの緯度経度が取得できたので、その備忘録です。\n\n 抽出方法\nGPT-4から以下の回答が得られました。\n--- 以下、回答 ---\nGoogle Mapsの短縮URL (goo.gl/maps/...) から直接緯度経度を抽出することはできません。しかし、この短縮URLを展開して元のURLを取得することで、そのURLから緯度経度を...",
          "link": "https://zenn.dev/nakamura196/articles/9dc79b70dccd5e",
          "publishedOn": "2023-08-22T02:05:58.000Z",
          "wordCount": 673,
          "title": "Google Mapsの短縮URLから緯度経度を取得する際の備忘録",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KujVeBDz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Maps%25E3%2581%25AE%25E7%259F%25AD%25E7%25B8%25AEURL%25E3%2581%258B%25E3%2582%2589%25E7%25B7%25AF%25E5%25BA%25A6%25E7%25B5%258C%25E5%25BA%25A6%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KujVeBDz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Maps%25E3%2581%25AE%25E7%259F%25AD%25E7%25B8%25AEURL%25E3%2581%258B%25E3%2582%2589%25E7%25B7%25AF%25E5%25BA%25A6%25E7%25B5%258C%25E5%25BA%25A6%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kumazo/articles/35215498b86939",
          "author": "kumazo",
          "description": "いつからか Windows では Python のインストールをサポートするようになった。\nPython 未インストールの状態で python コマンドを叩くと Windows ストアからのインストール画面が表示される。\nPS C:\\> python\nただ Windows ストア版では、pip でインストールしたコマンドへの PATH を通してくれないので自分でやる必要がある。\nストア版 Python の確認。\nPS C:\\> where.exe python\nC:\\Users\\myname\\AppData\\Local\\Microsoft\\WindowsApps\\python...",
          "link": "https://zenn.dev/kumazo/articles/35215498b86939",
          "publishedOn": "2023-08-22T01:24:57.000Z",
          "wordCount": 290,
          "title": "Windows ストア版 Python の pip でインストールしたコマンドに PATH を通したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NN7VW3SX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E7%2589%2588%2520Python%2520%25E3%2581%25AE%2520pip%2520%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AB%2520PATH%2520%25E3%2582%2592%25E9%2580%259A%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kumazo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeExoY1hMWjVQdlJYME5TRDNGbUVrWVZEOUk0VDE5UnJCb2dheTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NN7VW3SX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E7%2589%2588%2520Python%2520%25E3%2581%25AE%2520pip%2520%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AB%2520PATH%2520%25E3%2582%2592%25E9%2580%259A%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kumazo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeExoY1hMWjVQdlJYME5TRDNGbUVrWVZEOUk0VDE5UnJCb2dheTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knowledgework/articles/8beb4fb11efaa9",
          "author": "ざわきん/zawakin",
          "description": "TL;DR\nPythonライブラリ 「PromptoGen」 をリリースしました 🎉\nPromptoGenは、「LLMとPythonの間のギャップをシームレスに繋ぐことで、効率的で未来を見据えたコミュニケーションを実現する。」 というビジョンの元、\nあえて具体的なLLM実装への依存性をなくし、抽象化を行う ことで、\n今後のLLM進化について行きやすい基盤を作る OSSプロジェクトです。\nこの記事では、PromptoGen プロジェクトの紹介やライブラリの使い方を紹介します。\n\n\nドキュメント: https://promptogen.zawakin.dev/ja\nドキュメント(英語):...",
          "link": "https://zenn.dev/knowledgework/articles/8beb4fb11efaa9",
          "publishedOn": "2023-08-21T23:30:00.000Z",
          "wordCount": 2619,
          "title": "LLMとのコミュニケーションをより効率化するPythonライブラリ「PromptoGen」をリリースしました🎉",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aIhdceBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2582%2588%25E3%2582%258A%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258BPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CPromptoGen%25E3%2580%258D%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%258A%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2596%25E3%2582%258F%25E3%2581%258D%25E3%2582%2593%252Fzawakin%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4MWZhOWNhZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNDk4ZTQ3YmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aIhdceBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2582%2588%25E3%2582%258A%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258BPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CPromptoGen%25E3%2580%258D%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%258A%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2596%25E3%2582%258F%25E3%2581%258D%25E3%2582%2593%252Fzawakin%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4MWZhOWNhZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNDk4ZTQ3YmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ark_sakura/articles/86f4461a7acab0",
          "author": "ark-sakura",
          "description": "AtCoderの言語アップデートによりPythonもバージョンアップ。これまではpypyではnumpyのimport時点でエラーが出てpypy+numpyの組み合わせは使えなかった。アップデートでpypyでもnumpyをサポートしてくれたので、これでnumpy使った解法の提出が増える、と思ったが・・・\n\n アップデート後もpypyとnumpyの相性は悪く実用的でない\npypyでもnumpy, scipyのimportと関数が使えるようになったというだけで、numpyの速さが活きるかというとそんなことはなかった。\n10^8の配列でコードテストしてみるとpypy+numpyの組み合わせはメリ...",
          "link": "https://zenn.dev/ark_sakura/articles/86f4461a7acab0",
          "publishedOn": "2023-08-21T16:18:02.000Z",
          "wordCount": 368,
          "title": "AtCoder言語アップデート(2023年8月)後でもpypyでnumpyが使えない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JFqHkIz4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25282023%25E5%25B9%25B48%25E6%259C%2588%2529%25E5%25BE%258C%25E3%2581%25A7%25E3%2582%2582pypy%25E3%2581%25A7numpy%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ark-sakura%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZDZkMjVjODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JFqHkIz4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25282023%25E5%25B9%25B48%25E6%259C%2588%2529%25E5%25BE%258C%25E3%2581%25A7%25E3%2582%2582pypy%25E3%2581%25A7numpy%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ark-sakura%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZDZkMjVjODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/medchem_learner/articles/3699f3c1c3f1fb",
          "author": "AI MedChem Learner",
          "description": "１．はじめに\n少し前のことですが、とても興味深い記事を読みました。\nhttps://zenn.dev/seiyakitazume/articles/bc11bbd020cdfe\nタイトルにある通り、データサイエンス初心者がchatGPTのサポートを受けながらモデル構築を行い、SIGNATEコンペティションの上位にランクインした、というのです。\n筆者も本業でchatGPTを使うことはありますが、主な用途は「英語⇔日本語の翻訳」や「暇つぶしのお遊びレベル」でした。そのため本記事の内容は\nそうか、、こういう使い方があったか\nと目からウロコモノでした。\n前回記事に書いたように、筆者はプログ...",
          "link": "https://zenn.dev/medchem_learner/articles/3699f3c1c3f1fb",
          "publishedOn": "2023-08-21T15:19:25.000Z",
          "wordCount": 4171,
          "title": "chatGPT先生に教わる機械学習　～SIGNATE competition「医学論文の自動仕分けチャレンジ」編～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5BehrImg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E5%2585%2588%25E7%2594%259F%25E3%2581%25AB%25E6%2595%2599%25E3%2582%258F%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2580%25EF%25BD%259ESIGNATE%2520competition%25E3%2580%258C%25E5%258C%25BB%25E5%25AD%25A6%25E8%25AB%2596%25E6%2596%2587%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E4%25BB%2595%25E5%2588%2586%25E3%2581%2591%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2580%258D%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AI%2520MedChem%2520Learner%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MGUyZTQ2OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5BehrImg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E5%2585%2588%25E7%2594%259F%25E3%2581%25AB%25E6%2595%2599%25E3%2582%258F%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2580%25EF%25BD%259ESIGNATE%2520competition%25E3%2580%258C%25E5%258C%25BB%25E5%25AD%25A6%25E8%25AB%2596%25E6%2596%2587%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E4%25BB%2595%25E5%2588%2586%25E3%2581%2591%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2580%258D%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AI%2520MedChem%2520Learner%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MGUyZTQ2OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nano_sudo/articles/d9023c28c5cbc8",
          "author": "須藤ナノ",
          "description": "はじめに\nこんにちは! @nano_sudo です！\nzennの記事をqiitaの記事に変換するツールを作ってみました。\nzennの記事をqiitaに投稿する際に、手動でコピペするのが面倒だったので作りました。\n趣味の範疇で作ったものなので、互換性などは保証しません。ご了承ください。\n\n 仕組み\nzennとqiitaの記事は、どちらもmarkdown形式で書かれています。\nですので、変換すべき箇所は、frontmatterと本文の特殊な記法のみです。\n\n frontmatter\n例えば、この記事(zenn)のfrontmatterは以下のような形式です。\n---\ntitle: \"ze...",
          "link": "https://zenn.dev/nano_sudo/articles/d9023c28c5cbc8",
          "publishedOn": "2023-08-21T11:38:43.000Z",
          "wordCount": 3240,
          "title": "zennの記事をqiitaの記事に変換するツールを作ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FI8i9jgH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zenn%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592qiita%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A0%2588%25E8%2597%25A4%25E3%2583%258A%25E3%2583%258E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxZTllNTY0ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FI8i9jgH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zenn%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592qiita%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A0%2588%25E8%2597%25A4%25E3%2583%258A%25E3%2583%258E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxZTllNTY0ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/articles/51f268fae49a28",
          "author": "S.A",
          "description": "目次\n\n本記事の動機\n前記事の課題、および、本記事の実装内容の簡単な説明\n今回の学習データセット、および、実装環境\n機械翻訳前の正規化\nDeepLのAPIを用いた機械翻訳の実装\n文末語の整理\n単語の言い換え処理\n文章クラスタリングの実装と評価\n本記事のまとめ、および、次記事の予定\n参考文献\n\n\n 本記事の動機\n以前の記事では、transformerを用いて、ChatGPTに与える日本語のプログラミングの指示文のクラスタリングを実施しました。この記事ではクラスタリングが上手くいっていない点があり、正規化の方法の見直しが課題となっておりました。\n　自然言語処理の勉強をしている中で、別の記...",
          "link": "https://zenn.dev/shungo_a/articles/51f268fae49a28",
          "publishedOn": "2023-08-21T10:38:55.000Z",
          "wordCount": 4087,
          "title": "機械翻訳、および、述語などの単語の言い換えを組み合わせた文章クラスタリングの実装と評価",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZNq5AcXy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A9%259F%25E6%25A2%25B0%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2580%2581%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E3%2580%2581%25E8%25BF%25B0%25E8%25AA%259E%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AE%25E5%258D%2598%25E8%25AA%259E%25E3%2581%25AE%25E8%25A8%2580%25E3%2581%2584%25E6%258F%259B%25E3%2581%2588%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZNq5AcXy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A9%259F%25E6%25A2%25B0%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2580%2581%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E3%2580%2581%25E8%25BF%25B0%25E8%25AA%259E%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AE%25E5%258D%2598%25E8%25AA%259E%25E3%2581%25AE%25E8%25A8%2580%25E3%2581%2584%25E6%258F%259B%25E3%2581%2588%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/e96d8c1e132db4",
          "author": "たきろぐ",
          "description": "はじめに\nOverture Maps Foundationというものがあります。前回、位置データ (Placesデータ) をダウンロードし、中身を確認できたけど、うまくPandasのDataFrameに変換できなくて詰まっていました。\nhttps://zenn.dev/takilog/articles/b2c588753fb3aa\nこちらの記事では、データの整形をやってみた結果をまとめます。\n\n データの再確認\n\n Schemeの再確認\n前回の記事でも言及した通り、データの中身は Scheme のレポジトリに情報が書かれています。今回は位置データの名前やカテゴリ・位置（緯度経度）など...",
          "link": "https://zenn.dev/takilog/articles/e96d8c1e132db4",
          "publishedOn": "2023-08-21T09:58:03.000Z",
          "wordCount": 1024,
          "title": "Overture Maps Foundationのデータを活用したい (2): Placesデータの抽出と可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Nn3s9Gae--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Overture%2520Maps%2520Foundation%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%25282%2529%253A%2520Places%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%25A8%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Nn3s9Gae--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Overture%2520Maps%2520Foundation%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%25282%2529%253A%2520Places%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%25A8%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/230817-webapp-techs",
          "author": "knao124",
          "description": "2023年、server sideの言語選定はなにがいいのだろう？\npython or go or typescriptで考えたい\n\n\nAIとの親和性ならpython\n\n\n静的型付けならgoやtypescript\n\npythonでもやれなくはない\n\n\n\npythonはframework単位でもみないとか\n\n一旦fastapi決め打ちで\n\n\n\n\n ポイント\n\n 型\n\nfastapi\n\nPydranticがある(機能 - FastAPI)\n\n\ngo\n\n標準\n\n\ntypescript\n\n標準\n\n\n\n\n Dependency Injection\n\nfastapi\n\n強力なDIがあるらしい(機...",
          "link": "https://zenn.dev/knao124/articles/230817-webapp-techs",
          "publishedOn": "2023-08-21T08:12:51.000Z",
          "wordCount": 263,
          "title": "2023年のwebアプリのbackend言語選定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AZC9tL3---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2023%25E5%25B9%25B4%25E3%2581%25AEweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AEbackend%25E8%25A8%2580%25E8%25AA%259E%25E9%2581%25B8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AZC9tL3---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2023%25E5%25B9%25B4%25E3%2581%25AEweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AEbackend%25E8%25A8%2580%25E8%25AA%259E%25E9%2581%25B8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/solxyz_bso/articles/cloud_ide_introduction",
          "author": "Kojiro Ohara",
          "description": "!\n社内勉強用の記事を再編集したものです。\n\n\n TL;DR\n\nソフトウェア開発環境構築は初心者にやさしくない\nクラウドを使えば開発環境構築しなくていい\nまずは始めてみよう！\n\n\n 意外と面倒な開発環境の準備\nソフトウェア開発初心者や、新しい言語に挑戦する人を指導していると、頻繁に次のような発言を耳にします。\n「手順書通りに設定したのにエラーが出て動かないんです」\n大抵の場合、必要な環境設定が足りていなかったりと、些細な原因ですが、\n仕組みがよくわかっていない初心者にとっては大きな壁となります。\n\n もっと気軽に開発を始めてほしい\n指導者がいればこうした問題は解決できますが、独学で始めよ...",
          "link": "https://zenn.dev/solxyz_bso/articles/cloud_ide_introduction",
          "publishedOn": "2023-08-21T08:05:35.000Z",
          "wordCount": 467,
          "title": "無料のクラウド開発環境を利用しよう（Java, Python）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9273yd6U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2588Java%252C%2520Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%25AB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25BA%25EF%25BC%2588%25E4%25BA%258B%25E6%25A5%25AD%25E6%2588%25A6%25E7%2595%25A5%25E5%25AE%25A4%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kojiro%2520Ohara%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4MWMwN2FhYjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiZWJiYTJkNjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9273yd6U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2588Java%252C%2520Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%25AB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25BA%25EF%25BC%2588%25E4%25BA%258B%25E6%25A5%25AD%25E6%2588%25A6%25E7%2595%25A5%25E5%25AE%25A4%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kojiro%2520Ohara%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4MWMwN2FhYjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiZWJiYTJkNjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/nagayu71/articles/37f8dc30354018",
          "author": "Yuki",
          "description": "はじめに\nこの記事は筆者の現状の理解に基づいたネットワーク分析のチュートリアルです。タイトルにもあるように、分析の雰囲気を掴むことを目的としているため、PythonのコードをJupyter Notebookで実行しながら初歩的な分析を一通り体験する形をとっています。詳しく知りたくなった方向けに、最後にネットワーク科学のテキストや関連する記事、データセットなどをまとめています。\n本チュートリアルがネットワーク分析、そしてその理論的背景にあたるネットワーク科学に興味を持つきっかけとなれば嬉しいです。\n\n 世の中至る所にネットワーク\nネットワークとは、頂点（ノード）が枝（辺、リンク、エッジ...",
          "link": "https://zenn.dev/nagayu71/articles/37f8dc30354018",
          "publishedOn": "2023-08-21T07:54:49.000Z",
          "wordCount": 3599,
          "title": "ネットワーク分析の雰囲気をつかむ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FyqxE7nb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkMWRjOGE5MTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FyqxE7nb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkMWRjOGE5MTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pipon_tech_blog/articles/d8f51c7d672467",
          "author": "Tatsuya Otake",
          "description": "プログラミングの世界では、異なるプログラミング言語を使用して同じ機能を実現することがあります。しかし、新たなプログラミング言語を習得するには多くの労力と時間が必要になります。そこで本記事では、OpenAIのChatGPTを活用することで効率的に、Pythonコードを別の言語であるC#に書き直す方法を分かりやすく解説します。\n\n 目次\n\nはじめに\n既存のコードの理解\n新たなコードへの書き換え\n新たなコードの理解\n他の方法の模索\n注意点\nまとめ\n\n\n 1. はじめに\n異なる言語で同じ機能を実現するためには、新しい言語の文法や特性を学び、元のコードのロジックを適切に変換する必要があります。しか...",
          "link": "https://zenn.dev/pipon_tech_blog/articles/d8f51c7d672467",
          "publishedOn": "2023-08-21T07:24:17.000Z",
          "wordCount": 242,
          "title": "【基礎編】ChatGPTを用いた既存のコードを別の言語で書き直す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cY9fFgue--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2591ChatGPT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A5%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258D%25E7%259B%25B4%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEpipon%25E3%2581%25AE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Tatsuya%2520Otake%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y3k0N0tobGJqY3JGaDJGdDRxMUYwY3NnbkJ3MzNvbG1RNU5DUEM0bG9kODdnPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cY9fFgue--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2591ChatGPT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A5%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258D%25E7%259B%25B4%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEpipon%25E3%2581%25AE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Tatsuya%2520Otake%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y3k0N0tobGJqY3JGaDJGdDRxMUYwY3NnbkJ3MzNvbG1RNU5DUEM0bG9kODdnPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hayate0927/articles/dd2718e4121af6",
          "author": "Hayate",
          "description": "コード\n#必要なものをインポート\nfrom discord.ext import commands, tasks\nfrom datetime import time, timezone, timedelta\n\nJST = timezone(timedelta(hours=+9), \"JST\")\n\n#時刻をリストで設定\ntimes = [\n    time(hour=10, tzinfo=JST),\n    time(hour=22, minute=30, tzinfo=JST)\n]\n\n#my_taskの部分はお好きな名前にしてください\n@tasks.loop(time=times)\n...",
          "link": "https://zenn.dev/hayate0927/articles/dd2718e4121af6",
          "publishedOn": "2023-08-21T06:18:49.000Z",
          "wordCount": 245,
          "title": "discord.pyで指定の時刻に処理を実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1LAnXXDe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E3%2581%25A7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%25AE%25E6%2599%2582%25E5%2588%25BB%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hayate%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d6LUVxTy1zZW9iWjdoNlpSd0I4cktxN3ZBZzA5aGFPTWNEQk4tLXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1LAnXXDe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E3%2581%25A7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%25AE%25E6%2599%2582%25E5%2588%25BB%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hayate%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d6LUVxTy1zZW9iWjdoNlpSd0I4cktxN3ZBZzA5aGFPTWNEQk4tLXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/615e14fbc81650",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-288 A - Many A+B Problems\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    ab = getIntListRow(n)\n\n    for c in ab:\n        print(sum(c))\n\n\nif __name__ == \"__main__...",
          "link": "https://zenn.dev/hyperdb/articles/615e14fbc81650",
          "publishedOn": "2023-08-21T05:01:55.000Z",
          "wordCount": 310,
          "title": "［AtCoder］ABC-288｜A - Many A+B Problems",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jwe4x8pQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-288%25EF%25BD%259CA%2520-%2520Many%2520A%252BB%2520Problems%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jwe4x8pQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-288%25EF%25BD%259CA%2520-%2520Many%2520A%252BB%2520Problems%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2c7b0ec49fabd0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-288 B - Qualification Contest\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n, k = getIntMap()\n    s = getStringRow(n)\n    t = [w for w in s[0:k]]\n\n    t.sort()\n\n    for hn in t:\n       ...",
          "link": "https://zenn.dev/hyperdb/articles/2c7b0ec49fabd0",
          "publishedOn": "2023-08-21T05:01:54.000Z",
          "wordCount": 331,
          "title": "［AtCoder］ABC-288｜B - Qualification Contest",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S1KXPkXo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-288%25EF%25BD%259CB%2520-%2520Qualification%2520Contest%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S1KXPkXo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-288%25EF%25BD%259CB%2520-%2520Qualification%2520Contest%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazh/articles/01101_c_vs_python",
          "author": "日高一博",
          "description": "この記事の目的\n私の備忘録です。\n最近ようやくPythonを触りはじめました。\nC/C++ からプログラムをはじめてきた人間として、\n　「Pythonのこの書き方や仕様は分かりにくい、気持ち悪い」\nと思うところを記録していこうと思っています。\n結構数あったりするので。\n使いこなすようになれば慣れるところだとは思うので、初心の気持ちを書いておく場所ということで。\n今回は第一回。\n\n ポインタ周りに関する例\n「ポインタ」はC/C++において「難しい！！」という代表選手みたいに言われるものですが、ものすごく便利なもの、というより、これがないとプログラムが成り立たないものです。\n当然、Pyt...",
          "link": "https://zenn.dev/kazh/articles/01101_c_vs_python",
          "publishedOn": "2023-08-20T15:19:43.000Z",
          "wordCount": 1732,
          "title": "[C/C++勢からみるPythonの嫌なところ]（その１） - 多次元配列での隠れた「値渡し」と「参照渡し」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jhlni-Di--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BC%252FC%252B%252B%25E5%258B%25A2%25E3%2581%258B%25E3%2582%2589%25E3%2581%25BF%25E3%2582%258BPython%25E3%2581%25AE%25E5%25AB%258C%25E3%2581%25AA%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%255D%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25EF%25BC%2589%2520-%2520%25E5%25A4%259A%25E6%25AC%25A1%25E5%2585%2583%25E9%2585%258D%25E5%2588%2597%25E3%2581%25A7%25E3%2581%25AE%25E9%259A%25A0%25E3%2582%258C%25E3%2581%259F%25E3%2580%258C%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2580%258D%25E3%2581%25A8%25E3%2580%258C%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2597%25A5%25E9%25AB%2598%25E4%25B8%2580%25E5%258D%259A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0YyV0N0TktCQmpjb1hlMkRqUjVDQS1sb3hUNHhCcUlrTmRxQ3ZGWTM0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jhlni-Di--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BC%252FC%252B%252B%25E5%258B%25A2%25E3%2581%258B%25E3%2582%2589%25E3%2581%25BF%25E3%2582%258BPython%25E3%2581%25AE%25E5%25AB%258C%25E3%2581%25AA%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%255D%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25EF%25BC%2589%2520-%2520%25E5%25A4%259A%25E6%25AC%25A1%25E5%2585%2583%25E9%2585%258D%25E5%2588%2597%25E3%2581%25A7%25E3%2581%25AE%25E9%259A%25A0%25E3%2582%258C%25E3%2581%259F%25E3%2580%258C%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2580%258D%25E3%2581%25A8%25E3%2580%258C%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2597%25A5%25E9%25AB%2598%25E4%25B8%2580%25E5%258D%259A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0YyV0N0TktCQmpjb1hlMkRqUjVDQS1sb3hUNHhCcUlrTmRxQ3ZGWTM0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazh/articles/01001_mac_vscode_python_venv_enviroment",
          "author": "日高一博",
          "description": "環境と背景\nMacbook M2でHomebrewを使ってPythonをインストール。\nその後、任意のフォルダにvenvで仮想環境を作成。\nしかし、VSCodeのインタプリタ選択のリストに作成したvenv環境が出てこない。\nこのインタプリタ選択のリストに作成したvenv環境を表示させる方法をメモしておく。\n※ 赤丸の場所をクリックすると、上に「インタープリターの選択」が出てくる。\n\n\n 設定方法\nsettings.jsonファイルに以下を書き込む。\n// Folders in your home directory to look into for virtual environme...",
          "link": "https://zenn.dev/kazh/articles/01001_mac_vscode_python_venv_enviroment",
          "publishedOn": "2023-08-20T15:19:43.000Z",
          "wordCount": 372,
          "title": "[備忘録] - macのVSCodeで作成したpythonのvenv環境が利用できるインタプリタ一覧に出てこなかった時の設定方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bwHXpVvg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255D%2520-%2520mac%25E3%2581%25AEVSCode%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259Fpython%25E3%2581%25AEvenv%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%258C%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%2593%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2597%25A5%25E9%25AB%2598%25E4%25B8%2580%25E5%258D%259A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0YyV0N0TktCQmpjb1hlMkRqUjVDQS1sb3hUNHhCcUlrTmRxQ3ZGWTM0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bwHXpVvg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255D%2520-%2520mac%25E3%2581%25AEVSCode%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259Fpython%25E3%2581%25AEvenv%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%258C%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%2593%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2597%25A5%25E9%25AB%2598%25E4%25B8%2580%25E5%258D%259A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0YyV0N0TktCQmpjb1hlMkRqUjVDQS1sb3hUNHhCcUlrTmRxQ3ZGWTM0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/toratti/articles/82ad894b6422d8",
          "author": "とらっち",
          "description": "やったこと\nMacBookのナチュラルスクロールの設定をPythonコードで変更できるように設定しました．\n多分n番煎じですが…\n\n 実施に至った経緯\n外付けマウスをつけるとナチュラルスクロールに違和感を覚えたからです．余談ですが使っているマウスはローラーマウスです．\n学生時代からMacBookを一応使っていますが，外付けのマウスを接続せずに使っていたため気づかなかった出来事です．\n\n 環境\nMacBook Air M1 2020\nmac OS Ventura\nPython 3.9.12\n\n なぜPythonなのか？\n普通にシェルで良いですね．結局subprocessでコマンド呼び出...",
          "link": "https://zenn.dev/toratti/articles/82ad894b6422d8",
          "publishedOn": "2023-08-20T13:18:00.000Z",
          "wordCount": 689,
          "title": "MacBookでナチュラルスクロールを弄るwith Python",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bRBG7BxJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MacBook%25E3%2581%25A7%25E3%2583%258A%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25BC%2584%25E3%2582%258Bwith%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2589%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWE1ZTI0NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bRBG7BxJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MacBook%25E3%2581%25A7%25E3%2583%258A%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25BC%2584%25E3%2582%258Bwith%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2589%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWE1ZTI0NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aew2sbee/articles/django-rest-framework-postgres",
          "author": "ふるた なおき🥝",
          "description": "はじめに\nDjangoのデフォルトDB(db.sqlite3)からpostgresqlに変更する方法を学習しましたので、執筆します。\n\n 前提条件\n下記記事の作業が完了している前提です。\n\n\n 1. psycopg2-binaryをインストールする\npsycopg2-binaryとは？\n\nPythonプログラムとPostgreSQLデータベースとの間で通信を行うためのライブラリです。\n\n\n下記コマンドを実行し、インストールする\n\npip install psycopg2-binary\n\nインストールされているか確認する\n\nName: psycopg2-binary\nVersion: ...",
          "link": "https://zenn.dev/aew2sbee/articles/django-rest-framework-postgres",
          "publishedOn": "2023-08-20T11:59:01.000Z",
          "wordCount": 470,
          "title": "【Django】db.sqlite3からpostgresqlに変更する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B8vGT15P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Django%25E3%2580%2591db.sqlite3%25E3%2581%258B%25E3%2582%2589postgresql%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B8vGT15P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Django%25E3%2580%2591db.sqlite3%25E3%2581%258B%25E3%2582%2589postgresql%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit18",
          "author": "derwind",
          "description": "目的\n量子畳み込みニューラル・ネットワーク を GPU 実装に乗せ換えようとして色々行き詰まったので、オリジナルを試してみようという内容。\n\n 量子畳み込みニューラル・ネットワーク\nCong, I., Choi, S. & Lukin, M.D. Quantum convolutional neural networks. Nat. Phys. 15, 1273–1278 (2019) で提案されたアーキテクチャ。原論文は読んでいてよく分からなくなったので、今回は忘れてしまう。使うのは\n\nQiskit: 量子畳み込みニューラル・ネットワーク\n\nTensorFlow Quant...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit18",
          "publishedOn": "2023-08-20T11:07:18.000Z",
          "wordCount": 1714,
          "title": "Qiskit で遊んでみる (18) — Quantum Convolutional Networks その 1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4A_OJol2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252818%2529%2520%25E2%2580%2594%2520Quantum%2520Convolutional%2520Networks%2520%25E3%2581%259D%25E3%2581%25AE%25201%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4A_OJol2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252818%2529%2520%25E2%2580%2594%2520Quantum%2520Convolutional%2520Networks%2520%25E3%2581%259D%25E3%2581%25AE%25201%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojyo21/articles/e32246f626e67b",
          "author": "okojyo21",
          "description": "はじめに・・\nこの記事を初回に記述したのは、社内SEとして業務に従事していた2021年ごろのお話です。\nvue3 + python fastapi での社内アプリケーションとして、spa にて 一通りの完成＆リリースまでは実施できました。現在では自身の仕事環境も変わってしまっているので、参考情報として記載しておきます。\n\n Web アプリのバックエンドに、なぜ Python を選んだのか？\nアプリケーションの動作環境・開発環境を決めるのに、言語や方式の選定は重要です。\n本来であれば、私自身はマイクロソフトの技術で育ってきたこともあり、C#ならびに、ASP.Net Core という組み...",
          "link": "https://zenn.dev/okojyo21/articles/e32246f626e67b",
          "publishedOn": "2023-08-20T10:15:31.000Z",
          "wordCount": 374,
          "title": "クラサバアプリ脳で Webアプリを学ぶ(vue + python) ４０代後半　のメモ その5 バックエンドにPythonを選んだ理由",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qmhxu0I5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE5%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25ABPy...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qmhxu0I5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE5%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25ABPy...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojyo21/articles/19557a0118e8fc",
          "author": "okojyo21",
          "description": "はじめに・・\nこの記事を初回に記述したのは、社内SEとして業務に従事していた2021年ごろのお話です。\nvue3 + python fastapi での社内アプリケーションとして、spa にて 一通りの完成＆リリースまでは実施できました。現在では自身の仕事環境も変わってしまっているので、参考情報として記載しておきます。\nvue3の参照書籍としては\nVue 3 フロントエンド開発の教科書\nhttps://gihyo.jp/book/2022/978-4-297-13072-5\nが、2023年現在では、非常にわかりやすい書籍と思います（2021年当時に自前で苦しみながら評価したことの大半...",
          "link": "https://zenn.dev/okojyo21/articles/19557a0118e8fc",
          "publishedOn": "2023-08-20T10:15:30.000Z",
          "wordCount": 380,
          "title": "クラサバアプリ脳で Webアプリを学ぶ(vue.js + python) ４０代後半　のメモ その１",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2DSwzcmy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue.js%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2DSwzcmy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue.js%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/8be490a0327cb1",
          "author": "Shun",
          "description": "はじめに\n\n\n以前の記事 でメトロポリス・ヘイスティング法のアルゴリズムの紹介と詳細釣り合い条件が成立することの証明を行なった\n折角記事にしたので, 実装も行いたいと思う. なお, 今回はPythonで実装するが, アルゴリズムを追うためにライブラリなどは極力用いないようにする.\n題材として森賀・木田・須山(2022) 1.4.8章の問題を取り上げ実際にシュミレーションを行なった.\n\n\n メトロポリス-ヘイスティング法のアルゴリズム\n前回の記事からの再掲であるが, メトロポリス-ヘイスティング法のアルゴリズムは以下のようになる.\n\n候補先\\mathbf{x}'を提案分布Q(\\math...",
          "link": "https://zenn.dev/shundeveloper/articles/8be490a0327cb1",
          "publishedOn": "2023-08-20T10:00:00.000Z",
          "wordCount": 2594,
          "title": "マルコフ連鎖モンテカルロを用いたベイズ推定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--p09iFPRT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E9%2580%25A3%25E9%258E%2596%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E6%258E%25A8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shun%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--p09iFPRT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E9%2580%25A3%25E9%258E%2596%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E6%258E%25A8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shun%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/omyu_t/articles/97659131b93e92",
          "author": "omyu-t",
          "description": "概要\nDocker環境(docker-compose)での開発かつパッケージ管理ツールとしてpoetryを使用する際に、インストールしているはずのパッケージがPyCharm上で'Unresolved reference'となったので、その対応を備忘録として残す。\n\n 手順\n\n 仮想環境のパスを取得\npoetry env info -pで仮想環境のパスを取得する。\n\n Python Interpreterを設定する。\n\nPyCharmのPreferences -> Project:~ -> Python Interpreterを開く。\nAdd Interpreter -&g...",
          "link": "https://zenn.dev/omyu_t/articles/97659131b93e92",
          "publishedOn": "2023-08-20T09:58:24.000Z",
          "wordCount": 130,
          "title": "Dockerを使用した際に、PyCharmで'Unresolved reference'とエラーが出る場合の対応",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_gtSLyvJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AB%25E3%2580%2581PyCharm%25E3%2581%25A7%2527Unresolved%2520reference%2527%25E3%2581%25A8%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:omyu-t%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1NjkxOWU5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_gtSLyvJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AB%25E3%2580%2581PyCharm%25E3%2581%25A7%2527Unresolved%2520reference%2527%25E3%2581%25A8%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:omyu-t%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1NjkxOWU5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/e17e298d0b0b9a",
          "author": "osn_Lofi",
          "description": "日本語の形態素解析では、辞書が大事ですよね。\nMeCab用の辞書Neologdは、最新の言葉や固有名詞、スラング、インターネット上の新しい言葉などを網羅的にカバーする優秀な辞書です。\nしかしながら、Googleコラボで使おうとして、これまで通ったコードを入れても、エラーが出て使えない！なんてことが多々あります。\n私がいろいろ試した結果、2023年8月現在、以下のコードを入力すれば、GoogleコラボでNeologd辞書が使えますので、ご紹介します。\n\n ライブラリーのインストール\n\n時間かかります\n\n# 形態素分析ライブラリーMeCab と 辞書(mecab-ipadic-NEologd...",
          "link": "https://zenn.dev/robes/articles/e17e298d0b0b9a",
          "publishedOn": "2023-08-20T08:46:21.000Z",
          "wordCount": 401,
          "title": "【自然言語処理】GoogleコラボでMeCabのNeologd辞書を使えるようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CgjSfzAD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591Google%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2581%25A7MeCab%25E3%2581%25AENeologd%25E8%25BE%259E%25E6%259B%25B8%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CgjSfzAD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591Google%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2581%25A7MeCab%25E3%2581%25AENeologd%25E8%25BE%259E%25E6%259B%25B8%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/usma11dia0/articles/solve-alds-1-7-d",
          "author": "usma11dia0",
          "description": "本記事ではAizu Online Judgeより、ALDS1_7_Dの考え方と実際の解答をpythonで解説します。問題のリンク先は下記となります。\nhttps://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ALDS1_7_D&lang=ja\n\n 方針\nALDS1_7_Dの問題は、先行順巡回と中間順巡回で得られる節点の列から全体の二分木が構築できるという点に気づけるかがポイントになります。\n全体の二分木が出来上がったら、あとはその木に対して後行順巡回の節点の列を求めて完了です。\n\n 先行順巡回と中間順巡回から全体の二分木を...",
          "link": "https://zenn.dev/usma11dia0/articles/solve-alds-1-7-d",
          "publishedOn": "2023-08-20T08:03:12.000Z",
          "wordCount": 1515,
          "title": "【AOJ解説】ALDS1_7_Dの解法(Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uRxo1xGl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AOJ%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591ALDS1_7_D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B3%2595%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:usma11dia0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MTU3NmFmM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uRxo1xGl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AOJ%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591ALDS1_7_D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B3%2595%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:usma11dia0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MTU3NmFmM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yamaden/articles/220969647cb9c9",
          "author": "naoki matsuzaki",
          "description": "Python のテストとして馴染み深いライブラリで「Pytest」があります。\nhttps://github.com/pytest-dev/pytest\nPytest は、ユニットテストを支援するためのモジュールとして準備されています。\nまた、一般的にテストは「ユニットテスト」と「結合テスト」というものが存在します。\n例えば、DB の Model に書かれているメソッドやデータ登録が想定した結果になることを確認するのがユニットテストとして扱われています。\nあくまでシステム全体としてというよりは、機能として問題ないかをチェックするテストです。\n一方、結合テストはユニットテストを経た構成要素...",
          "link": "https://zenn.dev/yamaden/articles/220969647cb9c9",
          "publishedOn": "2023-08-20T04:33:04.000Z",
          "wordCount": 3655,
          "title": "Pytestを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iYzxG0mH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytest%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2587%25E3%2583%25B3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:naoki%2520matsuzaki%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2YmRiMzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNzg0Y2M2NTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iYzxG0mH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytest%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2587%25E3%2583%25B3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:naoki%2520matsuzaki%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2YmRiMzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNzg0Y2M2NTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/f38f2bdc67da26",
          "author": "osn_Lofi",
          "description": "1.はじめに\n\nテキストデータは、ニュース記事やユーザーレビューなど、様々な場面で利用されています。\nテキストデータは非構造化データであるため、これまでは、分析が難しいという課題がありましたが、自然言語処理技術の発達により、分析が可能になってきました。\nその中でも、Pythonライブラリーのscattertextは、文書間の語句の出現頻度を散布図で可視化することで、文書の特徴や差異を掴むことができる優れたツールです。\n\nこのブログでは、scattertextの概要や活用方法、Pythonでの実装方法を紹介します。\n!\nPythonでの実装にあたってはGoogleColabora...",
          "link": "https://zenn.dev/robes/articles/f38f2bdc67da26",
          "publishedOn": "2023-08-20T04:16:08.000Z",
          "wordCount": 1966,
          "title": "【Python】Scattertextで2つのテキストデータの特徴をつかもう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X5U7Q80l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Scattertext%25E3%2581%25A72%25E3%2581%25A4%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%2589%25B9%25E5%25BE%25B4%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2582%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X5U7Q80l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Scattertext%25E3%2581%25A72%25E3%2581%25A4%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%2589%25B9%25E5%25BE%25B4%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2582%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/c2c65d9aef7562",
          "author": "osn_Lofi",
          "description": "自然言語処理の分野で、分析を行ったり、モデルを試すのに、どうしても必要になるのが、テキストのデータセットです。\nそんなお悩みにこたえてくれるのがlivedoorニュースコーパスです。\n9つのカテゴリー別に複数の記事があることから、分類タスクや感情分析など、自然言語処理のさまざまなタスクに活用できます。\nここでは、Livedoorニュースのデータセットをダウンロードして、CSVファイルにする方法を解説していきます。\n!\nGoogleコラボでやっていきます\n\n\n Livedoorニュースのデータセットの概要\n株式会社ロンウイットが、収集しているデータです。\n登録不要で、すぐにダウンロードでき...",
          "link": "https://zenn.dev/robes/articles/c2c65d9aef7562",
          "publishedOn": "2023-08-20T02:23:04.000Z",
          "wordCount": 735,
          "title": "【Python】Livedoorニュースのデータセットを取得し、CSVファイルにする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cog9krWG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Livedoor%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2580%2581CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cog9krWG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Livedoor%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2580%2581CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tsuzukia/articles/f886a93fc1f2fa",
          "author": "TAKEZO",
          "description": "8月18日に東京大学松尾研究室から100億パラメータのLLM「weblab-10B」がオープンソースで公開されましたね！日本発のLLMオープンソースは複数ありますが、100億というのは現時点で最大級ではないでしょうか。\nhttps://huggingface.co/matsuo-lab/\nLLMをPCで動かすにはパラメータが多くなればなるほどより高いPCスペックが要求されますが、weblab-10bは自宅PCでも動かせるのでしょうか！？試してみました。\n\n PCスペック\nCPU:core i7 12世代\nGPU:RTX 3060 VRAM:12GB\nRAM:32GB 5世代\nCドライブ:...",
          "link": "https://zenn.dev/tsuzukia/articles/f886a93fc1f2fa",
          "publishedOn": "2023-08-19T14:48:31.000Z",
          "wordCount": 759,
          "title": "weblab-10bは自宅PCでも動かせるのか！？試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OwWxsv62--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:weblab-10b%25E3%2581%25AF%25E8%2587%25AA%25E5%25AE%2585PC%25E3%2581%25A7%25E3%2582%2582%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%2581%25EF%25BC%259F%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKEZO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYmY4NGExNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OwWxsv62--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:weblab-10b%25E3%2581%25AF%25E8%2587%25AA%25E5%25AE%2585PC%25E3%2581%25A7%25E3%2582%2582%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%2581%25EF%25BC%259F%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKEZO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYmY4NGExNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kanaotto/articles/cbb534a9a38711",
          "author": "つん",
          "description": "イントロダクション\n\n pytest とは\npytest は、Python のテストフレームワークであり、Python プロジェクトのテストを効率的に行うための強力なツールです。\n\n\n簡単なテスト記述\npytest は、テストケースを記述するために簡潔で自然な構文を提供します。テスト関数は通常、test_ で始まる関数名を持ち、アサーションを使用してテスト条件を表現します。\n\n\n自動テスト検出\npytest は、テスト関数を自動的に検出します。テストファイルやテストスイートを手動で登録する必要はありません。テストケースがコンフォーミングな名前規則に従っていれば、自動的に実行されます。...",
          "link": "https://zenn.dev/kanaotto/articles/cbb534a9a38711",
          "publishedOn": "2023-08-19T14:23:29.000Z",
          "wordCount": 1275,
          "title": "初めて pytest でテストを書いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LPa5fRdF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%2520pytest%2520%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5Q1Zka1FDZy1pNGx6RnMzc2VleU5UU1dxbENmRmRaWlFvZXo0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LPa5fRdF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%2520pytest%2520%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5Q1Zka1FDZy1pNGx6RnMzc2VleU5UU1dxbENmRmRaWlFvZXo0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pompompudding/articles/75594a86f12e9a",
          "author": "アルパカ",
          "description": "ネストされたdictやjsonからdataclassを作成するのは面倒くさい\nネストされたdictやjsonからdataclassを作成するのは面倒くさいです.\n例えば以下のようなdictがあったとします.\ndata = {\n    \"name\": \"hoge\",\n    \"age\": 20,\n    \"address\": {\n        \"country\": \"Japan\",\n        \"city\": \"Tokyo\",\n        \"street\": \"hoge street\",\n    },\n}\nこのdictから以下のようなdataclassを作成したいとします.\n...",
          "link": "https://zenn.dev/pompompudding/articles/75594a86f12e9a",
          "publishedOn": "2023-08-19T11:37:40.000Z",
          "wordCount": 517,
          "title": "ネストされたdictやjsonからdataclassを作成したいならpydanticが便利",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pmXO0oKJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fdict%25E3%2582%2584json%25E3%2581%258B%25E3%2582%2589dataclass%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2582%2589pydantic%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2591%25E3%2582%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyOTc2YzIzOTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pmXO0oKJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fdict%25E3%2582%2584json%25E3%2581%258B%25E3%2582%2589dataclass%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2582%2589pydantic%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2591%25E3%2582%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyOTc2YzIzOTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/3w36zj6/articles/d3894e83cb7423",
          "author": "3w36zj6",
          "description": "準備\n\n NFCリーダー\n学生証の読み取りに使用します。後述するnfcpyに対応しているデバイスを用意しましょう。例えば、以下のソースコードのusb_device_mapに存在しないSonyのRC-S300はnfcpyに対応していないので、デバイスを新規購入する際は注意してください。\nhttps://github.com/nfcpy/nfcpy/blob/master/src/nfc/clf/device.py#L42-L52\n\n nfcpy\nPythonでNFCリーダーを扱うライブラリです。libusbに依存しています。\nhttps://github.com/nfcpy/nfcpy...",
          "link": "https://zenn.dev/3w36zj6/articles/d3894e83cb7423",
          "publishedOn": "2023-08-19T09:22:32.000Z",
          "wordCount": 1667,
          "title": "NFCリーダー+Python+nfcpyで学生証の情報を読み取る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kEiIhbMO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NFC%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%252BPython%252Bnfcpy%25E3%2581%25A7%25E5%25AD%25A6%25E7%2594%259F%25E8%25A8%25BC%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:3w36zj6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4OGYxMDM1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kEiIhbMO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NFC%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%252BPython%252Bnfcpy%25E3%2581%25A7%25E5%25AD%25A6%25E7%2594%259F%25E8%25A8%25BC%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:3w36zj6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4OGYxMDM1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hasegawasatoshi/articles/f4708b23077cf7",
          "author": "Satoshi Hasegawa",
          "description": "Raspberry Pi に DHT22 (AM2302) を接続して温度・湿度を計測してみようと思います。\n\n DHT22 (AM2302) について\nDHT22 (AM2302) は Arduino や Raspberry Pi で電子工作するときには非常にポピュラーな温湿度計のようです。\n秋月電子や Amazon で様々なものが購入できますが、今回は Amazon でこちらを購入しました。\nhttps://www.amazon.co.jp/gp/product/B07CSNMYN7/\nデータシートはこちらになります。\nhttp://dlnmh9ip6v2uc.cloudfront....",
          "link": "https://zenn.dev/hasegawasatoshi/articles/f4708b23077cf7",
          "publishedOn": "2023-08-18T15:00:20.000Z",
          "wordCount": 834,
          "title": "Rasperry Pi に DHT22 を接続して温度・湿度を計測する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Z4Sq6yXy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rasperry%2520Pi%2520%25E3%2581%25AB%2520DHT22%2520%25E3%2582%2592%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2597%25E3%2581%25A6%25E6%25B8%25A9%25E5%25BA%25A6%25E3%2583%25BB%25E6%25B9%25BF%25E5%25BA%25A6%25E3%2582%2592%25E8%25A8%2588%25E6%25B8%25AC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Satoshi%2520Hasegawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqazZTazNrOVFnWUh2elRDb3pSYWhsMEExd2hQYUhZN0RRc3F0cUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Z4Sq6yXy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rasperry%2520Pi%2520%25E3%2581%25AB%2520DHT22%2520%25E3%2582%2592%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2597%25E3%2581%25A6%25E6%25B8%25A9%25E5%25BA%25A6%25E3%2583%25BB%25E6%25B9%25BF%25E5%25BA%25A6%25E3%2582%2592%25E8%25A8%2588%25E6%25B8%25AC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Satoshi%2520Hasegawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqazZTazNrOVFnWUh2elRDb3pSYWhsMEExd2hQYUhZN0RRc3F0cUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/recommend_books2",
          "author": "Torachi0401",
          "description": "Pythonを学びたい方へ、オススメの学習書9選\nPython初心者の私が実際に学習に利用した書籍から、おすすめの9冊をピックアップしました。私はこの書籍を通じてPythonの基礎から応用まで効率よく学ぶことができました。本記事が、Pythonを学習したいと考えている方のお役に立てば幸いです。\n\n Python2年生 スクレイピングのしくみ 体験してわかる!会話でまなべる!\n\n\n評価:4点★★★★☆\nおすすめポイント:初心者にもわかりやすい解説、実践を通じて学べる\nマイナスポイント:スクレイピングに特化し、Python全般の解説が不十分\n総評:スクレイピングに興味がある初心者におすす...",
          "link": "https://zenn.dev/torachi0401/articles/recommend_books2",
          "publishedOn": "2023-08-18T14:31:47.000Z",
          "wordCount": 325,
          "title": "Pythonの独学におすすめの書籍 その２",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OcHIL9cA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%259B%25B8%25E7%25B1%258D%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OcHIL9cA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%259B%25B8%25E7%25B1%258D%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pictureken/articles/5a3a94ed960b0a",
          "author": "pictureken",
          "description": "はじめに\n機械学習モデルの基本的な考え方である偏りと分散のトレードオフは，深層学習モデルでは成り立たないとされています．こういった背景から，深層学習モデルの挙動分析において偏りと分散による分析は重要になっています．本記事では，近年の偏りと分散のトレードオフの簡単な動向とPythonによる実装をまとめたものになります．\n\n 偏りと分散のトレードオフ（Bias-Variance Tradeoff）とは\n偏りと分散のトレードオフ[1]とは学習モデルの規模[2]の変化に伴う偏りと分散の関係性のことを指します．偏りと分散のトレードオフは推定値と真値との二乗誤差(MSE)を以下のような偏りと分散...",
          "link": "https://zenn.dev/pictureken/articles/5a3a94ed960b0a",
          "publishedOn": "2023-08-18T08:33:46.000Z",
          "wordCount": 5426,
          "title": "近年の偏りと分散のトレードオフについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fMnRfXjm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25BF%2591%25E5%25B9%25B4%25E3%2581%25AE%25E5%2581%258F%25E3%2582%258A%25E3%2581%25A8%25E5%2588%2586%25E6%2595%25A3%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25AA%25E3%2583%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pictureken%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MWE5Yjk1NTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fMnRfXjm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25BF%2591%25E5%25B9%25B4%25E3%2581%25AE%25E5%2581%258F%25E3%2582%258A%25E3%2581%25A8%25E5%2588%2586%25E6%2595%25A3%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25AA%25E3%2583%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pictureken%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MWE5Yjk1NTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yyu/articles/3b87c9499fddde",
          "author": "YOSHIMURA Yuu",
          "description": "はじめに\nRustで作ったライブラリーを利用するときにはPyO3が便利である。これを用いると簡単にRust実装をPythonから利用することができる。このようなRust実装のライブラリーはWheel形式で各アーキテクチャー（x86_64向けなど）ごとにバイナリ形式で配布すると、利用者がRust環境を構築しなくてもよくなって便利である。この記事ではPyO3の簡単な使い方を解説し、PyO3が配布しているMaturinをPoetryから利用してPythonからRust実装をテストしたり、Wheel作成する方法を述べる。\nこの記事で利用するコードは下記のGitHubリポジトリーで公開されてい...",
          "link": "https://zenn.dev/yyu/articles/3b87c9499fddde",
          "publishedOn": "2023-08-18T07:16:37.000Z",
          "wordCount": 1404,
          "title": "PyO3 + PoetryでPythonからRust実装を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OMW1bbvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyO3%2520%252B%2520Poetry%25E3%2581%25A7Python%25E3%2581%258B%25E3%2582%2589Rust%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YOSHIMURA%2520Yuu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laenQzajlqNGY3NFNiV2ppMUxoeGZNbE5PNmVhcXJLY2cza1JaTFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OMW1bbvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyO3%2520%252B%2520Poetry%25E3%2581%25A7Python%25E3%2581%258B%25E3%2582%2589Rust%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YOSHIMURA%2520Yuu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laenQzajlqNGY3NFNiV2ppMUxoeGZNbE5PNmVhcXJLY2cza1JaTFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9e89a6c3f82150",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-287 B - Postal Card\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n, m = getIntMap()\n    s = getStringRow(n)\n    t = getStringRow(m)\n\n    r = [w[-3:] for w in s]\n\n    c = 0\n    for w in ...",
          "link": "https://zenn.dev/hyperdb/articles/9e89a6c3f82150",
          "publishedOn": "2023-08-18T04:39:11.000Z",
          "wordCount": 371,
          "title": "［AtCoder］ABC-287｜B - Postal Card",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qXrl_80m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-287%25EF%25BD%259CB%2520-%2520Postal%2520Card%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qXrl_80m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-287%25EF%25BD%259CB%2520-%2520Postal%2520Card%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/35c1e129b376a8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-287 A - Majority\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    s = getStringRow(n)\n\n    print('Yes' if s.count('For') > (n / 2) else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/35c1e129b376a8",
          "publishedOn": "2023-08-18T04:39:11.000Z",
          "wordCount": 298,
          "title": "［AtCoder］ABC-287｜A - Majority",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jGcav-UJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-287%25EF%25BD%259CA%2520-%2520Majority%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jGcav-UJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-287%25EF%25BD%259CA%2520-%2520Majority%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zakkie/articles/75b6a4d8b00b4a",
          "author": "zakkie",
          "description": "FastAPI で、\n\n何かリクエストを受けたら、\nプロセスを起動して、\nそのプロセスの出力を WebSocket で流して\nブラウザに表示する\n\nというのをやってみました。\nFastAPI と、起動したプロセスの間の通信は標準入出力でやりとりします。\n\n 実装\nimport asyncio\nimport atexit\n\nfrom fastapi import FastAPI, WebSocket\nfrom fastapi.responses import HTMLResponse\nfrom websockets.exceptions import ConnectionClosed\n\na...",
          "link": "https://zenn.dev/zakkie/articles/75b6a4d8b00b4a",
          "publishedOn": "2023-08-18T00:16:56.000Z",
          "wordCount": 776,
          "title": "FastAPI: プロセスを起動し、その出力を WebSocket でブラウザに流す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yueZ_8_B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%253A%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2580%2581%25E3%2581%259D%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%2520WebSocket%2520%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AB%25E6%25B5%2581%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zakkie%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yueZ_8_B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%253A%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2580%2581%25E3%2581%259D%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%2520WebSocket%2520%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AB%25E6%25B5%2581%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zakkie%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tsuzukia/articles/3fbf91647d50d4",
          "author": "TAKEZO",
          "description": "最近streamlitが熱いです！どうやらstreamlitとLangChainがコラボしているみたいです。\nhttps://blog.streamlit.io/langchain-streamlit/\nその中でもAgentが実装出来る機能が公開されていました。早速試してみましょう！\n\n\n Streamlitとは？\nStreamlitは、PythonでWebアプリケーションを素早く作成するためのオープンソースライブラリです。データ分析、可視化、機械学習モデルのデモなどに特に適しており、コーディングの専門知識がなくても使いやすいツールです。\nhttps://streamlit.io/\n\n ...",
          "link": "https://zenn.dev/tsuzukia/articles/3fbf91647d50d4",
          "publishedOn": "2023-08-17T16:43:28.000Z",
          "wordCount": 1254,
          "title": "StreamlitでAgentアプリを作成しよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZCNKJmoH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7Agent%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKEZO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYmY4NGExNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZCNKJmoH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7Agent%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKEZO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYmY4NGExNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ssfuno/articles/cf7dd6f34f5aac",
          "author": "すふー",
          "description": "イントロダクション\nPythonでWordを扱えるpython-docxライブラリですが、テーブル全体のスタイルを変更するのは容易な一方で、テーブルの罫線を柔軟にカスタマイズするのは意外と難しいです。ありがたいことに便利な関数を公開してくださっている方がいらっしゃるのですが、日本語で紹介している記事が見当たらなかったので、簡単な利用例を掲載したいと思います。\n\n 動作環境\n\nWindows 11\nPython 3.11.2\npython-docx 0.8.11\n\n\n コードと実行結果\nfrom docx import Document\nfrom docx.oxml import Ox...",
          "link": "https://zenn.dev/ssfuno/articles/cf7dd6f34f5aac",
          "publishedOn": "2023-08-17T14:11:44.000Z",
          "wordCount": 1070,
          "title": "python-docxでテーブルの罫線を細かく設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I3GLNhbu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python-docx%25E3%2581%25A7%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AE%25E7%25BD%25AB%25E7%25B7%259A%25E3%2582%2592%25E7%25B4%25B0%25E3%2581%258B%25E3%2581%258F%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I3GLNhbu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python-docx%25E3%2581%25A7%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AE%25E7%25BD%25AB%25E7%25B7%259A%25E3%2582%2592%25E7%25B4%25B0%25E3%2581%258B%25E3%2581%258F%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/blueman/articles/0c74c460ae53d0",
          "author": "ブルーマン",
          "description": "この記事はQiitaの記事の転載です!!\n元記事はこちら\nhttps://qiita.com/blueman/items/66ef82e3bf03dfca62bb\nX(Twitter)もやっているのでよろしければこちらもどうぞ\nX(Twitter)について\nhttps://twitter.com/0ca00118726208m\n!\nX(Twitter)では、Qiitaの新着記事の通知やおススメの理工学書の紹介をツイートしてます!!\n\n\nブログもやっているのでよろしければこちらもどうぞ\nブログについて\nhttps://blue-man.hatenablog.com/\n!\nブログでは、Qii...",
          "link": "https://zenn.dev/blueman/articles/0c74c460ae53d0",
          "publishedOn": "2023-08-17T12:27:40.000Z",
          "wordCount": 1003,
          "title": "tkcalendarからの指定日付を使ったデータの振り分け",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bFd2pUZM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tkcalendar%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E6%258C%2587%25E5%25AE%259A%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bFd2pUZM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tkcalendar%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E6%258C%2587%25E5%25AE%259A%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/soramarjr/articles/0504d95dde9bd5",
          "author": "fujitani sora",
          "description": "最近気に入っているFastAPIの環境構築について解説します。\n友人と行っている開発のバックエンドにもゴリ押しでFastAPIを導入しました。\n\n 概要\n\n FastAPI\nFastAPIは、Python 3.6以降で動作する、モダンで高速なWebフレームワークです。\nPythonのtype hinting機能を使用してリクエストパラメータの型チェックや自動変換を行い、またOpenAPIやJSON Schemaを自動生成します。\n\n メリット\n\nStarlette（軽量なASGIフレームワーク）とPydantic（データバリデーションライブラリ）に基づいて構築されており非常に高速。Nod...",
          "link": "https://zenn.dev/soramarjr/articles/0504d95dde9bd5",
          "publishedOn": "2023-08-17T09:04:12.000Z",
          "wordCount": 574,
          "title": "【Python】Dockerを用いたFastAPIの環境構築手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Dz4PTEJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Docker%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FFastAPI%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fujitani%2520sora%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbm4xeUNEQ0ZLSkFtTlFlY1BfdlVobFpVTGZtMTJkUjV0VDdBUERUUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Dz4PTEJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Docker%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FFastAPI%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fujitani%2520sora%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbm4xeUNEQ0ZLSkFtTlFlY1BfdlVobFpVTGZtMTJkUjV0VDdBUERUUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/84f638f4bf4f25",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-286 B - Cat\n\n\n\n 提出結果\nimport re\n\n\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = getString()\n\n    print(re.sub('na', 'nya', s))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/84f638f4bf4f25",
          "publishedOn": "2023-08-17T04:25:38.000Z",
          "wordCount": 257,
          "title": "［AtCoder］ABC-286｜B - Cat",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i2HccEuh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-286%25EF%25BD%259CB%2520-%2520Cat%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i2HccEuh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-286%25EF%25BD%259CB%2520-%2520Cat%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6fd053d1bf865b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-286 A - Range Swap\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, p, q, r, s = getIntMap()\n    a = getIntList()\n    c = [i for i in range(n)]\n\n    i = 0\n    for x in range(p - 1, q):\n...",
          "link": "https://zenn.dev/hyperdb/articles/6fd053d1bf865b",
          "publishedOn": "2023-08-17T04:25:38.000Z",
          "wordCount": 541,
          "title": "［AtCoder］ABC-286｜A - Range Swap",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CW8z8HR_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-286%25EF%25BD%259CA%2520-%2520Range%2520Swap%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CW8z8HR_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-286%25EF%25BD%259CA%2520-%2520Range%2520Swap%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/python_log_text",
          "author": "Torachi0401",
          "description": "Pythonでログ処理をやってみた\n\n コード全文\nとりあえず、作成したコード全文\n# utf-8\nimport os\nimport sys\n\nfrom CONST import *\n\n\ndef set_log() -> None:\n\t\"\"\"\n\tログの設定\n\t* 標準ログとエラーログの2種類を設定している\n\t:return: None\n\t\"\"\"\n\tif not os.path.exists(LOG_PATH):  # ログフォルダがなかったら作成\n\t\tos.mkdir(LOG_PATH)\n\tinfo_handler = logging.FileHandler(filename=...",
          "link": "https://zenn.dev/torachi0401/articles/python_log_text",
          "publishedOn": "2023-08-16T15:01:15.000Z",
          "wordCount": 738,
          "title": "Pythonでログ処理をやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A3Pp_ggT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMzU4YjlmMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A3Pp_ggT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMzU4YjlmMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pejpo/articles/7eb632183fd38b",
          "author": "Dr_O",
          "description": "はじめに\nPythonのクラスの中に書いた関数を、pandasのデータフレームにapplyで適用しようとして悩んだので、備忘的に記事にします。lambda関数でインスタンス化、続いてメソッドを呼び出せば良い、でした。\n\n 概要\nこんな感じ。\ndf['result'] = df['source'].apply(lambda x: Myclass(x).mymethod())\n\n 内容\n\n 1.  例\n作成したクラス（Myclass）の中のメソッド（関数）myaddを、pandasのデータフレームの列に適用したい。関数myaddは、xとyを入力すると、その和を返す。今回は、yは定数とする...",
          "link": "https://zenn.dev/pejpo/articles/7eb632183fd38b",
          "publishedOn": "2023-08-16T10:35:35.000Z",
          "wordCount": 363,
          "title": "Python クラスのメソッドをデータフレームに適用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2w2ABt3X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dr_O%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2w2ABt3X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dr_O%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/cbcloud_blog/articles/4f2898abb4c396",
          "author": "aipacommander",
          "description": "東屋慶名(隠語)の魂(プロダクトの想い)、具現化(Seleniumを使った自動化ツールの開発)！\n更に突き進み時代(Chrome)は進化(Version up)！\n間近に迫る世紀末眼下(ツールは壊れる)行こうか次の時代目指し(メンテ)さあ進もうか！！\nはい\nプロダクトを改善するほうがトータル良いのですが、色々リリースのスケジュールが重なってたり、QAリソースを直近確保できなかったり、そもそも開発者アサインが難しかったり、ラジバンダリ（？）すると、なかなか現場の負荷というのが下がりません\nとあるチームへの支援の担当にアサインされた時がありまして、色々ヒアリングしてタスクを並べた結果、工数削...",
          "link": "https://zenn.dev/cbcloud_blog/articles/4f2898abb4c396",
          "publishedOn": "2023-08-16T10:29:06.000Z",
          "wordCount": 460,
          "title": "Colaboratory & Seleniumを使った自動化ツールが定期的に動かなくなるので動くようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LYlBFJPw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Colaboratory%2520%2526%2520Selenium%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E5%25AE%259A%25E6%259C%259F%25E7%259A%2584%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CBcloud%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:aipacommander%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmM2U0Y2NhYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZGZjNDc2ZjguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LYlBFJPw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Colaboratory%2520%2526%2520Selenium%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E5%25AE%259A%25E6%259C%259F%25E7%259A%2584%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CBcloud%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:aipacommander%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmM2U0Y2NhYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZGZjNDc2ZjguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/230816-streamlit",
          "author": "knao124",
          "description": "streamlitでできること\n\n ログイン認証\n\n通常のログイン機能\n\nStreamlit-Authenticator：Streamlitアプリでユーザー認証を安全にする方法 – Kanaries\n\n\nauth0（SSO）\n\nStreamlit Next.js Component, Auth0 Authentication, Bi-Directional Messaging & Serverless APIs - 🧩 Streamlit Components - Streamlit\n\n\n\n\n データベースと接続\n\n\nConnect to data sources - Str...",
          "link": "https://zenn.dev/knao124/articles/230816-streamlit",
          "publishedOn": "2023-08-16T06:56:31.000Z",
          "wordCount": 360,
          "title": "streamlitの調査",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7SC3iwLH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:streamlit%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7SC3iwLH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:streamlit%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/techflagcorp/articles/d5b28087abdf47",
          "author": "dagger1",
          "description": "SlackとChatGPT APIでチャットボットを作る パート4（code interpreterぽい編）\nパート1（基礎編）、パート2（会話履歴管理編）、パート3（function calling編）と来て、パート4ではfunction callingを使ってcode interpreterぽいことをしてみたいと思います。\n\n どういうこと？\nPythonコードを実行する「関数」を作ります。これを使ってChatGPTが計算したりグラフを作ってくれたりします。実際のcode interpreterではウェブにデータをアップロードしますが、このパートで紹介するやり方では自前のデータベ...",
          "link": "https://zenn.dev/techflagcorp/articles/d5b28087abdf47",
          "publishedOn": "2023-08-16T05:14:34.000Z",
          "wordCount": 6453,
          "title": "SlackとChatGPT APIでチャットボットを作る パート4（code interpreterぽい編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--daL7vj0N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25884%25EF%25BC%2588code%2520interpreter%25E3%2581%25BD%25E3%2581%2584%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--daL7vj0N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25884%25EF%25BC%2588code%2520interpreter%25E3%2581%25BD%25E3%2581%2584%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/cce1a3f76f31fb",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-285 B - Longest Uncommon Prefix\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = list(getString())\n\n    for i in range(1, len(s)):\n        l = 0\n        for j in range(len(s) - i):\n            if s[j] == s[j ...",
          "link": "https://zenn.dev/hyperdb/articles/cce1a3f76f31fb",
          "publishedOn": "2023-08-16T04:35:41.000Z",
          "wordCount": 366,
          "title": "［AtCoder］ABC-285｜B - Longest Uncommon Prefix",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DJHw8M2X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-285%25EF%25BD%259CB%2520-%2520Longest%2520Uncommon%2520Prefix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DJHw8M2X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-285%25EF%25BD%259CB%2520-%2520Longest%2520Uncommon%2520Prefix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c17cfaded6ee93",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-285 A - Edge Checker 2\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print('Yes' if b // 2 == a else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c17cfaded6ee93",
          "publishedOn": "2023-08-16T04:35:40.000Z",
          "wordCount": 253,
          "title": "［AtCoder］ABC-285｜A - Edge Checker 2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OUspwy-1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-285%25EF%25BD%259CA%2520-%2520Edge%2520Checker%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OUspwy-1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-285%25EF%25BD%259CA%2520-%2520Edge%2520Checker%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/watarungurunnn/articles/3c8deeff7ab772",
          "author": "watarungurunnn",
          "description": "以下の記事を拡張し、移動標準偏差を作成する。\nhttps://zenn.dev/bluepost/articles/1b7b580ab54e95\n実現したいこと:\nオンライン異常検知のようなケースで、新たなデータ(以下、testデータ)の直前n個のデータ(以下、trainデータ)の移動平均・移動標準偏差を算出し、testデータを標準化する。\n# dataの移動平均\ndef moving_average(data, size):\n    \"\"\"\n    data: (n, d)\n    size: 移動平均のサイズ\n\n    return: data[i-size:i]のデータの平均。i ...",
          "link": "https://zenn.dev/watarungurunnn/articles/3c8deeff7ab772",
          "publishedOn": "2023-08-16T01:05:07.000Z",
          "wordCount": 461,
          "title": "numpyで移動平均・移動標準偏差をとり、時系列データを逐次的に標準化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0U9wcBHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:numpy%25E3%2581%25A7%25E7%25A7%25BB%25E5%258B%2595%25E5%25B9%25B3%25E5%259D%2587%25E3%2583%25BB%25E7%25A7%25BB%25E5%258B%2595%25E6%25A8%2599%25E6%25BA%2596%25E5%2581%258F%25E5%25B7%25AE%25E3%2582%2592%25E3%2581%25A8%25E3%2582%258A%25E3%2580%2581%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E9%2580%2590%25E6%25AC%25A1%25E7%259A%2584%25E3%2581%25AB%25E6%25A8%2599%25E6%25BA%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0U9wcBHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:numpy%25E3%2581%25A7%25E7%25A7%25BB%25E5%258B%2595%25E5%25B9%25B3%25E5%259D%2587%25E3%2583%25BB%25E7%25A7%25BB%25E5%258B%2595%25E6%25A8%2599%25E6%25BA%2596%25E5%2581%258F%25E5%25B7%25AE%25E3%2582%2592%25E3%2581%25A8%25E3%2582%258A%25E3%2580%2581%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E9%2580%2590%25E6%25AC%25A1%25E7%259A%2584%25E3%2581%25AB%25E6%25A8%2599%25E6%25BA%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/esm/articles/60e953c162d05e",
          "author": "sfjwr",
          "description": "この記事は「おしゃべりクマちゃん🧸」シリーズの記事になります。インデックスはコチラ。前回の記事はコチラ。\n今回はChatGPTのプロンプトの外で、通常のプログラミングによって作成した機能について紹介します😀\n\n 概要\n発言生成機能は、基本的にプロンプトエンジニアリングによって実現していますが、一部それを補うために通常のプログラミングによって行っている処理があります。\n行った処理のうち主要なものは、以下のものになります。\n\n文章の正規化\n変化するプロンプト\n会話の履歴の管理\n会話の要約\n\n\n 文章の正規化\n前回までの記事の通り、ChatGPTのAPIにはプロンプトを通じて指示を出し、回答を...",
          "link": "https://zenn.dev/esm/articles/60e953c162d05e",
          "publishedOn": "2023-08-16T01:00:00.000Z",
          "wordCount": 169,
          "title": "【FDO43】【会話文章生成 その3】プロンプト外の機能について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oOlL9DAR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FDO43%25E3%2580%2591%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%2520%25E3%2581%259D%25E3%2581%25AE3%25E3%2580%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E5%25A4%2596%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25B0%25B8%25E5%2592%258C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%259E%25E3%2583%258D%25E3%2582%25B8%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520Tech%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:sfjwr%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzlhYmNlZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WU00VG5xR2pzRl9UYS10V0xrYVpzVy1YT2pDb1NOTmZ3LXRTVk89czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oOlL9DAR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FDO43%25E3%2580%2591%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%2520%25E3%2581%259D%25E3%2581%25AE3%25E3%2580%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E5%25A4%2596%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25B0%25B8%25E5%2592%258C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%259E%25E3%2583%258D%25E3%2582%25B8%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520Tech%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:sfjwr%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzlhYmNlZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WU00VG5xR2pzRl9UYS10V0xrYVpzVy1YT2pDb1NOTmZ3LXRTVk89czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/pysimplegui_articles",
          "author": "Torachi0401",
          "description": "PySimpleGUI使い方ガイド\n\n 目次- PySimpleGUI使い方ガイド\n\n\n\nPySimpleGUI使い方ガイド\n\n目次- PySimpleGUI使い方ガイド\n\n1. はじめに\n\n1.1 PySimpleGUIとは？\n1.2 本記事の目的\n\n\n\n2. 導入\n\n\n2.1 使用方法の概要\n\n2.1.1 ウィジェットの配置\n\n2.1.2 イベントループ\n\nイベントとは？\nイベントループの動作\nイベントハンドリングの重要性\n\n\n\n2.1.3 GUIプログラムの終了\n\nウィンドウのクローズイベント\n特定のアクションによる終了\n\n\n\n\n\n2.1.4 サンプルに沿った説明\n\n2.1.4...",
          "link": "https://zenn.dev/torachi0401/articles/pysimplegui_articles",
          "publishedOn": "2023-08-15T15:15:15.000Z",
          "wordCount": 8627,
          "title": "PysimpleGui入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_bAGYQIf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:PysimpleGui%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_bAGYQIf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:PysimpleGui%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/putch/books/2562fe9182b780",
          "author": "Putch",
          "description": "Pythonに関するエラーや、テクニックを備忘録として書き留めています。",
          "link": "https://zenn.dev/putch/books/2562fe9182b780",
          "publishedOn": "2023-08-15T15:11:07.000Z",
          "wordCount": 49,
          "title": "Pythonメモ",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/techmadot/articles/python-tminiwebserver",
          "author": "てっくま.",
          "description": "Raspberry Pi Pico WでWebサーバーを！\nRaspberry Pi Pico W (以下PicoW)で、Webサーバーを動かしたいことあると思います。いくつかの方法があると思いますが、MicroPythonの上で動く手軽なものが欲しかったので自作しました。\n自作したWebサーバーはこちらのリポジトリで公開しています。\nhttps://github.com/techmadot/TMiniWebServer\nちなみにPicoWで動くWebサーバーは他にも選択可能です。\n\nmicrodot\n\nhttps://github.com/miguelgrinberg/microd...",
          "link": "https://zenn.dev/techmadot/articles/python-tminiwebserver",
          "publishedOn": "2023-08-15T08:33:13.000Z",
          "wordCount": 592,
          "title": "【MicroPython】Raspberry Pi Pico W向けWebサーバー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rEbBxLlc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590MicroPython%25E3%2580%2591Raspberry%2520Pi%2520Pico%2520W%25E5%2590%2591%25E3%2581%2591Web%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2581%25A3%25E3%2581%258F%25E3%2581%25BE.%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlpxVEo0c3J4M01zWWVnbzM3V3VBMEN5bmRrTkpOMGk4MExIeFk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rEbBxLlc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590MicroPython%25E3%2580%2591Raspberry%2520Pi%2520Pico%2520W%25E5%2590%2591%25E3%2581%2591Web%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2581%25A3%25E3%2581%258F%25E3%2581%25BE.%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlpxVEo0c3J4M01zWWVnbzM3V3VBMEN5bmRrTkpOMGk4MExIeFk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/4df0554f229abb",
          "author": "hodakam",
          "description": "はじめに\nこの記事の続きです。\n今回は、4のセルへの値追加です。今回が最後です！\n\n\n既存の excel ファイルをテキストボックスや罫線などを破壊せずに読み込む\n読み込んだシートに新しいシートを追加できる\nシート上のセルに値を追加できる\n読み込んだシートにテキストボックスなどの新しい要素を追加できる\nLinux 上で動作する\n\n\n\n 解決方法1：シートに画像を追加するメソッド\n前回のWorkbookクラスに以下のメソッドを追加すればOKです。\n    def _update_draw_rels(self, drawing_rel_path, image_name, draw_rel...",
          "link": "https://zenn.dev/hodakam/articles/4df0554f229abb",
          "publishedOn": "2023-08-15T07:44:24.000Z",
          "wordCount": 4161,
          "title": "OpenPyXLなしでPythonでExcelファイルをいじり倒す（テキストボックス、画像、矢印の追加)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PThfRztB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2580%2581%25E7%2594%25BB%25E5%2583%258F%25E3%2580%2581%25E7%259F%25A2%25E5%258D%25B0%25E3%2581%25AE%25E8%25BF%25BD%25E5%258A%25A0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PThfRztB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenPyXL%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7Python%25E3%2581%25A7Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2582%258A%25E5%2580%2592%25E3%2581%2599%25EF%25BC%2588%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2580%2581%25E7%2594%25BB%25E5%2583%258F%25E3%2580%2581%25E7%259F%25A2%25E5%258D%25B0%25E3%2581%25AE%25E8%25BF%25BD%25E5%258A%25A0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/recommend_books",
          "author": "Torachi0401",
          "description": "みなさん、こんにちは！今回は、プログラミングの世界に少しでも興味を持っている方に、Pythonの学習に役立つ素晴らしい書籍をご紹介します。Pythonは、初めてプログラミングを学ぶ方から経験豊富な開発者まで、幅広い層に愛されている言語です。もしもプログラミングの道を歩みたいと考えている方、あるいは既にスキルアップを図っている方にも、この記事が少しでもお役に立てれば嬉しいです。\n技術の世界は、多様性が重# 書籍紹介\nみなさん、こんにちは！今回は、プログラミングの世界に少しでも興味を持っている方に、Pythonの学習に役立つ素晴らしい書籍をご紹介します。Pythonは、初めてプログラミングを...",
          "link": "https://zenn.dev/torachi0401/articles/recommend_books",
          "publishedOn": "2023-08-15T06:24:49.000Z",
          "wordCount": 546,
          "title": "Pythonの独学におすすめの書籍",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v01GBnw2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%259B%25B8%25E7%25B1%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v01GBnw2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%258B%25AC%25E5%25AD%25A6%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%259B%25B8%25E7%25B1%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b5e79f26954c32",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-284 B - Multi Test Cases\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    t = getInt()\n    o = []\n    for i in range(t):\n        n = getInt()\n        a = getIntList()\n        m = [x % 2 for x in a]\n      ...",
          "link": "https://zenn.dev/hyperdb/articles/b5e79f26954c32",
          "publishedOn": "2023-08-15T04:53:23.000Z",
          "wordCount": 372,
          "title": "［AtCoder］ABC-284｜B - Multi Test Cases",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Sz5pWdGN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-284%25EF%25BD%259CB%2520-%2520Multi%2520Test%2520Cases%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Sz5pWdGN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-284%25EF%25BD%259CB%2520-%2520Multi%2520Test%2520Cases%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/526538c9f9885e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-284 A - Sequence of Strings\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    s = getStringRow(n)\n\n    s.reverse()\n\n    for w in s:\n        print(w)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/526538c9f9885e",
          "publishedOn": "2023-08-15T04:53:22.000Z",
          "wordCount": 288,
          "title": "［AtCoder］ABC-284｜A - Sequence of Strings",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1pGajmIm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-284%25EF%25BD%259CA%2520-%2520Sequence%2520of%2520Strings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1pGajmIm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-284%25EF%25BD%259CA%2520-%2520Sequence%2520of%2520Strings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wwwave/articles/8c92528fee1693",
          "author": "yhfs",
          "description": "はじめに\n株式会社ウェイブでCoolmicのエンジニアをしている布施です。\nCoolmicは日本のコミックを海外向けに配信するWEBサービスです。\n先日サイトパフォーマンス改善のために、サイト内で表示する画像のwebp化を始めました。\nその中で実際に行った作業をご紹介します。\nhttps://developers.google.com/speed/webp?hl=ja\n\n 要件\n今回の要件は大きく分けて以下の２つでした。\n\nサイト内で表示する画像（jpg/png）をwebpに差し替える\nwebpの表示に対応していないブラウザでは、従来通りjpg/png画像を表示する\n\n\n 画像をwe...",
          "link": "https://zenn.dev/wwwave/articles/8c92528fee1693",
          "publishedOn": "2023-08-15T03:36:00.000Z",
          "wordCount": 696,
          "title": "サイト内画像をwebpに移行し始めました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qgKssf2q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E5%2586%2585%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592webp%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:wwwave%2527s%2520Techblog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:yhfs%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0OTU3ZTVkYWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0MmVjMmQyMTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qgKssf2q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E5%2586%2585%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592webp%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:wwwave%2527s%2520Techblog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:yhfs%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0OTU3ZTVkYWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0MmVjMmQyMTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/medchem_learner/articles/7255b85072af3d",
          "author": "AI MedChem Learner",
          "description": "!\nこのたび、noteからzennに引っ越しすることにしました（記事は一つしかないですが…）\n\nnoteでの唯一の記事はこちら↓\nhttps://note.com/medchem_learning/n/nd240927cf732\n\nプログラミングや機械学習の学習を始めてもうすぐ一年。\n初学者+ほぼ独学のスペシャルコンボのおかげもあり、挫折→充電→再燃→挫折→・・・のループの繰り返しによって、断片的な知識のみで結局のところプログラミングと機械学習の「使える」スキルは身についていませんでした。\n衝動買いした関連書籍の積読もたまる一方。\nせっかく大金払って（一応修了した）プログラミングスクール...",
          "link": "https://zenn.dev/medchem_learner/articles/7255b85072af3d",
          "publishedOn": "2023-08-14T13:44:14.000Z",
          "wordCount": 93,
          "title": "【VGG16を用いた画像認識】サッカー日本代表選手の画像を認識する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KH-IL6-W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590VGG16%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E3%2580%2591%25E3%2582%25B5%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BC%25E6%2597%25A5%25E6%259C%25AC%25E4%25BB%25A3%25E8%25A1%25A8%25E9%2581%25B8%25E6%2589%258B%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AI%2520MedChem%2520Learner%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MGUyZTQ2OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KH-IL6-W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590VGG16%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E3%2580%2591%25E3%2582%25B5%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BC%25E6%2597%25A5%25E6%259C%25AC%25E4%25BB%25A3%25E8%25A1%25A8%25E9%2581%25B8%25E6%2589%258B%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AI%2520MedChem%2520Learner%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MGUyZTQ2OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/4b2d6f775d98e4",
          "author": "yKesamaru",
          "description": "はじめに\nUbuntuのPython仮想環境venvでcv2.imshowが表示されない件（エラーログも表示されない）について調べたので、そのメモです。\n（タイトルは参考URLと同じにさせて頂きました。というのも、cv2.imshow関連で検索した場合、大抵cv2.waitKey()を書き忘れてる件ばかりがヒットするからです。このタイトルが一番しっくりきました。）\n参考\nhttps://www.hiro877.com/entry/opencv-not-function-imshow\n以前からPythonの仮想環境中でopenCVを使うときに、cv2.imshowが表示されないことがあ...",
          "link": "https://zenn.dev/ykesamaru/articles/4b2d6f775d98e4",
          "publishedOn": "2023-08-14T11:04:38.000Z",
          "wordCount": 683,
          "title": "UbuntuのPython仮想環境venvでcv2.imshowが表示されない件（エラーログも表示されない）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GKD_05Qy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu%25E3%2581%25AEPython%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583venv%25E3%2581%25A7cv2.imshow%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E4%25BB%25B6%25EF%25BC%2588%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2582%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTFmYzI4MjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GKD_05Qy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu%25E3%2581%25AEPython%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583venv%25E3%2581%25A7cv2.imshow%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E4%25BB%25B6%25EF%25BC%2588%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2582%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTFmYzI4MjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/840d5a033cb0d9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-283 B - First Query Problem\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    a = [0] + getIntList()\n...",
          "link": "https://zenn.dev/hyperdb/articles/840d5a033cb0d9",
          "publishedOn": "2023-08-14T04:40:59.000Z",
          "wordCount": 467,
          "title": "［AtCoder］ABC-283｜B - First Query Problem",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HGnKpADq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-283%25EF%25BD%259CB%2520-%2520First%2520Query%2520Problem%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HGnKpADq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-283%25EF%25BD%259CB%2520-%2520First%2520Query%2520Problem%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1c5121eb9b9f24",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-283 A - Power\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(a ** b)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1c5121eb9b9f24",
          "publishedOn": "2023-08-14T04:40:58.000Z",
          "wordCount": 219,
          "title": "［AtCoder］ABC-283｜A - Power",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4b2IQV6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-283%25EF%25BD%259CA%2520-%2520Power%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4b2IQV6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-283%25EF%25BD%259CA%2520-%2520Power%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yukitezuka/articles/c0672fa54cda4d",
          "author": "手塚裕貴",
          "description": "はじめに\n僕が住んでるマンションには、共用エントランスに、鍵をさして開くタイプのオートロックがついていて、これが結構面倒です。\nオートロックのイメージこんな感じ↓　自分の部屋番号を呼び出して部屋から解錠ボタンを押すか、エントランスに鍵をさすことで、開く感じです。\n\n図1: オートロックのイメージ図\n疲れて帰宅した中、毎回カバンの中から鍵を探したくないし、さらに、鍵を家に忘れてしまった場合は、近所さんがいないと開けてもらえないので、かなり困ります。(2、3回あった。)\nということで、RaspberryPiの勉強も兼ねて、LINEから「ただいま」と送れば「おかえり!」と返してくれて、マン...",
          "link": "https://zenn.dev/yukitezuka/articles/c0672fa54cda4d",
          "publishedOn": "2023-08-14T01:00:05.000Z",
          "wordCount": 1638,
          "title": "[完成!]RaspberryPiでLINEから「ただいま」と送れば、マンションのオートロックを開けてくれるシステムを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RFLQFMhB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25AE%258C%25E6%2588%2590%2521%255DRaspberryPi%25E3%2581%25A7LINE%25E3%2581%258B%25E3%2582%2589%25E3%2580%258C%25E3%2581%259F%25E3%2581%25A0%25E3%2581%2584%25E3%2581%25BE%25E3%2580%258D%25E3%2581%25A8%25E9%2580%2581%25E3%2582%258C%25E3%2581%25B0%25E3%2580%2581%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E9%2596%258B%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E5%25A1%259A%25E8%25A3%2595%25E8%25B2%25B4%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkJhTUUwalNXVUJXOE5aU0hBM3pTTVdxbmZUbjRsZWQxMEdqVXkzQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RFLQFMhB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25AE%258C%25E6%2588%2590%2521%255DRaspberryPi%25E3%2581%25A7LINE%25E3%2581%258B%25E3%2582%2589%25E3%2580%258C%25E3%2581%259F%25E3%2581%25A0%25E3%2581%2584%25E3%2581%25BE%25E3%2580%258D%25E3%2581%25A8%25E9%2580%2581%25E3%2582%258C%25E3%2581%25B0%25E3%2580%2581%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E9%2596%258B%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E5%25A1%259A%25E8%25A3%2595%25E8%25B2%25B4%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkJhTUUwalNXVUJXOE5aU0hBM3pTTVdxbmZUbjRsZWQxMEdqVXkzQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ohtaman/articles/abci-hackerthon",
          "author": "ohtaman",
          "description": "７月6日〜14日の9日間、ABCIの主催で 第1回大規模言語モデル分散学習ハッカソン が開催されました。自分はいいだしっぺ 兼 チューターとして参加したのですが、今回のイベントは個人的な学びも多かったし、なにより楽しかったので、忘れないうちに振り返っておこうと思います。\n\nいいだしっぺというのは、3月に上記の tweet をしたら NVIDIA の @sfuruyaz さんが拾って諸々進めてくれた、という話です。自分はイベント内容の案をだしたり、技術検証やサンプルプログラムを作成したりしました。\n\n イベント概要\nイベント概要は以下の通りです\n\n\n期間: 2023/07/06 - 202...",
          "link": "https://zenn.dev/ohtaman/articles/abci-hackerthon",
          "publishedOn": "2023-08-14T00:10:05.000Z",
          "wordCount": 449,
          "title": "ABCIの大規模言語モデル分散学習ハッカソンを振り返る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BaKbmYVB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABCI%25E3%2581%25AE%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E5%2588%2586%25E6%2595%25A3%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AB%25E3%2582%25BD%25E3%2583%25B3%25E3%2582%2592%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohtaman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l3cGFNNU1ua0EwU05mTWNVRE40aVBMVFoxenRJbGJ4ZkE4eXVwLWRzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BaKbmYVB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABCI%25E3%2581%25AE%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E5%2588%2586%25E6%2595%25A3%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AB%25E3%2582%25BD%25E3%2583%25B3%25E3%2582%2592%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohtaman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l3cGFNNU1ua0EwU05mTWNVRE40aVBMVFoxenRJbGJ4ZkE4eXVwLWRzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tsuzukia/articles/df414098fcd5bd",
          "author": "TAKEZO",
          "description": "皆さん、ChatGPTを使っていますか？\nChatGPTはPCのブラウザ、スマホのアプリから使用することが出来ますが、APIを使ってもChatGPTを使用することが出来るんです！\n\n APIとは？\nAPIとは、Application Programming Interfaceの略称です。あるプログラムが他のプログラムの特定の部分を利用するための「手引き」のようなものです。\nOpenAIのAPIを使うと、自分のウェブサイトやアプリにChatGPTの機能を追加できます。今回はVisual Studio CodeでChatGPTを実行してみましょう！\n\n OpenAIのAPI keyについて\n...",
          "link": "https://zenn.dev/tsuzukia/articles/df414098fcd5bd",
          "publishedOn": "2023-08-13T17:22:30.000Z",
          "wordCount": 1333,
          "title": "APIを使ってChatGPTと会話してみよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ajmSnhuI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6ChatGPT%25E3%2581%25A8%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKEZO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZmRmNmRhYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ajmSnhuI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6ChatGPT%25E3%2581%25A8%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKEZO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZmRmNmRhYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/michy/articles/19699637f8cb16",
          "author": "zaiwa",
          "description": "はじめに\nこの記事は個人的なメモを兼ねたM1/M2 Mac上でComfyUIを使う環境構築方法をまとめた記事です。\nComflyUIは以下のものを使います。\nhttps://github.com/comfyanonymous/ComfyUI#manual-install-windows-linux\n\n 環境構築\n\n venvの環境構築\npython -m venv venv\n\n 仮想環境のアクティベート\n. ./venv/bin/activate\n\n pipの最新化\npip install --upgrade pip\n\n pytorchの開発版インストール\npip install -...",
          "link": "https://zenn.dev/michy/articles/19699637f8cb16",
          "publishedOn": "2023-08-13T15:59:20.000Z",
          "wordCount": 213,
          "title": "MacのローカルでComfyUIを使ってみた(StableDffusion)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ez5L4yeb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7ComfyUI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528StableDffusion%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zaiwa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhMDFjNTg2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ez5L4yeb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7ComfyUI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528StableDffusion%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zaiwa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhMDFjNTg2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shizukakokoro/articles/d634f8ddad833c",
          "author": "静心",
          "description": "Python には イテラブル と イテレータ という概念があります。\nこの二つの概念は、その違いが書かれた記事が多くありますが、その使い分けについてはあまり書かれていないです。\nそこで、この記事では「どういう時にイテラブルを使い、どういう時にイテレータを使うのか」について書いていきます。\n本題は ここから です。\n\n イテラブルとイテレータの違い\nイテラブルとイテレータの違いについては、以下の記事が詳しいです。\n\nこの記事内で、イテラブルとイテレータの違いについては以下のように書かれています。\n\nイテラブルとは、for文で要素を1つずつ取り出せるような反復可能なオブジェクトのことを言い...",
          "link": "https://zenn.dev/shizukakokoro/articles/d634f8ddad833c",
          "publishedOn": "2023-08-13T10:59:35.000Z",
          "wordCount": 2591,
          "title": "Python でイテラブルとイテレータの使い分け",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mXm2RVbC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mXm2RVbC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/danchinocto/articles/code-interpreter-for-data-analysis-2",
          "author": "団地のCTO",
          "description": "はじめに\nVirtual Motorsport Lab Inc. (VML) でプロダクト開発をしている @danchinocto です。この記事は、第2回 Generative AI 勉強会 関西での発表内容をまとめ直したものです。前回の記事はこちら。\nhttps://zenn.dev/danchinocto/articles/code-interpreter-for-data-analysis-1\n\n 自動運転レースのデータ解析\n\n 概要\n今回は、Code Interpreter プラグインを使って自動運転レースの走行ログを解析しました。 ChatGPT への指示にはできるだけ自...",
          "link": "https://zenn.dev/danchinocto/articles/code-interpreter-for-data-analysis-2",
          "publishedOn": "2023-08-13T09:46:46.000Z",
          "wordCount": 516,
          "title": "Code Interpreter で自動運転レースのデータ解析をしてみた (2)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--32eBtzBv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Code%2520Interpreter%2520%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E9%2581%258B%25E8%25BB%25A2%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%25282%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%259B%25A3%25E5%259C%25B0%25E3%2581%25AECTO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzOGZmMjg1M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--32eBtzBv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Code%2520Interpreter%2520%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E9%2581%258B%25E8%25BB%25A2%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%25282%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%259B%25A3%25E5%259C%25B0%25E3%2581%25AECTO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzOGZmMjg1M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yamaden/articles/9469cbe0bca86e",
          "author": "naoki matsuzaki",
          "description": "各言語には必ずある「コーディング規約」ですが、Python にはどの様なものがあるのでしょうか。\nPython のコーディング規約として「PEP 8」があります。\nこれを全て読み解くのは大変なので基本的なことだけをピックアップします。\n\n 始めに総論\n\nインデントは 4 スペースを利用する\n関数の引数が複数ある場合は統一された方法で折り返す\n\n関数の開きカッコに揃える\n関数の 1 行目に引数を書き、その位置に 2 行目以降を合わせる\n1 行目には引数を置かず、追加のインデントを含める\n\n\n波括弧/ブラケット/括弧の位置は統一された方法でおく\n\nリストの最後の要素が置かれた行の、はじめの文...",
          "link": "https://zenn.dev/yamaden/articles/9469cbe0bca86e",
          "publishedOn": "2023-08-12T14:59:36.000Z",
          "wordCount": 1294,
          "title": "Pythonのコーディング規約を調査しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YfCUgA7s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E8%25A6%258F%25E7%25B4%2584%25E3%2582%2592%25E8%25AA%25BF%25E6%259F%25BB%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2587%25E3%2583%25B3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:naoki%2520matsuzaki%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2YmRiMzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNzg0Y2M2NTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YfCUgA7s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E8%25A6%258F%25E7%25B4%2584%25E3%2582%2592%25E8%25AA%25BF%25E6%259F%25BB%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2587%25E3%2583%25B3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:naoki%2520matsuzaki%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2YmRiMzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNzg0Y2M2NTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yamaden/articles/23d3805fc85d99",
          "author": "naoki matsuzaki",
          "description": "Python の Linter や Formatter といってもさまざまな種類があります。\n今回は、Linter に「flake8」、Formatter に「black」を VSCode で利用するための設定方法をまとめました。\nその前に、その他パッケージについても簡単にですがまとめておきます。\n\n Linter\n\n pycodestyle\npycodestyle は、Python のコードが PEP8 に準拠しているかをチェックするための linter です。以前は pep8 という名前でしたが、文書の方の PEP8 と名前が同じでややこしいので、pycodestyle という名前に...",
          "link": "https://zenn.dev/yamaden/articles/23d3805fc85d99",
          "publishedOn": "2023-08-12T14:59:35.000Z",
          "wordCount": 1238,
          "title": "PythonのLinterとFormatter設定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lpEdz-tT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AELinter%25E3%2581%25A8Formatter%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2587%25E3%2583%25B3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:naoki%2520matsuzaki%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2YmRiMzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNzg0Y2M2NTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lpEdz-tT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AELinter%25E3%2581%25A8Formatter%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2587%25E3%2583%25B3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:naoki%2520matsuzaki%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2YmRiMzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNzg0Y2M2NTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/danishi/articles/aws-sam-local-debug",
          "author": "danishi",
          "description": "準備\n既にAWS SAMアプリがある場合は不要ですが、ない場合はまずは事前準備。\n\n 適当なAWS SAMアプリを用意する\nこちらのHello Worldアプリを作りましょう（デプロイは必要ありません）。\nhttps://docs.aws.amazon.com/ja_jp/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html\n手順に従ってsam initが終わったら、ターミナルで以下を実行。\nsam local start-api\n別のターミナルから...",
          "link": "https://zenn.dev/danishi/articles/aws-sam-local-debug",
          "publishedOn": "2023-08-12T14:28:03.000Z",
          "wordCount": 590,
          "title": "VS CodeでAWS SAMのローカルデバッグをやってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yefeolrZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%25E3%2581%25A7AWS%2520SAM%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:danishi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NDcyYzY4NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yefeolrZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%25E3%2581%25A7AWS%2520SAM%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:danishi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NDcyYzY4NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuhito/articles/404bad30fbbf73",
          "author": "kazuhito",
          "description": "Albumentations で XYZ軸回転のデータ拡張をするメモです🦔\nと言っても、Albumentations.Lambda()と自作のcv_rotate_3dを組み合わせただけの覚書です。\nGoogle Colaboratory で動くサンプルノートブックを用意しているので、興味がある方は動かしてみてください。\n\n以下、使い方メモ👀\nサンプル画像は、ぱくたそ様の食後のケーキを利用しています。\n\n cv_rotate_3dスクリプトダウンロード\n!wget https://raw.githubusercontent.com/Kazuhito00/cv_rotate_3d/main/...",
          "link": "https://zenn.dev/kazuhito/articles/404bad30fbbf73",
          "publishedOn": "2023-08-12T09:23:02.000Z",
          "wordCount": 549,
          "title": "Albumentations で XYZ軸回転のデータ拡張をするメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kODVrTkE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Albumentations%2520%25E3%2581%25A7%2520XYZ%25E8%25BB%25B8%25E5%259B%259E%25E8%25BB%25A2%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuhito%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kODVrTkE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Albumentations%2520%25E3%2581%25A7%2520XYZ%25E8%25BB%25B8%25E5%259B%259E%25E8%25BB%25A2%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuhito%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k1e1n04/articles/597c564c58af44",
          "author": "Ken",
          "description": "はじめに\nローカルのDynamoDBとAWS SAMで構築したLambdaを接続するのに少し苦戦したので、メモを残します。\n\n 前提\n\nDockerがインストールされている\nAWS CLIがインストールされている\nLambdaのRuntimeはPython3.9\nAWS SAM CLIがインストールされている\nSAMによるプロジェクトは作成済\nvenvでもanacondaでも良いが環境構築をし、boto3とulid-pyがインストールされていること\n\n\n 実装\n\n テンプレート\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS...",
          "link": "https://zenn.dev/k1e1n04/articles/597c564c58af44",
          "publishedOn": "2023-08-12T07:18:50.000Z",
          "wordCount": 3680,
          "title": "AWS SAMで構築したLambdaをDynamoDB Localに接続する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MPqEGO1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520SAM%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%259FLambda%25E3%2582%2592DynamoDB%2520Local%25E3%2581%25AB%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ken%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkR6S0JTWW9ISDJ0Y2c5Z2wzSDlLYXJZcjlHTTlBRHFjcEhPRWM3bDQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MPqEGO1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520SAM%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%259FLambda%25E3%2582%2592DynamoDB%2520Local%25E3%2581%25AB%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ken%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkR6S0JTWW9ISDJ0Y2c5Z2wzSDlLYXJZcjlHTTlBRHFjcEhPRWM3bDQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mirrorrabbit/articles/e9d9c07e35bb20",
          "author": "mira",
          "description": "概要\n情報学の一分野である情報符号理論に登場する「情報源」「符号化」「通信路」「誤り訂正」について、それに相当するクラスを実際にPythonで実装することで理解を深めることを目的とした記事です。\n情報源の定義など、情報符号理論の基礎的な内容について詳しく説明することはしませんので予めご了承ください。\n\n 想定する読者像\n\n計算機科学を学習している人\nPythonにある程度慣れている人\n\n\n 前提する知識\n\n情報符号理論の基礎的な理解\nPythonの初級的な内容（クラスの継承等まで）\n\n\n この記事の内容\n\n情報符号理論の各種内容（ハフマン符号化、加法的通信路、ハミング符号等）をシミュ...",
          "link": "https://zenn.dev/mirrorrabbit/articles/e9d9c07e35bb20",
          "publishedOn": "2023-08-12T07:13:04.000Z",
          "wordCount": 11527,
          "title": "【情報符号理論】Pythonで実装して理解する情報源、符号化、通信路、誤り訂正【実装】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WplNx6OL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2583%2585%25E5%25A0%25B1%25E7%25AC%25A6%25E5%258F%25B7%25E7%2590%2586%25E8%25AB%2596%25E3%2580%2591Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E6%2583%2585%25E5%25A0%25B1%25E6%25BA%2590%25E3%2580%2581%25E7%25AC%25A6%25E5%258F%25B7%25E5%258C%2596%25E3%2580%2581%25E9%2580%259A%25E4%25BF%25A1%25E8%25B7%25AF%25E3%2580%2581%25E8%25AA%25A4%25E3%2582%258A%25E8%25A8%2582%25E6%25AD%25A3%25E3%2580%2590%25E5%25AE%259F%25E8%25A3%2585%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mira%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZE1vdEpkbFNqUk9qRDBrOUpXWjJtbnlKendwY0tnVkhjVmdNNmRDM0ZHYmVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WplNx6OL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2583%2585%25E5%25A0%25B1%25E7%25AC%25A6%25E5%258F%25B7%25E7%2590%2586%25E8%25AB%2596%25E3%2580%2591Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E6%2583%2585%25E5%25A0%25B1%25E6%25BA%2590%25E3%2580%2581%25E7%25AC%25A6%25E5%258F%25B7%25E5%258C%2596%25E3%2580%2581%25E9%2580%259A%25E4%25BF%25A1%25E8%25B7%25AF%25E3%2580%2581%25E8%25AA%25A4%25E3%2582%258A%25E8%25A8%2582%25E6%25AD%25A3%25E3%2580%2590%25E5%25AE%259F%25E8%25A3%2585%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mira%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZE1vdEpkbFNqUk9qRDBrOUpXWjJtbnlKendwY0tnVkhjVmdNNmRDM0ZHYmVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8d0d9e8035461e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-282 B - Let's Get a Perfect Score\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringListRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef chk(a1, a2):\n    r = True\n    for i in range(len(a1)):\n        if a1[i] == 'x' and a2[i] == 'x':\n           ...",
          "link": "https://zenn.dev/hyperdb/articles/8d0d9e8035461e",
          "publishedOn": "2023-08-12T03:54:23.000Z",
          "wordCount": 501,
          "title": "［AtCoder］ABC-282｜B - Let's Get a Perfect Score",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DrhziWXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-282%25EF%25BD%259CB%2520-%2520Let%2527s%2520Get%2520a%2520Perfect%2520Score%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DrhziWXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-282%25EF%25BD%259CB%2520-%2520Let%2527s%2520Get%2520a%2520Perfect%2520Score%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/3892c3b453b3f9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-282 A - Generalized ABC\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n    a = ord('A')\n\n    s = ''\n    for i in range(n):\n        s += chr(a + i)\n    print(s)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/3892c3b453b3f9",
          "publishedOn": "2023-08-12T03:54:22.000Z",
          "wordCount": 268,
          "title": "［AtCoder］ABC-282｜A - Generalized ABC",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HMoOlf7M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-282%25EF%25BD%259CA%2520-%2520Generalized%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HMoOlf7M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-282%25EF%25BD%259CA%2520-%2520Generalized%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/techstart/articles/059616f6272696",
          "author": "Totsumaru",
          "description": "複数のGIFを組み合わせて1つのGIFにする方法をメモとしてまとめておきます。\nきっかけはNFTで、GIFのジェネラティブ画像を大量に作成する方法を模索していたことでした。\n\n 前提\n私はPythonは全く書いたことがありませんが、調べたところライブラリも充実しているようだったので、見よう見まねでコードを書きました。\n最初はGoで挑戦していましたが、ライブラリも十分になく、コードもかなり複雑になってきた上に完成したGIFのチラつきがすごく、満足したものが出せなかったためPythonを選びました。\n※Goの書き方、ライブラリを知っている人は教えてください。\n\n ディレクトリ構成\n\n\n 実装...",
          "link": "https://zenn.dev/techstart/articles/059616f6272696",
          "publishedOn": "2023-08-12T01:35:54.000Z",
          "wordCount": 723,
          "title": "[Python] GIFを合成する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hGqjYQOe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520GIF%25E3%2582%2592%25E5%2590%2588%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Totsumaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NTYwMDM1NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hGqjYQOe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520GIF%25E3%2582%2592%25E5%2590%2588%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Totsumaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NTYwMDM1NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/fc6377950117ca",
          "author": "takuh",
          "description": "作るもの\n与えられた整数リスト nums から欠けている整数を見つける関数。\n\n 実装\n\nmissing_numbers.py\ndef missingNumbers(nums):\n    # 正の無限大の値を2つリストに追加しておくことで、ループ処理を簡略化する\n    nums += [float(\"inf\"), float(\"inf\")]\n\n    # 数値を変換して欠けている整数の位置を示す\n    for index in range(len(nums) - 2):\n        visited_index = abs(nums[index]) - 1  # 数値の絶対値か...",
          "link": "https://zenn.dev/takuh/articles/fc6377950117ca",
          "publishedOn": "2023-08-11T23:48:53.000Z",
          "wordCount": 392,
          "title": "【Python】欠落番号",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ju-312p3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%25AC%25A0%25E8%2590%25BD%25E7%2595%25AA%25E5%258F%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ju-312p3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%25AC%25A0%25E8%2590%25BD%25E7%2595%25AA%25E5%258F%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sikkim/articles/a3f6633428998e",
          "author": "TAKAHASHI Taro",
          "description": "はじめに\nChatGPTと会話できるAlexaスキルを作って遊んでいるのですが、ときどき「スキルがリクエストに正しく応答できませんでした」と言われて止まってしまうことがあります。\n\nこれは、Alexaスキルの仕様で、8秒以内に応答しないとエラーになってしまうためです。応答に時間がかかるのは、OpenAIのAPIが原因です。どうにかしたいと思っていたのですが、ひとつ解決方法を思いついたので紹介します。\n\n 解決方法の概要\nOpenAIのCreate chat completion API（いわゆるChatGPTのAPI）にはstreamというオプションがあります。これをtrueにすると...",
          "link": "https://zenn.dev/sikkim/articles/a3f6633428998e",
          "publishedOn": "2023-08-11T23:20:40.000Z",
          "wordCount": 1190,
          "title": "Alexaスキル用のチャットボットを8秒以内に応答させたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vUi4ts6Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alexa%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25AB%25E7%2594%25A8%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%25928%25E7%25A7%2592%25E4%25BB%25A5%25E5%2586%2585%25E3%2581%25AB%25E5%25BF%259C%25E7%25AD%2594%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKAHASHI%2520Taro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMWVmZDc1ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vUi4ts6Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alexa%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25AB%25E7%2594%25A8%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%25928%25E7%25A7%2592%25E4%25BB%25A5%25E5%2586%2585%25E3%2581%25AB%25E5%25BF%259C%25E7%25AD%2594%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKAHASHI%2520Taro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMWVmZDc1ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/al_everywhere/articles/snowflake-app-with-docker",
          "author": "almost_everywhere",
          "description": "概要\nこの記事は、ローカルの環境を汚さずにSnowflake上のデータや大規模言語モデル(LLM)を活用したアプリ開発を行えるよう、Streamlit+Snowpark+LangChainといったPythonのライブラリを活用できる環境を、Dockerで構築することを目的に書いています。\n私のGitHub上でもコードなど公開していますので、良ければ参照やgit cloneしてください。\nあくまでも目的は開発環境構築ですが、後半では動作確認のためのこれらのライブラリを用いた単純なアプリについても紹介します。\n\nアプリの外観\n\n 前提条件\n構築する上での条件は下記の通りです。\n\nDock...",
          "link": "https://zenn.dev/al_everywhere/articles/snowflake-app-with-docker",
          "publishedOn": "2023-08-11T19:50:25.000Z",
          "wordCount": 2164,
          "title": "Snowflakeアプリ開発環境をDockerで構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--p8hyjSb4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snowflake%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:almost_everywhere%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OTRkMGM2MGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--p8hyjSb4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snowflake%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:almost_everywhere%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OTRkMGM2MGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/combine_pdf_binary",
          "author": "Torachi0401",
          "description": "Pythonでバイナリー形式のPDFファイルとローカルのPDFファイルを結合する方法\n画像やテキストなどの情報を含むPDFファイルは、重要な文書を扱う際に広く使用されます。特定の状況では、WebからAPI等でダウンロードしたバイナリー形式のPDFファイルとローカルにあるPDFファイルを結合させる必要が生じることがあります。この記事では、PythonのPyPDF2とbase64モジュールを使用して、バイナリー形式のPDFファイルとローカルのPDFファイルを効果的に結合する方法を詳しく解説します。\n\n コードの意味と使い方\n以下のコードは、ダウンロードしたバイナリー形式のPDFファイルと...",
          "link": "https://zenn.dev/torachi0401/articles/combine_pdf_binary",
          "publishedOn": "2023-08-11T15:34:24.000Z",
          "wordCount": 316,
          "title": "pythonでPDFをバイナリーで結合する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uXZlYARP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7PDF%25E3%2582%2592%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25BC%25E3%2581%25A7%25E7%25B5%2590%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uXZlYARP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7PDF%25E3%2582%2592%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25BC%25E3%2581%25A7%25E7%25B5%2590%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/howto_encode_base64",
          "author": "Torachi0401",
          "description": "PythonでファイルをBase64エンコードする方法\nファイルのデータをエンコードする際に、Base64はよく使用されるエンコーディングの一つです。Base64エンコードはバイナリデータをASCIIテキストに変換する方法で、データをテキスト形式で扱えるようにするための手段です。Pythonのbase64モジュールを使用して、ファイルをBase64エンコードする方法を解説します。\n\n Base64エンコードとは？\nBase64エンコードは、8ビットバイナリデータをASCII文字列に変換する手法です。バイナリデータは、文字コードによって扱いにくいことがありますが、Base64エンコード...",
          "link": "https://zenn.dev/torachi0401/articles/howto_encode_base64",
          "publishedOn": "2023-08-11T15:34:05.000Z",
          "wordCount": 190,
          "title": "pythonでファイルをbase64で開く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MxNJnhVw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592base64%25E3%2581%25A7%25E9%2596%258B%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MxNJnhVw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592base64%25E3%2581%25A7%25E9%2596%258B%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/howto_python_canny",
          "author": "Torachi0401",
          "description": "画像のエッジ検出を簡単に行う方法：Cannyアルゴリズムとは？\n画像処理をする際に、エッジ検出は重要なタスクの一つです。エッジは画像内の物体の境界を表し、それを検出することで物体の形状や位置を特定することができます。PythonのOpenCVとNumPyライブラリを使用して、画像のエッジ検出を簡単に行う方法をご紹介します。この記事では、以下のコードを通じてその詳細を解説します。\nimport numpy as np\nimport cv2\n\nmed_val = np.median(img_blur)\nsigma = 0.33  # 0.33\nmin_val = int(max(0, (...",
          "link": "https://zenn.dev/torachi0401/articles/howto_python_canny",
          "publishedOn": "2023-08-11T15:33:49.000Z",
          "wordCount": 421,
          "title": "pythonで画像処理する際のエッジ検出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ztl5HFkS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%25E6%25A4%259C%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ztl5HFkS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%25E6%25A4%259C%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/change_pdf_to_image",
          "author": "Torachi0401",
          "description": "PythonでPDFファイルを画像に変換する方法\nPDFファイルを画像ファイルに変換することは、文書を共有する際やウェブ上で表示する際に便利な手法です。Pythonのpdf2imageモジュールを使用して、PDFファイルを画像に変換する方法を解説します。さらに、変換時に使用するツールpopplerを環境変数に追加する手順も詳しく説明します。\n\n コードの意味と使い方\n以下のコードは、PDFファイルを画像に変換する方法を示しています。\nimport os\nfrom pathlib import Path\nfrom pdf2image import convert_from_path\n\n...",
          "link": "https://zenn.dev/torachi0401/articles/change_pdf_to_image",
          "publishedOn": "2023-08-11T15:32:59.000Z",
          "wordCount": 429,
          "title": "PythonでPDFファイルを画像に変換する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vCGorxd7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7PDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vCGorxd7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7PDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/howto_pyinstaller",
          "author": "Torachi0401",
          "description": "PyInstallerを使ってPythonアプリを独立した実行ファイルにしよう！\nPythonで素晴らしいアプリを作成したら、他の人にも使ってもらいたいと思いませんか？そんなときに便利なのが「PyInstaller」です。このツールを使えば、Pythonスクリプトを独立した実行ファイルに変換することができます。この記事では、PyInstallerの基本的な使い方から応用まで、詳細に解説します。\n\n PyInstallerとは？\nPyInstallerは、Pythonスクリプトをコンパイルされた実行ファイルに変換するツールです。これによって、Pythonのインタプリタが不要な状態でアプ...",
          "link": "https://zenn.dev/torachi0401/articles/howto_pyinstaller",
          "publishedOn": "2023-08-11T15:08:27.000Z",
          "wordCount": 331,
          "title": "Python[pyinstaller]で実行ファイル（exe）の作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I125YYsp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%255Bpyinstaller%255D%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25EF%25BC%2588exe%25EF%25BC%2589%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I125YYsp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%255Bpyinstaller%255D%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25EF%25BC%2588exe%25EF%25BC%2589%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/howto_pysimplegui",
          "author": "Torachi0401",
          "description": "PySimpleGUIを使ってPython GUIアプリを簡単に作成しよう！\nPythonを使ってGUIアプリケーションを作成すると聞いて、難しそうだし大変そう…と思ったことはありませんか？しかし、そんな不安を解消するのが「PySimpleGUI」です。この素晴らしいライブラリを使えば、誰でも簡単にPython GUIアプリを作成することができます。この記事では、PySimpleGUIの基本的な使い方と共に、実際のコード例を通じてその魅力をご紹介します。\n\n PySimpleGUIって何？\nPySimpleGUIは、PythonでGUIアプリケーションを作成するためのライブラリです。...",
          "link": "https://zenn.dev/torachi0401/articles/howto_pysimplegui",
          "publishedOn": "2023-08-11T15:02:26.000Z",
          "wordCount": 1078,
          "title": "Python[PySimpleGui]でUI画面を作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q48lZq4S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%255BPySimpleGui%255D%25E3%2581%25A7UI%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q48lZq4S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%255BPySimpleGui%255D%25E3%2581%25A7UI%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMjdjNjRiN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/a1dc69c9a2ad8c",
          "author": "takuh",
          "description": "作るもの\n2つの文字列間のLevenshtein距離を計算するアルゴリズム。\n\n 補足\n\nレーベンシュタイン距離とは？\n2つの文字列間の類似度や差異を測る指標\n\n例）\n元の文字列: \"kitten\"\n目標文字列: \"sitting\"\nこの場合、元の文字列を目標文字列に変換するためには次の操作が必要。\n\"k\" を \"s\" に置換\n\"e\" を \"i\" に置換\n\"n\" を \"t\" に置換\n合計で3回の置換操作が必要。したがって、この2つの文字列間のLevenshtein距離は3となる。\n\n 実装\n\nlevenshtein_distance.py\ndef levenshteinDistanc...",
          "link": "https://zenn.dev/takuh/articles/a1dc69c9a2ad8c",
          "publishedOn": "2023-08-11T13:44:16.000Z",
          "wordCount": 743,
          "title": "【Python】レーベンシュタイン距離",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_YsohaLG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2599%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25B3%25E8%25B7%259D%25E9%259B%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_YsohaLG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2599%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25B3%25E8%25B7%259D%25E9%259B%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shibata/articles/67a25654171980",
          "author": "Shibata",
          "description": "背景\nいざGoを書くにあたり参照渡しと値渡しが曖昧だったので再整理しました。\n\n 本文\n例えば、次のGoのコードを見てみましょう。\nshowName 関数の引数は①user Userとするのか、それとも②user *Userとするのか、どちらが適切なのでしょうか？\npackage main\n\nimport (\n    \"fmt\"\n)\n\ntype User struct {\n    Name string\n    Age  int\n}\n\nfunc showName(user *User) {\n    fmt.Println(user.Name)\n}\n\nfunc main() {\n   ...",
          "link": "https://zenn.dev/shibata/articles/67a25654171980",
          "publishedOn": "2023-08-11T08:18:42.000Z",
          "wordCount": 314,
          "title": "PythonからGoへ：参照渡しと値渡しを整理してスムーズな移行をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C8YVL2R_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589Go%25E3%2581%25B8%25EF%25BC%259A%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25B9%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25BA%25E3%2581%25AA%25E7%25A7%25BB%25E8%25A1%258C%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shibata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhNGQ0YzA3NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C8YVL2R_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589Go%25E3%2581%25B8%25EF%25BC%259A%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25B9%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25BA%25E3%2581%25AA%25E7%25A7%25BB%25E8%25A1%258C%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shibata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhNGQ0YzA3NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/15ee93dfd0771c",
          "author": "takuh",
          "description": "作るもの\n逆ポーランド記法（Reverse Polish Notation、RPN）を使用して表現された数式を計算する関数。\n中置記法で表現された式「3 + 4」を逆ポーランド記法に変換すると「3 4 +」となる。この式をRPNで解釈すると、最初に「3」と「4」をスタックに積み、次に「+」演算子が来たときにスタックから2つの数値を取り出して演算し、計算結果をスタックに戻すという手順が続く。\n\n 実装\n\nrpn.py\ndef evaluate_rpn(expression):\n    stack = []  # 演算対象の数値や中間結果を保持するスタック\n\n    # RPN式の各トー...",
          "link": "https://zenn.dev/takuh/articles/15ee93dfd0771c",
          "publishedOn": "2023-08-11T07:52:59.000Z",
          "wordCount": 527,
          "title": "【Python】逆ポーランド記法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--E-wwT_K7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%2580%2586%25E3%2583%259D%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2589%25E8%25A8%2598%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--E-wwT_K7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%2580%2586%25E3%2583%259D%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2589%25E8%25A8%2598%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tk_resilie/articles/python_test_template",
          "author": "米谷 昂(Python/FastAPIプロフェッショナル)",
          "description": "概要\nPythonのテストライブラリといえばpytestが一般的です。\nPython標準のuniitestとは異なり、クラスベースではなく関数ベースでテストコードを記述することが一般的ですが、fixture,conftest,parametrizeを理解すると一気に世界が変わり、テスト体験が圧倒的に向上するため、これらの実装方法を紹介します。\n\n リポジトリ\n本記事の説明に使用しているサンプルのテスト実装は、以下のリポジトリです。\nhttps://github.com/takashi-yoneya/python-test-template\n\n 想定読者\nPythonやGitの基本的な...",
          "link": "https://zenn.dev/tk_resilie/articles/python_test_template",
          "publishedOn": "2023-08-11T06:53:06.000Z",
          "wordCount": 755,
          "title": "Python(pytest)でテスト書くならfixture,conftest,parametrizeを理解すると世界が一気に変わる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L8VY5hFy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2528pytest%2529%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25AA%25E3%2582%2589fixture%252Cconftest%252Cparametrize%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E4%25B8%2596...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFas...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--L8VY5hFy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2528pytest%2529%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25AA%25E3%2582%2589fixture%252Cconftest%252Cparametrize%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E4%25B8%2596...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFas...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/d49963a0ffa5fd",
          "author": "takuh",
          "description": "作るもの\n与えられたパターンに対して、文字列内の部分文字列の組み合わせを探し、一致する場合にその組み合わせを返す関数。\n\n 実装\n\npattern_matcher.py\ndef patternMatcher(pattern, string):\n    # パターンが空または文字列よりも長い場合は、マッチング不可能なので空のリストを返す\n    if len(pattern) == 0 or len(pattern) > len(string):\n        return []\n\n    # パターンの最初の文字を取得\n    firstLetterA = pattern[0...",
          "link": "https://zenn.dev/takuh/articles/d49963a0ffa5fd",
          "publishedOn": "2023-08-11T06:37:58.000Z",
          "wordCount": 910,
          "title": "【Python】パターンマッチャー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d3drOaMt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d3drOaMt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tsuzukia/articles/bc0564a7a7f427",
          "author": "TAKEZO",
          "description": "StreamlitでChatGPTアプリが作れちゃうんです。\nしかもstreaming機能ありで結構本家に近いですよ！\n\n\n Streamlitとは？\nStreamlitは、PythonでWebアプリケーションを素早く作成するためのオープンソースライブラリです。データ分析、可視化、機械学習モデルのデモなどに特に適しており、コーディングの専門知識がなくても使いやすいツールです。\nhttps://streamlit.io/\n\n ChatGPTとは？\nChatGPTについてはご存じですよね？ChatGPTはOpenAIによって開発された自然言語処理のモデルで、人間のような文章の生成が可能です。...",
          "link": "https://zenn.dev/tsuzukia/articles/bc0564a7a7f427",
          "publishedOn": "2023-08-11T05:20:41.000Z",
          "wordCount": 1508,
          "title": "StreamlitでChatGPTアプリを作成しよう!",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lGjzslXW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7ChatGPT%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKEZO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZmRmNmRhYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lGjzslXW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7ChatGPT%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKEZO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZmRmNmRhYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/eito_blog/articles/a982fdb073493a",
          "author": "エイト",
          "description": "Twitter APIを利用することでツイート処理を自動化することができます。\n本記事ではTwitter APIの取得方法について解説していきます。\n※電話番号、メールアドレスが登録されているTwitterアカウントを所持していることが前提となります。\n\n Twitter Developersにアクセス\n以下のURLにアクセスします。Twitterアカウントのログインが求められることもあるのでその際はログインをします。\nhttps://developer.twitter.com/en/apps\n\n Create an appをクリック\nその後Create an appをクリックします。...",
          "link": "https://zenn.dev/eito_blog/articles/a982fdb073493a",
          "publishedOn": "2023-08-11T05:04:04.000Z",
          "wordCount": 408,
          "title": "【2023年度最新版】Twitter API 取得方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aoypr71K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B4%25E5%25BA%25A6%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%25E3%2580%2591Twitter%2520API%2520%25E5%258F%2596%25E5%25BE%2597%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aoypr71K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B4%25E5%25BA%25A6%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%25E3%2580%2591Twitter%2520API%2520%25E5%258F%2596%25E5%25BE%2597%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/4b591ffb605b9f",
          "author": "takuh",
          "description": "作るもの\n2人のカレンダースケジュールを比較し、共通の空き時間（会議を開催できる時間帯）を見つけるための関数。\n\n 実装\n\ncalendar_matching_py\n# ２つのカレンダーのスケジュールを比較し、共通の空き時間を見つける関数\ndef calendarMatching(calendar1, dailyBounds1, calendar2, dailyBounds2, meetingDuration):\n    # 両カレンダーの営業開始と終了の最大・最小時間を取得\n    earlyBound = max(timeToMinutes(dailyBounds1[0]), t...",
          "link": "https://zenn.dev/takuh/articles/4b591ffb605b9f",
          "publishedOn": "2023-08-11T04:18:51.000Z",
          "wordCount": 1349,
          "title": "【Python】カレンダーマッチング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5iANHZsA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5iANHZsA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/7f58d455ca30ce",
          "author": "takuh",
          "description": "作るもの\n再帰を使用してナップサック問題を解決する関数。内部関数 dfs は、現在のアイテムを選ぶか選ばないかを選択肢としながら、可能な組み合わせを試すことで最適解を探索する。関数 knapsackProblem は、最初に dfs を初期値で呼び出してナップサック問題を解決し、最終的な結果を返す。\n※ ナップサック問題（Knapsack Problem）とは？\n最適化問題の一つであり、与えられた一定の容量を持つナップサック（背負い袋）に、異なるアイテムの集合を入れていくことで、アイテムの価値の合計を最大化する問題。\n\n 実装\n\nknapsack_problem.py\nfrom ty...",
          "link": "https://zenn.dev/takuh/articles/7f58d455ca30ce",
          "publishedOn": "2023-08-11T00:30:36.000Z",
          "wordCount": 807,
          "title": "【Python】ナップサック問題",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IQRLsVKU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%258A%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B5%25E3%2583%2583%25E3%2582%25AF%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IQRLsVKU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%258A%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B5%25E3%2583%2583%25E3%2582%25AF%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/322bad420fee69",
          "author": "takuh",
          "description": "作るもの\n与えられた配列から4つの要素の組み合わせを選び、その合計が目標値と一致するものを見つけてリストで返す関数。\n\n 実装\n\nfour_number_sum.py\ndef fourNumberSum(array, targetSum):\n    result = []  # 合計が目標値と一致する組み合わせを格納するリスト\n    array.sort()  # 配列をソートして順序を整える\n    for i in range(len(array) - 3):  # 4つの要素の組み合わせを探すため、最後から4番目の要素までループ\n        for j in range(...",
          "link": "https://zenn.dev/takuh/articles/322bad420fee69",
          "publishedOn": "2023-08-11T00:01:07.000Z",
          "wordCount": 601,
          "title": "【Python】４つの数の合計",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vTV0rXP_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25EF%25BC%2594%25E3%2581%25A4%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AE%25E5%2590%2588%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vTV0rXP_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25EF%25BC%2594%25E3%2581%25A4%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AE%25E5%2590%2588%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/41f16414a3c64e",
          "author": "takuh",
          "description": "作るもの\n与えられた配列が単調な増加または単調な減少を持つかどうかを判定するための関数。\n\n 実装\n\nmain.py\ndef isMonotonic(array):\n    c = True  # 単調増加を示すフラグ\n    d = True  # 単調減少を示すフラグ\n    for i in range(len(array) - 1):\n        # 配列内の要素を順番に比較し、単調増加かどうかを判定\n        c = c and array[i] <= array[i + 1]\n        # 配列内の要素を順番に比較し、単調減少かどうかを判定\n    ...",
          "link": "https://zenn.dev/takuh/articles/41f16414a3c64e",
          "publishedOn": "2023-08-10T23:10:26.000Z",
          "wordCount": 425,
          "title": "【Python】単調配列",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--04IfUM1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%258D%2598%25E8%25AA%25BF%25E9%2585%258D%25E5%2588%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--04IfUM1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%258D%2598%25E8%25AA%25BF%25E9%2585%258D%25E5%2588%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit17",
          "author": "derwind",
          "description": "目的\nQiskit で遊んでみる (15) — Quantum Machine Learning の内容を GPU シミュレーションで行いたい。そのために、今回は cuQuantum で遊んでみる (5) — VQE その 2 で触れた cuQuantum (cuTensorNet) を活用したい。\n\n ナイーブな実装\nQiskit で遊んでみる (15) — Quantum Machine Learning での実装において、期待値計算を以下のようにすればいけるのだが、これがとてつもなく思い。期待計算と勾配計算のための QuantumCircuit をばらばらに構築するコストや、C...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit17",
          "publishedOn": "2023-08-10T18:15:05.000Z",
          "wordCount": 5501,
          "title": "Qiskit で遊んでみる (17) — Quantum Machine Learning その 3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ei3fmMk5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252817%2529%2520%25E2%2580%2594%2520Quantum%2520Machine%2520Learning%2520%25E3%2581%259D%25E3%2581%25AE%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ei3fmMk5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252817%2529%2520%25E2%2580%2594%2520Quantum%2520Machine%2520Learning%2520%25E3%2581%259D%25E3%2581%25AE%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takapy11820/articles/3b307a5fc93f5b",
          "author": "takapp",
          "description": "はじめに\nDjango REST frameworkで、リレーションされたデータを生成しようと考えた時、公式ドキュメントには\nhttps://www.django-rest-framework.org/api-guide/relations/#writable-nested-serializers\nと示されています。ふむ。\nまた、他の選択肢としては以下のサードパーティライブラリがあります\nhttps://github.com/beda-software/drf-writable-nested\n前者・後者ともやりたいことは実現できる為、drf-writable-nestedを採用した結...",
          "link": "https://zenn.dev/takapy11820/articles/3b307a5fc93f5b",
          "publishedOn": "2023-08-10T15:16:20.000Z",
          "wordCount": 2143,
          "title": "【DRF】drf-writable-nestedはvalidated_dataの値を参照しない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ODN6yGwy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DRF%25E3%2580%2591drf-writable-nested%25E3%2581%25AFvalidated_data%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takapp%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNS1NTXladnFnOWRRYm44SWg4OS1jVEc2cG1VWXRmZG14SDJ3N3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ODN6yGwy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DRF%25E3%2580%2591drf-writable-nested%25E3%2581%25AFvalidated_data%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takapp%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNS1NTXladnFnOWRRYm44SWg4OS1jVEc2cG1VWXRmZG14SDJ3N3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/c5933b9f577ba4",
          "author": "takuh",
          "description": "作るもの\n与えられたリスト（array）内の特定の要素（toMove）をリストの末尾に移動する関数。\n\n 実装\n\nmain.py\ndef moveElementToEnd(array, toMove):\n    # 一時的なインデックスを初期化\n    tmp = 0\n\n    # リスト内の各要素に対してループ処理を開始\n    for i in range(len(array)):\n        # 現在の要素が移動させたい要素でない場合\n        if array[i] != toMove:\n            # 現在の要素と一時的な位置にある要素を入れ替え\n  ...",
          "link": "https://zenn.dev/takuh/articles/c5933b9f577ba4",
          "publishedOn": "2023-08-10T14:09:14.000Z",
          "wordCount": 347,
          "title": "【Python】特定の要素をリストの末尾に移動する関数",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VuTpxx9A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E6%259C%25AB%25E5%25B0%25BE%25E3%2581%25AB%25E7%25A7%25BB%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VuTpxx9A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E6%259C%25AB%25E5%25B0%25BE%25E3%2581%25AB%25E7%25A7%25BB%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/9221b331aa2c34",
          "author": "takuh",
          "description": "実装概要\n2つの整数配列 arrayOne と arrayTwo が与えられたときに、それらの配列間で最も差が小さい要素のペアを見つけるための関数。\n\n 実装\n\nsmallest_difference.py\ndef smallestDifference(arrayOne, arrayTwo):\n    # 与えられた2つの配列を昇順にソート\n    arrayOne.sort()\n    arrayTwo.sort()\n    \n    # 初期値を設定\n    smallest, pair = float(\"inf\"), []  # 最小の差と対応するペアを初期化\n    oneI...",
          "link": "https://zenn.dev/takuh/articles/9221b331aa2c34",
          "publishedOn": "2023-08-10T08:59:18.000Z",
          "wordCount": 532,
          "title": "【Python】最小の差",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4hHer3hC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%259C%2580%25E5%25B0%258F%25E3%2581%25AE%25E5%25B7%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4hHer3hC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%259C%2580%25E5%25B0%258F%25E3%2581%25AE%25E5%25B7%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/keitakahata/articles/75451ae92ccc10",
          "author": "KeiTAKAHATA",
          "description": "経緯\nデータ分析を行うためにまずはデータを可視化することが多いと思います。\n何らかのcsvファイルが与えられた時、dataframeで読み込んだ後、ヒストグラムと箱ひげ図を出力するコードをまとめました。\nまた可視化を行う過程で外れ値が含まれていることもあると思います。外れ値を除去する場合にも対応できるようにしています。今回は四分位範囲による外れ値検出を行うコードを記載しておきます。\n今後も私がデータ可視化のために便利だと思った機能があれば順次追加していきます。\n\n 必要なライブラリ\nimport pandas as pd\nimport matplotlib.pyplot as plt...",
          "link": "https://zenn.dev/keitakahata/articles/75451ae92ccc10",
          "publishedOn": "2023-08-10T08:58:47.000Z",
          "wordCount": 1435,
          "title": "Pythonによるデータ可視化_ヒストグラムと箱ひげ図を同時に出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vCchsNOQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596_%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25A8%25E7%25AE%25B1%25E3%2581%25B2%25E3%2581%2592%25E5%259B%25B3%25E3%2582%2592%25E5%2590%258C%25E6%2599%2582%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KeiTAKAHATA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1NLRWNucHdfaXpMRjdyRWhqZHJtelpjbnlCd1QycTBYVmZuSS1Gc1dtPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vCchsNOQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596_%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25A8%25E7%25AE%25B1%25E3%2581%25B2%25E3%2581%2592%25E5%259B%25B3%25E3%2582%2592%25E5%2590%258C%25E6%2599%2582%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KeiTAKAHATA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1NLRWNucHdfaXpMRjdyRWhqZHJtelpjbnlCd1QycTBYVmZuSS1Gc1dtPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/techflagcorp/articles/fbd9ea60dc2e36",
          "author": "dagger1",
          "description": "SlackとChatGPT APIでチャットボットを作る パート3（function calling編）\nパート1（基礎編）、パート2（会話履歴管理編）と来て、パート3はやっとfunction calling編です。\n\n function callingとは\nfunction callingでは、ChatGPTが回答作成のために使用することができる「関数」をあらかじめ用意し、質問などとともにこの関数の仕様を含んだメッセージをChatGPTに送ります。そうするとChatGPTは関数を使用したい場合は使用したい関数の名前とその関数に与える引数をメッセージとして返してきます。これを受け取っ...",
          "link": "https://zenn.dev/techflagcorp/articles/fbd9ea60dc2e36",
          "publishedOn": "2023-08-10T05:53:27.000Z",
          "wordCount": 4465,
          "title": "SlackとChatGPT APIでチャットボットを作る パート3（function calling編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VxLAG0ct--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25883%25EF%25BC%2588function%2520calling%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VxLAG0ct--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25883%25EF%25BC%2588function%2520calling%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/efficientyk/articles/21b51a14ddc8dc",
          "author": "YK",
          "description": "Terminalでコマンドを実行する方法と、Pythonを実行する方法の2つをご紹介します。\n\n コマンドラインツールを使用する方法:\n例えば、700KB前後に変換したいとします。\n\n 1. まず、imagemagickをインストールします。これにはHomebrewが必要です。\nbrew install imagemagick\n\n 2. 以下のコマンドを使用して.HEICファイルを.JPGに変換し、サイズを変更します。\nfor file in *.HEIC; do magick \"$file\" -quality 70 -define jpeg:extent=700KB \"${file%....",
          "link": "https://zenn.dev/efficientyk/articles/21b51a14ddc8dc",
          "publishedOn": "2023-08-10T05:18:48.000Z",
          "wordCount": 471,
          "title": "Mac上で.HEIC画像を.JPGに変換し、容量を下げる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A_C6-GEd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E4%25B8%258A%25E3%2581%25A7.HEIC%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592.JPG%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2580%2581%25E5%25AE%25B9%25E9%2587%258F%25E3%2582%2592%25E4%25B8%258B%25E3%2581%2592%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YK%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkMTNhZmIyZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A_C6-GEd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E4%25B8%258A%25E3%2581%25A7.HEIC%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592.JPG%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2580%2581%25E5%25AE%25B9%25E9%2587%258F%25E3%2582%2592%25E4%25B8%258B%25E3%2581%2592%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YK%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkMTNhZmIyZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nowa0402/articles/985da2f250ae1b",
          "author": "nowa",
          "description": "SVG 出力したグラフから凡例を切り取りたい…\n前回の記事でデータ個数によるグラフの違いを解説しました。\n今回はSVG出力された画像から凡例とグラフを分けるTipsを紹介します。\nSVGの操作はPython標準搭載のxmlライブラリを使用しました。\nhttps://docs.python.org/ja/3/library/xml.etree.elementtree.html\n\n 前段: 前回出力したグラフ\n今回は以下コード（前回記事）で出力した画像を基に分割作業を行います。\nimport numpy as np\nimport plotly.graph_objects as go\nim...",
          "link": "https://zenn.dev/nowa0402/articles/985da2f250ae1b",
          "publishedOn": "2023-08-09T23:40:16.000Z",
          "wordCount": 2400,
          "title": "Plotlyで出力したSVGの読み書きをするTips",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mYDJ8Dbx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Plotly%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259FSVG%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E6%259B%25B8%25E3%2581%258D%25E3%2582%2592%25E3%2581%2599%25E3%2582%258BTips%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nowa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0OWMwNThkZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mYDJ8Dbx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Plotly%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259FSVG%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E6%259B%25B8%25E3%2581%258D%25E3%2582%2592%25E3%2581%2599%25E3%2582%258BTips%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nowa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0OWMwNThkZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/5b8ea4aab9bc95",
          "author": "takuh",
          "description": "作るもの\n行列を転置する関数。\n\n 実装\n\ntranspose_matrix.py\ndef transposeMatrix(matrix):\n    return list(zip(*matrix))\n\n# テスト\nif __name__ == \"__main__\":\n    matrix = [[1, 2, 3], [4, 5, 6]]\n    print(transposeMatrix(matrix))\n\n\n出力\n[(1, 4), (2, 5), (3, 6)]\n\n\n 補足\n\nzip関数の使用例\n\n\nzip.py\nnames = ['Alice', 'Bob', 'Charlie...",
          "link": "https://zenn.dev/takuh/articles/5b8ea4aab9bc95",
          "publishedOn": "2023-08-09T21:56:16.000Z",
          "wordCount": 432,
          "title": "【Python】行列の転置",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3SfPNAOs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E8%25A1%258C%25E5%2588%2597%25E3%2581%25AE%25E8%25BB%25A2%25E7%25BD%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3SfPNAOs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E8%25A1%258C%25E5%2588%2597%25E3%2581%25AE%25E8%25BB%25A2%25E7%25BD%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aew2sbee/articles/docker-desktop-install",
          "author": "ふるた なおき🥝",
          "description": "はじめに\n社内の有志メンバーの向けにDocker DeskTopのインストールの方法を解説します。\n\n Docker DeskTopのインストール\n\n 1. インストーラーのダウンロード\n下記URLをクリックし、Docker Desktopのインストーラーをダウンロードします。\n\n\n\n 2. インストール開始\nデフォルトのままのチェック状態でOKをクリックしてください。\n\nインストールに少し時間がかかります。\n\n\n 3. PCの再起動\n!\nClose and restartをクリックすると、 PCが再起動します。注意してください！\n※WSL2を有効化する為に、PCの再起動が必要です。...",
          "link": "https://zenn.dev/aew2sbee/articles/docker-desktop-install",
          "publishedOn": "2023-08-09T12:06:40.000Z",
          "wordCount": 371,
          "title": "【Docker】Docker DeskTopのインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B9jxvj8I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591Docker%2520DeskTop%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B9jxvj8I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591Docker%2520DeskTop%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dec79f345830b2",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-281 A - Count Down\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    while n >= 0:\n        print(n)\n        n -= 1\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/dec79f345830b2",
          "publishedOn": "2023-08-09T10:50:43.000Z",
          "wordCount": 228,
          "title": "［AtCoder］ABC-281｜A - Count Down",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CJzulHik--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-281%25EF%25BD%259CA%2520-%2520Count%2520Down%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CJzulHik--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-281%25EF%25BD%259CA%2520-%2520Count%2520Down%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/30543d974f34dc",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-281 B - Sandwich Number\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    r = True\n    if not ('A' <= s[0] <= 'Z'):\n        r = False\n    elif not ('A' <= s[-1] <= 'Z'):\n        r = False\n    elif not s[1:-1].isdigit():\n        r = False...",
          "link": "https://zenn.dev/hyperdb/articles/30543d974f34dc",
          "publishedOn": "2023-08-09T10:50:43.000Z",
          "wordCount": 448,
          "title": "［AtCoder］ABC-281｜B - Sandwich Number",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RjKzLKPE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-281%25EF%25BD%259CB%2520-%2520Sandwich%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RjKzLKPE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-281%25EF%25BD%259CB%2520-%2520Sandwich%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/analog_technica/articles/cc5ba8535052de",
          "author": "analog_technica",
          "description": "結論\n\nDockerfile\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nENV PATH=\"/root/.cargo/bin:$PATH\"\n\n\n 背景\n深層学習モデルを含むアプリケーションを作るため、DockerにTransformersをインストールしようとしたところ↓のエラーでハマりました。\nError: Can't Find Rust Compiler\nTransformersと依存関係のあるSafetensorsというライブラリのインストールにRustのコンパイラが必...",
          "link": "https://zenn.dev/analog_technica/articles/cc5ba8535052de",
          "publishedOn": "2023-08-09T07:41:09.000Z",
          "wordCount": 163,
          "title": "Docker buildでError: Can't Find Rust Compilerに困ったら",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tOWZvv_w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520build%25E3%2581%25A7Error%253A%2520Can%2527t%2520Find%2520Rust%2520Compiler%25E3%2581%25AB%25E5%259B%25B0%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:analog_technica%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhZTdkYmRiYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tOWZvv_w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520build%25E3%2581%25A7Error%253A%2520Can%2527t%2520Find%2520Rust%2520Compiler%25E3%2581%25AB%25E5%259B%25B0%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:analog_technica%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhZTdkYmRiYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/6d12ec6a82db7f",
          "author": "takuh",
          "description": "作るもの\n与えられた整数のリスト（コインの額面）を使用して作成できない最小のお金の額を計算する関数。\n\n 実装\ndef nonConstructibleChange(coins):\n    # コインの額面を昇順にソートする\n    coins.sort()\n\n    # コインを使って作成できる最小のお金の額を表す変数を初期化\n    minimum_change = 0\n\n    # ソートされたコインのリストを順に走査\n    for coin in coins:\n        # 現在のコインの額面が、最小のお金の額に1を加えたものよりも大きい場合、ループを終了\n     ...",
          "link": "https://zenn.dev/takuh/articles/6d12ec6a82db7f",
          "publishedOn": "2023-08-09T03:27:45.000Z",
          "wordCount": 186,
          "title": "【Python】構築不可能なお金",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--enf9t78W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%25A7%258B%25E7%25AF%2589%25E4%25B8%258D%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2581%258A%25E9%2587%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--enf9t78W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%25A7%258B%25E7%25AF%2589%25E4%25B8%258D%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2581%258A%25E9%2587%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kd_gamegikenblg/articles/bf7c2af3a395d2",
          "author": "shirokuma1101",
          "description": "はじめに\n昨今のゲームはMobile/Pc/etc...とPlatform関わらず、オンラインユーザーデータ/ランキング/リアルタイム対戦/etc...と何らかの方法でネットワークにアクセスしています。今や繋がっていることが当たり前になっていますが、いざゲーム制作に実装しようとなった際にどう実装したら良いか分からない人も多いと思います。最近は情報も増えてきており、UnityやUnrealEngineならNetcode for GameObjectsやMultiplayerが公式からリリースされており、公式リファレンスやプロダクトで使った実例の技術ブログ等日本語でもかなりの量の情報があ...",
          "link": "https://zenn.dev/kd_gamegikenblg/articles/bf7c2af3a395d2",
          "publishedOn": "2023-08-09T03:00:00.000Z",
          "wordCount": 12359,
          "title": "C++とPythonでオンラインランキングシステムを一から作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yG1s1Db5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:C%252B%252B%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25B8%2580%25E3%2581%258B%25E3%2582%2589%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E7%25A5%259E%25E6%2588%25B8%25E9%259B%25BB%25E5%25AD%2590%25E5%25B0%2582%25E9%2596%2580%25E5%25AD%25A6%25E6%25A0%25A1%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E6%258A%2580%25E8%25A1%2593%25E7%25A0%2594%25E7%25A9%25B6%25E9%2583%25A8%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:shirokuma1101%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MTBiZjVlYjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yG1s1Db5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:C%252B%252B%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25B8%2580%25E3%2581%258B%25E3%2582%2589%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E7%25A5%259E%25E6%2588%25B8%25E9%259B%25BB%25E5%25AD%2590%25E5%25B0%2582%25E9%2596%2580%25E5%25AD%25A6%25E6%25A0%25A1%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E6%258A%2580%25E8%25A1%2593%25E7%25A0%2594%25E7%25A9%25B6%25E9%2583%25A8%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:shirokuma1101%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MTBiZjVlYjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/esm/articles/7ad6983e5893c2",
          "author": "sfjwr",
          "description": "この記事は「おしゃべりクマちゃん🧸」シリーズの記事になります。インデックスはコチラ。前回の記事はコチラ。\n発言生成機能を作成するにあたって、ChatGPTのAPIに与えるプロンプトを作成した時の話について、紹介します😀\n\n プロンプトエンジニアリングとは\nChatGPTのAPIは、プロンプトと呼ばれる指示を文章で与えてやることで、その文章の内容に応じた振る舞いを行います。プロンプトは日本語や英語などの自然言語を用いて、通常の文章として記述します。ChatGPTはプロンプトを受け取り、その内容に応じた振る舞いを行い、回答を生成します。\n前回の記事の話の繰り返しになりますが、例えばプロンプト...",
          "link": "https://zenn.dev/esm/articles/7ad6983e5893c2",
          "publishedOn": "2023-08-09T01:00:00.000Z",
          "wordCount": 291,
          "title": "【FDO43】【会話文章生成 その2】発言生成機能のプロンプトについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--U-la0k0O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FDO43%25E3%2580%2591%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%2520%25E3%2581%259D%25E3%2581%25AE2%25E3%2580%2591%25E7%2599%25BA%25E8%25A8%2580%25E7%2594%259F%25E6%2588%2590%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25B0%25B8%25E5%2592%258C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%259E%25E3%2583%258D%25E3%2582%25B8%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520Tech%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:sfjwr%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzlhYmNlZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WU00VG5xR2pzRl9UYS10V0xrYVpzVy1YT2pDb1NOTmZ3LXRTVk89czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--U-la0k0O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FDO43%25E3%2580%2591%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%2520%25E3%2581%259D%25E3%2581%25AE2%25E3%2580%2591%25E7%2599%25BA%25E8%25A8%2580%25E7%2594%259F%25E6%2588%2590%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25B0%25B8%25E5%2592%258C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%259E%25E3%2583%258D%25E3%2582%25B8%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520Tech%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:sfjwr%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzlhYmNlZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WU00VG5xR2pzRl9UYS10V0xrYVpzVy1YT2pDb1NOTmZ3LXRTVk89czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/bern/articles/c2c44d111dcdef",
          "author": "ベルン",
          "description": "pythonのrequetsを使ってWebサイト上の添付ファイルをダウンロードしようとしたときにつまづいたところを解決できたので備忘録として残します。\n\n 発生した現象\nログインが必要なページ内の添付ファイルをダウンロードする時、request.getでダウンロードしようとしたところ、ダウンロードしたファイルの中身がHTMLのソースコードでした。\nimport requests\n\nurl = \"https://example.com/download\"\nparams = {\n    'fileName': 'ファイル.pdf',\n}\nusername = \"your_username\"\n...",
          "link": "https://zenn.dev/bern/articles/c2c44d111dcdef",
          "publishedOn": "2023-08-08T23:22:25.000Z",
          "wordCount": 875,
          "title": "equestsでダウロードしたファイルの中身がHTMLコードになっている",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DKgJRskc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:equests%25E3%2581%25A7%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2581%258CHTML%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxNTlmNTlkNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DKgJRskc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:equests%25E3%2581%25A7%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2581%258CHTML%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxNTlmNTlkNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bern/articles/438d22de55c0dd",
          "author": "ベルン",
          "description": "pythonでプログラムを作るたび、最初にする作業なので一連の作業をまとめます。\n\n 実行環境\n\nWindows10 (mac osでも動いた)\nVSCode\n\n\n venv仮想環境の構築\n\n\nvenvをインストール\n下記コマンドをVSCodeのターミナルにコピーペーストして実行します。\npy37envが仮想環境名です。\n名前は好きなもので大丈夫ですが、後からどんな仮想環境なのかわかるような名前にするとわかりやすいです。\npy -3.7 -m venv py37env\n\n\n\nvenv起動コマンド\n仮想環境名＋\\Scripts\\activate.batで起動できます。\n前回のvenvインス...",
          "link": "https://zenn.dev/bern/articles/438d22de55c0dd",
          "publishedOn": "2023-08-08T22:32:52.000Z",
          "wordCount": 279,
          "title": "VSCodeでpython venv仮想環境を構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dZqVdNfb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7python%2520venv%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxNTlmNTlkNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dZqVdNfb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7python%2520venv%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxNTlmNTlkNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bern/articles/b6f4f2a592a500",
          "author": "ベルン",
          "description": "指定のGitHubリポジトリにPythonを用いて画像を自動的にアップロードする方法について記述します。\nPythonのモジュールであるPyGithubを使用することで、大量の画像などのファイルをループ処理しながらリポジトリにアップロードするところまでの手順を備忘録として残します。\n\n 実行環境\n\nWindows10\nVSCode\nvenv仮想環境\npython7\n\n\n Pygithubをインストール\npython仮想環境に入って以下のコードをターミナルで実行します。\npip install PyGithub\n\n Githubにプッシュする時のコード\nimport os\nimport b...",
          "link": "https://zenn.dev/bern/articles/b6f4f2a592a500",
          "publishedOn": "2023-08-08T22:23:31.000Z",
          "wordCount": 762,
          "title": "pythonでGithubにプッシュする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8sBvemwJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7Github%25E3%2581%25AB%25E3%2583%2597%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxNTlmNTlkNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8sBvemwJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7Github%25E3%2581%25AB%25E3%2583%2597%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxNTlmNTlkNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/allforbigfire/articles/7e47b4daf7d943",
          "author": "allforbigfire",
          "description": "バックスラッシュ（\\）とnの前に、半角スペースが2個ないと改行できませんでした。\n\n    # APIからのレスポンスを出力\n    st.write('OpenAI ChatGPT(gpt-3.5-turbo)  \\n' + response['choices'][0]['message']['content'])\n    # st.write('OpenAI ChatGPT(gpt-3.5-turbo) \\n' + response['choices'][0]['message']['content'])",
          "link": "https://zenn.dev/allforbigfire/articles/7e47b4daf7d943",
          "publishedOn": "2023-08-08T16:18:58.000Z",
          "wordCount": 82,
          "title": "streamlitのst.writeで改行する場合は半角スペースが2個必要",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vxQ8WKY2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:streamlit%25E3%2581%25AEst.write%25E3%2581%25A7%25E6%2594%25B9%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AF%25E5%258D%258A%25E8%25A7%2592%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%258C2%25E5%2580%258B%25E5%25BF%2585%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:allforbigfire%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyOTJhZjI1OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vxQ8WKY2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:streamlit%25E3%2581%25AEst.write%25E3%2581%25A7%25E6%2594%25B9%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AF%25E5%258D%258A%25E8%25A7%2592%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%258C2%25E5%2580%258B%25E5%25BF%2585%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:allforbigfire%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyOTJhZjI1OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-tmp-list-replacer",
          "author": "derwind",
          "description": "目的\nふと Python の list で中身を一時的に置き換えながらループを回したいという謎めいたことがしたくなって、試したらできたので備忘録を残す。\n\n 実装\ncontextlib --- with 文コンテキスト用ユーティリティ を参考に、例えば以下のようになりそうである。一時的に 1 個だけ要素を置換することもできるし、複数置換することもできる。\nfrom __future__ import annotations\nimport contextlib\nfrom typing import Any\nfrom collections.abc import Sequence\n\n\n@...",
          "link": "https://zenn.dev/derwind/articles/dwd-tmp-list-replacer",
          "publishedOn": "2023-08-08T15:54:42.000Z",
          "wordCount": 1053,
          "title": "Python でリストの中身を一時的に置き換える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fIWf7JH_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E4%25B8%2580%25E6%2599%2582%25E7%259A%2584%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fIWf7JH_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E4%25B8%2580%25E6%2599%2582%25E7%259A%2584%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/838be0faff33a5",
          "author": "takuh",
          "description": "作る関数\n与えられた整数の配列から、3つの数の組み合わせを見つけて返す関数。\n→ その3つの数の合計が目標の合計値（targetSum）と一致する組み合わせを出力する。\n\n 実装\n\nthree_sum.py\ndef threeNumberSum(array, targetSum):\n    # まず、入力された配列を昇順にソートする。\n    array.sort()\n    # 返すべき結果を保存する空のリストを作成する。\n    res = []\n\n    # 配列の各要素を順番に見ていく。\n    for i in range(len(array)):\n        # 与え...",
          "link": "https://zenn.dev/takuh/articles/838be0faff33a5",
          "publishedOn": "2023-08-08T11:07:32.000Z",
          "wordCount": 607,
          "title": "【Python】３つの数字の合計",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rgub_oD8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25EF%25BC%2593%25E3%2581%25A4%25E3%2581%25AE%25E6%2595%25B0%25E5%25AD%2597%25E3%2581%25AE%25E5%2590%2588%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rgub_oD8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25EF%25BC%2593%25E3%2581%25A4%25E3%2581%25AE%25E6%2595%25B0%25E5%25AD%2597%25E3%2581%25AE%25E5%2590%2588%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aew2sbee/articles/python-3-10-11-install",
          "author": "ふるた なおき🥝",
          "description": "はじめに\n社内の有志メンバーでdjango rest frameworkを利用すること決まりました。\nPython3.10.11をインストールする方法を解説します。\n!\n※Python3.10.11を選んだ理由は、\n2023/08月時点でsecurityかつEnd of supportが長いものを選択しました。\n\n\n\n 1. インストーラーをダウンロードする\n下記インストーラーのURLをクリックする\n※勝手にダウンロードされます\nPython3.10.11インストーラー\n\n 2. ダウンロードされたインストーラーを実行する\npython-3.10.11-amd64.exeをダブルクリ...",
          "link": "https://zenn.dev/aew2sbee/articles/python-3-10-11-install",
          "publishedOn": "2023-08-08T10:35:22.000Z",
          "wordCount": 252,
          "title": "【Python】Python3.10.11をインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eFrjNzJ8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Python3.10.11%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eFrjNzJ8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Python3.10.11%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/fa31d212f0a19e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-280 A - Pawn on a Grid\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    h, w = getIntMap()\n    s = getStringRow(h)\n\n    c = 0\n    for r in s:\n        c += r.count('#')\n    print(c)\n\n\nif __n...",
          "link": "https://zenn.dev/hyperdb/articles/fa31d212f0a19e",
          "publishedOn": "2023-08-08T04:21:14.000Z",
          "wordCount": 327,
          "title": "［AtCoder］ABC-280｜A - Pawn on a Grid",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--buu4T9Qv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-280%25EF%25BD%259CA%2520-%2520Pawn%2520on%2520a%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--buu4T9Qv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-280%25EF%25BD%259CA%2520-%2520Pawn%2520on%2520a%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a55b4a9963160a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-280 B - Inverse Prefix Sum\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    s = getIntList()\n    a = []\n\n    for i in range(len(s)):\n        if i == 0:\n            x = s[i]\n        else:\n...",
          "link": "https://zenn.dev/hyperdb/articles/a55b4a9963160a",
          "publishedOn": "2023-08-08T04:21:13.000Z",
          "wordCount": 400,
          "title": "［AtCoder］ABC-280｜B - Inverse Prefix Sum",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dIYcIG1B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-280%25EF%25BD%259CB%2520-%2520Inverse%2520Prefix%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dIYcIG1B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-280%25EF%25BD%259CB%2520-%2520Inverse%2520Prefix%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/straydog/articles/cf3d039a100d3d",
          "author": "stray dog",
          "description": "はじめに\nこの記事は、FastAPI+Cloud Run+Firestore で Slack アプリを作る際の備忘録のようなものです。\n全てを話すと長くなるので、一応適当に作成したリポジトリを用意しました。\n\n他の人の記事でも、firestore を使用しているものはありますが、Oauth テーブルも NoSQL で実装しているものをスニペット付きで記述ある人が見つからなかったので、ないならと思い。そんなにテストしてないので、参考程度にしてもらえればと思います。一応 ouath による他ワークスペースへのインストールも可能です。\nなぜこの構成にしてるかというと、以下のような利点があり...",
          "link": "https://zenn.dev/straydog/articles/cf3d039a100d3d",
          "publishedOn": "2023-08-08T03:15:58.000Z",
          "wordCount": 989,
          "title": "Fast API+Cloud run+FirestoreでSlackアプリを作る【OauthテーブルもNoSQLを使用】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GQtn2INj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Fast%2520API%252BCloud%2520run%252BFirestore%25E3%2581%25A7Slack%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E3%2580%2590Oauth%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2582%2582NoSQL%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GQtn2INj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Fast%2520API%252BCloud%2520run%252BFirestore%25E3%2581%25A7Slack%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E3%2580%2590Oauth%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2582%2582NoSQL%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/techflagcorp/articles/ebbec52ed11ff9",
          "author": "dagger1",
          "description": "SlackとChatGPT APIでチャットボットを作る パート2（ function calling編 会話履歴管理編）\nパート1ではチャットボットの骨組み部分を作りました。パート2ではfunction callingを使って自分のデータベースにアクセスする機能を実装 しようと思いますが、 するつもりだったのですが、その前にまずチャットの履歴管理を強化しようとしたらそこそこ長くなったので今回は会話履歴管理編とします。\n\n 履歴管理の強化\nパート1のutilsモジュールを再掲します。\n\nutils.py\nfrom typing import List, Dict, Tuple, Op...",
          "link": "https://zenn.dev/techflagcorp/articles/ebbec52ed11ff9",
          "publishedOn": "2023-08-08T00:40:20.000Z",
          "wordCount": 2679,
          "title": "SlackとChatGPT APIでチャットボットを作る パート2（会話履歴管理編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b-HxX6Hs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25882%25EF%25BC%2588%25E4%25BC%259A%25E8%25A9%25B1%25E5%25B1%25A5%25E6%25AD%25B4%25E7%25AE%25A1%25E7%2590%2586%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b-HxX6Hs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25882%25EF%25BC%2588%25E4%25BC%259A%25E8%25A9%25B1%25E5%25B1%25A5%25E6%25AD%25B4%25E7%25AE%25A1%25E7%2590%2586%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/umi_mori/articles/langchain-indexes-youtube",
          "author": "ますみ@エンジニア",
          "description": "はじめまして、ますみです！\n\nこの記事では、「LangChain」というライブラリを使って、「特定のYouTube動画を学習したChatGPTの実装方法」を解説します。\nChatGPTやLangChainについてまだ詳しくない方は、こちらを先にご覧ください◎\nhttps://zenn.dev/umi_mori/books/chatbot-chatgpt\nhttps://zenn.dev/umi_mori/books/prompt-engineer\n!\n文字よりも「動画の方が理解しやすい」という方はこちらをご覧ください◎\nYouTubeを学習したChatGPTの実装方法【Python / ...",
          "link": "https://zenn.dev/umi_mori/articles/langchain-indexes-youtube",
          "publishedOn": "2023-08-07T23:55:31.000Z",
          "wordCount": 767,
          "title": "YouTubeを学習したChatGPTの実装方法【Python / LangChain】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bep3wpah--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%25E3%2582%2592%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%259FChatGPT%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590Python%2520%252F%2520LangChain%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bep3wpah--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%25E3%2582%2592%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%259FChatGPT%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590Python%2520%252F%2520LangChain%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/not75743/articles/7074e1b4dbbcbf",
          "author": "not75743",
          "description": "はじめに\n昨日はpythonのpillowを使って画像に外枠を追加しました。\nhttps://zenn.dev/not75743/articles/718e72a20453ff\n今回はこれをWebアプリにして使いやすくしてみました。\n環境はDocker(compose)、フレームワークはFlaskです。\n\n どんなアプリ？\nこのようなアクセスして枠線をつけたい画像をアップロードすると\n\n枠線をつけたものをダウンロードすることができます。\n\n\n 環境\n$ cat /etc/lsb-release \nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=20.04\nDIST...",
          "link": "https://zenn.dev/not75743/articles/7074e1b4dbbcbf",
          "publishedOn": "2023-08-07T14:31:52.000Z",
          "wordCount": 1142,
          "title": "画像に枠線をつけてくれるWEBアプリを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kllsM_Ae--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E6%259E%25A0%25E7%25B7%259A%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:not75743%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Njc3YWViZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kllsM_Ae--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E6%259E%25A0%25E7%25B7%259A%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:not75743%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Njc3YWViZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/d13bdf5c862680",
          "author": "takuh",
          "description": "作るもの\n対戦カード（competitions）と結果（results）を与えて、最終的なトーナメントの勝者であるチーム名を返す関数。\n\n 実装\n\ntournament_winner.py\ndef tournamentWinner(competitions, results):\n    dict = {}  # 勝利回数をカウントするための空の辞書を作成\n\n    # 各競技の結果とその対戦を順番に処理\n    for i, comp in enumerate(competitions):\n        if results[i]:  # もしi番目の競技の結果がTrue（チーム1...",
          "link": "https://zenn.dev/takuh/articles/d13bdf5c862680",
          "publishedOn": "2023-08-07T14:17:27.000Z",
          "wordCount": 449,
          "title": "【Python】トーナメント優勝者",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3INHUVUZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2588%25E3%2583%25BC%25E3%2583%258A%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E5%2584%25AA%25E5%258B%259D%25E8%2580%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3INHUVUZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2588%25E3%2583%25BC%25E3%2583%258A%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E5%2584%25AA%25E5%258B%259D%25E8%2580%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/umi_mori/articles/langchain-async-run",
          "author": "ますみ@エンジニア",
          "description": "はじめまして、ますみです！\n\nこの記事では、「LangChain」というライブラリを使って、「複数のプロンプト処理を高速化する方法」を解説します。\nChatGPT APIを使ったシステムを作った時に、処理時間がかかりすぎて、高速化したい時ってありますよね。\nそんな時に、LangChainのAgentとasyncioライブラリを組み合わせることで、処理を同時に実行することで高速化することができます！\nChatGPTやLangChainについてまだ詳しくない方は、こちらを先にご覧ください◎\nhttps://zenn.dev/umi_mori/books/chatbot-chatgpt\nhtt...",
          "link": "https://zenn.dev/umi_mori/articles/langchain-async-run",
          "publishedOn": "2023-08-07T11:47:12.000Z",
          "wordCount": 2753,
          "title": "並列処理による高速化の方法【ChatGPT / LangChain / Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Nsm3YgY4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590ChatGPT%2520%252F%2520LangChain%2520%252F%2520Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Nsm3YgY4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590ChatGPT%2520%252F%2520LangChain%2520%252F%2520Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/umi_mori/articles/langchain-indexes-webpage",
          "author": "ますみ@エンジニア",
          "description": "はじめまして、ますみです！\n\nこの記事では、「LangChain」というライブラリを使って、「特定のウェブページを学習したChatGPTの実装方法」を解説します。\nこの記事を読むことで、企業や商品の紹介サイト、あるいはプログラミングの難解なドキュメンテーションを元にしたチャットボットの作成が可能になります。\nChatGPTやLangChainについてまだ詳しくない方は、こちらを先にご覧ください◎\nhttps://zenn.dev/umi_mori/books/chatbot-chatgpt\nhttps://zenn.dev/umi_mori/books/prompt-engineer\n!...",
          "link": "https://zenn.dev/umi_mori/articles/langchain-indexes-webpage",
          "publishedOn": "2023-08-07T06:18:11.000Z",
          "wordCount": 1021,
          "title": "ウェブページをChatGPTに学習させる方法【Python / LangChain / FAQ】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--irhgfK-N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592ChatGPT%25E3%2581%25AB%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590Python%2520%252F%2520LangChain%2520%252F%2520FAQ%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--irhgfK-N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592ChatGPT%25E3%2581%25AB%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590Python%2520%252F%2520LangChain%2520%252F%2520FAQ%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/91367b290f84eb",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-279 A - wwwvvvvvv\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    print(s.count('v') + s.count('w') * 2)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/91367b290f84eb",
          "publishedOn": "2023-08-07T03:53:07.000Z",
          "wordCount": 227,
          "title": "［AtCoder］ABC-279｜A - wwwvvvvvv",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lJCGnqIA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-279%25EF%25BD%259CA%2520-%2520wwwvvvvvv%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lJCGnqIA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-279%25EF%25BD%259CA%2520-%2520wwwvvvvvv%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/31e47fc7e2f34e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-279 B - LOOKUP\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n    t = getString()\n\n    print('Yes' if s.find(t) >= 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/31e47fc7e2f34e",
          "publishedOn": "2023-08-07T03:53:07.000Z",
          "wordCount": 233,
          "title": "［AtCoder］ABC-279｜B - LOOKUP",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i0RsvA6y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-279%25EF%25BD%259CB%2520-%2520LOOKUP%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i0RsvA6y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-279%25EF%25BD%259CB%2520-%2520LOOKUP%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazh/articles/00003_mac_vscode_python_venv_enviroment",
          "author": "日高一博",
          "description": "環境と背景\nMacbook M2でHomebrewを使ってPythonをインストール。\nその後、任意のフォルダにvenvで仮想環境を作成。\nしかし、VSCodeのインタプリタ選択のリストに作成したvenv環境が出てこない。\nこのインタプリタ選択のリストに作成したvenv環境を表示させる方法をメモしておく。\n※ 赤丸の場所をクリックすると、上に「インタープリターの選択」が出てくる。\n\n\n 設定方法\nsettings.jsonファイルに以下を書き込む。\n// Folders in your home directory to look into for virtual environme...",
          "link": "https://zenn.dev/kazh/articles/00003_mac_vscode_python_venv_enviroment",
          "publishedOn": "2023-08-06T14:37:48.000Z",
          "wordCount": 372,
          "title": "[備忘録] - macのVSCodeで作成したpythonのvenv環境が利用できるインタプリタ一覧に出てこなかった時の設定方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bwHXpVvg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255D%2520-%2520mac%25E3%2581%25AEVSCode%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259Fpython%25E3%2581%25AEvenv%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%258C%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%2593%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2597%25A5%25E9%25AB%2598%25E4%25B8%2580%25E5%258D%259A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0YyV0N0TktCQmpjb1hlMkRqUjVDQS1sb3hUNHhCcUlrTmRxQ3ZGWTM0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bwHXpVvg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255D%2520-%2520mac%25E3%2581%25AEVSCode%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259Fpython%25E3%2581%25AEvenv%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%258C%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%2593%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2597%25A5%25E9%25AB%2598%25E4%25B8%2580%25E5%258D%259A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y0YyV0N0TktCQmpjb1hlMkRqUjVDQS1sb3hUNHhCcUlrTmRxQ3ZGWTM0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/not75743/articles/718e72a20453ff",
          "author": "not75743",
          "description": "はじめに\n今回はpythonのPillowで画像に外枠をつけてみました。\n外枠をつければZennの添付画像がさらに見やすくなるため、ぜひともマスターしたいところです。\n\n 方針\nPillowのImageOpsモジュールを使います。\nexpandメソッドで画像に枠線を追加することが出来るため、今回の用途にドンピシャです。\nhttps://pillow.readthedocs.io/en/stable/reference/ImageOps.html#PIL.ImageOps.expand\n\n イメージ図\n\n\n 環境\nUbuntu 20.04\nPython 3.11.1\n\n 検証\n\n 使用...",
          "link": "https://zenn.dev/not75743/articles/718e72a20453ff",
          "publishedOn": "2023-08-06T13:11:36.000Z",
          "wordCount": 559,
          "title": "PythonのPillowで画像に外枠をつける",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nhY-uPJU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEPillow%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E5%25A4%2596%25E6%259E%25A0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:not75743%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Njc3YWViZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nhY-uPJU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEPillow%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E5%25A4%2596%25E6%259E%25A0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:not75743%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Njc3YWViZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nishimoto/articles/8d575924cc619d",
          "author": "nishimoto",
          "description": "概要\nOptunaのLightGBMTunerを読んでいたら、LightGBMTunerにハイパラチューニングのナレッジがぶっこまれていたのでシェア。\nhttps://optuna.readthedocs.io/en/stable/_modules/optuna/integration/_lightgbm_tuner/optimize.html#LightGBMTuner\n\n\n 何をチューニングすればいいの？\n以下に「feature fraction, num_leaves, bagging_fraction および bagging_freq のいずれかによる変化が大きく」と記載があ...",
          "link": "https://zenn.dev/nishimoto/articles/8d575924cc619d",
          "publishedOn": "2023-08-06T13:11:32.000Z",
          "wordCount": 252,
          "title": "OptunaのLightGBMTunerに学ぶ、LightGBMのハイパーパラメーターのチューニング方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qOgCsqqs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Optuna%25E3%2581%25AELightGBMTuner%25E3%2581%25AB%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%2581LightGBM%25E3%2581%25AE%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qOgCsqqs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Optuna%25E3%2581%25AELightGBMTuner%25E3%2581%25AB%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%2581LightGBM%25E3%2581%25AE%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shizukakokoro/articles/95ee6a39f3a474",
          "author": "静心",
          "description": "今回は、Neuma の音の調律について書いていきます。\nNeuma では、音の表示方法を Scale として表現していますが、同様に 音の調律もクラスとして表現 しています。\n前回 ->\n\n\n 音の調律\n皆さんが普段使っている・聞き慣れている音は、 12平均律 という調律で調律されています。\n12平均律は、 1オクターブを12等分 したものです。\n1オクターブは周波数で2倍になるので、12平均律では、1オクターブを2の12乗根で割った周波数の音を1音階としています。\n12平均律は非常に便利です。\nなぜなら、 全ての音が等間隔 になっているからです。\n全ての音が等間隔なら、カラオケで...",
          "link": "https://zenn.dev/shizukakokoro/articles/95ee6a39f3a474",
          "publishedOn": "2023-08-06T12:26:38.000Z",
          "wordCount": 1104,
          "title": "あらゆる理論で音楽を作成・分析できるPythonライブラリ Neuma を作成する (3) - 音の調律 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Hw4nED09--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A7%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2583%25BB%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520Neuma%2520%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%25283%2529%2520-%2520%25E9%259F%25B3%25E3%2581%25AE%25E8%25AA%25BF%25E5%25BE%258B%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Hw4nED09--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A7%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2583%25BB%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520Neuma%2520%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%25283%2529%2520-%2520%25E9%259F%25B3%25E3%2581%25AE%25E8%25AA%25BF%25E5%25BE%258B%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/selllous/articles/retnet_tutorial",
          "author": "celery",
          "description": "概要\nRetentive Network（RetNet）はMicrosoft ResearchとTsinghua Universityが共同で発表した大規模言語モデル向けアーキテクチャであり、その学習速度の速さやメモリ効率の高さから、Transformerの後継モデルとして注目されています。\nRetNetの公式ソースコードは、こちらにアップロードされています。ただし、8/6現在では、このソースコードの使用方法の記載は見当たりません。\nそこで本記事では、この公式のソースコードを使用し、wiki-text103データセットをRetNetで学習・評価・推論する方法を説明します。\n\n 検証...",
          "link": "https://zenn.dev/selllous/articles/retnet_tutorial",
          "publishedOn": "2023-08-06T08:34:18.000Z",
          "wordCount": 1373,
          "title": "RetNetによる学習・評価・推論",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zJ11D_J5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RetNet%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25BB%25E8%25A9%2595%25E4%25BE%25A1%25E3%2583%25BB%25E6%258E%25A8%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:celery%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlYzAyMzM5ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zJ11D_J5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RetNet%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25BB%25E8%25A9%2595%25E4%25BE%25A1%25E3%2583%25BB%25E6%258E%25A8%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:celery%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlYzAyMzM5ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/jamesjiang/articles/b08afed834c55f",
          "author": "Jiang",
          "description": "OpenAIが開発したChatGPTは非常に高い性能を持っています。しかし、自分のドキュメントを読み込ませるためには月額20ドルの料金が必要で、プライバシーの懸念も存在します。そのため、ローカルのドキュメントを大規模な言語モデルに読ませる「PrivateGPT」と、Metaが最近公開したGPT3.5に匹敵する性能を持つと言われる「LLaMa2」を使用して、オフラインのチャットAIを実装する試みを行いました。\n結果として、下の図に示すように、質問に対してローカルのドキュメントに基づく回答を参考文献とともに提供することができ、高い性能を発揮しました。\n\n日本語訳\n\n質問:\nアメリカ合衆国大統...",
          "link": "https://zenn.dev/jamesjiang/articles/b08afed834c55f",
          "publishedOn": "2023-08-06T08:07:06.000Z",
          "wordCount": 730,
          "title": "LLaMa2 + PrivateGPTでローカルドキュメントを読めるオフラインチャットAIを実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dhwIkssJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLaMa2%2520%252B%2520PrivateGPT%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258B%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588AI%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jiang%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZDVjOTliOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dhwIkssJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLaMa2%2520%252B%2520PrivateGPT%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258B%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588AI%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jiang%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZDVjOTliOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hr20k_/articles/5384f429633160",
          "author": "hr20k_",
          "description": "結論\n# firebase deplop --only functions:[codebase]:[functionName]\n% firebase deplop --only functions:py:hello_world\n\n 困っていたこと\nFirebase Functions をデプロイする際､特定の関数のみデプロイしたい場合があります｡\nその場合､ドキュメントに書いてあるとおり下記のコマンドでデプロイすることができます｡\n# firebase deplop --only functions:[functionName]\n% firebase deplop --only fu...",
          "link": "https://zenn.dev/hr20k_/articles/5384f429633160",
          "publishedOn": "2023-08-06T06:45:24.000Z",
          "wordCount": 377,
          "title": "Firebase Functions で特定のコードベースの特定の関数をデプロイする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c32M7suU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firebase%2520Functions%2520%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hr20k_%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNDIyY2IzNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c32M7suU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firebase%2520Functions%2520%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hr20k_%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNDIyY2IzNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nishimoto/articles/086508291c8a25",
          "author": "nishimoto",
          "description": "とても便利なLightGBMTunerですが、探索範囲がソースコードにしか書いてなかったのでメモ\n\n 結論\nparam = {\n    \"lambda_l1\": trial.suggest_float(\"lambda_l1\", 1e-8, 10.0, log=True)\n    \"lambda_l2\": trial.suggest_float(\"lambda_l2\", 1e-8, 10.0, log=True)\n    \"num_leaves\": trial.suggest_int(\"num_leaves\", 2, 256)\n    \"feature_fraction\": trial.s...",
          "link": "https://zenn.dev/nishimoto/articles/086508291c8a25",
          "publishedOn": "2023-08-05T23:59:25.000Z",
          "wordCount": 309,
          "title": "OptunaのLightGBMTunerの探索範囲を追う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--22wp4H_s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Optuna%25E3%2581%25AELightGBMTuner%25E3%2581%25AE%25E6%258E%25A2%25E7%25B4%25A2%25E7%25AF%2584%25E5%259B%25B2%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--22wp4H_s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Optuna%25E3%2581%25AELightGBMTuner%25E3%2581%25AE%25E6%258E%25A2%25E7%25B4%25A2%25E7%25AF%2584%25E5%259B%25B2%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/umi_mori/articles/langchain-cite-source",
          "author": "ますみ@エンジニア",
          "description": "はじめまして、ますみです！\n\nこの記事では、「LangChain」というライブラリを使って、「文献参照をする方法」を解説します。\n普段、ChatGPT APIを使った開発をしているときに、Bingチャットのように参照した情報元を見たい時ってありますよね。\nまた、ウェブ検索の参照元を知りたいだけでなく、社内ドキュメントを読み込んだシステムにおいてどのドキュメントのどの文章を参照したかを確認したい時もあるかと思います。\nそんな時に役立つのが、LangChainのcreate_citation_fuzzy_match_chainです！\nこのChainを使うと、プロンプト内に学習させたい文章を入...",
          "link": "https://zenn.dev/umi_mori/articles/langchain-cite-source",
          "publishedOn": "2023-08-05T22:55:40.000Z",
          "wordCount": 936,
          "title": "文献参照をするChatGPTの作り方【LangChain / Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8eQVVcyG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E7%258C%25AE%25E5%258F%2582%25E7%2585%25A7%25E3%2582%2592%25E3%2581%2599%25E3%2582%258BChatGPT%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2580%2590LangChain%2520%252F%2520Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8eQVVcyG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E7%258C%25AE%25E5%258F%2582%25E7%2585%25A7%25E3%2582%2592%25E3%2581%2599%25E3%2582%258BChatGPT%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2580%2590LangChain%2520%252F%2520Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit16",
          "author": "derwind",
          "description": "目的\nQiskit で遊んでみる (15) — Quantum Machine Learning では、状態ベクトルシミュレータを用いて厳密な期待値計算による、Iris データセットの分類問題を扱った。\n今回は、ノイズのあるケースを扱ってみたい。但し、実機を用いると時間がかかることが予想されるので、AerEstimator にノイズモデルを設定する場合を扱う。併せてエラー緩和についても考察を行い、IBM Quantum 上で T-REx によるエラー緩和の適用を試みる。\n\n エラーのあるシミュレーション\nVQE with Qiskit Aer Primitives の内容を利用する。...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit16",
          "publishedOn": "2023-08-05T13:39:08.000Z",
          "wordCount": 2620,
          "title": "Qiskit で遊んでみる (16) — Quantum Machine Learning その 2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OKtXQz0G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252816%2529%2520%25E2%2580%2594%2520Quantum%2520Machine%2520Learning%2520%25E3%2581%259D%25E3%2581%25AE%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OKtXQz0G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252816%2529%2520%25E2%2580%2594%2520Quantum%2520Machine%2520Learning%2520%25E3%2581%259D%25E3%2581%25AE%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit15",
          "author": "derwind",
          "description": "目的\nEdward Grant et al. の Hierarchical quantum classifiers (arXiv:1804.03680) という論文があって、面白そうなので実装して試してみようという内容。\n今回はその中の予備実験にあたる？ Iris データセットでの Tree TensorNetwork Classifier を試す[1]。\n\n 概要\n少々読み違えているところもあるかもしれないが、以下の設定とした。\n\nIris データセット (4 次元)、或は MNIST (784 次元) を量子回路に振幅エンコーディングする。MNIST の場合は次元が大きいので、主...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit15",
          "publishedOn": "2023-08-05T12:00:51.000Z",
          "wordCount": 5764,
          "title": "Qiskit で遊んでみる (15) — Quantum Machine Learning",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Z4mLva7C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252815%2529%2520%25E2%2580%2594%2520Quantum%2520Machine%2520Learning%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Z4mLva7C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252815%2529%2520%25E2%2580%2594%2520Quantum%2520Machine%2520Learning%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ssfuno/articles/1e472244d72127",
          "author": "すふー",
          "description": "イントロダクション\nPythonでExcelを扱えるopenpyxlライブラリを使用して、シートの先頭行だけ書式を変える方法を説明します。\n\n 動作環境\n\nWindows 11\nPython 3.11.2\nopenpyxl 3.1.2\n\n\n コードと実行結果\nfrom openpyxl import Workbook\nfrom openpyxl.styles import PatternFill\n\nwb = Workbook()\nws = wb.active\n\n# サンプル内容の書き込み\ncontent = [['1A', '1B', '1C'],\n           ['2A',...",
          "link": "https://zenn.dev/ssfuno/articles/1e472244d72127",
          "publishedOn": "2023-08-05T09:03:30.000Z",
          "wordCount": 448,
          "title": "openpyxlでタイトル行だけ書式を変える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jDuIVcMr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:openpyxl%25E3%2581%25A7%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2588%25E3%2583%25AB%25E8%25A1%258C%25E3%2581%25A0%25E3%2581%2591%25E6%259B%25B8%25E5%25BC%258F%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jDuIVcMr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:openpyxl%25E3%2581%25A7%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2588%25E3%2583%25AB%25E8%25A1%258C%25E3%2581%25A0%25E3%2581%2591%25E6%259B%25B8%25E5%25BC%258F%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/64772de060ea6c",
          "author": "takuh",
          "description": "作るもの\n与えられた整数の配列を二乗して、それらの値を昇順でソートした新しい配列を返す関数。\n\n 実装\n\nsortedSquaredArray.py\n# sortedSquaredArray関数の定義。整数の配列を受け取り、二乗して昇順にソートした新しい配列を返す。\ndef sortedSquaredArray(array):\n    # sortedSquaresという名前の新しいリストを作成し、arrayと同じ長さで0で初期化する。\n    sortedSquares = [0 for _ in array]\n\n    # arrayの要素を順番に処理するためのforループ\n  ...",
          "link": "https://zenn.dev/takuh/articles/64772de060ea6c",
          "publishedOn": "2023-08-05T00:50:48.000Z",
          "wordCount": 314,
          "title": "【Python】ソートされた二乗配列",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0ozdez10--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E4%25BA%258C%25E4%25B9%2597%25E9%2585%258D%25E5%2588%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0ozdez10--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E4%25BA%258C%25E4%25B9%2597%25E9%2585%258D%25E5%2588%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/f5cfec7b8c372d",
          "author": "Joel Lee",
          "description": "Index\n\nはじめに\n本記事の概要\nDataset および実行環境\nCNN の設計\n\n\n入力層（データの前処理）\n出力層（予測結果）\n隠れ層（ネットワーク、モデル）\n\n\n作成したプログラム\n今後の活用\nおわりに\n\n\n\n\n はじめに\n「あの犬、何という犬種だったけ？」\n私たちが日常生活で主にみるのは限られたいくつの犬種であるが、実際に世の中には色んな犬種が存在している。私もシーズーの飼い主だが、犬籍登録頭数 10 位であるシーズーさえも散歩中に良く犬種を聞かれる。また犬好きな私も散歩中に分からない犬種の犬によく合い、どんな犬種か質問する場合が多い。上記のことを踏まえてこの記事では Ai...",
          "link": "https://zenn.dev/joel/articles/f5cfec7b8c372d",
          "publishedOn": "2023-08-04T15:16:24.000Z",
          "wordCount": 3331,
          "title": "「あの犬、何という犬種だったけ？」を解決してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7ansFUQV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2581%2582%25E3%2581%25AE%25E7%258A%25AC%25E3%2580%2581%25E4%25BD%2595%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E7%258A%25AC%25E7%25A8%25AE%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2591%25EF%25BC%259F%25E3%2580%258D%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7ansFUQV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2581%2582%25E3%2581%25AE%25E7%258A%25AC%25E3%2580%2581%25E4%25BD%2595%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E7%258A%25AC%25E7%25A8%25AE%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2591%25EF%25BC%259F%25E3%2580%258D%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shizukakokoro/articles/bff918dcb40a0b",
          "author": "静心",
          "description": "引き続き、Neuma の開発について書いていきます。\n前回は Neuma の根幹について書きました。\n今回は、Neuma の音の表示方法について書いていきます。\n前回 ->\n\n\n 音の表示方法が分かれている理由\nそもそも、 なぜ、Note クラスに音の表示方法が含まれていないのか という疑問があると思います。\nこれは前回の記事を踏まえると、自ずとわかってくることではあるのですが、 Neuma は 既存の音楽理論にとらわれない 音楽ライブラリです。\nそのため、基本的に「#・b」だとか「移動ド」だとか「移調」だとか、そういったものは Neuma にとって本質的な情報ではありません。\nこ...",
          "link": "https://zenn.dev/shizukakokoro/articles/bff918dcb40a0b",
          "publishedOn": "2023-08-04T14:39:24.000Z",
          "wordCount": 759,
          "title": "あらゆる理論で音楽を作成・分析できるPythonライブラリ Neuma を作成する (2)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WOjQS6Zo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A7%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2583%25BB%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520Neuma%2520%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%25282%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WOjQS6Zo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E7%2590%2586%25E8%25AB%2596%25E3%2581%25A7%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2583%25BB%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520Neuma%2520%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%25282%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}