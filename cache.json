{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/hyperdb/articles/c49158fcdeaee2",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-223 A - Exact Price\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    print('No' if x == 0 or x % 100 > 0 else 'Yes')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c49158fcdeaee2",
          "publishedOn": "2023-05-12T08:08:19.000Z",
          "wordCount": 248,
          "title": "［AtCoder］ABC-223｜A - Exact Price",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--msKyXf-c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-223%25EF%25BD%259CA%2520-%2520Exact%2520Price%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--msKyXf-c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-223%25EF%25BD%259CA%2520-%2520Exact%2520Price%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/3342a2028ee5aa",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-223 B - String Shifting\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    if len(s) == 1:\n        print(s)\n        print(s)\n    else:\n        t = s\n        l = []\n        for i in range(len(s)):\n            t = t[1:] + t[0]\n            l.append(t)\n ...",
          "link": "https://zenn.dev/hyperdb/articles/3342a2028ee5aa",
          "publishedOn": "2023-05-12T08:08:18.000Z",
          "wordCount": 352,
          "title": "［AtCoder］ABC-223｜B - String Shifting",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A3p8urcn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-223%25EF%25BD%259CB%2520-%2520String%2520Shifting%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A3p8urcn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-223%25EF%25BD%259CB%2520-%2520String%2520Shifting%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/masaru21/articles/4dc6ed298601b8",
          "author": "lonely_creator_m",
          "description": "ウェブサイトの引っ越しのために、素材のフォルダを頂きました。\nでも、このフォルダがウェブサイトをスクレイピングしたような感じでHTMLファイルとフォルダの構成で、保存されていました。\nそのため今回、ウェブサーバーを起動して、内容を確認したいと思いました。\n私は、Windows11HOMEを使っていますが、Stable Diffusionを使っている関係もあり、Pythonをインストールしています。\n今回は、PythonのWebサーバーを起動したいと思い作業しました。\nその内容を自分の備忘録を兼ねて、記録します。\n今回は、HTMLのファイルを表示するために行っています。\nPHPなどは動かな...",
          "link": "https://zenn.dev/masaru21/articles/4dc6ed298601b8",
          "publishedOn": "2023-05-12T07:59:29.000Z",
          "wordCount": 191,
          "title": "Windows11HOMEで手早くウェブサイトを表示する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OdSFoc2H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11HOME%25E3%2581%25A7%25E6%2589%258B%25E6%2597%25A9%25E3%2581%258F%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lonely_creator_m%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OdSFoc2H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11HOME%25E3%2581%25A7%25E6%2589%258B%25E6%2597%25A9%25E3%2581%258F%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lonely_creator_m%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gkchop/articles/8ada22b2d078f2",
          "author": "TangeDanpei",
          "description": "はじめに\n前回はシンボリック回帰のインストールから簡単なチュートリアルによる動作確認までを行いました。\nこの記事では、裏に方程式が隠れているX（説明変数）とy（目的変数）の関係について、シンボリック回帰による外挿予測性能について評価しました。典型的な機械学習手法であるElasticNet、RandomForest、Support Vector Machineをベンチマークとして比較しました。\n\n 環境\n\nUbuntu 20.04.1\nPython 3.9.15\njapanize-matplotlib 1.1.3\nmatplotlib 3.6.2\nnumpy 1.23.5\noptuna...",
          "link": "https://zenn.dev/gkchop/articles/8ada22b2d078f2",
          "publishedOn": "2023-05-12T07:43:34.000Z",
          "wordCount": 2599,
          "title": "シンボリック回帰PySRで外挿予測性能評価",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Dypduikk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0PySR%25E3%2581%25A7%25E5%25A4%2596%25E6%258C%25BF%25E4%25BA%2588%25E6%25B8%25AC%25E6%2580%25A7%25E8%2583%25BD%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TangeDanpei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYmI3ZmFjZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Dypduikk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0PySR%25E3%2581%25A7%25E5%25A4%2596%25E6%258C%25BF%25E4%25BA%2588%25E6%25B8%25AC%25E6%2580%25A7%25E8%2583%25BD%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TangeDanpei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYmI3ZmFjZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kuwaigan/articles/9cfcf42dfba6ea",
          "author": "クワイガン",
          "description": "はじめに\nはじめまして、クワイガンです(スターウォーズが好きだからこの名前にしました)。\n現在大学4年生で、来年からITベンダに入社予定です。\n先日、内定者懇親会に参加したところ、同期が結構な開発経験を積んでいる猛者ばかりだということに気がつきました。入社後、同期のみんなに置いて行かれたくないので、何か自分も成果物を作ろうということで、厚かましくもアルバイト先の塾長に、出欠管理システムの導入をプレゼンをしたところ、意外にもすんなりOKが出ました。この記事では初めての大規模？開発の苦難について語らせていただきたいと思います。大学生のみんなのモチベ向上に繋がれば幸いです。それではレッツゴ...",
          "link": "https://zenn.dev/kuwaigan/articles/9cfcf42dfba6ea",
          "publishedOn": "2023-05-12T05:19:30.000Z",
          "wordCount": 157,
          "title": "大学4年生がバイト先の塾にて, 出欠管理システムを開発した話。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qjIXxVN2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E5%25AD%25A64%25E5%25B9%25B4%25E7%2594%259F%25E3%2581%258C%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2588%25E5%2585%2588%25E3%2581%25AE%25E5%25A1%25BE%25E3%2581%25AB%25E3%2581%25A6%252C%2520%25E5%2587%25BA%25E6%25AC%25A0%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AF%25E3%2582%25A4%25E3%2582%25AC%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5MmEzZDA0NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qjIXxVN2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E5%25AD%25A64%25E5%25B9%25B4%25E7%2594%259F%25E3%2581%258C%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2588%25E5%2585%2588%25E3%2581%25AE%25E5%25A1%25BE%25E3%2581%25AB%25E3%2581%25A6%252C%2520%25E5%2587%25BA%25E6%25AC%25A0%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AF%25E3%2582%25A4%25E3%2582%25AC%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5MmEzZDA0NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/4652feadecc681",
          "author": "しろ",
          "description": "テキストから音楽を誰でも簡単に作れるWebUIを作りました。\n壮大なものは作れないものの単純なメロディーぐらいなら作れるものになります。\n作成されるファイルはABC、MIDI、wavが生成されます。\nhttps://github.com/massao000/text-to-music-webui\n\n デモ\nhttps://youtu.be/cxlemBVQ9Lg\nhttps://youtu.be/NVf9__rH1Nw\n\n 画面\n\n\n 使用\n使用しているものとしては以下のものになります。\nhttps://huggingface.co/sander-wood/text-to-music",
          "link": "https://zenn.dev/shiro_toy_box/articles/4652feadecc681",
          "publishedOn": "2023-05-12T03:40:00.000Z",
          "wordCount": 144,
          "title": "テキストから音楽を作るWebUIを作りました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tUYMQhQl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258BWebUI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tUYMQhQl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258BWebUI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/baayashi884/books/6347ec59e0175c",
          "author": "digitalWagon",
          "description": "pandasについて、最小限の知識に絞って扱う。",
          "link": "https://zenn.dev/baayashi884/books/6347ec59e0175c",
          "publishedOn": "2023-05-12T02:23:43.000Z",
          "wordCount": 58,
          "title": "Pandas  データ処理",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mWcz1qma--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kYzFkYjY3NDg0LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mWcz1qma--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kYzFkYjY3NDg0LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/duke13/articles/9c74dd595823cbd",
          "author": "duke13",
          "description": "これから開発者として新品のMacを手に入れましたあなたに、なるべくCleanな開発環境の構築方法を説明します。\nここで言うCleanの定義とは、各種のプログラミング言語をインストールして、バージョンを切り替えられる構成の意味です。\n今回は、Pyhton , Node.js , Java の環境構築の手順を詳しく解説していきます。\n環境のイメージ\n\n\n 1. Homebrew のインストール\nまずは、パッケージマネージャーの Homebrew をインストールしましょう。Macを使う以上、いずれインストールすることになると思います。\n/bin/bash -c \"$(curl -fsSL ht...",
          "link": "https://zenn.dev/duke13/articles/9c74dd595823cbd",
          "publishedOn": "2023-05-11T15:15:37.000Z",
          "wordCount": 813,
          "title": "anyenvを用いてCleanなMac開発環境を構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3aKx-YaT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anyenv%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6Clean%25E3%2581%25AAMac%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:duke13%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290SmJQZ1gxdlZ0UWdlVE5lQUlWRmQ3a2Y5c0dEQWMwRnJ3ZlhrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3aKx-YaT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anyenv%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6Clean%25E3%2581%25AAMac%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:duke13%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290SmJQZ1gxdlZ0UWdlVE5lQUlWRmQ3a2Y5c0dEQWMwRnJ3ZlhrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/jcc/articles/43c441c1e8929e",
          "author": "jc",
          "description": "Google Providersのバグを見つけた\n先日DAGを開発中にGoogle Providers (apache-airflow-providers-google==8.9.0)のCloudDataTransferServiceJobStatusSensorを使用したところ、\nproject_idはオプション引数であるにも関わらず、省略するとエラーが発生するというバグに遭遇しました。\n[2023-03-09, 02:31:24 UTC] {taskinstance.py:1774} ERROR - Task failed with exception\nTraceback (mo...",
          "link": "https://zenn.dev/jcc/articles/43c441c1e8929e",
          "publishedOn": "2023-05-11T14:16:40.000Z",
          "wordCount": 560,
          "title": "Apache Airflowのコミッターになった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_XmvpT1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Airflow%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_XmvpT1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Airflow%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/twinkle_star/articles/d82a4c79e691a6",
          "author": "comet",
          "description": "はじめに\n本記事ではPythonを用いた天文解析の理解を深めることを目的に、Astropy公式チュートリアルのSynthetic Images from simulated dataとConvolution and Filteringを参考に記事にまとめる。なお、筆者の備忘録として活用できるように分かりやすい解説を付け加えるよう配慮した。\n\n 本記事のゴール\n\n\nastropy.wcsを用いた天体画像へのWCS座標の割り当て\n\nastropy.modeling.modelを用いたPSF(Point Spread Function)の構築\n\nastropy.convolutionを用い...",
          "link": "https://zenn.dev/twinkle_star/articles/d82a4c79e691a6",
          "publishedOn": "2023-05-11T14:06:33.000Z",
          "wordCount": 1954,
          "title": "Astropyで天文データ解析 [2] -convolution, filtering-",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P9y8-T81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astropy%25E3%2581%25A7%25E5%25A4%25A9%25E6%2596%2587%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A7%25A3%25E6%259E%2590%2520%255B2%255D%2520-convolution%252C%2520filtering-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:comet%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlMzVhMmU5YTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P9y8-T81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astropy%25E3%2581%25A7%25E5%25A4%25A9%25E6%2596%2587%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A7%25A3%25E6%259E%2590%2520%255B2%255D%2520-convolution%252C%2520filtering-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:comet%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlMzVhMmU5YTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/5f9f937272984c",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\n人工知能の注目分野「機械学習」について正確に理解すること。\n\n\n[!info]+ Subject\n\n機械学習プロジェクトに関わる全ての人\n機械学習を体系的に復習したい人 >- 機械学習を体系的に復習したい人\n\n\n\n[!abstract]+ Curriculum\n1.機械学習概論\n2.機械学習の流れ\n3.性能評価指標\n添削問題\n\n\n\n 機械学習概論\n\nディープラーニング：生物の神経細胞の構造を模倣したアルゴリズム「ニューラルネットワーク」の利用が主流で、現在最も高い精度が得やすい機械学習技術。\n強化学習：正解ラベルも大量のデータも必要としない...",
          "link": "https://zenn.dev/joel/articles/5f9f937272984c",
          "publishedOn": "2023-05-11T09:06:19.000Z",
          "wordCount": 458,
          "title": "[TIL] 機械学習概論",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8iY_HexZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E6%25A6%2582%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8iY_HexZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E6%25A6%2582%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/miwarin/articles/9d31448cfa7e7f",
          "author": "三輪晋",
          "description": "pyminizip · PyPI で日本語ファイル名を含めて ZIP を作成した場合 且つ その ZIP ファイルを Python 3.11 未満の ZipFile クラスで参照すると、ファイル名が文字化けします。それ以外の場合は問題ありません。まとめると以下のとおり:\n\n\n\n\nPython 3.11 未満でZIP参照\nPython 3.11 以上でZIP参照\n\n\n\n\npyminizipでZIP作成\n問題あり\n問題なし\n\n\nそれ以外でZIP作成\n問題なし\n問題なし\n\n\n\n\n 事例\nテキトーに日本語のファイル名を作成して\n% echo 'pyminizipで生成した' > pymin...",
          "link": "https://zenn.dev/miwarin/articles/9d31448cfa7e7f",
          "publishedOn": "2023-05-11T08:51:11.000Z",
          "wordCount": 4331,
          "title": "pyminizip で日本語ファイル名を含めて ZIP ファイルを作成したときは注意しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S1ZRhfdj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyminizip%2520%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%2520ZIP%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AF%25E6%25B3%25A8%25E6%2584%258F%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2589%25E8%25BC%25AA%25E6%2599%258B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSW5MRWNyMWFDMmpKN1l5Y0M0SURQbWZ5dTJwRUk3b1pNRDJRcXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S1ZRhfdj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyminizip%2520%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%2520ZIP%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AF%25E6%25B3%25A8%25E6%2584%258F%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2589%25E8%25BC%25AA%25E6%2599%258B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSW5MRWNyMWFDMmpKN1l5Y0M0SURQbWZ5dTJwRUk3b1pNRDJRcXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/92c36798182a7a",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\n一般社団法人データサイエンス協会がGitHubに公開した「データサイエンス100のノック（構造化データ加工編）」の問題演習を行うコースです。 このコースでは、行や列の操作、結合、アスペクト変換、四則演算などを学ぶことができます。\nビジネス現場での分析実務では、データのほとんどが構造化データです。構造化データを自由に加工・集計するスキルを磨き、データサイエンスの実践力を高めましょう。\n\n\n[!abstract]+ Curriculum\n1.列に対する操作\n2.行に対する操作\n3.結合\n4.縦横変換\n5.四捨五入演算\n6.正規化、非正規化\n7.ファイ...",
          "link": "https://zenn.dev/joel/articles/92c36798182a7a",
          "publishedOn": "2023-05-11T07:39:44.000Z",
          "wordCount": 4360,
          "title": "[TIL] データサイエンス100本ノック（構造化データ加工編）（初級）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6lAahwT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2588%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258A%25A0%25E5%25B7%25A5%25E7%25B7%25A8%25EF%25BC%2589%25EF%25BC%2588%25E5%2588%259D%25E7%25B4%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6lAahwT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2588%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258A%25A0%25E5%25B7%25A5%25E7%25B7%25A8%25EF%25BC%2589%25EF%25BC%2588%25E5%2588%259D%25E7%25B4%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c6be983556aaae",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-222 A - Four Digits\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print('%04d' % n)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c6be983556aaae",
          "publishedOn": "2023-05-11T04:18:36.000Z",
          "wordCount": 210,
          "title": "［AtCoder］ABC-222｜A - Four Digits",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_WRO3_1C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-222%25EF%25BD%259CA%2520-%2520Four%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_WRO3_1C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-222%25EF%25BD%259CA%2520-%2520Four%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/40f6ebd0104bcc",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-222 B - Failing Grade\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, p = getIntMap()\n    a = getIntList()\n    b = [i for i in a if i < p]\n\n    print(len(b))\n\n\nif __name__ == \"__mai...",
          "link": "https://zenn.dev/hyperdb/articles/40f6ebd0104bcc",
          "publishedOn": "2023-05-11T04:18:35.000Z",
          "wordCount": 321,
          "title": "［AtCoder］ABC-222｜B - Failing Grade",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AqHOqOEs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-222%25EF%25BD%259CB%2520-%2520Failing%2520Grade%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AqHOqOEs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-222%25EF%25BD%259CB%2520-%2520Failing%2520Grade%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/1a65c8a901e854",
          "author": "しろ",
          "description": "Pythonの標準ライブラリのosのos.environを利用します。\nos.environはPythonスクリプト内で環境変数の設定、確認、削除することができるものです。\n\n!\nOSの環境に影響を与えることはありません。\n\nなぜ、直接環境変数を設定をしないのか\n\nソフトの持ち運びができ、開発環境が1つにまとめることができる\n各OS（Windows、macOS、Linux）によって環境変数の設定の方法が異なるため\nOSの種類に関係なく同じ方法で環境変数を設定ができる\n\n\n!\nただし外部ソフトは各OSごとのものをインストールする必要がある\n\n\n 使い方\n\n パスが通っているか確認\n\nサン...",
          "link": "https://zenn.dev/shiro_toy_box/articles/1a65c8a901e854",
          "publishedOn": "2023-05-11T03:03:03.000Z",
          "wordCount": 578,
          "title": "OSに環境変数を設定せずに外部ソフトをPythonで利用する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4Qh8ZfM6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OS%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E5%25A4%2596%25E9%2583%25A8%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%2592Python%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4Qh8ZfM6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OS%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E5%25A4%2596%25E9%2583%25A8%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%2592Python%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/e33e3eadf979ef",
          "author": "JboyHashimoto",
          "description": "色々ハマったので、メモしておく\nHerokuが有料化されたことになり、代替手段として、renderなるものが話題になっていて、デプロイするのをやってみました。しかし、デプロイに失敗して原因を調べてみたとこと、今回だとPythonならではのルールがあったみたいです。\n\n ソースコード\n最初は、main.pyでやってましたが、エラーの原因になるそうで、app.pyに変更しました。\n\napp.py\nfrom flask import Flask, request, json, jsonify\n\napp = Flask(__name__)\napp.config['JSON_AS_ASCII'...",
          "link": "https://zenn.dev/joo_hashi/articles/e33e3eadf979ef",
          "publishedOn": "2023-05-11T02:55:49.000Z",
          "wordCount": 969,
          "title": "renderなるものを使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FM9OY-FV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:render%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FM9OY-FV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:render%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/c55987e1d57bf0",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\nデータ可視化コースでは、Matplotlibを使ってデータを可視化する方法を学びます。折れ線グラフ、円グラフ、ヒストグラムなどの作成から3Dグラフの作成方法まで学びます。\n\n\n[!abstract]+ Curriculum\n1.データ可視化のための準備\n\n様々なグラフ\n乱数生成\n時系列データ\nデータの操作\n\n\nMatplotlibの使い方\n\n\n一種類のデータを可視化しよう\n複数のデータを可視化しよう 1\n複数のデータを可視化しよう 2\n\n\nいろいろなグラフを作ろう\n\n\n折れ線グラフ\n棒グラフ\nヒストグラム\n散布図\n円グラフ\n3Dグラフ\n添削問題\n...",
          "link": "https://zenn.dev/joel/articles/c55987e1d57bf0",
          "publishedOn": "2023-05-10T16:46:24.000Z",
          "wordCount": 5580,
          "title": "[TIL] ライブラリ「Matplotlib」基礎（可視化）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P-i4HM0b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CMatplotlib%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P-i4HM0b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CMatplotlib%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/339736cf136996",
          "author": "Joel Lee",
          "description": "本記事はAidemyの【新】ライブラリ「pandas」基礎（表計算）の講義ノートです。\n\n\n[!abstract]+ Curriculum\n\npandas とは\npandas の操作方法\n複数の DataFrame の利用\n\n\n添削問題\n\n\n\n\n Pandas とは\nテーブルデータを扱うことに特化したライブラリ。\n\n\n\n Pandas 操作\n\n データの読み書き\n#pd/リード #pd/セーブ\n\npd.read_csv() : sep, header, names, encodinng\npd.read_excel() : 'Sheet1'.\n.to_csv(˶´꒳˵), .to_exce...",
          "link": "https://zenn.dev/joel/articles/339736cf136996",
          "publishedOn": "2023-05-10T13:27:02.000Z",
          "wordCount": 6086,
          "title": "[TIL]【新】ライブラリ「pandas」基礎（表計算）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--H9WyoA5t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%25E3%2580%2590%25E6%2596%25B0%25E3%2580%2591%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258Cpandas%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E8%25A1%25A8%25E8%25A8%2588%25E7%25AE%2597%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--H9WyoA5t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%25E3%2580%2590%25E6%2596%25B0%25E3%2580%2591%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258Cpandas%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E8%25A1%25A8%25E8%25A8%2588%25E7%25AE%2597%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kthrlab_blog/articles/cbde0ff0aa6e7f",
          "author": "Junko Fujii",
          "description": "研究紹介\n吹奏楽やオーケストラなどの多人数演奏用の楽譜から、ピアノ連弾用の楽譜を生成するプログラムを紹介します。当研究室卒業生の島村さんが研究開発しました。\n\n合奏はオーケストラや吹奏楽など多人数で演奏するため、和音などの魅力がある一方で、演奏者や楽器、場所の確保など課題があり、気軽に楽しむことができません。一方、ピアノソロは一人で演奏できるため手軽ですが、演奏の厚みに限界があり、合奏の楽しみを味わうことができません。\n合奏とピアノソロの中間的な演奏形態の一つに「ピアノ連弾」があります。2人の演奏者と1台のピアノがあれば演奏が可能であり、合奏の楽しみを味わいつつも手軽に演奏ができます...",
          "link": "https://zenn.dev/kthrlab_blog/articles/cbde0ff0aa6e7f",
          "publishedOn": "2023-05-10T07:26:45.000Z",
          "wordCount": 278,
          "title": "吹奏楽の楽譜から、ピアノ連弾用の楽譜を作る話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---iAzp2B9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%25B9%25E5%25A5%258F%25E6%25A5%25BD%25E3%2581%25AE%25E6%25A5%25BD%25E8%25AD%259C%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2583%2594%25E3%2582%25A2%25E3%2583%258E%25E9%2580%25A3%25E5%25BC%25BE%25E7%2594%25A8%25E3%2581%25AE%25E6%25A5%25BD%25E8%25AD%259C%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Junko%2520Fujii%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNjZjOGM0ZTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---iAzp2B9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%25B9%25E5%25A5%258F%25E6%25A5%25BD%25E3%2581%25AE%25E6%25A5%25BD%25E8%25AD%259C%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2583%2594%25E3%2582%25A2%25E3%2583%258E%25E9%2580%25A3%25E5%25BC%25BE%25E7%2594%25A8%25E3%2581%25AE%25E6%25A5%25BD%25E8%25AD%259C%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Junko%2520Fujii%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNjZjOGM0ZTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f70c0091460393",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-221 B - typo\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n    t = list(getString())\n    x = []\n    y = []\n\n    for i in range(len(s) - 1):\n        if s[i] != t[i]:\n            x.append(s[i])\n            x.append(s[i + 1])\n            y.append(...",
          "link": "https://zenn.dev/hyperdb/articles/f70c0091460393",
          "publishedOn": "2023-05-10T05:47:27.000Z",
          "wordCount": 423,
          "title": "［AtCoder］ABC-221｜B - typo",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yb-UeFWp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-221%25EF%25BD%259CB%2520-%2520typo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yb-UeFWp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-221%25EF%25BD%259CB%2520-%2520typo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/da8e0ad4e6c188",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-221 A - Seismic magnitude scales\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(32 ** (a - b))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/da8e0ad4e6c188",
          "publishedOn": "2023-05-10T05:47:27.000Z",
          "wordCount": 241,
          "title": "［AtCoder］ABC-221｜A - Seismic magnitude scales",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0f7wtNhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-221%25EF%25BD%259CA%2520-%2520Seismic%2520magnitude%2520scales%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0f7wtNhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-221%25EF%25BD%259CA%2520-%2520Seismic%2520magnitude%2520scales%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gkchop/articles/9fc05fd286d124",
          "author": "TangeDanpei",
          "description": "はじめに\nデータサイエンスにおいてしばしばデータの裏側で起こっている事象の解釈性が求められることがあります。ドメインの原理原則に則った数式をデータから推測することができたらドメインの理解や新たな知見を得ることに役立つだけでなく、原理原則という汎用性をモデル化できている可能性があるため外挿予測性の向上も期待できます。\nこの記事ではJuliaをバックエンドとしたPythonライブラリPySRをインストールするための手順を示します。\n\n元論文\nGithub\n\n\n 環境\n\nUbuntu 20.04.1\nPython 3.9.15\npysr 0.12.3\n\n\n 手順\n\n Juliaのインストー...",
          "link": "https://zenn.dev/gkchop/articles/9fc05fd286d124",
          "publishedOn": "2023-05-10T05:28:28.000Z",
          "wordCount": 900,
          "title": "シンボリック回帰向けPySRのインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c1I6KTto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0%25E5%2590%2591%25E3%2581%2591PySR%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TangeDanpei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYmI3ZmFjZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c1I6KTto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0%25E5%2590%2591%25E3%2581%2591PySR%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TangeDanpei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYmI3ZmFjZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kthrlab_blog/articles/2250b74ec16206",
          "author": "Justin Wulf",
          "description": "はじめに\nこの記事では、Streamlitで作成したwebアプリをDockerでコンテナを立てて動かすことを目標とします。\n尚、この記事は身内向けのチュートリアルなので若干いい加減に書いていますが、ご容赦ください。\n\n Dockerとは\n\nDockerは、コンテナ仮想化という技術を用いてアプリを開発・実行することが出来るプラットフォームです。開発したアプリをDockerを使ってコンテナ化すれば、別の環境でも同じように動作させることができます。\nDockerは2013年にDocker社から登場し、今ではVirtualBoxなどの仮想マシンなどに取って変わる仮想環境として世界中で利用され...",
          "link": "https://zenn.dev/kthrlab_blog/articles/2250b74ec16206",
          "publishedOn": "2023-05-10T05:19:47.000Z",
          "wordCount": 640,
          "title": "Dockerを使ってStreamlitのwebアプリを動かそう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dD9KkYEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Streamlit%25E3%2581%25AEweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Justin%2520Wulf%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YzlhYzUwNTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dD9KkYEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Streamlit%25E3%2581%25AEweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Justin%2520Wulf%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YzlhYzUwNTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/b742c79462b6bc",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\n\n複数の値を持つタイプ、関数、クラスについて理解する。\n効果的なコードが記述できる\n\n\n\n[!abstract]+ Curriculum\n\nはじめに\n複数の値を持つタイプ\nリストタイプ\n辞書タイプ\nfor 文によるループ処理\nfor 文\nfor 文の応用例\n関数\n関数とは\n関数を作って理解しよう (独自関数) > 3.\n内蔵関数\nクラス\n1.クラス\n2.クラスを作って理解しよう\nよく使うメソッド\nライブラリ\n添削問題\n\n\n\n\n はじめに\n\n 複数の値を持つタイプ\n\n リストタイプ\n\ndel list[index] : 要素の削除\nlist....",
          "link": "https://zenn.dev/joel/articles/b742c79462b6bc",
          "publishedOn": "2023-05-09T15:00:50.000Z",
          "wordCount": 1458,
          "title": "[TIL] Python基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zBNJo1Vy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:%255BTIL%255D%2520Python%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zBNJo1Vy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:%255BTIL%255D%2520Python%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/5ee50809a18ed5",
          "author": "Joel Lee",
          "description": "[!abstract]+ Curriculum\n\nNumPyとは\nデータ操作\nNumPyとメモリ\nNumpyによる統計解析\n今後の学習の進め方\n添削問題\n\n\n\n\n NumPyとは\n\nNumPy配列と四則演算\n\nブロードキャスト：演算前にNumPy配列の shape を合わせること。\n\n\nデータの読み込み : delimiter, skiprows, usecols\n\nimport numpy as np\n\narr_1 = np.loadtxt(\"./4002_new_numpy/csv_example.csv\",\n\t\t\t\t   delimiter=\",\", # 区切り文字をカンマに指定...",
          "link": "https://zenn.dev/joel/articles/5ee50809a18ed5",
          "publishedOn": "2023-05-09T14:47:51.000Z",
          "wordCount": 2497,
          "title": "[TIL] ライブラリ「NumPy」基礎（数値計算）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wZ-YSMGS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CNumPy%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E6%2595%25B0%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wZ-YSMGS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CNumPy%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E6%2595%25B0%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/timoneko/articles/7612a5972297b1",
          "author": "timoneko",
          "description": "下記のライブラリを利用してみます。\nhttps://github.com/boppreh/keyboard\npip install keyboard\n\n キーボードの押した内容を記録する。\n\nescapeを押すまで記録する。\nimport keyboard\n\nrecord_list = keyboard.record(until='escape')\n\nfor i in record_list:\n    print(i)\n\n\n実行結果\nKeyboardEvent(w down)\nKeyboardEvent(w up)\nKeyboardEvent(e down)\nKeyboardEvent(...",
          "link": "https://zenn.dev/timoneko/articles/7612a5972297b1",
          "publishedOn": "2023-05-09T14:17:35.000Z",
          "wordCount": 630,
          "title": "Pythonのライブラリで「お気に入りのショートカットキー作ってみる」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KggDizfH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A7%25E3%2580%258C%25E3%2581%258A%25E6%25B0%2597%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258A%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%258D%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:timoneko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NjZlZGEzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KggDizfH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A7%25E3%2580%258C%25E3%2581%258A%25E6%25B0%2597%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258A%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%258D%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:timoneko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NjZlZGEzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/34572ce4ec6ee4",
          "author": "sergicalsix",
          "description": "はじめに\npythonでよく使う辞書型について、様々な組み込みのメソッドや便利メソッドをまとめました。\nどれか一つでも役に立つものがあれば幸いです。\nカリキュラムは以下となっています。\n\n辞書への読み取り処理\n辞書への書き込み処理\n辞書の定義\n\n!\n取り扱わないもの: 辞書型に似たものたち namedtuple, dataclass\n\n\n 辞書への読み取り処理\n以下辞書はdとします。\n\n キー(key)とバリュー(value)の取得\n\n\nd.keys()\n全てのkeyが取得ができます。型はdict_keysです。\n\n特定の要素が辞書内にあるかどうかを確認する場合は、inを使って次のよ...",
          "link": "https://zenn.dev/sergicalsix/articles/34572ce4ec6ee4",
          "publishedOn": "2023-05-09T13:46:08.000Z",
          "wordCount": 1239,
          "title": "Pythonの辞書型を使いこなすための基本操作方法と応用テクニック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vO4FuXnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%25BF%259C%25E7%2594%25A8%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vO4FuXnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%25BF%259C%25E7%2594%25A8%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bs_kansai/articles/a41961614c4b25",
          "author": "Kanon",
          "description": "Tl;DR\n\n\"good first issue\"があるということはコントリビュートの敷居を下げてくれているということ。\nスター数が多いということはそれだけ認知されているということで、コントリビュートが盛んに行われている可能性が高いということ。\nコントリビュートが盛んということは、ソースコードが洗練されている可能性が高いとこと。\n\nこの 3 つが言えるんじゃないかと考えました。\nそこで、この記事ではgoofiというツールを使って 10 個の言語の\"good first issue\"がありなおかつスター 500 以上ある GitHub リポジトリを 3 つずつ見ていきます。\nこれにより...",
          "link": "https://zenn.dev/bs_kansai/articles/a41961614c4b25",
          "publishedOn": "2023-05-09T10:33:44.000Z",
          "wordCount": 1698,
          "title": "goofiで見る👀色んな言語の知っておきたいOSSプロジェクト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MixY0NVq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:goofi%25E3%2581%25A7%25E8%25A6%258B%25E3%2582%258B%2520%25E8%2589%25B2%25E3%2582%2593%25E3%2581%25AA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584OSS%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:blessing%2520software%2520KANSAI%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNTBmZjE4OWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMRTR5OUhOc3hkUm9vWkVlUDBackFyU0NvWG51SlU4RkpjUHpYamc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MixY0NVq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:goofi%25E3%2581%25A7%25E8%25A6%258B%25E3%2582%258B%2520%25E8%2589%25B2%25E3%2582%2593%25E3%2581%25AA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584OSS%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:blessing%2520software%2520KANSAI%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNTBmZjE4OWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMRTR5OUhOc3hkUm9vWkVlUDBackFyU0NvWG51SlU4RkpjUHpYamc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e931f01e962d42",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-220 B - Base K\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringMap():\n    return input().split()\n\n\ndef main():\n    k = getInt()\n    a, b = getStringMap()\n\n    print(int(a, k) * int(b, k))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e931f01e962d42",
          "publishedOn": "2023-05-09T04:28:48.000Z",
          "wordCount": 275,
          "title": "［AtCoder］ABC-220｜B - Base K",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3jNR8yto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-220%25EF%25BD%259CB%2520-%2520Base%2520K%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3jNR8yto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-220%25EF%25BD%259CB%2520-%2520Base%2520K%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/708c142a267424",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-220 A - Find Multiple\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    d = a if a == c else (a // c + 1) * c\n\n    print(d if d <= b else -1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/708c142a267424",
          "publishedOn": "2023-05-09T04:28:48.000Z",
          "wordCount": 294,
          "title": "［AtCoder］ABC-220｜A - Find Multiple",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YFW5uKag--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-220%25EF%25BD%259CA%2520-%2520Find%2520Multiple%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YFW5uKag--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-220%25EF%25BD%259CA%2520-%2520Find%2520Multiple%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-use-json",
          "author": "gk12",
          "description": "こんにちは。今回は、Pythonについて初心者エンジニアに向けて、JSONを扱う方法をご紹介します。\n\n JSONとは\nJSON(JavaScript Object Notation)は、データをクライアントとサーバーの間で簡単にやりとりするための形式です。JavaScriptで使用されるオブジェクトの記法を参考に、テキストベースの軽量な文書形式で記述されます。PythonでもJSONを扱うことができます。\n\n JSONの書式\nJSONは、以下のような書式で表現されます。\n{\n  \"name\": \"John\",\n  \"age\": 30,\n  \"city\": \"New York\"\n}\n上記...",
          "link": "https://zenn.dev/gk12/articles/python-use-json",
          "publishedOn": "2023-05-09T02:59:14.000Z",
          "wordCount": 368,
          "title": "PythonでJSONを扱う方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vai8IE7Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7JSON%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Vai8IE7Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7JSON%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/e1a3021cd263a7",
          "author": "shimo",
          "description": "以前書いた記事でも紹介したのですが、AWS services mappingという、AWSの各リージョンでどのサービスの対応しているかを随時更新しているAWS公式のページがあります。\nhttps://aws-new-features.s3.amazonaws.com/html/aws_services.html\n大阪リージョンでのサービス対応状況を東京リージョンと比較したかったので、このAWS services mappingからデータを取得して比較するスクリプトを作ってみました。\n\n Code\n\n\n Results\n2023/05/09の時点で、ap-northeast-1(東京)と ...",
          "link": "https://zenn.dev/shimo_s3/articles/e1a3021cd263a7",
          "publishedOn": "2023-05-08T22:32:39.000Z",
          "wordCount": 947,
          "title": "[小ネタ]AWS東京・大阪リージョンで使えるサービスを最新版で比較するPythonスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UgmO0MQp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255DAWS%25E6%259D%25B1%25E4%25BA%25AC%25E3%2583%25BB%25E5%25A4%25A7%25E9%2598%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UgmO0MQp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255DAWS%25E6%259D%25B1%25E4%25BA%25AC%25E3%2583%25BB%25E5%25A4%25A7%25E9%2598%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/climt/articles/create-stable-diffusion-webui-by-gradio",
          "author": "5HAL1N",
          "description": "はじめに\n株式会社CLIMTのshalinです。\n普段はAUTOMATIC1111/stable-diffusion-webuiを利用してStableDiffusionを実行させていただいてますが、最近どうも更新が遅くなってしまったりバグが増えてきたりと、ビジネス利用をする上で悩ましい点が増えてきました。\nせっかくOSSのstable diffusionなので、自分たちの要件にあったWebUIを作ってしまおうということで、Gradioを使って自作していこうと思います。\n\n 前提\n\npython3.9以降がインストールされている\npythonを最低限触ったことがある\n\n\n 環境構築\nま...",
          "link": "https://zenn.dev/climt/articles/create-stable-diffusion-webui-by-gradio",
          "publishedOn": "2023-05-08T11:28:51.000Z",
          "wordCount": 744,
          "title": "GradioでStableDiffusionのWebUIを自作してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OH9cCLv3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradio%25E3%2581%25A7StableDiffusion%25E3%2581%25AEWebUI%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CLIMT%2520Inc.%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:5HAL1N%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0YjUyMjY3YzMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkE2Q2dvVXdZWUxGek0tbUx3UktBUHd5T21YZE1SeFF1SXJ1SDU9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OH9cCLv3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradio%25E3%2581%25A7StableDiffusion%25E3%2581%25AEWebUI%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CLIMT%2520Inc.%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:5HAL1N%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0YjUyMjY3YzMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkE2Q2dvVXdZWUxGek0tbUx3UktBUHd5T21YZE1SeFF1SXJ1SDU9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f90f1ee7f3801f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-219 A - AtCoder Quiz 2\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    print('expert' if x >= 90 else 90 - x if x >=\n          70 else 70 - x if x >= 40 else 40 - x)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f90f1ee7f3801f",
          "publishedOn": "2023-05-08T10:45:57.000Z",
          "wordCount": 293,
          "title": "［AtCoder］ABC-219｜A - AtCoder Quiz 2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--trh4C5_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-219%25EF%25BD%259CA%2520-%2520AtCoder%2520Quiz%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--trh4C5_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-219%25EF%25BD%259CA%2520-%2520AtCoder%2520Quiz%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/df58d7d0edd3a8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-219 B - Maritozzo\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    s = getStringRow(3)\n    t = map(int, list(getString()))\n    u = []\n\n    for i in t:\n        u.append(s[i - 1])\n    print(\"\".join(u))\n\n\nif __...",
          "link": "https://zenn.dev/hyperdb/articles/df58d7d0edd3a8",
          "publishedOn": "2023-05-08T10:45:56.000Z",
          "wordCount": 324,
          "title": "［AtCoder］ABC-219｜B - Maritozzo",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SJdHmZyo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-219%25EF%25BD%259CB%2520-%2520Maritozzo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SJdHmZyo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-219%25EF%25BD%259CB%2520-%2520Maritozzo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/naiq112/articles/f57cc333ee8b3c",
          "author": "naiq112",
          "description": "Tableauが使えない状況だったのでTableauみたいな分析ツールを使いたく、いいものはないかと探したところ、PyGWalkerというツールを見つけました。\nStreamlitに対応していたので、ファイルのアップロードをドラッグ&ドロップで直感的に利用できるように実装してみました。\n\n PyGWalkerとは\nPyGWalkerは、pandasやpolarsのデータフレームをTableauスタイルのユーザインタフェースにてデータ分析・可視化をできるようにするツールです。\nTableauのオープンソースの代替品Graphic WalkerをPythonで実行できるようにしたもの...",
          "link": "https://zenn.dev/naiq112/articles/f57cc333ee8b3c",
          "publishedOn": "2023-05-08T10:10:45.000Z",
          "wordCount": 424,
          "title": "PyGWalkerをStreamlitで動作させてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2xy2xXS_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyGWalker%25E3%2582%2592Streamlit%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naiq112%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkZDA2YTFjMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2xy2xXS_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyGWalker%25E3%2582%2592Streamlit%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naiq112%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkZDA2YTFjMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syu_tan/articles/c331eee691749c",
          "author": "syu-tan",
          "description": "１歩目の衛星データの取得判読解析予測の基礎\n!\n\n衛星データの扱い方\n地理空間処理\nDeep Learning を利用したモデリング\nなどの一連の簡単な流れを紹介したいと思います。\n\n\n\n 概要\n!\n\n\n本編\n\n検証事象の紹介\n衛星の撮像検索\n衛星画像の取得\n事象の判読\n地理空間処理\n画像解析\n事象のモデリング\n予測の可視化\n山火事の影響\n\n\n\nおまけ\n\nきっかけ\nモチベーション\n作業処理フロー\n\n\n\n参考\n\n\n\n\n 本編\nよくやる簡単な衛星データの扱いや利用について記載しまーす！\n\n 検証事象の紹介\n\n今回は 山火事 を題材にします。\n特に、長野県諏訪市と茅野市の境にある霧ヶ峰高...",
          "link": "https://zenn.dev/syu_tan/articles/c331eee691749c",
          "publishedOn": "2023-05-08T05:43:43.000Z",
          "wordCount": 4484,
          "title": "１歩目の衛星データの取得判読解析予測の基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vtXT6Dj---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2591%25E6%25AD%25A9%25E7%259B%25AE%25E3%2581%25AE%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%258F%2596%25E5%25BE%2597%25E5%2588%25A4%25E8%25AA%25AD%25E8%25A7%25A3%25E6%259E%2590%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syu-tan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXFuUnlFOVotSVJaaGFYTWk1eUY1TENDejN3QUpCRDNXZHBFSXRaUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vtXT6Dj---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2591%25E6%25AD%25A9%25E7%259B%25AE%25E3%2581%25AE%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%258F%2596%25E5%25BE%2597%25E5%2588%25A4%25E8%25AA%25AD%25E8%25A7%25A3%25E6%259E%2590%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syu-tan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXFuUnlFOVotSVJaaGFYTWk1eUY1TENDejN3QUpCRDNXZHBFSXRaUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kashira/articles/ad470ce26c5e79",
          "author": "kashira",
          "description": "はじめに\n開発・運用のコストを最小限にしつつDev・Staging・Prodをシームレスに切り替える設計思想としてVirtual Data Environments(データ環境の仮想化)という概念があるらしい。\nSQLMeshで実装されており、簡単に試すことが出来るので、どんな感じかさわってみた。\nhttps://sqlmesh.readthedocs.io/en/stable/\n\n Virtual Data Environments(データ環境の仮想化)\n\n TL;DR\nPhysical layerにデータのスナップショットを作成して、それをVirtual layerから参照するこ...",
          "link": "https://zenn.dev/kashira/articles/ad470ce26c5e79",
          "publishedOn": "2023-05-07T09:05:16.000Z",
          "wordCount": 1391,
          "title": "SQLMeshが提供するVirtual Data Environments(データ環境の仮想化)を体験してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--77AETMCa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLMesh%25E3%2581%258C%25E6%258F%2590%25E4%25BE%259B%25E3%2581%2599%25E3%2582%258BVirtual%2520Data%2520Environments%2528%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E5%258C%2596%2529%25E3%2582%2592%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kashira%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlZDBiNDVjOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--77AETMCa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLMesh%25E3%2581%258C%25E6%258F%2590%25E4%25BE%259B%25E3%2581%2599%25E3%2582%258BVirtual%2520Data%2520Environments%2528%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E5%258C%2596%2529%25E3%2582%2592%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kashira%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlZDBiNDVjOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hasegawasatoshi/articles/648f6c1035282b",
          "author": "Satoshi Hasegawa",
          "description": "FastAPI の使い方について学習してみました。とてもシンプルなフレームワークで、公式のチュートリアル も分かりやすかったのですが、最小限の機能を提供しているがゆえに、RDBMS へのアクセスまでやろうとすると、ORM は SQLAlchemy、マイグレーションは Alembic と、その辺の前提知識がないと理解しにくい部分があったので、備忘としてメモをしておきます。\n基本的にはチュートリアルの「 SQL (Relational) Databases 」の写経ですが、同じく、「Bigger Applications - Multiple Files 」を参考に、ファイル分割などをしてい...",
          "link": "https://zenn.dev/hasegawasatoshi/articles/648f6c1035282b",
          "publishedOn": "2023-05-07T08:28:23.000Z",
          "wordCount": 4565,
          "title": "FastAPI で CURD する。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mgNOxa0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2581%25A7%2520CURD%2520%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Satoshi%2520Hasegawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqazZTazNrOVFnWUh2elRDb3pSYWhsMEExd2hQYUhZN0RRc3F0cUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mgNOxa0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2581%25A7%2520CURD%2520%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Satoshi%2520Hasegawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqazZTazNrOVFnWUh2elRDb3pSYWhsMEExd2hQYUhZN0RRc3F0cUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/555367ebe25196",
          "author": "osn_Lofi",
          "description": "以前、こちらの記事で、GoogleColaboratory（以下、Googleコラボといいます）上でStableDiffusionを実装する方法についてご紹介しました。\nhttps://zenn.dev/robes/articles/8ea32494d40f06\n正直、画像の精度はそれほど高くありませんでしたが、テキストを入れるだけで、AIが様々な画像を生成してくれることが大変驚きでした。\n時は過ぎ、今（2023年5月時点）のStableDiffusionは、画像の精度が、ほぼ写真と言っていいくらい、かなり高くなっています。\nまた、Googleコラボを操作することに変わりはないのですが、...",
          "link": "https://zenn.dev/robes/articles/555367ebe25196",
          "publishedOn": "2023-05-07T07:47:49.000Z",
          "wordCount": 293,
          "title": "【初心者でもできる】GoogleColaboratoryでStableDiffusionのWebUIを動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P9lPWeVG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2591GoogleColaboratory%25E3%2581%25A7StableDiffusion%25E3%2581%25AEWebUI%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P9lPWeVG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2591GoogleColaboratory%25E3%2581%25A7StableDiffusion%25E3%2581%25AEWebUI%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yagiyuki/articles/load_pretrained",
          "author": "yagiyuki",
          "description": "Transformersの事前学習済みのモデルのロード処理で、こんなコードをよく見かけませんか?\nfrom transformers import HogeModel\nhoge_model = HogeModel.from_pretrained('hoge_model_name')\nHugging Face上のモデルロードのサンプルは、だいたい上のような実装になっています。\nこれまでなんとなく使っていましたが、少し詳しく挙動を知りたいと思い調査したので、まとめておきます。\nまた、上記のコードをそのまま実運用システムへ組み込むのにもリスクを感じたので、そのあたりも書いておきます。\n\n 'f...",
          "link": "https://zenn.dev/yagiyuki/articles/load_pretrained",
          "publishedOn": "2023-05-07T07:12:59.000Z",
          "wordCount": 420,
          "title": "Transformersの'from_pretrained'の使い方とリスクを考察",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eP_qGgjB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformers%25E3%2581%25AE%2527from_pretrained%2527%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eP_qGgjB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformers%25E3%2581%25AE%2527from_pretrained%2527%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kymok/articles/593ccf5eb56385",
          "author": "kymok",
          "description": "概要\n本稿では， Poisson Image Editing (Perez et al., 2003) を Python で実装してみます．ヤコビ法で高解像度画像を処理すると時間がかかるところ，あらかじめ画像ピラミッドを作成して低解像度側から順に処理することで処理時間を短縮できました．\n考え方はマルチグリッド法と似ているところもあります（マルチグリッド法のほうが洗練されています）が，少しの書き換えだけで実装できるので，小難しいことを考えたくないときには便利です．\n\n 方法\n\n Poisson Image Editing\nPoisson Image Editing (Perez et ...",
          "link": "https://zenn.dev/kymok/articles/593ccf5eb56385",
          "publishedOn": "2023-05-07T05:20:58.000Z",
          "wordCount": 2204,
          "title": "Poisson Image Editing を画像ピラミッドで高速化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TK6Sypa8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poisson%2520Image%2520Editing%2520%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2594%25E3%2583%25A9%25E3%2583%259F%25E3%2583%2583%25E3%2583%2589%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kymok%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZTRiZTU5NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TK6Sypa8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poisson%2520Image%2520Editing%2520%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2594%25E3%2583%25A9%25E3%2583%259F%25E3%2583%2583%25E3%2583%2589%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kymok%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZTRiZTU5NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/turing_motors/articles/8b9a2c4d3e8882",
          "author": "ymg_aq",
          "description": "はじめに\nPythonは世界的にも人気のあるプログラミング言語ですが、実行速度については課題があります。Pythonの実行速度を高速化したい、という要求は根強く、これまでにも様々な処理系が開発されています。\nこの記事はPythonで書かれたコードを35000倍に高速化するにはどのような方法があるかについてまとめたものです。\nこの記事は：\n\nPythonで書かれたアルゴリズムを35000倍に高速化する\n事前コンパイル、並列化、SIMD演算を駆使する\n最終的に44000倍まで高速化できた\n\n\n なぜ35000倍？\n2023年5月2日にModular社よりPythonの使いやすさとC言語...",
          "link": "https://zenn.dev/turing_motors/articles/8b9a2c4d3e8882",
          "publishedOn": "2023-05-07T05:00:00.000Z",
          "wordCount": 6340,
          "title": "Pythonコードを35000倍に高速化したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4IewifRZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%259235000%25E5%2580%258D%25E3%2581%25AB%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ymg_aq%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NmMwZTUwYzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4IewifRZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%259235000%25E5%2580%258D%25E3%2581%25AB%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ymg_aq%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NmMwZTUwYzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/tasada038/articles/f2f5b500cdc36a",
          "author": "Takumi Asada",
          "description": "海洋ロボコンをやってた人です。\n今回は久しぶりにPythonでROS 2 パッケージ ping_sonar_ros を作成したので、その備忘録として記載していきます。\nなぜまとめるかは以下です。\n\nC++で慣れるとPython ROS 2の書き方忘れるため\nsetup.pyとCMakeLists.txtで(インポートなどの)各依存関係の書き方が違うため（ここ大切）\n\nまた、本記事に対するコメントも積極的に募集しますので、よろしくお願いいたします。\n\n ROS 2 Pythonパッケージ作成のチップス\nROS 2 Pythonの基本は以下です。\n\nパッケージの作成\n\ncd ~/dev_ws...",
          "link": "https://zenn.dev/tasada038/articles/f2f5b500cdc36a",
          "publishedOn": "2023-05-07T04:24:11.000Z",
          "wordCount": 1416,
          "title": "ROS 2 : Pythonでパッケージ作成するときのチップス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ekdpDtsb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ROS%25202%2520%253A%2520Python%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2581%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Asada%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS02UlRlclRjeFNkX3dsSDk4WE1LY1dHNDJ3b2ZoR1ZmUWNDdVhlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ekdpDtsb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ROS%25202%2520%253A%2520Python%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2581%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Asada%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS02UlRlclRjeFNkX3dsSDk4WE1LY1dHNDJ3b2ZoR1ZmUWNDdVhlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/4820776f992d2f",
          "author": "Tanny",
          "description": "はじめに\nソフトウェアアーキテクチャーの一種として、クリーンアーキテクチャがあります。クリーンアーキテクチャは、Robert C. Martin氏（「ボブおじさん」と呼ばれているらしい）が提唱したもので、以下のブログの説明が有名なようです。\nhttps://blog.tai2.net/the_clean_architecture.html\n私もこのブログの内容をざっと読んでみたのですが、具体的にはどんな実装になるのかがさっぱりわかりませんでした😇。そこで、いつも利用しているPythonでの実装例を探してみたところ、「Clean Architectures in Python」という英...",
          "link": "https://zenn.dev/tanny/articles/4820776f992d2f",
          "publishedOn": "2023-05-07T03:02:38.000Z",
          "wordCount": 3431,
          "title": "「Clean Architectures in Python」を読み解いてクリーンアーキテクチャを具体的に理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yqh7JMig--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CClean%2520Architectures%2520in%2520Python%25E3%2580%258D%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E5%2585%25B7%25E4%25BD%2593%25E7%259A%2584%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yqh7JMig--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CClean%2520Architectures%2520in%2520Python%25E3%2580%258D%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E5%2585%25B7%25E4%25BD%2593%25E7%259A%2584%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/watarungurunnn/articles/738c63c55a62cc",
          "author": "watarungurunnn",
          "description": "tensorflow2.xでModel.predictを実行するたびにメモリ使用量がもりもり増えていく現象が観測されている。\nまず思いつくのはgc.collect()であるが、今回はこれが効かない。\n参考: https://github.com/keras-team/keras/issues/13118\n\n 1. Sequential APIの場合\nまず、提案されている解決法がModel.predict_on_batch()を用いる方法。\nfor x in dataset:\n    y_pred = model.predct_on_batch(x)\n\n 2. Functional API...",
          "link": "https://zenn.dev/watarungurunnn/articles/738c63c55a62cc",
          "publishedOn": "2023-05-06T18:25:11.000Z",
          "wordCount": 134,
          "title": "tensorflow2.xで推論中、メモリ使用量がどんどん増えていく事象への対処",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jpgKPrXe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tensorflow2.x%25E3%2581%25A7%25E6%258E%25A8%25E8%25AB%2596%25E4%25B8%25AD%25E3%2580%2581%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E9%2587%258F%25E3%2581%258C%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25A9%25E3%2582%2593%25E5%25A2%2597%25E3%2581%2588%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%25E4%25BA%258B%25E8%25B1%25A1%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jpgKPrXe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tensorflow2.x%25E3%2581%25A7%25E6%258E%25A8%25E8%25AB%2596%25E4%25B8%25AD%25E3%2580%2581%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E9%2587%258F%25E3%2581%258C%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25A9%25E3%2582%2593%25E5%25A2%2597%25E3%2581%2588%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%25E4%25BA%258B%25E8%25B1%25A1%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/fa0013f71d04f2",
          "author": "seiyakitazume",
          "description": "text_splitterを使うと、長い文章を分割してくれます。\n以下のように数行のコードで使うことできます。\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ntexts = text_splitter.split_documents(documents)\n上記のRecursiveCharacterTextSplitterは、文字単位でテキスト...",
          "link": "https://zenn.dev/seiyakitazume/articles/fa0013f71d04f2",
          "publishedOn": "2023-05-06T17:33:56.000Z",
          "wordCount": 140,
          "title": "LangChainのtext_splitterについて軽く調べた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--glwHE27l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2581%25AEtext_splitter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25BB%25BD%25E3%2581%258F%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--glwHE27l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2581%25AEtext_splitter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25BB%25BD%25E3%2581%258F%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sugasuga/articles/18a8f352025e3c",
          "author": "sugasuga",
          "description": "ベクトルのフィルタ機能\n前回の記事にて、Matching Engineを触ってみました。\nhttps://zenn.dev/articles/2bdde4e7169eed\n実際に使う場合は、特定のデータにフィルタした上で、近傍探索をしたい場合があると思います。\n例えば、公開・非公開状態の記事がある中で、公開されている記事のみでベクトル検索を行い関連する記事のデータを取得したい場合などです。事前のフィルタができないと、ベクトル検索結果後にフィルタされ十分な検索結果が残らなかったりする可能性があります。\nElasticSearchは事前のフィルタ機能があります。faissは記事執筆時点の...",
          "link": "https://zenn.dev/sugasuga/articles/18a8f352025e3c",
          "publishedOn": "2023-05-06T17:28:39.000Z",
          "wordCount": 604,
          "title": "Vertex AI Matching Engineでフィルタ機能を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L069u7rT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Matching%2520Engine%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--L069u7rT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Matching%2520Engine%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/117048f486f707",
          "author": "seiyakitazume",
          "description": "ChromaDBは、文書の埋め込みデータを格納・管理し、文書間の類似性を効率的に検索できるデータベースです。\nLangChainからも使え、以下のコードのように数行のコードでChromaDBの中にembeddingしたPDFやワードなどの文章データを格納することが出来ます。\nfrom langchain.vectorstores import Chroma\ntexts = text_splitter.split_documents(documents)\nembeddings = OpenAIEmbeddings()\nvectordb = Chroma.from_documents(tex...",
          "link": "https://zenn.dev/seiyakitazume/articles/117048f486f707",
          "publishedOn": "2023-05-06T17:22:52.000Z",
          "wordCount": 159,
          "title": "【LangChain】chromadbを使ってローカルの文章(PDF・ワード)をembeddingした上で格納する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xQGPA7wv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591chromadb%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AE%25E6%2596%2587%25E7%25AB%25A0%2528PDF%25E3%2583%25BB%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%2529%25E3%2582%2592embedding%25E3%2581%2597%25E3%2581%259F%25E4%25B8%258A%25E3%2581%25A7%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xQGPA7wv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591chromadb%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AE%25E6%2596%2587%25E7%25AB%25A0%2528PDF%25E3%2583%25BB%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%2529%25E3%2582%2592embedding%25E3%2581%2597%25E3%2581%259F%25E4%25B8%258A%25E3%2581%25A7%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qft-numpy",
          "author": "derwind",
          "description": "目的\nQiskit textbook の 量子フーリエ変換 を見ると、Bloch 球上のアニメーションが掲載されている。そう言えば以前に勉強した時は「ふ〜ん」で流した気がするので、少し真面目に見てみようという企画。\n\n 量子フーリエ変換とは？\n量子コンピュータの色々な FTQC アルゴリズム、例えば量子位相推定や Shor のアルゴリズムで利用されるモジュールである。形式的には、古典的な離散フーリエ変換と対をなす形で定義される。\n\n 離散フーリエ変換\nN \\in \\N に対し x を [0, 1, \\cdots, N-1] 上の函数とし、x_j = x(j),\\ j \\in [0, ...",
          "link": "https://zenn.dev/derwind/articles/dwd-qft-numpy",
          "publishedOn": "2023-05-06T12:32:04.000Z",
          "wordCount": 2437,
          "title": "量子フーリエ変換を眺める",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eeDoaw1E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258F%25E5%25AD%2590%25E3%2583%2595%25E3%2583%25BC%25E3%2583%25AA%25E3%2582%25A8%25E5%25A4%2589%25E6%258F%259B%25E3%2582%2592%25E7%259C%25BA%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eeDoaw1E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258F%25E5%25AD%2590%25E3%2583%2595%25E3%2583%25BC%25E3%2583%25AA%25E3%2582%25A8%25E5%25A4%2589%25E6%258F%259B%25E3%2582%2592%25E7%259C%25BA%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/stranglehello/articles/d7567ac87c2d0b",
          "author": "stranglehello",
          "description": "はじめに\n\nこの記事は前回のこちらからのちょっとした派生です\n良かったら先に目を通していただければ嬉しいです😁\n\n\n 今回の利用するサービス\n\n\nSnowflake(DWH)\n\n少し前にpreviewになったPythonのワークシートをメインに使います\n\n\n\ntrocco\n\n前回と同じくデータを取得する部分とワークフローで呼び出す部分を担当します\n前回の記事からのUpdateとしてはFreeプランが登場しており、今回はFreeで使える範囲で対応できます\n\n\n\n\n 対応内容\n\nこちら前回と同じでtitanic問題での利用を想定してみます！（変わり映えがなくてすみません、、）\n\n\n さっ...",
          "link": "https://zenn.dev/stranglehello/articles/d7567ac87c2d0b",
          "publishedOn": "2023-05-06T12:03:35.000Z",
          "wordCount": 559,
          "title": "troccoで簡易MLOpsをまわしてみる2（Snowflake ver）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Zh0vvQw7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:trocco%25E3%2581%25A7%25E7%25B0%25A1%25E6%2598%2593MLOps%25E3%2582%2592%25E3%2581%25BE%25E3%2582%258F%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B2%25EF%25BC%2588Snowflake%2520ver%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stranglehello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNjcyNDhkMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Zh0vvQw7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:trocco%25E3%2581%25A7%25E7%25B0%25A1%25E6%2598%2593MLOps%25E3%2582%2592%25E3%2581%25BE%25E3%2582%258F%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B2%25EF%25BC%2588Snowflake%2520ver%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stranglehello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNjcyNDhkMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/t_o_d/articles/d3b2ba62989a27",
          "author": "t_o_d",
          "description": "先日OpenAIからテキストや画像の入力から3Dアセットを生成するShap-Eが発表されました。\nそこでGoogle Colaboratoryを利用してShap-Eを試した方法を記録いたします。\n\n\n 結論\n\n本記事の手順で以下のように「テキストを指定して3Dアセットの作成」がColaboratory上で試すことが可能です。\n\n\n\n 準備\n\n実行環境を整えるため、Google Colaboratory上にGPU(T4)環境を作成します。\n\n※詳細な作成方法はこちらを参考にしてください。\n\n\n\n\n\n\n\n 手順\n\n リポジトリ取得\n\n実行環境の作成後、以下を実行してShap-Eのソースコー...",
          "link": "https://zenn.dev/t_o_d/articles/d3b2ba62989a27",
          "publishedOn": "2023-05-06T10:47:26.000Z",
          "wordCount": 1187,
          "title": "テキストから3Dアセットを生成するShap-EをColaboratoryで試用",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sR1pDCD2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%25893D%25E3%2582%25A2%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BShap-E%25E3%2582%2592Colaboratory%25E3%2581%25A7%25E8%25A9%25A6%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_o_d%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYzIwYTUyNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sR1pDCD2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%25893D%25E3%2582%25A2%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BShap-E%25E3%2582%2592Colaboratory%25E3%2581%25A7%25E8%25A9%25A6%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_o_d%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYzIwYTUyNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/a7d18b4861f550",
          "author": "Joel Lee",
          "description": "ノート\n本記事は、Kikagakuの無料講座「Python&機械学習入門」の講義ノートの第2回目です。\n以下のリストは当該講座のカリキュラムで、本ノートは「8.導入」から「11.単回帰分析の実装」までの内容を簡単にまとめたものです。\n\nCurriculum (401/548)\n1.導入 (42 min)\n2.微分 (49 min)\n3.線形代数 (55 min)\n4.単回帰分析 (52 min)\n5.重回帰分析 (56 min)\n6.Python属性講義 (101 min)\n7.単回帰分析の実装 (51 min)\n\n\n\n8.重回帰分析の実装 (27 min)\n9. 練習問題 ...",
          "link": "https://zenn.dev/joel/articles/a7d18b4861f550",
          "publishedOn": "2023-05-06T10:06:02.000Z",
          "wordCount": 1725,
          "title": "[TIL] Python&機械学習入門2(完)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SAFteeX8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520Python%2526%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%25802%2528%25E5%25AE%258C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SAFteeX8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520Python%2526%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%25802%2528%25E5%25AE%258C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/a7d5c8253c9ad5",
          "author": "hodakam",
          "description": "datatableに画像を挿入する方法\nDashという簡単にデータ分析のためのダッシュボードが作れるライブラリがあります。Dashの中にはdatatableという便利なライブラリがあり、これを利用することでソートやページング、フィルターなどのテーブル形式のデータでよく用いられる機能を非常に簡単に実装することができます。\n実際にダッシュボードを作成する場合、フィールドとして数値や文字列だけでなく画像やファイルへのリンクなどを使いたくなることがあります。Dashのdatatableにこれらのオブジェクトを埋め込むには実はそれなりに工夫が必要です。\n\n 実現方法1：html.ImgでImg...",
          "link": "https://zenn.dev/hodakam/articles/a7d5c8253c9ad5",
          "publishedOn": "2023-05-06T09:33:07.000Z",
          "wordCount": 694,
          "title": "Dashのdatatableに画像を挿入する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mB1SQEC5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dash%25E3%2581%25AEdatatable%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mB1SQEC5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dash%25E3%2581%25AEdatatable%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lud/articles/616777396e54a2",
          "author": "t_nakatani",
          "description": "この記事では，ZetaChain(testnet)上に実装されたUniswapにPythonでアクセスしてswapする方法を紹介します．\n環境はjupyterlabを想定しています．\n\n 解説\nprivateな情報は.envファイルから環境変数として読み込みます．\nADDRESS=0x...\nPRIVATE_KEY=0x...\n%load_ext dotenv\n%dotenv .env -o -v\n\n 各種設定\nZetaChain上のtokenアドレス等を設定します．(公式リンク)\nfrom web3 import Web3, HTTPProvider\nimport json, os, ...",
          "link": "https://zenn.dev/lud/articles/616777396e54a2",
          "publishedOn": "2023-05-06T07:57:33.000Z",
          "wordCount": 1420,
          "title": "【Python】ZetaChain上のuniswapでswap",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qrg_0zoJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591ZetaChain%25E4%25B8%258A%25E3%2581%25AEuniswap%25E3%2581%25A7swap%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_nakatani%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkNzQyN2QyNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qrg_0zoJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591ZetaChain%25E4%25B8%258A%25E3%2581%25AEuniswap%25E3%2581%25A7swap%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_nakatani%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkNzQyN2QyNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sho7650/articles/b05b3afc3dda31",
          "author": "しょっさん",
          "description": "Raspberry PiにCO2モニター CO2-mini | 自然環境測定器 - 製品情報 - 計測器のカスタムと、PM2.5などをチェックするセンサーをつけて、部屋の中の空気を管理しています。主にCO2やPM2.5を気にしてます。\n今回それは置いといて。\nこれらを制御するためにPythonのライブラリを使っています。しばらく放置しすぎたために、pipでインストールするライブラリ群が古くなっていたので、今回いきおいあまってアップデートしてみたら、非常に大変で萎えたことを報告します。\n\n いっぺんに更新ができない\nbundle updateとかnpm updateをしたかっただけですが、...",
          "link": "https://zenn.dev/sho7650/articles/b05b3afc3dda31",
          "publishedOn": "2023-05-06T01:06:32.000Z",
          "wordCount": 275,
          "title": "pip ライブラリを一括更新したかった",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iKWbVu-a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pip%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%25A3%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pHRTNxaV82OWc4eWtDWE9UVzY3SjliUWpKS1UtN05RNzRkRUdpZmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iKWbVu-a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pip%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%25A3%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pHRTNxaV82OWc4eWtDWE9UVzY3SjliUWpKS1UtN05RNzRkRUdpZmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/d4a11404320a07",
          "author": "seiyakitazume",
          "description": "データの準備\nfrom langchain import OpenAI, PromptTemplate, LLMChain\nfrom langchain.chains.mapreduce import MapReduceChain\nfrom langchain.prompts import PromptTemplate\n\n# 要約に使用したいモデルを定義\nllm = OpenAI(temperature=0)\n\nlong_text = \"(要約したい長文)\"\n\nfrom langchain.text_splitter import CharacterTextSplitter\n# 長文...",
          "link": "https://zenn.dev/seiyakitazume/articles/d4a11404320a07",
          "publishedOn": "2023-05-05T16:31:40.000Z",
          "wordCount": 744,
          "title": "LangChainを使った文章の要約方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Fa4KBSn1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%2584%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Fa4KBSn1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%2584%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/080cbd42c66cef",
          "author": "Joel Lee",
          "description": "Notes\n本記事は、Kikagaku の無料講座「Python&機械学習入門」の講義ノートの最初のノートです。\n以下のリストは当該講座のカリキュラムであり、本ノートは「1.導入」から「7.単回帰分析の実装」までの内容を簡単にまとめたものです。\n\nCurriculum (401/548) > **Curriculum (401/548)\n1.導入 (42 min)\n2. 微分 (49 min)\n3.線形代数 (55 min)\n4.単回帰分析 (52 min) > 5.重回帰分析 (56 min)\n5.重回帰分析 (56 min) > 6.\n6.Python ...",
          "link": "https://zenn.dev/joel/articles/080cbd42c66cef",
          "publishedOn": "2023-05-05T16:06:49.000Z",
          "wordCount": 1820,
          "title": "[TIL] Python&機械学習入門1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eU2RvUKV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520Python%2526%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%25801%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eU2RvUKV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520Python%2526%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%25801%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sugasuga/articles/2bdde4e7169eed",
          "author": "sugasuga",
          "description": "この記事について\nGCPにはVertex AI Matching Engineという低レイテンシで近似最近傍探索を行なってくれるサービスがあります。レコメンドや検索に活用できそうなので気になっており、実際に使ってみました。\n2023/05月の時点だと情報が少なく、いろんな事にハマったので記録として残しておきます。\n\n 構築する際の選択肢\n\n ネットワーク関連\n\n\nvpc peeringをして繋ぐ方法\n\n\npublic endpointという方法 (2023/05時点でプレビュー)\n\n\nprivate service connectという方法 (2023/05時点でプレビュー)\n\n\nの...",
          "link": "https://zenn.dev/sugasuga/articles/2bdde4e7169eed",
          "publishedOn": "2023-05-05T15:55:15.000Z",
          "wordCount": 1414,
          "title": "Vertex AI Matching Engineを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yxqc6y_w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Matching%2520Engine%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yxqc6y_w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Matching%2520Engine%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ovrsa/articles/4db3a7f206616b",
          "author": "ovrsa",
          "description": "はじめに: AWS Lambda, Python, Dockerを使用した開発の効果\n近年、クラウドコンピューティングが益々普及し、アプリケーション開発においても効率的かつ柔軟な方法が求められています。その中で、AWS Lambda、Python、およびDockerは、開発者にとって非常に有用な技術として注目されています。\nAWS Lambdaは、サーバーレスコンピューティングサービスであり、コードの実行とスケーリングを自動的に行います。これにより、開発者はインフラ管理の負担を軽減し、コードの開発に集中できます。\nPythonは、読みやすく、書きやすいプログラミング言語であり、多くの...",
          "link": "https://zenn.dev/ovrsa/articles/4db3a7f206616b",
          "publishedOn": "2023-05-05T15:53:42.000Z",
          "wordCount": 538,
          "title": "AWS Lambda、Python、Dockerを活用する実践的なチュートリアル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--epryDDN4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Lambda%25E3%2580%2581Python%25E3%2580%2581Docker%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25AE%259F%25E8%25B7%25B5%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--epryDDN4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Lambda%25E3%2580%2581Python%25E3%2580%2581Docker%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25AE%259F%25E8%25B7%25B5%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojyo21/articles/e32246f626e67b",
          "author": "okojyo21",
          "description": "Web アプリのバックエンドに、なぜ Python を選んだのか？\nアプリケーションの動作環境・開発環境を決めるのに、言語や方式の選定は重要です。\n本来であれば、私自身はマイクロソフトの技術で育ってきたこともあり、C#ならびに、ASP.Net Core という組み合わせで Web アプリケーションを作成していきたいところでした。\nが、社内アプリケーション開発環境において、用意された資源の中に、Windows または Linux サーバーを利用するという選択肢がなく、IBM 系のサーバーしか選択することができない状況にありました。\nまた、基幹システムが登録されているオフコンをインターネ...",
          "link": "https://zenn.dev/okojyo21/articles/e32246f626e67b",
          "publishedOn": "2023-05-05T15:41:49.000Z",
          "wordCount": 366,
          "title": "クラサバアプリ脳で Webアプリを学ぶ(vue + python) ４０代後半　のメモ その5 バックエンドにPythonを選んだ理由",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qmhxu0I5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE5%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25ABPy...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qmhxu0I5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE5%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25ABPy...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojyo21/articles/19557a0118e8fc",
          "author": "okojyo21",
          "description": "Webアプリ開発の重要性を痛感・・\nいきなりですが、何をあたりまえな！という人もいるかと思いますが、世の中には全くWebアプリケーション開発に触れずにシステム屋さんをしている人たちもいます。\nしかしながら、Zennの投稿記事を見ていても、主要なキーワードは、TypeScript フロントエンド　など モバイルまたはWebアプリに関するキーワードが並んでいることを考えても、近年のアプリケーション開発において、何らかの形でWebアプリケーションに携わっている人が多いことが伺えます。\nまた、よくポートメッセ（住んでいるところがバレますね・・）などのIT系やメーカー企業の製品展示会（RX J...",
          "link": "https://zenn.dev/okojyo21/articles/19557a0118e8fc",
          "publishedOn": "2023-05-05T15:41:47.000Z",
          "wordCount": 349,
          "title": "クラサバアプリ脳で Webアプリを学ぶ(vue.js + python) ４０代後半　のメモ その１",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2DSwzcmy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue.js%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2DSwzcmy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue.js%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koujimachi2023/articles/b70ddeee91f3fb",
          "author": "おいしい",
          "description": "モデル公開しました\n以下のサイトでモデル公開中です。\n君だけのオリジナル怪文書を生成しよう！\nhttps://huggingface.co/spaces/Oishiyo/zupposhi-maker\n\n Hightlights\n\nhuggingface + streamlitで自作AIアプリをデプロイ\nかんたん！😁\n\n\n 初めに\n\n 今回の目的\nプログラミングの成果物を公表する方法としては\n\nGitHubに上げる\nPyinstallerなどでexeに固めて配布する\nHeroku、Render、GCP、AWSなどのPaaS(またはPaaSを含むサービス)を使って公開する\nなどの方法があ...",
          "link": "https://zenn.dev/koujimachi2023/articles/b70ddeee91f3fb",
          "publishedOn": "2023-05-05T14:02:56.000Z",
          "wordCount": 2830,
          "title": "イナババ怪文書生成AIをHugging Face Spaces + Streamlitでデプロイした",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1ebxTGKN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%2592Hugging%2520Face%2520Spaces%2520%252B%2520Streamlit%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1ebxTGKN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%2592Hugging%2520Face%2520Spaces%2520%252B%2520Streamlit%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/chatgpt-use-api-python",
          "author": "gk12",
          "description": "こんにちは。今回は、ChatGPTについて初心者エンジニアに向けて、PythonでChatGPT APIを使って自然言語処理をする方法について紹介します。\n\n はじめに\nChatGPTは、OpenAIが開発した自然言語処理の技術です。ChatGPT APIは、このChatGPTを利用したAPIであり、開発者が簡単に自然言語処理を組み込むことができます。Pythonは、ChatGPT APIを使った自然言語処理を行うために最適なプログラミング言語の1つです。この記事では、PythonでChatGPT APIを使って自然言語処理をする方法について説明します。\n\n ChatGPT APIの準備...",
          "link": "https://zenn.dev/gk12/articles/chatgpt-use-api-python",
          "publishedOn": "2023-05-05T12:41:41.000Z",
          "wordCount": 447,
          "title": "PythonでChatGPT APIを使って自然言語処理をする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tlXplobN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7ChatGPT%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tlXplobN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7ChatGPT%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mnonamer/articles/poetry-install-sslerror",
          "author": "名無し。",
          "description": "始めに\n  MaxRetryError\n\n  HTTPSConnectionPool(host='github.com', port=443): Max retries exceeded with url: /user/repo/info/refs?service=git-upload-pack (Caused by SSLError(FileNotFoundError(2, 'No such file or directory')))\n\n  at .venv\\Lib\\site-packages\\urllib3\\util\\retry.py:592 in increment\n     ...",
          "link": "https://zenn.dev/mnonamer/articles/poetry-install-sslerror",
          "publishedOn": "2023-05-05T10:50:04.000Z",
          "wordCount": 186,
          "title": "Windowsでのpoetry installがSSLErrorで落ちる人へ向けて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_iqK3zFC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25A7%25E3%2581%25AEpoetry%2520install%25E3%2581%258CSSLError%25E3%2581%25A7%25E8%2590%25BD%25E3%2581%25A1%25E3%2582%258B%25E4%25BA%25BA%25E3%2581%25B8%25E5%2590%2591%25E3%2581%2591%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2590%258D%25E7%2584%25A1%25E3%2581%2597%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1MmE0YTk1ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_iqK3zFC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25A7%25E3%2581%25AEpoetry%2520install%25E3%2581%258CSSLError%25E3%2581%25A7%25E8%2590%25BD%25E3%2581%25A1%25E3%2582%258B%25E4%25BA%25BA%25E3%2581%25B8%25E5%2590%2591%25E3%2581%2591%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2590%258D%25E7%2584%25A1%25E3%2581%2597%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1MmE0YTk1ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimakaze_soft/articles/21428033c4f4b9",
          "author": "shimakaze_soft",
          "description": "Pythonを用いてのGoFの定義した23個のデザインパターンの一つであるAdapterパターンの実装方法について解説します。\nAdapterパターンは、「構造に関するデザインパターン」に分類されます。\n\n Adapterパターンとは\nシステムを利用するクライアントは、簡単なインターフェースを通じてサブシステムと連携できるパターンです。\nこのパターンを使用することで、既存のクラスに対して変更を加えることなく、インターフェースを変更することができます。\n\n 利点\n\n\n既存のクラスを変更せずに新しいインターフェースと連携させることができます。これにより、コードの再利用が容易になり、保守性が向...",
          "link": "https://zenn.dev/shimakaze_soft/articles/21428033c4f4b9",
          "publishedOn": "2023-05-05T09:41:21.000Z",
          "wordCount": 1895,
          "title": "Pythonでデザインパターンを学ぼう (Adapter)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wl4Y6jIq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Adapter%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wl4Y6jIq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Adapter%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yamadamadamada/articles/3fb198003c5428",
          "author": "やまだまだまだ",
          "description": "はじめに\nGoogle Maps APIやLeafletなどのマップ上にマーカーを表示する際、緯度経度が必要です。\nしかし、施設名から緯度経度を調べることは手間がかかるため、本記事では国土地理院APIを使ってCSVファイルから一括で緯度経度を取得する方法を紹介します。\n\n 国土地理院APIについて\n\n無料で施設名から緯度経度を取得できるAPI\nいつ使えなくなるかわからないので注意\n精度\n\n有名施設：かなり近い位置まで緯度経度を取得できる\nあまり有名ではない施設：市町村まで・取得できない\n\n\n\n国土地理院APIは情報の誤差が許容できないサービスには向きません。\n有料ですがGoogleM...",
          "link": "https://zenn.dev/yamadamadamada/articles/3fb198003c5428",
          "publishedOn": "2023-05-05T07:48:16.000Z",
          "wordCount": 1679,
          "title": "Pythonと国土地理院APIで施設名から緯度経度を一括取得してCSV出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--23UVvFnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8%25E5%259B%25BD%25E5%259C%259F%25E5%259C%25B0%25E7%2590%2586%25E9%2599%25A2API%25E3%2581%25A7%25E6%2596%25BD%25E8%25A8%25AD%25E5%2590%258D%25E3%2581%258B%25E3%2582%2589%25E7%25B7%25AF%25E5%25BA%25A6%25E7%25B5%258C%25E5%25BA%25A6%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6CSV%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25BE%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN25nTUpzQl9VRWo4dDZQQ2hTODc2VHlWRGJ1ZGpUR2stanBVeW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--23UVvFnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8%25E5%259B%25BD%25E5%259C%259F%25E5%259C%25B0%25E7%2590%2586%25E9%2599%25A2API%25E3%2581%25A7%25E6%2596%25BD%25E8%25A8%25AD%25E5%2590%258D%25E3%2581%258B%25E3%2582%2589%25E7%25B7%25AF%25E5%25BA%25A6%25E7%25B5%258C%25E5%25BA%25A6%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6CSV%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25BE%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN25nTUpzQl9VRWo4dDZQQ2hTODc2VHlWRGJ1ZGpUR2stanBVeW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/flask_vs_fastapi",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、PythonでWeb開発を進める際に使われるWebフレームワークである「FastAPI」と「Flask」について、両者それぞれの特徴と強みを具体的なソースコードを用いて解説する。\n\n この記事の対象とする読者\n\nこれからPythonでWeb開発を進めることを検討している人\nAPIを開発したいものの、どのような技術を使うべきが迷っている人\nFlaskとFastAPI両方とも、あるいはどちらか一方に興味を持っている人\n社内あるいは個人開発の技術選定で、FastAPIあるいはFlaskの導入を検討している人\n\n\n Flaskとは\nFlaskはPythonで開発され...",
          "link": "https://zenn.dev/nameless_sn/articles/flask_vs_fastapi",
          "publishedOn": "2023-05-05T06:54:14.000Z",
          "wordCount": 1121,
          "title": "【徹底解説】Flask VS FastAPI",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8xT8zAgL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Flask%2520VS%2520FastAPI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8xT8zAgL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Flask%2520VS%2520FastAPI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ot12/articles/19ffe5d03bd1d9",
          "author": "つかさ",
          "description": "ChatGPTを使ってエンジニアの生産性を爆上げする活用術をまとめました！\n今回はGPT-4を使用しています。\n\n コードの生成\nChatGPTにやりたいことを伝えるだけで良い感じのコードを書いてくれます。\n試しに「はてなブックマークの昨日の人気記事TOP10をスクレイピングするコード」の生成をお願いしてみたところ、1分かからないくらいでサンプルコードを生成してくれました！\n\nちなみに、コードが長くなる場合は会話の途中で途切れてしまいますが「続けて」と言えば続きを書いてくれます。\n\n エラーの原因特定\n上で作成してもらったコードですが、エラーが出たのでエラーの原因を特定してもらいました。...",
          "link": "https://zenn.dev/ot12/articles/19ffe5d03bd1d9",
          "publishedOn": "2023-05-05T05:40:40.000Z",
          "wordCount": 229,
          "title": "【ChatGPT】エンジニアの生産性を爆上げする活用術",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0rV_TeGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ChatGPT%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E7%2594%259F%25E7%2594%25A3%25E6%2580%25A7%25E3%2582%2592%25E7%2588%2586%25E4%25B8%258A%25E3%2581%2592%25E3%2581%2599%25E3%2582%258B%25E6%25B4%25BB%25E7%2594%25A8%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2595%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmMDM1NjJkMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0rV_TeGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ChatGPT%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E7%2594%259F%25E7%2594%25A3%25E6%2580%25A7%25E3%2582%2592%25E7%2588%2586%25E4%25B8%258A%25E3%2581%2592%25E3%2581%2599%25E3%2582%258B%25E6%25B4%25BB%25E7%2594%25A8%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2595%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmMDM1NjJkMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/python_dev_tips10",
          "author": "Tamtam",
          "description": "roadmap.shのPython Developerを眺めながら、\n復習がてら色々調べていたのですが、せっかくなので使えそうなモノを10個ピックアップしました！\n※ 分野や紹介するTIPSの粒度が整理されてないです。筆者の思いつきで書いてますので注意を\n\n 1.pytest実行時のimportエラーの回避策\n1.1と1.2セットでやることで効果を発揮します！\n\n 1.1 ディレクトリ構成のトップレベルで\"src tests\"を使い分ける\nツリー階層で表すと以下のような形です。\nproject\n    .env\n    src\n        __init__.py\n        mo...",
          "link": "https://zenn.dev/fitness_densuke/articles/python_dev_tips10",
          "publishedOn": "2023-05-05T04:39:57.000Z",
          "wordCount": 3135,
          "title": "(初/中級者向け) Python開発ですぐに役立つTIPS10選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MhMFw1zO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528%25E5%2588%259D%252F%25E4%25B8%25AD%25E7%25B4%259A%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%2529%2520Python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%2599%25E3%2581%2590%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4TIPS10%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MhMFw1zO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528%25E5%2588%259D%252F%25E4%25B8%25AD%25E7%25B4%259A%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%2529%2520Python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%2599%25E3%2581%2590%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4TIPS10%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/happy663/articles/1a0abc285b3a33",
          "author": "happy663",
          "description": "最近センサデータを用いて屋内推定をするために勉強しており今回は加速度と角速度から歩行軌跡を描いたのでその方法を書く.言語はPythonを使用している.\n\n 実験環境\n\nスマートフォン(iPhoneXR)を下記画像のようなポーチに入れ腰に巻き付けた状態で行う．そのためスマホの向きは横向きで装着される．\nセンシング動作は9歩直進した後,左に90度回転し5歩歩くという動作を行う.\n加速度，角速度の取得には複数のセンサを同時に取得できるいるアプリphyphoxを使用する．iOS,Android共に提供されている.\n歩行データをわかりやすくするために開始時，終了時に約5秒の時間を空ける．\nサンプリ...",
          "link": "https://zenn.dev/happy663/articles/1a0abc285b3a33",
          "publishedOn": "2023-05-05T04:24:35.000Z",
          "wordCount": 3394,
          "title": "歩行時の加速度,角速度データから歩行軌跡を描いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n1n1BI2t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A9%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25AE%25E5%258A%25A0%25E9%2580%259F%25E5%25BA%25A6%252C%25E8%25A7%2592%25E9%2580%259F%25E5%25BA%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E6%25AD%25A9%25E8%25A1%258C%25E8%25BB%258C%25E8%25B7%25A1%25E3%2582%2592%25E6%258F%258F%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:happy663%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l5bWFoUjZSUDFFUVd4STkwM0MxS0wwODlkRF9TQmV3dE5kaWN1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n1n1BI2t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A9%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25AE%25E5%258A%25A0%25E9%2580%259F%25E5%25BA%25A6%252C%25E8%25A7%2592%25E9%2580%259F%25E5%25BA%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E6%25AD%25A9%25E8%25A1%258C%25E8%25BB%258C%25E8%25B7%25A1%25E3%2582%2592%25E6%258F%258F%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:happy663%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l5bWFoUjZSUDFFUVd4STkwM0MxS0wwODlkRF9TQmV3dE5kaWN1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/4de750326a4c5d",
          "author": "seiyakitazume",
          "description": "langchainについてのパートをchatGPTに解説させました。\nvocode.py\nimport logging\nimport os\nfrom langchain.agents import tool\nfrom dotenv import load_dotenv\n\nfrom vocode.streaming.models.message import BaseMessage\nfrom call_transcript_utils import delete_transcript, get_transcript\n\nload_dotenv()\n\nfrom vocode.streaming...",
          "link": "https://zenn.dev/seiyakitazume/articles/4de750326a4c5d",
          "publishedOn": "2023-05-05T02:06:59.000Z",
          "wordCount": 2975,
          "title": "LLMと電話を組み合わせたパッケージvocodeの中身を勉強する②",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RKTGa_yt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E9%259B%25BB%25E8%25A9%25B1%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8vocode%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RKTGa_yt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E9%259B%25BB%25E8%25A9%25B1%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8vocode%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/1db5339cb42269",
          "author": "seiyakitazume",
          "description": "LLMによる電話応答ができるパッケージであるvocodeの中身を勉強したいと思ったので、気になるpyファイルの中身がどのようになっているかをchatGPTに解説させました。\nchat_gpt_agent.py\nfrom typing import Optional\nimport openai\nfrom langchain.prompts import (\n    ChatPromptTemplate,\n    MessagesPlaceholder,\n    SystemMessagePromptTemplate,\n    HumanMessagePromptTemplate,\n)\nfr...",
          "link": "https://zenn.dev/seiyakitazume/articles/1db5339cb42269",
          "publishedOn": "2023-05-05T01:50:44.000Z",
          "wordCount": 3536,
          "title": "LLMと電話を組み合わせたパッケージvocodeの中身を勉強する①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WQbdUtXE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E9%259B%25BB%25E8%25A9%25B1%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8vocode%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WQbdUtXE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E9%259B%25BB%25E8%25A9%25B1%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8vocode%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tk_resilie/articles/python_my_best_project",
          "author": "米谷 昂(Python/FastAPIプロフェッショナル)",
          "description": "概要\nチームでPythonを開発する場合に活用可能な、パッケージや構成などの開発テンプレートを紹介します。\nパッケージ管理、lint, test, loggingなどの、汎用的にプロジェクトで活用可能な構成になっています。\n今回説明する内容のリポジトリは以下の通りです。\nhttps://github.com/takashi-yoneya/python-template\n\n 想定読者\nPythonやGitの基本的な使い方を理解している方を想定しているため、基本的な用語説明は省略しています。\n\n 環境\nエンジニアの利用率の高いmacOSを前提として説明していますので、その他の環境の方は随...",
          "link": "https://zenn.dev/tk_resilie/articles/python_my_best_project",
          "publishedOn": "2023-05-05T00:57:25.000Z",
          "wordCount": 2221,
          "title": "[2023年最新版]Pythonを案件で使うなら、とりあえず入れるべきパッケージや構成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ItScEIDs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B4%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%255DPython%25E3%2582%2592%25E6%25A1%2588%25E4%25BB%25B6%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%25E3%2582%2589%25E3%2580%2581%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258D%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2584%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFas...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ItScEIDs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B4%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%255DPython%25E3%2582%2592%25E6%25A1%2588%25E4%25BB%25B6%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%25E3%2582%2589%25E3%2580%2581%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258D%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2584%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFas...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/8f3d81313b555b",
          "author": "よしだ",
          "description": "はじめに\n今回は時系列分析を扱います。NumPyroではFor文を使用すると速度が遅くなる＆メモリを大量に使用するようになるので、時系列などの繰り返し構造がある場合は、scan関数を使用する必要があります。この記事ではscan関数と簡単な分析にとどめて紹介します。\n\n ライブラリのインポート\nimport os\n\nimport jax\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport s...",
          "link": "https://zenn.dev/yoshida0312/articles/8f3d81313b555b",
          "publishedOn": "2023-05-04T13:12:42.000Z",
          "wordCount": 2269,
          "title": "NumPyro：時系列分析",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qO_gKg0S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qO_gKg0S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/satoru_output/articles/3140c1b760fb66",
          "author": "サトル アウトプット用",
          "description": "使用OS\nWindows11\n\n 前書き\n非エンジニアの方や学生でIT業界の転職を考えて自分のパソコンで\n試しに簡単なプログラミング言語を書いてみたいと\n思ったことはありませんか？\n今回はそういった方向けに、タイトルにある通り小学生にもできるPythonの\n環境構築(※)をお伝えします。\n※環境構築とは、自分のパソコンでPyhtonを使えるように設定することです。\n\n 環境構築手順\n\n\nMicrosoft Storeを開く\n\n\n\nMicrosoft Storeから「Pyhton」を検索\n\n\n\n入手をクリック\n\n\n\n「すべてのアプリ」からインストールされたことを確認\n\n「Pyhton(...",
          "link": "https://zenn.dev/satoru_output/articles/3140c1b760fb66",
          "publishedOn": "2023-05-04T12:40:18.000Z",
          "wordCount": 162,
          "title": "超簡単！ 小学生にもできるPython環境構築。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eK_7FNzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25EF%25BC%2581%2520%25E5%25B0%258F%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%25AB%25E3%2582%2582%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%2588%25E3%2583%25AB%2520%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E7%2594%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YWE2YjI4MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eK_7FNzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25EF%25BC%2581%2520%25E5%25B0%258F%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%25AB%25E3%2582%2582%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%2588%25E3%2583%25AB%2520%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E7%2594%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YWE2YjI4MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/bb4b0a720983da",
          "author": "laiso",
          "description": "LMQLのtokenizerで文字化けするのを修正したので自分で試してみます。\nhttps://github.com/eth-sri/lmql/pull/39\n以前に構築したnoteの記事をLlamaIndex経由で参照してクエリしてみます。\nhttps://zenn.dev/laiso/articles/faa984a3e33e2b\nLlamaIndex 0.6.0はかなりの破壊的変更が入っているのでご注意ください。\nhttps://betterprogramming.pub/llamaindex-0-6-0-a-new-query-interface-over-your-data-3...",
          "link": "https://zenn.dev/laiso/articles/bb4b0a720983da",
          "publishedOn": "2023-05-04T06:14:30.000Z",
          "wordCount": 486,
          "title": "LMQL v0.0.6.1で日本語が通るようになった",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d99wjZ2b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LMQL%2520v0.0.6.1%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%258C%25E9%2580%259A%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d99wjZ2b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LMQL%2520v0.0.6.1%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%258C%25E9%2580%259A%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/080677429b74d6",
          "author": "shimo",
          "description": "フォルダを指定して、再帰的に.pyファイルを探して各ファイルの最大の文字数を出力します\nデフォルトでは80文字を超えるものだけを出力\n(調査用に作りました)",
          "link": "https://zenn.dev/shimo_s3/articles/080677429b74d6",
          "publishedOn": "2023-05-04T06:06:39.000Z",
          "wordCount": 113,
          "title": "再帰的に.pyファイルを探して各ファイルの最大の文字数を出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9rJgmE8l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2586%258D%25E5%25B8%25B0%25E7%259A%2584%25E3%2581%25AB.py%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2597%25E3%2581%25A6%25E5%2590%2584%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E6%259C%2580%25E5%25A4%25A7%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9rJgmE8l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2586%258D%25E5%25B8%25B0%25E7%259A%2584%25E3%2581%25AB.py%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2597%25E3%2581%25A6%25E5%2590%2584%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E6%259C%2580%25E5%25A4%25A7%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nnydtmg/articles/aws-managed-prefixlist-update-lambda",
          "author": "nnydtmg",
          "description": "はじめに\n皆さんはプレフィックスリスト利用していますか？\n私はAmazon WorkSpacesクライアントアプリを利用した通信で、NetworkFirewallのアウトバウンドを厳密に制限する必要がある時に初めて使いました。\n（なんでこんな構成になっているかは、詳しく書けないのでご了承ください。。）\nが、この「Amazon WorkSpacesクライアントアプリを利用した通信に制限」がなかなか面倒で、要件で指定されるIPレンジが不定期にAWS側で変更され、その都度設定しているプレフィックスリストを更新する必要が出てきました。\n毎度手動で更新しても良いですが、数百のレンジに対して差分...",
          "link": "https://zenn.dev/nnydtmg/articles/aws-managed-prefixlist-update-lambda",
          "publishedOn": "2023-05-04T03:28:49.000Z",
          "wordCount": 667,
          "title": "AWS管理のIPが更新された時にプレフィックスリストに登録しいているIPレンジを自動更新する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gf1P_Z-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AEIP%25E3%2581%258C%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2597%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BIP%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nnydtmg%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWY5cGFBTVBuSE9kX3puM3ZuQnJoNWRDYXlLMV80dzhxdko1M0M9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gf1P_Z-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AEIP%25E3%2581%258C%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2597%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BIP%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nnydtmg%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWY5cGFBTVBuSE9kX3puM3ZuQnJoNWRDYXlLMV80dzhxdko1M0M9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/d53ff6d665650f",
          "author": "osn_Lofi",
          "description": "機械学習において、モデルのハイパーパラメータの調整は非常に大事です。\n大事なんですが、手動で行うと、時間も手間もすごくかかりますよね。\nここでは、ハイパーパラメータを効率的に調整するOptunaについてご紹介するとともに、Pythonでの具体的な実装方法をご説明します。\n\n Optunaとは\n日本のPrefferdNetworks社が開発した、ハイパーパラメータの自動最適化フレームワークです。\nOptunaは、ベイズ最適化を実装することで、パラメータの探索を効率的に行うことができます。\nベイズ最適化は、確率統計の理論の一つです。\n具体的には、目的関数の値を評価するために、パラメータの値を...",
          "link": "https://zenn.dev/robes/articles/d53ff6d665650f",
          "publishedOn": "2023-05-04T01:14:40.000Z",
          "wordCount": 930,
          "title": "【機械学習】Optunaを使って効率よくハイパーパラメータを調整しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hWbpu7vn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2591Optuna%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%258A%25B9%25E7%258E%2587%25E3%2582%2588%25E3%2581%258F%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25AA%25BF%25E6%2595%25B4%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hWbpu7vn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2591Optuna%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%258A%25B9%25E7%258E%2587%25E3%2582%2588%25E3%2581%258F%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25AA%25BF%25E6%2595%25B4%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tac519/articles/84a6c73b04dde0",
          "author": "tac",
          "description": "Edit bashrc\nvi ~/.bashrc\n\n Append it to the end of file.\n'G' is the jump command to the end.\nalias python=\"python3\" \nalias pip=\"pip3\" \n'Esc' and, ':wq!' is the save command.\n\n Reflect to system\nsource ~/.bashrc",
          "link": "https://zenn.dev/tac519/articles/84a6c73b04dde0",
          "publishedOn": "2023-05-04T00:29:20.000Z",
          "wordCount": 171,
          "title": "Run python3 with 'python' command",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RkupgmIX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:Run%2520python3%2520with%2520%2527python%2527%2520command%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVBZ2llVUk0ZzEtdm5id1dmNjNVVFdBSFJGUWNOMlg5QzdDeEI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RkupgmIX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:Run%2520python3%2520with%2520%2527python%2527%2520command%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVBZ2llVUk0ZzEtdm5id1dmNjNVVFdBSFJGUWNOMlg5QzdDeEI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kanadadada/articles/5438ce7dda7474",
          "author": "Yuchiwo",
          "description": "今回書くこと\nOpenAIで対話するAIの対話アシスタント（AITuber）にPythonを使った感情推定の機能を導入します。感情が扱えるようになるとモデルの表情を変えたり、発言内容を記憶する際に重み付けを変えたりできそうなので導入をしてみることにしました。\n具体的にはこんな内容を記載していきます。\n\n感情推定はテキストからBERTを使って感情のラベルとスコアを算出するものとしています。\n\n\n なぜBERT？\n昨今話題の大規模言語モデルで使われるTransformersを使った新しい手法ということで、こちらを試してみることにしました。\nまた感情推定というとJanome・日本語評価極性...",
          "link": "https://zenn.dev/kanadadada/articles/5438ce7dda7474",
          "publishedOn": "2023-05-03T23:30:01.000Z",
          "wordCount": 343,
          "title": "AITuberにBERTを使った感情推定を導入する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1hWIDlSX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AITuber%25E3%2581%25ABBERT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2584%259F%25E6%2583%2585%25E6%258E%25A8%25E5%25AE%259A%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuchiwo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjODExZDExZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1hWIDlSX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AITuber%25E3%2581%25ABBERT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2584%259F%25E6%2583%2585%25E6%258E%25A8%25E5%25AE%259A%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuchiwo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjODExZDExZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yofa/articles/0acb3090d73e44",
          "author": "yofa",
          "description": "背景\n\nDiscordでChatGPTを使いたい、使ってほしい\n\n\n ゴール\n\nDiscordでChatGPTが使えるようになっている\n\n\n 手順\n\nchatGPT-discord-botをcloneする\nDiscord botを作る\nOpenAI API keyを作る\ndockerで実行する\nテスト\n\n\n chatGPT-discord-botをcloneする\n\nhttps://github.com/Zero6992/chatGPT-discord-bot\n\ngit clone https://github.com/Zero6992/chatGPT-discord-bot.git\n...",
          "link": "https://zenn.dev/yofa/articles/0acb3090d73e44",
          "publishedOn": "2023-05-03T17:54:31.000Z",
          "wordCount": 269,
          "title": "ChatGPTを使ったDiscord botを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ns6eQz6V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FDiscord%2520bot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yofa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyM1cwODBLUTkzVGNfYWsxTG9xSEIxZmpTQ0J4NlpVODNfcFlWdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ns6eQz6V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FDiscord%2520bot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yofa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyM1cwODBLUTkzVGNfYWsxTG9xSEIxZmpTQ0J4NlpVODNfcFlWdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sugasuga/articles/10e9843263f215",
          "author": "sugasuga",
          "description": "この記事について\ngRPC通信に関して知識と経験がない。とりあえずpythonでやってみる。\n頭の整理も兼ねて、最もシンプルなgRPC通信でhello worldを返すアプリケーションを書いてみる。\ngRPCの利点・詳細・各用語などは他記事などを参考にしてください。\n\n 流れ\n\n(諸々の環境構築)\ngRPCのAPI定義ファイルであるprotoファイルを作成\nprotoファイルをコンパイル\nサーバー側のpythonファイルを作成\nサーバーを叩くクライアント側のpythonファイルを作成\n実行\n\n諸々のコードは下記になる\n.\n├── Dockerfile\n├── README.md\n├─...",
          "link": "https://zenn.dev/sugasuga/articles/10e9843263f215",
          "publishedOn": "2023-05-03T16:54:26.000Z",
          "wordCount": 830,
          "title": "pythonでgRPC通信をやってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juI47vZb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7gRPC%25E9%2580%259A%25E4%25BF%25A1%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juI47vZb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7gRPC%25E9%2580%259A%25E4%25BF%25A1%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/f445335b7867c4",
          "author": "よしだ",
          "description": "はじめに\n今回はガウス過程を扱います。\n!\n2023年5月現在、NumPyroはデフォルトでガウス過程のためのモジュール/ツールがなくスクラッチで訓練/予測のコードを書く必要があります。tinygpという第三者のライブラリもありますが、予測はサポートしていません。また、MCMCが速いという特徴があるNumPyroでも、ガウス過程回帰は計算が重いです。一方で、ガウス過程回帰を実施する便利なライブラリとしてGPyやGPyTorchが既にあリます。以上の理由から、個人的にはある程度データが多くなった場合、ガウス過程回帰はGPyTorch + Pyroを使用していきたいと思っています。（デー...",
          "link": "https://zenn.dev/yoshida0312/articles/f445335b7867c4",
          "publishedOn": "2023-05-03T15:01:15.000Z",
          "wordCount": 8039,
          "title": "NumPyro：ガウス過程",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vp__Orft--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vp__Orft--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nadegata_memo/articles/6e9b569c5be845",
          "author": "nadegata",
          "description": "はじめに\nMediaPipeを用いたポーズ推定を，ローカルでPythonを用いて行う方法．\n下記ページのコードを使用しています．\nhttps://github.com/google/mediapipe/blob/master/docs/solutions/pose.md#resources\n私が使用した環境やアプリケーションは以下の通りです．\n・windows\n・コマンドプロンプト\n・python3.10.11\n\n 0.Pythonの保存場所の確認\n\nコマンドプロンプトを起動する．\n\n以下，全てのコードはコマンドプロンプトにて実行します．\n \nPythonの保存場所を確認\n\nwher...",
          "link": "https://zenn.dev/nadegata_memo/articles/6e9b569c5be845",
          "publishedOn": "2023-05-03T13:29:52.000Z",
          "wordCount": 696,
          "title": "MediaPipe Pose をローカルのPythonで使う[備忘録]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n2LY6JjJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MediaPipe%2520Pose%2520%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEPython%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nadegata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXdLYUtONEpmTGRvZ0ZqMURkU004U2hFVlpRWHlMajctYmRJU009czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n2LY6JjJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MediaPipe%2520Pose%2520%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEPython%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nadegata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXdLYUtONEpmTGRvZ0ZqMURkU004U2hFVlpRWHlMajctYmRJU009czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/755e7ee27ce308",
          "author": "osn_Lofi",
          "description": "Pythonを使って、緯度・経度の座標情報を地図上にプロットする方法についてご紹介します。\nサンプルのデータとして、githubに公開されている米国の都市データを使いますので、ここに記載のコードをコピペすることで、お手元のPCでも同じものを見ることができます。\n興味を持たれた方は、ぜひ、一緒にやってみてください。\n地図に位置情報をプロットできるライブラリーとして、foliumとPlotlyの2種類あります。\nそれぞれについて、ご紹介していきます。\n\n データのダウンロード\nまずは、サンプルデータをダウンロードしましょう。\nimport pandas as pd\ndf =pd.read_...",
          "link": "https://zenn.dev/robes/articles/755e7ee27ce308",
          "publishedOn": "2023-05-03T12:13:10.000Z",
          "wordCount": 1074,
          "title": "【Python】地図上に位置情報（緯度・経度）をプロットする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ubMeNz3U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25AB%25E4%25BD%258D%25E7%25BD%25AE%25E6%2583%2585%25E5%25A0%25B1%25EF%25BC%2588%25E7%25B7%25AF%25E5%25BA%25A6%25E3%2583%25BB%25E7%25B5%258C%25E5%25BA%25A6%25EF%25BC%2589%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ubMeNz3U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25AB%25E4%25BD%258D%25E7%25BD%25AE%25E6%2583%2585%25E5%25A0%25B1%25EF%25BC%2588%25E7%25B7%25AF%25E5%25BA%25A6%25E3%2583%25BB%25E7%25B5%258C%25E5%25BA%25A6%25EF%25BC%2589%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/cd0ede289c3b28",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-218 B - qwerty\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    p = getIntList()\n\n    a = ord('a') - 1\n    s = []\n    for i in p:\n        s.append(chr(a + i))\n    print(''.join(s))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/cd0ede289c3b28",
          "publishedOn": "2023-05-03T03:19:55.000Z",
          "wordCount": 293,
          "title": "［AtCoder］ABC-218｜B - qwerty",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CcG6QlWS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-218%25EF%25BD%259CB%2520-%2520qwerty%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CcG6QlWS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-218%25EF%25BD%259CB%2520-%2520qwerty%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9d2bc146c7073d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-218 A - Weather Forecast\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = list(getString())\n\n    print('Yes' if s[n - 1] == 'o' else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9d2bc146c7073d",
          "publishedOn": "2023-05-03T03:19:54.000Z",
          "wordCount": 281,
          "title": "［AtCoder］ABC-218｜A - Weather Forecast",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JpJvKfJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-218%25EF%25BD%259CA%2520-%2520Weather%2520Forecast%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JpJvKfJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-218%25EF%25BD%259CA%2520-%2520Weather%2520Forecast%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/1aa9acfcf14c72",
          "author": "Daphnia",
          "description": "App Service(Webapp)にPython（Flask）を最小構成でVScodeからデプロイします。内容は、ルートページにアクセスした際に、{\"status\":200}を表示するだけのFlaskとします。App Serviceの構成も基本的にデフォルトで作成します。目的はVSCodeからApp Serviceにデプロイをするということとなります。\naz cliとVScodeはインストールされている前提としています。また、az loginも済みで・・。\n\n App Serviceの構築\nまず、App Serviceを作成します。今回は簡易的にAz CLIを使用してデプロイを実行し...",
          "link": "https://zenn.dev/daphnia/articles/1aa9acfcf14c72",
          "publishedOn": "2023-05-03T03:04:39.000Z",
          "wordCount": 461,
          "title": "WebAppにPython(Flask)を最小構成でVScodeデプロイする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A5-9-fA3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebApp%25E3%2581%25ABPython%2528Flask%2529%25E3%2582%2592%25E6%259C%2580%25E5%25B0%258F%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7VScode%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMDBhYTc2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A5-9-fA3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebApp%25E3%2581%25ABPython%2528Flask%2529%25E3%2582%2592%25E6%259C%2580%25E5%25B0%258F%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7VScode%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMDBhYTc2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yktakaha4/articles/describe_remaining_id_length_in_django",
          "author": "Yuuki Takahashi",
          "description": "小ネタです🍣\nDjangoのModelにデフォルトで存在するidフィールドについて、idをどの程度採番しているか簡単にチェックするためのスクリプトです\n全モデルの全フィールドを走査し、AutoFieldがあったら Model.objects.latest(*fields) を出力します\nhttps://docs.djangoproject.com/en/4.2/ref/models/querysets/#latest\n本スクリプトはSQLを扱わないため、MySQLでもPostgreSQLでも同様の結果を得ることができるものと思います\nしかしながら、この実装だと最新のidが削除済みの場合に...",
          "link": "https://zenn.dev/yktakaha4/articles/describe_remaining_id_length_in_django",
          "publishedOn": "2023-05-02T14:33:06.000Z",
          "wordCount": 705,
          "title": "Djangoで全テーブルのIDの採番状況をチェックする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pOpzEsAH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E5%2585%25A8%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AEID%25E3%2581%25AE%25E6%258E%25A1%25E7%2595%25AA%25E7%258A%25B6%25E6%25B3%2581%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pOpzEsAH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E5%2585%25A8%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AEID%25E3%2581%25AE%25E6%258E%25A1%25E7%2595%25AA%25E7%258A%25B6%25E6%25B3%2581%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/make_it_happen/articles/758264e7dd8d9c",
          "author": "Make It happen",
          "description": "前置き\nRaspberryPiに接続したデバイスをプログラミングの出来ない人にプレゼントすることになり、Flaskを使ってブラウザからデバイス操作できるようにしてあげました。\nその際にデバイス状態が視覚的にわかるようにUnityで3Dモデルを作成とWebGLビルドを行い、RaspberryPiからのセンサーデータでUnityのモデル状態が変更するようにしました。\n今回は上記を実現するために使用した技術を忘れないために備忘録的にまとめました。\n\n 作ったもの\n前置きで書いたプレゼントの品は個人情報を含むので別途サンプルを作成しました。\n今回はボタンを押すとボールの転がる速度が変化するサ...",
          "link": "https://zenn.dev/make_it_happen/articles/758264e7dd8d9c",
          "publishedOn": "2023-05-02T08:09:57.000Z",
          "wordCount": 3831,
          "title": "FlaskからHTMLに埋め込んだUnityWebGLを操作する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_nhdwux2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%258B%25E3%2582%2589HTML%25E3%2581%25AB%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A0UnityWebGL%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Make%2520It%2520happen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkNLeTJKT3FMekVENHY2NkxybnBRTzl4LVFSRFJkclM0b2pHbjE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_nhdwux2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%258B%25E3%2582%2589HTML%25E3%2581%25AB%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A0UnityWebGL%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Make%2520It%2520happen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkNLeTJKT3FMekVENHY2NkxybnBRTzl4LVFSRFJkclM0b2pHbjE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/manyan3/articles/c42e3651e9fe8d",
          "author": "Manyan3",
          "description": "Anomalib\nhttps://github.com/openvinotoolkit/anomalib\nhttps://openvinotoolkit.github.io/anomalib/\n\nAnomalib is a deep learning library that aims to collect state-of-the-art anomaly detection algorithms for benchmarking on both public and private datasets.\n\n!\n\n公式Gitとページです。\nAnomaly detection、異常検知の...",
          "link": "https://zenn.dev/manyan3/articles/c42e3651e9fe8d",
          "publishedOn": "2023-05-02T08:00:42.000Z",
          "wordCount": 810,
          "title": "Anomalib with custom data setup(日本語つき)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XHPDR_Pl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Anomalib%2520with%2520custom%2520data%2520setup%2528%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25A4%25E3%2581%258D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Manyan3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjU0MzMxYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XHPDR_Pl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Anomalib%2520with%2520custom%2520data%2520setup%2528%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25A4%25E3%2581%258D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Manyan3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjU0MzMxYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c337cff7ac2197",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-217 B - AtCoder Quiz\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    s = getStringRow(3)\n    t = ['ABC', 'ARC', 'AGC', 'AHC']\n\n    for w in t:\n        if w in s:\n            continue\n        print(w)\n        break\n\n\nif __name__ == \"__main__\":\n ...",
          "link": "https://zenn.dev/hyperdb/articles/c337cff7ac2197",
          "publishedOn": "2023-05-02T07:33:38.000Z",
          "wordCount": 288,
          "title": "［AtCoder］ABC-217｜B - AtCoder Quiz",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--z4RZHDkB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-217%25EF%25BD%259CB%2520-%2520AtCoder%2520Quiz%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--z4RZHDkB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-217%25EF%25BD%259CB%2520-%2520AtCoder%2520Quiz%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/bd91eeff631b5f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-217 A - Lexicographic Order\n\n\n\n 提出結果\ndef getStringList():\n    return list(input().split())\n\n\ndef main():\n    s = getStringList()\n    t = sorted(s)\n\n    print('Yes' if s[0] == t[0] else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/bd91eeff631b5f",
          "publishedOn": "2023-05-02T07:33:37.000Z",
          "wordCount": 256,
          "title": "［AtCoder］ABC-217｜A - Lexicographic Order",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QyzRnZdO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-217%25EF%25BD%259CA%2520-%2520Lexicographic%2520Order%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QyzRnZdO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-217%25EF%25BD%259CA%2520-%2520Lexicographic%2520Order%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/aae7e98b512783",
          "author": "hodakam",
          "description": "RDKitの構造最適化\n前回の記事で、RDKit上で複数分子を取り扱い、移動や回転を行ってみました。ただし、ここでの分子操作はあくまでも幾何的に行ったものであり化学的に正しいとは限りません。そのため、こういった化学構造を初期構造として量子化学計算を行うとうまく収束しないことが多いです。うまく構造を収束させるために低レベル基底や汎関数での事前の最適化や分子力場による構造最適化を行います。\nRDKitにも分子力場による構造最適化の機能は備わっています。しかし、よくある公式リファレンスのやり方だと構造の拘束がないので、二量体のように特定の原子間の位置関係を制御した状態で最適化することはでき...",
          "link": "https://zenn.dev/hodakam/articles/aae7e98b512783",
          "publishedOn": "2023-05-02T05:13:55.000Z",
          "wordCount": 1622,
          "title": "RDKitで拘束を入れて構造最適化をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BGHomtHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RDKit%25E3%2581%25A7%25E6%258B%2598%25E6%259D%259F%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E6%25A7%258B%25E9%2580%25A0%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BGHomtHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RDKit%25E3%2581%25A7%25E6%258B%2598%25E6%259D%259F%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E6%25A7%258B%25E9%2580%25A0%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/d791a37c73b63d",
          "author": "seiyakitazume",
          "description": "LangchainとGPTを使用したニュースの要約しました。\n\n 主な処理\n\nニュース記事のスクレイピング（prtimes）\nprtimesの記事の参照元のサイトを要約し、記事を生成\n\n\n 1. ニュース記事のスクレイピング crawling.py\n対象：prtimes\n\nprtimes\n\ndata/prtimes_company.csvにpratimesにおけるcompany_idを一覧で保持する\n保持しているcompany_idの企業の記事は、RSSでtitle、url、intro、updated（更新日）を取得してデータベースのprtimesテーブルに保存する。\n\n\n\n\n 2. 記...",
          "link": "https://zenn.dev/seiyakitazume/articles/d791a37c73b63d",
          "publishedOn": "2023-05-02T05:07:32.000Z",
          "wordCount": 287,
          "title": "LangchainとGPTを使ってニュースの自動要約プログラムを作成した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ForKhovj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Langchain%25E3%2581%25A8GPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ForKhovj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Langchain%25E3%2581%25A8GPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zekkn/articles/ed170f977b086c",
          "author": "zekkn",
          "description": "津波情報のXMLをパースする\n気象庁のサイトには気象庁防災情報XMLフォーマット形式電文が公開されていて、一般の人でも取得することができる。\nここでは気象全般の情報、地震津波火山情報なども提供されている。\nそこで、Pythonを使ってXML電文をパースしてみた。\n\n 実際のXML電文の構造\n2022年1月トンガ噴火に伴う地球規模の津波発生により奄美大島、トカラ列島に津波警報が発表されたときの実際の電文が以下のサイトでアーカイブされている。\nhttp://agora.ex.nii.ac.jp/cgi-bin/cps/report_xml.pl?id=20220115151519_0_V...",
          "link": "https://zenn.dev/zekkn/articles/ed170f977b086c",
          "publishedOn": "2023-05-02T04:34:39.000Z",
          "wordCount": 973,
          "title": "Pythonで気象庁の津波情報(XML電文)をパースする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YtSOaAs4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25B0%2597%25E8%25B1%25A1%25E5%25BA%2581%25E3%2581%25AE%25E6%25B4%25A5%25E6%25B3%25A2%25E6%2583%2585%25E5%25A0%25B1%2528XML%25E9%259B%25BB%25E6%2596%2587%2529%25E3%2582%2592%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zekkn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMDQzYTBmMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YtSOaAs4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25B0%2597%25E8%25B1%25A1%25E5%25BA%2581%25E3%2581%25AE%25E6%25B4%25A5%25E6%25B3%25A2%25E6%2583%2585%25E5%25A0%25B1%2528XML%25E9%259B%25BB%25E6%2596%2587%2529%25E3%2582%2592%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zekkn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMDQzYTBmMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/amemy/articles/2f90ce384cd180",
          "author": "雨宮甲念",
          "description": "完成イメージ：\n\nこの記事では、ブラウザのボタンを押したら、サーバー内のPythonファイルを実行し、その実行結果をブラウザに表示するプログラムを作成します。\nAjaxを使用して非同期通信を行い、画面遷移を防ぎます。\nFlaskを使ってPythonのウェブアプリケーションを作成し、JavaScriptと連携させます。\n\n 前提\n\npythonがインストールされていて、実行可能なことを前提としています。\nwindows11でテストしましたが、他のパソコンでも同様に実行できるはずです。\n\n\n 準備\n以下のコマンドでFlaskをインストールします。\npip install Flask\n次に、以...",
          "link": "https://zenn.dev/amemy/articles/2f90ce384cd180",
          "publishedOn": "2023-05-02T04:15:41.000Z",
          "wordCount": 926,
          "title": "すぐに実行できる、最もシンプルなAjaxのサンプル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mNVhGgQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2599%25E3%2581%2590%25E3%2581%25AB%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2581%25E6%259C%2580%25E3%2582%2582%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AAAjax%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259B%25A8%25E5%25AE%25AE%25E7%2594%25B2%25E5%25BF%25B5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMmM3ZGQzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mNVhGgQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2599%25E3%2581%2590%25E3%2581%25AB%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2581%25E6%259C%2580%25E3%2582%2582%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AAAjax%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259B%25A8%25E5%25AE%25AE%25E7%2594%25B2%25E5%25BF%25B5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMmM3ZGQzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekodamistie/articles/4910ffa201dd9a",
          "author": "sacat.neko",
          "description": "HTMLコードからURLだけ抜き出したい\nURLだけ抜き出したい時には正規表現を使いました。\n\n URLの形を把握する\nURLの形は、主に以下のようなものが多い。\n・http://....\n・https://...\n別の形式が決まっていればそちらも検討する。\n\n 使用した正規表現\nurl_pattern = \"https?://[\\w/:%#\\$&\\?\\(\\)~\\.=\\+\\-]+\"\n\n 解説\nhttp  --> httpがある（から始まる）\ns?  --> sは0回か1回繰り返す\n://  --> ://がある\n[] --> 次の文字集合\n\\w --&...",
          "link": "https://zenn.dev/nekodamistie/articles/4910ffa201dd9a",
          "publishedOn": "2023-05-02T03:06:05.000Z",
          "wordCount": 386,
          "title": "PythonでHTMLからURLを抜き出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jl4gRTlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7HTML%25E3%2581%258B%25E3%2582%2589URL%25E3%2582%2592%25E6%258A%259C%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jl4gRTlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7HTML%25E3%2581%258B%25E3%2582%2589URL%25E3%2582%2592%25E6%258A%259C%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/fastapi_tutorial_for_rest",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、FastAPIでREST APIを開発する手順を簡潔に解説する。\n\n 本記事の対象読者\n\nPythonの基本文法(データ型、条件分岐、繰り返し)を理解している人\nRailsやLaravel等のWebフレームワークで簡単なWebアプリケーションを開発できる人\nFastAPIで簡潔にREST APIを開発したい人\n\n\n 用語解説\n\n FastAPI\nFastAPIの公式ドキュメントによると、以下のように説明されている。\n\nFastAPI is a modern, fast (high-performance), web framework for buildin...",
          "link": "https://zenn.dev/nameless_sn/articles/fastapi_tutorial_for_rest",
          "publishedOn": "2023-05-02T02:44:46.000Z",
          "wordCount": 3021,
          "title": "FastAPIで学ぶPythonによるREST API開発の基本",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KVS77su6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BREST%2520API%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KVS77su6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BREST%2520API%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hiroshimraz/articles/b65d3d06eebb95",
          "author": "hiroshiMraz",
          "description": "Azure Functionsのvscodeデプロイ(python,langchain)\nazure funcitonsをvscode拡張でセットアップしてみるだけ\npythonを実行して、langchainもいれておいてみる\n完成品プロジェクトはこちら\nhttps://github.com/piroz/my-azure-langchain\n\n 使用したもの\n1.Azureのアカウント\n2.vscode拡張\nhttps://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions\n\n...",
          "link": "https://zenn.dev/hiroshimraz/articles/b65d3d06eebb95",
          "publishedOn": "2023-05-01T22:15:53.000Z",
          "wordCount": 602,
          "title": "Azure Functionsを vscodeからデプロイする(python,langchain)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Oik4EOpI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Functions%25E3%2582%2592%2520vscode%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2528python%252Clangchain%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroshiMraz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkZTcxN2VhMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Oik4EOpI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Functions%25E3%2582%2592%2520vscode%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2528python%252Clangchain%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroshiMraz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkZTcxN2VhMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yofa/articles/f2c4bd6ceba0e4",
          "author": "yofa",
          "description": "背景\n\nサイゼリヤのキッズメニューの表紙には間違い探しが描かれている\n間違い探しの難易度は非常に高く、全て見つけるのに数時間かかることもある\n\n\n ゴール\n\nサイゼリヤの間違い探しをワンパンで倒す\n\n\n 手順\n\n\nサイゼリヤ公式HPから間違い探しを開いて、画像を保存する\n\nSpot the difference in saizeriyaを使う\n\n画像を左右2枚に分割する\n分割した2枚の画像の差分を出力する\n\n\n\n\n 参考\n\nhttps://note.nkmk.me/python-opencv-numpy-image-difference/",
          "link": "https://zenn.dev/yofa/articles/f2c4bd6ceba0e4",
          "publishedOn": "2023-05-01T17:25:46.000Z",
          "wordCount": 104,
          "title": "サイゼリヤの間違い探しをワンパンで倒す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Pgy3x_BP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BC%25E3%2583%25AA%25E3%2583%25A4%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%2591%25E3%2583%25B3%25E3%2581%25A7%25E5%2580%2592%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yofa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyM1cwODBLUTkzVGNfYWsxTG9xSEIxZmpTQ0J4NlpVODNfcFlWdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Pgy3x_BP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BC%25E3%2583%25AA%25E3%2583%25A4%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%2591%25E3%2583%25B3%25E3%2581%25A7%25E5%2580%2592%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yofa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyM1cwODBLUTkzVGNfYWsxTG9xSEIxZmpTQ0J4NlpVODNfcFlWdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/22ac86f3d8712e",
          "author": "よしだ",
          "description": "連載している記事の１つです。以前までの記事を読んでいる前提で書いているので、必要であればNumPyroの記事一覧から各記事を参考にしてください。\n\n はじめに\nベイズを扱う際に避けて通れないのが、数多くある確率分布です。今回はこれまで扱ってきた分布をまとめていきます。\n\n 分布\n分布の形状を可視化するための準備を行います。\nfrom jax import random\nfrom jax import numpy as jnp\nimport numpyro.distributions as dist\nimport seaborn as sns\nimport matplotlib.pyplo...",
          "link": "https://zenn.dev/yoshida0312/articles/22ac86f3d8712e",
          "publishedOn": "2023-05-01T15:02:06.000Z",
          "wordCount": 3071,
          "title": "NumPyro：各分布に関してまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sLEtwsRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%2590%2584%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sLEtwsRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%2590%2584%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/4a42bab05bd7b4",
          "author": "Daphnia",
          "description": "フロントエンド(ReactJS)とバックエンド(Flask)をそれぞれ構築し、Websocket通信してみます。\nフロントエンドから何か送信したらその送信した文字列に文字を追加してフロントエンドに送信し、画面に描画するアプリを構築します。つまり、フロントエンドからのリクエストをトリガーとしてバックエンドではフロントエンドに文字列を送信します。\n\n ディレクトリ\n.\n├─ be\n    ├─ app.py\n    ├─ requirements.txt\n    └─ socket_manager.py\n├─ fe\n    ├─ App.js\n    ├─ ...\n    ├─ socket...",
          "link": "https://zenn.dev/daphnia/articles/4a42bab05bd7b4",
          "publishedOn": "2023-05-01T14:12:53.000Z",
          "wordCount": 900,
          "title": "reactjs+Flaskでwebsocket通信",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RALNHsnA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:reactjs%252BFlask%25E3%2581%25A7websocket%25E9%2580%259A%25E4%25BF%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMDBhYTc2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RALNHsnA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:reactjs%252BFlask%25E3%2581%25A7websocket%25E9%2580%259A%25E4%25BF%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMDBhYTc2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryosuke_horie/articles/ebb84b6974e991",
          "author": "ryo-tech",
          "description": "はじめに\n使い物にはならなかったのですが、学びにはつながったので共有します。\n主に、GoogleCloudVisonAPIに対する知見の共有となります。\n\n 目次\n\n#1 作ろうとしたアプリケーションについて\n#2 実装した機能\n#3 問題点（あきらめた理由）\n#4 開発環境\n#5 知見の共有\n#6 今後の修正案\n#7 最後に\n\n\n #1 作ろうとしたアプリケーションについて\n1ヶ月のシフト表がカレンダー形式のPDFで共有されています。このカレンダーは1日毎に区切られていて、他の人のシフトも記載されているものです。\nPDFだと自分のカレンダーに取り込むことができないので、画像認識を利...",
          "link": "https://zenn.dev/ryosuke_horie/articles/ebb84b6974e991",
          "publishedOn": "2023-05-01T13:55:00.000Z",
          "wordCount": 713,
          "title": "【CloudVisonAPI】シフト表からカレンダーに予定を入れる作業を自動化したい【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DQiFZ1uP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590CloudVisonAPI%25E3%2580%2591%25E3%2582%25B7%25E3%2583%2595%25E3%2583%2588%25E8%25A1%25A8%25E3%2581%258B%25E3%2582%2589%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25AB%25E4%25BA%2588%25E5%25AE%259A%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E4%25BD%259C%25E6%25A5%25AD%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryo-tech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMTExODBjOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DQiFZ1uP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590CloudVisonAPI%25E3%2580%2591%25E3%2582%25B7%25E3%2583%2595%25E3%2583%2588%25E8%25A1%25A8%25E3%2581%258B%25E3%2582%2589%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25AB%25E4%25BA%2588%25E5%25AE%259A%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E4%25BD%259C%25E6%25A5%25AD%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryo-tech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMTExODBjOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/53b82847da2f07",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-126 A - Signed Difficulty\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    x, y = getString().split('.')\n\n    print('%s%s' % (x, '-' if y <= '2' else '+' if y >= '7' else ''))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/53b82847da2f07",
          "publishedOn": "2023-05-01T04:16:36.000Z",
          "wordCount": 270,
          "title": "［AtCoder］ABC-216｜A - Signed Difficulty",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xEyVEIGR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-216%25EF%25BD%259CA%2520-%2520Signed%2520Difficulty%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xEyVEIGR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-216%25EF%25BD%259CA%2520-%2520Signed%2520Difficulty%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1c4e3d3b581456",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-216 B - Same Name\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    st = getStringRow(n)\n\n    print('Yes' if len(set(st)) < n else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1c4e3d3b581456",
          "publishedOn": "2023-05-01T04:16:36.000Z",
          "wordCount": 295,
          "title": "［AtCoder］ABC-216｜B - Same Name",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tnyx-ss4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-216%25EF%25BD%259CB%2520-%2520Same%2520Name%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tnyx-ss4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-216%25EF%25BD%259CB%2520-%2520Same%2520Name%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuarth/articles/64c922e4abd84f",
          "author": "yuarth",
          "description": "はじめに\nこの記事は、前回作成したものをベースに、各スライドに画像を挿入するためのプロンプトを追加＋スライドの内容をベースにDALL・Eで画像を生成する機能を追加したものです。\n\n 必要なもの\n\nOpenAIのAPIキー\n３ヶ月で失効する$18の無料枠があります。（以降は従量課金製）\nChatGPTとDALL・EのAPIリクエストに使用します\nAPIの料金については以下参照\n\nhttps://openai.com/pricing\n\nPythonのライブラリ\n\nopenai\nunstructured\nselenium\n\n\n\n\n 実装\n\n テキストデータの読み込み\n今回はWikipedi...",
          "link": "https://zenn.dev/yuarth/articles/64c922e4abd84f",
          "publishedOn": "2023-05-01T03:00:00.000Z",
          "wordCount": 2761,
          "title": "ChatGPT+DALL・Eで画像付きスライドを自動作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CPxZ4Y6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%252BDALL%25E3%2583%25BBE%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E4%25BB%2598%25E3%2581%258D%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuarth%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGMwMWJlNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CPxZ4Y6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%252BDALL%25E3%2583%25BBE%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E4%25BB%2598%25E3%2581%258D%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuarth%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGMwMWJlNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/chanmoro/articles/1552c120ec8f37",
          "author": "Chanmoro",
          "description": "はじめに\n今年の2月頃に Twitter API に関する無料プランの廃止がアナウンスがされました。そして最近では色々なサービスで Twitter でのログインやアカウント連携に関わる機能が利用できなくなる事象が多発しているようです。\nTwitter API を使っているアプリケーションの開発に関わられている方はいまいち状況が掴めずあわあわしていると思われます。安心してください、僕もその1人です。\n\n今の時点で公式から発表されているのは Standard (v1.1), Essential (v2), Elevated (v2), Premium などのプランが廃止され、今後は新たな...",
          "link": "https://zenn.dev/chanmoro/articles/1552c120ec8f37",
          "publishedOn": "2023-05-01T02:22:56.000Z",
          "wordCount": 915,
          "title": "OAuth 1.0a, OAuth 2.0 で Twitter 連携して Twitter API v2 を使う実装サンプル (Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VkkvuLtx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OAuth%25201.0a%252C%2520OAuth%25202.0%2520%25E3%2581%25A7%2520Twitter%2520%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2597%25E3%2581%25A6%2520Twitter%2520API%2520v2%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E5%25AE%259F%25E8%25A3%2585...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Chanmoro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkMGM4OGM4NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VkkvuLtx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OAuth%25201.0a%252C%2520OAuth%25202.0%2520%25E3%2581%25A7%2520Twitter%2520%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2597%25E3%2581%25A6%2520Twitter%2520API%2520v2%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E5%25AE%259F%25E8%25A3%2585...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Chanmoro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkMGM4OGM4NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yamatonokuni/articles/33b9a917caf40c",
          "author": "たろう",
          "description": "はじめに\nSphinxというPython製のドキュメント作成ツールがあります。テキストベースで記述したファイルをHTMLやPDFに変換することができて便利なのですが、変換にはビルドを伴うので、少し面倒です。\nそこで、VSCodeに拡張機能を入れてライブプレビューをしながら記述できる環境を整えたので、その方法をメモしておこうと思います。\nちなみに、Pythonの公式ドキュメントや、Linux KernelのドキュメントなどがSphinxで作成されています。その外にもOSS（特にPython関連）のドキュメントはSphinxで作成されているものが多いです。こちらに採用例が載っていました。...",
          "link": "https://zenn.dev/yamatonokuni/articles/33b9a917caf40c",
          "publishedOn": "2023-04-30T18:34:52.000Z",
          "wordCount": 918,
          "title": "VSCodeでSphinxドキュメント作成環境を整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3POgkuD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7Sphinx%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMDJiOGI0ZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3POgkuD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7Sphinx%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMDJiOGI0ZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/amifima/articles/2afd82ae92038a",
          "author": "あみふぃま",
          "description": "エディタ\n\n vim\n自分はVimmerなんで、Vimを推しておきます。Vimがあれば大抵の事が出来ると思ってます。\nが、Vimは習得に時間がかかるという難点があります。\nエディタプラグイン\n\nneocomplcache.vim\nquickrun.vim\nvimproc + quickrun\nunite.vim\n\n\n MacVim\n\n Emacs\nVIM, Emacs は別格って感じですね・・・\nエディタプラグイン\n\nanything.el\n\n\n CocoaEmacs\n\n Mou\nMarkdownを書くためのエディタ。\n\nhttp://mouapp.com/\n リアルタイムプレビュー...",
          "link": "https://zenn.dev/amifima/articles/2afd82ae92038a",
          "publishedOn": "2023-04-30T15:00:01.000Z",
          "wordCount": 2646,
          "title": "【まとめ】プログラマのツール【100選】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ll-tCQlE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2581%25AE%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%2590100%25E9%2581%25B8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BF%25E3%2581%25B5%25E3%2581%2583%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4MmRiMzE1NzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ll-tCQlE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2581%25AE%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%2590100%25E9%2581%25B8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BF%25E3%2581%25B5%25E3%2581%2583%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4MmRiMzE1NzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tukiakaritabane/articles/google-colab-pyopenjtalk-error",
          "author": "月明たばね",
          "description": "pyopenjtalkのpip installでエラー\n\nセル\n!pip install pyopenjtalk\n\nGoogle Colabでpyopenjtalkのpip installが失敗する。\npyopenjtalkは、PythonからOpenJtalkが使用できるライブラリである。\nhts_engine_API、open_jtalkというC/C++のライブラリを参照していて、pip installの際、この２つのライブラリのビルドに失敗している。\n\n出力\nLooking in indexes: https://pypi.org/simple, https://us-pyth...",
          "link": "https://zenn.dev/tukiakaritabane/articles/google-colab-pyopenjtalk-error",
          "publishedOn": "2023-04-30T13:21:34.000Z",
          "wordCount": 420,
          "title": "Google Colabでpyopenjtalkがインストールできない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qwuqsLKi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2581%25A7pyopenjtalk%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%2588%25E6%2598%258E%25E3%2581%259F%25E3%2581%25B0%25E3%2581%25AD%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTQzMDZiYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qwuqsLKi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2581%25A7pyopenjtalk%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%2588%25E6%2598%258E%25E3%2581%259F%25E3%2581%25B0%25E3%2581%25AD%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTQzMDZiYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/4d0574f75bbede",
          "author": "Daphnia",
          "description": "FlaskでWebsocketを構築してみる。目的はPythonでWebsocketを使用してみるということで、サーバーサイドで完結する構成で組んでみます。\n\n 完成\n\n\n 環境\n\n ライブラリ\n\nflask\nflask_socketio\n\n\n 構築\n\n まずはFlaskでHello World\nvenv 環境を使用して、簡単に構築します。\n\n\napp.pyファイル作成\n\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'secret!'\n\n@app.ge...",
          "link": "https://zenn.dev/daphnia/articles/4d0574f75bbede",
          "publishedOn": "2023-04-30T11:40:01.000Z",
          "wordCount": 857,
          "title": "Flaskでwebsocketを試してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rmOgt77M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A7websocket%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rmOgt77M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A7websocket%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/fb86aeacfba310",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100ノック（自作）31本目~40本目の問題とPythonのサンプルコードです．\nRDDに関する問題です．問題の不備や内容の誤り等ありましたら，ご指摘いただけますと幸いです．\n\n 設定\nコンビニアプリでクーポンを配布するケースを考えます．\n過去の購買が多いほどアプリ内の累計ポイントが高いとし，累計ポイントが100以上のユーザーにクーポンを配布した結果，クーポン配布期間のユーザーの売上がどれほど増加したかという効果を推定します．\n利用するデータは，下記のファイルです．\nhttps://github.com/s1ok69oo/causal_inference_100kn...",
          "link": "https://zenn.dev/s1ok69oo/articles/fb86aeacfba310",
          "publishedOn": "2023-04-30T10:48:48.000Z",
          "wordCount": 1912,
          "title": "因果推論100本ノック(4)RDD（回帰不連続デザイン）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FwwtErMh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25284%2529RDD%25EF%25BC%2588%25E5%259B%259E%25E5%25B8%25B0%25E4%25B8%258D%25E9%2580%25A3%25E7%25B6%259A%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FwwtErMh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25284%2529RDD%25EF%25BC%2588%25E5%259B%259E%25E5%25B8%25B0%25E4%25B8%258D%25E9%2580%25A3%25E7%25B6%259A%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/7c0714539ded87",
          "author": "seiyakitazume",
          "description": "株式会社piponではこのような病院検索のサイトを提供しています。\n厚生労働省のデータをグラフ化して、病院ごとの症例数をグラフ化しています。\nhttps://hospital-search.net/index.html\nこのサイトを作った理由としては、こんなエピソードを聞いたからです。\nある方が、舌がんになり、自分の出身大学の附属病院へ行きました。\nしかし、その附属病院には、舌がんの症例数が少なく最適な治療をするまでに時間を要してしまいました。\n結果的にその方は亡くなってしまいました。もし、最適な治療を最初から受けられたら結果はどうなっていたか・・・どうしても考えてしまいます。\nしかし、...",
          "link": "https://zenn.dev/seiyakitazume/articles/7c0714539ded87",
          "publishedOn": "2023-04-30T09:14:10.000Z",
          "wordCount": 223,
          "title": "chatGPTを使って、文章からSQLを生成する方法を試しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IfSZKlNN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%258B%25E3%2582%2589SQL%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IfSZKlNN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%258B%25E3%2582%2589SQL%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yagiyuki/articles/download_img_python",
          "author": "yagiyuki",
          "description": "Pythonで指定QPS範囲で画像をダウンロードするプログラムを書きました。\nQPSはQueries Per Secondのことです。\n今回の場合、1秒間にダウンロードする画像件数のことを指します。\nたとえば、10QPSならば1秒間に10枚の画像をダウンロードするという意味になります。\nクロール先のサイトの負荷を軽減するためにQPS上限を指定することは重要です。\n以下がコード例となります。\nimport os\nimport time\nimport requests\n\ndef download_image(url, save_path):\n    try:\n        response...",
          "link": "https://zenn.dev/yagiyuki/articles/download_img_python",
          "publishedOn": "2023-04-30T03:35:07.000Z",
          "wordCount": 574,
          "title": "PythonでQPS上限を指定して画像をダウンロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yh3dm-Ve--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7QPS%25E4%25B8%258A%25E9%2599%2590%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yh3dm-Ve--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7QPS%25E4%25B8%258A%25E9%2599%2590%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yj_szk/articles/c049bad009550f",
          "author": "モケケ",
          "description": "何が変わったのか\n\n\nこれしかできなくなった\n\n1日50投稿(メディア含む)\n1日50ツイ消し\n1日自分のツイートに対しての取得25回\n\n\n\n\n検索とか色々全滅した\nインスタとか顔本は投稿用のAPIないし今までのTwitterが異常だったのかもしれない\n\n ただツイートするだけの方法\n\n 準備\npip install tweepy==4.14.0\n\n 認証\n設定ファイル\n\nhoge.ini\n[hoge]\nconsumer_key = \nconsumer_secret = \naccess_key = \naccess_secret = \nbearer_token = \n\nツイート用のv2...",
          "link": "https://zenn.dev/yj_szk/articles/c049bad009550f",
          "publishedOn": "2023-04-30T03:31:56.000Z",
          "wordCount": 691,
          "title": "Twitter APIの無償枠をtweepyからなんとか使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UBpEVh2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25E3%2581%25AE%25E7%2584%25A1%25E5%2584%259F%25E6%259E%25A0%25E3%2582%2592tweepy%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A2%25E3%2582%25B1%25E3%2582%25B1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYTI1ODY0ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UBpEVh2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25E3%2581%25AE%25E7%2584%25A1%25E5%2584%259F%25E6%259E%25A0%25E3%2582%2592tweepy%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A2%25E3%2582%25B1%25E3%2582%25B1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYTI1ODY0ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kaedeee/articles/bf3573cf96f8ba",
          "author": "Kaede Games",
          "description": "エピローグ\n「やりますねぇ！」\n初めて彼の声を聞いたのは、大学一年の夏休み。別大学に進学した、高校の親友の家だった。\n小綺麗な家の中で響き渡る、「イキスギィ！！」僕にとっては、何が「行き過ぎ」ているのかさっぱりだったし、久しぶりに会った友人の代わり様に、驚くばかりだった。\nそんな無垢なワイであったが、変化というものは恐ろしい。なんと現在は、迫真クリエイターとして野獣先輩シリーズを筆頭に数々の大人気アプリ（これもうわかんねぇな）を手がけているのだ。\nほら、見ろよ見ろよ👇\n🍎 AppStore\nhttps://bit.ly/kaedapple\n🍏 GooglePlay\nhttps://b...",
          "link": "https://zenn.dev/kaedeee/articles/bf3573cf96f8ba",
          "publishedOn": "2023-04-30T01:45:37.000Z",
          "wordCount": 287,
          "title": "野獣先輩は抗うつ剤となりうるか。（電気羊はアンドロイドの夢を見るか）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jEt4w6Zc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258E%25E7%258D%25A3%25E5%2585%2588%25E8%25BC%25A9%25E3%2581%25AF%25E6%258A%2597%25E3%2581%2586%25E3%2581%25A4%25E5%2589%25A4%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258A%25E3%2581%2586%25E3%2582%258B%25E3%2581%258B%25E3%2580%2582%25EF%25BC%2588%25E9%259B%25BB%25E6%25B0%2597%25E7%25BE%258A%25E3%2581%25AF%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AD%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AE%25E5%25A4%25A2%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%25E3%2581%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kaede%2520Games%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NzhjZjA2MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jEt4w6Zc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258E%25E7%258D%25A3%25E5%2585%2588%25E8%25BC%25A9%25E3%2581%25AF%25E6%258A%2597%25E3%2581%2586%25E3%2581%25A4%25E5%2589%25A4%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258A%25E3%2581%2586%25E3%2582%258B%25E3%2581%258B%25E3%2580%2582%25EF%25BC%2588%25E9%259B%25BB%25E6%25B0%2597%25E7%25BE%258A%25E3%2581%25AF%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AD%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AE%25E5%25A4%25A2%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%25E3%2581%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kaede%2520Games%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NzhjZjA2MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nicktominaga/articles/read_txt_python",
          "author": "Nick",
          "description": "シンプルに、以下のような時系列データを\n\n\n\ntime[s]\ndata\n\n\n\n\n1\n5\n\n\n2\n4\n\n\n3\n3\n\n\n4\n4\n\n\n5\n5\n\n\n\n以下のようなスペース区切りのテキストファイルで扱うとする。\n 1  5  \n 2  4 \n 3  3 \n 4  4 \n 5  5\n\nコードは以下\nimport numpy as np\n\ndata = np.genfromtxt(\"sample.txt\")\n\ndata_x = data[:,0]\ndata_y = data[:,1]\ndata[:,0]の意味は、行全体（左側の：）に沿って、0列目を取ってくる\nという意味。",
          "link": "https://zenn.dev/nicktominaga/articles/read_txt_python",
          "publishedOn": "2023-04-29T15:42:19.000Z",
          "wordCount": 125,
          "title": "pythonでのデータ読み込みメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SDptjzpc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nick%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYzcxZTgzYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SDptjzpc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nick%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYzcxZTgzYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/andoando/articles/60331fc517c17e",
          "author": "あんどう",
          "description": "はじめに\nこんにちは、あんどうです。今回はPytorchでピザの画像を分類する簡単な画像分類モデルを作成していきたいと思います。\n\n ライブラリ類の準備\nfrom torch import optim\nfrom torch import nn # ネットワークや各種レイヤー\nfrom torch.nn import functional #より詳しいレイヤー\nfrom torch.utils.data import DataLoader\nfrom torchvision import datasets # 画像データセットのモジュール\nfrom torchvision import ...",
          "link": "https://zenn.dev/andoando/articles/60331fc517c17e",
          "publishedOn": "2023-04-29T09:20:00.000Z",
          "wordCount": 3960,
          "title": "Pytorchでピザ判定機を作る🍕",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--50JxjUBm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch%25E3%2581%25A7%25E3%2583%2594%25E3%2582%25B6%25E5%2588%25A4%25E5%25AE%259A%25E6%25A9%259F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--50JxjUBm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch%25E3%2581%25A7%25E3%2583%2594%25E3%2582%25B6%25E5%2588%25A4%25E5%25AE%259A%25E6%25A9%259F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/5ed9ca8c7a63db",
          "author": "hodakam",
          "description": "ある程度のまとまりで能動学習をする\nこの記事に能動学習の一般的な手法について記載しました。その中で次の学習データを決めるときに1つの候補ではなく、複数の候補をまとめて提案するという方法があると書きました。後者はbatch active learningといいます。特に化学実験を行うようなケースでは、次の学習候補を一つ一つ提案するのではなく、ある程度まとまった単位で学習する方が作業面で効率的なケースもあります。\nまた、次に学習すべきデータは予測の不確実性やデータ密度などの指標によって選択され、これらを単独で用いるだけでなく、組み合わせて使うこともあると書きました。\nこれらの両者を組み合...",
          "link": "https://zenn.dev/hodakam/articles/5ed9ca8c7a63db",
          "publishedOn": "2023-04-29T07:30:03.000Z",
          "wordCount": 1195,
          "title": "ランク付けバッチ能動学習（Ranked batch-mode active learning）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--69B9S4TY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%2591%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25EF%25BC%2588Ranked%2520batch-mode%2520active%2520learning%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--69B9S4TY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%2591%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25EF%25BC%2588Ranked%2520batch-mode%2520active%2520learning%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/dc749aab5b95e7",
          "author": "hodakam",
          "description": "効率的に学習データを選ぶための戦略\n機械学習をやっていると、\"モデルの精度を上げるためにはデータが足りないです。増やしましょう！\"的なシチュエーションに遭遇します。このとき、実際どういうデータを増やしたらいいんでしょう？データが少ない場合は、ドメイン知識に明るい人が人力で選ぶという手もありますが、候補データがたくさんある場合は自動でいい感じに選択する必要があります。この”モデルの精度を上げるために自動でいい感じにデータを選択する”ということを実現する手法の一つが能動学習 (active learning)です。\n能動学習は大きく分けて、\n\n次の学習データをどうやって用意するか？(sa...",
          "link": "https://zenn.dev/hodakam/articles/dc749aab5b95e7",
          "publishedOn": "2023-04-29T07:25:55.000Z",
          "wordCount": 309,
          "title": "能動学習を雰囲気で理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tTaZWseP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tTaZWseP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mul/articles/20230429_01_test",
          "author": "MulciEla",
          "description": "Windows 2019Server(Windows10でも同じ)\nPython 3.7.8\n\n Pythonをインストール\npython-3.7.8.exeを使用してインストール\n今回は諸事情で32bit版をインストールしていますが64bit版でも問題ないはず\n\n ライブラリのインストール\nWindowsサービスということで今回はpywin32を使用する\npip install pywin32\n※もし上記のコマンドで64bit版のpywin32がインストールされてしまう場合は32bit版の.whlファイルを事前に準備し直接指定してインストールを行いましょう\n\n 環境変数\n以下の6つの環...",
          "link": "https://zenn.dev/mul/articles/20230429_01_test",
          "publishedOn": "2023-04-28T18:45:39.000Z",
          "wordCount": 918,
          "title": "PythonでWindows サービス(SocketServer)を作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bOVKgmad--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Windows%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2528SocketServer%2529%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MulciEla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeHZUSlZBTUI4SWNDbVVRNWRUWVhockMzWEZxX2ZsYi0wdkFQYng9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bOVKgmad--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Windows%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2528SocketServer%2529%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MulciEla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeHZUSlZBTUI4SWNDbVVRNWRUWVhockMzWEZxX2ZsYi0wdkFQYng9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dms_sub/articles/39isji929iwj92jd",
          "author": "tuna2134",
          "description": "はじめに\nこの記事はどのような言語を使うと適切なのか、もしくはどのようなライブラリを使うといいのかについて解説します。\n\n まずライブラリーから\nライブラリって似たようなものがたくさんありますよね？そんな時どれつかえばいいのかわからな〜いって感じになるのがよくあります。\n僕は基本以下に注目して、選定しています。\n\n更新頻度が一年以内に行われている、すなわち活発(これに関しては、ライブラリーのコードが古く言語かなんかのアップデートで使えなくなる可能性があるため)\nドキュメントなどがしっかり整備されている(これは説明などどう使えばいいのかわかるやつのが好ましい)\n自分にとって効率的にかけ...",
          "link": "https://zenn.dev/dms_sub/articles/39isji929iwj92jd",
          "publishedOn": "2023-04-28T15:41:39.000Z",
          "wordCount": 98,
          "title": "ライブラリー選定で僕が大事にしていること",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y0fDi6WW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%25A7%25E5%2583%2595%25E3%2581%258C%25E5%25A4%25A7%25E4%25BA%258B%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y0fDi6WW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%25A7%25E5%2583%2595%25E3%2581%258C%25E5%25A4%25A7%25E4%25BA%258B%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maybe_dog/articles/1c37ca514dc35e",
          "author": "おそらく犬",
          "description": "はじめに\nこんにちは。23卒エンジニア1年目のおそらく犬です。\nPythonについて何も分からないのでこの機に勉強しようと思います。\n今回は言語リファレンスの1,2章を見ていきます。なかなかに辛い期間が続きます。\n\n チュートリアル\n言語を学びたいときに初めに見るべきは公式のドキュメントです。間違っても待エソジニアではありません。\nこちらがPython公式チュートリアルです。\nhttps://docs.python.org/ja/3/tutorial/index.html\nそれでは読んでいきましょう。\n\n Pythonチュートリアル\n\nPython は強力で、学びやすいプログラミング...",
          "link": "https://zenn.dev/maybe_dog/articles/1c37ca514dc35e",
          "publishedOn": "2023-04-28T14:51:25.000Z",
          "wordCount": 2163,
          "title": "pythonを完全に理解しよう その1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TqhUMWEG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2520%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%259D%25E3%2582%2589%25E3%2581%258F%25E7%258A%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MTA2ZjRmM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TqhUMWEG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2520%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%259D%25E3%2582%2589%25E3%2581%258F%25E7%258A%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MTA2ZjRmM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/380ca6716a3de6",
          "author": "Daphnia",
          "description": "1. Flaskでアプリ作成\nFlaskアプリの構築についてはこちらを参考にしてください。\nhttps://zenn.dev/daphnia/articles/890a85c7b20250\n\n 2. NginxとFlask通信\n上記で作成したFlaskアプリにアクセスする前段階にNGINXを置いてアクセスをしてみようと思います。\n通信：　クライアント -> NGINX -> Gunicorn -> Flask\n\n ディレクトリ\n.\n├─ flask # 構成は前のブログ参照\n├─ nginx\n    ├─ Dockerfile\n    ├─ nginx.conf\n ...",
          "link": "https://zenn.dev/daphnia/articles/380ca6716a3de6",
          "publishedOn": "2023-04-28T14:26:06.000Z",
          "wordCount": 885,
          "title": "FlaskとNGINXで繋いでみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5X3n86JF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A8NGINX%25E3%2581%25A7%25E7%25B9%258B%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5X3n86JF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A8NGINX%25E3%2581%25A7%25E7%25B9%258B%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koujimachi2023/articles/b6bde79e73dd1d",
          "author": "おいしい",
          "description": "おいたん、怪文書を自動生成しちゃうのら・・・😁\n!\n\n本記事の内容およびコードは稲葉百万鉄氏の「どうぶつの森e+実況プレイ(https://www.nicovideo.jp/mylist/45062007)」のファン作品です。\n「どうぶつの森e+」および稲葉百万鉄氏の「どうぶつの森e+実況プレイ」のネタバレを含みます。\n自然言語処理初心者かつ独学での勉強のため、間違っている点・至らない点あるかと存じます。何卒ご容赦ください。\n\n\n\n Highlights\n\nイナババ怪文書をrinna/japanese-gpt2-mediumで学習\nズッポシむらの住民名や固有の表現を含んだ怪文書の自動...",
          "link": "https://zenn.dev/koujimachi2023/articles/b6bde79e73dd1d",
          "publishedOn": "2023-04-28T14:17:45.000Z",
          "wordCount": 2644,
          "title": "GPT-2をファインチューニングしてイナババ怪文書を自動生成するAIを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2wspSfaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-2%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BAI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2wspSfaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-2%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BAI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/890a85c7b20250",
          "author": "Daphnia",
          "description": "1. Flaskでアプリを作成してみよう\n\n ディレクトリ\n.\n├─ tamplates\n    ├─ indes.html\n├─ app.py\n├─ Dockerfile\n├─ gunicorn.py\n└─ requirements.txt\n\n ソースコード\napp.pyの内容は以下になります。\n\npy\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.get('/')\ndef index():\n    return render_template('index.html')\n\n\nhtml\n&...",
          "link": "https://zenn.dev/daphnia/articles/890a85c7b20250",
          "publishedOn": "2023-04-28T12:56:31.000Z",
          "wordCount": 888,
          "title": "FlaskアプリのデプロイにGunicornを使用してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TZqUC_7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25ABGunicorn%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TZqUC_7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25ABGunicorn%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/collabostyle/articles/3d0f210c59679e",
          "author": "なるお",
          "description": "初めまして！\nなるおと申します！\n初めてのZenn記事です！\n今回はYOLOというライブラリを使って、画像内のオブジェクト検出と座標取得をしてみたいと思います！\n↓こんなの\n\n\n YOLOって？\n画像や映像ストリーム内のオブジェクト検出アルゴリズムです。\nYou Only Look Onceの頭文字をとっており、人間と同じく、一目見たら物体検出できるという意味らしいです。\nYOLOには複数のバージョンがあり、2023/04/23現在で v8となっています。\n\n 本記事の前提\nYOLO CLIもpipを使ってインストールするため、Pythonのインストールは必須ですね。\nPythonのイン...",
          "link": "https://zenn.dev/collabostyle/articles/3d0f210c59679e",
          "publishedOn": "2023-04-28T10:58:40.000Z",
          "wordCount": 996,
          "title": "YOLOを使ってオブジェクト検出と座標取得をしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ejp5aoV_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YOLO%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%25A8%25E5%25BA%25A7%25E6%25A8%2599%25E5%258F%2596%25E5%25BE%2597%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258A%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YnUzNDNyeWU1dURpcERqZ3o3MzFQM0M4TjBVcnd6cnMzVDJoamM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ejp5aoV_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YOLO%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%25A8%25E5%25BA%25A7%25E6%25A8%2599%25E5%258F%2596%25E5%25BE%2597%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258A%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YnUzNDNyeWU1dURpcERqZ3o3MzFQM0M4TjBVcnd6cnMzVDJoamM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/e875348a8af484",
          "author": "よしだ",
          "description": "連載している記事の１つです。以前までの記事を読んでいる前提で書いているので、必要であればNumPyroの記事一覧から各記事を参考にしてください。\n\n はじめに\n今回はベイジアンABテストを扱います。各ケースにおいて適切に事前分布等を設計するなど手間はかかりますが、最終的にBがAより優れている/効果があった確率は◯%というような結果が出てくるので、次のアクションを決める意思決定に向いています。\nベイジアンABテストはいろいろな企業で導入されており以下のように紹介記事も多いので、今回はNumPyroでの実装を簡単にだけ紹介して終わりにします。\nhttps://engineering.merc...",
          "link": "https://zenn.dev/yoshida0312/articles/e875348a8af484",
          "publishedOn": "2023-04-28T10:27:44.000Z",
          "wordCount": 1656,
          "title": "NumPyro：ベイジアンABテスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JZ8XEB2d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25B8%25E3%2582%25A2%25E3%2583%25B3AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JZ8XEB2d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25B8%25E3%2582%25A2%25E3%2583%25B3AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/carushi/articles/0b74dd27b9aeac",
          "author": "carushi",
          "description": "目的\nAnacondaを使って環境管理をしつつ、Jupyter-labでそれぞれの環境下にあるPythonを別のカーネルとして呼びたい。\nJupyterとそこで呼び出されるカーネル・ターミナルの違いを正しく理解する。\n\n InstallしたはずのパッケージがJupyter上で動かない\nまず作業のために新たな環境を作成し、その環境をactivateした上でJupyter-labを走らせました。しかし、Jupyter上で動くカーネルはJupyterが走っている環境とは必ずしも一致しないので、以下のコマンドを走らせて呼び出されるpythonと、Jupyter notebook上でコードを実...",
          "link": "https://zenn.dev/carushi/articles/0b74dd27b9aeac",
          "publishedOn": "2023-04-28T05:47:21.000Z",
          "wordCount": 213,
          "title": "Jupyter Notebook (Lab)上で目当てのPythonが呼べないときの覚書",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XwuCgMDd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2520Notebook%2520%2528Lab%2529%25E4%25B8%258A%25E3%2581%25A7%25E7%259B%25AE%25E5%25BD%2593%25E3%2581%25A6%25E3%2581%25AEPython%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B9%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E8%25A6%259A%25E6%259B%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:carushi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZjJiZDViMzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XwuCgMDd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2520Notebook%2520%2528Lab%2529%25E4%25B8%258A%25E3%2581%25A7%25E7%259B%25AE%25E5%25BD%2593%25E3%2581%25A6%25E3%2581%25AEPython%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B9%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E8%25A6%259A%25E6%259B%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:carushi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZjJiZDViMzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b5e631c4b34edd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-215 B - log2(N)\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    i = 0\n    while 2 ** (i + 1) <= n:\n        i += 1\n    print(i)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b5e631c4b34edd",
          "publishedOn": "2023-04-28T03:50:37.000Z",
          "wordCount": 251,
          "title": "［AtCoder］ABC-215｜B - log2(N)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HP_z1HZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CB%2520-%2520log2%2528N%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HP_z1HZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CB%2520-%2520log2%2528N%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a5b4756d2cb87d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-215 A - Your First Judge\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('AC' if s == 'Hello,World!' else 'WA')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/a5b4756d2cb87d",
          "publishedOn": "2023-04-28T03:50:36.000Z",
          "wordCount": 225,
          "title": "［AtCoder］ABC-215｜A - Your First Judge",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CaHrjLy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CA%2520-%2520Your%2520First%2520Judge%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CaHrjLy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CA%2520-%2520Your%2520First%2520Judge%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/team_delta/articles/3ee759ceda3092",
          "author": "EjiOsa",
          "description": "はじめに\n株式会社DELTA　エンジニアの長田（おさだ）です。\n前回はゴミ箱センサーの開発スタイルについて書かせていただきましたが、今回はゴミ箱センサーの技術的な部分を備忘録として記事にしたいと思います。\nRaspberry Pi Pico Wの工事設計認証（いわゆる技適）の取得および表示手順が完了したため2023年3月27日に日本でも発売されました。\n前回の記事ではRaspberry Pi Picoを使用していましたが、Raspberry Pi Pico WにはWi-Fi機能が追加されており、せっかくなのでゴミ箱センサーにもWi-Fiを使用した機能を追加しています。\n\n\n 開発環境...",
          "link": "https://zenn.dev/team_delta/articles/3ee759ceda3092",
          "publishedOn": "2023-04-28T00:11:15.000Z",
          "wordCount": 3850,
          "title": "Raspberry Pi Pico Wのゴミ箱センサー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CryVgyJd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Pico%2520W%25E3%2581%25AE%25E3%2582%25B4%25E3%2583%259F%25E7%25AE%25B1%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DELTA%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:EjiOsa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjRiYjM4NGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTAzX3R6cUR5cUx3YVBmcElPSERmMEtMY0VDZm91QWVqZWMxdkJaZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CryVgyJd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Pico%2520W%25E3%2581%25AE%25E3%2582%25B4%25E3%2583%259F%25E7%25AE%25B1%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DELTA%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:EjiOsa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjRiYjM4NGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTAzX3R6cUR5cUx3YVBmcElPSERmMEtMY0VDZm91QWVqZWMxdkJaZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/099c1c05c81e89",
          "author": "よしだ",
          "description": "はじめに\n今回は次元圧縮としてベイジアン主成分分析とその拡張であるautomatic relevance determination(ARD)付き主成分分析を扱います。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import load_iris\nfrom s...",
          "link": "https://zenn.dev/yoshida0312/articles/099c1c05c81e89",
          "publishedOn": "2023-04-27T16:32:58.000Z",
          "wordCount": 2750,
          "title": "NumPyro：次元圧縮",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--syH9_N8m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A1%25E5%2585%2583%25E5%259C%25A7%25E7%25B8%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--syH9_N8m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A1%25E5%2585%2583%25E5%259C%25A7%25E7%25B8%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/andoando/articles/8505774e50ae4a",
          "author": "あんどう",
          "description": "はじめに\nこんにちは、あんどうです。Kaggleなどでテーブルデータのコンペでは一般にGBDT系のモデル(LightGBMとか)がよく使われますが、深層学習モデルではどのくらいの精度を出すことができるんだろう？と気になったので今回はシンプルなNNを用いてKaggleのSpaceship Titanic（初心者用の常設コンペ）を解いていこうと思います。\n\n データ確認\n今回使っていくデータを確認します。\nBASE = \"path_to_dir\"\n\ntrain = pd.read_csv(BASE+\"train.csv\")\ntest = pd.read_csv(BASE+\"test.cs...",
          "link": "https://zenn.dev/andoando/articles/8505774e50ae4a",
          "publishedOn": "2023-04-27T13:53:48.000Z",
          "wordCount": 3520,
          "title": "[Kaggle]Spaceship titanicをNNで解く①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nhpnTIcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKaggle%255DSpaceship%2520titanic%25E3%2582%2592NN%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nhpnTIcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKaggle%255DSpaceship%2520titanic%25E3%2582%2592NN%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tomlab/books/d4df1e3f76a1ba",
          "author": "tomr",
          "description": "この本では「web3.py」,「Flask」により、簡単なWebアプリケーションを実装し、Web3を体験します。",
          "link": "https://zenn.dev/tomlab/books/d4df1e3f76a1ba",
          "publishedOn": "2023-04-27T06:57:29.000Z",
          "wordCount": 75,
          "title": "【Flask】web3.pyで簡単なWeb3アプリを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MMcaxYEE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80YjFkNTVlOWEzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MMcaxYEE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80YjFkNTVlOWEzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/84762a9eb3add5",
          "author": "よしだ",
          "description": "はじめに\n今回は、MCMCで常微分方程式のパラメータを推論する方法を見ていきます。MCMCでパラメータ推論することで物理法則などの事前知識の導入や不確実性を考慮しながら、多変数のパラメータ最適化をバランスよく実施できることが期待できます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport nu...",
          "link": "https://zenn.dev/yoshida0312/articles/84762a9eb3add5",
          "publishedOn": "2023-04-27T05:08:08.000Z",
          "wordCount": 3006,
          "title": "NumPyro：ODE",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3rEUIiwB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:NumPyro%25EF%25BC%259AODE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3rEUIiwB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:NumPyro%25EF%25BC%259AODE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e245f9ce297698",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-214 B - How many?\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    s, t = getIntMap()\n\n    c = 0\n    for i in range(s + 1):\n        for j in range(s + 1 - i):\n            for k in range(s + 1 - i - j):\n                if i * j * k <= t:\n           ...",
          "link": "https://zenn.dev/hyperdb/articles/e245f9ce297698",
          "publishedOn": "2023-04-27T04:06:59.000Z",
          "wordCount": 366,
          "title": "［AtCoder］ABC-214｜B - How many?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--geZgJYxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CB%2520-%2520How%2520many%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--geZgJYxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CB%2520-%2520How%2520many%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d648bd7fa1fbb5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-214 A - New Generation ABC\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(4 if n <= 125 else 6 if n <= 211 else 8)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d648bd7fa1fbb5",
          "publishedOn": "2023-04-27T04:06:58.000Z",
          "wordCount": 253,
          "title": "［AtCoder］ABC-214｜A - New Generation ABC",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b4ra7sJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CA%2520-%2520New%2520Generation%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b4ra7sJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CA%2520-%2520New%2520Generation%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tomlab/books/71f3950b51f319",
          "author": "tomr",
          "description": "この本では、「Flask」および「Real-ESRGAN」を用いて、画像を高解像度化（画質を向上）するWebアプリケーションを実装します。",
          "link": "https://zenn.dev/tomlab/books/71f3950b51f319",
          "publishedOn": "2023-04-27T01:58:49.000Z",
          "wordCount": 77,
          "title": "【Flask】画像を高解像度化するWebアプリケーションを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QSxAXVkK--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mODg0MzdjYjMzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QSxAXVkK--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mODg0MzdjYjMzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/d0e4c36d94d26b",
          "author": "よしだ",
          "description": "はじめに\n今回は実務でもよくある欠損値がデータにある際の取り扱い方をみていきます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport numpyro\nfrom numpyro.diagnostics import hpdi\nimport numpyro.distributions as dis...",
          "link": "https://zenn.dev/yoshida0312/articles/d0e4c36d94d26b",
          "publishedOn": "2023-04-26T14:31:58.000Z",
          "wordCount": 3327,
          "title": "NumPyro：欠損値の扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dA9r636p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A0%25E6%2590%258D%25E5%2580%25A4%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dA9r636p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A0%25E6%2590%258D%25E5%2580%25A4%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/piment/articles/24269616aa9c04",
          "author": "ぴーまん",
          "description": "現状のwhisper、whisper.cpp、faster-whiperを比較してみたいと思います。\nopenai/whisperに、2022年12月にlarge-v2モデルが追加されたり、色々バージョンアップしていたりと公開からいろいろと進化しているようです。\nhttps://github.com/openai/whisper\nCPU向けにC/C++で書かれたバージョンです。Core ML supportだそうですので、Mac向け感が強いです。\nhttps://github.com/ggerganov/whisper.cpp\nCTranslate2でWhisperモデルの書き直して、オ...",
          "link": "https://zenn.dev/piment/articles/24269616aa9c04",
          "publishedOn": "2023-04-26T14:30:58.000Z",
          "wordCount": 674,
          "title": "whisper、whisper.cpp、faster-whisperの比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CAUWjswT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:whisper%25E3%2580%2581whisper.cpp%25E3%2580%2581faster-whisper%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CAUWjswT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:whisper%25E3%2580%2581whisper.cpp%25E3%2580%2581faster-whisper%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fastsnowy/articles/adc106a4a03dc1",
          "author": "fastsnowy",
          "description": "はじめに\n個人的に作った環境構築方法なのでベストプラクティスではない可能性もあります\n今回はUbuntu20.04のイメージを使ってCUDA11.7でPytorchのtorch=1.13.1を構築する\ntorch.cuda.is_available()でTrueが返ってきたら成功\n\nPythonのバージョン管理にはasdfを使う\nvenv or Poetryで環境を作る\n\nhttps://asdf-vm.com/\n\n 開発環境\nVSCodeを前提\nDocker拡張機能をインストール\nhttps://marketplace.visualstudio.com/items?itemName...",
          "link": "https://zenn.dev/fastsnowy/articles/adc106a4a03dc1",
          "publishedOn": "2023-04-26T07:05:01.000Z",
          "wordCount": 1334,
          "title": "Dockerで研究用Python環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ojIhjCTF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E7%25A0%2594%25E7%25A9%25B6%25E7%2594%25A8Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastsnowy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3YWNlYjIyOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ojIhjCTF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E7%25A0%2594%25E7%25A9%25B6%25E7%2594%25A8Python%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastsnowy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3YWNlYjIyOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/systemzeus_blog/articles/sms_forwarding_bot",
          "author": "m-minamisaka",
          "description": "1. はじめに\n複数人で使用する共通アカウントのSMS認証にて、認証コードが特定の1台の携帯にしか送信されないことによる不便さを解決するためのボットを作成しました。SIM付きRaspberry Pi(ラズパイ)にて認証コードを受信しSlackに転送することで、共通アカウントを使用する全員に認証コードを通知することができます。ここでは認証コードを転送するラズパイをSMS転送ボットと呼び、SMS転送ボットのプログラムをGitHubに公開し、SMS転送ボットの設定方法を説明します。\n\n 2. デモ\nSMS認証が必要なクラウドにログインし、認証コードをSlackで受信してる様子です。\n\n\n ...",
          "link": "https://zenn.dev/systemzeus_blog/articles/sms_forwarding_bot",
          "publishedOn": "2023-04-26T06:49:38.000Z",
          "wordCount": 284,
          "title": "SMS認証コードをラズパイでSlackに転送してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kYkZnyo3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SMS%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2581%25A7Slack%25E3%2581%25AB%25E8%25BB%25A2%25E9%2580%2581%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25BC%25E3%2582%25A6%25E3%2582%25B9%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:m-minamisaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlNTg5MzI2NDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkM2RkMzFmZmMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kYkZnyo3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SMS%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2581%25A7Slack%25E3%2581%25AB%25E8%25BB%25A2%25E9%2580%2581%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25BC%25E3%2582%25A6%25E3%2582%25B9%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:m-minamisaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlNTg5MzI2NDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkM2RkMzFmZmMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/masahiro_kaneko/articles/ab0b643bee1654",
          "author": "MasahiroKaneko",
          "description": "コマンド\ndef translate(text):\n\n    result = requests.get( \n                \"https://api.deepl.com/v2/translate\", # 無料版の場合はhttps://api-free.deepl.com/v2/translate\n                params={ \n                \"auth_key\": \"Your API Key\", # サイトで取得した認証キー\n                \"target_lang\": \"JA\", # 翻訳先の言語\n      ...",
          "link": "https://zenn.dev/masahiro_kaneko/articles/ab0b643bee1654",
          "publishedOn": "2023-04-26T06:46:34.000Z",
          "wordCount": 232,
          "title": "DeepLのAPIをpythonで使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GyQeUWmF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DeepL%25E3%2581%25AEAPI%25E3%2582%2592python%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MasahiroKaneko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hrZVIzWU5UNVVzVXI5Yl81MTB0LXhjeTlOOXlhWlVWeWRvMnJRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GyQeUWmF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DeepL%25E3%2581%25AEAPI%25E3%2582%2592python%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MasahiroKaneko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hrZVIzWU5UNVVzVXI5Yl81MTB0LXhjeTlOOXlhWlVWeWRvMnJRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nen/books/e7ffc3397dbb67",
          "author": "sre_yoshiya",
          "description": "本書は、Google Cloud Dataflow の基本的な概念から応用的なテクニックまでを網羅した実践的なガイドブックです。Cloud Dataflow  は、分散データ処理を行うためのオープンソースのプラットフォームであり、大規模なデータ処理において高いパフォーマンスを発揮します。本書では、Cloud Dataflow  の特徴やアーキテクチャについて解説し、リアルワールドでの分散データ処理の実装方法について詳しく説明します。\n\n\n\n本書は、分散データ処理に興味があるデータエンジニア、データサイエンティスト、システムアーキテクト、データベース管理者などの技術者を対象としています。また、Cloud Dataflow や Apache Beam についての事前知識は必須ではありませんが、プログラミング経験がある方にはより理解しやすい内容となっています。\n\n\n\n本書を読むことで、以下のようなメリットがあります。\n\nCloud Dataflow や Apache Beam の基本的な概念を理解することができます。\n大規模なデータ処理におけるパフォーマンス改善に役立つテクニックを学ぶことができます。\nリアルワールドでのデータ処理の実装方法を知ることができます。\nGoogle Cloud Platform 上での分散データ処理に必要なスキルを習得できます。\nApache Beam を用いたポータブルなデータ処理の方法を学ぶことができます。\n本書は、Cloud Dataflow と Apache Beam の基礎から実践的なテクニックまでを網羅した実践的なガイドブックであり、Google Cloud Platform 上での分散データ処理に興味のある技術者にとって、非常に役立つリソースとなるでしょう。",
          "link": "https://zenn.dev/nen/books/e7ffc3397dbb67",
          "publishedOn": "2023-04-26T06:01:54.000Z",
          "wordCount": 177,
          "title": "apache beamのマネージドサービスdataflowで体験する分散データ処理ETL パイプライン",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uqhjLag---/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hOTU2YmUwMGYwLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uqhjLag---/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hOTU2YmUwMGYwLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b95065cc37c735",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-213 A - Bitwise Exclusive Or\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(a ^ b)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b95065cc37c735",
          "publishedOn": "2023-04-26T03:46:04.000Z",
          "wordCount": 229,
          "title": "［AtCoder］ABC-213｜A - Bitwise Exclusive Or",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZPxqscl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-213%25EF%25BD%259CA%2520-%2520Bitwise%2520Exclusive%2520Or%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZPxqscl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-213%25EF%25BD%259CA%2520-%2520Bitwise%2520Exclusive%2520Or%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8c6c3699ca823c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-213 B - Booby Prize\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    b = dict()\n    for i in range(n):\n        b[a[i]] = i + 1\n    c = sorted(b.items())\n\n    print(c...",
          "link": "https://zenn.dev/hyperdb/articles/8c6c3699ca823c",
          "publishedOn": "2023-04-26T03:46:03.000Z",
          "wordCount": 359,
          "title": "［AtCoder］ABC-213｜B - Booby Prize",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BQ63ZdlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-213%25EF%25BD%259CB%2520-%2520Booby%2520Prize%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BQ63ZdlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-213%25EF%25BD%259CB%2520-%2520Booby%2520Prize%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-side-business",
          "author": "gk12",
          "description": "こんにちは。今回は、Pythonについて初心者エンジニア向けて、フリーランスや副業としての活用方法について解説します。\n\n はじめに\nPythonは、機械学習やデータ分析、Webアプリケーション開発など、様々な分野で利用されるプログラミング言語です。そのため、Pythonを使ったフリーランスや副業のニーズも高まっています。本記事では、Pythonをフリーランスや副業として活用するための方法について解説します。\n\n フリーランスとしてのPython活用方法\nフリーランスとしてPythonを活用する方法は、大きく分けて2つあります。1つは、Pythonを使ったWebアプリケーション開発やデー...",
          "link": "https://zenn.dev/gk12/articles/python-side-business",
          "publishedOn": "2023-04-26T02:29:31.000Z",
          "wordCount": 120,
          "title": "初心者エンジニアのためのPythonフリーランス副業入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6Tpk7Kvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E5%2589%25AF%25E6%25A5%25AD%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6Tpk7Kvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E5%2589%25AF%25E6%25A5%25AD%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/asopitech/articles/20230425-214748_1",
          "author": "あそぴテック",
          "description": "!\nChatGPT-4 の情報をまとめて本にしました。基本からまとめて学習したい方はぜひ！\n\n\n\n Python の AWS CDK に Terraform のコードを移行させてみた\nTerrformのコード、とっ散らかっておりまして…\nもうちょっと整理したいけどどうしようもないので CDK を試してみたいけどAPIのリファレンス見てみるとめっちゃハードル高そうじゃん…\nと、腰が引けておりましたが、ChatGPTのコード変換、やらせられないか試してみました。\n今回も GPT-4 使っております。\n\n そもそもTerrformとかCDK知ってる？\nそもそもですが、知識があるかちょっと聞いて...",
          "link": "https://zenn.dev/asopitech/articles/20230425-214748_1",
          "publishedOn": "2023-04-26T00:00:00.000Z",
          "wordCount": 2095,
          "title": "[2023年4月版]TerraformからPythonのCDKへの移行もChatGPTでなんとか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OVEX9AFo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B44%25E6%259C%2588%25E7%2589%2588%255DTerraform%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25AECDK%25E3%2581%25B8%25E3%2581%25AE%25E7%25A7%25BB%25E8%25A1%258C%25E3%2582%2582ChatGPT%25E3%2581%25A7%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%259D%25E3%2581%25B4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzYWRiZGU0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OVEX9AFo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B44%25E6%259C%2588%25E7%2589%2588%255DTerraform%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25AECDK%25E3%2581%25B8%25E3%2581%25AE%25E7%25A7%25BB%25E8%25A1%258C%25E3%2582%2582ChatGPT%25E3%2581%25A7%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%259D%25E3%2581%25B4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzYWRiZGU0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bonsai_engineer/articles/5e642ba35b9696",
          "author": "盆栽エンジニア",
          "description": "ChatGPTに元気づける一言をもらい、その返答をe-Paperに表示するものをラズパイを使用して作成してみたので作り方を共有します。\nRaspberryPi Zero WHと電子ペーパーモジュール for RaspberryPiを使えば5,000円ほどで作成できます。\n簡単なので試してみてください！\n\n 必要なもの\n\nRasberryPi\n2×20のピンソケットがついているもの、WiFiモジュールがついているものがいい\nRaspberry Pi Zero WH、Raspberry Pi4、Raspberry Pi3など\n私が購入使ったものはこちら\n\ne-Paper\nfor Raspb...",
          "link": "https://zenn.dev/bonsai_engineer/articles/5e642ba35b9696",
          "publishedOn": "2023-04-25T16:02:55.000Z",
          "wordCount": 341,
          "title": "ChatGPTからの一言をラズパイで表示しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--evh0XGvT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E4%25B8%2580%25E8%25A8%2580%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--evh0XGvT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E4%25B8%2580%25E8%25A8%2580%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/226a7bc6cec32a",
          "author": "よしだ",
          "description": "はじめに\n今回は打ち切りデータを扱います。NumPyroには打ち切りデータをいろんな分布に適用できる便利クラスが用意されているので簡単に実装できます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport numpyro\nfrom numpyro.diagnostics import hpdi\ni...",
          "link": "https://zenn.dev/yoshida0312/articles/226a7bc6cec32a",
          "publishedOn": "2023-04-25T08:30:12.000Z",
          "wordCount": 1338,
          "title": "NumPyro：打ち切りデータの扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--onUhyW_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%2589%2593%25E3%2581%25A1%25E5%2588%2587%25E3%2582%258A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--onUhyW_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%2589%2593%25E3%2581%25A1%25E5%2588%2587%25E3%2582%258A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/40c9e0cf271c7d",
          "author": "seiyakitazume",
          "description": "Auto-GPTの特徴\n\n検索、情報収集のためのインターネットアクセス\n（人気のあるウェブサイトやプラットフォームへのアクセス等）\n長期および短期のメモリ管理（例えば、過去に実施した検索を記憶します。）\n調べた内容をドキュメントに保存してくれる\n\n\n 環境要件\n\nPython3.8以降\n\nWelcome to Python.org\n\nOPENAI API key\nPINECONE API key\n\n\n Auto-GPTのインストール\nインストール手順　※Pythonをインストールした上で実施してください。\n下記コードをcmdまたはターミナルで実行します。\ngit clone http...",
          "link": "https://zenn.dev/seiyakitazume/articles/40c9e0cf271c7d",
          "publishedOn": "2023-04-25T06:19:02.000Z",
          "wordCount": 962,
          "title": "リサーチ自動化のauto-GPTの詳細をまとめました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v3cpOoZC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2581%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%25AEauto-GPT%25E3%2581%25AE%25E8%25A9%25B3%25E7%25B4%25B0%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v3cpOoZC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2581%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%25AEauto-GPT%25E3%2581%25AE%25E8%25A9%25B3%25E7%25B4%25B0%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/543865c00cea22",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-212 B - Weak Password\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef gap(n, m):\n    return (10 if n == 0 else n) - m\n\n\ndef main():\n    x = list(map(int, getString()))\n    y = [gap(x[i + 1], x[i]) for i in range(len(x) - 1)]\n\n    r = 'Strong'\n    if len(set(x)) == 1:\n        r = ...",
          "link": "https://zenn.dev/hyperdb/articles/543865c00cea22",
          "publishedOn": "2023-04-25T04:32:22.000Z",
          "wordCount": 443,
          "title": "［AtCoder］ABC-212｜B - Weak Password",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--spIZKx0C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-212%25EF%25BD%259CB%2520-%2520Weak%2520Password%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--spIZKx0C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-212%25EF%25BD%259CB%2520-%2520Weak%2520Password%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/48a034b929c2fd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-212 A - Alloy\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print('Alloy' if a > 0 and b > 0 else 'Gold' if b == 0 else 'Silver')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/48a034b929c2fd",
          "publishedOn": "2023-04-25T04:32:22.000Z",
          "wordCount": 273,
          "title": "［AtCoder］ABC-212｜A - Alloy",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uj-ZCXk---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-212%25EF%25BD%259CA%2520-%2520Alloy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uj-ZCXk---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-212%25EF%25BD%259CA%2520-%2520Alloy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryotashona/articles/50070fe569876d",
          "author": "ryotashona",
          "description": "作ったもの\nスラッシュコマンドで下記ができます。\n\n匿名投稿\n匿名スタンプ(リアクション)\n匿名スレッド投稿\n\nhttps://github.com/ryotashona/slack_tokumeisan\nSlackのアプリ作成/設定をして環境変数を定義、任意のサーバーにデプロイすれば使えると思います。\n\n 背景\n不満、要望や提案をするときに、いわいゆる「言い出しっぺの法則」が嫌いです。これのために、アイデアを思いついても自分の中にしまっている人がいるでしょう。\nならば、匿名で投稿できる仕組みを作ってしまえば？と思った次第です。チャンスを逃したくない。風通しを良くしたい。\n\n すでに...",
          "link": "https://zenn.dev/ryotashona/articles/50070fe569876d",
          "publishedOn": "2023-04-25T00:13:58.000Z",
          "wordCount": 155,
          "title": "Slackで匿名投稿できるbotを作りました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fR-AA6rN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A7%25E5%258C%25BF%25E5%2590%258D%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bbot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryotashona%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0ZTExZjRjNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fR-AA6rN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A7%25E5%258C%25BF%25E5%2590%258D%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bbot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryotashona%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0ZTExZjRjNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-1",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-1",
          "publishedOn": "2023-04-24T16:47:06.000Z",
          "wordCount": 458,
          "title": "AtCoderの問題を分類しました【入出力・演算・代入文・制御構文】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--si4bIZOf--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iY2YyNDA1MTk2LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--si4bIZOf--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iY2YyNDA1MTk2LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/a00ba56078c76b",
          "author": "よしだ",
          "description": "はじめに\n今回はスパースモデルとして、Bayesian Lasso回帰と馬蹄事前分布を使用した回帰モデル、正則化つき馬蹄事前分布を使用した回帰モデルを扱います。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import make_regression\n\nimp...",
          "link": "https://zenn.dev/yoshida0312/articles/a00ba56078c76b",
          "publishedOn": "2023-04-24T15:03:14.000Z",
          "wordCount": 5904,
          "title": "NumPyro：スパースモデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ckT13WTz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25B9%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ckT13WTz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25B9%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/treefield/articles/012b1f469f750a",
          "author": "treefield",
          "description": "https://zenn.dev/treefield/articles/f6e8b879387d02\n上記の記事を書いたときに、Heroku で画像のアップロードができませんでした。Heroku では AWS や Cloudinary で別途ストレージを用意しないといけないということで、無料の Cloudinary を使ってみました。\n今回は、モデルのイメージフィールドには、CloudinaryFieldなどは使わず、以下のようにDjangoのImageFieldをそのまま使用します。\n    image = models.ImageField(verbose_name=\"画像\", up...",
          "link": "https://zenn.dev/treefield/articles/012b1f469f750a",
          "publishedOn": "2023-04-24T14:55:21.000Z",
          "wordCount": 539,
          "title": "DjangoのHeroku環境でCloudinaryを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uz4lD5Fs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AEHeroku%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Cloudinary%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:treefield%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMWQ3M2UxMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uz4lD5Fs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AEHeroku%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Cloudinary%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:treefield%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMWQ3M2UxMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/misya11p/articles/43dae4c90ab32b",
          "author": "misya11p",
          "description": "munotes\nタイトルにあるようなライブラリです。\nたとえば、「ド」とか「C#7」みたいな音やコードの波形（sin波とか矩形波とか）が欲しい、という場面で使えます。\n\nPyPI: https://pypi.org/project/munotes/\n\nGitHub: https://github.com/misya11p/munotes/\n\nAPI reference: https://misya11p.github.io/munotes/\n\n\n\n インストール\npip install munotes\n対応しているPythonのバージョンは3.7以上です。\n\n 使い方\nこのライブラリ...",
          "link": "https://zenn.dev/misya11p/articles/43dae4c90ab32b",
          "publishedOn": "2023-04-24T08:45:57.000Z",
          "wordCount": 1393,
          "title": "Pythonで音符やコード進行の音声波形を扱うライブラリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tuuIPrb1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259F%25B3%25E7%25AC%25A6%25E3%2582%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2580%25B2%25E8%25A1%258C%25E3%2581%25AE%25E9%259F%25B3%25E5%25A3%25B0%25E6%25B3%25A2%25E5%25BD%25A2%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:misya11p%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1NzA5NzE5NGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tuuIPrb1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259F%25B3%25E7%25AC%25A6%25E3%2582%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2580%25B2%25E8%25A1%258C%25E3%2581%25AE%25E9%259F%25B3%25E5%25A3%25B0%25E6%25B3%25A2%25E5%25BD%25A2%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:misya11p%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1NzA5NzE5NGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-hatena-blog-custom-url",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、はてなブログに記事を自動投稿する方法と、カスタムURLを設定する方法について紹介します。\n\n はじめに\nはてなブログは、日本でも人気のあるブログサービスで、手軽にブログを書くことができます。また、APIを使って自動投稿することもでき、カスタムURLを設定することもできます。ここでは、Pythonを使って、はてなブログに記事を自動投稿し、カスタムURLを設定する方法を紹介します。\n\n はてなブログに自動投稿する方法\nはてなブログに自動投稿するためには、はてなブログのAPIを使います。Pythonのrequestsライブラリを使って、APIを呼...",
          "link": "https://zenn.dev/gk12/articles/python-hatena-blog-custom-url",
          "publishedOn": "2023-04-24T07:49:33.000Z",
          "wordCount": 373,
          "title": "Python初心者のためのはてなブログ自動投稿とカスタムURL設定方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a_dZLtuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%25A6%25E3%2581%25AA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E8%2587%25AA%25E5%258B%2595%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25A8%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0URL%25E8%25A8%25AD%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a_dZLtuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%25A6%25E3%2581%25AA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E8%2587%25AA%25E5%258B%2595%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25A8%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0URL%25E8%25A8%25AD%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/bc11bbd020cdfe",
          "author": "seiyakitazume",
          "description": "先日、データ解析のセミナーを開催しました。\n未経験の方でも、2時間で予測モデルを作成することができるハンズオンセミナーでした。\n好評だったので、その内容をYouTubeにまとめたのでご興味ある方はご覧ください。\nhttps://www.youtube.com/watch?v=OGELZUzBFL0&t=1414s\nこのハンズオンセミナーで予測モデルの作り方を知った友人がchatGPTにアドバイスをもらって、データサイエンスのコンペティションサイトに応募したところ、上位6.5%に入ることができたという報告を受け、驚愕しました。\nchatGPTを上手く使えば素人がプロに勝つことも十分...",
          "link": "https://zenn.dev/seiyakitazume/articles/bc11bbd020cdfe",
          "publishedOn": "2023-04-24T07:36:17.000Z",
          "wordCount": 182,
          "title": "chatGPTにアドバイスをもらったらデータサイエンスを知って1週間の友人がコンペで上位6.5%に入った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--H1TlGLiI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2589%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2582%2592%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A61%25E9%2580%25B1%25E9%2596%2593%25E3%2581%25AE%25E5%258F%258B%25E4%25BA%25BA%25E3%2581%258C%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2581%25A7%25E4%25B8%258A%25E4%25BD%258D6.5%2525%25E3%2581%25AB%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--H1TlGLiI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2589%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2582%2592%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A61%25E9%2580%25B1%25E9%2596%2593%25E3%2581%25AE%25E5%258F%258B%25E4%25BA%25BA%25E3%2581%258C%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2581%25A7%25E4%25B8%258A%25E4%25BD%258D6.5%2525%25E3%2581%25AB%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c0c88dc697bc4d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-211 B - Cycle Hit\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    s = getStringRow(4)\n\n    print('Yes' if len(set(s)) == 4 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c0c88dc697bc4d",
          "publishedOn": "2023-04-24T03:47:49.000Z",
          "wordCount": 256,
          "title": "［AtCoder］ABC-211｜B - Cycle Hit",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZhexOH-R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-211%25EF%25BD%259CB%2520-%2520Cycle%2520Hit%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZhexOH-R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-211%25EF%25BD%259CB%2520-%2520Cycle%2520Hit%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2fe473f11b5ef8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-211 A - Blood Pressure\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    c = (a + 2 * b) / 3\n\n    print(\"%d\" % c if c.is_integer() else c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2fe473f11b5ef8",
          "publishedOn": "2023-04-24T03:47:48.000Z",
          "wordCount": 278,
          "title": "［AtCoder］ABC-211｜A - Blood Pressure",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mENv4FIp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-211%25EF%25BD%259CA%2520-%2520Blood%2520Pressure%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mENv4FIp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-211%25EF%25BD%259CA%2520-%2520Blood%2520Pressure%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/x_point_1/articles/40021fb91a6085",
          "author": "まみたす",
          "description": "Python歴(≒プログラミング歴)1年のエンジニアがGoを始めてみたよというお話です。\n記憶が新しいうちに参考にした記事なども共有したいと思います。\n\n教えてくれてありがとうございます\n\n なぜGoを始めたのか\n弊社では現在サーバレスアーキテクチャでAWS Lambdaを使うときには、Pythonで実装しています。\nが、将来的には「実行速度」「メモリ効率」の観点からGoを採用したいと言うことを聞いたので、勉強するか！となりました。\nPythonとの違いとして、静的型付き言語という点で新たな発見がありそうですし、あとは、Go書けたらなんか良い感じな気がしたからです🤔\n\n 学習方法\nPyt...",
          "link": "https://zenn.dev/x_point_1/articles/40021fb91a6085",
          "publishedOn": "2023-04-24T00:57:26.000Z",
          "wordCount": 336,
          "title": "Goを始めてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--50MffknZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2599%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwM2RiMTZlYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--50MffknZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2599%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwM2RiMTZlYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/piment/articles/254dde3ecf7f10",
          "author": "ぴーまん",
          "description": "はじめに\n日本語対応のオープンソースの各種OCRの精度と時間を調べました。\n・Tesseract\n・PaddleOCR\n・EasyOCR\nそれぞれの実行ソースは、Colabノートブックにまとめていますので、ご確認ください。\n\n前処理、オプション等はしていないので、結果は参考までに。\n\n 結果\n処理時間\nTesseract(0.85s) > PaddleOCR(1.52s) > EasyOCR(3.90s)\n精度（主観あり。。。）\nPaddleOCR > EasyOCR > Tesseract\n\n\n処理時間\nTesseract(7.42s) > Paddl...",
          "link": "https://zenn.dev/piment/articles/254dde3ecf7f10",
          "publishedOn": "2023-04-23T14:51:35.000Z",
          "wordCount": 229,
          "title": "日本語対応オープンソースOCRの比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--O0UTPpAj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9OCR%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--O0UTPpAj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9OCR%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-6",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-6",
          "publishedOn": "2023-04-23T14:13:20.000Z",
          "wordCount": 237,
          "title": "AtCoderの問題を分類しました【カテゴリ】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sbwDz4az--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jMDUyOWZkYTlmLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sbwDz4az--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jMDUyOWZkYTlmLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-5",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-5",
          "publishedOn": "2023-04-23T14:12:57.000Z",
          "wordCount": 253,
          "title": "AtCoderの問題を分類しました【数学】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4-bzZmR0--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NDllYjFiMmVjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4-bzZmR0--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NDllYjFiMmVjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-4",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-4",
          "publishedOn": "2023-04-23T14:12:41.000Z",
          "wordCount": 257,
          "title": "AtCoderの問題を分類しました【計算量・データ構造・アルゴリズム】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sQiO4ey7--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82YWM3ZGQyZTcxLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sQiO4ey7--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82YWM3ZGQyZTcxLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-3",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-3",
          "publishedOn": "2023-04-23T14:12:11.000Z",
          "wordCount": 576,
          "title": "AtCoderの問題を分類しました【組み込み関数・モジュール】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tR6AKkts--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84YzcyYWFmMDA3LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tR6AKkts--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84YzcyYWFmMDA3LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-2",
          "author": "小栁 斉",
          "description": "AtCoderの問題をPythonで解いており、得られた知見をメモとして残しています。",
          "link": "https://zenn.dev/koyanagihitoshi/books/atcoder-classification-2",
          "publishedOn": "2023-04-23T14:11:44.000Z",
          "wordCount": 437,
          "title": "AtCoderの問題を分類しました【組み込み型】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8DqDP6zk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NjliYWJlMWI4LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8DqDP6zk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NjliYWJlMWI4LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7862e5c558d281",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-210 B - Bouzu Mekuri\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = getString()\n\n    for i in range(n):\n        if (s[i] == '1'):\n            print('Takahashi' if i % 2 == 0 else 'Aoki')\n            break\n\n...",
          "link": "https://zenn.dev/hyperdb/articles/7862e5c558d281",
          "publishedOn": "2023-04-23T13:27:04.000Z",
          "wordCount": 319,
          "title": "［AtCoder］ABC-210｜B - Bouzu Mekuri",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TIfWLB4m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-210%25EF%25BD%259CB%2520-%2520Bouzu%2520Mekuri%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TIfWLB4m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-210%25EF%25BD%259CB%2520-%2520Bouzu%2520Mekuri%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5d3540df44f6b7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-210 A - Cabbages\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, a, x, y = getIntMap()\n\n    print(min(a, n) * x + max(n - a, 0) * y)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5d3540df44f6b7",
          "publishedOn": "2023-04-23T13:27:03.000Z",
          "wordCount": 267,
          "title": "［AtCoder］ABC-210｜A - Cabbages",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XISeZ4J2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-210%25EF%25BD%259CA%2520-%2520Cabbages%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XISeZ4J2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-210%25EF%25BD%259CA%2520-%2520Cabbages%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/ad5fce800a6cd2",
          "author": "hodakam",
          "description": "RDKitの３次元座標操作\n分子系のケモインフォマティクスの代表ツールともいえるRDKitですが、その機能は実に多彩です。日本語で紹介されている記事では単分子での扱いがほとんどですが、実は複数分子の取り扱いやScipyなどと組み合わせることで座標操作も可能です。この記事では複数分子の実際の取り扱いや、分子の移動・回転操作の一例を書いてみました。\nこれらの分子の操作を使いこなすと、二量体のGaussianのインプットファイルを自動生成したり、\n錯体のような複雑なモデルも自動で生成したりすることができます。\n\n 複数分子を埋め込む\n系の中に2つの分子を埋め込むこともできます。やり方はシン...",
          "link": "https://zenn.dev/hodakam/articles/ad5fce800a6cd2",
          "publishedOn": "2023-04-23T12:29:54.000Z",
          "wordCount": 1582,
          "title": "RDKitの3次元座標を使いこなす（移動＆回転）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n2ytGlIM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RDKit%25E3%2581%25AE3%25E6%25AC%25A1%25E5%2585%2583%25E5%25BA%25A7%25E6%25A8%2599%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25EF%25BC%2588%25E7%25A7%25BB%25E5%258B%2595%25EF%25BC%2586%25E5%259B%259E%25E8%25BB%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n2ytGlIM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RDKit%25E3%2581%25AE3%25E6%25AC%25A1%25E5%2585%2583%25E5%25BA%25A7%25E6%25A8%2599%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25EF%25BC%2588%25E7%25A7%25BB%25E5%258B%2595%25EF%25BC%2586%25E5%259B%259E%25E8%25BB%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/09462ab3abb22e",
          "author": "hodakam",
          "description": "はじめに\n材料物性のデータベースはMaterials Project、Polyinfoなど最近でこそ色々公開されてきていますが、実用面ではまだまだ十分なわけではなく、自分自身でシミュレーション等を行って物性を取得する必要があるのが現状です。材料系のシミュレーション技術は対象とする時空間スケールに応じた手法が色々ありますが、ほとんどのシミュレータは化学構造や計算条件を記載したテキストファイルを元にシミュレーションを実行するというスタイルがとられます。\n\n 大量データをシミュレーションで生成しようとすると・・・\n通常、インプットファイルはGUI上で原子を配置したり結合を作ったりして作成し...",
          "link": "https://zenn.dev/hodakam/articles/09462ab3abb22e",
          "publishedOn": "2023-04-23T12:25:45.000Z",
          "wordCount": 976,
          "title": "SMILESからGaussianのインプットファイルを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oD_VYOdc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SMILES%25E3%2581%258B%25E3%2582%2589Gaussian%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oD_VYOdc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SMILES%25E3%2581%258B%25E3%2582%2589Gaussian%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/950cb66a8c529f",
          "author": "hodakam",
          "description": "はじめに\n機械学習を行う場合の一般論として、データは多い方がいいというものがあります。\nただ、材料の物性データを取得するコストは一般的に高く、数百や数千のレコードを用意しようと思うと膨大なコスト（最低限のデータが集まるまでにXX年とかYY万円とか・・・）を伴うことがほとんどです。そうなると、できるだけ少ないデータで効率的に学習モデルを作りたくなってきます。\n効率的な学習モデルの構築というのは、言い換えれば、現状のモデルの精度を向上させるために効果的な水準を選び、そのデータを追加して再学習して、また次の水準を選び・・・、ということになります。こういった一連の流れを統計的にうまく選択して...",
          "link": "https://zenn.dev/hodakam/articles/950cb66a8c529f",
          "publishedOn": "2023-04-23T12:20:45.000Z",
          "wordCount": 1688,
          "title": "能動学習ライブラリmodALを使ったactive regression",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d-0VAE1q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAmodAL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259Factive%2520regression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d-0VAE1q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAmodAL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259Factive%2520regression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/0bd12e674c2cf0",
          "author": "hodakam",
          "description": "はじめに\nPythonで科学技術計算を行う場合、pythonの標準的なメソッドやクラスではなく、numpyなどの数値計算用のクラスを用いることで計算を高速に行えることが一般的に知られている。ただ、こういったクラスを用いたとしても、3次元空間内の物理量の演算などどうしても多重forループを行わなければいけない状況に割と頻繁に出くわす。こういった状況でいかに高速な計算方法を実装するかというのが、プログラマの力の見せ所ではあるが、できるだけ頑張らず（実装に時間をかけずに）に簡単に高速に計算できるようにしたいというのも事実である。\nこの記事では並列化を含むpythonで効率的に数値計算を行う...",
          "link": "https://zenn.dev/hodakam/articles/0bd12e674c2cf0",
          "publishedOn": "2023-04-23T12:16:25.000Z",
          "wordCount": 780,
          "title": "Pythonでの並行・並列処理をお手軽にやる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XGGXZiDb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E4%25B8%25A6%25E8%25A1%258C%25E3%2583%25BB%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E3%2582%2584%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XGGXZiDb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E4%25B8%25A6%25E8%25A1%258C%25E3%2583%25BB%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E3%2582%2584%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/fbae1f62fdc190",
          "author": "hodakam",
          "description": "はじめに\nケモインフォマティクスツールで代表的なものにRDKitやpymatgenがある。\nこれらのツールは基本的にpython (たまにR)で提供されている。\npythonの場合、RDKitなどのような外部ツールのことをライブラリやモジュールと呼ぶが、こういったライブラリは素のpythonはもちろん、\nAnacondaのようなデータ解析向けのpythonディストリビューションにも最初は含まれていない。\nそのため、実際にケモインフォマティクスで何かをしようとした場合、自身のpython環境にライブラリを追加していく必要があるが、\n依存関係などのエラーにより初心者が挫折しやすい。\n・・...",
          "link": "https://zenn.dev/hodakam/articles/fbae1f62fdc190",
          "publishedOn": "2023-04-23T12:13:21.000Z",
          "wordCount": 267,
          "title": "ケモインフォマティクスなpython環境の準備",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nswJP1FC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B1%25E3%2583%25A2%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%259E%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AApython%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25BA%2596%25E5%2582%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nswJP1FC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B1%25E3%2583%25A2%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%259E%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AApython%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25BA%2596%25E5%2582%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/fd6bb1d6b792d7",
          "author": "Josh Nobus",
          "description": "はじめに\nPython のクラスの属性（attribute: メンバ、メソッド、インスタンス変数なども指す）は基本的に const にしたり private にしたりすることができませんし、型もありません。\n\nでもこの属性は一度定義したら書き換えたくないなー、とか\nこの属性はユーザに勝手に書き換えられたくないなー、とか\nこの属性は自動的にこの型に制約してほしいなー、とか\n\nそんなときありませんか？ ありますよね？ そう、あるんです。\nあったので作りました。\nhttps://github.com/wsuzume/nobus\n$ pip install nobus\nで使えます。\n!\n記事...",
          "link": "https://zenn.dev/wsuzume/articles/fd6bb1d6b792d7",
          "publishedOn": "2023-04-23T09:29:17.000Z",
          "wordCount": 6241,
          "title": "Python のクラスをハックして型付き immutable / protected 属性を作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jlpim4sK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%25A6%25E5%259E%258B%25E4%25BB%2598%25E3%2581%258D%2520immutable%2520%252F%2520protected%2520%25E5%25B1%259E%25E6%2580%25A7%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jlpim4sK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%25A6%25E5%259E%258B%25E4%25BB%2598%25E3%2581%258D%2520immutable%2520%252F%2520protected%2520%25E5%25B1%259E%25E6%2580%25A7%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/98aa11ae532dce",
          "author": "osn_Lofi",
          "description": "事前学習済みモデルのRetinaNetを使った物体検出についてご紹介します。\nこのモデルは、高精度とスピードが特長で幅広い分野で採用されていますが、非常に実装が簡単です。\nこのブログを最後まで読むと、以下のような実装ができます。\nこちらの写真は、有名なビートルズのアルバム「アビィーロード」のジャケット写真です。\n\n\n モデルの概要\n\nRetinaNetは、物体検出のための深層学習モデルの一種であり、ResNet50と呼ばれる深層学習モデルと、FPN（Feature Pyramid Network）と呼ばれる特徴抽出ネットワークを組み合わせて使用することができます。\nResNet50では、...",
          "link": "https://zenn.dev/robes/articles/98aa11ae532dce",
          "publishedOn": "2023-04-23T06:22:38.000Z",
          "wordCount": 1545,
          "title": "【超簡単】事前学習済みモデルRetinaNetを使った物体検出をご紹介します",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JKArKwan--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E3%2580%2591%25E4%25BA%258B%25E5%2589%258D%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABRetinaNet%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%25E3%2582%2592%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JKArKwan--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E3%2580%2591%25E4%25BA%258B%25E5%2589%258D%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABRetinaNet%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%25E3%2582%2592%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takumi1001/books/56bd46af79939b",
          "author": "takumi",
          "description": "筑波大学enPiT2023の自己学習期間に受講生が利用できる教材として、メンターの田村が作成した、Web技術に入門するためのチュートリアルです。詳細はまえがきを読んでください。",
          "link": "https://zenn.dev/takumi1001/books/56bd46af79939b",
          "publishedOn": "2023-04-23T00:11:40.000Z",
          "wordCount": 55,
          "title": "ChatGPTを使った自分だけのWebアプリを作ろう",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/szgk/articles/07c151d3efb92b",
          "author": "shibe",
          "description": "概要\n練習としてMayaのscriptディレクトリにあるpythonファイルの名前を一覧するpluginを制作する。\npythonとPyMelで作成する。\n※ 後からスクリプトを「シェルフ」に追加しておけること知りました。シェルフでええやん\n\n 手順\n新規にライブラリを学ぶのでChat GPTを使ってみる\n\nChat GPTでscriptのたたきを出力\na. 何回か改善してもらう\nデバッグ\nリファクタ\n公開\n\n\n 1. Chat gPTでscriptのたたきを出力\n何回かやりとりして下記のコードを出力してもらいました。\nこれを実際に読みつつデバッグして修正していきます。\nimport...",
          "link": "https://zenn.dev/szgk/articles/07c151d3efb92b",
          "publishedOn": "2023-04-22T17:27:17.000Z",
          "wordCount": 1547,
          "title": "Chat GPT で Maya のscriptファイルを一覧するpluginを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TxVZYNYY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chat%2520GPT%2520%25E3%2581%25A7%2520Maya%2520%25E3%2581%25AEscript%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%2599%25E3%2582%258Bplugin%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shibe%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYTYxMTYxYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TxVZYNYY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chat%2520GPT%2520%25E3%2581%25A7%2520Maya%2520%25E3%2581%25AEscript%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%2599%25E3%2582%258Bplugin%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shibe%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYTYxMTYxYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/f5e5c616e128a7",
          "author": "laiso",
          "description": "LangChainにContextual Compressionという抽象化が追加されました。概要は以下にあります。\nhttps://blog.langchain.dev/improving-document-retrieval-with-contextual-compression/\nContextual Compressionは「検索で取り出したドキュメントのテキスト」と「プロンプトに含めるコンテキストとしてのテキスト」の性質が異る点に注目して、ドキュメント検索の後処理としてプロンプトに含めるテキストの内容に変換処理をかけて改善します。\n\n 前提知識\n「LLMに質問の答えを生成しても...",
          "link": "https://zenn.dev/laiso/articles/f5e5c616e128a7",
          "publishedOn": "2023-04-22T16:54:16.000Z",
          "wordCount": 917,
          "title": "LangChainのContextual Compressionがどのようにコンテキストを圧縮しているのか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ORtWNUMK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2581%25AEContextual%2520Compression%25E3%2581%258C%25E3%2581%25A9%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ORtWNUMK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2581%25AEContextual%2520Compression%25E3%2581%258C%25E3%2581%25A9%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-5",
          "author": "Yumax-panda",
          "description": "おさらい\n前回はミュート機能の実装をしました。今回は管理者限定の条件を付け、さらにミュート解除の機能も実装しましょう。\n前回までのコード（再掲）\n# bot.py\n\nfrom discord.ext import commands\nfrom discord.utils import get\nimport discord\n\nfrom io import StringIO\nfrom datetime import datetime, timedelta\n\nintents = discord.Intents.default()\nintents.members = True # メンバー管理...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-5",
          "publishedOn": "2023-04-22T15:33:50.000Z",
          "wordCount": 1480,
          "title": "discord.py 入門　その5",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DnBkQCD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DnBkQCD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/51f29570416f46",
          "author": "よしだ",
          "description": "はじめに\n今回は順序回帰と独自の分布の定義の仕方を見ていきます。順序回帰に関してはNumPyroのチュートリアル通りになります。より詳細な式などに関してはこちらを参照ください。\n独自の分布の定義は他に入れる記事がなかったので、適当に今回の記事の中に入っているだけで順序回帰との関係はありません。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nfrom jax.nn import softplus\nimport jax.numpy as jnp\nfrom jax.scipy.special ...",
          "link": "https://zenn.dev/yoshida0312/articles/51f29570416f46",
          "publishedOn": "2023-04-22T15:23:08.000Z",
          "wordCount": 5626,
          "title": "NumPyro：順序回帰と独自の分布の定義",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B-Y0Kj2m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%25A0%2586%25E5%25BA%258F%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%25A8%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B-Y0Kj2m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%25A0%2586%25E5%25BA%258F%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%25A8%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ac4c8b721b1ef2",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-209 B - Can you buy them all?\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, x = getIntMap()\n    a = getIntList()\n\n    print('Yes' if x >= sum(a) - len(a) // 2 else 'No')\n\n\nif __na...",
          "link": "https://zenn.dev/hyperdb/articles/ac4c8b721b1ef2",
          "publishedOn": "2023-04-22T14:07:17.000Z",
          "wordCount": 342,
          "title": "［AtCoder］ABC-209｜B - Can you buy them all?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_MFuFA6---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-209%25EF%25BD%259CB%2520-%2520Can%2520you%2520buy%2520them%2520all%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_MFuFA6---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-209%25EF%25BD%259CB%2520-%2520Can%2520you%2520buy%2520them%2520all%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/aa823767d6b66d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-209 A - Counting\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(b - a + 1 if b >= a else 0)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/aa823767d6b66d",
          "publishedOn": "2023-04-22T14:07:17.000Z",
          "wordCount": 247,
          "title": "［AtCoder］ABC-209｜A - Counting",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0RRKWYi1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-209%25EF%25BD%259CA%2520-%2520Counting%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0RRKWYi1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-209%25EF%25BD%259CA%2520-%2520Counting%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-4",
          "author": "Yumax-panda",
          "description": "おさらい\n前回はチャンネルのメッセージを記録する機能の実装方法について解説しました。今回はメンバーをミュートさせる機能を実装していきます。\n\n Step5. メンバーをミュートしよう\nミュートの実装方法ですが、以下の要素があれば実装できそうです。\n\nコマンドでミュートしたい人に「チャット制限」というロールを付与する。\nメッセージリスナーを登録し、チャット制限ロールを持っている人がメッセージを送信したら削除する。\n\nこのままだと、bot稼働時にミュートされると解除する術がないので、ミュート解除コマンドも後ほど実装します。\n\n チャット制限ロールの付与\n以下のコードを実装します。\nfro...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-4",
          "publishedOn": "2023-04-22T14:03:17.000Z",
          "wordCount": 519,
          "title": "discord.py 入門　その4",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fdoVTZxi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fdoVTZxi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ictsr4/articles/fd1dadc74782aa",
          "author": "Pythonic Highschool",
          "description": "windows10と11のマシンにanacondaをインストールし、ついでにnbextensionsも追加しようとしたらなかなかうまくいきませんでした。今後、同じようにイライラすることがないよう、手順をまとめました。\nnbextensionsの機能を追加するためには、nbextensionsのインストールに加え、それを最新のバージョンにアップデートする必要があるようです。\n\n anaconda promptからコマンドを入力\nwebで検索すると、入力するコマンドは出てきますが、どこで入力するか、はっきり書いたサイトを見つけることができませんでした。いろいろな方法がると思いますが、今回は、...",
          "link": "https://zenn.dev/ictsr4/articles/fd1dadc74782aa",
          "publishedOn": "2023-04-22T12:59:25.000Z",
          "wordCount": 146,
          "title": "jupyter notebook(python)でnbextensionsを使えるようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LAX5q3VN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:jupyter%2520notebook%2528python%2529%25E3%2581%25A7nbextensions%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Pythonic%2520Highsc...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXJTa3U2SFp1X25aUG1WU0tUdlplRHViSk1EcUlwMUk4bUUxR0o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LAX5q3VN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:jupyter%2520notebook%2528python%2529%25E3%2581%25A7nbextensions%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Pythonic%2520Highsc...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXJTa3U2SFp1X25aUG1WU0tUdlplRHViSk1EcUlwMUk4bUUxR0o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/b12578919ddd83",
          "author": "laiso",
          "description": "https://devblogs.microsoft.com/semantic-kernel/py/\nMS版LangChainことSemantic KernelのPython版が出たので気になっていたSemantic Memory関連の動作を試した。\nhttps://gist.github.com/laiso/15e3cc6b7214fc9783d2d85f40d89ade\n\n セットアップ系\n今のところ.envは必須らしい。\nKV = {}  # DBのかわり\n\n\ndef init_kernel():\n    k = sk.Kernel()\n\n    api_key, org_id =...",
          "link": "https://zenn.dev/laiso/articles/b12578919ddd83",
          "publishedOn": "2023-04-22T12:39:37.000Z",
          "wordCount": 952,
          "title": "Semantic Kernel Pythonでユーザーごとの記憶を持たせてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yniVn57Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Semantic%2520Kernel%2520Python%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A8%2598%25E6%2586%25B6%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yniVn57Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Semantic%2520Kernel%2520Python%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A8%2598%25E6%2586%25B6%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kaeru39/articles/9b40e93469de57",
          "author": "kaeru39",
          "description": "nomic-aiという企業から、ローカル環境で動作するGPT4ALLというモデルが公開されました。動作手順をまとめます。\n\n GPT4ALLとは\n※OpenAI社のGPT-4とは異なります。※\nオープンソースのみのデータでGPT(Generative Pretrained Transformer,生成型事前学習済みトランスフォーマー)を学習し、公開することを目的として実装が進められているリポジトリ兼モデルの名前です。新しいモデルは適宜公開されるため、定期的に確認すると良いでしょう。\nGPT4ALLの4ALLの部分は\"for ALL\"という意味だと理解しています。コードを書くときに、例えば...",
          "link": "https://zenn.dev/kaeru39/articles/9b40e93469de57",
          "publishedOn": "2023-04-22T11:33:10.000Z",
          "wordCount": 623,
          "title": "GPT4ALLをCPUのみでpythonから実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rur1T-50--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT4ALL%25E3%2582%2592CPU%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7python%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rur1T-50--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT4ALL%25E3%2582%2592CPU%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7python%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-3",
          "author": "Yumax-panda",
          "description": "おさらい\n前回は簡単なテキストコマンドの実装方法について解説しました。今回からはbotのコアとなる機能を実装していきます。\n前回のコード（再掲）\n# bot.py\n\nfrom discord.ext import commands\nimport discord\n\nintents = discord.Intents.default()\nintents.members = True # メンバー管理の権限\nintents.message_content = True # メッセージの内容を取得する権限\n\nbot = commands.Bot(\n    command_prefix=\"$\"...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-3",
          "publishedOn": "2023-04-22T08:18:44.000Z",
          "wordCount": 927,
          "title": "discord.py入門　その3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9FWYG7a---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9FWYG7a---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/e3709c3a77c40a",
          "author": "よしだ",
          "description": "はじめに\n複雑なモデルや変数間に強い相関がある場合などでは結果が収束しないことがあります。収束がしづらいときは「MCMC実行時のパラメータを変える」「弱事前情報分布を指定する」「モデルの構造を変える」などで対応することもありますが、対応方法の１つとして再パラメータ化があります。言葉での説明が難しいので、有名なNealの漏斗で実装を確認してみます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as ...",
          "link": "https://zenn.dev/yoshida0312/articles/e3709c3a77c40a",
          "publishedOn": "2023-04-22T06:41:48.000Z",
          "wordCount": 2164,
          "title": "NumPyro：再パラメータ化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Rc1Ky5Tx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%2586%258D%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Rc1Ky5Tx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%2586%258D%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bluetang/articles/a3d8b0b9cc8e97",
          "author": "bluetang",
          "description": "from PIL import ImageGrab\nimport io\n\n# クリップボードから画像を取得\nimg = ImageGrab.grabclipboard()\n\n# 画像をバイナリ形式に変換して1MB以下に圧縮\nwith io.BytesIO() as output:\n    img.save(output, format='JPEG', quality=50)\n    data = output.getvalue()\n    while len(data) > 1_000_000:\n        output.seek(0)\n        output.trunc...",
          "link": "https://zenn.dev/bluetang/articles/a3d8b0b9cc8e97",
          "publishedOn": "2023-04-22T06:26:57.000Z",
          "wordCount": 127,
          "title": "コピペと画像出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B4J4kD-p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2581%25A8%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bluetang%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ZDRkMjc1MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B4J4kD-p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2581%25A8%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bluetang%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ZDRkMjc1MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kenta_goto/articles/5d3580d57b5e87",
          "author": "ppppe",
          "description": "はじめに\n本記事では、Pythonのpsutilとmatplotlibライブラリを使って、リアルタイムでCPUとメモリ使用率をグラフに表示する方法を解説します。\n\n 概要\n以下、コード全文です。\nimport psutil\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\n\n# 描画関数\ndef update(frame):\n    x.append(frame)\n    cpu_percent = psutil.cpu_percent()\n    mem_percent =...",
          "link": "https://zenn.dev/kenta_goto/articles/5d3580d57b5e87",
          "publishedOn": "2023-04-22T01:55:13.000Z",
          "wordCount": 1096,
          "title": "Pythonを使用したCPUとメモリ使用率のリアルタイムグラフ表示",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3EGXg3Pu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FCPU%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E7%258E%2587%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ppppe%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pCUU15dnI2OTBJd1M1ZkoyZVRFSzdlbjdVSDhwN0dJR09zR243N200PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3EGXg3Pu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FCPU%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E7%258E%2587%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ppppe%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pCUU15dnI2OTBJd1M1ZkoyZVRFSzdlbjdVSDhwN0dJR09zR243N200PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aithena/articles/7135a728266db8",
          "author": "あいせな",
          "description": "問題文\n\n\n Pythonコードの言語化\nPythonのコードなら有名な問題なので先人の遺物が沢山あります。\n自分の拙いコードを記事にしたところで有益な情報にはなり得ないと思い、この記事では偉大な先人の解答を一緒に言語化したいと思います。少しでも力になれれば幸いです。\n以下が記事の本題です。\n# 入力\nN,L = int(input().split()) # 切れ目の数,羊羹の長さ\nK = int(input()) # 選ぶ切れ目の数\nA = list(map(int,input().split())) # 切れ目の位置＝左端からの長さ\n\n# 切った全ての羊羹の長さをx以上にすること...",
          "link": "https://zenn.dev/aithena/articles/7135a728266db8",
          "publishedOn": "2023-04-21T21:11:06.000Z",
          "wordCount": 576,
          "title": "競プロ典型90を言語化する(001/090)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fyMf_E-E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E5%2585%25B8%25E5%259E%258B90%25E3%2582%2592%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2528001%252F090%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2581%259B%25E3%2581%25AA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1N2NjMzNmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fyMf_E-E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E5%2585%25B8%25E5%259E%258B90%25E3%2582%2592%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2528001%252F090%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2581%259B%25E3%2581%25AA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1N2NjMzNmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-2",
          "author": "Yumax-panda",
          "description": "おさらい\n前回はbotの準備とイベントについて解説しました。今回はいよいよbotのコマンドを実装していきます。\n前回のコード（再掲）\nfrom discord.ext import commands\nimport discord\n\nintents = discord.Intents.default()\nintents.members = True # メンバー管理の権限\nintents.message_content = True # メッセージの内容を取得する権限\n\nbot = commands.Bot(\n    command_prefix=\"$\", # $コマンド名　でコマンド...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-2",
          "publishedOn": "2023-04-21T17:58:49.000Z",
          "wordCount": 822,
          "title": "discord.py入門　その2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jpl0fTuj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jpl0fTuj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/stfate/articles/2023-04-21--numba-install-error-in-py311",
          "author": "ふぇいと",
          "description": "Python 3.11でnumbaのインストールに失敗する問題\n\n 問題\nPython 3.11系でpip install numbaしたときにインストールに失敗する．\n\n\n 原因\nnumbaの安定版(0.56.4)がPython3.11に対応していないのが原因っぽい．\nnumba/numba Python 3.11 #8304\n\n 対処法\nPython 3.11に対応しているRC版を入れる．\npip install --pre numba\n\nこれでようやく3.11系に移行できる……",
          "link": "https://zenn.dev/stfate/articles/2023-04-21--numba-install-error-in-py311",
          "publishedOn": "2023-04-21T15:11:13.000Z",
          "wordCount": 127,
          "title": "Python 3.11でnumbaのインストールに失敗する問題",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AsgprY4x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.11%25E3%2581%25A7numba%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2599%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%2587%25E3%2581%2584%25E3%2581%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5MGRmZTllYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AsgprY4x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.11%25E3%2581%25A7numba%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2599%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%2587%25E3%2581%2584%25E3%2581%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5MGRmZTllYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutohub/articles/4304fd9a25e522",
          "author": "yutohub",
          "description": "概要\nWhisper は、多言語音声認識システムです。その出力である書き起こしには、句読点が含まれていないことがあるため、自動翻訳の精度に悪影響を与えることがあります。そこで、Whisper の書き起こしに対して、句読点を復元するためのモデルを作りたいと思います。一般的な文章とは異なり、Whisper の書き起こしは文章が途切れていることや、話し言葉が多く含まれているなどの特徴があります。このため、句読点の復元には新しい手法が必要となります。今回は、Whisper が生成した書き起こしの中から句読点が含まれるものを自動的に抽出し、これを訓練データとして用いることで、モデルをトレーニン...",
          "link": "https://zenn.dev/yutohub/articles/4304fd9a25e522",
          "publishedOn": "2023-04-21T11:30:00.000Z",
          "wordCount": 9257,
          "title": "BERTベースの句読点モデルによるWhisperの書き起こしの改善",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2aL4YNtD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BERT%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E5%258F%25A5%25E8%25AA%25AD%25E7%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BWhisper%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%25AE%25E6%2594%25B9%25E5%2596%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2aL4YNtD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BERT%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E5%258F%25A5%25E8%25AA%25AD%25E7%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BWhisper%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%25AE%25E6%2594%25B9%25E5%2596%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/watarungurunnn/articles/6e323d1030afcf",
          "author": "watarungurunnn",
          "description": "root権限がない = sudoが使えない、あるいはHomebrewを複数インストールしたい場合にlocal directoryにインストールする方法\nInstall homebrew to your local folder: reference\n\nソースのダウンロード\n下記のコマンドをHomebrewをインストールしたいfolderで実行する。(homebrewを任意のdirに変えるのも可。)\n\nmkdir homebrew && curl -L [https://github.com/Homebrew/brew/tarball/master](https://g...",
          "link": "https://zenn.dev/watarungurunnn/articles/6e323d1030afcf",
          "publishedOn": "2023-04-21T11:28:06.000Z",
          "wordCount": 253,
          "title": "sudoが使えない場合にHomebrewをlocal directoryにインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DocgAAjV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sudo%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25ABHomebrew%25E3%2582%2592local%2520directory%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DocgAAjV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sudo%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25ABHomebrew%25E3%2582%2592local%2520directory%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumax_panda/articles/bot-tutorial-1",
          "author": "Yumax-panda",
          "description": "はじめに\n本記事では数回に分けて、discord.pyを使ったdiscord botの作り方を解説していきます。\nあくまで筆者の全て独学の知識ですので、参考の一助になれば幸いです。\n対象読者は以下のような方を想定しています。\n\nPythonである程度コードを書いたことがある\ndiscord botを作ってみたい\nbotの作り方がよくわからない\nPythonを使ったことはあるが、discord.pyを使ったことがない\n自分で開発したbotを無料で運用したい\n\n\n 学べること\n\nテキストコマンドの実装\nスラッシュコマンドの実装\n管理機能の実装\nコードを分割して管理する方法　（コグ）\n管理...",
          "link": "https://zenn.dev/yumax_panda/articles/bot-tutorial-1",
          "publishedOn": "2023-04-21T07:30:44.000Z",
          "wordCount": 566,
          "title": "discord.py入門　その1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---XRO3Dea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---XRO3Dea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yumax-panda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdVWXY1WUt1MzdodEtHZ1dJZG5IdFRIdjJyZFVkcmZ6UlJkSnFiQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9da6544ade4a73",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-208 A - Rolling Dice\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print('Yes' if a <= b <= a * 6 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9da6544ade4a73",
          "publishedOn": "2023-04-21T03:54:11.000Z",
          "wordCount": 254,
          "title": "［AtCoder］ABC-208｜A - Rolling Dice",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qjb3gJKz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-208%25EF%25BD%259CA%2520-%2520Rolling%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qjb3gJKz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-208%25EF%25BD%259CA%2520-%2520Rolling%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/923f10ddc89978",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-207 A - Repression\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    l = getIntList()\n\n    l.sort()\n\n    print(l[1] + l[2])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/923f10ddc89978",
          "publishedOn": "2023-04-21T03:54:10.000Z",
          "wordCount": 241,
          "title": "［AtCoder］ABC-207｜A - Repression",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g_VwRsga--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-207%25EF%25BD%259CA%2520-%2520Repression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g_VwRsga--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-207%25EF%25BD%259CA%2520-%2520Repression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/3cf990217986ef",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-207 B - Hydrate\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c, d = getIntMap()\n\n    r = -1\n    for i in range(10 ** 5 + 1):\n        if (a + b * i) <= (c * i) * d:\n            r = i\n            break\n    print(r)\n\n\nif __name__ == \"__main_...",
          "link": "https://zenn.dev/hyperdb/articles/3cf990217986ef",
          "publishedOn": "2023-04-21T03:54:10.000Z",
          "wordCount": 329,
          "title": "［AtCoder］ABC-207｜B - Hydrate",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i11kmyeE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-207%25EF%25BD%259CB%2520-%2520Hydrate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i11kmyeE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-207%25EF%25BD%259CB%2520-%2520Hydrate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0d54d5f1168984",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-208 B - Factorial Yen Coin\n\n\n\n 提出結果\nimport math\n\n\ndef getInt():\n    return int(input())\n\n\ndef main():\n    p = getInt()\n\n    f = []\n    i = 1\n    while True:\n        x = math.factorial(i)\n        if x > p:\n            break\n        f.append(x)\n        i += 1\n    f.reverse()\n\n    c...",
          "link": "https://zenn.dev/hyperdb/articles/0d54d5f1168984",
          "publishedOn": "2023-04-21T03:54:10.000Z",
          "wordCount": 390,
          "title": "［AtCoder］ABC-208｜B - Factorial Yen Coin",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m2RTw2gz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-208%25EF%25BD%259CB%2520-%2520Factorial%2520Yen%2520Coin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m2RTw2gz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-208%25EF%25BD%259CB%2520-%2520Factorial%2520Yen%2520Coin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/engineer-tool-sphinx",
          "author": "gk12",
          "description": "こんにちは。本記事では、ドキュメント生成ツールのSphinxを使って、技術文書を作成する方法について解説します。Sphinxは、Pythonのドキュメンテーションツールとして開発されたもので、多言語対応やドキュメントの自動生成など、様々な機能を持っています。\n\n Sphinxのインストール\nSphinxをインストールするには、以下のコマンドを実行します。\npip install sphinx\n\n プロジェクトの初期化\nSphinxを使って技術文書を作成するには、まずプロジェクトを初期化する必要があります。以下のコマンドを実行すると、プロジェクトの初期化が行われます。\nsphinx-qui...",
          "link": "https://zenn.dev/gk12/articles/engineer-tool-sphinx",
          "publishedOn": "2023-04-21T02:38:30.000Z",
          "wordCount": 299,
          "title": "ドキュメント生成ツールSphinxを使って技術文書を作成する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uosPmj1m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABSphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%258A%2580%25E8%25A1%2593%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uosPmj1m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABSphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%258A%2580%25E8%25A1%2593%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoppippi/articles/b66fa477c1c3af",
          "author": "ryoppippi",
          "description": "はじめに\nみなさんは、Whisper を使って文字起こしをしているでしょうか？\nWhisper は OpenAI がリリースした text2speech のモデルです。\nhttps://openai.com/research/whisper\nこのモデルは実装を含めて公開されているので、モデルを軽くしたり、あらゆる環境で動かしたり、といった試みが随所で行われています。\nhttps://github.com/ggerganov/whisper.cpp\nhttps://note.com/sangmin/n/na60c017e72d0\n今回は、つい先月にリリースされた、faster-whis...",
          "link": "https://zenn.dev/ryoppippi/articles/b66fa477c1c3af",
          "publishedOn": "2023-04-20T18:31:21.000Z",
          "wordCount": 788,
          "title": "faster-whisperを使ってYoutubeを高速に文字起こしする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MMBd4tJs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:faster-whisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Youtube%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MMBd4tJs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:faster-whisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Youtube%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/8858343dcaa244",
          "author": "よしだ",
          "description": "はじめに\n今回は離散潜在変数の扱い方を説明します。Stanでは自動で扱うことができないため、基本的に場合の数を数え上げて離散パラメータを消去（周辺化）した形で対数尤度を表現する必要があります。しかし、NumPyroでは一部制限はありますが自動で離散潜在変数も扱うことができます。（アヒル本のLDAはこれらに引っかかりこの機能付きでの実装はできませんでした。もちろんStanと同様に手作業で周辺化すればいいのですが、うまく実装できる方法がもしあれば教えてください。。。）\n!\n\n NumPyroにおける周辺化機能の制限\n1). NumPyroのForumで以下のように言及されているのですが、...",
          "link": "https://zenn.dev/yoshida0312/articles/8858343dcaa244",
          "publishedOn": "2023-04-20T16:08:28.000Z",
          "wordCount": 4168,
          "title": "NumPyro：離散潜在変数の扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZEt1WZUk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%259B%25A2%25E6%2595%25A3%25E6%25BD%259C%25E5%259C%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZEt1WZUk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%259B%25A2%25E6%2595%25A3%25E6%25BD%259C%25E5%259C%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kaeru39/articles/c13b45726ca668",
          "author": "kaeru39",
          "description": "自分の音声を特定の話者の声質に変換する技術がWebUI付きで公開されました。使い方をまとめます。また、自身の音声を録音して音声変換した例を共有します。\n\n おことわり\n筆者は音声信号処理は初心者であり、参考書に1冊目を通した程度の理解度のため、説明に誤りが含まれる可能性があります。ご容赦ください。\n\n 動作環境\n\nUbuntu20.04\nPython3.8.10\n\n\n RVC WebUIとは\nRVCとはリポジトリにも記載のある通り、Retrieval-based Voice Conversionの略です。現状の技術的な情報はgithubに公開されているソースコードがメインになっているかと...",
          "link": "https://zenn.dev/kaeru39/articles/c13b45726ca668",
          "publishedOn": "2023-04-20T16:00:36.000Z",
          "wordCount": 410,
          "title": "RVC WebUIで自分で録音した声を変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8Pciqpng--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RVC%2520WebUI%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E9%258C%25B2%25E9%259F%25B3%25E3%2581%2597%25E3%2581%259F%25E5%25A3%25B0%25E3%2582%2592%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8Pciqpng--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RVC%2520WebUI%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E9%258C%25B2%25E9%259F%25B3%25E3%2581%2597%25E3%2581%259F%25E5%25A3%25B0%25E3%2582%2592%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaeru39%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/f261d66bc1773b",
          "author": "sergicalsix",
          "description": "はじめに\nプログラミングで計算する際には、丸め誤差が生じることがあります。\n丸め誤差を含む数字の比較は、Pythonではmath.iscloseを用いることができます。\nこの関数を使うことで、丸め誤差を含む数字の比較を正しく行うことができます。\n\n ダメな例\n>>> a,b = 0.1,0.3\n>>> print(a + a + a == b)\nFalse\n上記を実行した場合はFalseが出力されてしまいます。\n理由はa+a+aの計算結果に丸め誤差が生じてしまうからです。(a+a+a=0.30000000000000004)\n上記の場合でも正しく比...",
          "link": "https://zenn.dev/sergicalsix/articles/f261d66bc1773b",
          "publishedOn": "2023-04-20T13:02:06.000Z",
          "wordCount": 465,
          "title": "math.iscloseを使って誤差を許容して数字を比較する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9_fp61u1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:math.isclose%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25AA%25A4%25E5%25B7%25AE%25E3%2582%2592%25E8%25A8%25B1%25E5%25AE%25B9%25E3%2581%2597%25E3%2581%25A6%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9_fp61u1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:math.isclose%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25AA%25A4%25E5%25B7%25AE%25E3%2582%2592%25E8%25A8%25B1%25E5%25AE%25B9%25E3%2581%2597%25E3%2581%25A6%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/t_katsumoto/articles/8662992add3da2",
          "author": "Katsumoto Takashi",
          "description": "はじめに\n例えば、Tableau Server (or Tableau Cloud）上で手動でフローを実行したとしよう。\nそうすると、ジョブのページでそのフロー実行の進捗が分かる。\n\n上記の画像はテスト環境なのでジョブが全然無いが、皆さんの本番環境ではここにジョブIDがずらーっと並んでいるかと思う。それで、「このジョブえらい時間掛かってるな」とか、「これ何で失敗してるんだ？」とか思った時に、そのジョブの詳細情報を知りたい事があるはず。\nそう思った時、自然に一番左側にあるIDのリンクをクリックすると思うが、\n「え・・・情報これだけ？」 と愕然した事はないだろうか？\n\nジョブ詳細と書かれ...",
          "link": "https://zenn.dev/t_katsumoto/articles/8662992add3da2",
          "publishedOn": "2023-04-20T11:20:44.000Z",
          "wordCount": 389,
          "title": "Tableau Server上のジョブIDから詳細情報を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fzrRpAdb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%2520Server%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%2596ID%25E3%2581%258B%25E3%2582%2589%25E8%25A9%25B3%25E7%25B4%25B0%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Katsumoto%2520Takashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWZsNDQ2RlNJN0t4SlhhSzUwWm1kSTg0N3oxclZ1Vkp4NDVYT1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fzrRpAdb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%2520Server%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%2596ID%25E3%2581%258B%25E3%2582%2589%25E8%25A9%25B3%25E7%25B4%25B0%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Katsumoto%2520Takashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWZsNDQ2RlNJN0t4SlhhSzUwWm1kSTg0N3oxclZ1Vkp4NDVYT1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/d0590bc4eaa8f7",
          "author": "よしだ",
          "description": "はじめに\n今回は階層モデルを扱います。以前までと同様に本シリーズの記事は実装メインなため、理論的な詳細は省略します。最初に１つの階層のモデルを扱い、次に複数の階層のモデルを扱います。どちらもNumpyの行列計算と今までのexpandやplateの挙動が理解できていればイメージ掴める内容かと思います。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\ni...",
          "link": "https://zenn.dev/yoshida0312/articles/d0590bc4eaa8f7",
          "publishedOn": "2023-04-20T09:19:17.000Z",
          "wordCount": 4621,
          "title": "NumPyro：階層モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RF1zgo32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%259A%258E%25E5%25B1%25A4%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RF1zgo32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E9%259A%258E%25E5%25B1%25A4%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/36c7f1bb1a639d",
          "author": "seiyakitazume",
          "description": "chatGPTの文章の要約能力は非常に便利ですね。\nこの能力は非常に便利なのですが、例えば論文の要約をさせたい時、1つ1つの論文をchatGPTのAPIに投げているとリクエスト数も処理時間もかかってしまいます。\nこれをなんとか1度に行うことができないかを調べていた中で、LangChainというフレームワークに出会いました。LangChainを使うことで、上記の問題を解決することができそうです。\nそれではLangChainの説明です。\nLangChainは、言語モデルを活用したアプリケーションを開発するためのフレームワークです。LangChainは、以下の6つのメインモジュールに対応してい...",
          "link": "https://zenn.dev/seiyakitazume/articles/36c7f1bb1a639d",
          "publishedOn": "2023-04-20T07:11:00.000Z",
          "wordCount": 374,
          "title": "chatGPTに大量の文章を要約させたい時に使えるLangChainとは",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W5C04QUH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25AB%25E5%25A4%25A7%25E9%2587%258F%25E3%2581%25AE%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BLangChain%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W5C04QUH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2581%25AB%25E5%25A4%25A7%25E9%2587%258F%25E3%2581%25AE%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BLangChain%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/10d28a325e05f8",
          "author": "よしだ",
          "description": "最初に\n別記事でアプリを実際に作成する前に調べた内容等をまとめました。\nハマったポイントもあるので同じ状況の人の参考になればと思います。\n\n コード\n\n 初期構築\nmkdir backend\ncd backend/\ndjango-admin startproject config .\npython manage.py startapp todo\npython manage.py startapp apiv1\nconfig/settings.pyの編集\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib....",
          "link": "https://zenn.dev/yoshida0312/articles/10d28a325e05f8",
          "publishedOn": "2023-04-20T06:56:16.000Z",
          "wordCount": 3140,
          "title": "Django REST Frameworkの基本事項まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BlICNLBG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E4%25BA%258B%25E9%25A0%2585%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BlICNLBG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E4%25BA%258B%25E9%25A0%2585%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/04de791c5e7878",
          "author": "よしだ",
          "description": "はじめに\n最近、DRFとReactの勉強をしていたのですが、基本的なToDoアプリを作成した後に何を作ろうか迷ってました。\nそんな中で以下のURLを見つけて、Mediumのようなアプリを構築するのにいろんなフレームワークで書かれているコードが用意されていました。そのため、似たようなアプリをフロントエンドはReactで、バックエンドはDRFを選択して作っていこうと思います。\n元のRealWorldと異なる点としては、１つ目はダッシュボードも作成したいので値段がついた本を記録するようなアプリに変更したこと、２つ目は練習として最低限の書き方の習得を目指したのでフォローや記事のお気に入りは除...",
          "link": "https://zenn.dev/yoshida0312/articles/04de791c5e7878",
          "publishedOn": "2023-04-20T06:55:55.000Z",
          "wordCount": 4224,
          "title": "Django REST Framework を使用したバックエンド開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vfN8Jz9m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vfN8Jz9m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520Framework%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/202561570fee02",
          "author": "よしだ",
          "description": "はじめに\n回帰モデルの回帰係数を最小二乗法で推定すると、最小二乗法は外れ値に敏感に反応してしまい、１個の外れ値が含まれているだけで推定値は全く無意味な値になってしまう可能性があります。そういった外れ値のウェイトを小さくすることで頑健なパラメータを推定するのが頑健回帰（ロバスト回帰）です。\n1960年台に提唱された手法ですが、現在まであまり標準的な手法として知られていません。これは誤差項が正規分布であるととりあえず考えてしまうことやどのデータに対しても最適な手法が確立されていないことがあると思われます。\nまた、頑健回帰推定のことを外れ値を無闇にウェイトダウンさせて問題がある定式化を隠蔽...",
          "link": "https://zenn.dev/yoshida0312/articles/202561570fee02",
          "publishedOn": "2023-04-20T06:55:28.000Z",
          "wordCount": 630,
          "title": "頑健回帰推定（ロバスト回帰推定）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Eyg6nFaU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A0%2591%25E5%2581%25A5%25E5%259B%259E%25E5%25B8%25B0%25E6%258E%25A8%25E5%25AE%259A%25EF%25BC%2588%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588%25E5%259B%259E%25E5%25B8%25B0%25E6%258E%25A8%25E5%25AE%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Eyg6nFaU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A0%2591%25E5%2581%25A5%25E5%259B%259E%25E5%25B8%25B0%25E6%258E%25A8%25E5%25AE%259A%25EF%25BC%2588%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588%25E5%259B%259E%25E5%25B8%25B0%25E6%258E%25A8%25E5%25AE%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/6a9c07de7ded3b",
          "author": "よしだ",
          "description": "はじめに\n前回紹介したSELFIESを使用した構造生成アルゴリズムであるSTONEDを紹介します。\n学習なしで構造生成でき、その結果が学習が必要なモデルと比較しても同程度の精度が出ているという手法になります。\n早く＆精度も良いということで今後も活用が期待されます。\n\n 構造生成アルゴリズム\nアルゴリズムはすごくシンプルです。\n\nSMILESの入力から同じ意味を持つSMILESを複数ランダムに生成する\n生成したSMILESをSELFIESに変換する\nランダムに変異させる\nSELFIESからSMILESに変換する\n\n[f:id:yamayou_1:20211206160928p:plai...",
          "link": "https://zenn.dev/yoshida0312/articles/6a9c07de7ded3b",
          "publishedOn": "2023-04-20T06:54:58.000Z",
          "wordCount": 2153,
          "title": "SELFIESを使用した構造生成アルゴリズム「STONED」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eSR1PNMH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SELFIES%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%25A7%258B%25E9%2580%25A0%25E7%2594%259F%25E6%2588%2590%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%258CSTONED%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eSR1PNMH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SELFIES%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%25A7%258B%25E9%2580%25A0%25E7%2594%259F%25E6%2588%2590%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%258CSTONED%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/20c40275d54026",
          "author": "よしだ",
          "description": "SELFIESとは\n[https://iopscience.iop.org/article/10.1088/2632-2153/aba947]で発表された分子表現であるSELFIESを紹介します。\n日本語の解説資料としてはかなり丁寧な\n[https://blacktanktop.hatenablog.com/entry/2021/08/12/115613#Atomic-Symbols:title]\nがあるのでここでは使い方のメモだけ残します。\n本当にやりたいSELFIESを使用した構造生成である\n[https://github.com/aspuru-guzik-group/stone...",
          "link": "https://zenn.dev/yoshida0312/articles/20c40275d54026",
          "publishedOn": "2023-04-20T06:54:11.000Z",
          "wordCount": 399,
          "title": "分子表現SELFIESの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4DxzLMNr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%2586%25E5%25AD%2590%25E8%25A1%25A8%25E7%258F%25BESELFIES%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4DxzLMNr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%2586%25E5%25AD%2590%25E8%25A1%25A8%25E7%258F%25BESELFIES%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/5a499999e114e2",
          "author": "よしだ",
          "description": "tradercompany method\n\ntrader-company methodを実装しました。\nより論文実装に近い形で実装していますが、大枠は参考文献のqiita記事を参考にしました。\n実装とチュートリアルはGitに載せました。\n[https://github.com/yoshida-chem/tradercompany/edit/main/README.md]\n\n 参考文献\n\nhttps://arxiv.org/abs/2012.10215\nhttps://qiita.com/yotapoon/items/1214218c7459ad69db3e\n\n\n 使い方\n\nライブラリ...",
          "link": "https://zenn.dev/yoshida0312/articles/5a499999e114e2",
          "publishedOn": "2023-04-20T06:53:50.000Z",
          "wordCount": 955,
          "title": "Trader-Company method",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kO1pUvxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Trader-Company%2520method%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kO1pUvxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Trader-Company%2520method%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/3ca747d61e17d1",
          "author": "よしだ",
          "description": "StreamlitアプリをExe化する\nstreamlitは専門的な知識を必要とせずにDashboardなどのアプリを作ることができます。\nその簡易さからプロトタイプとしてPoCなどに使用されることが多いかなと思います。\nしかし、サーバーに立てる時間や余裕がない際に他の方に実行してもらうには個別にPython環境を構築する必要があります。\nあまりないケースかもしれませんが、そのようなケース又は手軽に使える方法としてExe化する方法を紹介します。\n\n ライブラリのインストール\n今回の必須ライブラリとして、exe化するためにpyinstaller、streamlitをインストールします。...",
          "link": "https://zenn.dev/yoshida0312/articles/3ca747d61e17d1",
          "publishedOn": "2023-04-20T06:53:31.000Z",
          "wordCount": 1004,
          "title": "pyinstallerを用いたstreamlitのExe化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8hyrZ0Ux--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyinstaller%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fstreamlit%25E3%2581%25AEExe%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8hyrZ0Ux--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyinstaller%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fstreamlit%25E3%2581%25AEExe%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/5c2f4a03f4af9f",
          "author": "よしだ",
          "description": "異常検知の問題点\n\n正常と異常のデータが不均衡\nSwamping : 正常データが異常データに近い時にFalse Negativeが発生\nMasking : 異常なデータがたくさんあり、それらが密な集合になり検知できない\n\n\n 手法\n\n Isolation Forest\n正常データとの距離を見る手法と異なり、異常データを分類する手法です。異常データは決定木の根の部分に近い（必要な分割数が少ない）と考えた手法です。scikit-kearnで実装あり。元のデータからサンプリングを行うことで、大量なデータがあるときに生じやすいSwampingとMaskingの影響を抑える。通常なデータセッ...",
          "link": "https://zenn.dev/yoshida0312/articles/5c2f4a03f4af9f",
          "publishedOn": "2023-04-20T06:53:04.000Z",
          "wordCount": 163,
          "title": "異常検知手法追加メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HyiNNlWO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25E6%2589%258B%25E6%25B3%2595%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HyiNNlWO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25E6%2589%258B%25E6%25B3%2595%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/773738fdce5677",
          "author": "よしだ",
          "description": "不要な次元を含むデータからの異常検知\n多変量のデータがある場合にそのデータセットの変数間で多重共線性があるとホテリング理論を使ってもうまくいきません。これは、共分散行列の逆行列を計算できないためです。このような場合に使われる手法がPCA（/Kernel PCA）を用いた異常検知です。\n\n PCAとは\n正常データもしくは正常データが圧倒的多数なデータからPCAなどから主部分空間（正常部分空間）を求めます。この時、新しいデータ[tex: x']が来たときに、異常度は正常部分空間から新しいデータ点がどれだけ離れているかで求めることができます。\n異常度は以下のように表され、主成分のみを使用し...",
          "link": "https://zenn.dev/yoshida0312/articles/773738fdce5677",
          "publishedOn": "2023-04-20T06:52:43.000Z",
          "wordCount": 455,
          "title": "異常検知７：不要な次元を含むデータからの異常検知 - PCA, Kernel PCA",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wQPxQcdi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2597%25EF%25BC%259A%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AA%25E6%25AC%25A1%25E5%2585%2583%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2580%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%2520-%2520PCA%252C%2520Kernel%2520PCA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wQPxQcdi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2597%25EF%25BC%259A%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AA%25E6%25AC%25A1%25E5%2585%2583%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2580%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%2520-%2520PCA%252C%2520Kernel%2520PCA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/d19314ffe4b8e2",
          "author": "よしだ",
          "description": "One-Class SVM\nOne-Class SVMではデータの主要部分を含む球を考え、その球の外側の点を異常とします。\n異常度は以下のように与えられます。ここで、[tex: R]は球の半径です。SVMと同様にカーネルトリックを行うことで非線形にも対応可能なので、非線形の関係があるデータに対して使われる古典的な手法になっています。\n[tex: \\displaystyle\na(x') = ||x' - b^{*}||^{2} - R^{* 2}\n]\n\n コード\n\n データ準備\n# import packages\nimport pandas as pd\nimport numpy as ...",
          "link": "https://zenn.dev/yoshida0312/articles/d19314ffe4b8e2",
          "publishedOn": "2023-04-20T06:52:22.000Z",
          "wordCount": 696,
          "title": "異常検知６：分布が一山にならない場合 - One-Class SVM",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QvwqzGeB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2596%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520One-Class%2520SVM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QvwqzGeB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2596%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520One-Class%2520SVM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/063f2391a9dbbb",
          "author": "よしだ",
          "description": "混合正規分布モデル（GMM）とは\nKNNではクラスリングの結果をどれだけ信じれば良いのか不明であり、また一般的にクラスター同士が重なっていない場合ばかりではない。そのため、GMMを用いることでクラスター同士の重なりを表現できます。よく使われている方法であり、かつDLベースの手法でも使われたりします。\n異常度はこれまでの議論と同じように以下のように定義されています。\n[tex: \\displaystyle\na(x') = -\\ln \\sum_{k=1}^{K} \\hat{\\pi_k} N(x'|\\hat{\\mu_k}, \\hat{\\Sigma_k})\n]\n\n コード\n\n データ準備\nD...",
          "link": "https://zenn.dev/yoshida0312/articles/063f2391a9dbbb",
          "publishedOn": "2023-04-20T06:51:58.000Z",
          "wordCount": 301,
          "title": "異常検知５：分布が一山にならない場合 -GMM",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A557QCRb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2595%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-GMM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A557QCRb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2595%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-GMM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/a8f173a96ed44d",
          "author": "よしだ",
          "description": "局所外れ値度\n以前のKNN法の弱点としてはデータ密度が空間の場所によりばらつきがあると最適なkを決めるのが難しい点です。この課題は以下のような例を見ると分かりやすいです。右上と左下にクラスターのデータ密度に差があるので、右上のクラスターの半径の基準で考えると、左下のクラスターは外れ値のように扱われてしまいます。\n\n コード\n\n データ準備\n# import packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom scipy import stats\nfrom scipy...",
          "link": "https://zenn.dev/yoshida0312/articles/a8f173a96ed44d",
          "publishedOn": "2023-04-20T06:51:35.000Z",
          "wordCount": 412,
          "title": "異常検知４：分布が一山にならない場合 - 局所外れ値度",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7z3_fO9K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2594%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520%25E5%25B1%2580%25E6%2589%2580%25E5%25A4%2596%25E3%2582%258C%25E5%2580%25A4%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7z3_fO9K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2594%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520%25E5%25B1%2580%25E6%2589%2580%25E5%25A4%2596%25E3%2582%258C%25E5%2580%25A4%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/c3520046d7b814",
          "author": "よしだ",
          "description": "KNNにおける異常検知とは\nホテリング理論やMT法では１つの正規分布を仮定して、そのデータの出現確率が低ければ異常と見なすことができるような異常度を算出しました。\nKNN法ではデータ間の距離を考えることで２つの異常判定基準を考えることができます。\n\n\nk基準：M次元の球を考えて、球の半径の中に入る標本の数kがある基準値以下であれば異常\n\n\n[tex: \\epsilon]基準：観測値に近い順にk個の標本を選んだ時、それを囲む球の半径[tex: \\epsilon_k]がある基準値以上であれば異常\n\n\nつまり、異常データであれば近傍に正常なデータがないはずなので、半径[tex: \\epsi...",
          "link": "https://zenn.dev/yoshida0312/articles/c3520046d7b814",
          "publishedOn": "2023-04-20T06:51:08.000Z",
          "wordCount": 812,
          "title": "異常検知３：分布が一山にならない場合 - KNN法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3-1_sxr---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2593%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520KNN%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3-1_sxr---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2593%25EF%25BC%259A%25E5%2588%2586%25E5%25B8%2583%25E3%2581%258C%25E4%25B8%2580%25E5%25B1%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2520-%2520KNN%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/44493cc242e569",
          "author": "Darman",
          "description": "再帰関数の概要\n再帰関数とは、自分自身を呼び出す関数のことを指します。再帰関数は、問題を繰り返し処理することで解決する場合に非常に有用です。一般的に、再帰関数は次の2つの要素が必要です。\n\nベースケース (base case)：再帰を終了させるための条件。再帰が無限に続かないように、ある条件を満たしたら再帰を終了することが重要です。\n再帰ステップ (recursive step)：自分自身を呼び出す部分で、問題を分割して処理します。\n\n以下に、Pythonで記述された再帰関数の例を示します。\n\n 階乗を計算する再帰関数\ndef factorial(n: int) -> int:...",
          "link": "https://zenn.dev/yutabeee/articles/44493cc242e569",
          "publishedOn": "2023-04-19T08:33:25.000Z",
          "wordCount": 1944,
          "title": "[初心者向け] 再帰関数とは？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kMv_EzcU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%255D%2520%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kMv_EzcU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%255D%2520%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mizti/articles/536147ffc5b249",
          "author": "mizti",
          "description": "このリポジトリについて\nAzure OpenAIサービスにデプロイしたモデルに対して対話的に応答を取得するAPIリクエストサンプルです。\n\n 前提\n\nAzure OpenAIサービスでアカウントが作られていること\nPublic AccessがAllowされていること\n(Azure AD認証を行う場合)認証する主体がAzure OpenAIサービスアカウントに対してCognitive Services OpenAI Userロールを持っていること\n\n\n コード例\n\nopenai_apikey_request_sample.py\n\nAPIキーで認証する例です。\n#Note: The op...",
          "link": "https://zenn.dev/mizti/articles/536147ffc5b249",
          "publishedOn": "2023-04-19T07:41:42.000Z",
          "wordCount": 891,
          "title": "Azure OpenAIのAPIをPythonで呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BdrpiFso--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%25E3%2581%25AEAPI%25E3%2582%2592Python%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizti%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lELUQxZUcyTk4zcFpBcWxTNWgtTTV1OW9DRFFQOXpKWE14Z285eFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BdrpiFso--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%25E3%2581%25AEAPI%25E3%2582%2592Python%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizti%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lELUQxZUcyTk4zcFpBcWxTNWgtTTV1OW9DRFFQOXpKWE14Z285eFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ab7c66cd64f239",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-206 B - Savings\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    s = 1\n    c = 1\n    while s < n:\n        c += 1\n        s += c\n    print(c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ab7c66cd64f239",
          "publishedOn": "2023-04-19T03:52:53.000Z",
          "wordCount": 249,
          "title": "［AtCoder］ABC-206｜B - Savings",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Pfw_dKed--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-206%25EF%25BD%259CB%2520-%2520Savings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Pfw_dKed--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-206%25EF%25BD%259CB%2520-%2520Savings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/368e051e268c0c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-206 A - Maxi-Buying\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    p = (n * 1.08) // 1\n\n    print('Yay!' if p < 206 else ':(' if p > 206 else 'so-so')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/368e051e268c0c",
          "publishedOn": "2023-04-19T03:52:52.000Z",
          "wordCount": 271,
          "title": "［AtCoder］ABC-206｜A - Maxi-Buying",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MwPBhkcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-206%25EF%25BD%259CA%2520-%2520Maxi-Buying%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MwPBhkcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-206%25EF%25BD%259CA%2520-%2520Maxi-Buying%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/carenet/articles/285e6547fbc2f0",
          "author": "Kai",
          "description": "はじめに\nこんにちは、CareNetのKaiと申します。\nCareNetは医療従事者向けメディアを運営している上場企業でして、遅ればせながらテックブログを始めようということで、こちらが最初の記事になります。\n最近CareNetでも機械学習チームが立ち上がっており、LLM（大規模言語モデル）を使ったプロダクト開発に取り組んだりしています。\n今回は、LLMのうちでも計算量・VRAMを削減することのできるAlpacaとLoRAの組み合わせに対して、医療分野でのQ&AデータセットであるPubMedQAでファインチューニングしてみましたので、ご参考になれば幸いです。\n\n Alpacaと...",
          "link": "https://zenn.dev/carenet/articles/285e6547fbc2f0",
          "publishedOn": "2023-04-19T03:33:22.000Z",
          "wordCount": 1203,
          "title": "Alpaca-LoRAをPubMedQAでファインチューニングしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i-eOB4qS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alpaca-LoRA%25E3%2582%2592PubMedQA%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kai%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0luX0J2ajYyMjVsbTRVWXczSjhQODgwRTdhSFF6YXZqcmJHN1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i-eOB4qS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alpaca-LoRA%25E3%2582%2592PubMedQA%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kai%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0luX0J2ajYyMjVsbTRVWXczSjhQODgwRTdhSFF6YXZqcmJHN1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/robon/articles/c943cc4740bffb",
          "author": "荒木 岳夫",
          "description": "前回まで\nhttps://zenn.dev/robon/articles/bb17fd07739519\ncustomerで1 schema = 1 modelの実装ができました。\n\n 仕上げ\n\n productsの追加\ncustomersと同様に実装できました。\nschema単位のモジュール化も問題ありませんでしたし、こちらの方が凝集度が高く、拡張も容易な気がします。同じような設計思想で開発されているところもありました。\nhttps://github.com/zhanymkanov/fastapi-best-practices\nhttps://github.com/Netflix/d...",
          "link": "https://zenn.dev/robon/articles/c943cc4740bffb",
          "publishedOn": "2023-04-19T01:02:27.000Z",
          "wordCount": 2409,
          "title": "FastAPIでREST（その３）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5AMaKq1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5AMaKq1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryutaro_h/articles/cd170fcb5d229e",
          "author": "Ryutaro",
          "description": "初めに\n直近でAppEngine + Pythonの2系から3系への移行を経験しました。その際以前の環境で使用されていたライブラリも移行する必要が出てきており、今回はその中でAppEngineNDBからPython Client for Google Cloud Datastore(以後 Datastore API)の移行について、知っておきたかったことなど簡単に取り上げたいと思います。\n\n\n 前提\nAppEngine + Python2系 → 3系への移行作業は、2系でサポートされていたAppEngine系のライブラリが3系では対応外であることがあるため、言語のバージョンアップと共...",
          "link": "https://zenn.dev/ryutaro_h/articles/cd170fcb5d229e",
          "publishedOn": "2023-04-19T00:38:36.000Z",
          "wordCount": 458,
          "title": "AppEngineNDB → Python Client for Google Cloud Datastore API 移行まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_WAPIoph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppEngineNDB%2520%25E2%2586%2592%2520Python%2520Client%2520for%2520Google%2520Cloud%2520Datastore%2520A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryutaro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_WAPIoph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppEngineNDB%2520%25E2%2586%2592%2520Python%2520Client%2520for%2520Google%2520Cloud%2520Datastore%2520A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryutaro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/3799c1569768ca",
          "author": "nakamura196",
          "description": "以前に以下の記事を執筆しました。JPCOARスキーマを用いたxmlファイルのバリデーションを試しました。\nhttps://zenn.dev/nakamura196/articles/3c91cd443e084c\n今回は、上記の記事での検証を元に、Google Colabを用いた検証ツールを作成しました。以下のURLからお試しいただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/JPCOARスキーマ_v1を用いたxmlファイルのバリデーション.ipynb\n公開済みのxmlファイルのURL...",
          "link": "https://zenn.dev/nakamura196/articles/3799c1569768ca",
          "publishedOn": "2023-04-18T21:29:24.000Z",
          "wordCount": 83,
          "title": "JPCOARスキーマ（v1）を用いたxmlファイルのバリデーションツールの試作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c0G9KbSt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JPCOAR%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25EF%25BC%2588v1%25EF%25BC%2589%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fxml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%25A9%25A6%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c0G9KbSt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JPCOAR%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25EF%25BC%2588v1%25EF%25BC%2589%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fxml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%25A9%25A6%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/f5579f88e22b22",
          "author": "よしだ",
          "description": "はじめに\n前回までで単回帰やNumPyro特有の内容を見てきたので、それらを少し応用して基本的なモデルを実装していきます。理論的な内容は世の中にある優れた本にお任せし、実装中心の内容です。\nまた、前回までで出てきた内容は極力説明を省いて進行します。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimpo...",
          "link": "https://zenn.dev/yoshida0312/articles/f5579f88e22b22",
          "publishedOn": "2023-04-18T14:38:06.000Z",
          "wordCount": 5089,
          "title": "NumPyro：基本のモデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8uUFByH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8uUFByH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/de7079cbd9a2d3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-205 B - Permutation Check\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    a.sort()\n    b = [i + 1 for i in range(n)]\n\n    print('Yes' if a == b else 'No')\n\n\nif __nam...",
          "link": "https://zenn.dev/hyperdb/articles/de7079cbd9a2d3",
          "publishedOn": "2023-04-18T04:35:46.000Z",
          "wordCount": 331,
          "title": "［AtCoder］ABC-205｜B - Permutation Check",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lSiDC3AN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CB%2520-%2520Permutation%2520Check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lSiDC3AN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CB%2520-%2520Permutation%2520Check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/129fa030a0077c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-205 A - kcal\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    c = b / 100 * a\n    print(\"%d\" % c if c.is_integer() else c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/129fa030a0077c",
          "publishedOn": "2023-04-18T04:35:46.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-205｜A - kcal",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--np-AJjtK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CA%2520-%2520kcal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--np-AJjtK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-205%25EF%25BD%259CA%2520-%2520kcal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-framework",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonフレームワークについて解説します。\n\n はじめに\nPythonは、初心者からプロまで多くの人に愛されるプログラミング言語です。Pythonは、シンプルで読みやすいコードを書くことができます。また、Pythonには豊富なライブラリが用意されており、様々な分野での開発に利用されています。Pythonの魅力は、これだけではありません。Pythonには多数のフレームワークがあり、Webアプリケーションを構築することができます。\nここでは、Pythonフレームワークの概要と、代表的なフレームワークであるDjangoとFlaskの紹介を行い...",
          "link": "https://zenn.dev/gk12/articles/python-framework",
          "publishedOn": "2023-04-18T04:33:50.000Z",
          "wordCount": 378,
          "title": "Pythonフレームワーク入門 ~初心者向け~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MoP5Cnw4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2585%25A5%25E9%2596%2580%2520%7E%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MoP5Cnw4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2585%25A5%25E9%2596%2580%2520%7E%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-for-statement",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、for文の使い方について説明します。\n\n for文とは？\nfor文とは、ある範囲内の値を順番に取り出して処理を行うための構文です。Pythonのfor文は、以下のように書きます。\nfor 変数 in イテラブル:\n    処理\nここで、変数とは、イテラブルから取り出した要素が格納される変数のことです。イテラブルとは、複数の要素を持つデータ構造のことで、例えば、リストやタプル、文字列などが該当します。\n\n for文の使い方\nfor文を使うには、まず、イテラブルを用意し、for文の中で処理したい操作を記述します。以下は、リストの要素を順番に取り...",
          "link": "https://zenn.dev/gk12/articles/python-for-statement",
          "publishedOn": "2023-04-18T04:27:10.000Z",
          "wordCount": 316,
          "title": "Pythonのfor文を使いこなそう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Uc9SCdED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEfor%25E6%2596%2587%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%259D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Uc9SCdED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEfor%25E6%2596%2587%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%259D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-comparison-operator",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、比較演算子の使い方について説明します。\n\n 比較演算子とは？\n比較演算子とは、2つの値の大小関係を比較するために使用される演算子のことです。Pythonには、以下のような比較演算子があります。\n\n\n> : 大なり\n\n< : 小なり\n\n>= : 大なりイコール\n\n<= : 小なりイコール\n\n== : 等しい\n\n!= : 等しくない\n\nこれらの演算子を使うことで、2つの値がどのような関係にあるかを判定することができます。\n\n 比較演算子の使い方\n比較演算子を使うには、比較したい2つの値を取得し、演算子で比較します。比較演...",
          "link": "https://zenn.dev/gk12/articles/python-comparison-operator",
          "publishedOn": "2023-04-18T04:23:45.000Z",
          "wordCount": 445,
          "title": "Pythonで比較演算子を使おう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nPJu3YO5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nPJu3YO5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-exercises",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、練習問題を解いて学ぶ方法について説明します。\n\n はじめに\nプログラミングを学ぶ上で、練習問題を解くことは非常に重要です。練習問題を解くことで、プログラムの書き方や思考方法を身に付けることができます。また、練習問題を解くことで、実際に動くプログラムを作ることができるため、モチベーションも高まります。\nPythonは初心者にも優しいプログラミング言語として人気があります。Pythonのコードは読みやすく、学習曲線も比較的緩やかです。Pythonを学ぶ初心者にとって、練習問題を解くことは、Pythonの理解を深めるために必要不可欠です。\n本記事...",
          "link": "https://zenn.dev/gk12/articles/python-exercises",
          "publishedOn": "2023-04-18T04:20:14.000Z",
          "wordCount": 340,
          "title": "Python初心者向け：練習問題を解いて学ぶ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i1QO5Wi3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E7%25B7%25B4%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i1QO5Wi3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E7%25B7%25B4%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-use-class",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonのクラスについて解説していきます。クラスは、Pythonの中でも非常に重要な概念であり、プログラムをより効率的かつ柔軟に作成することができます。本記事では、Pythonのクラスの基本的な使い方について説明し、サンプルコードを交えて解説します。\n\n はじめに\nPythonは、オブジェクト指向プログラミング（OOP）をサポートしており、クラスを定義することができます。クラスは、属性（データ）とメソッド（関数）をまとめたもので、同じ構造のオブジェクトを複数作成することができます。クラスを使うことで、コードの再利用性が高まり、保守しやす...",
          "link": "https://zenn.dev/gk12/articles/python-use-class",
          "publishedOn": "2023-04-18T04:16:29.000Z",
          "wordCount": 509,
          "title": "Python初心者向け：クラスの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FVpdj0BH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FVpdj0BH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-editor",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、おすすめのエディタを紹介します。\n\n はじめに\nPythonを学ぶ上で、エディタの選択は非常に重要です。エディタは、プログラムの編集を行うために欠かせないツールであり、使いやすいものを選ぶことで、開発速度が大幅に向上することができます。ただし、初心者にとっては、どのエディタを選ぶべきか迷ってしまうこともあるかもしれません。そこで、本記事では、Python初心者におすすめのエディタを紹介します。\n\n PyCharm\nPyCharmは、Python開発に特化した統合開発環境（IDE）です。Pythonの構文解析機能が強力で、コードの自動補完やシ...",
          "link": "https://zenn.dev/gk12/articles/python-editor",
          "publishedOn": "2023-04-18T04:10:07.000Z",
          "wordCount": 190,
          "title": "Python初心者におすすめのエディタ一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JSzMkCok--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JSzMkCok--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-library",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonでよく使われるライブラリの一覧を紹介します。\n\n はじめに\nPythonは、様々な分野で利用されているプログラミング言語です。その中でも特に、データ分析や機械学習などの分野でよく使われるのが、Pythonのライブラリです。ライブラリを利用することで、より高度な処理が簡単に行えるようになります。\nこの記事では、Python初心者の方に向けて、よく使われるライブラリを紹介します。まずは、Pythonでのライブラリのインストール方法から説明していきます。\n\n ライブラリのインストール方法\nPythonのライブラリは、pipというパッケ...",
          "link": "https://zenn.dev/gk12/articles/python-library",
          "publishedOn": "2023-04-18T04:06:00.000Z",
          "wordCount": 619,
          "title": "Pythonでよく使われるライブラリ一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--46DYpDyZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--46DYpDyZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-scraping",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、スクレイピングの入門記事を書いていきます。\n\n はじめに\nWebサイト上の情報を取得するスクレイピングは、Pythonを使ったデータ取得の方法として非常に有用です。Pythonにはスクレイピングに必要なライブラリが豊富にあり、簡単にスクレイピングができるため、初心者でも始めやすいと言われています。本記事では、Pythonでスクレイピングを行う方法を、基本的なコードを交えて解説していきます。\n\n スクレイピングに必要なライブラリのインストール\nPythonでスクレイピングを行うには、以下のライブラリをインストールする必要があります。\n\nreq...",
          "link": "https://zenn.dev/gk12/articles/python-scraping",
          "publishedOn": "2023-04-18T04:00:19.000Z",
          "wordCount": 202,
          "title": "Python初心者のためのスクレイピング入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WHOBqPXt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WHOBqPXt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-generate-exe",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、Pythonプログラムをexeファイルに変換する方法について解説します。\n\n exe化とは\nexe化とは、PythonプログラムをWindowsの実行ファイルであるexeファイルに変換することです。exeファイルに変換することで、Python環境がない他のコンピュータでもPythonプログラムを実行することができます。\n\n PyInstallerを使用したexe化方法\nPythonプログラムをexeファイルに変換する方法はいくつかありますが、ここでは、PyInstallerを使用する方法を紹介します。PyInstallerは、Pythonの...",
          "link": "https://zenn.dev/gk12/articles/python-generate-exe",
          "publishedOn": "2023-04-18T03:54:01.000Z",
          "wordCount": 387,
          "title": "Pythonでexe化する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tt7oXy2---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7exe%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tt7oXy2---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7exe%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-add-array",
          "author": "gk12",
          "description": "こんにちは。今回は、Python初心者に向けて、配列に要素を追加する方法について解説します。\n\n 配列とは\n配列とは、複数の要素をまとめたデータ構造のことです。Pythonでは、リスト(List)と呼ばれます。リストは、角括弧([])で要素を囲み、カンマ(,)で区切ります。\n以下は、リストの例です。\nfruits = [\"apple\", \"banana\", \"orange\"]\n\n リストへの要素追加方法\nリストに要素を追加する方法には、以下の2つがあります。\n\n\nappend()メソッドを使用する方法\n\n+演算子を使用する方法\n\n\n append()メソッドを使用する方法\nappend(...",
          "link": "https://zenn.dev/gk12/articles/python-add-array",
          "publishedOn": "2023-04-18T02:22:37.000Z",
          "wordCount": 429,
          "title": "Pythonで配列に要素を追加する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KgUbpklX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KgUbpklX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-logger-output",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\nこんにちは。今回は、Python初心者に向けて、ログを出力する方法について解説します。Pythonには、ログを出力するための標準ライブラリであるloggingが用意されています。\n以下では、実際のコード例を交えて、ログを出力する方法について解説していきます。\n\n loggingモジュールを使った方法\nloggingモジュールを使うことで、簡単にログを出力することができます。loggingモジュールは、ログレベルによって、出力する情報の詳細度を設定...",
          "link": "https://zenn.dev/gk12/articles/python-logger-output",
          "publishedOn": "2023-04-18T02:16:37.000Z",
          "wordCount": 272,
          "title": "Pythonでログを出力する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CQzlH3t2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CQzlH3t2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-square-root",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\nこんにちは。今回は、Python初心者に向けて、ルートを求める方法について解説します。ルートとは、数値の平方根のことを指します。Pythonには、ルートを求めるための機能が標準で用意されています。\n以下では、実際のコード例を交えて、ルートを求める方法について解説していきます。\n\n mathモジュールを使った方法\nPythonの標準ライブラリに含まれるmathモジュールを使うことで、ルートを求めることができます。mathモジュールのsqrt関数を使...",
          "link": "https://zenn.dev/gk12/articles/python-square-root",
          "publishedOn": "2023-04-18T02:06:47.000Z",
          "wordCount": 209,
          "title": "Pythonのルートを求める方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7yq9Diuv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7yq9Diuv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-replace",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\n\n はじめに\nこんにちは。今回は、Python初心者に向けて、文字列の置換処理について解説します。Pythonでは、文字列を簡単に置換することができる「replace」メソッドが用意されています。\n文字列の置換処理は、テキスト処理において非常に重要な機能です。Pythonには、文字列の置換処理を行う「replace」メソッドが用意されています。このメソッドを使うことで、簡単に文字列を置換することができます。\n以下では、実際のコード例を交えて、re...",
          "link": "https://zenn.dev/gk12/articles/python-replace",
          "publishedOn": "2023-04-18T02:02:52.000Z",
          "wordCount": 369,
          "title": "Python初心者のための文字列置換処理の使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ktKURLyU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%25BD%25AE%25E6%258F%259B%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ktKURLyU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%25BD%25AE%25E6%258F%259B%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-openpyxl-work",
          "author": "gk12",
          "description": "!\n本記事は、Python初心者向けに作成されており、基本的な機能にフォーカスしています。上級者の方にはあまり参考にならない場合があります。\n\n\n はじめに\nこんにちは。今回は、Python初心者に向けて、Excelファイルを操作するためのライブラリである「openpyxl」について解説します。\nExcelファイルは、ビジネスなどで頻繁に利用されるデータ形式の一つです。Pythonでも、Excelファイルを操作することができる「openpyxl」というライブラリがあります。このライブラリを利用することで、PythonでExcelファイルの読み込みや編集ができます。\n以下では、実際のコード...",
          "link": "https://zenn.dev/gk12/articles/python-openpyxl-work",
          "publishedOn": "2023-04-18T01:49:22.000Z",
          "wordCount": 291,
          "title": "Python初心者のためのopenpyxlの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S2tsLFJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEopenpyxl%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S2tsLFJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEopenpyxl%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-image-recognition",
          "author": "gk12",
          "description": "はじめに\nこんにちは。今回は、Python初心者に向けて、Pythonと画像認識について解説します。Pythonは、シンプルでわかりやすく、初心者でも学びやすいプログラミング言語です。また、近年では画像認識技術が注目されており、Pythonを使った画像認識の実装も可能になっています。本記事では、Pythonと画像認識の基礎から具体的な実装方法までを解説します。\n\n Pythonとは\nPythonは、広く使われているプログラミング言語で、シンプルでわかりやすい文法が特徴です。また、多くのライブラリが用意されており、様々な分野で使用されています。Pythonは、データサイエンスや機械学習...",
          "link": "https://zenn.dev/gk12/articles/python-image-recognition",
          "publishedOn": "2023-04-18T01:18:27.000Z",
          "wordCount": 238,
          "title": "Python初心者のための画像認識入門ガイド",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l_vK7SSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l_vK7SSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robon/articles/bb17fd07739519",
          "author": "荒木 岳夫",
          "description": "前回まで\nhttps://zenn.dev/robon/articles/aa7ba513b3bdb3\nFastAPIも導入すれば、とりあえず動くところまでは簡単でした。\n\n 設計と実装\n\n プロジェクトの構造はどうする？\nNestJSはCLIでひな型の自動生成をしてくれたので、それに乗っかることにしました。スキーマ単位の構造は、スキーマ駆動でマイクロサービスな感じで、これからはこういう構造になっていくのかなぁと思いました。\nで、FastAPIです。公式では、どうやらレイヤ構造を推奨しているようです。\nhttps://fastapi.tiangolo.com/tutorial/big...",
          "link": "https://zenn.dev/robon/articles/bb17fd07739519",
          "publishedOn": "2023-04-18T01:03:49.000Z",
          "wordCount": 1909,
          "title": "FastAPIでREST（その２）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eDiA4gpH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eDiA4gpH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/3b554cc522788b",
          "author": "よしだ",
          "description": "はじめに\nNumPyroを用いてモデリングを実装する上で必要な知識をまとめて説明します。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport numpyro\nfrom numpyro.diagnostics import hpdi\nimport numpyro.distributions as ...",
          "link": "https://zenn.dev/yoshida0312/articles/3b554cc522788b",
          "publishedOn": "2023-04-17T16:24:10.000Z",
          "wordCount": 5991,
          "title": "NumPyro：NumPyro特有の関数などまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wtAPQcvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259ANumPyro%25E7%2589%25B9%25E6%259C%2589%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wtAPQcvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259ANumPyro%25E7%2589%25B9%25E6%259C%2589%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/d8b105286407b6",
          "author": "Darman",
          "description": "はじめに\nQueue（キュー）は、データ構造の一つで、要素を先入れ先出し（FIFO: First-In-First-Out）の順序で追加・取り出しを行うことができます。この記事では、Queueの基本概念とPythonでの実装方法について解説します。\n\n キューの基本概念\nキューは、要素が一列に並んでいて、新しい要素が末尾に追加され、先頭の要素が取り出されるデータ構造です。主な操作は以下の2つです。\n\n\nenqueue: キューの末尾に要素を追加する操作です。\n\ndequeue: キューの先頭の要素を取り出す操作です。\n\nキューは、待ち行列やバッファなど、さまざまなシチュエーションで使...",
          "link": "https://zenn.dev/yutabeee/articles/d8b105286407b6",
          "publishedOn": "2023-04-17T15:30:21.000Z",
          "wordCount": 707,
          "title": "Queueの解説: 基本概念とPythonでの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m52vrNSd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Queue%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%253A%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m52vrNSd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Queue%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%253A%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bonsai_engineer/articles/3cd836a5c649fe",
          "author": "盆栽エンジニア",
          "description": "RaspberryPi起動時に自動でPythonを実行する方法を共有します。\n\n\n実行するPythonスクリプトを作成\nvim /home/pi/Desktop/raspberrypi.py\n\n\nsystemd/systemフォルダに移動\n\n\ncd /etc/systemd/system/\n\n定義ファイルを作成\n\nsudo vim raspberrypi.service\n※ファイル名は任意\n\n設定を書き込む\n\n[Unit]\nDescription=起動テスト\n\n[Service]\nExecStart=/usr/bin/python3 /home/pi/Desktop/raspberryp...",
          "link": "https://zenn.dev/bonsai_engineer/articles/3cd836a5c649fe",
          "publishedOn": "2023-04-17T15:21:00.000Z",
          "wordCount": 173,
          "title": "RaspberryPiで起動時にPythonスクリプトを実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6jdC8mjK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RaspberryPi%25E3%2581%25A7%25E8%25B5%25B7%25E5%258B%2595%25E6%2599%2582%25E3%2581%25ABPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6jdC8mjK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RaspberryPi%25E3%2581%25A7%25E8%25B5%25B7%25E5%258B%2595%25E6%2599%2582%25E3%2581%25ABPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/823a5ceb3d76e9",
          "author": "Darman",
          "description": "Pythonの型付けについて\nPythonは動的型付け言語ですが、型ヒント（type hinting）を使用することで、コードの可読性やエラーの予防に役立ちます。Pythonの型ヒントは、Python 3.5で導入された「PEP 484」という機能で、Pythonの標準ライブラリであるtypingを使って型情報を付与することができます。\n\n 型ヒントの基本\n型ヒントを使用するには、関数の引数や戻り値に対して型情報を記述します。例えば、以下のように型ヒントを追加することができます。\ndef greet(name: str) -> str:\n    return \"Hello, \"...",
          "link": "https://zenn.dev/yutabeee/articles/823a5ceb3d76e9",
          "publishedOn": "2023-04-17T14:34:00.000Z",
          "wordCount": 611,
          "title": "Pythonでの型付けのやり方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rtMY9ZCe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25AE%25E3%2582%2584%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rtMY9ZCe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2581%25AE%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25AE%25E3%2582%2584%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/fbc5410fd509b7",
          "author": "laiso",
          "description": "開発中にChat completion APIやEmbeddings APIを過渡に呼び出して課金されてしまうことを回避します。\nまた自動テスト内でOpenAI APIを呼び出す時も有効です。\nhttps://github.com/openai/openai-openapi/\nOpenAI公式リポジトリにOpenAPI仕様書が公開されているのでStoplight Prismでモックサーバーを実行します。\n> npm install -g @stoplight/prism-cli\n> prism mock https://raw.githubusercontent.com/op...",
          "link": "https://zenn.dev/laiso/articles/fbc5410fd509b7",
          "publishedOn": "2023-04-17T12:02:47.000Z",
          "wordCount": 871,
          "title": "開発時にモック版OpenAI APIサーバーを使用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AFIHm-mN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E7%2589%2588OpenAI%2520API%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AFIHm-mN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E7%2589%2588OpenAI%2520API%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daddy_yukio/articles/8c6a15fc09548a",
          "author": "Yukio Ichikawa",
          "description": "はじめに\nこんにちは。Daddy's Officeの市川です。\n今回はGmailサーバーをSMTPサーバーとしてメールを送信するプログラムをPythonで書いてみます。\nGmailサーバーへのログインは、GoogleアカウントでログインというOAuth認証が基本になっていますが、アカウント設定を行うことで、ユーザ/パスワードの認証でログインすることができます。\nただ、この方法が最近変更されたりと、いまいちまとまった情報がなかったので、備忘録として記事に残しておこうと思います。\n\n メール送信の仕組み\nメールは、送った人の端末から受信する人の端末へ直接送られているわけではありません。\n...",
          "link": "https://zenn.dev/daddy_yukio/articles/8c6a15fc09548a",
          "publishedOn": "2023-04-17T06:52:50.000Z",
          "wordCount": 348,
          "title": "【Python】Gmailサーバを使ってメールを送信する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qvNzFTd2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Gmail%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yukio%2520Ichikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZmZiNTY4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qvNzFTd2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Gmail%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yukio%2520Ichikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZmZiNTY4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b11f8ca4de5f6f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-203 B - AtCoder Condominium\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, k = getIntMap()\n\n    a = (1 + k) * k // 2\n    b = k * 100\n\n    t = 0\n    for i in range(1, n + 1):\n        t += (a + b * i)\n    print(t)\n\n\nif __name__ == \"__main__\":\n    m...",
          "link": "https://zenn.dev/hyperdb/articles/b11f8ca4de5f6f",
          "publishedOn": "2023-04-17T03:57:15.000Z",
          "wordCount": 336,
          "title": "［AtCoder］ABC-203｜B - AtCoder Condominium",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JpYEnrg4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CB%2520-%2520AtCoder%2520Condominium%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JpYEnrg4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CB%2520-%2520AtCoder%2520Condominium%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/537f90229bc800",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-204 A - Rock-paper-scissors\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x, y = getIntMap()\n\n    print(x if x == y else 3 - (x + y))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/537f90229bc800",
          "publishedOn": "2023-04-17T03:57:15.000Z",
          "wordCount": 249,
          "title": "［AtCoder］ABC-204｜A - Rock-paper-scissors",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6lgbXtf---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CA%2520-%2520Rock-paper-scissors%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6lgbXtf---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CA%2520-%2520Rock-paper-scissors%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/331d96ab0d8812",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-203 A - Chinchirorin\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    l = getIntList()\n\n    l.sort()\n    c = len(set(l))\n\n    if c == 3:\n        print(0)\n    elif c == 1:\n        print(l[0])\n    else:\n        print(l[2] if l[0] == l[1] else l[0...",
          "link": "https://zenn.dev/hyperdb/articles/331d96ab0d8812",
          "publishedOn": "2023-04-17T03:57:14.000Z",
          "wordCount": 347,
          "title": "［AtCoder］ABC-203｜A - Chinchirorin",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dthCkq8B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CA%2520-%2520Chinchirorin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dthCkq8B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-203%25EF%25BD%259CA%2520-%2520Chinchirorin%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/04ef0ae7d37776",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-204 B - Nuts\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    print(sum([i - 10 for i in a if i > 10]))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/04ef0ae7d37776",
          "publishedOn": "2023-04-17T03:57:14.000Z",
          "wordCount": 302,
          "title": "［AtCoder］ABC-204｜B - Nuts",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cd_lTpLI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CB%2520-%2520Nuts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cd_lTpLI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-204%25EF%25BD%259CB%2520-%2520Nuts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/e8fb2847cfc980",
          "author": "Darman",
          "description": "クイックソートの概要\nクイックソートは、高速な比較ベースのソートアルゴリズムで、データをピボット（基準値）を中心に分割し、再帰的にソートを行います。平均計算時間は O(n log n) で、最悪の場合は O(n^2) ですが、実際には非常に高速で動作することが多いです。\n\n クイックソートの手順\n\nピボットを選択する（例：配列の中央値）。\n左側からピボットより大きい要素を探す。\n右側からピボットより小さい要素を探す。\n2 と 3 で見つかった要素を交換する。\n2 から 4 を繰り返し、左側にはピボットより小さい要素、右側にはピボットより大きい要素が集まる。\n再帰的に左側の部分配列と右...",
          "link": "https://zenn.dev/yutabeee/articles/e8fb2847cfc980",
          "publishedOn": "2023-04-17T03:27:00.000Z",
          "wordCount": 743,
          "title": "Pythonでクイックソート完全解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gZ52wsPY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gZ52wsPY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robon/articles/aa7ba513b3bdb3",
          "author": "荒木 岳夫",
          "description": "はじめに\n当社では、クラウドネイティブなSaaSの開発をしており、いつもはWebAPIの実装ならサーバーレスで。となるのですが、今回は、サーバーレスでないWebAPIの実現方法として、NestJSに続き、FastAPIを動かしてみましたという内容です。\nhttps://zenn.dev/robon/articles/76d4ec767b72ae\n上記のNestJSの記事と同じお題を実装してみます。\n\n 環境構築\n\n Python\nFastAPIはPythonの型ヒントを活用していて、Pythonのバージョンが異なると型ヒントの書き方や範囲がかわるようです。このため、Pythonのバー...",
          "link": "https://zenn.dev/robon/articles/aa7ba513b3bdb3",
          "publishedOn": "2023-04-17T01:14:23.000Z",
          "wordCount": 939,
          "title": "FastAPIでREST（その１）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d7K9MRdh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d7K9MRdh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7REST%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/23dc52cb1576c4",
          "author": "よしだ",
          "description": "はじめに\nPPLの中ではStanが使用されることが多いですが、「Stan言語で書かないといけない」「コンパイルに時間がかかる」等によりストレスがかかることが多かったので、PythonのNumpyライクに書くことができるNumPyroを触っています。個人的にNumpyを触っていればとっつきやすいため良いライブラリだと思うのですが、ネットの記事がほとんどないことがあまり広がらない要因の１つかなと思います。（また記事も古く情報が更新されてないこともあります）\nそこで、日本語のNumPyroの記事が増えることに期待して、ドキュメント読んでもいまいち分からないところをカバーしながらまとめていき...",
          "link": "https://zenn.dev/yoshida0312/articles/23dc52cb1576c4",
          "publishedOn": "2023-04-16T15:39:47.000Z",
          "wordCount": 3569,
          "title": "NumPyro：インストール方法と基本操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aSIPevK7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aSIPevK7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ekke/articles/ec07943d678340",
          "author": "Ekke",
          "description": "本記事は，日比谷高校文化祭「第46回星陵祭」（2022年9月開催）に向けて開発されたオンライン整理券システム\"Quaint\"の主な機能や開発の経過を紹介するものです．文化祭前々日に発生したシステム障害が原因で，Quaintは実際の文化祭で使用されていません．本記事では”Quaint”開発の経過とともに，システム障害の原因を検証します．書けば書くほど書き足りないし失敗談を公開するのはとても恥ずかしいんですが，このままだといつまで経っても公開できないので，同じようなことを考えてる人の役に少しでも立てればという思いから公開します．\n!\n本記事は知見の共有を目的として個人的に執筆されたものです．...",
          "link": "https://zenn.dev/ekke/articles/ec07943d678340",
          "publishedOn": "2023-04-16T14:19:11.000Z",
          "wordCount": 451,
          "title": "【失敗記】日比谷高校星陵祭2022のオンライン整理券システムを制作しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vjqj2r0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25A4%25B1%25E6%2595%2597%25E8%25A8%2598%25E3%2580%2591%25E6%2597%25A5%25E6%25AF%2594%25E8%25B0%25B7%25E9%25AB%2598%25E6%25A0%25A1%25E6%2598%259F%25E9%2599%25B5%25E7%25A5%25AD2022%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E6%2595%25B4%25E7%2590%2586%25E5%2588%25B8%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ekke%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MjgwOWFhZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Vjqj2r0M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25A4%25B1%25E6%2595%2597%25E8%25A8%2598%25E3%2580%2591%25E6%2597%25A5%25E6%25AF%2594%25E8%25B0%25B7%25E9%25AB%2598%25E6%25A0%25A1%25E6%2598%259F%25E9%2599%25B5%25E7%25A5%25AD2022%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E6%2595%25B4%25E7%2590%2586%25E5%2588%25B8%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ekke%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MjgwOWFhZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3fae373f254a06",
          "author": "Darman",
          "description": "データ構造の超基本、ハッシュ表についてPythonを用いて解説します。\n\n ハッシュ表（ハッシュマップ）\nハッシュ表は、キーと値のペアを効率的に格納・検索できるデータ構造です。Pythonでは辞書型（dict）がハッシュ表として実装されています。\nハッシュ表の特徴：\n\n平均的にO(1)でアクセス可能\nハッシュ関数を使用して、キーを配列のインデックスに変換\n\n\n ハッシュ関数\nハッシュ関数は、あるデータ（キー）を受け取り、固定長の数値（ハッシュ値）を生成します。ハッシュ関数の性質により、同じキーに対しては常に同じハッシュ値が生成され、異なるキーに対しては異なるハッシュ値が生成されることが望...",
          "link": "https://zenn.dev/yutabeee/articles/3fae373f254a06",
          "publishedOn": "2023-04-16T11:16:42.000Z",
          "wordCount": 521,
          "title": "Pythonのハッシュテーブル(辞書型)完全に理解した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R0WP2sl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%2528%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%2529%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R0WP2sl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%2528%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%2529%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fura2/articles/c97c8a59f3cc19",
          "author": "fura2",
          "description": "これはなに？\n\n二つの日本語の単語がどれくらい似て聞こえるかを測る方法を考えました。\nそれを応用して、特定の辞書に含まれる単語だけを使った替え歌の歌詞を生成するプログラムを作成しました。(umimi氏との共同プロジェクト)\n\n同氏の2023年2月3日の記事の続きにあたる内容ですが、この記事単体で完結しています。\n\n\n\n\n デモ\n難しい話の前に、まずは聞いてください。\n【自動作詞】Magic: The Gathering[1]のカード名で「勇気100%」歌ってもらった\nhttps://youtu.be/tIXsMYVUjAM\n\n 成果物\n今回の手法を用いた替え歌制作の支援ツールをStr...",
          "link": "https://zenn.dev/fura2/articles/c97c8a59f3cc19",
          "publishedOn": "2023-04-16T11:00:59.000Z",
          "wordCount": 3076,
          "title": "日本語の響きの近さを測る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YyPhae1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E9%259F%25BF%25E3%2581%258D%25E3%2581%25AE%25E8%25BF%2591%25E3%2581%2595%25E3%2582%2592%25E6%25B8%25AC%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fura2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4MDc3OWZiNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YyPhae1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E9%259F%25BF%25E3%2581%258D%25E3%2581%25AE%25E8%25BF%2591%25E3%2581%2595%25E3%2582%2592%25E6%25B8%25AC%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fura2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4MDc3OWZiNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/77f3739af0214b",
          "author": "ShunDev",
          "description": "はじめに\nこの記事はポアソンの小数法則の証明と可視化を行なっている. なお, ポアソン分布の性質については下記の記事にまとめている.\n\nポアソン分布の期待値, 分散, 積率母関数, 最尤推定, 可視化\n\n\n ポアソンの小数法則\n以下が成り立つ.\n\n\\lim_{np=\\lambda, n\\rightarrow \\infty} \\binom{n}{x} p^x (1-p)^{n-x} \\rightarrow \\frac{\\lambda^x}{x!} e^{-\\lambda}.\n\n\n 証明\n\n 注意\n以下に注意する.\n\\lambda = np と固定するとき, n \\rightarrow ...",
          "link": "https://zenn.dev/shundeveloper/articles/77f3739af0214b",
          "publishedOn": "2023-04-16T11:00:00.000Z",
          "wordCount": 1478,
          "title": "[統計学] ポアソンの小数法則の証明と可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jbsJLHiv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%2520%25E3%2583%259D%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25AE%25E5%25B0%258F%25E6%2595%25B0%25E6%25B3%2595%25E5%2589%2587%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jbsJLHiv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%2520%25E3%2583%259D%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25AE%25E5%25B0%258F%25E6%2595%25B0%25E6%25B3%2595%25E5%2589%2587%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/6f601978f032f3",
          "author": "Darman",
          "description": "Visual Studio Code で Python のテストを実行する方法\nVisual Studio Code (VSCode) には Python のテストを実行するための機能があります。本記事では手順を1から解説します。\n\n 1. 必要な拡張機能をインストールする\nVSCode で Python のテストを実行するには、Python 拡張機能をインストールする必要があります。\n\nVSCode を開き、左サイドバーの拡張機能アイコンをクリックします。\n検索ボックスに「Python」と入力し、Microsoft が提供する Python 拡張機能を見つけます。\n「Install...",
          "link": "https://zenn.dev/yutabeee/articles/6f601978f032f3",
          "publishedOn": "2023-04-16T09:57:28.000Z",
          "wordCount": 357,
          "title": "Visual Studio Code で Python のテストを実行する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hHeb0lVc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Visual%2520Studio%2520Code%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hHeb0lVc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Visual%2520Studio%2520Code%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kevinrobot34/articles/python-asyncio-memo",
          "author": "けびん",
          "description": "用語\n\n ブロッキング・ノンブロッキング\n\nブロッキング\n\nプログラムのある処理が完了するのを待っており、他の処理は行えない状態のこと\nCPU等のリソースを占有してしまうが、入出力などの場合にはレスポンスをただ待っているだけということがあり、勿体無い\n\n\nノンブロッキング\n\nプログラムのある処理の待機時に、ブロッキングせず途中で他の処理に移ることが可能な状態のこと\n適切にノンブロッキングなコードを書き、リソースの使用率を高めたり無駄な待機時間をなくしたりすることで、処理の高速化を狙う\n\n\n\n\n 並行処理と並列処理\n似た単語だけど意味するところは結構違うので注意\n\n並行処理 (Conc...",
          "link": "https://zenn.dev/kevinrobot34/articles/python-asyncio-memo",
          "publishedOn": "2023-04-16T07:01:58.000Z",
          "wordCount": 2268,
          "title": "Pythonで非同期処理をやる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Gv8sbSeY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%25B3%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZDNjMWIxNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Gv8sbSeY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%25B3%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZDNjMWIxNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/0f1b828dde7893",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100本ノック(自作)21本目~30本目の問題とPythonのサンプルコードです．\n問題の不備や内容の誤り等がありましたら，ご指摘いただけますと幸いです．\n\n 設定\nオフラインの店舗を構える化粧品会社で地域を絞って広告をうつケースを考えます．\n広告をうった地域において，オフライン店舗の売上がどれくらい増加したかという効果を推定します．\n利用するデータは，下記のファイルです．\nhttps://github.com/s1ok69oo/causal_inference_100knock/blob/main/data/causal_knock3.csv\nデータは，index...",
          "link": "https://zenn.dev/s1ok69oo/articles/0f1b828dde7893",
          "publishedOn": "2023-04-16T06:58:25.000Z",
          "wordCount": 2749,
          "title": "因果推論100本ノック(3)差分の差分法(DID)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wXkIDaT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25283%2529%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%25AE%25E5%25B7%25AE%25E5%2588%2586%25E6%25B3%2595%2528DID%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wXkIDaT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25283%2529%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%25AE%25E5%25B7%25AE%25E5%2588%2586%25E6%25B3%2595%2528DID%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kecy/articles/b019e91d5698fc",
          "author": "kecy",
          "description": "いま「自律駆動AI」として話題のAuto-GPT。自分のPCをコマンドラインツールとしてAIに使わせて思考させるという発想には興味がわきつつちょっとした怖さも憶えます。\nAuto-GPTがどんな仕組みになっているかはこちらの記事で紹介しています。\nhttps://zenn.dev/kecy/articles/7349a3969e2de6\n自分のPCで直接動かすのは怖いので、Dockerコンテナ内で動かしてみました。公式のソースコードのままだと自分の環境では動かなくて、いくつか調整を加えてようやく動かせたというところなので、その手順をまとめておきます。\n（Auto-GPTリポジトリは現在盛...",
          "link": "https://zenn.dev/kecy/articles/b019e91d5698fc",
          "publishedOn": "2023-04-16T04:29:29.000Z",
          "wordCount": 1363,
          "title": "Dockerコンテナの中でAutoGPTを動かしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--E2QJkb6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7AutoGPT%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--E2QJkb6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7AutoGPT%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daon/articles/f6c81659ffc14b",
          "author": "daichi",
          "description": "title: \"OpenAI API research\"\n\n 方針\nプロダクトを作りながら学ぶ\n\n\n 計画\n\nアイデア出し\n実装\n\n\n\n\n 1. アイデア出し\n\n ブレーンストーミングの実施\n\n 事例調査\n\n\nOpenAI Cookbook\n\nOpenAI Documentation\n\n\n\nChatGPT Plugins\n\nChatGPT plugins\nChatGPTをサードパーティのアプリケーションと繋げるためのもの\n\n\n\n\n ChatGPT(GPT-4)を用いた案出し\n\n\nインターネット上で得やすいデータは何ですか？\nインターネット上で得やすいデータは多岐にわたりますが、以下...",
          "link": "https://zenn.dev/daon/articles/f6c81659ffc14b",
          "publishedOn": "2023-04-16T02:35:56.000Z",
          "wordCount": 3050,
          "title": "OpenAI APIの調査",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cLsuT9TH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:OpenAI%2520API%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5ZmFiNGFjMTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cLsuT9TH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:OpenAI%2520API%25E3%2581%25AE%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5ZmFiNGFjMTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ironmask/articles/856aba21769fd0",
          "author": "鉄仮面",
          "description": "Wagtailブログを試してみた\nDjangoでブログを作るのは形だけなら意外に簡単ですが、操作性やデザイン性を考えれば、全くWordPressに勝てない･･･しかし、バグが多いWordPressを使い続けるのももう嫌だ･･･と調べていたところ、Djangoと同じPythonで作られた（というか、Djangoをベースに作られらている）「Wagtaile」というCMSを発見しました。\nYoutubeでは絶賛されて（？）いますが、英語の解説動画しかないので、理解するのにかなりしんどいので、こちらの記事にまとめておきます。\nおすすめ動画\n\n Wagitalって何？\nWagtailは、Pyt...",
          "link": "https://zenn.dev/ironmask/articles/856aba21769fd0",
          "publishedOn": "2023-04-16T02:33:02.000Z",
          "wordCount": 2050,
          "title": "Wagtailブログを試してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r6kW4-w4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wagtail%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2589%2584%25E4%25BB%25AE%25E9%259D%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhODM4MGRmNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--r6kW4-w4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wagtail%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2589%2584%25E4%25BB%25AE%25E9%259D%25A2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhODM4MGRmNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3e117656f261fb",
          "author": "Darman",
          "description": "スタックオーバーフローとは\nスタックオーバーフローとは、プログラム実行中にコールスタックが一定の容量を超えてしまう現象を指します。コールスタックは、関数呼び出しやローカル変数などの情報を格納するためのメモリ領域ですが、その容量は限られています。スタックオーバーフローが発生すると、プログラムは正常に動作せず、クラッシュや不正な動作を引き起こすことがあります。\n\n スタックオーバーフローが発生する状況\n\n\n再帰関数の呼び出しが適切なベースケースに到達せず、無限に続いてしまう場合：再帰関数は自分自身を呼び出す関数であり、ベースケースに到達しない限り呼び出しが続きます。その結果、コールスタッ...",
          "link": "https://zenn.dev/yutabeee/articles/3e117656f261fb",
          "publishedOn": "2023-04-16T02:05:02.000Z",
          "wordCount": 78,
          "title": "スタックオーバフローとその対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5y5XAqZP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5y5XAqZP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/baebcbe7103116",
          "author": "Darman",
          "description": "コールスタックとは\nコールスタックは、プログラム内で関数が呼び出される際に、その関数の実行情報を一時的に保存するデータ構造です。主な目的は、関数の呼び出し履歴を追跡し、関数が終了したときに正しい戻り先を知ることです。\n\n コールスタックの役割\nコールスタックは以下の3つの主要な役割を果たします。\n\n関数の呼び出し履歴を追跡する\n各関数のローカル変数とスコープを管理する\n関数が正しく終了したときに戻り先を知る\n\n\n 関数の呼び出し履歴を追跡する\nプログラムは、複数の関数から構成されており、一つの関数が別の関数を呼び出すことがあります。コールスタックは、関数がどのように呼び出されているか...",
          "link": "https://zenn.dev/yutabeee/articles/baebcbe7103116",
          "publishedOn": "2023-04-16T01:37:31.000Z",
          "wordCount": 303,
          "title": "コールスタック完全に理解した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VsDBaYcS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VsDBaYcS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/233be33676471d",
          "author": "Matsuzaki",
          "description": "ワイブル分析ってなに？てか、度数分布とか何それ？って\nこちらに簡単にまとめました\n\n ポートフォリオ作っている\n個人的に欲しいサイトを作りたいと思って（フロントの勉強も兼ねて）作成しているけど、chatgptを使って書いているからとても早くできている気がする。今後のスタンダードはコメントを書いて\necsでfargate使ってとりあえず、デプロイするか\nリポジトリ\n\n codecopliot\nそのうちコメント駆動開発とか言われそうだな\n\n 今後のキャリアについて考えてみた\n考え始めた理由はこれ\nこれまで自分はどんな色々興味関心があって、色々と手を出してみては中途半端に終わっていたような...",
          "link": "https://zenn.dev/zi_matsu/articles/233be33676471d",
          "publishedOn": "2023-04-16T01:19:19.000Z",
          "wordCount": 148,
          "title": "4/9〜4/16で技術的にやったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4QsLE0h---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F9%25E3%2580%259C4%252F16%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4QsLE0h---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%252F9%25E3%2580%259C4%252F16%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kecy/articles/7349a3969e2de6",
          "author": "kecy",
          "description": "ChatGPTを皮切りとしたAIブーム。流石にちょっと過熱気味になってきた印象があります。\n中でも気になるのは「AutoGPT」の話題。Twitter上だと、\nhttps://twitter.com/kajikent/status/1646517019414777857\nhttps://twitter.com/HChishiro/status/1646504072491732993\n他にも、AgentGPTを使って「AutoGPTすごい！AGIだ！」としている投稿を多く見かけました。\nですが、「AgentGPTはAuto-GPTのブラウザ版」ではありません（少なくとも2023年4月15日...",
          "link": "https://zenn.dev/kecy/articles/7349a3969e2de6",
          "publishedOn": "2023-04-15T15:35:32.000Z",
          "wordCount": 726,
          "title": "「Auto-GPTとAgentGPTは別物です」という話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I6gUcsyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CAuto-GPT%25E3%2581%25A8AgentGPT%25E3%2581%25AF%25E5%2588%25A5%25E7%2589%25A9%25E3%2581%25A7%25E3%2581%2599%25E3%2580%258D%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I6gUcsyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CAuto-GPT%25E3%2581%25A8AgentGPT%25E3%2581%25AF%25E5%2588%25A5%25E7%2589%25A9%25E3%2581%25A7%25E3%2581%2599%25E3%2580%258D%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kecy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjFlZmFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/bbc5d0ef7503fc",
          "author": "Darman",
          "description": "[超解説]再帰関数を使った階乗の計算\n\n はじめに\nこの記事では、再帰関数を用いて整数の階乗を計算するPythonプログラムを解説します。再帰関数の挙動やスタックフレームの概念についても説明します。\n\n プログラムの概要\n以下のPythonプログラムは、与えられた整数nの階乗を計算するものです。\ndef factorial(n: int) -> int:\n    value: int = 0\n\n    print(\"入口\", n)\n    if n <= 1:  # ベースケース\n        value = 1\n    else:  # 再帰ステップ\n        ...",
          "link": "https://zenn.dev/yutabeee/articles/bbc5d0ef7503fc",
          "publishedOn": "2023-04-15T13:09:49.000Z",
          "wordCount": 392,
          "title": "[超解説]再帰関数を使った階乗の計算でスタックフレームについて理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a-cgcmg9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E8%25B6%2585%25E8%25A7%25A3%25E8%25AA%25AC%255D%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%259A%258E%25E4%25B9%2597%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a-cgcmg9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E8%25B6%2585%25E8%25A7%25A3%25E8%25AA%25AC%255D%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%259A%258E%25E4%25B9%2597%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fikastudio/articles/2b367f1850f478",
          "author": "情報工学入門チャンネル",
          "description": "WIF とは\nWIF[1] は、BIP178[2] で定義されているビットコインで使用される ECDSA 秘密鍵をエンコーディングする方法です。WIF は秘密鍵のバックアップやウォレットへ秘密鍵をインポートする際のフォーマットとして利用されています。\n\n 秘密鍵 -> WIF\nビットコインの秘密鍵は、乱数から作成された 256bit の整数です。通常は、16 進数で表現するので、64 桁の英数字が並んでいます。\n# 秘密鍵の例\n0C28FCA386C7A227600B2FE50B7CAE11EC86D3BF1FBE471BE89827E19D72AA1D\n\n\nmainnet 用...",
          "link": "https://zenn.dev/fikastudio/articles/2b367f1850f478",
          "publishedOn": "2023-04-15T12:11:02.000Z",
          "wordCount": 522,
          "title": "Python で学ぶビットコインの WIF（Wallet Import Format）アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y2V88faY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%2520WIF%25EF%25BC%2588Wallet%2520Import%2520Format%25EF%25BC%2589%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y2V88faY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%2520WIF%25EF%25BC%2588Wallet%2520Import%2520Format%25EF%25BC%2589%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dogfortune/articles/fe3bd91762df64",
          "author": "DogFortune",
          "description": "できます\nfrom pprint import pformat\nimport logging\n\n# ロガー作る\nlogger = logging.getLogger(__name__)\nlogger.info(pformat(\"ここにlistとか入れる\"))\npformatを使うことで整形されたstrオブジェクトを取得できるので、それをlogger.infoに渡せばOK！",
          "link": "https://zenn.dev/dogfortune/articles/fe3bd91762df64",
          "publishedOn": "2023-04-15T11:39:46.000Z",
          "wordCount": 113,
          "title": "pprintで整形された文字列をlogger.infoで出力したい！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v3Jv4niW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pprint%25E3%2581%25A7%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592logger.info%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:DogFortune%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5ODRjMTgzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v3Jv4niW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pprint%25E3%2581%25A7%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592logger.info%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:DogFortune%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5ODRjMTgzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/books/c85f204abac7c5",
          "author": "S.A",
          "description": "本書では、多品種少量生産下における需要予測手法として、NeuralProphetの需要予測の実装方法を考えていきます。また複数品種の需要予測を同時に実施することを念頭に置き、どのようにすれば予測時間を少なくできるかを考え、実装例を提示しています。具体的には、クラスタリングを実施し傾向の似ている品種をクラスタリングし、その結果に基づき、需要予測をすることで時間を大幅に削減する方法を考えています。",
          "link": "https://zenn.dev/shungo_a/books/c85f204abac7c5",
          "publishedOn": "2023-04-15T10:26:49.000Z",
          "wordCount": 105,
          "title": "多品種少量生産下における需要予測手法実装例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g4WkbdRk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZjljN2I2Y2U5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g4WkbdRk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZjljN2I2Y2U5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/dokeita/articles/1ce7c728d2afab",
          "author": "dokeita",
          "description": "背景\n\nL2コンストラクタである s3.Bucketで作成したS3バケットに対してオブジェクトのレプリケーションを設定したい\ns3.Bucketにはレプリケーションを設定する機能がまだ無い\n\nL1コンストラクタの s3.CfnBucket.ReplicationConfigurationProperty を使う必要がある\n\n\nescape hatches を使って設定する\n\n\n escape hatchesについて\n公式ドキュメントはこちら\nhttps://docs.aws.amazon.com/cdk/v2/guide/cfn_layer.html\n自分としては、L2コンストラクタ...",
          "link": "https://zenn.dev/dokeita/articles/1ce7c728d2afab",
          "publishedOn": "2023-04-15T09:37:28.000Z",
          "wordCount": 439,
          "title": "AWS CDK s3.BucketにReplication Configurationを設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wRIZQIlQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520s3.Bucket%25E3%2581%25ABReplication%2520Configuration%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dokeita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbTBLbG1lMzNjUkFWQTdCNXJzNW5JVkVLM3h3V3NPUkdyRzZVZXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wRIZQIlQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520s3.Bucket%25E3%2581%25ABReplication%2520Configuration%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dokeita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbTBLbG1lMzNjUkFWQTdCNXJzNW5JVkVLM3h3V3NPUkdyRzZVZXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dyoshikawa/articles/prepare-python-env",
          "author": "d yoshikawa",
          "description": "OpenAI APIを色々試していきたい。\n普段TypeScriptばかり書いているが、Generative AIエコシステム周りはPython有利に感じる（LlamaIndexとか。LangChainはJS/TS対応しているがPythonより解説やサンプルが少なく学習しづらい）。\nそこでPythonの環境構築をキャッチアップしていく。とりあえず環境構築からFastAPI Hello Worldまでやっていく。\n\n 環境\n\nM1 Mac\nbrew\nasdf\n\n\n asdf導入\nまずはpyenv的なものを入れたい。\n*envの管理ツールといえばanyenvだが、最近はasdfが使われてるら...",
          "link": "https://zenn.dev/dyoshikawa/articles/prepare-python-env",
          "publishedOn": "2023-04-15T09:02:39.000Z",
          "wordCount": 783,
          "title": "M1 MacでFastAPI Hello Worldまでの手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QscPZbQ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Mac%25E3%2581%25A7FastAPI%2520Hello%2520World%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d%2520yoshikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1RUdBX0VEUzhuc2ExaDRCMldXUWVhcHE2OU5FRUFTcVRxbi1kSkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QscPZbQ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Mac%25E3%2581%25A7FastAPI%2520Hello%2520World%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d%2520yoshikawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1RUdBX0VEUzhuc2ExaDRCMldXUWVhcHE2OU5FRUFTcVRxbi1kSkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e533143a815041",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-202 A - Three Dice\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    print(21 - sum([a, b, c]))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e533143a815041",
          "publishedOn": "2023-04-15T08:59:05.000Z",
          "wordCount": 248,
          "title": "［AtCoder］ABC-202｜A - Three Dice",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hqM0QUJN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CA%2520-%2520Three%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hqM0QUJN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CA%2520-%2520Three%2520Dice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5939b4acb1dcc0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-202 B - 180°\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    s.reverse()\n    t = ['6' if c == '9' else '9' if c == '6' else c for c in s]\n\n    print(\"\".join(t))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5939b4acb1dcc0",
          "publishedOn": "2023-04-15T08:59:04.000Z",
          "wordCount": 281,
          "title": "［AtCoder］ABC-202｜B - 180°",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EmUIjn4s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CB%2520-%2520180%25C2%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EmUIjn4s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-202%25EF%25BD%259CB%2520-%2520180%25C2%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/techike/articles/cc1295a5fe6d85",
          "author": "Fossa",
          "description": "はじめに\n昨日Twitterでこちらのツイートを見つけ、Amazon CodeWhispererを知りました。\nGitHub Copilotに手を出せていなかった自分でも手軽に使えるのかな？と思い導入してみました。\n自分の備忘録的に書いています。\n\n 環境\nOS: Windows10 Pro\nIDE: Visual Studio Code (VSCode)\nPython 3.9.13\n\n 導入\nVSCodeへの導入手順は、公式の動画やこちらの記事で紹介されていますのでそちらをご確認下さい。\n\n 早速コーディング\nフィボナッチ数列を計算する関数を書いてみたい（書かせてみたい？）と思いま...",
          "link": "https://zenn.dev/techike/articles/cc1295a5fe6d85",
          "publishedOn": "2023-04-15T02:28:44.000Z",
          "wordCount": 251,
          "title": "Amazon CodeWhisperer を使ってみた (Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ua75YoOR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520CodeWhisperer%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fossa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4YmM1NDU4MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ua75YoOR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520CodeWhisperer%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fossa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4YmM1NDU4MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nen/articles/39a692d411f8a3",
          "author": "sre_yoshiya",
          "description": "openaiライブラリを使ったアプリの例\n\n\nroamaround.io/\n(行先の国・地域の観光モデルコースを提案してくれる)\nhttps://www.roamaround.io/\n\n\nagentgpt\n(ゴールの定義を入力すると自動でchatgpt同志が対話を何度も続けて経過ログと最適解を提案してくれる)\nhttps://agentgpt.reworkd.ai/\n\n\ncamel-ai\n(agentgptと同じ機能らしいがapi_key不要で使えるらしい)\nhttps://www.camel-ai.org/home\n\n\n\n\n 実際にopenaiライブラリったコードを実行する\n\n\na...",
          "link": "https://zenn.dev/nen/articles/39a692d411f8a3",
          "publishedOn": "2023-04-15T01:36:34.000Z",
          "wordCount": 588,
          "title": "openai api_keyを使ったアプリ例と実際にapi_keyを使ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l-asPMoQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:openai%2520api_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BE%258B%25E3%2581%25A8%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25ABapi_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sre_yoshiya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjVmYWQ5MWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l-asPMoQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:openai%2520api_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BE%258B%25E3%2581%25A8%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25ABapi_key%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sre_yoshiya%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjVmYWQ5MWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bee2/articles/74b975c70ae6ed",
          "author": "bee2",
          "description": "概要\nVSCodeのPythonエクステンションに、Poetryで作成した仮想環境を認識させる手順をまとめます。\n一度VSCodeの設定を変更するだけで、「Pythonインタープリターの選択」から仮想環境を選択できるようになります。\n\n 動作確認環境\n\nMac OS Monterey\nVSCode 1.77.1\nPoetry 1.4\n\n\n 前提\n\nPython, Poetryインストール済み\nVSCodeにPythonエクステンション追加済み\n\ntestというプロジェクトの仮想環境をPoetryで作成済み (プロジェクト名は任意です)\n以下、作成したプロジェクト直下をワーキングディレ...",
          "link": "https://zenn.dev/bee2/articles/74b975c70ae6ed",
          "publishedOn": "2023-04-15T00:05:22.000Z",
          "wordCount": 192,
          "title": "VSCodeにPoetryの仮想環境を認識させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OjYzQt5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25ABPoetry%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bee2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmMDgwYTliNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OjYzQt5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25ABPoetry%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bee2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmMDgwYTliNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutohub/articles/c798a1b11e290e",
          "author": "yutohub",
          "description": "音声技術の進化による外国語コンテンツの活用方法\n最近では、音声技術が大幅に進歩してきており、ASR、MT、TTS の品質が向上しています。これらを組み合わせることで、外国語の動画や音声に字幕や吹き替えを付けることができるようになります。\nYouTube には、一般的によく使われている自動翻訳字幕機能があります。この機能を使えば、海外の動画に日本語の字幕を簡単に追加できます。YouTube には、MIT や Stanford などの講義など、多くの外国語コンテンツがあります。この機能を活用することで、より多くの情報を収集することが可能になり、非常に便利です。\nYouTube の自動翻訳...",
          "link": "https://zenn.dev/yutohub/articles/c798a1b11e290e",
          "publishedOn": "2023-04-15T00:00:00.000Z",
          "wordCount": 1287,
          "title": "音声技術の進化による外国語コンテンツ活用法：自動翻訳字幕とTTSを活用した自動吹き替え",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--92gk2TZ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E5%25A3%25B0%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%2596%25E5%259B%25BD%25E8%25AA%259E%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E7%25BF%25BB%25E8%25A8%25B3%25E5%25AD%2597%25E5%25B9%2595%25E3%2581%25A8TTS%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%2590%25B9%25E3%2581%258D%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--92gk2TZ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E5%25A3%25B0%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%2596%25E5%259B%25BD%25E8%25AA%259E%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E7%25BF%25BB%25E8%25A8%25B3%25E5%25AD%2597%25E5%25B9%2595%25E3%2581%25A8TTS%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%2590%25B9%25E3%2581%258D%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutohub%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNGVjZDFmYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojomoeko/articles/python-project-with-devcontainer",
          "author": "okojomoeko",
          "description": "以前にpoetryとmkdocsとsphinxを使ってpythonプロジェクトを作っていきました。\nhttps://zenn.dev/okojomoeko/articles/python-project-with-mkdocs\n今回はvs codeのdev containerを使って、みんなが共通のvs codeでチーム開発できるようにdev containerを使ったプロジェクトテンプレートを作成し、どのようにpythonプロジェクトのテンプレートを環境をdev containerで作っていくかというところをメインでメモします。\n\n 今回試した環境\n\nUbuntu 22.04.2 LT...",
          "link": "https://zenn.dev/okojomoeko/articles/python-project-with-devcontainer",
          "publishedOn": "2023-04-14T14:36:12.000Z",
          "wordCount": 932,
          "title": "Dev Containerを使ってPythonのプロジェクトのテンプレートを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sQ-zAZ_y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sQ-zAZ_y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/readyfor_blog/articles/bbcbff90944ef3",
          "author": "Shohei Urano",
          "description": "この記事を読んで分かること\nRedash のクエリの代わりに Python を使い、データを集計して表にして出力する方法。その際の注意点\n\n テンプレート\n最終的にテンプレートとして使えるコード。今後はこれを Fork して使っていく。以下、この解説。コードはこの3つの構成に分かれる\n\n\n\n項目\nやっていること\n\n\n\n\nget_columns\n列の定義。列名や型を定義する\n\n\nget_rows\n表示するデータを取得する\n\n\nresult\nデータを実際に Redsah で表示する\n\n\n\n\nテンプレート\ndef get_columns():\n    return [\n        [ ...",
          "link": "https://zenn.dev/readyfor_blog/articles/bbcbff90944ef3",
          "publishedOn": "2023-04-14T13:26:06.000Z",
          "wordCount": 1227,
          "title": "Redash で Python を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3crrei-s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redash%2520%25E3%2581%25A7%2520Python%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:READYFOR%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520Urano%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4NzU2YzZmODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mjc4cmctNW5XWmtONUxyZi1DUXVsRVVvZjgzLWxpZnh6a29NSWY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3crrei-s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redash%2520%25E3%2581%25A7%2520Python%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:READYFOR%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shohei%2520Urano%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4NzU2YzZmODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mjc4cmctNW5XWmtONUxyZi1DUXVsRVVvZjgzLWxpZnh6a29NSWY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/unico417/articles/57a92695a901d8",
          "author": "Unico417",
          "description": "SQLite と MySQL って何が違うの？\nまずは、MySQL と SQLite の違いをサックリ紹介します。\nでもあなたの調べごとの目的が「始め方」なら読み飛ばしていいです。\n\n 管理の違い\nMySQL は、データベースを複数作ることができます。\nユーザ機能もあり、その権限に応じたテーブルやデータベースが閲覧・編集可能になります。\nSQLiteは、一つのデータベースに対して一つのファイルが作成されます。\nユーザ機能等はなく、全てのテーブルにアクセス・編集することができます。\n\n アクセス方法の違い\nMySQL は、管理するプログラムを起動し、そのプログラムに対して要求を送信する...",
          "link": "https://zenn.dev/unico417/articles/57a92695a901d8",
          "publishedOn": "2023-04-14T10:33:08.000Z",
          "wordCount": 474,
          "title": "【Python】MySQLとSQLiteの違いと、始めかた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ikxbWwV0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591MySQL%25E3%2581%25A8SQLite%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E3%2580%2581%25E5%25A7%258B%25E3%2582%2581%25E3%2581%258B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Unico417%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVlGQ1puQS1mVDVCVzJpel9KeGR6OUFEUVFDN3JuVkZ4UHQyZlBjdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ikxbWwV0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591MySQL%25E3%2581%25A8SQLite%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E3%2580%2581%25E5%25A7%258B%25E3%2582%2581%25E3%2581%258B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Unico417%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVlGQ1puQS1mVDVCVzJpel9KeGR6OUFEUVFDN3JuVkZ4UHQyZlBjdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/baa664fb624f05",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-201 B - Do you know the second highest mountain?\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringListRow(N):\n    return [list(input().split()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    x = getStringListRow(n)\n\n    y = dict()\n    z = []\n    for s, t in x:\n  ...",
          "link": "https://zenn.dev/hyperdb/articles/baa664fb624f05",
          "publishedOn": "2023-04-14T07:31:25.000Z",
          "wordCount": 400,
          "title": "［AtCoder］ABC-201｜B - Do you know the second highest mountain?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Fe7ecId9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CB%2520-%2520Do%2520you%2520know%2520the%2520second%2520highest%2520mount...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Fe7ecId9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CB%2520-%2520Do%2520you%2520know%2520the%2520second%2520highest%2520mount...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7a68bbbe94502a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-201 A - Tiny Arithmetic Sequence\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    l = getIntList()\n    a, b, c = sorted(l)\n\n    print('Yes' if b * 2 == a + c else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7a68bbbe94502a",
          "publishedOn": "2023-04-14T07:31:25.000Z",
          "wordCount": 283,
          "title": "［AtCoder］ABC-201｜A - Tiny Arithmetic Sequence",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ecigDakq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CA%2520-%2520Tiny%2520Arithmetic%2520Sequence%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ecigDakq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-201%25EF%25BD%259CA%2520-%2520Tiny%2520Arithmetic%2520Sequence%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/acorn/articles/2de2c42758ff89",
          "author": "Mr.Acorn",
          "description": "今回は今話題のPy Scriptを使ってみます！！\n\n Py Scriptとは\nPy ScriptとはなんとhtmlにPythonを埋め込めるというものなのです！！ある日JavaScriptについて調べていたら出てきたので、以前も紹介した我が友人staff roi君に教えたら「そんなの機能が少ないぜ」と言われました。それからずっと忘れていたのですが、ふと思いついて調べてみたらこれがすごい！！Pythonは本当に少ししかかじっていないので簡単な例を紹介します。\n\n 実際に使ってみた\nなんと結構簡単にこれが使えるんですよ。インストールの必要がなく、headタグ内に\n<link rel=...",
          "link": "https://zenn.dev/acorn/articles/2de2c42758ff89",
          "publishedOn": "2023-04-13T14:54:41.000Z",
          "wordCount": 528,
          "title": "今話題のPy Script",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--z1DRhEC1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:%25E4%25BB%258A%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEPy%2520Script%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mr.Acorn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WWYyajFyeGNCM3ZMUzUyd29BbU9qbGpwTXFSbG1DdkVac2lja1k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--z1DRhEC1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:%25E4%25BB%258A%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEPy%2520Script%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mr.Acorn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WWYyajFyeGNCM3ZMUzUyd29BbU9qbGpwTXFSbG1DdkVac2lja1k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}