{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/kumamoto/articles/0596ed47f33965",
          "author": "Kumamoto-Hamachi",
          "description": "gRPCの4つの通信方式の理解を深めるため実際に実装を行っていきます。\n既にGo言語で書かれた記事が多くあったので本記事ではPythonで進めていきます。\nコードはGitHubのKumamoto-Hamachi/rpc_practiceのzenn-articleブランチ側に今回の記事のコードを上げています。またmainブランチには発展的な内容として複数Servicerがある場合のコードも上げてあります。\n本記事ではクライアント側の実装も行っていきますが、実際の開発でgRPCの動作確認をする際にはevansやBloomRPC等のツールを利用するのが楽なのでオススメです。\n※evansやBl...",
          "link": "https://zenn.dev/kumamoto/articles/0596ed47f33965",
          "publishedOn": "2022-11-29T00:55:28.000Z",
          "wordCount": 3521,
          "title": "gRPCの4つの通信方式をPythonでやってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dSGkVfcy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kumamoto-Hamachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:gRPC%25E3%2581%25AE4%25E3%2581%25A4%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E6%2596%25B9%25E5%25BC%258F%25E3%2582%2592Python%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0ycDhvc0FrWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzM2JiOGEyZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dSGkVfcy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kumamoto-Hamachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:gRPC%25E3%2581%25AE4%25E3%2581%25A4%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E6%2596%25B9%25E5%25BC%258F%25E3%2582%2592Python%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0ycDhvc0FrWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzM2JiOGEyZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/paraches/articles/codility_lesson_9_16",
          "author": "paraches",
          "description": "前回の続き。\n今回はLesson 9〜16までのeasyをやって行きます。\n\n リポジトリ\nhttps://github.com/paraches/codility_lessons\n\n Lesson 9 Maximum slice problem\n最大スライス問題\n\n MaxProfit\nhttps://app.codility.com/programmers/lessons/9-maximum_slice_problem/max_profit/\n\n 問題\n配列AにはN個の整数が含まれている。これには連続したN日分の株価が収められている。\n0<=P<Q<Nの時、P日に買...",
          "link": "https://zenn.dev/paraches/articles/codility_lesson_9_16",
          "publishedOn": "2022-11-28T09:56:04.000Z",
          "wordCount": 3538,
          "title": "CodilityのLessonをやってみる（9-16）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QbIsvyc1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:paraches%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Codility%25E3%2581%25AELesson%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%25889-16%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cxR24wTFd4eDlBT2RidTBjSDNDaGswVnhoNG83RHJQa1N1cHQyYlE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QbIsvyc1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:paraches%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Codility%25E3%2581%25AELesson%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%25889-16%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cxR24wTFd4eDlBT2RidTBjSDNDaGswVnhoNG83RHJQa1N1cHQyYlE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kn1kn1/articles/48a2aeb34a2037",
          "author": "kn1kn1",
          "description": "概要\n表記の件でワークアラウンドコードを書いて回避したので、その備忘録。\n\n 事象\n以下のようなコードで、ランダムフォレストの学習モデルをONNXに変換しようとしたところ、AttributeError: 'numpy.bool_' object has no attribute 'encode'  のエラーが発生した。\nfrom sklearn.ensemble import RandomForestClassifier\n\nclassifier = RandomForestClassifier(\n    n_estimators = 5,\n    random_state = 42,...",
          "link": "https://zenn.dev/kn1kn1/articles/48a2aeb34a2037",
          "publishedOn": "2022-11-28T04:13:24.000Z",
          "wordCount": 269,
          "title": "sklearn-onnxで、RandomForestClassifierの出力がboolのときにエラーになる件",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--m6NDCHao--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kn1kn1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:sklearn-onnx%25E3%2581%25A7%25E3%2580%2581RandomForestClassifier%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2581%258Cbool%25E3%2581%25AE%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1TdXVlVmFjWi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlYWI2YjE4ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--m6NDCHao--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kn1kn1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:sklearn-onnx%25E3%2581%25A7%25E3%2580%2581RandomForestClassifier%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2581%258Cbool%25E3%2581%25AE%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1TdXVlVmFjWi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlYWI2YjE4ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryurock/articles/qiita-20151127-4c560143134121905328",
          "author": "ryurock",
          "description": "きっとansibleに限らずなんだけども設定ファイルなどでファイルの先頭行に文字列を追加したい時があると思う。\n(設定ファイルの設定の順番で挙動で変わるものとか)\n今まではCentOSであんまり気にしなかったけどもどうやらOSXではうまく行かなかったのでその時のメモ\nそして@urauraさんのやり方が一番シンプルだったことに気づいた・・・・\n\n 環境\n\nMac OSX Yosemite(10.10.5)\n\npython 2.7.10\n\nansible 1.9.4\n\n\n\n\n\n\n ファイルの先頭行に文字列を追加するplaybook\n~/.zshrc に挿入したい文字列が存在しなければ .zs...",
          "link": "https://zenn.dev/ryurock/articles/qiita-20151127-4c560143134121905328",
          "publishedOn": "2022-11-28T02:37:28.000Z",
          "wordCount": 181,
          "title": "【ansible】ファイルの先頭行に文字列を追加するplaybookの例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dEhSan3X--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590ansible%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2585%2588%25E9%25A0%25AD%25E8%25A1%258C%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258Bplaybook%25E3%2581%25AE%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dEhSan3X--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590ansible%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2585%2588%25E9%25A0%25AD%25E8%25A1%258C%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258Bplaybook%25E3%2581%25AE%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryurock/articles/qiita-20151126-5231aa038acef2732e90",
          "author": "ryurock",
          "description": "昔のバージョンに比べて大分便利(自分の書き方が古く)になってきたので、自分のdotfileの管理をansibleに切り替えて色々触ってみた時のメモ\n\n 環境\n\nMac OSX Yosemite(10.10.5)\n\npython 2.7.10\n\nansible 1.9.4\n\n\n\n\n\n\n 参考にしたサイト\n\nAnsible-docs Best Practices\nAnsible-docs All Modules\nAnsible コーディング規約 (の例)\n\n\n Best Practicesのディレクトリレイアウトは目を通す\n色んなリポジトリを見ていると結構色んなディレクトリ構成でansibl...",
          "link": "https://zenn.dev/ryurock/articles/qiita-20151126-5231aa038acef2732e90",
          "publishedOn": "2022-11-28T02:37:28.000Z",
          "wordCount": 477,
          "title": "【ansible】僕がansibleを書くときに気をつけている事",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juc5lhF1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590ansible%25E3%2580%2591%25E5%2583%2595%25E3%2581%258Cansible%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juc5lhF1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590ansible%25E3%2580%2591%25E5%2583%2595%25E3%2581%258Cansible%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryurock/articles/qiita-20151120-639e5f7e49d25c3b6d75",
          "author": "ryurock",
          "description": "Ansibleのshell moduleを使用してコマンド結果のみをregisterに保存しておきたい時がある\n自分の場合はログインShellがzshなのかbashなのかを調べたくてこんなタスクを書いた\n- name: check using shell register in file path\n  shell: |\n      if [ `echo $SHELL | grep -c \"zsh\"` -eq 1 ]; then\n        echo \".zshrc\"\n      elif [ `echo $SHELL | grep -c \"bash\"` -eq 1 ]; then\n ...",
          "link": "https://zenn.dev/ryurock/articles/qiita-20151120-639e5f7e49d25c3b6d75",
          "publishedOn": "2022-11-28T02:37:27.000Z",
          "wordCount": 395,
          "title": "【ansible】強制的にchangedを発生させない方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cpOimIUU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590ansible%25E3%2580%2591%25E5%25BC%25B7%25E5%2588%25B6%25E7%259A%2584%25E3%2581%25ABchanged%25E3%2582%2592%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2595%25E3%2581%259B%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cpOimIUU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590ansible%25E3%2580%2591%25E5%25BC%25B7%25E5%2588%25B6%25E7%259A%2584%25E3%2581%25ABchanged%25E3%2582%2592%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2595%25E3%2581%259B%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryurock/articles/qiita-20150205-b4db10a7989603d6bf8d",
          "author": "ryurock",
          "description": "CSVのダミーデータを作る場合、巷にダミー作成サイトは沢山ありますが\n大概の場合は日本語に対応されていません。\nそこでPythonの Faker を使用してCSVダミーデータを日本語で作成した時のメモ\n\n 環境\n\nOSX 10.9.5\n\n\n 参考にしたサイト\n\nfake-factoryでダミーデータ生成\n\njoke2k/faker\n\n\n 事前準備に必要なもの\n\npython 2.6.9 (で試しました。他はわかりません・・・)\npip\n\n\n Fakerのインストール\n\n/path/to/hoge\npip install fake-factory\n\n\n Fakerは日本語対応していません\n...",
          "link": "https://zenn.dev/ryurock/articles/qiita-20150205-b4db10a7989603d6bf8d",
          "publishedOn": "2022-11-28T02:37:23.000Z",
          "wordCount": 829,
          "title": "Fakerを使用して日本語を含んだCSVダミーファイルを作成する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HOwjKGqc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Faker%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0CSV%25E3%2583%2580%25E3%2583%259F%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HOwjKGqc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Faker%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0CSV%25E3%2583%2580%25E3%2583%259F%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryurock/articles/qiita-20140226-bb412e02981168e49a2d",
          "author": "ryurock",
          "description": "ryurock/ansible-installer\nAnsibleの関係でpythonを入れる時にyyuu/pyenv-installerってのを見つけて、にゃるほどと思いansibleを入れる時も同じ要領で作っておけば楽チンだと思いまして作ってみました。\n作ったばっかなので自己責任でお願いします。(キリッ!!)\n\n 環境\n\nosx\nLinux\n\n\n 注意事項\n\nPythonのインストールでpyenv-installerを使用しています。pyenvを既にお使いの方はpython2.6.9がインストールされますのでご注意ください。globalも2.6.9になります。\n\n\n 参考にしたサイト...",
          "link": "https://zenn.dev/ryurock/articles/qiita-20140226-bb412e02981168e49a2d",
          "publishedOn": "2022-11-28T02:34:54.000Z",
          "wordCount": 167,
          "title": "Ansible-installerってのを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i1xnvgaC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ansible-installer%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i1xnvgaC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ansible-installer%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryurock/articles/qiita-20131220-9cd0aee66003eba482e4",
          "author": "ryurock",
          "description": "Advent Calendar初参加です。\nガクガクプルプルしています。(((( ；ﾟДﾟ))))ｶﾞｸｶﾞｸﾌﾞﾙﾌﾞﾙ\nプロビジョニングフレームワークの中でも比較的ユルっとフワッと始められるAnsible\nでもあなたがもしDevなら導入にあたりOpsの説得が必要です。\nそんなときにAnsibleの導入で謙る、ごねるネタをいくつかご紹介します。\n\n 対象者\n最近流行のプロビジョニングフレームワークを導入したい！！って方。\n\n でも、それって結構インフラ担当者から嫌がられる事が多いんですよね。\nそりゃあ、普段あまりプログラムを書かない人達に\n\n 「プログラムを書いて自動化できるんですよ！...",
          "link": "https://zenn.dev/ryurock/articles/qiita-20131220-9cd0aee66003eba482e4",
          "publishedOn": "2022-11-28T02:34:53.000Z",
          "wordCount": 252,
          "title": "Ansibleを導入したい人の為のくどきポイント",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--62i3iQ7m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ansible%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E7%2582%25BA%25E3%2581%25AE%25E3%2581%258F%25E3%2581%25A9%25E3%2581%258D%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--62i3iQ7m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryurock%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ansible%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E7%2582%25BA%25E3%2581%25AE%25E3%2581%258F%25E3%2581%25A9%25E3%2581%258D%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MnVaZFk1ME5weXdTM0hZZm1Icnl3VktKX3UtSkhlQUd0V09vUjU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/ae6fed0b15218b",
          "author": "Tokoroteen",
          "description": "1. 概要\nこちらの記事の焼き直しです。\nPythonで作ったWebアプリをHeroku上でデプロイしていましたが、2022/11で無料プランが終了することとなりました。そこで、Renderに移行しようと思いましたが、無料プランでは上手く動いてくれませんでした。\n色々探していたところ、学生向けに1年間有料プランをタダで使わせてくれる制度があることを発見しましたのでそちらを活用していきます。\nHerokuは学生向けに$156奢ってくれるみたいです。\n\nIf you are registered with the GitHub Student Developer Pack, you ar...",
          "link": "https://zenn.dev/tokoroteen/articles/ae6fed0b15218b",
          "publishedOn": "2022-11-28T02:11:31.000Z",
          "wordCount": 295,
          "title": "【学生向け】Herokuをタダで使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aOfGNzl0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%25AD%25A6%25E7%2594%259F%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Heroku%25E3%2582%2592%25E3%2582%25BF%25E3%2583%2580%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aOfGNzl0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%25AD%25A6%25E7%2594%259F%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Heroku%25E3%2582%2592%25E3%2582%25BF%25E3%2583%2580%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryutaro_h/articles/b028995914f085",
          "author": "Ryutaro",
          "description": "初めに\nエンジニアとして働き始めてから数ヶ月経ち業務に携わる中で、コード設計について学ぶ必要性があると思い、「良いコード/悪いコードで学ぶ設計入門 ―保守しやすい 成長し続けるコードの書き方」を手に取り、学んでいます。本記事はこちらを参考に書いています。\n今回は 「凝集度」 について、概念と低凝集の問題点。対する高凝集にするテクニック、について取り上げます。\n\n\n 前提\n\n 凝集度とは\n\n凝集度とは、「モジュール(クラス)内における、データとロジックの関係性の強さを表す指標です\n\nそれぞれ凝集度が高い・低いとは以下の構造を表します。\n\n\n凝集度が高い(高凝集): クラス内のデータと、...",
          "link": "https://zenn.dev/ryutaro_h/articles/b028995914f085",
          "publishedOn": "2022-11-28T01:28:19.000Z",
          "wordCount": 425,
          "title": "[コード設計]高凝集な設計を目指す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rEWi2SeZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryutaro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%255B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A8%25AD%25E8%25A8%2588%255D%25E9%25AB%2598%25E5%2587%259D%25E9%259B%2586%25E3%2581%25AA%25E8%25A8%25AD%25E8%25A8%2588%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RTGdza19qdi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rEWi2SeZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryutaro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%255B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A8%25AD%25E8%25A8%2588%255D%25E9%25AB%2598%25E5%2587%259D%25E9%259B%2586%25E3%2581%25AA%25E8%25A8%25AD%25E8%25A8%2588%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RTGdza19qdi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221127_statistical_index",
          "author": "SiganAI",
          "description": "データを分析する際に使用する指標の算出方法および指標が指し示す内容について備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードは，ここからダウンロード可能．\n分析するデータはrandomモジュールによりランダムに作成した．\n\n 準備\n必要なライブラリをインストールする．\n\nterminal\npip install numpy\npip install scipy\n\n\n 算出方法\n\n 分析対象のデータをランダム作成\nPythonの標準ライブラリであるrandomモジュールを使用する．\n分析対象の配列targetの配列長を変数lengthで制御する．\n以下に...",
          "link": "https://zenn.dev/siganai/articles/20221127_statistical_index",
          "publishedOn": "2022-11-27T13:58:24.000Z",
          "wordCount": 1190,
          "title": "【Python】データ分析に用いる指標の算出方法について【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Rj2QbjpL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AB%25E7%2594%25A8%25E3%2581%2584%25E3%2582%258B%25E6%258C%2587%25E6%25A8%2599%25E3%2581%25AE%25E7%25AE%2597%25E5%2587%25BA%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Rj2QbjpL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AB%25E7%2594%25A8%25E3%2581%2584%25E3%2582%258B%25E6%258C%2587%25E6%25A8%2599%25E3%2581%25AE%25E7%25AE%2597%25E5%2587%25BA%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/welliving/articles/b24a95c498707c",
          "author": "Ryo YOSHI",
          "description": "この記事について\n米国CPIデータを取得するPythonのコードの記事の続きです。\n\n 時系列モデル\n差分系列を可視化します。\npx.line(cpi.diff().reset_index(),\n    x=\"DATE\",\n    y=\"CPIAUCNS\"\n)\n\n変化率を可視化します。\npx.line(cpi.pct_change().reset_index(),\n    x=\"DATE\",\n    y=\"CPIAUCNS\"\n)\n\nstatsmodelsの状態空間モデルのUnobservedComponentを使います。\nimport statsmodels.api as sm\nlo...",
          "link": "https://zenn.dev/welliving/articles/b24a95c498707c",
          "publishedOn": "2022-11-27T09:43:55.000Z",
          "wordCount": 665,
          "title": "Pythonで米国CPIの時系列分析",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PGPRs2J2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E7%25B1%25B3%25E5%259B%25BDCPI%25E3%2581%25AE%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PGPRs2J2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E7%25B1%25B3%25E5%259B%25BDCPI%25E3%2581%25AE%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/welliving/articles/3c0a5919806907",
          "author": "Ryo YOSHI",
          "description": "この記事について\nUnited Nations(国際連合)のPopulation Division　World Population Prospectsから世界の人口データをPythonで取得します。\n\n Pythonのコード\nzipファイルはそのままread_csvで読み込めます。\nimport pandas as pd\n\npopulation = pd.read_csv(\"https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2022_TotalPopulationB...",
          "link": "https://zenn.dev/welliving/articles/3c0a5919806907",
          "publishedOn": "2022-11-27T02:43:37.000Z",
          "wordCount": 389,
          "title": "世界の人口データを取得するPythonのコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--buYInl1e--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25B8%2596%25E7%2595%258C%25E3%2581%25AE%25E4%25BA%25BA%25E5%258F%25A3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--buYInl1e--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25B8%2596%25E7%2595%258C%25E3%2581%25AE%25E4%25BA%25BA%25E5%258F%25A3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/datahaikuninja/articles/with-lambda-monitoring-logical-replication",
          "author": "datahaikuninja",
          "description": "概要\nLambda(Python)で以下の処理（関数）を書いたので、備忘録として記事にします。\na. pg8000を使用して、LambdaからPostgreSQLデータベースへ接続し、論理レプリケーションの統計情報を取得する\n\nb. boto3を使用して、LambdaからCloudWatch Logsにクエリを発行してエラーログを抽出する\n\nc. slack_sdkを使用して、LambdaからSlackにメッセージを投稿し、スレッドにスニペット（ファイル）を追加する\nLambda(Python)あるいは、boto3でこれらの処理を書きたい人には参考になるところがあるかもしれません。\n...",
          "link": "https://zenn.dev/datahaikuninja/articles/with-lambda-monitoring-logical-replication",
          "publishedOn": "2022-11-27T02:13:03.000Z",
          "wordCount": 4975,
          "title": "Lambda(Python)でAurora PostgreSQL論理レプリケーションを監視して、Slackにアラート通知する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yqMm5neh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:datahaikuninja%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Lambda%2528Python%2529%25E3%2581%25A7Aurora%2520PostgreSQL%25E8%25AB%2596%25E7%2590%2586%25E3%2583%25AC%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E7%259B%25A3%25E8%25A6%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581Slack%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2588%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0zeTFMaERDSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yqMm5neh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:datahaikuninja%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Lambda%2528Python%2529%25E3%2581%25A7Aurora%2520PostgreSQL%25E8%25AB%2596%25E7%2590%2586%25E3%2583%25AC%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E7%259B%25A3%25E8%25A6%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581Slack%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2588%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0zeTFMaERDSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/datahaikuninja/articles/deploy-python-lambda-function-with-only-terraform",
          "author": "datahaikuninja",
          "description": "概要\nLambda関数(Python)とLambdaレイヤーをterraformだけでデプロイする方法を紹介します。\n\n 背景\n\n やりたかったこと\nTerraformでLambda関数(Python)とLambdaレイヤーを作成してデプロイしたい。\n関数コードやレイヤー(requirements.txt)の変更をトリガーにZipアーカイブを作成し、Lambda関数およびLambdaレイヤーを最新の状態に更新したい。\n\n 困っていたこと\nTerraformのaws_lambda_functionによって、Lambda関数の各種設定を定義し、関数をデプロイすることができるが、関数コード...",
          "link": "https://zenn.dev/datahaikuninja/articles/deploy-python-lambda-function-with-only-terraform",
          "publishedOn": "2022-11-27T02:13:03.000Z",
          "wordCount": 1088,
          "title": "Lambda(Python)をTerraformだけでデプロイする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WAf7bDac--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:datahaikuninja%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Lambda%2528Python%2529%25E3%2582%2592Terraform%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0zeTFMaERDSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WAf7bDac--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:datahaikuninja%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Lambda%2528Python%2529%25E3%2582%2592Terraform%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0zeTFMaERDSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/welliving/articles/69a0e38a9a2886",
          "author": "Ryo YOSHI",
          "description": "この記事について\nFREDから米国CPIデータをPythonで取得します。\n\n Pythonのコード\npandas_datareaderを使います。\nなお、FREDのAPIを使う場合はfredapiというライブラリもあります。\nimport datetime\nimport pandas_datareader.data as web\n\nstart = datetime.datetime(1950, 1, 1)\nend = datetime.datetime(2022, 10, 31)\n(季節調整前)CPIを取得します。\ncpi = web.DataReader('CPIAUCNS', ...",
          "link": "https://zenn.dev/welliving/articles/69a0e38a9a2886",
          "publishedOn": "2022-11-27T01:34:02.000Z",
          "wordCount": 281,
          "title": "米国CPIデータを取得するPythonのコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QHqtcspi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B1%25B3%25E5%259B%25BDCPI%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QHqtcspi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B1%25B3%25E5%259B%25BDCPI%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/9595ad9bc60bb2",
          "author": "JboyHashimoto",
          "description": "Dashとは何か?\nPlotly社が開発したPythonのオープンソースライブラリで、React、Plotli.jsで作られているとのこと。\nPythonのコードを書くだけで、Webアプリを作ることができる。\n公式ドキュメントはこちら\nhttps://dash.plotly.com/introduction\n必要なPythonのパッケージをインストールする。作るものによってPandasを追加でインストールしたりする。\npip install dash\n今回は、UIの部品となるコンポーネントをmain.pyで作成しています。\nDash HTML Componentsパッケージなどのクラ...",
          "link": "https://zenn.dev/joo_hashi/articles/9595ad9bc60bb2",
          "publishedOn": "2022-11-25T13:38:07.000Z",
          "wordCount": 868,
          "title": "Dashについて学ぶ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ffASyK3o--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JboyHashimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Dash%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03OHBTWjJfay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0Mzc4MDdhZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ffASyK3o--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JboyHashimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Dash%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03OHBTWjJfay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0Mzc4MDdhZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/paraches/articles/codility_lesson_5_8",
          "author": "paraches",
          "description": "前回の続き。\n今回はLesson 5〜8までのeasyをやって行きます。\n\n リポジトリ\nhttps://github.com/paraches/codility_lessons\n\n Lesson 5 Prefix Sums\n最初に合計？\n\n PassingCars\nhttps://app.codility.com/programmers/lessons/5-prefix_sums/passing_cars/\n\n 問題\nN個の整数で満たされた配列Aがある。配列Aの連続した要素は道路上に連なる車を表している。\n配列Aには0か1のみ含まれる。\nそれぞれが表すのは以下の通り\n\n0は東に向かう車...",
          "link": "https://zenn.dev/paraches/articles/codility_lesson_5_8",
          "publishedOn": "2022-11-25T07:47:13.000Z",
          "wordCount": 4541,
          "title": "CodilityのLessonをやってみる（5-8）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4etgTuhA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:paraches%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Codility%25E3%2581%25AELesson%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%25885-8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cxR24wTFd4eDlBT2RidTBjSDNDaGswVnhoNG83RHJQa1N1cHQyYlE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4etgTuhA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:paraches%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Codility%25E3%2581%25AELesson%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%25885-8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cxR24wTFd4eDlBT2RidTBjSDNDaGswVnhoNG83RHJQa1N1cHQyYlE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takeguchi/articles/672ff3b34753a7",
          "author": "tttakeh",
          "description": "YOLOで使えそうな物体検出用のデータセットを探していたとき、roboflow で偶然面白そうな画像分類のデータセットを発見しました。じゃんけんの手の画像から、「グー」、「チョキ」、「パー」を予測するというものです。\n実際にディープラーニングのモデルを作成し、予測を行ってみました。\nhttps://public.roboflow.com/classification/rock-paper-scissors\n\n データのロード\n上記のリンクから直接ダウンロードしてもいいのですが、私は以下のコマンドで zip形式でダウンロードして解凍しました。\ncurl -L \"https://public...",
          "link": "https://zenn.dev/takeguchi/articles/672ff3b34753a7",
          "publishedOn": "2022-11-25T06:59:19.000Z",
          "wordCount": 6548,
          "title": "じゃんけん画像を分類してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qlR1RB62--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tttakeh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2581%2598%25E3%2582%2583%25E3%2582%2593%25E3%2581%2591%25E3%2582%2593%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E5%2588%2586%25E9%25A1%259E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1INUtKbWZNMC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZTI3YWE0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qlR1RB62--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tttakeh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2581%2598%25E3%2582%2583%25E3%2582%2593%25E3%2581%2591%25E3%2582%2593%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E5%2588%2586%25E9%25A1%259E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1INUtKbWZNMC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZTI3YWE0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/minamik/articles/362dc62d99984d",
          "author": "minamik",
          "description": "所感\nなぜautomatic1111とdreambooth-extentionでtorchのcudaバージョンが違うのだ…\nそれぞれ実行するたびに再インストールしてくれるので、環境壊しまくってくれる。\n以下はその辺りをどうにかした記録。\n\n 前提\n\nNVIDIA RTX A6000\nWindows 10 Pro Workstation 21H2\nAnaconda 22.9.0\nautomatic1111 [828438b]\n\n\n 環境構築手順\n\nautomatic1111をClone\n\n(base) > git clone https://github.com/AUTOMATI...",
          "link": "https://zenn.dev/minamik/articles/362dc62d99984d",
          "publishedOn": "2022-11-25T06:34:27.000Z",
          "wordCount": 618,
          "title": "dreambooth with xformers on windowsで苦労したやつ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AkMpA0T9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minamik%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:dreambooth%2520with%2520xformers%2520on%2520windows%25E3%2581%25A7%25E8%258B%25A6%25E5%258A%25B4%25E3%2581%2597%25E3%2581%259F%25E3%2582%2584%25E3%2581%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SaUp0RG0zby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2M2E4MTkzNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AkMpA0T9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minamik%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:dreambooth%2520with%2520xformers%2520on%2520windows%25E3%2581%25A7%25E8%258B%25A6%25E5%258A%25B4%25E3%2581%2597%25E3%2581%259F%25E3%2582%2584%25E3%2581%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SaUp0RG0zby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2M2E4MTkzNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/optfit/articles/fd622027e73e0e",
          "author": "OptFit",
          "description": "概要\n「故障などのリスクを伴う、現場へのハード設置は最小限にしたい」派で、できることは極力クラウドでやりたいと考えている私ですが、エッジデバイスを全国各地に配置しないとどうしようも無い事案が発生したため、泣く泣く現場へエッジデバイス追加設置をする事になりました。\nこんにちは。OptFit CTOの荒川です。\n現場へのハード設置は故障などのリスクとともに運用コストが跳ね上がることが想定されたので、運用コストを極力かけないようにするためのツールを探していたところ、弊社見習いエンジニアのりょりょりょがbalenaCloudなる遠隔エッジデバイス管理ツールを共有してくれました。\n備忘録と社内...",
          "link": "https://zenn.dev/optfit/articles/fd622027e73e0e",
          "publishedOn": "2022-11-25T02:45:00.000Z",
          "wordCount": 760,
          "title": "泣く泣く現場へ追加設置した、エッジデバイス(ラズパイ)をbalenaCloudで管理",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VEXMFtEN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:OptFit%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E6%25B3%25A3%25E3%2581%258F%25E6%25B3%25A3%25E3%2581%258F%25E7%258F%25BE%25E5%25A0%25B4%25E3%2581%25B8%25E8%25BF%25BD%25E5%258A%25A0%25E8%25A8%25AD%25E7%25BD%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2581%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%2528%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%2529%25E3%2582%2592balenaCloud%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1DYzJZdjJTRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTNkYmUyMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VEXMFtEN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:OptFit%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E6%25B3%25A3%25E3%2581%258F%25E6%25B3%25A3%25E3%2581%258F%25E7%258F%25BE%25E5%25A0%25B4%25E3%2581%25B8%25E8%25BF%25BD%25E5%258A%25A0%25E8%25A8%25AD%25E7%25BD%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2581%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%2528%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%2529%25E3%2582%2592balenaCloud%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1DYzJZdjJTRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTNkYmUyMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit09",
          "author": "derwind",
          "description": "目的\n量子回路のエラー訂正に「Shor の符号」というものがあるらしいので、効果を体感してみたい。体感なのでつまり、数式で追いかけるのはやめて、適当に雑音の入る回路をシミュレートしてシミュレータで回して満足するところまでを実行する。\n\n 眺める回路\n量子コンピューティング 基本アルゴリズムから量子機械学習まで か Quantum error correction で見る事ができる回路で確認する。\n最終的には以下を実装する:\n\nちゃんと実装できれば、1 回のビット反転、1 回の位相反転、或はその両方が同時に起こるケースを検出してエラー訂正できる、らしい。\n\n 回路を作る\nとりあえず、必...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit09",
          "publishedOn": "2022-11-24T17:09:16.000Z",
          "wordCount": 1401,
          "title": "Qiskit で遊んでみる (9) — Shor の符号",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5jrbQNrN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25289%2529%2520%25E2%2580%2594%2520Shor%2520%25E3%2581%25AE%25E7%25AC%25A6%25E5%258F%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5jrbQNrN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25289%2529%2520%25E2%2580%2594%2520Shor%2520%25E3%2581%25AE%25E7%25AC%25A6%25E5%258F%25B7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yunkai/articles/866cd3beec7ece",
          "author": "yunkai",
          "description": "PyTorchの公式チュートリアルを読みました。\nデータさえあれば、PyTorchを使って、簡単に機械学習ができそうです。\n以下、読みながら書いたメモです。\n\n Quick start\n\n Data\ntorch.utils.data.DataLoaderを使えばデータをロード（前処理）できる。\nTorchText, TorchVision, TorchAudioなどが学習用のデータセットを持っていて、ダウンロードしてくれる。\n\n Model\ntorch.nnを使えばモデルを作れる。\nimport torch.nn as nn\n\nclass NeuralNetwork(nn.Module)...",
          "link": "https://zenn.dev/yunkai/articles/866cd3beec7ece",
          "publishedOn": "2022-11-24T14:07:05.000Z",
          "wordCount": 1360,
          "title": "PyTorchの公式入門を読む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pwb4VFXI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yunkai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:PyTorch%25E3%2581%25AE%25E5%2585%25AC%25E5%25BC%258F%25E5%2585%25A5%25E9%2596%2580%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01TlJLUy02ZS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzNzM4OTUxNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pwb4VFXI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yunkai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:PyTorch%25E3%2581%25AE%25E5%2585%25AC%25E5%25BC%258F%25E5%2585%25A5%25E9%2596%2580%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01TlJLUy02ZS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzNzM4OTUxNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/d61e296fa9d86c",
          "author": "nakamura196",
          "description": "Google ColabでTesseractを動かすノートブックを作成しました。日本語にも対応しています。参考になりましたら幸いです。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/Tesseractを試す.ipynb\n末尾に、hocrファイルをalto形式のxmlファイルに変換するフローも紹介しています。具体的には、以下のツールを使用しています。\nhttps://digi.bib.uni-mannheim.de/ocr-fileformat/\n参考になりましたら幸いです。",
          "link": "https://zenn.dev/nakamura196/articles/d61e296fa9d86c",
          "publishedOn": "2022-11-24T09:49:43.000Z",
          "wordCount": 92,
          "title": "Google ColabでTesseractを動かす（日本語対応）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fhwy8-ja--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Colab%25E3%2581%25A7Tesseract%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fhwy8-ja--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Colab%25E3%2581%25A7Tesseract%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/scytherjs/articles/99148efdb0ec73",
          "author": "Scythercas",
          "description": "始めに\nこちらの参考書でPythonを勉強しています。\nChapter6第2部に組み込み関数が大量に紹介されていたので、触ってみるついでに紹介していきます！\n\n 紹介！\nではどうぞ！\nマイルールで見出しレベル調整してたら見づらくなったかもしれません。右のナビゲーションを参考にしてください...\n難しめな用語の脚注も載せておりますのでご覧ください。\n\n 1. 計算\n\n 1-1. 絶対値を返す\nabs(x)\nabs(-10) # 10\nabs(-0) # 0\n複素数の絶対値を求めるためにも使える。\nabs(complex(1, 2)) # 2.23606797749979\n# compl...",
          "link": "https://zenn.dev/scytherjs/articles/99148efdb0ec73",
          "publishedOn": "2022-11-24T00:28:47.000Z",
          "wordCount": 5656,
          "title": "【Python】Pythonの主な組み込み関数31個について、全て例を交えて解説する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fdZwDaW9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Scythercas%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E3%2580%2591Python%25E3%2581%25AE%25E4%25B8%25BB%25E3%2581%25AA%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E9%2596%25A2%25E6%2595%25B031%25E5%2580%258B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E5%2585%25A8%25E3%2581%25A6%25E4%25BE%258B%25E3%2582%2592%25E4%25BA%25A4%25E3%2581%2588%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhNdGxZa2JCTW1ob3NwYUVROHRoOGV5LWttMFhoWXJyYWhDRUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fdZwDaW9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Scythercas%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E3%2580%2591Python%25E3%2581%25AE%25E4%25B8%25BB%25E3%2581%25AA%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E9%2596%25A2%25E6%2595%25B031%25E5%2580%258B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E5%2585%25A8%25E3%2581%25A6%25E4%25BE%258B%25E3%2582%2592%25E4%25BA%25A4%25E3%2581%2588%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhNdGxZa2JCTW1ob3NwYUVROHRoOGV5LWttMFhoWXJyYWhDRUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sunbluesome/articles/775ffd67fb7454",
          "author": "sunbluesome",
          "description": "GPT-2[1]を理解したい記事です。\nGPT-2は一言でいえば超巨大なGPTです。論文タイトルにある通り、教師なしでマルチタスクが実行可能であることを示した論文になります。\n\n GPT-2モデルの凄いポイント\n\nWebtextというデータセットを自分たちで作ってしまった。\nモデルが巨大（ちなみに、GPT-3はさらに桁違いに巨大）\nゼロショット設定で様々なタスクをこなせることを示した。\n\n\n 背景\nGPTによって、モデルのアーキテクチャを変えることなく様々なタスクを実行できることが証明されました。\nしかし、GPTはファインチューニングを必要とする点で完全な教師なし学習ではありませんでした...",
          "link": "https://zenn.dev/sunbluesome/articles/775ffd67fb7454",
          "publishedOn": "2022-11-23T15:15:13.000Z",
          "wordCount": 1358,
          "title": "GPT-2を理解したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cMYrsFpZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sunbluesome%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:GPT-2%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MWRDbDU0eFNmUVhIYXZqMmF3Rm5NZzFGMUVNaEs1dmYwVDhPNlk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cMYrsFpZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sunbluesome%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:GPT-2%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MWRDbDU0eFNmUVhIYXZqMmF3Rm5NZzFGMUVNaEs1dmYwVDhPNlk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/naoji/articles/unity-ml-agents-0010",
          "author": "naoji",
          "description": "はじめに\nプロフィールにUnity歴6年と書いておきながら、Unityネタがなかったのでml-agentsを題材に記事を書いてみました。m1 macだとインストールからつまづきましたので、そこまで備忘としてまとめます。最終的にはShqnDさんの記事のおかげで動くようになりました（ありがとうございました😆！）。\nhttps://qiita.com/ShqnD/items/471d9950a0e072a4cb65\n\n ml-agentsとは\nゲームの敵キャラの動きなどをAIでチューニングする仕組みです。\nhttps://unity.com/ja/products/machine-lear...",
          "link": "https://zenn.dev/naoji/articles/unity-ml-agents-0010",
          "publishedOn": "2022-11-23T13:13:47.000Z",
          "wordCount": 308,
          "title": "Unity ml-agentsを動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1PbsRctJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:naoji%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Unity%2520ml-agents%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Pb2ZwYlNxeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiYzNlNDRlODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1PbsRctJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:naoji%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Unity%2520ml-agents%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Pb2ZwYlNxeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiYzNlNDRlODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/jcc/articles/e19ecccec692ce",
          "author": "jc",
          "description": "Pythonデコレータを利用する場合、@decoratorというSyntactic Sugarを関数やメソッドの先頭に付けるのが一般的ですが、なぜ便利なのかいまいち理解できていないので、調べてみました。\nデコレータの詳細は公式ドキュメントあるいは他の方がすでに紹介されているので、本記事では割愛します。ちなみにおすすめの記事はこちらです。\nhttps://rednafi.github.io/digressions/python/2020/05/13/python-decorators\nまず適当に文字列の両側に<b>を追加してくれる簡単なデコレータを書きましょう。num_bは片方...",
          "link": "https://zenn.dev/jcc/articles/e19ecccec692ce",
          "publishedOn": "2022-11-23T11:28:12.000Z",
          "wordCount": 595,
          "title": "PythonデコレータのSyntactic Sugarなぜ便利かを理解した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iz8qrsa8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AESyntactic%2520Sugar%25E3%2581%25AA%25E3%2581%259C%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%258B%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Qd0ZXRHU1NC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iz8qrsa8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AESyntactic%2520Sugar%25E3%2581%25AA%25E3%2581%259C%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%258B%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Qd0ZXRHU1NC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/naoji/articles/m1-mac-setting-0010",
          "author": "naoji",
          "description": "はじめに\n以下のリンクにあります通り、既に多くの方々がインストールに成功していますが、私の環境にインストールしたときに色々つまづきましたので備忘としてまとめます。\nhttps://qiita.com/chipmunk-star/items/90931fb5180b8024adcb\nhttps://www.mk-tech20.com/tensorflow/\nhttps://storikai.hatenablog.com/entry/2022/05/24/010217\n\n インストールした環境\n16インチ MacBook Pro 2021にインストールしました。スペックは以下になります。...",
          "link": "https://zenn.dev/naoji/articles/m1-mac-setting-0010",
          "publishedOn": "2022-11-23T08:02:15.000Z",
          "wordCount": 550,
          "title": "m1 macにTensorFlowをインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Y0bBZ63P--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:naoji%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:m1%2520mac%25E3%2581%25ABTensorFlow%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Pb2ZwYlNxeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiYzNlNDRlODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Y0bBZ63P--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:naoji%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:m1%2520mac%25E3%2581%25ABTensorFlow%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Pb2ZwYlNxeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiYzNlNDRlODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/884naoki/articles/8afd5aa9630952",
          "author": "Hayashi Naoki",
          "description": "経緯\nGoogleDriveにあげたソースコードをGoogleColaboratoryにマウントして実行しようとした\n\nsrc.py\n# GoogleDriveにあるソースコード\nimport matplotlib.pyplot as plt\n\n#省略\n\nplt.imshow(image)\n\n\nColaboratory\n# GoogleColaboratoryのセル\n!python3 src.py\n\n上のように記述したが、Colaboratoryの出力に画像は表示されず…\n\n ちなみに、Colaboratoryのセルに直接コードを書いた場合\n\n期待通り、imshow　で　Colabo...",
          "link": "https://zenn.dev/884naoki/articles/8afd5aa9630952",
          "publishedOn": "2022-11-23T07:38:00.000Z",
          "wordCount": 177,
          "title": "【GoogleColaboratory】Pythonファイルからplt.imshowするとき…",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BpaMdz1Q--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hayashi%2520Naoki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590GoogleColaboratory%25E3%2580%2591Python%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589plt.imshow%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E2%2580%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1QZ09wSU1tUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5YTkzMTRlMGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BpaMdz1Q--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hayashi%2520Naoki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590GoogleColaboratory%25E3%2580%2591Python%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589plt.imshow%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E2%2580%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1QZ09wSU1tUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5YTkzMTRlMGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nigimitama/articles/2022-11-23-docker-example-for-jupyterlab",
          "author": "mitama",
          "description": "データ分析環境をコンテナで管理したい事が多いのでメモ\n\n ファイル構成\n入れたいライブラリはrequirements.txtに記入済みという想定\n.\n├── Dockerfile\n├── docker-compose.yml\n└── requirements.txt\n\n ファイルの中身\n\n Dockerfile\n\nDockerfile\nFROM python:3\nWORKDIR /workdir\n\n# cmakeが必要なライブラリを入れる場合\n# RUN apt update && apt install cmake -y\n\n# ライブラリのインストール\nRUN /usr...",
          "link": "https://zenn.dev/nigimitama/articles/2022-11-23-docker-example-for-jupyterlab",
          "publishedOn": "2022-11-23T06:00:00.000Z",
          "wordCount": 327,
          "title": "JupyterLabを動かすだけのDocker環境の構築例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uZ56078L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mitama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JupyterLab%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AEDocker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gwZHZiWTg0aVd4ZGU4cU1Db2FFTWZ0Zk9SVWJncko1cDFtTjlSR3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uZ56078L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mitama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JupyterLab%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AEDocker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gwZHZiWTg0aVd4ZGU4cU1Db2FFTWZ0Zk9SVWJncko1cDFtTjlSR3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/1b01290de0edfb",
          "author": "shimo",
          "description": "他の検討でスロットルしてしまってLambdaが動かないことがあり、確認できるように作りました。\n\n全リージョンをec2のdescribe_regionsで受け取る\nリージョンごとに全関数をlist_functionsで取り出す\n\n一度に50までしか表示できない。NextMarkerがある場合は続きがあるので追加でlist_functionsする\n\n\nget_function_concurrencyでReservedConcurrentExecutionsがあるか調べる。設定なければNoneになっている。スロットルの場合はReservedConcurrentExecutions==0\n\n\n...",
          "link": "https://zenn.dev/shimo_s3/articles/1b01290de0edfb",
          "publishedOn": "2022-11-22T23:31:29.000Z",
          "wordCount": 543,
          "title": "スロットルされていないかを全Lambdaに対して確認するboto3スクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HBIpAPP2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B9%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AB%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2584%25E3%2581%258B%25E3%2582%2592%25E5%2585%25A8Lambda%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2597%25E3%2581%25A6%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258Bboto3%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HBIpAPP2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B9%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AB%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2584%25E3%2581%258B%25E3%2582%2592%25E5%2585%25A8Lambda%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2597%25E3%2581%25A6%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258Bboto3%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/powerword/articles/c0c8441af25280",
          "author": "Powerword",
          "description": "環境\nWindows10\nPython3.10.1\npyenv + venvで仮想環境を構築し，PyQt5によるGUIアプリを実行しようとした\n\n エラー\n<仮想環境名>/Scripts/Activate.ps1\nで仮想環境に入り，\npython main.py\nで実行しようとしたところ以下のエラーが出た．\nqt.qpa.plugin: Could not find the Qt platform plugin \"windows\" in \"\"\nThis application failed to start because no Qt platform plugin co...",
          "link": "https://zenn.dev/powerword/articles/c0c8441af25280",
          "publishedOn": "2022-11-22T11:34:03.000Z",
          "wordCount": 174,
          "title": "【Python】pyenv-win+venvで環境構築したときPyQt5でエラーが出る問題",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PeUIwPcj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Powerword%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E3%2580%2591pyenv-win%25E2%2581%25BAvenv%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258DPyQt5%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dTeWpDQmx4MHNiTVVoU0t1ZV8yZkdpRDdSUnNSbjRlWFdzYUNHM1BjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PeUIwPcj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Powerword%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E3%2580%2591pyenv-win%25E2%2581%25BAvenv%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258DPyQt5%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dTeWpDQmx4MHNiTVVoU0t1ZV8yZkdpRDdSUnNSbjRlWFdzYUNHM1BjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/paraches/articles/codility_lesson_1_4",
          "author": "paraches",
          "description": "CodilityのLessonをやり始めたのでメモ。\n今回は取り敢えずLesson 1〜4までのeasyで。\n\n リポジトリ\nhttps://github.com/paraches/codility_lessons\n\n Lesson 1 Iterations\n各レッスンに大枠の表題があるのだけど、微妙に理解できないものもある。\nレッスン1はイテレーション。\n\n BinaryGap\nhttps://app.codility.com/programmers/lessons/1-iterations/binary_gap/\n\n 問題\n与えられた整数Nを2進表記して1に挟まれた連続する0の数が一...",
          "link": "https://zenn.dev/paraches/articles/codility_lesson_1_4",
          "publishedOn": "2022-11-22T10:18:03.000Z",
          "wordCount": 2323,
          "title": "CodilityのLessonをやってみる（1-4）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oR1NrK5n--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:paraches%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Codility%25E3%2581%25AELesson%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%25881-4%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cxR24wTFd4eDlBT2RidTBjSDNDaGswVnhoNG83RHJQa1N1cHQyYlE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oR1NrK5n--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:paraches%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Codility%25E3%2581%25AELesson%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%25881-4%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cxR24wTFd4eDlBT2RidTBjSDNDaGswVnhoNG83RHJQa1N1cHQyYlE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryuta_kojima/articles/948481c0ff6986",
          "author": "コジ",
          "description": "はじめに\nこんにちは、コジです！本日はガラスの成分数値を使って教師なし学習のクラスタリングを行なっていこうと思います！\nクラスタリングはアルゴリズムを使って機械にグルーピングしてもらうことですね。ガラスの成分数値なんて見ても僕は違いがわからないので、機械に任せてしまおうと思います！\n今回は実装して、結果の可視化を目標にやっていきます！よろしくお願いします！\n\n クラスタリングについて\nデータのレコードにはカラム（列）がありますよね。例えば100個カラムがあったとしたら、そのレコードは100次元の点の一つです。それぞれの点の距離が近いものを一つのグループとして扱う、また点、もしくはグル...",
          "link": "https://zenn.dev/ryuta_kojima/articles/948481c0ff6986",
          "publishedOn": "2022-11-22T10:02:51.000Z",
          "wordCount": 1723,
          "title": "【教師なし学習】ガラスの成分でクラスタリングしてみよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cVLkI3bH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25B3%25E3%2582%25B8%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%2595%2599%25E5%25B8%25AB%25E3%2581%25AA%25E3%2581%2597%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2591%25E3%2582%25AC%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E6%2588%2590%25E5%2588%2586%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MGpPMUNYQ08xRGtfNjFMTW56M09PTDhHNFFwaEQxdF82YmNnRUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cVLkI3bH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25B3%25E3%2582%25B8%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%2595%2599%25E5%25B8%25AB%25E3%2581%25AA%25E3%2581%2597%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2591%25E3%2582%25AC%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E6%2588%2590%25E5%2588%2586%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MGpPMUNYQ08xRGtfNjFMTW56M09PTDhHNFFwaEQxdF82YmNnRUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tatsu24/articles/e197dfab34f428",
          "author": "Tatsu24",
          "description": "はじめに\nRaspberryPiのPython環境をPyenvとPoetryで作ったのでその備忘録的な記事です。\n!\nPyenv、Poetryそれぞれに関する細かい説明はしていません。これらの詳しいコマンドは各自調べてください🙏\n\n\n 環境\n\n端末: Raspberry Pi　4\n\nOS: Raspberry Pi OS\n\n\nラズパイOSは各自ググって入れましょう。\n\n Pyenvの環境構築\n\n Pyenvのインストール\nGithubに従ってインストールします。\n$ git clone https://github.com/pyenv/pyenv.git ~/.pyenv\n$ cd ...",
          "link": "https://zenn.dev/tatsu24/articles/e197dfab34f428",
          "publishedOn": "2022-11-22T09:30:18.000Z",
          "wordCount": 974,
          "title": "RaspberryPiのPython環境をPyenv+Poetryで作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--phDoDh5B--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsu24%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:RaspberryPi%25E3%2581%25AEPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Pyenv%25E2%2581%25BAPoetry%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UaHZLQWhNSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkYWZiZTk0NGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--phDoDh5B--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsu24%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:RaspberryPi%25E3%2581%25AEPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Pyenv%25E2%2581%25BAPoetry%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UaHZLQWhNSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkYWZiZTk0NGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/arafipro/books/python-plotly-chart",
          "author": "Hiroki Chiyoda",
          "description": "Pythonとplotlyを使ってチャートを表示する方法を説明します。\n私は株式投資を行なっていてプログラミングを勉強するきっかけになりました。\n主に取引している米国株を題材にプログラミングの例を作成しています。\n\nまた記事の更新も随時行って行きたいと思います。",
          "link": "https://zenn.dev/arafipro/books/python-plotly-chart",
          "publishedOn": "2022-11-22T06:33:49.000Z",
          "wordCount": 65,
          "title": "Pythonとplotlyを使ってローソク足チャートを表示する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HZ0IRJpR--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81MDM4NzVhYjg0LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HZ0IRJpR--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81MDM4NzVhYjg0LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/konboi/articles/aa1f05ba2fd2d9",
          "author": "Konboi",
          "description": "表隊の通り以下のようなテストコードを書いた際に Github Actions の Windows 環境で Permission Error になってしまう。\nwith tempfile.NamedTemporaryFile() as f:\n    ...\n解決策としては削除処理を自前でしてあげると回避できる。\ntmp = tempfile.NamedTemporaryFile()\n...\n\ntmp.close()\nos.unlink(tmp.name) # os.removeでもおそらくOK\n何回かハマったのでメモしておく。",
          "link": "https://zenn.dev/konboi/articles/aa1f05ba2fd2d9",
          "publishedOn": "2022-11-22T05:35:08.000Z",
          "wordCount": 159,
          "title": "Github ActionsのWindows環境でtempfile.NamedTemporaryFileがパーミッションエラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dIUPl4BA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Konboi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Github%2520Actions%25E3%2581%25AEWindows%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7tempfile.NamedTemporaryFile%25E3%2581%258C%25E3%2583%2591%25E3%2583%25BC%25E3%2583%259F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hlandsMzBqclV4VG5PQVRGNHFWdGY4aTJyT1BaVU5qa2gtT3dNcE5JPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dIUPl4BA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Konboi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Github%2520Actions%25E3%2581%25AEWindows%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7tempfile.NamedTemporaryFile%25E3%2581%258C%25E3%2583%2591%25E3%2583%25BC%25E3%2583%259F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hlandsMzBqclV4VG5PQVRGNHFWdGY4aTJyT1BaVU5qa2gtT3dNcE5JPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kn1kn1/articles/99f49946ea0f2c",
          "author": "Kenichi Kanai",
          "description": "概要\nApache Beam JavaからPythonの処理を呼び出す例について、以前に Apache Beam Java multi-language pipelines quickstart メモ - zennで試したが、scikit-learnの処理を呼び出す例がBeamのExampleに追加されていたので試してみた。https://github.com/kn1kn1/beam-example-multi-language-sklern に最終的に動作したプロジェクトを格納した。\n\n 手順\n基本的には、https://github.com/apache/beam/tree/ma...",
          "link": "https://zenn.dev/kn1kn1/articles/99f49946ea0f2c",
          "publishedOn": "2022-11-22T04:24:37.000Z",
          "wordCount": 1034,
          "title": "Apache Beam JavaからRunInterfaceでscikit-learnの処理を呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9CnCWz-d--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kenichi%2520Kanai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Apache%2520Beam%2520Java%25E3%2581%258B%25E3%2582%2589RunInterface%25E3%2581%25A7scikit-learn%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmVONkU0czZjc1NRYkUwYlNqNGhQVktacy1QX3R3UGUwQ21yRlc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9CnCWz-d--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kenichi%2520Kanai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Apache%2520Beam%2520Java%25E3%2581%258B%25E3%2582%2589RunInterface%25E3%2581%25A7scikit-learn%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmVONkU0czZjc1NRYkUwYlNqNGhQVktacy1QX3R3UGUwQ21yRlc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kn1kn1/articles/4aadd3bb4eeb14",
          "author": "Kenichi Kanai",
          "description": "概要\nApache BeamのJavaのパイプラインからPythonの処理を呼び出すことのできるJava multi-language pipelinesの簡単な例（ https://beam.apache.org/documentation/sdks/java-multi-language-pipelines/ ）を実行したのだが、環境を作るのに少々煩雑であったので、そのメモ。\n\n 経緯\nApache Beamの2.40.0からRunInference transformが導入され、Apache Beam PythonではPyTorchとscikit-learnのモデルが直接サポー...",
          "link": "https://zenn.dev/kn1kn1/articles/4aadd3bb4eeb14",
          "publishedOn": "2022-11-22T00:36:31.000Z",
          "wordCount": 1326,
          "title": "Apache Beam Java multi-language pipelines quickstart メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UvkGWGC7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kenichi%2520Kanai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Apache%2520Beam%2520Java%2520multi-language%2520pipelines%2520quickstart%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmVONkU0czZjc1NRYkUwYlNqNGhQVktacy1QX3R3UGUwQ21yRlc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UvkGWGC7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kenichi%2520Kanai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Apache%2520Beam%2520Java%2520multi-language%2520pipelines%2520quickstart%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmVONkU0czZjc1NRYkUwYlNqNGhQVktacy1QX3R3UGUwQ21yRlc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tmemo/articles/c4f72ed7520a81",
          "author": "tree",
          "description": "SECCON2022 Easylfiの問題について取り組んだので、以下記録します。\nCTF初心者なので内容に間違いがあるかもしれません。ご注意ください。\nA. 問題の説明\nB. 取り組んだ過程（結果解けず）\nC. 答え（自力で解けなかったのでWriteup見た内容）\nD. 深堀　追加の検討\n\n A．問題の説明\nseccon 2022 easylfiの問題について記載します。\n大会終了後の画面キャプチャ。\nこう見てみると解けている人が多く簡単な問題だったようですね。\n\n主催者側から提供されているdocker-composeを起動してアクセスした初期画面。\n名前を入力してSubmitするだけ...",
          "link": "https://zenn.dev/tmemo/articles/c4f72ed7520a81",
          "publishedOn": "2022-11-21T15:13:47.000Z",
          "wordCount": 1628,
          "title": "seccon2022 easylfi",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TYP0FkRf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tree%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:seccon2022%2520easylfi%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1LdW9HMHpvVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MjUxNTcwMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TYP0FkRf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tree%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:seccon2022%2520easylfi%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1LdW9HMHpvVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MjUxNTcwMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/67fa0cee7b2b2a",
          "author": "nakamura196",
          "description": "Google CloudのVertex AIのworkbenchを使用した際、HuggingFaceのTrainer()が開始されない事象に遭遇しました。\nこの件について、以下のページで同様の不具合が報告されていました。\nhttps://stackoverflow.com/questions/73415068/huggingface-trainer-does-nothing-only-on-vertex-ai-workbench-works-on-colab\n当初、以下のような「PyTorch」の環境を選んでいましたが、この環境で上記の不具合が生じました。\n\nそこで、上記の記事にある通り...",
          "link": "https://zenn.dev/nakamura196/articles/67fa0cee7b2b2a",
          "publishedOn": "2022-11-21T13:32:03.000Z",
          "wordCount": 112,
          "title": "Vertex AIのworkbenchを使用した際、HuggingFaceのTrainer()が開始されない事象への対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j9jyK9mD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Vertex%2520AI%25E3%2581%25AEworkbench%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2580%2581HuggingFace%25E3%2581%25AETrainer%2528%2529%25E3%2581%258C%25E9%2596%258B%25E5%25A7%258B%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E4%25BA%258B%25E8%25B1%25A1%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j9jyK9mD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Vertex%2520AI%25E3%2581%25AEworkbench%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2580%2581HuggingFace%25E3%2581%25AETrainer%2528%2529%25E3%2581%258C%25E9%2596%258B%25E5%25A7%258B%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E4%25BA%258B%25E8%25B1%25A1%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryuapp/articles/8a01d08518cff6",
          "author": "ryu",
          "description": "結論\n\n根本的な解決ではないが、Anacondaで環境構築をやり直したら解消した。\n\n\n\n 環境\nUbuntu Desktop 22.04.1 LTS\nPython 3.10.6\nJupyterNotebook 6.4.8\n\n どうなっていたか\n下記のようなマウスカーソルに関わる関数が動かなかった。\npyautogui.moveTo(100, 100)\npyautogui.click()\n\n 原因\n突き止められていないが、今回は自力で環境構築を行おうとした結果このような不具合に遭遇した。特に理由が無ければAnacondaなどのプラットフォームに頼って、Pythonの実行環境は整えた方...",
          "link": "https://zenn.dev/ryuapp/articles/8a01d08518cff6",
          "publishedOn": "2022-11-21T06:58:56.000Z",
          "wordCount": 140,
          "title": "pyautoguiでマウスを動かせなくて詰まったところ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iQ7mfVFP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pyautogui%25E3%2581%25A7%25E3%2583%259E%25E3%2582%25A6%25E3%2582%25B9%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A6%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1leUo5bmg5ZS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxODIzYTZiMDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iQ7mfVFP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pyautogui%25E3%2581%25A7%25E3%2583%259E%25E3%2582%25A6%25E3%2582%25B9%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A6%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1leUo5bmg5ZS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxODIzYTZiMDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/e29624334e90bf",
          "author": "nakamura196",
          "description": "概要\nResourceSyncのPythonライブラリである「py-resourcesync」を試したので、その備忘録です。\nhttps://github.com/resourcesync/py-resourcesync\n\n セットアップ\ngit clone https://github.com/resourcesync/py-resourcesync\ncd py-resourcesync\npython setup install\n\n 実行\n\n resourcelist\nまず、出力用のresource_dirディレクトリを作成します。カレントディレクトリにex_resource_di...",
          "link": "https://zenn.dev/nakamura196/articles/e29624334e90bf",
          "publishedOn": "2022-11-21T00:27:26.000Z",
          "wordCount": 732,
          "title": "ResourceSyncのPythonライブラリを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IlvHuxIh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ResourceSync%25E3%2581%25AEPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IlvHuxIh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ResourceSync%25E3%2581%25AEPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit07",
          "author": "derwind",
          "description": "目的\nWSL2 で cuQuantum (1) という大変素晴らしい記事があったので、内容を踏まえつつ Ubuntu 環境で Qiskit Aer の GPU 対応ビルド、とりわけ cuQuantum 対応をビルドしたい。\n以下はすべて Turinig アーキテクチャの T4 で試した。本来は Volta や Ampere アーキテクチャでマルチ GPU などをすると本領を発揮するらしい。\n\n Docker を使う\n流石にホスト環境を汚しながら実行する勇気もないので docker を使う。\nFROM nvidia/cuda:11.8.0-devel-ubuntu20.04\n\nENV ...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit07",
          "publishedOn": "2022-11-20T15:57:07.000Z",
          "wordCount": 1470,
          "title": "Qiskit で遊んでみる (7) — Qiskit Aer GPU",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xFw2hHRU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25287%2529%2520%25E2%2580%2594%2520Qiskit%2520Aer%2520GPU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xFw2hHRU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25287%2529%2520%25E2%2580%2594%2520Qiskit%2520Aer%2520GPU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ai_kody/articles/804797413007d1",
          "author": "AI_LEARN_SENDAI",
          "description": "はじめに\nPythonでの機械学習実装を学び始めています\nまずは必要となるライブラリのインポートについて。\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nそれぞれのライブラリの役割について、概ねこのように学びました\n\nNumpy：数値の計算を行うライブラリ\nPandas： データの操作を行うライブラリ\nMatplotlib： データの可視化を行うライブラリ\n\n一方で、なぜ、numpyとpandasはそのままインポートしているのに Matplotlibは.pyplotをインポートしているのか...",
          "link": "https://zenn.dev/ai_kody/articles/804797413007d1",
          "publishedOn": "2022-11-20T14:38:23.000Z",
          "wordCount": 470,
          "title": "なぜ、Matplotlib については .pyplot をインポートするのか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UQTHeBGx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:AI_LEARN_SENDAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%25AA%25E3%2581%259C%25E3%2580%2581Matplotlib%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AF%2520.pyplot%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FVFEyb0dVbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiMWFiMzRlYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UQTHeBGx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:AI_LEARN_SENDAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%25AA%25E3%2581%259C%25E3%2580%2581Matplotlib%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AF%2520.pyplot%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FVFEyb0dVbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiMWFiMzRlYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shiro46/articles/b0b1fc8151ff36",
          "author": "SHIRO",
          "description": "はじめに\n10パズル迷路というパズルゲーム系のWebアプリを作成しました。\nスタートからゴールまで迷路（ただのマス目？）をたどり、通ったマスの数字・記号をつなげて答えが10になる数式を作るというゲームです。\nhttps://10puzzle.tk\nケチな性分なので、なるべくコストをかけずに作成・公開することを目指しています。\n今回はコスト0円で公開までこぎつけましたので、その道のりを書き残しておきます。\n\n 自己紹介\nはじめまして、SHIROです。\n非エンジニア職なので、休日だけコードを書いています。特技は「車のナンバーを見て四則演算で10を作る」ことです。\nhttps://twit...",
          "link": "https://zenn.dev/shiro46/articles/b0b1fc8151ff36",
          "publishedOn": "2022-11-20T09:59:44.000Z",
          "wordCount": 307,
          "title": "【個人開発】パズルゲームを作ってコスト0円で公開した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MGYjmg80--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SHIRO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E3%2583%2591%25E3%2582%25BA%25E3%2583%25AB%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%25880%25E5%2586%2586%25E3%2581%25A7%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NUFpOOFNMOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MGYjmg80--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SHIRO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E3%2583%2591%25E3%2582%25BA%25E3%2583%25AB%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%25880%25E5%2586%2586%25E3%2581%25A7%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NUFpOOFNMOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sadahiroyoshi/articles/6d9c6382ab70ea",
          "author": "よしかわ",
          "description": "この記事に書くこと\n\n「おうむ返し」ライブラリの概要\n実装のポイント\n\n\n モチベーション\n現在、「今日のできごと」について話ができる音声対話システムについて\n社会人大学院で研究しています。\nそのうえで、研究の一環として、\n音声対話を実装する際の「間」をつなぐ仕組みを作りたいと思っていました。\nあと単純に、自然言語処理について深く知りたかったので、\nいろいろと手段を調べながら「おうむ返し」を実装しました。\n\n 「おうむ返し」ライブラリの概要\npythonライブラリを実装しました。\nhttps://github.com/sadahry/dialog-reflection\nライブラリを利...",
          "link": "https://zenn.dev/sadahiroyoshi/articles/6d9c6382ab70ea",
          "publishedOn": "2022-11-20T09:52:48.000Z",
          "wordCount": 1461,
          "title": "会話の「間」を持たせる「おうむ返し」の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QhUSVYZs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%258B%25E3%2582%258F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%25AE%25E3%2580%258C%25E9%2596%2593%25E3%2580%258D%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2582%258B%25E3%2580%258C%25E3%2581%258A%25E3%2581%2586%25E3%2582%2580%25E8%25BF%2594%25E3%2581%2597%25E3%2580%258D%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04a3pNaHY0TS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWQ0MDU5YTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QhUSVYZs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%258B%25E3%2582%258F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%25AE%25E3%2580%258C%25E9%2596%2593%25E3%2580%258D%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2582%258B%25E3%2580%258C%25E3%2581%258A%25E3%2581%2586%25E3%2582%2580%25E8%25BF%2594%25E3%2581%2597%25E3%2580%258D%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04a3pNaHY0TS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWQ0MDU5YTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sadahiroyoshi/articles/20013737993b75",
          "author": "よしかわ",
          "description": "この記事に書くこと\n日本語の活用変形ライブラリを実装しました。\nhttps://github.com/sadahry/katsuyo-text\nこの記事では、以下のことを書きます。\n\nライブラリの概要説明\n活用変形のロジック化の困難\n\n\n モチベーション\n対話システム研究の一環で「おうむ返し」を実装しました（詳細は別記事）\nその実装を進めるなかで活用変形が必要だったのですが、\n活用変形は決まったルールなのでロジックに落とし込めるのでは？ という仮説が浮かび、\n活用変形をロジックに落とし込めるかどうか、ライブラリ化を試みました。\n\n ライブラリの概要説明\nこのライブラリでは活用形を含む...",
          "link": "https://zenn.dev/sadahiroyoshi/articles/20013737993b75",
          "publishedOn": "2022-11-20T09:51:32.000Z",
          "wordCount": 920,
          "title": "日本語の活用変形のライブラリ化を試みた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S8k8Jg_5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%258B%25E3%2582%258F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E5%25A4%2589%25E5%25BD%25A2%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E5%258C%2596%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04a3pNaHY0TS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWQ0MDU5YTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S8k8Jg_5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%258B%25E3%2582%258F%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E5%25A4%2589%25E5%25BD%25A2%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E5%258C%2596%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04a3pNaHY0TS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWQ0MDU5YTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/flathill404/articles/6942c1858163fa",
          "author": "flathill404",
          "description": "はじめに\nみなさん技術記事はどこで読み漁っていますか？日本語のサイトだと今ならQiitaかZennといったところでしょうか？では英語のサイトなら？私は多くを知りませんが、DEVをよく巡回しています。\n今日も暇つぶしにDEVを適当に見物していたら、ふと「最もいいね数が多い記事が読んでみたいんじゃ」という気持ちになりました。しかし、いいね数でソートする機能は提供されていないようでした（もしあったらごめんなさい🙇）。ないなら自分で作ろうということでこの記事に至ります。\n\n API\nDEVではAPIが提供されています。ちなみに、DEVはOSSのForemによるサイトなので、「APIドキュメン...",
          "link": "https://zenn.dev/flathill404/articles/6942c1858163fa",
          "publishedOn": "2022-11-20T09:00:48.000Z",
          "wordCount": 5119,
          "title": "dev.toの記事をいいね数で並び替え一覧表示したいんじゃ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OXIKeQ3V--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:flathill404%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:dev.to%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%25E6%2595%25B0%25E3%2581%25A7%25E4%25B8%25A6%25E3%2581%25B3%25E6%259B%25BF%25E3%2581%2588%25E4%25B8%2580%25E8%25A6%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2582%2593%25E3%2581%2598%25E3%2582%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PQWpOcGVMRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkOGJmYzRkYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OXIKeQ3V--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:flathill404%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:dev.to%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%25E6%2595%25B0%25E3%2581%25A7%25E4%25B8%25A6%25E3%2581%25B3%25E6%259B%25BF%25E3%2581%2588%25E4%25B8%2580%25E8%25A6%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2582%2593%25E3%2581%2598%25E3%2582%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PQWpOcGVMRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkOGJmYzRkYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kaz_t/articles/e0362f9a3bcfb3",
          "author": "kaz-tk",
          "description": "はじめに\nみなさま、こんばんは\nSREのKazです。\nSREはSuper Rare Engineerの事です。\nすいません、嘘です。\nSite Reliability Engineeringのことです。\n私は、これまでCI/CDに関する書籍の執筆や、大規模なマイクロサービスの開発に関与してきて、またそれらのプロジェクトをスピーディに変革し、達成してきました。\nSREは、インフラエンジニアと同列に扱われることも多いのですが、実際はソフトウェアを書くシーンも多いです。\nソフトウェアの中身がわからないと、どの様にSite Reliabilityを担保すればよいのか？を考えることができないか...",
          "link": "https://zenn.dev/kaz_t/articles/e0362f9a3bcfb3",
          "publishedOn": "2022-11-19T14:18:46.000Z",
          "wordCount": 207,
          "title": "誰も教えてくれない、SRE流マイクロサービスの開発方法：はじめに",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ErU9xQUo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaz-tk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25AA%25B0%25E3%2582%2582%25E6%2595%2599%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2581SRE%25E6%25B5%2581%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%259A%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ErU9xQUo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaz-tk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25AA%25B0%25E3%2582%2582%25E6%2595%2599%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2581SRE%25E6%25B5%2581%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%259A%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/welliving/articles/88fa5cdf1488c2",
          "author": "Ryo YOSHI",
          "description": "この記事について\nFREDから米国FF金利データをPythonで取得します。\nWikipediaによると、フェデラル・ファンド金利(federal funds rate)は、米国の銀行が中央銀行に預けている準備預金を貸し借りする市場(フェデラル・ファンド市場)の金利です。日本の無担保コール翌日物金利に相当します。\n実効フェデラル・ファンド金利(effective federal funds rate)は、フェデラル・ファンド市場での金利を取引金額で重み付けした平均で、ニューヨーク連邦準備銀行が毎日9時頃に前日分を発表しています。\n米国の中央銀行である連邦準備銀行の統括機関である連邦準...",
          "link": "https://zenn.dev/welliving/articles/88fa5cdf1488c2",
          "publishedOn": "2022-11-19T13:12:29.000Z",
          "wordCount": 461,
          "title": "米国FF金利データを取得するPythonのコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bqC_y4H6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B1%25B3%25E5%259B%25BDFF%25E9%2587%2591%25E5%2588%25A9%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bqC_y4H6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B1%25B3%25E5%259B%25BDFF%25E9%2587%2591%25E5%2588%25A9%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/e8c1049ca540db",
          "author": "ShunDev",
          "description": "確率質量分布\nベルヌーイ試行をn 回行って成功する回数 X が従う確率分布として二項分布が知られている. 確率質量分布は以下である.\n\n\\begin{align*}\nBin(x | n, \\mu) &= \\binom{n}{x} \\mu^x (1-\\mu)^{1-x}\n\\\\\n\\text{where} \\; \\binom{n}{x} &\\equiv \\frac{n!}{x!(n-x)!}\\\\\n\\end{align*}\n\nただし, 試行回数, 成功回数, 成功率は以下を満たす.\n\n\\begin{align*}\nn &\\in \\R^+\\\\\nx &\\in \\{...",
          "link": "https://zenn.dev/shundeveloper/articles/e8c1049ca540db",
          "publishedOn": "2022-11-19T11:00:01.000Z",
          "wordCount": 2031,
          "title": "二項分布の期待値と分散, 最尤推定, 可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--U_3Qz-Sn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25BA%258C%25E9%25A0%2585%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E3%2581%25A8%25E5%2588%2586%25E6%2595%25A3%252C%2520%25E6%259C%2580%25E5%25B0%25A4%25E6%258E%25A8%25E5%25AE%259A%252C%2520%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--U_3Qz-Sn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25BA%258C%25E9%25A0%2585%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E3%2581%25A8%25E5%2588%2586%25E6%2595%25A3%252C%2520%25E6%259C%2580%25E5%25B0%25A4%25E6%258E%25A8%25E5%25AE%259A%252C%2520%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/f7f9069332a49e",
          "author": "ShunDev",
          "description": "きっかけ\nShunです. StreamlitというPythonフレームワークを御存じでしょうか? Streamlitを使うと美しい表やグラフを使ったアプリケーションを簡単に構築できます. 私自身もユーザーとして利用させていただいています. 興味を持たれた方は是非公式ドキュメントを確認して見てください.\nStreamlit\n2022年11月18日にstreamlit公式から以下の発表がありました. 「詳しい情報は以下のリンクを見てね！」とのことだったので確認することにしました.\n\n\n 何ができるようになったのか\n\n Community Cloudのアプリケーションが検索可能になった\n参...",
          "link": "https://zenn.dev/shundeveloper/articles/f7f9069332a49e",
          "publishedOn": "2022-11-19T08:36:10.000Z",
          "wordCount": 469,
          "title": "Streamlitのアプリケーションが検索可能になるらしいので試してみた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d1ErPfHK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Streamlit%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%258C%25E6%25A4%259C%25E7%25B4%25A2%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d1ErPfHK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Streamlit%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%258C%25E6%25A4%259C%25E7%25B4%25A2%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takunari_jp/articles/bebd36155a9191",
          "author": "Omori Takuya",
          "description": "この記事では、Djangoがデフォルトで備えている「新しいQuerySetsを返すメソッド」のうち、「filter()」について解説します。\n\n 公式ドキュメントを覗く 🫣\nhttps://docs.djangoproject.com/en/4.0/ref/models/querysets/\n公式ドキュメントにはこのように書かれています。\n\n filter(*args, **kwargs)\n\n与えられた検索パラメータに一致するオブジェクトを含む新しいクエリセットを返します。ルックアップパラメータ（**kwargs）は、ここ（本記事の内容）で説明されている形式でなければなりません。\n複数の...",
          "link": "https://zenn.dev/takunari_jp/articles/bebd36155a9191",
          "publishedOn": "2022-11-19T08:00:00.000Z",
          "wordCount": 661,
          "title": "【Django】QuerySetのfilter()を使いこなす！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f1ybIYrh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591QuerySet%25E3%2581%25AEfilter%2528%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f1ybIYrh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591QuerySet%25E3%2581%25AEfilter%2528%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/subaru_hello/articles/570e9e990374a6",
          "author": "subaru-hello",
          "description": "陸上競技場のサイトからPDFを取得してローカルに保存することを前編では取り扱いました。\n本記事では、前編 で取得したPDFの中身をcsvへ出力するプログラムを作成していきたいと思います。\nまた、別途必要になる下記ライブラリのインストール方法については本記事では取り扱いません。\n\npandas\ntabula\n\n\n 本記事で作るプログラム\n外部サイトからPDFを取得してcsvへ出力する際の戦略は下記の通りです。\n1~2は前編で取り扱いました。今回は3~4に関して取り扱っていきたいと思います。\n\nクローリング&スクレイピングでPDFのURLを取得\nPDFをローカルにダウンロード\nPDF...",
          "link": "https://zenn.dev/subaru_hello/articles/570e9e990374a6",
          "publishedOn": "2022-11-19T01:56:39.000Z",
          "wordCount": 1852,
          "title": "【python】PDFをスクレイピングして中身をCSVへ出力する（後編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5KhR4lVY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:subaru-hello%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590python%25E3%2580%2591PDF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592CSV%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E5%25BE%258C%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSU1ZEOHhyNG5oSFhxczdwcE5vSWx3MThxMGdaai1ETHh5a3RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5KhR4lVY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:subaru-hello%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590python%25E3%2580%2591PDF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592CSV%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E5%25BE%258C%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSU1ZEOHhyNG5oSFhxczdwcE5vSWx3MThxMGdaai1ETHh5a3RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yui/articles/dfab1b18c3f62e",
          "author": "yui",
          "description": "はじめに\n私事ですが11月12日に結婚式をあげました。\n私達夫婦はよく一緒にアプリを作っているので、今回もなにか一緒に作れないかと思い、余興のクイズアプリを作ることにしました。\nついでに席札もQRコードにして、webアプリ内でメッセージも入れれるようにしました。\n\n 作ったもの\nユーザーに配布用のサイトと、披露宴会場で投影する用のサイトの２つを作りました。\n\n ユーザーに配布用のサイト\n当日はこういう↓感じの席札を用意しました。\n\nこの席札は名刺サイズで印刷して一人ひとりラミネートしたのですが、地味に大変な作業でした。\nQRコードを読み取ると、以下DEMO動画のようなサイトが現れます...",
          "link": "https://zenn.dev/yui/articles/dfab1b18c3f62e",
          "publishedOn": "2022-11-19T01:30:00.000Z",
          "wordCount": 297,
          "title": "夫婦で結婚式の余興用クイズアプリを作った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CMa7GK4L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yui%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%25A4%25AB%25E5%25A9%25A6%25E3%2581%25A7%25E7%25B5%2590%25E5%25A9%259A%25E5%25BC%258F%25E3%2581%25AE%25E4%25BD%2599%25E8%2588%2588%25E7%2594%25A8%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wZi1oczcwNS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjMGIyNzFhZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CMa7GK4L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yui%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%25A4%25AB%25E5%25A9%25A6%25E3%2581%25A7%25E7%25B5%2590%25E5%25A9%259A%25E5%25BC%258F%25E3%2581%25AE%25E4%25BD%2599%25E8%2588%2588%25E7%2594%25A8%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wZi1oczcwNS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjMGIyNzFhZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/bilzard/articles/get-timeit-result",
          "author": "bilzard",
          "description": "概要\nipython notebookで%timeitの測定結果を分析する際、結果をpythonの変数から参照したくなる。ドキュメント[1]によれば、-oオプションをつけると取得できる。この記事では結果の処理方法を計測例とともに説明する。\n\n TimeitResult オブジェクトの構造\nresult = %timeit -o [i ** 2 for i in range(10_000)]\nresultはTimeitResultクラスのオブジェクト[2]。ドキュメントによると、以下のような属性を持つ[3]。\n\nloops: 1回の計測における対象の処理の反復回数\nrepeat: 計測...",
          "link": "https://zenn.dev/bilzard/articles/get-timeit-result",
          "publishedOn": "2022-11-19T00:00:00.000Z",
          "wordCount": 1144,
          "title": "%timeitの測定結果を処理する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MAEwFxQj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bilzard%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%2525timeit%25E3%2581%25AE%25E6%25B8%25AC%25E5%25AE%259A%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0xVkwwTTg0Ni0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5OTBiOThlMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MAEwFxQj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bilzard%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%2525timeit%25E3%2581%25AE%25E6%25B8%25AC%25E5%25AE%259A%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0xVkwwTTg0Ni0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5OTBiOThlMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221118_atcoder_practice",
          "author": "SiganAI",
          "description": "コンテスト名\nAtCoder Beginner Contest 276\n\n 記録\n\n 問題C\n\n提出記録\n\n所要時間\n一部RE（実行時エラー）になってしまった．\n原因は分かっていない．\n記事の最後にコードの最終版を掲載するので，有識者の意見を聞けたら嬉しい．\n\n 反省点\nググったら配列の要素外参照を疑ったほうが良いらしいけど．．．どこだ？\n\n コード（2022/11/18版）\n\npython\ndef first_input():\n    N = input()\n    return int(N)\n\ndef second_input(N):\n    P_list = []\n    p...",
          "link": "https://zenn.dev/siganai/articles/20221118_atcoder_practice",
          "publishedOn": "2022-11-18T14:35:52.000Z",
          "wordCount": 636,
          "title": "【AtCoder】練習記録【2022/11/18】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b3ZK35F6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590AtCoder%25E3%2580%2591%25E7%25B7%25B4%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%25E3%2580%25902022%252F11%252F18%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b3ZK35F6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590AtCoder%25E3%2580%2591%25E7%25B7%25B4%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%25E3%2580%25902022%252F11%252F18%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221114_atcoder_practice",
          "author": "SiganAI",
          "description": "コンテスト名\nAtCoder Beginner Contest 276\n\n 記録\n\n 問題B\n\n提出記録\n\n所要時間\n\n 反省点\n正解を求めることはできても処理時間超過になってしまった．\n（原因は関数を分割して作りすぎたことで繰り返し処理を複製していたこと）\n答えにたどり着くまでは割とスムーズにできた．",
          "link": "https://zenn.dev/siganai/articles/20221114_atcoder_practice",
          "publishedOn": "2022-11-18T14:35:51.000Z",
          "wordCount": 113,
          "title": "【AtCoder】練習記録【2022/11/14】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kcsgLlGF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590AtCoder%25E3%2580%2591%25E7%25B7%25B4%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%25E3%2580%25902022%252F11%252F14%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kcsgLlGF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590AtCoder%25E3%2580%2591%25E7%25B7%25B4%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%25E3%2580%25902022%252F11%252F14%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221112_atcoder_practice",
          "author": "SiganAI",
          "description": "コンテスト名\nAtCoder Beginner Contest 276\n\n 記録\n\n 問題A\n\n提出記録\n\n所要時間\n\n 反省点\nwhie文を使ったら無限ループになってしまった．\n（結局for文を使った）\n関数を意識的に作ることで，デバッグはやりやすかったと思う．",
          "link": "https://zenn.dev/siganai/articles/20221112_atcoder_practice",
          "publishedOn": "2022-11-18T14:35:51.000Z",
          "wordCount": 113,
          "title": "【AtCoder】練習記録【2022/11/12】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XHxdyIBl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590AtCoder%25E3%2580%2591%25E7%25B7%25B4%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%25E3%2580%25902022%252F11%252F12%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XHxdyIBl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590AtCoder%25E3%2580%2591%25E7%25B7%25B4%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%25E3%2580%25902022%252F11%252F12%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ringotabetai/articles/bda567558daadd",
          "author": "a",
          "description": "環境\nLinux ubuntu 22.04.0\n\n Pythonのバージョン確認する\npython3 -V\n\n マークダウンを保存してるディレクトリへ移動\ncd ~/Projects/XXXX/XXXXX\n\n pip install\npip install mkdocs\n\n ディレクトリ確認\nla -la\n\n mkdocs起動\nmkdocs \n\n server起動\nmkdocs serve\nhttps://localhost:8000  とか",
          "link": "https://zenn.dev/ringotabetai/articles/bda567558daadd",
          "publishedOn": "2022-11-18T09:34:09.000Z",
          "wordCount": 158,
          "title": "マークダウンをlocalhostでみたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8Ia7u0_K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:a%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2582%2592localhost%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FTVJEOXFFay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTg3ZGY4YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8Ia7u0_K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:a%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2582%2592localhost%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FTVJEOXFFay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTg3ZGY4YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/todoker/articles/2022-fastapi-pydantic-null-to-undefined",
          "author": "株式会社トドケール",
          "description": "はじめに\nこんにちは。@hayata-yamamotoです。\nFastAPI をベースにしたバックエンドを運用開発していくにあたり None の使用を伴う API 定義を行うと、None で指定した値が OpenAPI 定義上では Optional の扱いを受けてしまい、TypeScript 側で見ると undefined と見做されるという問題がありました。\n今回は、その OpenAPI 定義上の表記と、FastAPI の実際のレスポンスを整合させるために行った設定をご紹介します。\n\n 解決方法\nFastAPI で response_model_exclude_none を Tru...",
          "link": "https://zenn.dev/todoker/articles/2022-fastapi-pydantic-null-to-undefined",
          "publishedOn": "2022-11-18T05:17:32.000Z",
          "wordCount": 1009,
          "title": "FastAPI で None の値を null から undefined に変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--00P_ri03--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2588%25E3%2583%2589%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:FastAPI%2520%25E3%2581%25A7%2520None%2520%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%2520null%2520%25E3%2581%258B%25E3%2582%2589%2520undefined%2520%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zSllUMXA0Uy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5NDRlOWY2MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--00P_ri03--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2588%25E3%2583%2589%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:FastAPI%2520%25E3%2581%25A7%2520None%2520%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%2520null%2520%25E3%2581%258B%25E3%2582%2589%2520undefined%2520%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zSllUMXA0Uy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5NDRlOWY2MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/arkwknsk/articles/73650a926ce974",
          "author": "ARAKAWA Kensuke",
          "description": "Pythonから、動的にGlobal Shortcutを使ってオペレーターを参照する方法。OP名＋連番などのGlobal Shortcutなどを参照できるようになる。\n\n コード\ngetattr(op, opName)\ntargetOp = getattr(op, opName)\nPramaters\nopName: 取得したいOPのGlobal Shortcutの文字列\nReturns\ntargetOP: 取得されたOP\n\n サンプル\n\n\n ネットワークの解説\nネットワーク上の2つのBase OPにGlobal Shortcutでアクセスするサンプルです。\n以下のBase OPに、Glo...",
          "link": "https://zenn.dev/arkwknsk/articles/73650a926ce974",
          "publishedOn": "2022-11-17T21:23:52.000Z",
          "wordCount": 275,
          "title": "[TouchDesigner]PythonからGlobal Shortcutを参照",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aXWidFjD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ARAKAWA%2520Kensuke%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BTouchDesigner%255DPython%25E3%2581%258B%25E3%2582%2589Global%2520Shortcut%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tM0pyWW9vOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjUzZDI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aXWidFjD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ARAKAWA%2520Kensuke%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BTouchDesigner%255DPython%25E3%2581%258B%25E3%2582%2589Global%2520Shortcut%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tM0pyWW9vOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjUzZDI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mknc/articles/3485cace2d9e09",
          "author": "mknc",
          "description": "これ何？\n2つのディレクトリから差分ファイルのパス一覧を生成するスクリプト\n\n 作った経緯\n\"差分ファイル\"と\"追加ファイル\"のみ\"ディレクトリ構造を維持したまま\"抽出したい。\nしかしいい感じのツールが見つからない(需要はありそうだが)。\nさて困った。\n幸いにもPythonに良いモジュールが提供されていたのでスクリプトを自作することにした。\nimport filecmp\nimport sys\n\n# e.g.\n# python3 extract_diff_path.py bbb aaa |xargs -I{} cp --parents -r {} extract/\ndef extrac...",
          "link": "https://zenn.dev/mknc/articles/3485cace2d9e09",
          "publishedOn": "2022-11-17T15:42:50.000Z",
          "wordCount": 438,
          "title": "Pythonで差分ファイルの抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rIW5Ni2L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mknc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E5%25B7%25AE%25E5%2588%2586%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1FzM29YMGVoWVY3X1pCX2pBdnRYazVoNF9WVkVRaUpRMUtZM1A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rIW5Ni2L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mknc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E5%25B7%25AE%25E5%2588%2586%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1FzM29YMGVoWVY3X1pCX2pBdnRYazVoNF9WVkVRaUpRMUtZM1A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/datech/articles/095e4a0f00ff40",
          "author": "kushima",
          "description": "はじめに\n本記事では、Pythonを用いてFitbitのサーバから心拍数を取得する一連の流れを、OAuth 2.0 tutorial pageを経由させないで実装していく。また、FitbitのPython用のライブラリも今回は使っていない。今回実装するソースコードはgithub上に公開しているので、適宜確認してほしい。ただし、ソースコードは心拍数取得までの流れを主にしているので、実際に用いるためにアクセストークンの更新処理や、例外処理などのコードが足りていないことに注意する。\n\n 全体の流れ\n※この節のリンクはすべてFitbitの公式ドキュメント\n\nFitbitのアカウントを作成、ア...",
          "link": "https://zenn.dev/datech/articles/095e4a0f00ff40",
          "publishedOn": "2022-11-17T09:41:58.000Z",
          "wordCount": 1750,
          "title": "pythonでfitbitから心拍数を取得してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rIcyGHID--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kushima%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7fitbit%25E3%2581%258B%25E3%2582%2589%25E5%25BF%2583%25E6%258B%258D%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tU3QwLVBMVy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmMDM5ZjdmYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rIcyGHID--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kushima%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7fitbit%25E3%2581%258B%25E3%2582%2589%25E5%25BF%2583%25E6%258B%258D%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tU3QwLVBMVy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmMDM5ZjdmYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shugo/articles/tera_type_combination",
          "author": "yb3",
          "description": "はじめに\n明日にポケモン最新作の『ポケットモンスタースカーレット/バイオレット』(以下「ポケモン SV」)が遂に発売されますね。\n私はポケモンに向けて明日と週明けの21日に有給を取りました!!!\nポケモンSVで新しく導入される戦闘システムに「テラスタル」があります。これは全てのポケモンが本来持ってたタイプとは別にテラスタイプを持つことができ、任意のタイミングでテラスタイプに変更できるシステムです.\n\n\n今回は今までの2タイプの組み合わせに加えて、テラスタイプを考慮した場合に優秀なタイプの組み合わせをPythonで計算していきたいと思います.\n\n 計算方法の解説\n今回はグラフ理論を用い...",
          "link": "https://zenn.dev/shugo/articles/tera_type_combination",
          "publishedOn": "2022-11-17T06:59:00.000Z",
          "wordCount": 7556,
          "title": "テラスタルを考慮したタイプの組み合わせの優秀さをPythonで計算する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zMP88uL_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yb3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2586%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AB%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25AE%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%25AE%25E5%2584%25AA%25E7%25A7%2580%25E3%2581%2595%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XY0t0amNRXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmMjkxZTZiYTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zMP88uL_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yb3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2586%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AB%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25AE%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%25AE%25E5%2584%25AA%25E7%25A7%2580%25E3%2581%2595%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XY0t0amNRXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmMjkxZTZiYTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/labcode/books/3v5y3msrej7vu9",
          "author": "LabCode（ラボコード）",
          "description": "「手持ちのデータで時間-周波数解析をやってみたいけど，どう実装すればいいかわからない」，「「ウェーブレット変換」や「フーリエ変換」を聞いたことはあるけど，どう使ったらいいかわからない」といった経験をお持ちではありませんか？\n\n本書は，「使える時間-周波数解析の本」を目指して，時間-周波数解析で使用される「フーリエ変換」と「ウェーブレット変換」中心に簡単な理論的背景とその実装方法について解説したものです。\n\nPythonで実行できるコードとその解説をつけていますので，とりあえず動かしてみたい方にもおすすめです。\n\n【販売価格】\n期間限定で ¥2500→¥1000 (60% OFF!!)で販売しております！",
          "link": "https://zenn.dev/labcode/books/3v5y3msrej7vu9",
          "publishedOn": "2022-11-16T14:35:12.000Z",
          "wordCount": 86,
          "title": "Pythonを用いた時間-周波数解析入門  ~フーリエ・ウェーブレット解析を中心に~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uwJ_RR6l--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82MjBmY2NkNDkyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uwJ_RR6l--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82MjBmY2NkNDkyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/sunbluesome/articles/31877b5a767e87",
          "author": "sunbluesome",
          "description": "GPTモデルを理解したい記事です。\nGPTモデルはtransformerを基礎としたモデルです。transformerの解説記事はこちら。\nhttps://zenn.dev/sunbluesome/articles/078ac9a9afca6a\n元論文「Improving Language Understanding by Generative Pre-Training」をベースにまとめていきます。\n\n 凄いポイント\n\n様々なタスクをモデルの構造をほとんど変えずに行える。しかも12タスク中9つでSOTA。\n\n\n GPTモデルの構造\n\n Transformer Decoder (T-D)\n...",
          "link": "https://zenn.dev/sunbluesome/articles/31877b5a767e87",
          "publishedOn": "2022-11-16T13:53:29.000Z",
          "wordCount": 737,
          "title": "GPTモデルを理解したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r7k4KpLw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sunbluesome%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:GPT%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MWRDbDU0eFNmUVhIYXZqMmF3Rm5NZzFGMUVNaEs1dmYwVDhPNlk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--r7k4KpLw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sunbluesome%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:GPT%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MWRDbDU0eFNmUVhIYXZqMmF3Rm5NZzFGMUVNaEs1dmYwVDhPNlk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hpp/articles/64466d9476fb2b",
          "author": "hpp",
          "description": "まとめ\n\nPythonから巨大なテキストファイルを並列に読み込み・処理・書き込みする方法を紹介\n読み込み: テキストファイルをバイト列として見て、プロセスごとにファイルの読み込み区間を割り振る\n処理: multiprocessingを用いた並列処理\n書き込み: プロセスごとにtmpファイルへ並列に書き込み & catによる結合\n\n\n はじめに\n日本語形態素解析器であるMeCabを用いると、日本語のテキストに対する解析や処理が簡単に実行できます。\n特に最近は、BERTをはじめとする深層学習モデルへの入力のための前処理として、MeCabなどを用いて文を単語単位に分割する「分かち書...",
          "link": "https://zenn.dev/hpp/articles/64466d9476fb2b",
          "publishedOn": "2022-11-16T10:00:00.000Z",
          "wordCount": 4752,
          "title": "続・MeCabの分かち書きを並列処理で高速化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ue3aRt_K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hpp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B6%259A%25E3%2583%25BBMeCab%25E3%2581%25AE%25E5%2588%2586%25E3%2581%258B%25E3%2581%25A1%25E6%259B%25B8%25E3%2581%258D%25E3%2582%2592%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dFelg5bGVLNzNDeDJ1eGVKTmdpOERyOFJmWXM3bS1TMzZuSnhmPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ue3aRt_K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hpp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B6%259A%25E3%2583%25BBMeCab%25E3%2581%25AE%25E5%2588%2586%25E3%2581%258B%25E3%2581%25A1%25E6%259B%25B8%25E3%2581%258D%25E3%2582%2592%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dFelg5bGVLNzNDeDJ1eGVKTmdpOERyOFJmWXM3bS1TMzZuSnhmPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshikawat64m/articles/c242b11d21be68",
          "author": "yoshikawat64m",
          "description": "はじめに\n文章を固定長ベクトルに変換する方法はないかなあと調べていたら、SentenseBertというものを見つけました.それ以外にもベクトル化にはいろいろな方法があるようで調べた内容を少しまとめてみようと思います.\n\n ベクトル化の用途\nベクトル化することによる応用の仕方はいろいろですが、文書ベクトルの応用としては以下のようなことが可能です.\n\n類似文書の検索\n文章間の類似度を測っておすすめの記事をレコメンド\n画像検索エンジン(文章ベクトルと画像ベクトルの類似度を測る)\n\n\n さまざま手法\nword2vecに始まり、自然言語の機械学習によるベクトル化のアルゴリズムは常に改良されてき...",
          "link": "https://zenn.dev/yoshikawat64m/articles/c242b11d21be68",
          "publishedOn": "2022-11-16T04:36:08.000Z",
          "wordCount": 611,
          "title": "自然言語処理 ベクトル化の手法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aaH9Kyho--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshikawat64m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%2520%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E5%258C%2596%25E3%2581%25AE%25E6%2589%258B%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ptcjdXOWJJcWxzZjNIUll5VnRRUXJtT01ULUtuZUQ2NklqR0J0RHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aaH9Kyho--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshikawat64m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%2520%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E5%258C%2596%25E3%2581%25AE%25E6%2589%258B%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ptcjdXOWJJcWxzZjNIUll5VnRRUXJtT01ULUtuZUQ2NklqR0J0RHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kyami/articles/b9e58283908bee",
          "author": "kyami",
          "description": "データサイエンス100本ノックの実行環境をOracle Linux 8 で構築してみました。\n\n データサイエンス100本ノック（構造化データ加工編）とは？？\nhttps://github.com/The-Japan-DataScientist-Society/100knocks-preprocess\nとても親切な方がSQL,Python,Rでデータサイエンスで必要な構造化データの操作を練習できるツールをご用意してくださり、しかもDockerで動かせるようです！\n今回はその環境構築を実施してみました。\n\n 母体マシンの用意\nよくあるのはWindowsOSに仮想でホストOSを構築してその上...",
          "link": "https://zenn.dev/kyami/articles/b9e58283908bee",
          "publishedOn": "2022-11-16T00:11:00.000Z",
          "wordCount": 337,
          "title": "データサイエンス100本ノック（構造化データ加工編）環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eSQOvdUE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kyami%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2588%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258A%25A0%25E5%25B7%25A5%25E7%25B7%25A8%25EF%25BC%2589%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeXBjU3owb3V3WEJ4bURGamNOVFU1YXhBNEpWNzQ1eXhJM0dULVI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eSQOvdUE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kyami%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2588%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258A%25A0%25E5%25B7%25A5%25E7%25B7%25A8%25EF%25BC%2589%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeXBjU3owb3V3WEJ4bURGamNOVFU1YXhBNEpWNzQ1eXhJM0dULVI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takeguchi/articles/361e12a5321095",
          "author": "HTake",
          "description": "はじめに\n今回は Docker Desktop を用いてGPU環境を構築します。\n以前の Docker はCLIをメインに開発を行っていたと思うのですが、Docker Desktop を用いれば GUI からコンテナやイメージなどを操作することができるそうです。しかも、現在のバージョンは導入が爆速でできるのでめちゃくちゃ使いやすくなりました。\n使用するもの\n\nCUDA (前提）\nWindows11 Home (前提)\nDocker Desktop\nWSL2\nNvidia-Container-Toolkit\njupyterlab\n\n\n WSL2 のインストール\n管理者権限でコマンドプロ...",
          "link": "https://zenn.dev/takeguchi/articles/361e12a5321095",
          "publishedOn": "2022-11-15T21:00:01.000Z",
          "wordCount": 1046,
          "title": "WSL2+Docker DesktopでpytorchのGPU環境を構築する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hXbFiDna--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:HTake%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:WSL2%25E2%2581%25BADocker%2520Desktop%25E3%2581%25A7pytorch%25E3%2581%25AEGPU%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MG9xSkRkS3lXRFNjZkU4QW93X0RUV0dqdFl1VE1jNFU1YzBKd1A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hXbFiDna--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:HTake%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:WSL2%25E2%2581%25BADocker%2520Desktop%25E3%2581%25A7pytorch%25E3%2581%25AEGPU%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MG9xSkRkS3lXRFNjZkU4QW93X0RUV0dqdFl1VE1jNFU1YzBKd1A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kleamp1e/articles/202211-pornography-classifier-10",
          "author": "kleamp1e",
          "description": "目次\n\nけしからん画像分類器を作ってみる (1) 序章\nけしからん画像分類器を作ってみる (2) データ収集 その1\nけしからん画像分類器を作ってみる (3) データ収集 その2\nけしからん画像分類器を作ってみる (4) データ収集 その3\nけしからん画像分類器を作ってみる (5) データ管理 その1\nけしからん画像分類器を作ってみる (6) データ管理 その2\nけしからん画像分類器を作ってみる (7) 学習 その1\nけしからん画像分類器を作ってみる (8) 学習 その2\nけしからん画像分類器を作ってみる (9) 推論\nけしからん画像分類器を作ってみる (10) 公開（本記事）\n番外...",
          "link": "https://zenn.dev/kleamp1e/articles/202211-pornography-classifier-10",
          "publishedOn": "2022-11-15T17:18:16.000Z",
          "wordCount": 793,
          "title": "けしからん画像分類器を作ってみる (10) 公開",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--izwKFPIk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kleamp1e%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%2591%25E3%2581%2597%25E3%2581%258B%25E3%2582%2589%25E3%2582%2593%25E7%2594%25BB%25E5%2583%258F%25E5%2588%2586%25E9%25A1%259E%25E5%2599%25A8%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%252810%2529%2520%25E5%2585%25AC%25E9%2596%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSXFmblBGM2NPY2w2UTdrVUdZS3E4MllSd1VocFBka1lRUWRmPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--izwKFPIk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kleamp1e%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%2591%25E3%2581%2597%25E3%2581%258B%25E3%2582%2589%25E3%2582%2593%25E7%2594%25BB%25E5%2583%258F%25E5%2588%2586%25E9%25A1%259E%25E5%2599%25A8%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%252810%2529%2520%25E5%2585%25AC%25E9%2596%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSXFmblBGM2NPY2w2UTdrVUdZS3E4MllSd1VocFBka1lRUWRmPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tasada038/articles/122531ae241c3c",
          "author": "Takumi Asada",
          "description": "海洋ロボコンをやっている人です。\n今回は、PyQt5+Qt DesingerでGUIプログラムしたアプリをROS2対応させ、msg可視化アプリを作ったときのメモおよびプログラムたちを備忘録としてまとめました。\n他にも、「ROSboard」や「JSK Visualization」といったROSの強力な可視化ツールがたくさん揃っているので、車輪の再発明な点もありますが、Qt「キュート」の勉強も兼ねています。\n\n 本記事のプログラム\nこの記事で扱うプログラムのコードはGithubよりクローンしてご活用ください。\nhttps://github.com/tasada038/pyqt_ros2_ap...",
          "link": "https://zenn.dev/tasada038/articles/122531ae241c3c",
          "publishedOn": "2022-11-15T10:13:15.000Z",
          "wordCount": 1593,
          "title": "ROS2: PyQt5+Qt Desingerでmsg可視化アプリを試作する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3HI-Ioh7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takumi%2520Asada%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ROS2%253A%2520PyQt5%25E2%2581%25BAQt%2520Desinger%25E3%2581%25A7msg%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%25A9%25A6%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS02UlRlclRjeFNkX3dsSDk4WE1LY1dHNDJ3b2ZoR1ZmUWNDdVhlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3HI-Ioh7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takumi%2520Asada%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ROS2%253A%2520PyQt5%25E2%2581%25BAQt%2520Desinger%25E3%2581%25A7msg%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%25A9%25A6%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS02UlRlclRjeFNkX3dsSDk4WE1LY1dHNDJ3b2ZoR1ZmUWNDdVhlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hassaku63/articles/deb96896623639",
          "author": "hassaku63",
          "description": "おことわり\nこの記事と背景的なものは同じです。\nhttps://zenn.dev/hassaku63/articles/75bc1b56b94528\n\n引き継いで以降ずっと塩漬けしてた古いプロジェクトの依存関係を更新しよう、という仕事が発生したのですが、依存関係の定義である requirements.txt が pip freeze の出力そのままリダイレクトしたような内容になっていて少々困りました。\n\nrequirements をダイエットしたい、という用事が上記の記事と同じで、今回は実際にダイエットさせてみた requirements と元のファイルでそれぞれ何がどのバージョンで...",
          "link": "https://zenn.dev/hassaku63/articles/deb96896623639",
          "publishedOn": "2022-11-14T16:16:07.000Z",
          "wordCount": 262,
          "title": "2つの pip freeze を比較するツール作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W1DLRu0d--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hassaku63%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:2%25E3%2581%25A4%25E3%2581%25AE%2520pip%2520freeze%2520%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1sTzJaUzFTMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDM3YWIzZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W1DLRu0d--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hassaku63%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:2%25E3%2581%25A4%25E3%2581%25AE%2520pip%2520freeze%2520%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1sTzJaUzFTMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDM3YWIzZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/stable_diffusion_sampler",
          "author": "mimitako",
          "description": "Stable Diffusion Samplerの違いを比べてみた\nStable diffusionにおけるSamplerってどれくらい影響がある？ぶっちゃけあまり知らずに使っていました。実際に使うといろいろ違いが出てきて面白いですね。\n今回はSampler だけを変更し、Step数、Prompt、Seed値などはすべて固定しています。なお、GPUにはGTX1660Tiを利用しています。描画な時間は目安としてご利用ください。\n\n 呪文\n呪文は元素法典から引用しています。\n\nmasterpiece, best quality, super fine illustration,maste...",
          "link": "https://zenn.dev/mimitako/articles/stable_diffusion_sampler",
          "publishedOn": "2022-11-14T13:25:05.000Z",
          "wordCount": 743,
          "title": "Stable Diffusion Samplerの違いを比べてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SZIMUT83--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffusion%2520Sampler%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%25AF%2594%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SZIMUT83--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Stable%2520Diffusion%2520Sampler%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%25AF%2594%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221114_python_xaxis_top",
          "author": "SiganAI",
          "description": "matplotlibを使用してグラフを作成する際に，通常グラフ下部に表示されるx軸の目盛りをグラフ上部に変更する方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法\nmatplotlibのAxes.xaxis.tick_top()を使用することでグラフ上部にx軸目盛を表示することが可能．\n実際のコードを以下で示す．\n\n インストール方法\n\nterminal\npip install matplotlib\n\n\n 実際の使用例\nここでは例として，y=sin(x)をグラフにする．\nxの範囲は0～3πとする．...",
          "link": "https://zenn.dev/siganai/articles/20221114_python_xaxis_top",
          "publishedOn": "2022-11-14T12:54:49.000Z",
          "wordCount": 446,
          "title": "【Python】グラフのx軸目盛の位置を上部に変更する方法について【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--x6LFwxbN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25AEx%25E8%25BB%25B8%25E7%259B%25AE%25E7%259B%259B%25E3%2581%25AE%25E4%25BD%258D%25E7%25BD%25AE%25E3%2582%2592%25E4%25B8%258A%25E9%2583%25A8%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--x6LFwxbN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25AEx%25E8%25BB%25B8%25E7%259B%25AE%25E7%259B%259B%25E3%2581%25AE%25E4%25BD%258D%25E7%25BD%25AE%25E3%2582%2592%25E4%25B8%258A%25E9%2583%25A8%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/06ef908cd65383",
          "author": "banananeko",
          "description": "今回紹介するテクニック\n今回紹介するテクニックはこちらです\n\nas(importの時)\nsys.exit()\n_ (アンダーバー)\ninput()\n\n\n as\nasとは importの時に使える便利なコードです。これを使うことによって importするモジュール名を自分なりの呼び方にすることができます\n\n 使い方\nimport モジュール名　as 自分なりの言い方\nという感じで使えます\n\n 例文\n import sys as s\n # こうすることでsysをsと呼ぶことができる\n print('hello')\n s.exit()\n print('world')\n!\ns.exit()を...",
          "link": "https://zenn.dev/banananeko/articles/06ef908cd65383",
          "publishedOn": "2022-11-14T10:26:48.000Z",
          "wordCount": 379,
          "title": "python便利なテクニック集",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w4-Jzh9m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--w4-Jzh9m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yuya_sato/articles/f1a9aebe9a2e0d",
          "author": "Yuya Sato / 佐藤優矢",
          "description": "概要\n一般にRecallとPrecisionの違いなどは記事がありますが、Recall@kとPrecision@kの違い、そしてレコメンドエンジンを評価する現場ではRecall@kが評価指標としてよく用いられる理由については解説している専門書、記事が英語、日本語とも見当たらなかったので自分なりに考えてみました。\n\n 一般的なRecallとPrecisionの定義\nRecallの定義は、\n\nRecall := \\frac{TP}  {TP + FN} \\\\ \\quad \\\\\n        = \\frac {正解だと思って正解だったアイテム数} {正解だと思って正解だったアイテム数 +...",
          "link": "https://zenn.dev/yuya_sato/articles/f1a9aebe9a2e0d",
          "publishedOn": "2022-11-14T10:21:39.000Z",
          "wordCount": 356,
          "title": "レコメンドのオフライン評価でRecall@kの方がPrecision@kより用いられる理由",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VK1mznVt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Sato%2520%252F%2520%25E4%25BD%2590%25E8%2597%25A4%25E5%2584%25AA%25E7%259F%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%25A7Recall%2540k%25E3%2581%25AE%25E6%2596%25B9%25E3%2581%258CPrecision%2540k%25E3%2582%2588%25E3%2582%258A%25E7%2594%25A8%25E3%2581%2584%25E3%2582%2589%25E3%2582%258C%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MR3lENnllVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYWZhMDAyOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VK1mznVt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Sato%2520%252F%2520%25E4%25BD%2590%25E8%2597%25A4%25E5%2584%25AA%25E7%259F%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%25A7Recall%2540k%25E3%2581%25AE%25E6%2596%25B9%25E3%2581%258CPrecision%2540k%25E3%2582%2588%25E3%2582%258A%25E7%2594%25A8%25E3%2581%2584%25E3%2582%2589%25E3%2582%258C%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MR3lENnllVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYWZhMDAyOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yosemat/articles/df389eb19bb178",
          "author": "Yosemat",
          "description": "SubClassのlistはSuperClassのlistには代入できない\nclass SuperClass:\n    pass\n\n\nclass ChildClass(SuperClass):\n    pass\n\n\ndef process_children(children: list[SuperClass]):\n    pass\n\n\ndef process_child(child: ChildClass):\n    pass\n\n\nchild = ChildClass()\nchildren = [child]\nprocess_child(child)  # works\nprocess...",
          "link": "https://zenn.dev/yosemat/articles/df389eb19bb178",
          "publishedOn": "2022-11-14T09:55:38.000Z",
          "wordCount": 560,
          "title": "【TypeHint】list[SubClass]がlist[SuperClass]に受け付けられない【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ou7Rgpe_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yosemat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590TypeHint%25E3%2580%2591list%255BSubClass%255D%25E3%2581%258Clist%255BSuperClass%255D%25E3%2581%25AB%25E5%258F%2597%25E3%2581%2591%25E4%25BB%2598%25E3%2581%2591%25E3%2582%2589%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVaVhYRVhTU21HemprLTZCNjRhM0FpbmdGSjlmUzdGSElCck5RPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ou7Rgpe_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yosemat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590TypeHint%25E3%2580%2591list%255BSubClass%255D%25E3%2581%258Clist%255BSuperClass%255D%25E3%2581%25AB%25E5%258F%2597%25E3%2581%2591%25E4%25BB%2598%25E3%2581%2591%25E3%2582%2589%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVaVhYRVhTU21HemprLTZCNjRhM0FpbmdGSjlmUzdGSElCck5RPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/penguincabinet/articles/762e7e201fd86a",
          "author": "PenguinCabinet",
          "description": "はじめに\nGithubプロフィール用のバッジを生成するサービスがあります。\n例えば、\nQiitaのコントリビューション数や記事数をバッジにするサービス。\nhttps://qiita.com/mikkame/items/f2c60d9caf8a8e38ec50\nZennの記事数をバッジにするサービス。\nhttps://github.com/nikaera/zenn-badge\n偉大な先人たちに感謝…！！\n僕のREADMEに使わせていただくと、こんな感じになります。\n\n僕も何かバッジ化するサービスを作りたい。\n\n Annictとは\nアニメ視聴を記録し感想を投稿できるサービスです。\nhtt...",
          "link": "https://zenn.dev/penguincabinet/articles/762e7e201fd86a",
          "publishedOn": "2022-11-14T09:52:14.000Z",
          "wordCount": 362,
          "title": "Annictの記録したアニメ数をGitHubのプロフィールに載せるサービスを作りました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ILnuQFBY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:PenguinCabinet%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Annict%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E6%2595%25B0%25E3%2582%2592GitHub%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E8%25BC%2589%25E3%2581%259B%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XVjB5ZTJUOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3NzYzNDVhNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ILnuQFBY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:PenguinCabinet%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Annict%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E6%2595%25B0%25E3%2582%2592GitHub%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E8%25BC%2589%25E3%2581%259B%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XVjB5ZTJUOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3NzYzNDVhNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/jnxjez/articles/75a6d77b624a4f",
          "author": "ジェイ",
          "description": "概要\n有価証券報告書から作成されたデータセットchABSA-datasetを使用して、文書をベクトル化します。\nベクトルをUMAPで次元圧縮し、Plotlyで可視化します。\n可視化する内容は文章を単純にベクトル化したものと、tf-idfで特徴的な単語を抜き出した文章をベクトル化したものの２種類を使用し、tf-idfを使用した場合の方が業種区分ごとにまとまって出力されるかを確認します。\n結果は目視でなんとなく確認し、どれぐらいの精度が出ているか定量的な評価はしていません。\n\n 環境\nGoogle Colabを使用します。\n\n データセット\n以下で紹介されていたchABSA-datase...",
          "link": "https://zenn.dev/jnxjez/articles/75a6d77b624a4f",
          "publishedOn": "2022-11-13T23:30:43.000Z",
          "wordCount": 2445,
          "title": "有価証券報告書をベクトル化して散布図にプロット",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oOT6X_5b--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25A4%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2582%2592%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E6%2595%25A3%25E5%25B8%2583%25E5%259B%25B3%25E3%2581%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mU2hWNk5NLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzM2JhNWI2MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oOT6X_5b--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25A4%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2582%2592%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E6%2595%25A3%25E5%25B8%2583%25E5%259B%25B3%25E3%2581%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mU2hWNk5NLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzM2JhNWI2MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/otwn/articles/c41685c8e4866e",
          "author": "otwn",
          "description": "コードのやり取りをする中で新しいライブラリやツールを知ることがあります。またMedium.comのToward Data Scienceで書かれている記事で得た情報を含めて、今年に入ってよく使うようになったと思う４つのツールを紹介したいと思います。\n\n 1. icecream\nhttps://github.com/gruns/icecream\nまずはicecream。なぜ知らなかったのかと思ったくらい、これは本当に頻繁に使うようになりました。\nif a == b:\n    print(\"if\")\n    return something\nelse:\n    print(\"else\")\n ...",
          "link": "https://zenn.dev/otwn/articles/c41685c8e4866e",
          "publishedOn": "2022-11-13T22:35:56.000Z",
          "wordCount": 510,
          "title": "最近よく使うようになったPython ライブラリとツール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a7uOs2pT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:otwn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E8%25BF%2591%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259FPython%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A8%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cwdGlUT0tJQ3MwalQxSU40eEV1aXpZaTFiem1TOFNWZXBzYkdzeUN3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a7uOs2pT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:otwn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E8%25BF%2591%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259FPython%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A8%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cwdGlUT0tJQ3MwalQxSU40eEV1aXpZaTFiem1TOFNWZXBzYkdzeUN3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takeojapan/articles/c77cdea47f69de",
          "author": "kenta takeuchi",
          "description": "初めに\nDjango REST framework(DRF)は、Djangoを利用してWeb APIを簡単に実装できるライブラリです。\n主な目的は個人的な勉強のためですが、少しでも誰かの参考になればと思ったのでDRFを用いて戦術的DDDパターンを実装したものをまとめました。\nDDDについて解説をすることを目的としていないため、もしDDDを知らない方や勉強したい人は先に他の記事をご覧になった方が良いかと思います。\n\n 概要\n今回はDjangoのチュートリアルの投票アプリをベースに一部処理を追加したシステムを作成しました。\n\n ディレクトリ構成\n先に今回作成したシステムのディレクトリ構成...",
          "link": "https://zenn.dev/takeojapan/articles/c77cdea47f69de",
          "publishedOn": "2022-11-13T19:06:44.000Z",
          "wordCount": 2644,
          "title": "Django REST frameworkで戦術的DDDを実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TMLuRf-k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kenta%2520takeuchi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%2520REST%2520framework%25E3%2581%25A7%25E6%2588%25A6%25E8%25A1%2593%25E7%259A%2584DDD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16cjFzelBDYi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxY2JkNDFkYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TMLuRf-k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kenta%2520takeuchi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%2520REST%2520framework%25E3%2581%25A7%25E6%2588%25A6%25E8%25A1%2593%25E7%259A%2584DDD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16cjFzelBDYi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxY2JkNDFkYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/a5chin/articles/torchevaluation",
          "author": "a5chin",
          "description": "はじめに\n今回は PyTorch で Deep Learning (深層学習，機械学習) を行う際に用いる，評価指標の計算方法について記述していきます．\n本記事では，TorchEval という Facebook 社が開発を主導している PyTorch と同時に使われることを想定している，2022/10/30 にリリースされたばかりの精度評価用のライブラリです．\nドキュメントを以下に貼っておきます．\n\n\n この記事を読むメリット\n\n複雑な評価計算を 1 行で実装できる\nPyTorch が公式で出しているライブラリのためコードが綺麗になる\n\nといった 2 点のメリットがあります．\nこれを...",
          "link": "https://zenn.dev/a5chin/articles/torchevaluation",
          "publishedOn": "2022-11-13T15:40:19.000Z",
          "wordCount": 3649,
          "title": "【PyTorch】TorchEval を使って精度評価しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YUEHMEk4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:a5chin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590PyTorch%25E3%2580%2591TorchEval%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B2%25BE%25E5%25BA%25A6%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dBNXBkb2hrNGRoWFUzQ0ZXYmNhNHRBZktpTy1xcE5vdUtDRmtBeWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YUEHMEk4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:a5chin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590PyTorch%25E3%2580%2591TorchEval%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B2%25BE%25E5%25BA%25A6%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dBNXBkb2hrNGRoWFUzQ0ZXYmNhNHRBZktpTy1xcE5vdUtDRmtBeWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/c4df31aea5ae89",
          "author": "banananeko",
          "description": "今回紹介する知識\n\npython1\nrpython\nコンパイラ\npyopencv\nIDLE\n\n\n python1\npythonと聞くとpython2とpython3が思いつくと思いますが実はpython1があったのです\nhttps://www.python.org/download/releases/\nこれが python1のリンクです\nあるにはありますが古いので使うのはおすすめしません\n\n rpython\nrpythonと聞くと少し詳しい人なら\n\npythonはc言語で書かれてcpythonだから\nrpythonはr言語で書かれているんだ\n\nと思うかもしれませんが実は\nrpytho...",
          "link": "https://zenn.dev/banananeko/articles/c4df31aea5ae89",
          "publishedOn": "2022-11-13T13:51:30.000Z",
          "wordCount": 256,
          "title": "pythonどうでもいい知識集",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fRtYN93R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25A7%25E3%2582%2582%25E3%2581%2584%25E3%2581%2584%25E7%259F%25A5%25E8%25AD%2598%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fRtYN93R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25A7%25E3%2582%2582%25E3%2581%2584%25E3%2581%2584%25E7%259F%25A5%25E8%25AD%2598%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimakaze_soft/articles/aa6eb5a2097ede",
          "author": "shimakaze_soft",
          "description": "RDBを使用していて、アクセス数が増えて負荷がかかった際の対処法としては、更新用と参照用でRDBを分けるレプリケーションというものがあります。\nPythonのORMであるSQLAlchemyを使用していて、ORMからRDBにアクセスする際には、参照用と更新用に分けたいという状況もあると思います。\nRDBのレプリケーションを実施した際に、SQLAlchemyに更新用と参照用を切り替えるための処理の追加方法を紹介します。\n\n レプリケーションとは\nここでレプリケーションを知らない方のために簡単に解説します。\nMySQL/PostgresqlといったRDBを運用していて、アクセス数などが増大し...",
          "link": "https://zenn.dev/shimakaze_soft/articles/aa6eb5a2097ede",
          "publishedOn": "2022-11-13T12:10:30.000Z",
          "wordCount": 2044,
          "title": "SQLAlchemyでmaster/slaveの切り替え",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M7f_G2DP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimakaze_soft%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SQLAlchemy%25E3%2581%25A7master%252Fslave%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oc2J3WVROOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M7f_G2DP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimakaze_soft%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SQLAlchemy%25E3%2581%25A7master%252Fslave%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oc2J3WVROOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/welliving/articles/5a0a9636915e29",
          "author": "Ryo YOSHI",
          "description": "この記事について\ne-Statから消費者物価指数データをPythonで取得します。\n\n Pythonのコード\njpy-datareaderを使います。\nfrom jpy_datareader import estat\n消費者物価指数のデータ数を確認します。\nmetainfo = estat.MetaInfoReader(api_key, statsDataId=\"0003427113\", name_or_id=\"name\")\nmeta = metainfo.read()\nmetainfo.OVERALL_TOTAL_NUMBER\n12486296\nデータ数が多いため、条件で絞ります。...",
          "link": "https://zenn.dev/welliving/articles/5a0a9636915e29",
          "publishedOn": "2022-11-13T10:01:26.000Z",
          "wordCount": 713,
          "title": "消費者物価指数データを取得するPythonのコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R_BipcGn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%25B6%2588%25E8%25B2%25BB%25E8%2580%2585%25E7%2589%25A9%25E4%25BE%25A1%25E6%258C%2587%25E6%2595%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R_BipcGn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%25B6%2588%25E8%25B2%25BB%25E8%2580%2585%25E7%2589%25A9%25E4%25BE%25A1%25E6%258C%2587%25E6%2595%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/0fcfdf93b63a59",
          "author": "JboyHashimoto",
          "description": "まさか使う機会が来るとは!\nこんにちは、Jboyです。最近転職して企業さんでPythonを使うことになりました...\n「Pythonって仕事ないよ」と昔聞いたことがある😅\nでも、求人はいっぱいある?、機械学習ばっかりですけどね...\nプログラミングを学ぶならPHP、Javaだと聞きますが、もう初心者のための求人はないと思いますね😭\nプログラミングスクールでは、PHP、Ruby、Javaを教えているところがありますが、最近はPythonを教えているところもある。\nでも、初心者でPythonの仕事につくのって難しいんですよね😅\nやってる僕って結構レアだなと思った🤫\n\n なぜPython?...",
          "link": "https://zenn.dev/joo_hashi/articles/0fcfdf93b63a59",
          "publishedOn": "2022-11-13T09:52:53.000Z",
          "wordCount": 933,
          "title": "Python仕事で使うことになりました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fMyrkMt4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JboyHashimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E4%25BB%2595%25E4%25BA%258B%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03OHBTWjJfay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0Mzc4MDdhZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fMyrkMt4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JboyHashimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E4%25BB%2595%25E4%25BA%258B%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03OHBTWjJfay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0Mzc4MDdhZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/apple_pie1974/articles/ebde81ff587452",
          "author": "ApplePie",
          "description": "自分用メモ\n\n strとrepr\n公式リファレンスによると、\nhttps://docs.python.org/ja/3/reference/datamodel.html?highlight=repr#object.__str__\nhttps://docs.python.org/ja/3/reference/datamodel.html?highlight=repr#object.__repr__\nstrは\n\nオブジェクトの「非公式の (informal)」あるいは表示に適した文字列表現を計算するために、 str(object) と組み込み関数 format(), print() によって...",
          "link": "https://zenn.dev/apple_pie1974/articles/ebde81ff587452",
          "publishedOn": "2022-11-13T09:19:29.000Z",
          "wordCount": 287,
          "title": "Pythonのstrとrepr",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TWjE6-Xb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ApplePie%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25AEstr%25E3%2581%25A8repr%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h2MlM2WDRwRXg1aHJGTUh3WlVpSk5EZWlIOWRyejB3YVFFV3FCTUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TWjE6-Xb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ApplePie%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25AEstr%25E3%2581%25A8repr%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h2MlM2WDRwRXg1aHJGTUh3WlVpSk5EZWlIOWRyejB3YVFFV3FCTUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/welliving/articles/7f9354195efb18",
          "author": "Ryo YOSHI",
          "description": "この記事について\n財務省のページから国債金利データを取得します。\n\n Pythonのコード\nimport numpy as np\nimport pandas as pd\n\njgbcm = pd.read_csv(\"https://www.mof.go.jp/jgbs/reference/interest_rate/jgbcm.csv\", skiprows=1, encoding=\"shift-jis\")\njgbcm_all = pd.read_csv(\"https://www.mof.go.jp/jgbs/reference/interest_rate/data/jgbcm_all....",
          "link": "https://zenn.dev/welliving/articles/7f9354195efb18",
          "publishedOn": "2022-11-13T08:45:26.000Z",
          "wordCount": 734,
          "title": "日本国債金利データを取得するPythonのコード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--va6Tvrk4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%2597%25A5%25E6%259C%25AC%25E5%259B%25BD%25E5%2582%25B5%25E9%2587%2591%25E5%2588%25A9%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--va6Tvrk4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2520YOSHI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%2597%25A5%25E6%259C%25AC%25E5%259B%25BD%25E5%2582%25B5%25E9%2587%2591%25E5%2588%25A9%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258BPython%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1hUzZtSjgxbS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNTU3NWNlMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mtmatma/articles/c5caf790c13d70",
          "author": "masaru tsuchiyama",
          "description": "Windows コマンドプロンプトのデフォルト文字コード取得\n>python\nPython 3.10.8 (tags/v3.10.8:aaaf517, Oct 11 2022, 16:50:30) [MSC v.1933 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import _locale\n>>> _locale._getdefaultlocale()\n('ja_JP', 'cp932')...",
          "link": "https://zenn.dev/mtmatma/articles/c5caf790c13d70",
          "publishedOn": "2022-11-13T08:31:00.000Z",
          "wordCount": 138,
          "title": "Windows コマンドプロンプトのデフォルト文字コード取得",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vAaIrhy7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:masaru%2520tsuchiyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Windows%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vAaIrhy7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:masaru%2520tsuchiyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Windows%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/d9d636e47057e8",
          "author": "osn_Lofi",
          "description": "numpyで乱数を発生させるメソッド\n特によく使うrand(),random_sample(),randint(),randn() について整理しました。\nざっくりまとめると、以下の通りです。\n\nひとつひとつ実際の動きを見ていきましょう\n\n rand()\n引数に何も指定しない場合、0以上1未満の乱数がスカラーで返ってきます。\nnp.random.rand()\n出力値\n0.11687868813774382\n引数xを指定すると、乱数がx次元のベクトルで返ってきます。\nnp.random.rand(5)\n出力値\narray([0.42817233, 0.06407754, 0.5981927...",
          "link": "https://zenn.dev/robes/articles/d9d636e47057e8",
          "publishedOn": "2022-11-13T06:36:20.000Z",
          "wordCount": 452,
          "title": "【Python】【初心者】numpyで乱数を発生させるメソッドの整理",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wUvWojMA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2580%2591numpy%25E3%2581%25A7%25E4%25B9%25B1%25E6%2595%25B0%25E3%2582%2592%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wUvWojMA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2580%2591numpy%25E3%2581%25A7%25E4%25B9%25B1%25E6%2595%25B0%25E3%2582%2592%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/joanofarc/articles/gradient-boosting-interval-prediction",
          "author": "JoanOfArc",
          "description": "背景と目的\nビジネスにおいて機械学習による回帰モデルを構築する際に、単に「予測値（点予測）」が知りたいというよりも、「予測値が（どれくらいの確率で）どれくらいの範囲に収まりそうか（区間予測）」を知りたい場面があります。例えば天気予報を眺めてみると台風の進路予測には予報円が出ており、ある程度幅を持たせて進路を予測するといったことが行われています。あるいは需要予測を行う場合に「95%の確率で40個~60個の間に入りそうだ」という幅を持たせた予測をすることができれば、「売れ残りがでると損失が大きいので、明日の仕入れ量は40個にしよう」といった意思決定に繋げることができるかおしれません。\nそ...",
          "link": "https://zenn.dev/joanofarc/articles/gradient-boosting-interval-prediction",
          "publishedOn": "2022-11-13T05:57:54.000Z",
          "wordCount": 3149,
          "title": "勾配ブースティングで「幅を持たせた予測」を行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7jUqa-Yn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JoanOfArc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%258B%25BE%25E9%2585%258D%25E3%2583%2596%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2580%258C%25E5%25B9%2585%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2581%259F%25E4%25BA%2588%25E6%25B8%25AC%25E3%2580%258D%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQ3lBMjR0LUJvZHB3bWZJYkJOUGpWS1U0b1BFMVR2YnN4MEVmMEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7jUqa-Yn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JoanOfArc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%258B%25BE%25E9%2585%258D%25E3%2583%2596%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2580%258C%25E5%25B9%2585%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2581%259F%25E4%25BA%2588%25E6%25B8%25AC%25E3%2580%258D%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQ3lBMjR0LUJvZHB3bWZJYkJOUGpWS1U0b1BFMVR2YnN4MEVmMEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/satoshi256kbyte/articles/a4fa95984e2974",
          "author": "深緑　聡",
          "description": "こんにちは。深緑です。\nチーム内で改めてデザインパターンを学び始めました。\n記録のために記事に残しておこうと思います。\n\n はじめに\nGoFのデザインパターンを一つずつ学んでいきます。\n今回はAdapterパターンです。\nWikipedia - Adapter パターン\n言語はPythonを使用します。\n\n サンプルコードのシチュエーション\n学校において、現在生徒を特定するコードを和暦＋学部＋学科＋数字４桁で管理しています。\n令和５年度から西暦＋学部＋学科＋数字４桁で管理するとします。\n\n\n\n年度\nコードのフォーマット\n例\n\n\n\n\n令和４年度まで\n和暦＋学部＋学科＋数字４桁\n04TEIT...",
          "link": "https://zenn.dev/satoshi256kbyte/articles/a4fa95984e2974",
          "publishedOn": "2022-11-13T04:21:25.000Z",
          "wordCount": 879,
          "title": "Pythonでデザインパターンを学ぶ(Adapterパターン)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oj65f6sG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%25B7%25B1%25E7%25B7%2591%25E3%2580%2580%25E8%2581%25A1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528Adapter%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nZXMyZ3Q5Vy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MzU5NTZkNDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oj65f6sG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%25B7%25B1%25E7%25B7%2591%25E3%2580%2580%25E8%2581%25A1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528Adapter%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nZXMyZ3Q5Vy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MzU5NTZkNDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taroh/articles/c965946e457059",
          "author": "taroh",
          "description": "円周率40億桁求めた。\nたった40億桁でこんなこと言うと円周率ガチ勢には笑われるかもしれないが、今生で自作プログラム (Python3で60行ほど、ラップトップでわずか7時間) で円周率をこんなに求められるとは思わなかったなー。\n2022年現在のテクノロジでちょちょっと計算して円周率が計算できた、のを、ハマって多桁・高速化した、2022年11月の1週間くらいの記録。\n!\n追記: 公開してからふと右をみてみると、この駄文、ちょうど1文字1byteのテキスト化した\\piでいったら2万桁分くらいらしい。2万桁の\\piを計算するのは下記のように10msec程度になったのだが、そのうちTransf...",
          "link": "https://zenn.dev/taroh/articles/c965946e457059",
          "publishedOn": "2022-11-13T03:39:41.000Z",
          "wordCount": 1465,
          "title": "円周率とわし",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1UCU8BeH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taroh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E5%2586%2586%25E5%2591%25A8%25E7%258E%2587%25E3%2581%25A8%25E3%2582%258F%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FLVU11eVZVdGdoYUt1aUNyLUhVSzM5eWpGcWJSOWotQU9yeE9DclZBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1UCU8BeH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taroh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E5%2586%2586%25E5%2591%25A8%25E7%258E%2587%25E3%2581%25A8%25E3%2582%258F%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FLVU11eVZVdGdoYUt1aUNyLUhVSzM5eWpGcWJSOWotQU9yeE9DclZBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/python_list_combination_gen",
          "author": "mimitako",
          "description": "Python でリストの組合せを作成する\n大した技術ではありませんが、地味に使っているので公開します。\n\n モチベーション\nStable Diffusion で Prompt の組合せ評価を行っているとき、いろいろ組合せがあると面倒だからなんとかならんかなぁ？と考えていました。\n調べれば itertools というライブラリで目的は達成できるのですが、ベースを Json にしていたので、辞書キー:リストの形でうまく使えるようにしたかったです。\n\n 使い方\nコードは下記の通り簡単です。\n\nkey:list の形で形成された辞書を作成します。\n各 key のリストを大きいリストでネストし...",
          "link": "https://zenn.dev/mimitako/articles/python_list_combination_gen",
          "publishedOn": "2022-11-12T23:47:00.000Z",
          "wordCount": 306,
          "title": "Pythonでリストの組合せを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--q9wkqyy_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E7%25B5%2584%25E5%2590%2588%25E3%2581%259B%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--q9wkqyy_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Python%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E7%25B5%2584%25E5%2590%2588%25E3%2581%259B%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/neomocha/articles/2bc426bf067ef1",
          "author": "mocha",
          "description": "まとめると\n!\n有価証券報告書からのテキスト分析&財務分析をする準備として、EDINET APIから取得した有価証券報告書のテキストデータと財務データをGoogle Driveへ保存します🐱\n\n!\nGoogle Colabで動かしています。\n\nつぎの流れでやっていきます。\n\nライブラリのインポート\n有価証券報告書のdocIDを取得\n有価証券報告書が入ったzipファイルを取得\nzipファイルを解凍\nXBRLファイルからテキストデータと財務データを取得\n取得したデータをGoogle Driveに保存\n\n作成にあたっては次の記事を参考にしました。とても役立つ内容をありがとうございま...",
          "link": "https://zenn.dev/neomocha/articles/2bc426bf067ef1",
          "publishedOn": "2022-11-12T16:06:22.000Z",
          "wordCount": 2494,
          "title": "【Python】EDINET APIから取得した有価証券報告書のテキストデータと財務データを保存【Google Colab】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--23chLHVY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mocha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590Python%25E3%2580%2591EDINET%2520API%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E8%25B2%25A1%25E5%258B%2599%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2580%2590Google%2520Colab%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zWjIxb3pvOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1MjY1ZTk5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--23chLHVY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mocha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590Python%25E3%2580%2591EDINET%2520API%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E8%25B2%25A1%25E5%258B%2599%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2580%2590Google%2520Colab%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zWjIxb3pvOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1MjY1ZTk5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kokopi/articles/fd4ebe665b157b",
          "author": "ここぴのパパ",
          "description": "解決したい問題\n通常、ExcelのSheet内に画像を取り込みたいときは、メニューの挿入から画像を選択します。\nしかし、それが何枚もとなると面倒臭いですよね？\nさらに、業務などで日常的にとなると費やす時間は計り知れません。\n今回はそんな方に向けた記事を紹介していきます。\n\n\n 対象となる人\nプログラミングって何？なんか英語でつらつらと書くやつ？？\nそんなのさっぱりわからないしやりたくない、できない。というノンプログラマーの方に向けて丁寧に説明していきます。\n\n\n 解決策\nPython(パイソン)というプログラム言語を使って、Excelへの画像貼り付けを自動化します。\n待て待て、さっき...",
          "link": "https://zenn.dev/kokopi/articles/fd4ebe665b157b",
          "publishedOn": "2022-11-12T15:57:56.000Z",
          "wordCount": 761,
          "title": "Excelにまとめて画像ファイルを挿入する方法 Python編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--V0QQoQ6n--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25B4%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2591%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Excel%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2520Python%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzZNV054RGIwMnhtcWh1S3UwR2NMNlRGbXhHQkJJWm1sazlOaDM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--V0QQoQ6n--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25B4%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2591%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Excel%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2520Python%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzZNV054RGIwMnhtcWh1S3UwR2NMNlRGbXhHQkJJWm1sazlOaDM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/img2text_trial1",
          "author": "mimitako",
          "description": "画像からテキストを生成してみた\nさて、今回は画像からテキストを生成してみようと思います。画像には CC0 のものとそうでないものが混在したため、ここに貼付けせず、リンクで表記しています。\n\n モチベーション\nこの作業を行ったモチベーションは Stable Diffusion で遊ぶのは良いが、逆生成(img to prompt)はできないものかと思い実行しました。結果は散々なものです。ここには画像ありませんが、気になった方は読み進めてもらえると嬉しいです。\n\n img2text の中身\nほぼ Hugging Face にあったコードを利用させていただいています。Link\n修正したとこ...",
          "link": "https://zenn.dev/mimitako/articles/img2text_trial1",
          "publishedOn": "2022-11-12T14:34:56.000Z",
          "wordCount": 1208,
          "title": "画像からテキストを生成してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jxpd7TZN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jxpd7TZN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/100ba5ebfc19cb",
          "author": "ShunDev",
          "description": "確率質量関数\n確率質量関数は下記のように定義される.\n\n\\begin{align*}\nBern(x|\\mu) &= \\mu^x (1-x)^{(1-x)}\\\\\nx&=\\{0,1\\},\\; \\mu=(0,1)\n\\end{align*}\n\nただし, \\mu は平均である.\n\n 期待値・分散\n確率変数のとる値が0と1の二つで和の計算が簡単である.\n\n 期待値\n\n\\begin{align*}\n\\mathbb{E}(X)\n &= \\sum_{x=0}^1 x\\mu^x(1-\\mu)^{(1-x)}\\\\\n&=\n0\\cdot\\mu^0 (1-\\mu)^1 + 1 \\...",
          "link": "https://zenn.dev/shundeveloper/articles/100ba5ebfc19cb",
          "publishedOn": "2022-11-12T13:00:00.000Z",
          "wordCount": 1646,
          "title": "ベルヌーイ分布の期待値と分散, ベイズ推定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1QUSlYwL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%258C%25E3%2583%25BC%25E3%2582%25A4%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E3%2581%25A8%25E5%2588%2586%25E6%2595%25A3%252C%2520%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E6%258E%25A8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1QUSlYwL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2599%25E3%2583%25AB%25E3%2583%258C%25E3%2583%25BC%25E3%2582%25A4%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E3%2581%25A8%25E5%2588%2586%25E6%2595%25A3%252C%2520%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E6%258E%25A8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/canard0328/articles/memorandum-of-matplotlib",
          "author": "canard0328",
          "description": "毎回ググってるし、必要な情報は一か所にまとまっていて欲しいという、自分のための備忘録です。\n\n plt.plotか、ax.plotか\nimport matplotlib.pyplot as plt\nした後、簡単なグラフを書くには大きく2つの方法があります。一つ目は、\nplt.plot(...)\nplt.sho()\nとする方法です。もう一つは、\nfig, ax = plt.subplots()\nax.plot(...)\nplt.show()\nと書く方法です。\nグラフを１つ描画する場合にはどちらでもよいのですが、前者は後者の簡易的な記述方法ですので、後者の書き方で覚えておいたほうが応用が利く...",
          "link": "https://zenn.dev/canard0328/articles/memorandum-of-matplotlib",
          "publishedOn": "2022-11-12T08:57:31.000Z",
          "wordCount": 4324,
          "title": "matplotlibの備忘録",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZVXbz2Ln--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:canard0328%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:matplotlib%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeWI1NU40WlU4M2h0TDJiLXU5bXBsemctaEdkSmc1R3JzNndWSWY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZVXbz2Ln--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:canard0328%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:matplotlib%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeWI1NU40WlU4M2h0TDJiLXU5bXBsemctaEdkSmc1R3JzNndWSWY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/subaru_hello/articles/73253a46a76f7f",
          "author": "subaru-hello",
          "description": "陸上競技場が個人向けに開放されている日を調べるために、毎回サイトへ訪問して、PDFリンクをクリックして、今日が空いているのか、を確認するのって億劫ですよね。\n例えばこんな感じです。\n\nそこで、サイト内に存在するPDFをスクレイピングして中身をCSVへ保存するプログラムを作ろうと考えました。\n今回は、プログラム作成における戦略と戦術をまとめていきたいと思います。\n\n 本記事で作るプログラム\n長すぎるので二つの記事に分けたいと思います。\n本記事では、URLからHTMLを取得し、PDFファイルをスクレイピングしてローカルへ保存するまでを扱いたいと考えています。\nそして、出来上がるのは下記プログ...",
          "link": "https://zenn.dev/subaru_hello/articles/73253a46a76f7f",
          "publishedOn": "2022-11-12T08:54:43.000Z",
          "wordCount": 1675,
          "title": "【python】PDFをスクレイピングして中身をCSVへ出力する（前編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hfGRj8pW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:subaru-hello%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590python%25E3%2580%2591PDF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592CSV%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSU1ZEOHhyNG5oSFhxczdwcE5vSWx3MThxMGdaai1ETHh5a3RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hfGRj8pW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:subaru-hello%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590python%25E3%2580%2591PDF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592CSV%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSU1ZEOHhyNG5oSFhxczdwcE5vSWx3MThxMGdaai1ETHh5a3RHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221112_python_csv_output",
          "author": "SiganAI",
          "description": "CSVファイルにデータを書き出す方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法１：pandas\nデータフレーム（表形式）のデータをCSVに保存しやすい．\npandasのto_csv関数を使用．\nCSVに保存されているデータをデータフレーム（表形式）で読み込むことが可能．\n引数path_or_bufにCSVファイルのパス（本記事では変数output_path）を渡す．\n\n インストール方法\n\nterminal\npip install pandas\n\n\n 実際の使用例\n\npandas_test.p...",
          "link": "https://zenn.dev/siganai/articles/20221112_python_csv_output",
          "publishedOn": "2022-11-12T08:18:48.000Z",
          "wordCount": 1256,
          "title": "【Python】CSVファイルへの書き出しについて【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PZwQ2h6s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25B8%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PZwQ2h6s--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25B8%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nek0n0mimi/articles/4f461c2e3ebc45",
          "author": "calcifer",
          "description": "背景\n\nImportError: No module named bpy\n\nとなったので、pip install bpyとしたら\n\nERROR: Could not find a version that satisfies the requirement bpy\n\nと怒られた。\n\n 実行環境\n\nmacOS M1\nPython 3.9\n\n\n インストール\npipのアップグレード後、以下を実行する。\npip install fake-bpy-module-2.82\n※ バージョンを指定する",
          "link": "https://zenn.dev/nek0n0mimi/articles/4f461c2e3ebc45",
          "publishedOn": "2022-11-12T06:07:55.000Z",
          "wordCount": 132,
          "title": "macOS に bpy をインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M5Od34_R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:calcifer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:macOS%2520%25E3%2581%25AB%2520bpy%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SWnhXTXFySC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3MmQ1YzM4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M5Od34_R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:calcifer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:macOS%2520%25E3%2581%25AB%2520bpy%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SWnhXTXFySC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3MmQ1YzM4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sugyan/articles/5f45e4808ffc95",
          "author": "sugyan",
          "description": "きっかけ\n最近 @yanecoder さんが AtCoder の問題を解きまくっていて、さらにshortest記録更新にも熱心に取り組んでいるので、自分も以前に多少は嗜んでいたしと対抗心を燃やして挑んでみたところ、多くの学びがあったので記録として残しておく。\n※使用言語はPython3です\n\n Code Golf とは\nとにかく短いコード(byte数)で目的を達成するプログラムを書くこと。\nhttps://ja.wikipedia.org/wiki/コードゴルフ\nAtCoder では AC をとれれば目的達成といえるし、言語別にすべての提出のコード長も表示されるので分かりやすい。\n\n...",
          "link": "https://zenn.dev/sugyan/articles/5f45e4808ffc95",
          "publishedOn": "2022-11-11T09:16:00.000Z",
          "wordCount": 3540,
          "title": "AtCoderのとある問題でCode Golfに挑戦した記録 (Python3)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fup8iLUX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sugyan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E3%2581%25AE%25E3%2581%25A8%25E3%2581%2582%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A7Code%2520Golf%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E9%258C%25B2%2520%2528Python3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hsYm9tX200WEFYRkxPQUM3a3pmaW5zZG81NG9RZU5PMUgtV2hQbjNJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fup8iLUX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sugyan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E3%2581%25AE%25E3%2581%25A8%25E3%2581%2582%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A7Code%2520Golf%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E9%258C%25B2%2520%2528Python3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hsYm9tX200WEFYRkxPQUM3a3pmaW5zZG81NG9RZU5PMUgtV2hQbjNJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221106_python_csv_input",
          "author": "SiganAI",
          "description": "CSVファイルに保存されたデータを読み込む方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法１：pandasの使用\n個人的に一番使っている方法．\npandasのread_csv関数を使用．\nCSVに保存されているデータをデータフレーム（表形式）で読み込むことが可能．\n引数filepath_or_bufferにCSVファイルのパス（本記事では変数path）を渡す．\n\n インストール方法\n\nterminal\npip install pandas\n\n\n 実際の使用例\n\npandas_test.py\nim...",
          "link": "https://zenn.dev/siganai/articles/20221106_python_csv_input",
          "publishedOn": "2022-11-11T09:02:59.000Z",
          "wordCount": 1412,
          "title": "【Python】CSVファイルの読み込みについて【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/c58b4a16269bad",
          "author": "Tokoroteen",
          "description": "1. 概要\nhttps://zenn.dev/tokoroteen/articles/113ed90c5eefb6\nこちらの続き\n普段MacでAnacondaを使っているので、ラズパイでもcondaを使えるようにしようと思いましたが、Raspberry Pi 4でMinicondaは上手く動かないみたいです。\n参考：https://qiita.com/hanaata/items/39ada844c7c292d2fef1#python\nラズパイ用にberrycondaというものもあるようですが、こちらも\n\nThis project is no longer active\nhttps:/...",
          "link": "https://zenn.dev/tokoroteen/articles/c58b4a16269bad",
          "publishedOn": "2022-11-10T14:48:34.000Z",
          "wordCount": 234,
          "title": "Raspberry Pi 4 model Bで仮想環境をつくる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--e40eoBLY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%25204%2520model%2520B%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--e40eoBLY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520Pi%25204%2520model%2520B%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/honehone/articles/482f9a3b5ca481",
          "author": "プロトケラトプス",
          "description": "最近はJavaScriptを使ったサイトがほとんどなのでPythonのrequestsライブラリだけでスクレイピングなんかをするのは難しくなってきていますね。\nそんなときにはSelenumでブラウザを操作する必要があるのですが、Selenum`はrequestsと違い使うのに準備が必要です。\nというわけでこの記事ではSeleniumを使い始めるまでの方法を残します。\n\n 環境\n\nUbuntu 20.04\nPython 3.8.6\nGoogle Chrome 107.0.5304.110\nSelenium 4.6.0\nchromedriver-binary 107.0.5304.62.0\n...",
          "link": "https://zenn.dev/honehone/articles/482f9a3b5ca481",
          "publishedOn": "2022-11-10T12:00:48.000Z",
          "wordCount": 485,
          "title": "Python+selenumでchromeを動かすまで（Ubuntu）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9ue6ZZJP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25B1%25E3%2583%25A9%25E3%2583%2588%25E3%2583%2597%25E3%2582%25B9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%252Bselenum%25E3%2581%25A7chrome%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2588Ubuntu%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nRmFLWmVibi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYjg5YjA0NzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9ue6ZZJP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25B1%25E3%2583%25A9%25E3%2583%2588%25E3%2583%2597%25E3%2582%25B9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%252Bselenum%25E3%2581%25A7chrome%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2588Ubuntu%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nRmFLWmVibi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYjg5YjA0NzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/books/python_contents",
          "author": "SiganAI",
          "description": "Pythonを使ったデータ処理に関する簡単なコードをまとめていく本",
          "link": "https://zenn.dev/siganai/books/python_contents",
          "publishedOn": "2022-11-10T05:27:59.000Z",
          "wordCount": 53,
          "title": "Python入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uDo1yHlA--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hMGMyYTY4ZDJhLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uDo1yHlA--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hMGMyYTY4ZDJhLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221106_python_csv_output",
          "author": "SiganAI",
          "description": "CSVファイルに保存されたデータを読み込む方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法１：pandasの使用\n個人的に一番使っている方法．\npandasのread_csv関数を使用．\nCSVに保存されているデータをデータフレーム（表形式）で読み込むことが可能．\n引数filepath_or_bufferにCSVファイルのパス（本記事では変数path）を渡す．\n\n インストール方法\n\nterminal\npip install pandas\n\n\n 実際の使用例\n\npandas_test.py\nim...",
          "link": "https://zenn.dev/siganai/articles/20221106_python_csv_output",
          "publishedOn": "2022-11-10T04:54:24.000Z",
          "wordCount": 1412,
          "title": "【Python】CSVファイルの読み込みについて【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/luup/articles/data-oshima-20221105",
          "author": "Luup Developers Blog",
          "description": "こんにちは！\nLuupのData Strategy部（Data Scienceチーム所属）の大島です。ここでは、LuupのData Scienceチームと、Luupのデータ分析の醍醐味である地理空間データを使ったポート密度に関する分析をご紹介します。\n\n LuupのData Scienceチームの紹介\nLuupの事業では、電動アシスト自転車や電動キックボードを停めるポートの獲得、アプリや車両などのプロダクトの設計・開発・運用、車両の充電・再配置といったオペレーション、社会への発信・広報活動など、様々な取り組みが必要です。これらの取り組みをデータドリブンで推進していくのがLuupのData...",
          "link": "https://zenn.dev/luup/articles/data-oshima-20221105",
          "publishedOn": "2022-11-10T03:57:48.000Z",
          "wordCount": 962,
          "title": "エリア面積計算の多面的アプローチ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WT3StYCP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Luup%2520Developers...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%25A2%25E9%259D%25A2%25E7%25A9%258D%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E5%25A4%259A%25E9%259D%25A2%25E7%259A%2584%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS12QkY3OGdoRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NTAyYzg5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WT3StYCP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Luup%2520Developers...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%25A2%25E9%259D%25A2%25E7%25A9%258D%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E5%25A4%259A%25E9%259D%25A2%25E7%259A%2584%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS12QkY3OGdoRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NTAyYzg5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryuta_kojima/articles/671e374268f8b4",
          "author": "ryuta_kojima",
          "description": "はじめに\nはい、今回は有名なタイタニックデータで教師あり学習の分類を行っていきます！\nタイタニックの乗客が生存したかどうか判定してもらいましょう！\n初心者でも実装できて、評価指標などを考察してみるのを目標にします！\n※僕自身も初心者のため、間違っている部分があればコメントにてご指摘いただければ、幸いです。\n今回の流れは\nデータ読み込み => 加工 => モデル作成 => 推論\nで行っていきます！\n\n 環境\n\ncolab\n\n\n 準備\n今回使うのは有名なデータセットでタイタニックデータです。\nまずはデータを読み込みましょう！ってことで、あらかじめgoogle drive...",
          "link": "https://zenn.dev/ryuta_kojima/articles/671e374268f8b4",
          "publishedOn": "2022-11-10T02:26:42.000Z",
          "wordCount": 1233,
          "title": "【教師あり学習・分類】タイタニックデータで生存者分析をやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XJH89E7c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuta_kojima%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%2595%2599%25E5%25B8%25AB%25E3%2581%2582%25E3%2582%258A%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25BB%25E5%2588%2586%25E9%25A1%259E%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25A4%25E3%2582%25BF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7%25E7%2594%259F%25E5%25AD%2598%25E8%2580%2585%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MGpPMUNYQ08xRGtfNjFMTW56M09PTDhHNFFwaEQxdF82YmNnRUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XJH89E7c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuta_kojima%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%2595%2599%25E5%25B8%25AB%25E3%2581%2582%25E3%2582%258A%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25BB%25E5%2588%2586%25E9%25A1%259E%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25A4%25E3%2582%25BF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7%25E7%2594%259F%25E5%25AD%2598%25E8%2580%2585%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MGpPMUNYQ08xRGtfNjFMTW56M09PTDhHNFFwaEQxdF82YmNnRUU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/sklearn-nn-mlpclf02",
          "author": "NekoAllergy",
          "description": "この記事は、\nhttps://zenn.dev/nekoallergy/articles/sklearn-nn-mlpclf01\nの続きです。\n上記の記事を読んでからだと、理解がより進むと思います。\n\n!\n\n 対象読者\n\n機械学習、ニューラルネットワーク、ディープラーニングがしたい方\nPython が何となく分かる方\nMLPClassifier を使いこなしたい方\n\n\n!\n\n この記事で分かること\n\nMLPClassifier の使い方とパラメータ調整の仕方\n\n\n\nPython の基礎を本にまとめています。併せてご覧いただけるととても嬉しいです ↓\nhttps://zenn.dev/ne...",
          "link": "https://zenn.dev/nekoallergy/articles/sklearn-nn-mlpclf02",
          "publishedOn": "2022-11-09T23:11:59.000Z",
          "wordCount": 1285,
          "title": "【図解】MLPClassifierの使い方まとめ【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KtWuVRbA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591MLPClassifier%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KtWuVRbA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:NekoAllergy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591MLPClassifier%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05LUxDaV85Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mimitako/articles/lgb_parameters_list",
          "author": "mimitako",
          "description": "LightGBM のパラメータ一覧\nここを見れば OK...\nそうは言っても、英語だし、意外と見づらいので自分の勉強も兼ねて一度まとめてみました。ちなみに、各パラメータについて説明をしているわけではないので、あしからず。各パラメータの後ろのコメントは他の機械学習などでの別名、一般名だったり、説明だったりします。別名を入れても動くというわけではないのでお気をつけください。\nまた、ここで紹介する params の記法は辞書の特性上 NG（キーの重複）ですが、見やすく紹介する上で必要な表現方法だとご理解ください。\n!\n今回紹介しているパラメータは document v3.3.3 を参照して...",
          "link": "https://zenn.dev/mimitako/articles/lgb_parameters_list",
          "publishedOn": "2022-11-09T23:05:59.000Z",
          "wordCount": 1659,
          "title": "LightGBMのParameter List",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yyqEiWEY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:LightGBM%25E3%2581%25AEParameter%2520List%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yyqEiWEY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mimitako%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:LightGBM%25E3%2581%25AEParameter%2520List%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS10N3ZoNVdBNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MDJlNmJjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/atfujita/articles/0db060faf1f17d",
          "author": "atfujita",
          "description": "3Dの姿勢推定が簡単にできるライブラリを探していたのですが、任意の動画を対象としたチュートリアルが充実したものが少なかったです。\nVideoPose3Dは最新ではないですが、そうした中でも簡単に任意の画像で3Dの姿勢推定ができるいいライブラリだったので備忘録も兼ねて手順をまとめます。\n公式な手順は↓のINFERENCE.md内にあります。\nhttps://github.com/facebookresearch/VideoPose3D\n\n 実行環境\n\nAmazon EC2 p3.2xlarge\nUbuntu20.04\n\n\n 環境構築\n\nCondaでも何でもいいので仮想環境を作ります。\nff...",
          "link": "https://zenn.dev/atfujita/articles/0db060faf1f17d",
          "publishedOn": "2022-11-09T14:30:12.000Z",
          "wordCount": 651,
          "title": "VideoPose3Dをサクッと動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EkrOF6He--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:atfujita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:VideoPose3D%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ncU1FUnBVOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YjI0ZWUyZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EkrOF6He--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:atfujita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:VideoPose3D%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ncU1FUnBVOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YjI0ZWUyZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/irugo/articles/06a67373aa713a",
          "author": "いるんご",
          "description": "これは何？\nこの記事は、東京大学工学部電子情報工学科/電気電子工学科の後期実験「大規模ソフトウェアを手探る」のレポートとして作成されました。この実験では、各班がOSSを1つ選び、開発技法を学びながら新たな機能追加やバグ修正などを試みます。私たちの班(@irungo_ic, @yutyan_ut, @ncrpy)はCPython を選びました。\nhttps://github.com/python/cpython\n\n CPythonとは\nプログラミング言語であるPythonの、C言語による実装です。つまり、C言語で書かれたPythonのインタプリタです。\n\n CPythonを選んだ理由\n...",
          "link": "https://zenn.dev/irugo/articles/06a67373aa713a",
          "publishedOn": "2022-11-09T13:17:29.000Z",
          "wordCount": 2701,
          "title": "Pythonのlistをもっと便利に +α 【大規模ソフトウェアを手探る】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hBO0C2Sz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2582%258B%25E3%2582%2593%25E3%2581%2594%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AElist%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%2520%252B%25CE%25B1%2520%25E3%2580%2590%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%2592%25E6%2589%258B%25E6%258E%25A2%25E3%2582%258B%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IZXpQaW9uWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NDg1YzczYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hBO0C2Sz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2582%258B%25E3%2582%2593%25E3%2581%2594%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AElist%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%2520%252B%25CE%25B1%2520%25E3%2580%2590%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%2592%25E6%2589%258B%25E6%258E%25A2%25E3%2582%258B%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IZXpQaW9uWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NDg1YzczYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/isuya1992/articles/cmd-check-pycode",
          "author": "isuya1992",
          "description": "はじめに\nFlake8やmypyは、Pythonのコードを静的解析するツールである。Flake8はPEP8のコーディング規約、mypyは型ヒントのミスをチェックする。\nただし、全ての規約に従ってコーディングするのはナンセンスなケースもあり得る。この場合、コマンドを追記することで、一部の規約を無視できる。\nflake8 [.pyファイル/ディレクトリのパス] --ignore=E501\nmypy [.pyファイルの/ディレクトリのパス]  --ignore-missing-imports\nPEP8のE501は1行の文字数を79文字以下に制限する規則であり、一般的には不要だろう。\nmyp...",
          "link": "https://zenn.dev/isuya1992/articles/cmd-check-pycode",
          "publishedOn": "2022-11-09T10:37:06.000Z",
          "wordCount": 1856,
          "title": "自作コマンドでFlake8やmypyを一気に行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---3RJRREC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:isuya1992%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%2587%25AA%25E4%25BD%259C%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7Flake8%25E3%2582%2584mypy%25E3%2582%2592%25E4%25B8%2580%25E6%25B0%2597%25E3%2581%25AB%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MU9fdTlOeWlMRldPdzAyRlF2cDNHQmdycGxFamxTdGdFVENyMUs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---3RJRREC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:isuya1992%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%2587%25AA%25E4%25BD%259C%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7Flake8%25E3%2582%2584mypy%25E3%2582%2592%25E4%25B8%2580%25E6%25B0%2597%25E3%2581%25AB%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MU9fdTlOeWlMRldPdzAyRlF2cDNHQmdycGxFamxTdGdFVENyMUs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/d308d408a1803c",
          "author": "banananeko",
          "description": "今回比較するエディタ\n今回比較するエディタは\nこちらです↓\n\nIDLE\nvisual studio code(以下、VScodeとします)\npycharm\n\n\n IDLE\n公式サイト\nhttps://docs.python.org/ja/3/library/idle.html\n\n IDLEとは\nIDLEとは pythonに標準で搭載されているエディタでシンプルなデザインが特徴です\n\n IDLEの機能\n\n 色分け機能\nIDLEには色分け機能があります\n\n 赤色\nエラーの時の文字\n\n 青色\n出力時の文字\n\n 緑色\n「”」でかこまれた文字列\n\n オレンジ色\nキーワードimportやforな...",
          "link": "https://zenn.dev/banananeko/articles/d308d408a1803c",
          "publishedOn": "2022-11-09T08:48:40.000Z",
          "wordCount": 322,
          "title": "pythonのエディタを比較してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iXUXGRUw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iXUXGRUw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/ba57a187654bce",
          "author": "よしだ",
          "description": "import os\nimport time\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.datasets import make_regression\nfrom cmdstanpy import CmdStanModel\n\n データの読み込み\n以下のデータを使用しています。\nx, y, true_coef = make_regression(random_state=12, \n                       n_samples=100, \n  ...",
          "link": "https://zenn.dev/yoshida0312/articles/ba57a187654bce",
          "publishedOn": "2022-11-09T08:35:47.000Z",
          "wordCount": 2184,
          "title": "cmdstanpy : スパースモデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vKdYEawV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E3%2582%25B9%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vKdYEawV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:cmdstanpy%2520%253A%2520%25E3%2582%25B9%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04U0FUUkFHOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mksh/articles/reasons-for-selecting-sendgrid-d39648e23bf398",
          "author": "mksh",
          "description": "概要\nとあるプロジェクトのメール通知機能にてSendGridを採用した理由に関する社内向けの備忘録。実際のプロジェクトに関する情報は抽象化している。\n\n プロジェクトの規模感\nSendGridを採用したプロジェクトでの見積もりは大まかに以下の通りとなる。\n\nユーザ数120名（リリース初期）\n1回/日の定時連絡メール\n10回/月程度（平均）の不定期通知メール（リリース初期）\n\nなお定時連絡および不定期の連絡はユーザそれぞれに対してメールが送信される。\nまたユーザ数は120名単位で増加する見込みあり。\n上記より、リリース初期段階では3,730通/月のメール配信が見込まれる。\n\n メール通...",
          "link": "https://zenn.dev/mksh/articles/reasons-for-selecting-sendgrid-d39648e23bf398",
          "publishedOn": "2022-11-09T00:41:36.000Z",
          "wordCount": 772,
          "title": "【備忘録】SendGrid選定理由",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lS4TQjKV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mksh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591SendGrid%25E9%2581%25B8%25E5%25AE%259A%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lS4TQjKV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mksh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591SendGrid%25E9%2581%25B8%25E5%25AE%259A%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/bugph0bia/articles/dcecf44e4d2082",
          "author": "bugph0bia",
          "description": "はじめに\nPython でログ出力を行う場合、標準ライブラリの logging を使用することが多いと思います。\nlogging モジュールに用意されている既定のハンドラの中の RotatingFlieHander を使用するとファイルのログローテーションが簡単に行えて便利なのですが、ローテーションした古いログファイルを圧縮したい場合はひと手間加える必要があります。\n!\nsyslog を利用したロギングを行うのであれば syslogd の設定でファイルを圧縮することができますが、ここでは、あくまで RotatingFlieHander を使用したログファイル出力におけるファイル圧縮に...",
          "link": "https://zenn.dev/bugph0bia/articles/dcecf44e4d2082",
          "publishedOn": "2022-11-08T14:51:32.000Z",
          "wordCount": 1295,
          "title": "Python でログファイルを圧縮する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QiHnATBX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bugph0bia%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xQWlxYkhjeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3M2MxZWE0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QiHnATBX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bugph0bia%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xQWlxYkhjeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3M2MxZWE0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/harurow/articles/c903de5f479a57",
          "author": "www.harurow",
          "description": "今回やったこと\n開発環境をコンテナに構築しホストのVisual Studio Codeからイジイジできるようにした。\n動作検証環境は Mac mini 2020(Apple M1), MacBook Pro 2019(Intel Core)で検証しています。Windows, Linux では試せていません。\n\n メリット\n開発環境の再現性が高いため以下のようなメリットが得られます。\n\n同じ開発環境をすぐに提供できる[1]\n\nツール・ライブラリのバージョンをプロジェクト毎に決められる\nホストの環境を汚さずにちょっとお試しができる\nDockerの設定によっては構築時の最新バージョンのツー...",
          "link": "https://zenn.dev/harurow/articles/c903de5f479a57",
          "publishedOn": "2022-11-08T13:51:39.000Z",
          "wordCount": 1652,
          "title": "VSCode+Docker+Dev Containerを使って開発環境をコンテナに作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EAkH6Qj---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:www.harurow%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:VSCode%252BDocker%252BDev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HT1FmVUU4bS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3OTViZWQ1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EAkH6Qj---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:www.harurow%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:VSCode%252BDocker%252BDev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HT1FmVUU4bS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3OTViZWQ1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k41531/articles/f47f536a18491a",
          "author": "kaisei",
          "description": "初心に還ってパーセプトロンを実装します。\n\n 単純パーセプトロンがANDを学習している様子\n\n\n パーセプトロンとは\n1958年、Rosenblattによって提案されたネットワークモデル。\n脳の中の生物学的なニューロンを単純化したモデルで、最も単純なニューラルネットワークです。\n線形分離可能な問題であれば解くことができます。\nここではパーセプトロンの中でも単純パーセプトロンを取り扱います。\nパーセプトロンは、ニューロンを次のようなステップでモデル化している。\n（入力がn個で出力が1個のパーセプトロン）\n\n入力信号を受け取る。（入力：x_i）\n入力の重み付きの和を計算（重み：w_i）\n2の...",
          "link": "https://zenn.dev/k41531/articles/f47f536a18491a",
          "publishedOn": "2022-11-08T13:29:00.000Z",
          "wordCount": 704,
          "title": "【Python】単純パーセプトロンを理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--an0B3yHQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaisei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E5%258D%2598%25E7%25B4%2594%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BB%25E3%2583%2597%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dOQ1hOY3JPWXQzaFBqWTkyM255eG8yVkQyczdsNWFfOVlERmxqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--an0B3yHQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaisei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E5%258D%2598%25E7%25B4%2594%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BB%25E3%2583%2597%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dOQ1hOY3JPWXQzaFBqWTkyM255eG8yVkQyczdsNWFfOVlERmxqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/imksoo/articles/81645222f9f30b",
          "author": "きりの",
          "description": "Installing Ansible に従って入れるのだが、標準だと python3-pip がないので python3 -m pip の部分で \"/usr/bin/python3: No module named pip\" になる。\n\nなので、最初に python3-pip をインストールする。\nsudo apt install -y python3-pip\n\n改めて sudo python3 -m pip install ansible を実行する。\nsudo python3 -m pip install ansible",
          "link": "https://zenn.dev/imksoo/articles/81645222f9f30b",
          "publishedOn": "2022-11-08T05:40:27.000Z",
          "wordCount": 166,
          "title": "Ubuntu 22.04 に Ansible をインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d7uCu-3Y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2582%258A%25E3%2581%25AE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ubuntu%252022.04%2520%25E3%2581%25AB%2520Ansible%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2ppZDk3WFBfT29yZjdGUjcwYnMxRmpOU0pnVHZTbXcwdTlwUTlNQW89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d7uCu-3Y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2582%258A%25E3%2581%25AE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Ubuntu%252022.04%2520%25E3%2581%25AB%2520Ansible%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2ppZDk3WFBfT29yZjdGUjcwYnMxRmpOU0pnVHZTbXcwdTlwUTlNQW89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yutafujiwara/articles/2d568f168c2e65",
          "author": "フジワラユウタ",
          "description": "概要\nRaspberry Pi × 電子ペーパーで最新のお天気情報を表示する電子版を作りました！！ 初めてRaspberryを触ってみたので、環境構築から開発するまでの取り組みをZennにまとめました！！\nRaspberryPiを購入して何かを作ろうとしている人、夏休みの工作で何か作ろうと考えている人向けの内容になっております。\n\n 作ったもの\n\n\n ソース\nhttps://github.com/FujiyamaYuta/e_paper_weather_display\n\n 使っているデバイス\n\nRaspberry Pi 3 Model B\nMicro SDカード（32GB）\n電子ペー...",
          "link": "https://zenn.dev/yutafujiwara/articles/2d568f168c2e65",
          "publishedOn": "2022-11-08T03:21:52.000Z",
          "wordCount": 4617,
          "title": "Raspberry Pi  × 電子ペーパーで最新のお天気情報を表示する電子版を作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1Froc5vd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2595%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25A9%25E3%2583%25A6%25E3%2582%25A6%25E3%2582%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Raspberry%2520Pi%2520%2520%25C3%2597%2520%25E9%259B%25BB%25E5%25AD%2590%25E3%2583%259A%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%25E3%2581%25A7%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AE%25E3%2581%258A%25E5%25A4%25A9%25E6%25B0%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E9%259B%25BB%25E5%25AD%2590%25E7%2589%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNdFlrLTVLbUZvVk41X2MzREgtYXNHcTJ2RHB6UnRKTDhhdXpjSEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1Froc5vd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2595%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25A9%25E3%2583%25A6%25E3%2582%25A6%25E3%2582%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Raspberry%2520Pi%2520%2520%25C3%2597%2520%25E9%259B%25BB%25E5%25AD%2590%25E3%2583%259A%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%25E3%2581%25A7%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AE%25E3%2581%258A%25E5%25A4%25A9%25E6%25B0%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E9%259B%25BB%25E5%25AD%2590%25E7%2589%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNdFlrLTVLbUZvVk41X2MzREgtYXNHcTJ2RHB6UnRKTDhhdXpjSEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/e82f4c94d62b4b",
          "author": "Tokoroteen",
          "description": "1. 概要\n研究で実験装置からたくさんのテキストファイルが出てきます。\nこれらのグラフ化する上で、1つずつExcelにインポートするのがめんどくさいので一気にExcel化できるようにしようと考えました。\n完成品はこちら↓\nhttps://colab.research.google.com/drive/1H_83P0nVApHKIQvfUVAyOAgPqxxx85nf?usp=sharing\n区切り文字を選んで、実行し、\n\nファイルを選んで、\n\nExcelファイルにつけたい名前を入力すれば、\n\n出来上がり！！\n\n\n 2. 機能\n\nテキストファイルの区切り文字を選ぶ\n（複数の）テキストフ...",
          "link": "https://zenn.dev/tokoroteen/articles/e82f4c94d62b4b",
          "publishedOn": "2022-11-07T23:00:00.000Z",
          "wordCount": 1321,
          "title": "複数のテキストファイルを１つのExcelファイルにまとめたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--O1aBGvm3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25EF%25BC%2591%25E3%2581%25A4%25E3%2581%25AEExcel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--O1aBGvm3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25EF%25BC%2591%25E3%2581%25A4%25E3%2581%25AEExcel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tatsuya4499/articles/880db89990a73e",
          "author": "Tatsuya",
          "description": "はじめに\n普段は主に機械学習のコードはPyTorchで書いています。とりあえず書きやすいですよね。\nPyTorchは 「Define by Run」 と言われ、計算グラフとデータを流すタイミング同時で、何が良いかと言うと、途中の計算結果を確認できてデバックが楽です。そんなPyTorch信者の私ですが、今回TensorFlowでコードを書く必要性が出てきたのでその時のノウハウを忘れないようにメモとして残しておきます。\nもともとPyTorchを触る前までは、TensorFlowやkerasを触っていたのでなんとなくは把握できていましたが、TensorFlow2になってからの内容はあまり把...",
          "link": "https://zenn.dev/tatsuya4499/articles/880db89990a73e",
          "publishedOn": "2022-11-07T13:45:31.000Z",
          "wordCount": 2370,
          "title": "TensorFlow2で機械学習をはじめたいと思ってる方へ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--avGDOwCj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TensorFlow2%25E3%2581%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E6%2596%25B9%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d5THBtT0M5X2tFdmYyVG9kWHpmcUd5MXI1aFJ1ay1MR3gweXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--avGDOwCj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TensorFlow2%25E3%2581%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E6%2596%25B9%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d5THBtT0M5X2tFdmYyVG9kWHpmcUd5MXI1aFJ1ay1MR3gweXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/940cf394efc85f",
          "author": "nakamura196",
          "description": "概要\nOmeka SのREST APIをPythonから操作可能なパッケージが開発されています。\nhttps://github.com/wragge/omeka_s_tools\nさらに、上記のリポジトリをベースとして、いくつかの機能追加を行なったリポジトリを作成しています。\nhttps://github.com/nakamura196/omeka_s_tools2\n本稿では、このリポジトリについて紹介します。\n\n 使い方\n以下のページを参考にしてください。\nhttps://nakamura196.github.io/omeka_s_tools2/\n本リポジトリはnbdevを用いて開発...",
          "link": "https://zenn.dev/nakamura196/articles/940cf394efc85f",
          "publishedOn": "2022-11-07T09:34:28.000Z",
          "wordCount": 203,
          "title": "Omeka SのREST APIとやりとりするためのPythonパッケージ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FRn__V1r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Omeka%2520S%25E3%2581%25AEREST%2520API%25E3%2581%25A8%25E3%2582%2584%25E3%2582%258A%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FRn__V1r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Omeka%2520S%25E3%2581%25AEREST%2520API%25E3%2581%25A8%25E3%2582%2584%25E3%2582%258A%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tamanugi/articles/b74138a13d0399",
          "author": "たまぬぎ",
          "description": "Amazon Linux2にデフォルトで入っているPythonのバージョンは3.7と少し古く、またyumで入れられるバージョンも3.8と最新バージョンには少し古いです。\nPython3.10とPoetryをインストールする必要があったので手順を忘れないようにメモシておきたいと思います。\n(本当はAnsibleなどで自動化すべきなんでしょうか・・・)\n\n 必要なライブラリのインストール\nyumで必要なライブラリをインストールしておきます。\nopenssl-develは古いものが入っている場合があるので削除して、openssl11をインストールするようにします\n$ sudo yum remo...",
          "link": "https://zenn.dev/tamanugi/articles/b74138a13d0399",
          "publishedOn": "2022-11-07T07:46:42.000Z",
          "wordCount": 312,
          "title": "Amazon Linux2にPython3.10とPoetryをインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FJllKYcB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25AC%25E3%2581%258E%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amazon%2520Linux2%25E3%2581%25ABPython3.10%25E3%2581%25A8Poetry%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11YzJYNnhFZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5OTI0MDY3NWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FJllKYcB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25AC%25E3%2581%258E%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amazon%2520Linux2%25E3%2581%25ABPython3.10%25E3%2581%25A8Poetry%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11YzJYNnhFZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5OTI0MDY3NWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/arkwknsk/articles/cc9d77bddeecf7",
          "author": "アラカワケンスケ",
          "description": "Pythonコードから、パフォーマンスモードに切り替える方法\n\n 動作環境\nBuild 2022.29850\n\n コード\nui.performMode = True",
          "link": "https://zenn.dev/arkwknsk/articles/cc9d77bddeecf7",
          "publishedOn": "2022-11-07T00:03:40.000Z",
          "wordCount": 83,
          "title": "[TouchDesigner]Pythonから、パフォーマンスモードに切替",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LofZ5dEk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25AB%25E3%2583%25AF%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BTouchDesigner%255DPython%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E5%2588%2587%25E6%259B%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tM0pyWW9vOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjUzZDI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LofZ5dEk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25AB%25E3%2583%25AF%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BTouchDesigner%255DPython%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E5%2588%2587%25E6%259B%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tM0pyWW9vOC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjUzZDI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/ab31ea782df6ec",
          "author": "Tokoroteen",
          "description": "1. 概要\nこの記事は第４回の続きです。\nhttps://zenn.dev/tokoroteen/articles/28ad4b0c2ec178/\n第４回ではこれまで集めてきたデータを使って、Doc2Vecでモデル構築を行いました。今回はそのモデルをチューニングしつつ、アクティビティーのレコメンド機能を実装していきます。\n完成したアプリはこちら↓\nhttps://lifac.herokuapp.com/\n例えば「空を飛びたい」とき（検索後に海要素を足して、山要素を引くこともできます！！）\n\n例えば「動物に癒されたい」とき\n\n\n 2. 前回のモデルの確認\nまずは前回作ったモデルでアクテ...",
          "link": "https://zenn.dev/tokoroteen/articles/ab31ea782df6ec",
          "publishedOn": "2022-11-06T23:00:00.000Z",
          "wordCount": 2295,
          "title": "第５回 【Python】まだ見ぬアクティビティーを求めてアソビュー ！Doc2Vecモデルチューニング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cIbFyMre--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E7%25AC%25AC%25EF%25BC%2595%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581Doc2Vec%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cIbFyMre--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E7%25AC%25AC%25EF%25BC%2595%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581Doc2Vec%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/red_picmin/articles/1f0679d32877da",
          "author": "アカピクミン",
          "description": "概要\nGoogle Cloud Translation を利用してテキストを翻訳する手順を解説します。\nGoogle Cloud Translation は課金設定が必要ですが、月あたり500,000 文字まで無料です。\nGoogle Cloud Translation は有料サービスだけに、高品質で高速な翻訳結果が得られます。\n[利用までの手順]\n\nGoogle Cloud プロジェクトの作成\nCloud Translation API の有効化\nサービス アカウントとキーの作成\nサービス アカウント キー ファイルの適用\nクライアント ライブラリのインストール\n翻訳実行\n\n\n G...",
          "link": "https://zenn.dev/red_picmin/articles/1f0679d32877da",
          "publishedOn": "2022-11-06T09:34:41.000Z",
          "wordCount": 521,
          "title": "Google Cloud Translation を利用したテキスト翻訳",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2YHPOi6W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2594%25E3%2582%25AF%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cloud%2520Translation%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E7%25BF%25BB%25E8%25A8%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZkUF9NWmExN2ZBamtPcVlGNXU0RE1xWjdTS0lDelhIdGdKb3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2YHPOi6W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2594%25E3%2582%25AF%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cloud%2520Translation%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E7%25BF%25BB%25E8%25A8%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZkUF9NWmExN2ZBamtPcVlGNXU0RE1xWjdTS0lDelhIdGdKb3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/red_picmin/articles/cf230ca762f04e",
          "author": "アカピクミン",
          "description": "pythonで日付の取得、タイムゾーンの扱い、日付フォーマット等の扱い方を解説します。\n\n import\nfrom datetime import timezone,timedelta,datetime\n\n 日付の扱い一式\n\n    # タイムゾーン定義\n    UTC = timezone(timedelta(hours=0), 'UTC')\n    EST = timezone(timedelta(hours=-5), 'EST')\n    JST = timezone(timedelta(hours=+9), 'JST')\n\n    # 現在時刻取得   \n    now = da...",
          "link": "https://zenn.dev/red_picmin/articles/cf230ca762f04e",
          "publishedOn": "2022-11-06T09:33:38.000Z",
          "wordCount": 632,
          "title": "pythonでの日付の扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X_3fiSLt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2594%25E3%2582%25AF%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A7%25E3%2581%25AE%25E6%2597%25A5%25E4%25BB%2598%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZkUF9NWmExN2ZBamtPcVlGNXU0RE1xWjdTS0lDelhIdGdKb3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X_3fiSLt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2594%25E3%2582%25AF%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%25E3%2581%25A7%25E3%2581%25AE%25E6%2597%25A5%25E4%25BB%2598%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZkUF9NWmExN2ZBamtPcVlGNXU0RE1xWjdTS0lDelhIdGdKb3E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20221106_python_csv",
          "author": "SiganAI",
          "description": "CSVファイルに保存されたデータを読み込む方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法１：pandasの使用\n個人的に一番使っている方法．\npandasのread_csv関数を使用．\nCSVに保存されているデータをデータフレーム（表形式）で読み込むことが可能．\n引数filepath_or_bufferにCSVファイルのパス（本記事では変数path）を渡す．\n\n インストール方法\n\nterminal\npip install pandas\n\n\n 実際の使用例\n\npandas_test.py\nim...",
          "link": "https://zenn.dev/siganai/articles/20221106_python_csv",
          "publishedOn": "2022-11-06T09:30:43.000Z",
          "wordCount": 1412,
          "title": "【Python】CSVファイルの読み込みについて【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DTptF9YI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiganAI%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591CSV%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/horitaka/articles/4fc4a5c19bee22",
          "author": "horitaka",
          "description": "概要\n最近、Pythonの開発で使用するエディタをVSCodeからPyCharmに乗り換えたので、PyCharmの設定をしました。\nファイルを保存したときにlinterとformatterが自動実行されるように設定しました。\n!\n普段のチーム開発ではPyCharm以外のエディタを使用しているメンバーもいます。そのため、pre-commitを使ってcommit時にlinterとformatterが実行されるようにしてコードスタイルがチーム内で統一できるようにしています。\n\nPyCharmのバージョン\n\nCommunity Edition\nバージョン: 2022.2.3\nビルド: 222...",
          "link": "https://zenn.dev/horitaka/articles/4fc4a5c19bee22",
          "publishedOn": "2022-11-06T09:21:03.000Z",
          "wordCount": 927,
          "title": "【PyCharm】ファイル保存時にlinterとformatterが自動実行されるように設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3JG9jjuP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:horitaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590PyCharm%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E4%25BF%259D%25E5%25AD%2598%25E6%2599%2582%25E3%2581%25ABlinter%25E3%2581%25A8formatter%25E3%2581%258C%25E8%2587%25AA%25E5%258B%2595%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UTkJVV28tVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyOGM4OTg3ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3JG9jjuP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:horitaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590PyCharm%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E4%25BF%259D%25E5%25AD%2598%25E6%2599%2582%25E3%2581%25ABlinter%25E3%2581%25A8formatter%25E3%2581%258C%25E8%2587%25AA%25E5%258B%2595%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UTkJVV28tVi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyOGM4OTg3ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takeguchi/articles/f6b4530d57177e",
          "author": "HTake",
          "description": "はじめに\npytorch で ResNet50, ResNet101, ResNet152 の実装をしてみました！\nimport torch\nimport torch.nn as nn\n\n 残差ブロックの実装\n#残差ブロックを作成するクラス\nclass Resblock(nn.Module):\n  def __init__(self, in_channels, out_channels, identity_downsample=None, stride=1):\n    super(Resblock, self).__init__()\n\n    self.expansion = 4\n ...",
          "link": "https://zenn.dev/takeguchi/articles/f6b4530d57177e",
          "publishedOn": "2022-11-06T08:22:23.000Z",
          "wordCount": 2219,
          "title": "pytorch で ResNet50, ResNet101, ResNet152 の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qguz_eoy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:HTake%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:pytorch%2520%25E3%2581%25A7%2520ResNet50%252C%2520ResNet101%252C%2520ResNet152%2520%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MG9xSkRkS3lXRFNjZkU4QW93X0RUV0dqdFl1VE1jNFU1YzBKd1A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qguz_eoy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:HTake%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:pytorch%2520%25E3%2581%25A7%2520ResNet50%252C%2520ResNet101%252C%2520ResNet152%2520%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MG9xSkRkS3lXRFNjZkU4QW93X0RUV0dqdFl1VE1jNFU1YzBKd1A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yukisatoblog/articles/4b3d1379b56106",
          "author": "yuki satou",
          "description": "本日行ったハンズオンはこちら\n\n\n 大まかな流れ\n\nLambda Function を作成する\nLambdaとAmazon Translateを連携させる\nAPI Gatewayを作成する\nAPI GatewayとLambdaを連携させる\nDynamoDBを作成する\nDynamoDBとLambdaを連携させる(完成)\n\n※Amazon Translateの無料枠: 1ヶ月に200万文字まで翻訳無料\n※ハンズオンのLambdaはpythonで記述\n\n lambdaの特徴\n\nec2はサーバー管理を意識しないといけないが、lambdaはコードのみ記述すればよい。\nサーバーのプロビジョニング管理...",
          "link": "https://zenn.dev/yukisatoblog/articles/4b3d1379b56106",
          "publishedOn": "2022-11-06T07:00:28.000Z",
          "wordCount": 479,
          "title": "awsで翻訳web apiを作る方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vbe4tPjg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuki%2520satou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:aws%25E3%2581%25A7%25E7%25BF%25BB%25E8%25A8%25B3web%2520api%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Dd0hVUmg4bi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1OTIxZDc4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Vbe4tPjg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuki%2520satou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:aws%25E3%2581%25A7%25E7%25BF%25BB%25E8%25A8%25B3web%2520api%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Dd0hVUmg4bi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1OTIxZDc4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/naminodarie/articles/467ce8672d4e0b",
          "author": "KZRNM",
          "description": "Pythonは動的型付けなのでダックタイピング(同名で呼び出せるなら)が可能です。\nしかし、型ヒントの需要が増している現在ではインターフェイス的な型定義が欲しくなってきます。\nそんなときに使えるのが typing.Protocol です。\nhttps://docs.python.org/ja/3.8/library/typing.html#typing.Protocol\n\n 使い方\nfrom typing import Protocol\n\nclass Proto(Protocol):\n    def meth(self) -> int:\n        ...\n\n\nclass C:...",
          "link": "https://zenn.dev/naminodarie/articles/467ce8672d4e0b",
          "publishedOn": "2022-11-06T02:43:22.000Z",
          "wordCount": 321,
          "title": "【Python】インターフェイスの型ヒントを実現する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bjE-Ku-y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KZRNM%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MbENEVHVUXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZDYxMGJkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bjE-Ku-y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KZRNM%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MbENEVHVUXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZDYxMGJkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/28ad4b0c2ec178",
          "author": "Tokoroteen",
          "description": "1. 概要\nこの記事は第3回の続きです。\nhttps://zenn.dev/tokoroteen/articles/4d4e5dbfd8d845\n第3回ではアクティビティー予約サイト「アソビュー!」から各アクティビティー施設の口コミをスクレイピングしました。\n休日への想いをアクティビティーという形にするという目的を達成するため、今回は口コミデータを使って、アクティビティーをレコメンドしてくれるモデルを構築していきたいと思います。\n完成したものはこちら↓\nhttps://lifac.herokuapp.com/\n例えば「空を飛びたい」とき（検索後に海要素を足して、山要素を引くこともでき...",
          "link": "https://zenn.dev/tokoroteen/articles/28ad4b0c2ec178",
          "publishedOn": "2022-11-05T23:00:00.000Z",
          "wordCount": 1964,
          "title": "第４回 【Python】まだ見ぬアクティビティーを求めてアソビュー ！機械学習(Doc2Vec)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pKXRuoEl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AC%25AC%25EF%25BC%2594%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%2528Doc2Vec%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pKXRuoEl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AC%25AC%25EF%25BC%2594%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%2528Doc2Vec%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/naminodarie/articles/9a03fba5f6cdbe",
          "author": "KZRNM",
          "description": "前置き\n「コマンドライン引数か環境変数で値を受け取る」という状況があります。\nここでは\npython main.py --foo hoge --bar piyo\nというようなコマンドを考えます。\n\n\nfoo\n\nコマンドラインで値を受け取る\nコマンドラインがなく環境変数 FOO があればその値を使う\nコマンドラインがなく環境変数 FOO もなければエラーとする\n\n\n\nbar\n\nコマンドラインで値を受け取る\nコマンドラインがなく環境変数 BAR があればその値を使う\nコマンドラインがなく環境変数 BAR もなければ defaultbar とする\n\n\n\n\n 実装\n\n bar\nbar の方は...",
          "link": "https://zenn.dev/naminodarie/articles/9a03fba5f6cdbe",
          "publishedOn": "2022-11-05T18:57:04.000Z",
          "wordCount": 1067,
          "title": "【Python】argparse で「環境変数にあればそれを使う」を実現する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--K1n_llYU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KZRNM%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591argparse%2520%25E3%2581%25A7%25E3%2580%258C%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258C%25E3%2581%25B0%25E3%2581%259D%25E3%2582%258C%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%258D%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MbENEVHVUXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZDYxMGJkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--K1n_llYU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KZRNM%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591argparse%2520%25E3%2581%25A7%25E3%2580%258C%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258C%25E3%2581%25B0%25E3%2581%259D%25E3%2582%258C%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%258D%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MbENEVHVUXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZDYxMGJkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum03",
          "author": "derwind",
          "description": "目的\n引き続き cuQuantum で遊んでみるのだが、今回は Qiskit も Cirq も使わずに直接 cuQuantum の Python ラッパを叩いてみたい。\n\n ハミルトニアン\n期待値を計算する対象のハミルトニアンはお馴染みの Pauli Z 演算子とする。\\ket{0} と \\ket{1} で期待値を計算してみたい。\n\n\n 早速計算\nexpectation_pauli.py を参考にするのだが、なかなか C++ なので一部 Python っぽく書き換えて使う。\nimport numpy as np\nimport cupy as cp\n\nimport cuquantum\n...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum03",
          "publishedOn": "2022-11-05T18:10:44.000Z",
          "wordCount": 952,
          "title": "cuQuantum で遊んでみる (3) — 期待値計算",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5STHPLsw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25283%2529%2520%25E2%2580%2594%2520%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5STHPLsw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25283%2529%2520%25E2%2580%2594%2520%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/masaru21/articles/285ff4c3e0d123",
          "author": "lonely_creator_m",
          "description": "先日GitHubにアップロードしたPythonのプログラムで、ウェブアプリにしたいと思い、Web開発のフレームワークを探していました。\n今回は小規模なので、flaskを使ってみることにしました。\n今回は、virtualboxにインストールしたUbuntu22.04に、インストールしました。\n下記の記事で、作業を進めました。\nhttps://sync-g.co.jp/sjobs/python-flask-biginner/\nですが、下記のコマンドを実行するとエラーになりました。\n>>> import Flask\n>>> Flask.__version\nこ...",
          "link": "https://zenn.dev/masaru21/articles/285ff4c3e0d123",
          "publishedOn": "2022-11-05T16:44:44.000Z",
          "wordCount": 523,
          "title": "flaskがインストールできたか確かめるときにハマったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wSBrAfA8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:flask%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E3%2581%258B%25E7%25A2%25BA%25E3%2581%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wSBrAfA8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:flask%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E3%2581%258B%25E7%25A2%25BA%25E3%2581%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sugac/articles/3d2cb78e765d23",
          "author": "須賀",
          "description": "はじめに\nどうやらpythonにおいてローカル変数の情報は関数オブジェクトが所持していないらしく、\nスマートに取得する方法は見つかりませんでした。\n自分はどうしてもローカル変数名を取得したかったので、astモジュールを使って取得を行いましたが、今回のコードだと漏れが生じる可能性もあるので完璧ではないです。\n\n 環境\npython 3.9.12\nwindows\n\n astモジュールとは\n抽象構文木を作成するモジュールです。詳しいことは私も理解していませんが、pythonプログラムの文字列からpythonで実行できるようなデータ形式への変換を行っているっぽいです。\nhttps://doc...",
          "link": "https://zenn.dev/sugac/articles/3d2cb78e765d23",
          "publishedOn": "2022-11-05T12:27:56.000Z",
          "wordCount": 1963,
          "title": "【Python】関数内のローカル変数名を無理やり取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KthhKlBk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%25A0%2588%25E8%25B3%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E9%2596%25A2%25E6%2595%25B0%25E5%2586%2585%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E5%25A4%2589%25E6%2595%25B0%25E5%2590%258D%25E3%2582%2592%25E7%2584%25A1%25E7%2590%2586%25E3%2582%2584%25E3%2582%258A%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15aTh5UGc5SS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWUxNWY0ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KthhKlBk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%25A0%2588%25E8%25B3%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E9%2596%25A2%25E6%2595%25B0%25E5%2586%2585%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E5%25A4%2589%25E6%2595%25B0%25E5%2590%258D%25E3%2582%2592%25E7%2584%25A1%25E7%2590%2586%25E3%2582%2584%25E3%2582%258A%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15aTh5UGc5SS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWUxNWY0ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/def_yuisato/articles/algorithm-divisor-enumeration",
          "author": "佐藤 優偉(Yui Sato)",
          "description": "約数列挙とは\n正の約数 N において、N の約数を全て求めること。\n例) 12 の約数列挙　 → 1,2,3,4,6,12\n\n 通常の実装(O(N))\n\n 【方針】\n\n1 以上 n 以下の整数を i として順番に見ていき、割り切れたら(n % i == 0)i は n の約数と判定する\n時間計算量は 1 から n まで全てを見ていくため O(N)になる。\n\n\n 【実装】\nn = int(input())\nresult = []\nfor i in range(1, n+1):\n    if n % i == 0:\n        result.append(i)\nprint(*resu...",
          "link": "https://zenn.dev/def_yuisato/articles/algorithm-divisor-enumeration",
          "publishedOn": "2022-11-05T11:11:52.000Z",
          "wordCount": 614,
          "title": "約数列挙のアルゴリズムの実装と改善",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9IWbzq0R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E4%25BD%2590%25E8%2597%25A4%2520%25E5%2584%25AA%25E5%2581%2589%2528Yui%2520Sato%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%25B4%2584%25E6%2595%25B0%25E5%2588%2597%25E6%258C%2599%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E6%2594%25B9%25E5%2596%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1QQVU5Q1J4bC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzMyMDk2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9IWbzq0R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E4%25BD%2590%25E8%2597%25A4%2520%25E5%2584%25AA%25E5%2581%2589%2528Yui%2520Sato%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%25B4%2584%25E6%2595%25B0%25E5%2588%2597%25E6%258C%2599%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E6%2594%25B9%25E5%2596%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1QQVU5Q1J4bC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzMyMDk2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hassaku63/articles/75bc1b56b94528",
          "author": "hassaku63",
          "description": "おことわり\n「はじめに」で書く用事を満たしたいなら find - xargs grep で十分です。ここで紹介するツールを使う必要は一切ないです。\nfind . -name \"*.py\" | xargs grep -n 'import'\nast のお勉強がてら作ってみました。\n\n はじめに\n引き継いで以降ずっと塩漬けしてた古いプロジェクトの依存関係を更新しよう、という仕事が発生したのですが、依存関係の定義である requirements.txt が pip freeze の出力そのままリダイレクトしたような内容になっていて少々困りました。\n# 依存関係は明示的に書いてほしい...\np...",
          "link": "https://zenn.dev/hassaku63/articles/75bc1b56b94528",
          "publishedOn": "2022-11-05T09:21:56.000Z",
          "wordCount": 585,
          "title": "[python] import 宣言を複数行またぐケース含めて grep 風出力で検索できるツールを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X-N0EBzu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hassaku63%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255Bpython%255D%2520import%2520%25E5%25AE%25A3%25E8%25A8%2580%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E8%25A1%258C%25E3%2581%25BE%25E3%2581%259F%25E3%2581%2590%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%2520grep%2520%25E9%25A2%25A8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25A7%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1sTzJaUzFTMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDM3YWIzZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X-N0EBzu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hassaku63%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%255Bpython%255D%2520import%2520%25E5%25AE%25A3%25E8%25A8%2580%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E8%25A1%258C%25E3%2581%25BE%25E3%2581%259F%25E3%2581%2590%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%2520grep%2520%25E9%25A2%25A8%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25A7%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1sTzJaUzFTMi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDM3YWIzZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/recommended_vscode",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、主にバックエンド(PythonとTypeScript中心)を開発している私が使っているVSCodeの拡張機能を紹介する。\n\n 拡張機能\n基本的にどのような言語でも対応できる拡張機能を紹介する。\n\n Japanese Language Pack for Visual Studio Code\n\nVSCodeを日本語にできる。\n\n REST Client\n\nVSCode上でgetやpostなどのHTTPリクエストを送信できる。GraphQLにも対応している。\n\n GitLens — Git supercharged\n\ncommit単位でファイルを比較したり、最新の...",
          "link": "https://zenn.dev/nameless_sn/articles/recommended_vscode",
          "publishedOn": "2022-11-05T03:00:00.000Z",
          "wordCount": 512,
          "title": "【VSCode】おすすめの拡張機能 21選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C9Y9RQT6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nukumizu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590VSCode%25E3%2580%2591%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%252021%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C9Y9RQT6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nukumizu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590VSCode%25E3%2580%2591%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%252021%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/9f486cfee75edc",
          "author": "shimo",
          "description": "pytest、unittest.mock.patchらへんでハマっていたのでメモ。\n\n 整理したかったこと\n\n同じ機能で、書き方が何種類もあること\n引数の使い分け\n\n注: このページでは同じものを別の名前で指しているかもしれないです(例:package, module, library という単語は同じものを指すことがある)\n\n テストモジュールについて\n\nunittest ... Pythonビルトインのテストpackage\npytest ... 3rd partyのテストpackage。unittestよりよく使われていて主流らしい\n\nunittestをそのまま使える\nimportし...",
          "link": "https://zenn.dev/shimo_s3/articles/9f486cfee75edc",
          "publishedOn": "2022-11-05T01:27:42.000Z",
          "wordCount": 1656,
          "title": "pytest, mock, patchについて整理したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6_dtiKyL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pytest%252C%2520mock%252C%2520patch%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6_dtiKyL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pytest%252C%2520mock%252C%2520patch%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oeTBieUYtWS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/4d4e5dbfd8d845",
          "author": "Tokoroteen",
          "description": "1. 概要\nこの記事は第２回の続きです。\nhttps://zenn.dev/tokoroteen/articles/61892df019f6d9\n第１回および第２回で、アクティビティー予約サイトであるアソビュー!から掲載されている施設の基本情報を取得しました。\nそこで、本来の目的である口コミ情報を学習し、オススメのアクティビティーを提示するモデルを構築するために口コミ集めの作業に入っていきます！\n完成したアプリはこちら↓\nhttps://lifac.herokuapp.com/\n例えば「空を飛びたい」とき（検索後に海要素を足して、山要素を引くこともできます！！）\n\n例えば「動物に癒さ...",
          "link": "https://zenn.dev/tokoroteen/articles/4d4e5dbfd8d845",
          "publishedOn": "2022-11-04T23:00:00.000Z",
          "wordCount": 2601,
          "title": "第３回 【Python】まだ見ぬアクティビティーを求めてアソビュー ！口コミ スクレイピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d0xg3xBM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AC%25AC%25EF%25BC%2593%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E5%258F%25A3%25E3%2582%25B3%25E3%2583%259F%2520%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d0xg3xBM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AC%25AC%25EF%25BC%2593%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E5%258F%25A3%25E3%2582%25B3%25E3%2583%259F%2520%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kamotan/articles/43c5e3ecde1ed0",
          "author": "かもたん",
          "description": "調べても出てこなかったので垢作って書いておきます。\ndiscord.py 1.7.3\n\n そもそもメッセージリンクって何？\nこの記事読んでる人は取得方法が知りたいでしょうけどちょっとだけ説明させてください。\nメッセージリンクとは、\nhttps://discord.com/channels/xxxxxxxxxx/xxxxxxxxxx/xxxxxxxxxxxxx\nこういつやつです。\n\nDiscord内でメッセージリンクを取得する場合\n!\nメッセージリンクはhttps://discord.com/channels/サーバーID/メッセージチャンネルID/メッセージIDという構成になっています。...",
          "link": "https://zenn.dev/kamotan/articles/43c5e3ecde1ed0",
          "publishedOn": "2022-11-04T14:35:36.000Z",
          "wordCount": 321,
          "title": "Discord.pyでメッセージリンクを取得する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sAlOiKEd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2582%2582%25E3%2581%259F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Discord.py%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0l4VlhqSzFFTmRaem1aQjBaYlRiZHB2Sk5BaGxGVzhfeXBEMms9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sAlOiKEd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2582%2582%25E3%2581%259F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Discord.py%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0l4VlhqSzFFTmRaem1aQjBaYlRiZHB2Sk5BaGxGVzhfeXBEMms9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/soh92/articles/f20994e755974f",
          "author": "ソウ",
          "description": "ns0=Namespace\nCityGMLをElementTreeでパースした時に現れるns0やns1が一体何者なのかというと、Namespace(名前空間)のことです。\nそんな怖いものではありません。鬱陶しいですが。\nこれが\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<core:CityModel xmlns:brid=\"http://www.opengis.net/citygml/bridge/2.0\" xmlns:wtr=\"http://www.opengis.net/citygml/waterbody/2.0\" xmlns...",
          "link": "https://zenn.dev/soh92/articles/f20994e755974f",
          "publishedOn": "2022-11-04T13:52:39.000Z",
          "wordCount": 1100,
          "title": "PlateauのCityGMLをPythonのElementTreeでパースした時に出るns0とかいう邪魔者をぶっ潰す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VRMaT0If--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25BD%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Plateau%25E3%2581%25AECityGML%25E3%2582%2592Python%25E3%2581%25AEElementTree%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E5%2587%25BA%25E3%2582%258Bns0%25E3%2581%25A8%25E3%2581%258B%25E3%2581%2584%25E3%2581%2586%25E9%2582%25AA%25E9%25AD%2594%25E8%2580%2585%25E3%2582%2592%25E3%2581%25B6%25E3%2581%25A3%25E6%25BD%25B0%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1reVgxTmQwXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmYTYxNzRiNDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VRMaT0If--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25BD%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Plateau%25E3%2581%25AECityGML%25E3%2582%2592Python%25E3%2581%25AEElementTree%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E5%2587%25BA%25E3%2582%258Bns0%25E3%2581%25A8%25E3%2581%258B%25E3%2581%2584%25E3%2581%2586%25E9%2582%25AA%25E9%25AD%2594%25E8%2580%2585%25E3%2582%2592%25E3%2581%25B6%25E3%2581%25A3%25E6%25BD%25B0%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1reVgxTmQwXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmYTYxNzRiNDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yag_ays/articles/65a4154d0dedfa",
          "author": "yag_ays",
          "description": "概要\nFaissは、FaceBook Research (現Meta Research) が開発した近似最近傍探索 (Approximate Nearest Neighbor: ANN) のライブラリです。C++で実装されており、GPUでの実行にも対応しているほか、PythonのWrapperも提供されいます。Pythonパッケージではfaiss-cpuとfaiss-gpuの2種類が存在し、公式ではAnacondaでのインストールを推奨しているのですが、PyPIからもパッケージがインストール可能です。\nGPU環境でのFaiss実行を試みたのですが、現在PyPIで提供されているfais...",
          "link": "https://zenn.dev/yag_ays/articles/65a4154d0dedfa",
          "publishedOn": "2022-11-04T07:26:28.000Z",
          "wordCount": 1409,
          "title": "FaissをソースコードからビルドしてGPUで利用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GwCZhHY---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yag_ays%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Faiss%25E3%2582%2592%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%25A6GPU%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KV0FNVXZlQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMWRjYWIzODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GwCZhHY---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yag_ays%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Faiss%25E3%2582%2592%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%25A6GPU%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1KV0FNVXZlQS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMWRjYWIzODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kumamoto/articles/d0fb1208c47365",
          "author": "Kumamoto-Hamachi",
          "description": "1. はじめに 🚀\n\n 1-1. dataclassってなに\nみなさんPythonのdataclass使ってますか？\ndataclassは真新しい機能ではなくPython3.7からある[1]標準ライブラリです。\ndataclassの解説記事ではよく『dataclassとはデータを保持のためのclassである』という説明がされていることが多いです。これはPEP557にある\n\nstore values which are accessible by attribute lookup\nアトリビュート検索でアクセス可能な値の保持\n\n\nData Classes can be thought o...",
          "link": "https://zenn.dev/kumamoto/articles/d0fb1208c47365",
          "publishedOn": "2022-11-04T02:34:32.000Z",
          "wordCount": 2485,
          "title": "PEP557から読み解くPythonのdataclassの嬉しさと他手段との比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X_6vUDPY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kumamoto-Hamachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PEP557%25E3%2581%258B%25E3%2582%2589%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258FPython%25E3%2581%25AEdataclass%25E3%2581%25AE%25E5%25AC%2589%25E3%2581%2597%25E3%2581%2595%25E3%2581%25A8%25E4%25BB%2596%25E6%2589%258B%25E6%25AE%25B5%25E3%2581%25A8%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0ycDhvc0FrWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzM2JiOGEyZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X_6vUDPY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kumamoto-Hamachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:PEP557%25E3%2581%258B%25E3%2582%2589%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258FPython%25E3%2581%25AEdataclass%25E3%2581%25AE%25E5%25AC%2589%25E3%2581%2597%25E3%2581%2595%25E3%2581%25A8%25E4%25BB%2596%25E6%2589%258B%25E6%25AE%25B5%25E3%2581%25A8%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0ycDhvc0FrWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzM2JiOGEyZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/61892df019f6d9",
          "author": "Tokoroteen",
          "description": "1. 概要\nこの記事は第１回の続きです。\nhttps://zenn.dev/tokoroteen/articles/0d1599540dce00\n第１回ではアクティビティー検索サイトであるアソビュー！に掲載されているアクティビティーの基本情報を取得しました。\n今回はそのデータを解析することでアソビュー！内のアクティビティーの特徴に迫っていきたいと思います。\n完成したアプリはこちら\nhttps://lifac.herokuapp.com/\n例えば「空を飛びたい」とき（検索後に海要素を足して、山要素を引くこともできます！！）\n\n例えば「動物に癒されたい」とき\n\n\n 2. 前回取得したデー...",
          "link": "https://zenn.dev/tokoroteen/articles/61892df019f6d9",
          "publishedOn": "2022-11-03T23:30:00.000Z",
          "wordCount": 1400,
          "title": "第２回 【Python】まだ見ぬアクティビティーを求めてアソビュー ！分析",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fXLSKgPj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25AC%25AC%25EF%25BC%2592%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fXLSKgPj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25AC%25AC%25EF%25BC%2592%25E5%259B%259E%2520%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/geb/articles/221103_django_model_summarize",
          "author": "Geb",
          "description": "モデルとは\nDBのテーブル定義とデータの操作を行うクラス\nhttps://docs.djangoproject.com/ja/4.1/topics/db/models/#module-django.db.models\n\n モデル定義\nDBテーブル1つにつきModelクラスを一つ作成し、そのクラスのクラス変数としてフィールドを定義する。\n以下の例では、ある会社の従業員テーブルPersonと部署テーブルDivisionを定義している。\nfrom django.db import models\n\nclass Division(models.Model):\n    name = models...",
          "link": "https://zenn.dev/geb/articles/221103_django_model_summarize",
          "publishedOn": "2022-11-03T23:18:01.000Z",
          "wordCount": 677,
          "title": "Model編 -- 忙しい人のためのDjango + DjangoRestFramework",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2spTC3QJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Geb%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Model%25E7%25B7%25A8%2520--%2520%25E5%25BF%2599%25E3%2581%2597%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEDjango%2520%252B%2520DjangoRestFramework%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ozYWdhdlNoZ1o1Y3NxTUJ6WVNyRnFkZnFfMjZHMWg4d0N4anhLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2spTC3QJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Geb%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Model%25E7%25B7%25A8%2520--%2520%25E5%25BF%2599%25E3%2581%2597%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEDjango%2520%252B%2520DjangoRestFramework%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ozYWdhdlNoZ1o1Y3NxTUJ6WVNyRnFkZnFfMjZHMWg4d0N4anhLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cirq-qsim02",
          "author": "derwind",
          "description": "目的\nGoogle Cirq で遊んでみる (1) — グローバー探索アルゴリズム に引き続き、Google Cirq を使ってグローバー探索アルゴリズムを実行してみたい。のだが、今回はさらに cuQuantum を用いてみたい。\n\n cuQuantum 対応 qsim のビルド\ncuQuantum 対応の qsim を使いたい場合、自分で qsim をビルドしないとならない様子。\nGPU-based quantum simulation on Google Cloud に従う。\n\n 想定環境\n\nUbuntu 18.04\nPython 3.8\nCUDA 11.2\nNVIDIA T4\n...",
          "link": "https://zenn.dev/derwind/articles/dwd-cirq-qsim02",
          "publishedOn": "2022-11-03T17:21:50.000Z",
          "wordCount": 2468,
          "title": "Google Cirq + cuQuantum で遊んでみる (2) — グローバー探索アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--knXFkxFw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Cirq%2520%252B%2520cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--knXFkxFw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Cirq%2520%252B%2520cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/alcnaka/articles/e16eed5c8e291e",
          "author": "alcnaka",
          "description": "はじめに\nせっかくORMを使っているのであれば、いちいち手動で設定しなくても、insertやupdateしたタイミングで、created_atやupdated_atカラムをいい感じにセットして欲しいですよね。\nLaravel(PHP)で使われているEloquentなどではデフォルトの機能としてありますが、SQLModelではドキュメントに記述を見つけられず少し悩みました。また悩むのも嫌なので備忘録として。\n\n 環境\nM1 MBA、macOS 13で、HomebrewでインストールしたPython3.10.8を使用しています。\nPC: MacBook Air M1 2020\nOS: m...",
          "link": "https://zenn.dev/alcnaka/articles/e16eed5c8e291e",
          "publishedOn": "2022-11-03T16:37:46.000Z",
          "wordCount": 1237,
          "title": "SQLModelでcreated_at とupdated_atカラムを自動で更新する【Python3】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vUjl-VYo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:alcnaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:SQLModel%25E3%2581%25A7created_at%2520%25E3%2581%25A8updated_at%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14LVlwc1JoMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmVjODEwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vUjl-VYo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:alcnaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:SQLModel%25E3%2581%25A7created_at%2520%25E3%2581%25A8updated_at%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14LVlwc1JoMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmVjODEwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/a3bb9d8634ca19",
          "author": "ShunDev",
          "description": "概要\n\n はじめに\nShunです. 統計や機械学習を勉強しています. 正規分布を計算上使うことが多いのでよく使う式をまとめてみました.\n\n 機械学習・統計学における位置づけ\n正規分布(normal distribution)※1は連続型確率変数の分布のモデルとして広く利用されている.  出典(1), (2)によれば統計学上きわめて重要な確率分布と位置付けられている.\n\n 確率密度関数\n正規分布の確率密度関数は以下のように書ける.\n\n\\mathcal{N}(x| \\mu, \\sigma^2) = \n\\frac{1}{\\sqrt{2\\pi \\sigma^2}}\n\\exp \\biggl\\{...",
          "link": "https://zenn.dev/shundeveloper/articles/a3bb9d8634ca19",
          "publishedOn": "2022-11-03T13:01:55.000Z",
          "wordCount": 1704,
          "title": "正規分布(1次元)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--u-Ctn2hs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%25AD%25A3%25E8%25A6%258F%25E5%2588%2586%25E5%25B8%2583%25281%25E6%25AC%25A1%25E5%2585%2583%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--u-Ctn2hs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%25AD%25A3%25E8%25A6%258F%25E5%2588%2586%25E5%25B8%2583%25281%25E6%25AC%25A1%25E5%2585%2583%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takunari_jp/articles/9ca79687737b12",
          "author": "Omori Takuya",
          "description": "この記事では、Djangoが備えている「2つ以上のクエリセットを結合する方法」について解説します。\n\n 公式ドキュメントを覗く 🫣\n公式ドキュメントにはこのように書かれています。\n\n union(*other_qs, all=False)\n\nSQLのUNION演算子を使用して、2つ以上のQuerySetの結果を結合します。\n重複する値を許可する場合は、引数allに対してTrueをセットします。\n\nqs1.union(qs_2, qs_3)\n\nunion()は、引数が他のモデルのクエリセットであっても、最初のクエリセットの型のモデルインスタンスを返します。異なるモデルを渡しても、同じフィー...",
          "link": "https://zenn.dev/takunari_jp/articles/9ca79687737b12",
          "publishedOn": "2022-11-03T10:30:00.000Z",
          "wordCount": 687,
          "title": "【Django】2つ以上のクエリセットを結合する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tRxXnOzB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%25912%25E3%2581%25A4%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%25B5%2590%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tRxXnOzB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%25912%25E3%2581%25A4%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%25B5%2590%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takunari_jp/articles/5744f9691bbeef",
          "author": "Omori Takuya",
          "description": "この記事では、Djangoがデフォルトで備えている「新しいQuerySetsを返すメソッド」のうち、「exclude()」について解説します。\n\n 公式ドキュメントを覗く 🫣\n公式ドキュメントにはこのように書かれています。\n\n exclude(*args, **kwargs)\n\n与えられたルックアップ・パラメータにマッチしないオブジェクトを含む新しいQuerySetを返します。複数のパラメータは、SQL文の中でANDで結合され、全体はNOT()で囲まれます。\n\n\n 結論 ⚖️\nexclude()を使うことで、除外条件を指定することができます。\n\n 使い方 💪\n\n 通常\n次の例では、下記2...",
          "link": "https://zenn.dev/takunari_jp/articles/5744f9691bbeef",
          "publishedOn": "2022-11-03T10:30:00.000Z",
          "wordCount": 397,
          "title": "【Django】モデル検索で除外条件を指定する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YrtlQLb6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25A7%25E9%2599%25A4%25E5%25A4%2596%25E6%259D%25A1%25E4%25BB%25B6%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YrtlQLb6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omori%2520Takuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25A7%25E9%2599%25A4%25E5%25A4%2596%25E6%259D%25A1%25E4%25BB%25B6%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15M2ZVRTNjQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjYzdiMmU2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/piroshiki/articles/8b69c848b61ff5",
          "author": "piroshiki",
          "description": "目的：VScode上で予め用意されたdocker環境でデバッグを行えるようにする\n※基本的には参考記事①に従うとリモートデバッグ可能となるため、主に詰まった箇所を補足いたします。\n\n実行環境\nM-1 Mac\nVScode\n\n実行手順\n任意のディレクトリ（ここではvscode-python）に「.devcontainer」ディレクトリを作成する。\n次にdevcontainer.jsonを作成する。これによりDockerFileを参照しイメージコンテナが作られる。\n参考記事①より\n\ndevcontainer.json\n{\n\t\"name\": \"Python Sample\",\n\t// Doc...",
          "link": "https://zenn.dev/piroshiki/articles/8b69c848b61ff5",
          "publishedOn": "2022-11-03T09:11:45.000Z",
          "wordCount": 250,
          "title": "VS code上でdocker環境をつなげてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aySZbkzN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:piroshiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VS%2520code%25E4%25B8%258A%25E3%2581%25A7docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%2592%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mkk0TmpVdkU5TGlVRC03TTdQWjcyRUNvdWYzZFZIV3BHYk44Z3o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aySZbkzN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:piroshiki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VS%2520code%25E4%25B8%258A%25E3%2581%25A7docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%2592%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1Mkk0TmpVdkU5TGlVRC03TTdQWjcyRUNvdWYzZFZIV3BHYk44Z3o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mima_ita/articles/0a3afd5db596ee",
          "author": "mima_ita",
          "description": "目的\nKNPはJuman++の解析結果(形態素列)を入力とし、文節および基本句間の係り受け関係、格関係、照応関係を出力する。\n今回はGoogle ColaboratoryでKNPを動作させる方法について記述する\nこの記事は2022/11/03時点のもので、今後のバージョンアップで動作しなくなる可能性がある。\n\n juman++のインストール\n!wget http://lotus.kuee.kyoto-u.ac.jp/nl-resource/jumanpp/jumanpp-1.02.tar.xz\n!tar xJvf jumanpp-1.02.tar.xz\n%cd jumanpp-1.0...",
          "link": "https://zenn.dev/mima_ita/articles/0a3afd5db596ee",
          "publishedOn": "2022-11-03T08:46:03.000Z",
          "wordCount": 1228,
          "title": "Google Colaboratoryで日本語構文・格・照応解析システムKNPを動作させてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4lnoGmEZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mima_ita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Colaboratory%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E6%25A7%258B%25E6%2596%2587%25E3%2583%25BB%25E6%25A0%25BC%25E3%2583%25BB%25E7%2585%25A7%25E5%25BF%259C%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0KNP%25E3%2582%2592%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pjcDFUQmpUT3lBUnl4aHM3aVk1MEg2b0JZZ3FrRzFjTTZVblJMPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4lnoGmEZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mima_ita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Colaboratory%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E6%25A7%258B%25E6%2596%2587%25E3%2583%25BB%25E6%25A0%25BC%25E3%2583%25BB%25E7%2585%25A7%25E5%25BF%259C%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0KNP%25E3%2582%2592%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pjcDFUQmpUT3lBUnl4aHM3aVk1MEg2b0JZZ3FrRzFjTTZVblJMPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/jcc/articles/4e87dc71f89ba7",
          "author": "jc",
          "description": "先日多言語ニュースWebアプリを作りました。\n通勤電車で当日のニュースをチェックしながら、外国語を勉強できるので、まあまあ使いやすかったです。\nhttps://zenn.dev/jcc/articles/e672181fd7b174\nhttps://zenn.dev/jcc/articles/36f7d95114fc39\n実はこのWebを開発する1年ほど前に、一度Telegram botで多言語ニュースチャットボットを開発していました。今日はそれについて紹介したいと思います。\nhttps://github.com/aibazhang/multitrue-bot\n\n 事前準備\n\n Tele...",
          "link": "https://zenn.dev/jcc/articles/4e87dc71f89ba7",
          "publishedOn": "2022-11-03T08:15:39.000Z",
          "wordCount": 1815,
          "title": "Telegramで多言語ニュースチャットボットを作った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0kjgZNGR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Telegram%25E3%2581%25A7%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Qd0ZXRHU1NC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0kjgZNGR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Telegram%25E3%2581%25A7%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Qd0ZXRHU1NC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tatsuya4499/articles/cc74dec7ddcb9b",
          "author": "Tatsuya",
          "description": "はじめに\nPyTorchを普段触っているのですが、細かいところをなんとなくで今まで過ごしてきたので、今回しっかりまとめていきたいと思います。自分の備忘録になっていますが、少しでも参考になればと思います。\n(Qiitaで書いていたものを引っ越してきたものです)\n\n この記事の対象者\n\n\n.copy(), .detach(), .bachward()がよくわかっていない方\n\nnn.Conv2dのweightやbiasの取得ってどうやんの？\n\nmodel.eval()って結局何してる？って方\n\ntorch.no_grad(), torch.set_grad_enabled()の区別がわから...",
          "link": "https://zenn.dev/tatsuya4499/articles/cc74dec7ddcb9b",
          "publishedOn": "2022-11-03T07:37:00.000Z",
          "wordCount": 1518,
          "title": "PyTorchの気になるところ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dEg0HVxT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:PyTorch%25E3%2581%25AE%25E6%25B0%2597%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d5THBtT0M5X2tFdmYyVG9kWHpmcUd5MXI1aFJ1ay1MR3gweXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dEg0HVxT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:PyTorch%25E3%2581%25AE%25E6%25B0%2597%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d5THBtT0M5X2tFdmYyVG9kWHpmcUd5MXI1aFJ1ay1MR3gweXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taxio/articles/01e198b1e9062a",
          "author": "taxio",
          "description": "Pillow(PIL) でこんな感じに画像を border-radius したい。\n\n\n\nBefore\nAfter\n\n\n\n\n\n\n\n\n\n\n コードの全体像\nfrom PIL import Image, ImageDraw\n\n\nimg = Image.open(\"./lenna.png\")\nradius = 50\n\nmask = Image.new(\"L\", img.size, 0)\nmask_draw = ImageDraw.Draw(mask)\nmask_draw.rounded_rectangle((0, 0, img.width, img.height), radius, fill=...",
          "link": "https://zenn.dev/taxio/articles/01e198b1e9062a",
          "publishedOn": "2022-11-03T06:03:00.000Z",
          "wordCount": 351,
          "title": "Pillow(PIL)でborder-radius",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jvjk_swk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taxio%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Pillow%2528PIL%2529%25E3%2581%25A7border-radius%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PZ1N5SmJ4cC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1MmQyMTNhMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jvjk_swk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taxio%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Pillow%2528PIL%2529%25E3%2581%25A7border-radius%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PZ1N5SmJ4cC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1MmQyMTNhMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/0d1599540dce00",
          "author": "Tokoroteen",
          "description": "1. 概要\n突然ですが私は体験型のアクティビティーが大好きです。サーフィン体験をしたり、屋久杉を見に行ったり、スノードームを作ったり、香水を調製してみたり、、、。\nそんな私が食べログの情報から機械学習でラーメンレコメンドをする記事をみて、これのアクティビティー版をやったら面白いのでは！！と考えました笑\nアクティビティーを探すとき、人は3ステップの思考フローを辿るのではないかと思います。\n\n「ストレスが溜まっているからスカッとしたい」など休みへの想いを考える\n「スカッとするためにはバンジージャンプだな」等、過ごし方を考える\nアクティビティーを探して予約する\n\nこの思考フローの中で、1→...",
          "link": "https://zenn.dev/tokoroteen/articles/0d1599540dce00",
          "publishedOn": "2022-11-03T05:37:01.000Z",
          "wordCount": 1585,
          "title": "【Python】まだ見ぬアクティビティーを求めてアソビュー ！スクレイピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SVPH9kw4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SVPH9kw4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%25BE%25E3%2581%25A0%25E8%25A6%258B%25E3%2581%25AC%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25BD%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2520%25EF%25BC%2581%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k_neko3/articles/8b89b0ab1c29f8",
          "author": "k_neko3",
          "description": "opencvをpythonで触っていたのでその時に作ったもろもろをメモしていく。\n今回は特定のフォルダに入っている複数の画像をforループで開いて、何がしかの処理をするもの。\nやることは以下。\n\nglobでフォルダ内のjpgファイル名を取得しリスト化\nリストの配列数分for inでループ\n\nファイル名を取得\n画像をnumpyでバイナリで開く\n取り込んだバイナリをopencv形式に変更\nopencv形式の画像をグレースケール化\n実際は最後に何がしかの処理をする（トリミングとか）\n\n\n\n\n ソースコード\nimport pathlib\nimport cv2\nimport numpy as np...",
          "link": "https://zenn.dev/k_neko3/articles/8b89b0ab1c29f8",
          "publishedOn": "2022-11-03T03:44:18.000Z",
          "wordCount": 522,
          "title": "opencv+python フォルダ内の全てのjpg画像をforループで処理する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JZtJtHxf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:opencv%252Bpython%2520%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E5%2586%2585%25E3%2581%25AE%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AEjpg%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592for%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JZtJtHxf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:opencv%252Bpython%2520%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E5%2586%2585%25E3%2581%25AE%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AEjpg%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592for%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yuki_f/articles/29614ff655de90",
          "author": "Yuki Fujita",
          "description": "はじめに\nFlaskを用いて簡単なCRUDを再現することができたのでその方法を備忘録的に記事に残そうかと思います！\nもし、誤りや補足などあればコメントしていただければありがたいです！\nこちらの記事は Qiitaに以前投稿した以下の記事と同一の内容となっています。練習がてらzennに投稿してみたものなので、その点ご了承ください🙇\nhttps://qiita.com/Yu_unI1/items/316e03d94f276695ff13\n\n 開発環境\npython 3.7\nanaconda\n\n 作成\n\n フォルダの作成\n以下のような構成で作業を進めていきます！\n.\n└── CRUD\n   ...",
          "link": "https://zenn.dev/yuki_f/articles/29614ff655de90",
          "publishedOn": "2022-11-03T02:51:26.000Z",
          "wordCount": 2654,
          "title": "flask_SQLAlchemyを使ってCRUDを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MzvX3v0k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuki%2520Fujita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:flask_SQLAlchemy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6CRUD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2FkNTJmNGZ3dEowZU5iUTk0clM3TEJlN3NGd1Z3ZzNMMWZmOGM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MzvX3v0k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuki%2520Fujita%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:flask_SQLAlchemy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6CRUD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2FkNTJmNGZ3dEowZU5iUTk0clM3TEJlN3NGd1Z3ZzNMMWZmOGM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zenizeni/books/a64578f98450c2",
          "author": "ZeniZeni",
          "description": "注：本書籍は執筆途中です。\nこの書籍は、とにかく筆者の知りえる研究開発関連の知識をすべて吐き出すことを目的に書かれています。\nPythonを用いた研究を進めるのに必須の環境構築＆開発手法の個人的ベストプラクティスをまとめました。\n実行環境の構築/ディレクトリ構成/プログラムの整備/vscodeでのデバッグなど、とにかく知っておくと余計な苦しみから解放される情報を共有します。\n可能な限り継続的にアップデートしていこうと思っています。",
          "link": "https://zenn.dev/zenizeni/books/a64578f98450c2",
          "publishedOn": "2022-11-02T23:47:11.000Z",
          "wordCount": 77,
          "title": "研究のためのPython開発環境",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/kotaproj/articles/pi_remo2meross",
          "author": "kotaproj",
          "description": "犬を飼っているのですが、寒い日は電気毛布で暖をとっています。\nちょっとした組み合わせで自動化できそうです。\n室内温度と連動させて電気毛布をオンオフするよう作ってみました。\n\n やったこと\n\n今回は、nature remoとwifiタップの組み合わせで行いました。\n\n1時間毎に以下を実施する\nnature remoから温度を取得する\n温度からタップを制御\n\n\n温度が10度未満なら、wifiタップを通電する\n温度が10度以上なら、wifiタップを切る\n\n\nwifiタップには、電気毛布が接続されている\n\n\n 機材一覧\n\n\n\nno\n部品名\n個数\n備考\n\n\n\n\n1\nラズベリーパイ\n1\n今回は、4B...",
          "link": "https://zenn.dev/kotaproj/articles/pi_remo2meross",
          "publishedOn": "2022-11-02T22:45:45.000Z",
          "wordCount": 2446,
          "title": "ペットのための暖房システムをつくったよ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--U8St_6hU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kotaproj%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%259A%2596%25E6%2588%25BF%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1TX1BkcXNfRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyNWExMWJmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--U8St_6hU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kotaproj%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%259A%2596%25E6%2588%25BF%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1TX1BkcXNfRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyNWExMWJmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cirq-qsim01",
          "author": "derwind",
          "description": "目的\nQiskit で遊んでみる (4) と cuQuantum で遊んでみる (2) — グローバー探索アルゴリズム に引き続き、Google Cirq を使ってグローバー探索アルゴリズムを実行してみたい。\n別にグローバー探索アルゴリズムに特別な思い入れがあるわけではなくて、フレームワークの試運転の題材として使っているだけなので、それ自身にはそれほどの意味はない[1]。\n\n 基本的なパッケージのインポート\nとりあえず以下くらいをインポートしておく。SVGCircuit を使わないと回路の可視化がかなり素っ気なくなるので、これは使っていきたい。\nimport numpy as np\n...",
          "link": "https://zenn.dev/derwind/articles/dwd-cirq-qsim01",
          "publishedOn": "2022-11-02T17:17:56.000Z",
          "wordCount": 1836,
          "title": "Google Cirq で遊んでみる (1) — グローバー探索アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j-PmxnDy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cirq%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25281%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j-PmxnDy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Cirq%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25281%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/1b2f7e245c78cd",
          "author": "たきろぐ",
          "description": "背景\n\nこの使い方でJuliaが別に高速じゃないのは分かっていますが…。\n\n 処理の概要\n\nディレクトリにgzファイルが置かれている（000からfffまで4096ファイル分）\ngzファイルの中身は文字列で、各行が1つのJSON文字列になっている\n1つ1つgzを開いて、今探索しているキーと同じキーが含まれているJSON文字列を探す\n抽出したJSON文字列に含まれているデータを集合に保存する\n\n\n 実装\n大まかにこのような感じの実装になっています。Pythonとほぼ同じ処理をそのままJuliaでも書いています。Juliaで書くときは、最初にググって出てきた GZip.jl を使う実装と、...",
          "link": "https://zenn.dev/takilog/articles/1b2f7e245c78cd",
          "publishedOn": "2022-11-02T12:05:34.000Z",
          "wordCount": 656,
          "title": "gzファイルの読み込みパフォーマンス比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QnvFIzl_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:gz%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QnvFIzl_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:gz%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/73585569e2584b",
          "author": "banananeko",
          "description": "IDLEとは\nIDLEとはpythonに標準で搭載されているエディタです。\n公式ドキュメントにも載っていますが以下の特徴があります\n\n\nクロスプラットフォーム\npythonで作られている\ncodeウィンドウとshellウィンドウがある\n\n\n公式ドキュメントはこちら↓\nhttps://docs.python.org/ja/3.10/library/idle.html\n\n IDLEのお勧めする理由\n私がIDLEをお勧めする理由はいくつかあります\nとりあえずはじめにその理由をざっとみてください\n\nデザインがシンプル\n予測変換機能がある\nコードを色分けしてくれる\n動作が軽い\n\n\n 詳しくみて...",
          "link": "https://zenn.dev/banananeko/articles/73585569e2584b",
          "publishedOn": "2022-11-02T11:59:13.000Z",
          "wordCount": 174,
          "title": "IDLE最強説を立ててみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---_Bnwcbz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:IDLE%25E6%259C%2580%25E5%25BC%25B7%25E8%25AA%25AC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---_Bnwcbz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:IDLE%25E6%259C%2580%25E5%25BC%25B7%25E8%25AA%25AC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/akaneiy/articles/f8e928e23ead60",
          "author": "akane",
          "description": "KingOFTimeの勤怠データをスプレッドシートに出力するというだけの処理です。\nUipathで実行していましたが、朝、昼、夜間と定期的に実行したいのと、UI操作もなく明らかにUipathである必要がないと感じていてpythonに書き換えましたので備忘録残します。\n\n anacondaで行う処理\n\n 新しい仮想環境を作成\nconda create -n 仮想環境名\n\n 作成した仮想環境へ移動する\nconda activate 仮想環境名\n\n 必要なライブラリをインストールする\n今回使用するライブラリは下記の通りです。\n●requests・・・KingOfTimeのAPIを叩く\n●mat...",
          "link": "https://zenn.dev/akaneiy/articles/f8e928e23ead60",
          "publishedOn": "2022-11-02T07:24:02.000Z",
          "wordCount": 2188,
          "title": "python スプレッドシートへ出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--35w8Qwd2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:akane%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%2520%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKejhnY3R1WW51TFhvUEN5WlJDZ0Y4WWppcE93N2hZWmUtTklmeDk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--35w8Qwd2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:akane%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python%2520%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25B8%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKejhnY3R1WW51TFhvUEN5WlJDZ0Y4WWppcE93N2hZWmUtTklmeDk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/toccaduong/articles/27a682b6ff8092",
          "author": "DuongLE",
          "description": "Django + Dockerよく使うコマンド（メモ）\n# バージョン確認\ndocker-compose exec web ./manage.py --version\n\n# プロジェクトをスタート\ndocker-compose up -d --build\ndocker-compose run web django-admin.py startproject 【project_name】 .\n\n# 全て削除\n・（コンテナを止めて、ネットワーク、ボリュームもイメージを削除）\ndocker-compose down --rmi all --volumes\n\n# アプリ作成\ndocker-c...",
          "link": "https://zenn.dev/toccaduong/articles/27a682b6ff8092",
          "publishedOn": "2022-11-02T07:21:35.000Z",
          "wordCount": 2839,
          "title": "Django Crud Example",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8ylMcyUr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:DuongLE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Django%2520Crud%2520Example%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15bGQzaEJxLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NDgxNDAxOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8ylMcyUr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:DuongLE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Django%2520Crud%2520Example%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15bGQzaEJxLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NDgxNDAxOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k_neko3/articles/af447fa4240771",
          "author": "k_neko3",
          "description": "PythonのOpenCVをインストール\npip install opencv-python\nNumpyは入ってたので割愛。\n以下、公式のチュートリアル。\nhttps://docs.opencv.org/4.x/d6/d00/tutorial_py_root.html\nmatplotlibのインストール\npip install matplotlib",
          "link": "https://zenn.dev/k_neko3/articles/af447fa4240771",
          "publishedOn": "2022-11-02T04:11:47.000Z",
          "wordCount": 88,
          "title": "Pythonのopencvをインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tvxXRFRQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AEopencv%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tvxXRFRQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AEopencv%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/k_neko3/articles/47fc0c9594f5dd",
          "author": "k_neko3",
          "description": "病気から復活…！\nまだ療養中。\nいろいろ苦しんでいた間に世の中が少しずつ変わって、pythonで少し作りたいものができたので、ちょっとpipを更新したという単なるメモ。\nバージョン確認は以下。\npip --version\nアップグレードは以下。\npy -m pip install --upgrade pip\nインストールしてあるライブラリの確認。\npip list\npythonのバージョンアップなどで色々苦戦したので、またメモしておきたい。",
          "link": "https://zenn.dev/k_neko3/articles/47fc0c9594f5dd",
          "publishedOn": "2022-11-01T13:09:05.000Z",
          "wordCount": 79,
          "title": "pipのバージョン確認とアップグレードコマンドのメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2k517XgK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pip%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2k517XgK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:k_neko3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pip%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jZk9TS3dEai0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMjVmOWJmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/marketer/articles/84cb594e4182bf",
          "author": "marketer",
          "description": "公式サイトの説明によると：\n「2captcha.comは手動の画像認識によるCAPTCHA突破サービスです。こちらではスキャンしたドキュメント、レターヘッド、CAPTCHAからリアルタイムでテキストを認識する必要がある人と、画面からテキストを入力してお金を稼ぎたい人を見つけることができます。\nThe system employs English-speaking and Russian-speaking workers.\nこのシステムでは英語を話す作業者とロシア語を話す作業者が働いています。\nアンチCAPTCHAサービス、2captcha.comは、pixodrom、antigate、a...",
          "link": "https://zenn.dev/marketer/articles/84cb594e4182bf",
          "publishedOn": "2022-11-01T07:02:25.000Z",
          "wordCount": 1864,
          "title": "CAPTCHAソリューションの自動化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VOq4Czq3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:marketer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:CAPTCHA%25E3%2582%25BD%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oYXVBZVhsQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3Yzk0YmJjMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VOq4Czq3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:marketer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:CAPTCHA%25E3%2582%25BD%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oYXVBZVhsQy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3Yzk0YmJjMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ibaraki/articles/74f9cd726d5885",
          "author": "いばらき",
          "description": "はじめに\nパーソルのブログによると、2022年プログラミング言語おすすめランキング1位はPythonらしいです。\nhttps://persol-tech-s.co.jp/hatalabo/it_engineer/607.html#_1-1\n実際にPythonは人気の言語なので、ここ数年「Pythonでコードを書いたからアプリに組み込んで欲しい」という依頼がそれなりにあります。\nしかし実際にコードを貰うと、可読性が低かったり、そもそも環境依存が強すぎてまともに動かなかったりするケースが多くて対応に苦労することが多いです。\nということで、仕事で人に渡すPythonのコードを書くなら最低限...",
          "link": "https://zenn.dev/ibaraki/articles/74f9cd726d5885",
          "publishedOn": "2022-11-01T06:00:01.000Z",
          "wordCount": 490,
          "title": "Pythonで書いたコードを人に渡す前に、最低限やって欲しいこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WHjNKzvL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BA%25BA%25E3%2581%25AB%25E6%25B8%25A1%25E3%2581%2599%25E5%2589%258D%25E3%2581%25AB%25E3%2580%2581%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%25AC%25B2%25E3%2581%2597%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WHjNKzvL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BA%25BA%25E3%2581%25AB%25E6%25B8%25A1%25E3%2581%2599%25E5%2589%258D%25E3%2581%25AB%25E3%2580%2581%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%25AC%25B2%25E3%2581%2597%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hibikine/articles/1febb4eb03b604",
          "author": "響音カゲ",
          "description": "※サードパーティのソフトウェアを使用します。本記事の内容を実行する場合は自己責任でお願いします。\n\nみなさん、イカしてますか？　ようやくS+0に上がった響音カゲです。\nスプラトゥーン3の戦績分析って楽しいですよね。自分のその日の動きが数字で見えるので、試合動画と一緒に見返すとすごく勉強になります。\nスプラトゥーンの戦績ログを管理できる stat.ink というサービスに自動で戦績をアップロードできる s3s というスクリプトが公開されていたので、Ubuntuサーバー上にserviceとしてセットアップするまでのやり方を解説します。\n\n 実行環境\n\n ソフトウェア\n\n\ns3s@2d59ff...",
          "link": "https://zenn.dev/hibikine/articles/1febb4eb03b604",
          "publishedOn": "2022-11-01T04:52:47.000Z",
          "wordCount": 1003,
          "title": "【Splatoon3】s3sを立てて戦績をstat.inkに自動アップする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iFR9OBmZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%259F%25BF%25E9%259F%25B3%25E3%2582%25AB%25E3%2582%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Splatoon3%25E3%2580%2591s3s%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E6%2588%25A6%25E7%25B8%25BE%25E3%2582%2592stat.ink%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pFYWotVkFHaEJ0OEFJX1ZFZ01uQTVsamt1aG5BQXdrU0hLaHFNVDFvPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iFR9OBmZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%259F%25BF%25E9%259F%25B3%25E3%2582%25AB%25E3%2582%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Splatoon3%25E3%2580%2591s3s%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E6%2588%25A6%25E7%25B8%25BE%25E3%2582%2592stat.ink%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pFYWotVkFHaEJ0OEFJX1ZFZ01uQTVsamt1aG5BQXdrU0hLaHFNVDFvPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taketooon/articles/c46b6ebef46117",
          "author": "taketooon",
          "description": "introduction\nやっぱりブラックボックス化がお得意なpythonさん。今回はあんまり体系化されていないxmlモジュールの使い方についてお話する。今回もこの記事の目的は研究にxml解析が必要になったので、その理解を深めるため。参考サイトは以下のものになる。\nhttps://pg-chain.com/python-xml-elementtree\nhttps://marusankakusikaku.jp/python/standard-library/xml.etree.ElementTree/\n\n xml内のnodeを取得する操作\n\n xmlの解析\n\nxmlの構造解析\nimpo...",
          "link": "https://zenn.dev/taketooon/articles/c46b6ebef46117",
          "publishedOn": "2022-10-31T17:53:53.000Z",
          "wordCount": 417,
          "title": "pythonでxmlの解析を0から学んでいく",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SZrswar4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7xml%25E3%2581%25AE%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SZrswar4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7xml%25E3%2581%25AE%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum02",
          "author": "derwind",
          "description": "目的\n引き続き cuQuantum で遊んでみたい。適当な題材が思いつかないので、Qiskit で遊んでみる (4) を元にグローバー探索アルゴリズムを実行したみたい。\n\n コンテンツ\nQiskit で遊んでみる (4) に対応させる形で用意した、GitHub のこちら をそのまま利用する。\n解説はすべて前回の記事に譲ることにして、今回も 2 つの解を持つオラクルを作成して探索を実行する。\n\n 基本的な回路（オラクル/Diffuser）の実装\n\n 基本的なパッケージのインポート\nまずは基本的なパッケージをインポートする。cuQuantum を使うのだが、デフォルトのバックエンド Cu...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum02",
          "publishedOn": "2022-10-31T17:48:36.000Z",
          "wordCount": 2092,
          "title": "cuQuantum で遊んでみる (2) — グローバー探索アルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LBgy_PIN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LBgy_PIN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taketooon/articles/7789f634d52e6d",
          "author": "taketooon",
          "description": "introduction\n自分の研究でOSモジュールを使う事になり、なんか中身が見えなくて気持ち悪い、、、と思いながら適当に使っていたんだけど、前もグラフの使い方をまとめたら簡単に使えるようになったから、ファイル操作も記事を書いたら簡単に理解できるんじゃね？と思ってこれを書いていく。基本的にはkinocodeさんの動画をみつつ、そこから自分なりに考えたことを付け足していく方式でやっていくので、もしも分かりづらいなぁ...とおもったらkinocodeさんの動画を見るといい。\nhttps://www.youtube.com/watch?v=PV53-nTFE0w\n\n ディレクトリ名・フォ...",
          "link": "https://zenn.dev/taketooon/articles/7789f634d52e6d",
          "publishedOn": "2022-10-31T16:58:07.000Z",
          "wordCount": 460,
          "title": "pythonでのファイル操作を0から学んでいく",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f-rlUKci--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%2593%258D%25E4%25BD%259C%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f-rlUKci--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taketooon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%2593%258D%25E4%25BD%259C%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/8a99818767a5f0",
          "author": "たきろぐ",
          "description": "はじめに\n普段体調を整えるために筋トレやジョギングをしており、それぞれアプリに運動が記録されているのですが、githubみたいなカレンダー（草）にして確認するとやる気が出るかな？と思って可視化してみることにしました。\n自作しようと思ったらちゃんと calmap というものが作られていたので使ってみます。\n\nCalendar heatmaps from Pandas time series data https://pythonhosted.org/calmap/\n\n\n\n 実装\n上の公式ドキュメントに従って、yearplot を使ってデータを描画しています。雰囲気このような実装です。\n...",
          "link": "https://zenn.dev/takilog/articles/8a99818767a5f0",
          "publishedOn": "2022-10-31T13:35:49.000Z",
          "wordCount": 271,
          "title": "PythonのCalmapを使ってトレーニング記録を可視化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AwhRCoK6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AECalmap%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2598%25E9%258C%25B2%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AwhRCoK6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AECalmap%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2598%25E9%258C%25B2%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/momiji777/articles/aae52473c0255d",
          "author": "momiji777",
          "description": "ライブラリのインストール\npip install yt-dlp\n\n コーディング\nfrom yt_dlp import YoutubeDL\n\nydl_opts = {'format': 'best'}\nwith YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https://www.youtube.com/watch?v=47Jl-_0wQHM&t=1s'])\n\n 実行結果\n[youtube] 47Jl-_0wQHM: Downloading webpage\n[youtube] 47Jl-_0wQHM: Downloading a...",
          "link": "https://zenn.dev/momiji777/articles/aae52473c0255d",
          "publishedOn": "2022-10-31T12:51:27.000Z",
          "wordCount": 275,
          "title": "pythonを使ってyoutubeをダウンロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cJFCxojb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6youtube%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cJFCxojb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6youtube%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/duke13/articles/81b75c22f373fc7",
          "author": "duke13",
          "description": "前説\n風俗を利用するならば可愛い女性のほうが望ましい！！\n男性諸君なら誰しもがそう願う。しかし、可愛い嬢は得てして人気であり、予約を取ることは非常に難しい。\nそこで、男性諸君の願いを叶えられるように人気嬢を予約できる確率を少しでも高められプログラムを組んでみた。\n\n 概要\nやりたいことはシンプルである。\n\n風俗サイトをスクレイピング\n出勤データを蓄積する\n空いている日があれば自分のLINE通知を出す\n\nなお、スクレイピングするにあたり、対象サイトはスクレイピングが可能かどうかを必ず許可をとってほうが賢明である。\n\n 事前準備\n通知システム作成にあたり以下の環境を用意する必要がある。\n...",
          "link": "https://zenn.dev/duke13/articles/81b75c22f373fc7",
          "publishedOn": "2022-10-31T09:08:09.000Z",
          "wordCount": 2251,
          "title": "風俗の人気嬢の空き予約を確認して自分のLine通知する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--452kQEhC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:duke13%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%25A2%25A8%25E4%25BF%2597%25E3%2581%25AE%25E4%25BA%25BA%25E6%25B0%2597%25E5%25AC%25A2%25E3%2581%25AE%25E7%25A9%25BA%25E3%2581%258D%25E4%25BA%2588%25E7%25B4%2584%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AELine%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290SmJQZ1gxdlZ0UWdlVE5lQUlWRmQ3a2Y5c0dEQWMwRnJ3ZlhrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--452kQEhC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:duke13%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%25A2%25A8%25E4%25BF%2597%25E3%2581%25AE%25E4%25BA%25BA%25E6%25B0%2597%25E5%25AC%25A2%25E3%2581%25AE%25E7%25A9%25BA%25E3%2581%258D%25E4%25BA%2588%25E7%25B4%2584%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AELine%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290SmJQZ1gxdlZ0UWdlVE5lQUlWRmQ3a2Y5c0dEQWMwRnJ3ZlhrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/banananeko/articles/dfb788343291fe",
          "author": "banananeko",
          "description": "pythonモジュール制作\nこの記事ではいくつかの種類に分けて\n解説していこうと思っています\n\n引数:なし　return:なし\n引数:あり　return:なし\n引数:なし　return:あり\n引数:あり　return:あり\n\nまずはじめに1番目の引数:なし　return:なし\nをしようと思います\n\n 引数:なし　return:なし\nこのような関数は最も基本的で\n関数を実行するとその関数の中に書かれている\n内容を実行すると終了して元のコードに戻ります\n\n 例\n\nmymodule.py\ndef hello():\n    print(\"hello\")\n\n\nmain.py\nimport my...",
          "link": "https://zenn.dev/banananeko/articles/dfb788343291fe",
          "publishedOn": "2022-10-31T07:31:55.000Z",
          "wordCount": 440,
          "title": "pythonで pythonのモジュールを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RgDFl1wF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7%2520python%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RgDFl1wF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:banananeko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2581%25A7%2520python%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkxNUGFId2N2akxZOWRHaGlpc01LVWxtc2dnaDRRVk85c0ZrSHA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kasega0/articles/869d7965097520",
          "author": "かせがお",
          "description": "結論\nencorder として PyYAML の safe_dump(sort_keys=False) を渡す。\nimport yaml as pyyaml\n\ndef encorder(data, **kw):\n    return pyyaml.safe_dump(data, sort_keys=False, **kw)\n\nobj.to_yaml_file(\"obj.yml\", encoder=encorder)\n\n 背景\nPython で dataclass を yaml で serialize/deserialize したいなと思っていたら dataclass-wizard な...",
          "link": "https://zenn.dev/kasega0/articles/869d7965097520",
          "publishedOn": "2022-10-31T05:11:45.000Z",
          "wordCount": 576,
          "title": "YAMLWizard で順序を保ってシリアライズする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--czfB-ILO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%259B%25E3%2581%258C%25E3%2581%258A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:YAMLWizard%2520%25E3%2581%25A7%25E9%25A0%2586%25E5%25BA%258F%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvU0E4MmFVbUhJQTNFblBIb01zd0dBblFodDJ0OFpiODlzbTMwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--czfB-ILO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%259B%25E3%2581%258C%25E3%2581%258A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:YAMLWizard%2520%25E3%2581%25A7%25E9%25A0%2586%25E5%25BA%258F%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvU0E4MmFVbUhJQTNFblBIb01zd0dBblFodDJ0OFpiODlzbTMwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ekusiadadus/articles/twitter_bigquery_jupyterlab1",
          "author": "ekusiadadus",
          "description": "Twitter を BigQuery と JupyterLab で分析してみた ~ Twitter API v2 ~\n\n はじめに\n最近、Twitter のデータを分析してみたいと思い、Twitter のデータを取得する方法を調べてみました。\nTwitter API というものがあるらしく、Twitter APIを見てみると、結構面白そうだったので、Twitter API に申し込んでみました。\n申し込みが通ったので、Twitter API を使って、Twitter のデータを取得してみました。\nhttps://twitter.com/ekusiadadus/status/15867...",
          "link": "https://zenn.dev/ekusiadadus/articles/twitter_bigquery_jupyterlab1",
          "publishedOn": "2022-10-30T20:45:41.000Z",
          "wordCount": 3322,
          "title": "Twitter を BigQuery と JupyterLab で分析してみた ~ Twitter API v2 ~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0-kH0O0a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ekusiadadus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Twitter%2520%25E3%2582%2592%2520BigQuery%2520%25E3%2581%25A8%2520JupyterLab%2520%25E3%2581%25A7%25E5%2588%2586%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%7E%2520Twitter%2520API%2520v2%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQTdHV3Q0eUx2U1dIamZ5eVhhSjNMSWpaUVJ4MlNxTFNvMzExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0-kH0O0a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ekusiadadus%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Twitter%2520%25E3%2582%2592%2520BigQuery%2520%25E3%2581%25A8%2520JupyterLab%2520%25E3%2581%25A7%25E5%2588%2586%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%7E%2520Twitter%2520API%2520v2%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQTdHV3Q0eUx2U1dIamZ5eVhhSjNMSWpaUVJ4MlNxTFNvMzExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gyabi/articles/3d2b3fb4e5bf23",
          "author": "Kano",
          "description": "はじめに\nOpenAIより公開されている翻訳AIであるWhisperをDocker+WSL+GPUで動かしてみたので備忘録。\nhttps://openai.com/blog/whisper/\n※WSL＋Docker環境でのGPU有効化はすでに可能なものとする。もし必要だったらコメントください。\n全体の流れは以下の記事を参考にさせていただきました。\nhttps://zenn.dev/kento1109/articles/d7d8f512802935\n\n そもそもWhisperとは？\nこちらの記事が非常に細かく解説されており参考になりました。\nhttps://zenn.dev/kwash...",
          "link": "https://zenn.dev/gyabi/articles/3d2b3fb4e5bf23",
          "publishedOn": "2022-10-30T15:01:47.000Z",
          "wordCount": 217,
          "title": "Docker＋WSL＋GPUでWhisperを動かしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vzZtSwiW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25EF%25BC%258BWSL%25EF%25BC%258BGPU%25E3%2581%25A7Whisper%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Mcmg0ZUUtYy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlMmVhMWE1YWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vzZtSwiW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%25EF%25BC%258BWSL%25EF%25BC%258BGPU%25E3%2581%25A7Whisper%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Mcmg0ZUUtYy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlMmVhMWE1YWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/cdb555d6124a2a",
          "author": "Tanny",
          "description": "この記事は何？\nPythonでよく使われるリンター・フォーマッターについて「しっかり」理解するために整理した情報をまとめました。\n📋書いてあること\n\nリンターとフォーマッターの違いと役割\nPythonで用いられるリンター・フォーマッターの概要と使い方\nVS Codeでの利用方法\n\n🧑‍💻対象としたリンター・フォーマッター\n\n\n\nツール名\n種別\n概要\n\n\n\n\nFlake8\nリンター\n論理エラー・PEP8スタイルなどのチェック\n\n\nBlack\nフォーマッター\nPEP8に従ったスタイルフォーマット\n\n\nisort\nフォーマッター\nモジュールのインポート順のフォーマット\n\n\nmypy\nリンタ...",
          "link": "https://zenn.dev/tanny/articles/cdb555d6124a2a",
          "publishedOn": "2022-10-30T14:54:41.000Z",
          "wordCount": 1156,
          "title": "Pythonのリンター・フォーマッターをしっかりと理解する（Flake8, Black, isort, mypy）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LLBT7gsC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tanny%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Python%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25BB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A3%25E3%2581%258B%25E3%2582%258A%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Flake8%252C%2520Black%252C%2520isort%252C%2520mypy%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1uQXJxQmY3OS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4ZGJmODc0NjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LLBT7gsC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tanny%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Python%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25BB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A3%25E3%2581%258B%25E3%2582%258A%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Flake8%252C%2520Black%252C%2520isort%252C%2520mypy%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1uQXJxQmY3OS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4ZGJmODc0NjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}