{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/junkor/articles/3df5f7ac9751c7",
          "author": "7e+8",
          "description": "※Jupyter Notebook形式で実行し、Markdown形式でエクスポートしたものを一部改変して作っているので若干見づらいです。\n\n 概要\npandasなどは小規模~中規模くらいのデータセットの処理や分析には有効だが、\nメモリに乗り切らないレベルのデータ量は処理できない。\nまた、GILによって基本的に1スレッドでの動作になるため、マシンスペックを最大限活かし切るのは難しい。\n遅延評価、並列分散処理によって所謂ビッグデータといわれるレベルのテーブルデータの処理・分析に使うことができ、\n更にpandasとの連携・併用ができるツールとしてpysparkが存在するため紹介する。\nなお、詳...",
          "link": "https://zenn.dev/junkor/articles/3df5f7ac9751c7",
          "publishedOn": "2023-04-03T16:37:36.000Z",
          "wordCount": 2600,
          "title": "pyspark入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0F5bQTAy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pyspark%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0F5bQTAy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pyspark%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/junkratmecha/articles/516e884a3116b6",
          "author": "Junk",
          "description": "やりたいこと\n\n精度強めのモデルである程度の量でFTしたら、自動ラベリングできないか。\nBboxのアノテーションは修正も楽だから、一度ラベル済のをツールでパラパラめくって、間違っているものを手動ラベリングすることで効率上がらないか。\nDetecton2を触ってみたい、あ~ツールキットね~って言えるようになりたい!\n※Twitterやコメントなどで諸々は優しくアドバイスやご指摘などください。\n\n\n Detectron2って\nDetectron2はFacebook AIのオープンソースPJで、PyTorchの物体検出ツールキットです。\n検出できる内容はざっくり以下。\n\n物体検知 Boun...",
          "link": "https://zenn.dev/junkratmecha/articles/516e884a3116b6",
          "publishedOn": "2023-04-03T16:19:39.000Z",
          "wordCount": 4159,
          "title": "Bounding Boxの自動ラベリングの試み(Detectron2)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W85iemfm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bounding%2520Box%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25A9%25E3%2583%2599%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E8%25A9%25A6%25E3%2581%25BF%2528Detectron2%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxOWNjODdlZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W85iemfm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bounding%2520Box%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25A9%25E3%2583%2599%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E8%25A9%25A6%25E3%2581%25BF%2528Detectron2%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxOWNjODdlZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/1e6d8fbab66ca9",
          "author": "sergicalsix",
          "description": "はじめに\n本記事ではメンバーの定義におけるpropertyの説明をします。\n基本的に趣味や学部の研究レベルでは、通常のメンバーの定義で事足ります。\n通常のメンバー定義やその意義については以下の記事で解説しています。\nhttps://zenn.dev/sergicalsix/articles/2c7832353b6afa\npropertyはプログラムの堅牢化やバリデーションで用いられる他、世の中のプログラムで広く使われているため、理解は必須です。\n\n propertyとは\nクラスのメンバーで変数のように参照することのできる関数のことをプロパティといいます。\nもっともわかりやすい使用例は...",
          "link": "https://zenn.dev/sergicalsix/articles/1e6d8fbab66ca9",
          "publishedOn": "2023-04-03T12:07:08.000Z",
          "wordCount": 465,
          "title": "Pythonでclassを使う: 設計編(3) propertyでメンバーの定義",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HIBqSJE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%2520%25E8%25A8%25AD%25E8%25A8%2588%25E7%25B7%25A8%25283%2529%2520property%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HIBqSJE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%2520%25E8%25A8%25AD%25E8%25A8%2588%25E7%25B7%25A8%25283%2529%2520property%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/karamawanu/articles/d1df0d95136b42",
          "author": "karamawanu",
          "description": "俗にフルスタックフレームワークと呼ばれるミドルウェアでは設定をハードコーディングする場合が多い。config.py とか config.php がそれである。\nしかしあらゆる案件に限らず文字列定数はソースコードの内外に定義できた方が何かと便利である。\n最近はオワコンとされてる12条項アプリケーションでも同様の主張がある。\nhttps://12factor.net/ja/config\n12条項アプリケーションでは、環境変数を使うことを主張してるが、それに加えて小生はINIファイルを推したい。\nもともと手書きでの運用を意識しており、セクション／key/valueにより大項目小項目の機能もある...",
          "link": "https://zenn.dev/karamawanu/articles/d1df0d95136b42",
          "publishedOn": "2023-04-03T08:19:37.000Z",
          "wordCount": 195,
          "title": "dataclasses.dataclassの応用例、環境設定を受け取る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SDkUfIoZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dataclasses.dataclass%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E4%25BE%258B%25E3%2580%2581%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SDkUfIoZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dataclasses.dataclass%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E4%25BE%258B%25E3%2580%2581%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karamawanu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/460683ee113535",
          "author": "Darman",
          "description": "モジュラス演算を学習したので、負の数のモジュラス演算を使ってじゃんけんのプログラムを作成しました。\nhttps://zenn.dev/yutabeee/articles/7c69c655166532\n\n コード全体\n以下に、負の数のモジュラス演算を用いたPythonでのジャンケンプログラムのサンプルコードを示します。\nimport random\n\ndef main():\n    hands = {0: 'グー', 1: 'チョキ', 2: 'パー'}\n    print('ジャンケンを開始します。手を選んでください。')\n    print('0: グー, 1: チョキ, 2: パー')...",
          "link": "https://zenn.dev/yutabeee/articles/460683ee113535",
          "publishedOn": "2023-04-03T05:10:30.000Z",
          "wordCount": 546,
          "title": "Pythonで負の数のモジュラス演算を用いてジャンケンを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lU46jfBI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E8%25B2%25A0%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2582%25B9%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lU46jfBI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E8%25B2%25A0%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2582%25B9%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e573a98948a996",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-190 A - Very Very Primitive Game\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    d = b - a\n    print('Aoki' if d > 0 else 'Takahashi' if d < 0 else 'Aoki' if c == 0 else 'Takahashi')\n\n\nif __name__ == \"__main__\":\n    m...",
          "link": "https://zenn.dev/hyperdb/articles/e573a98948a996",
          "publishedOn": "2023-04-03T03:33:47.000Z",
          "wordCount": 321,
          "title": "［AtCoder］ABC-190｜A - Very Very Primitive Game",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SnVjNFxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CA%2520-%2520Very%2520Very%2520Primitive%2520Game%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SnVjNFxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CA%2520-%2520Very%2520Very%2520Primitive%2520Game%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ae1705b5d701ef",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-190 B - Magic 3\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, s, d = getIntMap()\n    l = getIntListRow(n)\n\n    a = False\n    for x, y in l:\n        if x < ...",
          "link": "https://zenn.dev/hyperdb/articles/ae1705b5d701ef",
          "publishedOn": "2023-04-03T03:33:47.000Z",
          "wordCount": 396,
          "title": "［AtCoder］ABC-190｜B - Magic 3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s93zjZlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CB%2520-%2520Magic%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s93zjZlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-190%25EF%25BD%259CB%2520-%2520Magic%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/decfb4f686b55c",
          "author": "Darman",
          "description": "単一プロジェクトの場合\nPythonプロジェクトの理想的なディレクトリ構成はプロジェクトの規模や目的によって異なりますが、一般的な構成を以下に示します。\nproject_name/\n│\n├── project_name/\n│   ├── __init__.py\n│   ├── main.py\n│   ├── module1.py\n│   ├── module2.py\n│   └── ...\n│\n├── tests/\n│   ├── __init__.py\n│   ├── test_module1.py\n│   ├── test_module2.py\n│   └── ...\n│\n├──...",
          "link": "https://zenn.dev/yutabeee/articles/decfb4f686b55c",
          "publishedOn": "2023-04-03T02:31:40.000Z",
          "wordCount": 1677,
          "title": "Pythonプロジェクトのディレクトリ構成 : Part2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y0tg10p6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2520%253A%2520Part2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y0tg10p6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2520%253A%2520Part2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/ba3978ab28aa65",
          "author": "nakamura196",
          "description": "概要\nRDFデータの作成にあたり、Excelで作成したデータから、RDFデータに変換するPythonライブラリを試作しました。まだまだ中途半端な状態ですが、備忘録です。\n\n ノートブック\n以下のノートブックから試用いただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/ExcelからRDFデータを作成する.ipynb\n\n 変換元のExcelデータ\n以下のようなExcelファイルを作成します。\nhttps://docs.google.com/spreadsheets/d/16SufG6...",
          "link": "https://zenn.dev/nakamura196/articles/ba3978ab28aa65",
          "publishedOn": "2023-04-03T00:56:45.000Z",
          "wordCount": 130,
          "title": "ExcelからRDFを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IDO_0o1J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2581%258B%25E3%2582%2589RDF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IDO_0o1J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2581%258B%25E3%2582%2589RDF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/5cda82c09ac52e",
          "author": "Josh Nobus",
          "description": "はじめに\nこの記事は以下の記事の続きです。\nhttps://zenn.dev/wsuzume/articles/cb1511666e2f99\n今回はオプティマイザをカスタマイズします。大抵は Adam とか既に実装されてるやつを使っておけばいいのですが Riemann 多様体上の最適化、有名どころだと双曲埋め込みとかに使いたい場合はオプティマイザをカスタムする必要があります。そんな必要や欲求に駆られる変態は地球上にそんなにいないと思いますが。\n今回作成したノートブックはこちら。\n\n オプティマイザのカスタマイズ方法\n公式ドキュメントの『Creating a custom optimi...",
          "link": "https://zenn.dev/wsuzume/articles/5cda82c09ac52e",
          "publishedOn": "2023-04-02T14:26:47.000Z",
          "wordCount": 3501,
          "title": "TensorFlow の使い方練習３：オプティマイザのカスタマイズ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l5mS-w0k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2593%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2597%25E3%2583%2586%25E3%2582%25A3%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l5mS-w0k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2593%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2597%25E3%2583%2586%25E3%2582%25A3%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/3b942449de9911",
          "author": "tkyk",
          "description": "例文\nまず簡単なコードを記載してみます。\na = 'test'\nprint (a)\nこれを実行すると、「test」という文字が出力されます。\n1行目の意味は、「aという箱にtestという文字を格納してね」ということです。\n2行目の意味は、「aに格納されている内容（＝test）を表示してね」ということです。\nプログラミングをする際に、長々とコードを書くのではなく、なるべく省略して行いたいので、こういった処理をします。\nExcelをイメージしてみてください。\nどこかのセルで「=B1」という記載をすると、B1に入力された内容が挿入されますよね？\nこれと同じイメージです。\n\n 変数とは\n上記...",
          "link": "https://zenn.dev/tkyk/articles/3b942449de9911",
          "publishedOn": "2023-04-02T14:26:34.000Z",
          "wordCount": 140,
          "title": "Python入門②～変数・代入～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--33HvxpPI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A1%25EF%25BD%259E%25E5%25A4%2589%25E6%2595%25B0%25E3%2583%25BB%25E4%25BB%25A3%25E5%2585%25A5%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--33HvxpPI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A1%25EF%25BD%259E%25E5%25A4%2589%25E6%2595%25B0%25E3%2583%25BB%25E4%25BB%25A3%25E5%2585%25A5%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/9cf4d0c6668c79",
          "author": "tkyk",
          "description": "ここではPythonを自身のPCでプログラミングしていく際に必要な環境構築について紹介します。\n\n Pythonのインストール\nこちらからダウンロードできます。\nhttps://www.python.org/downloads/\n\n\n Anacondaについて\n「Anaconda」というものをダウンロードして環境構築する方法もあります。\n通常のPythonに加えて、ライブラリというオプションもあらかじめ一緒にインストールできます。\nこちらで環境構築を進めてもらっても良いかと思います。\n\n IDE（統合開発環境）について\n様々な言語のプログラミングを同一環境で行えるツールです。\nPytho...",
          "link": "https://zenn.dev/tkyk/articles/9cf4d0c6668c79",
          "publishedOn": "2023-04-02T14:26:10.000Z",
          "wordCount": 121,
          "title": "Python入門①～環境構築～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2gy5xeSF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A0%25EF%25BD%259E%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2gy5xeSF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2585%25A5%25E9%2596%2580%25E2%2591%25A0%25EF%25BD%259E%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojomoeko/articles/python-project-with-mkdocs",
          "author": "okojomoeko",
          "description": "お仕事でpythonを使うことがあって、その開発環境をどうやって整備しようかと思っていたところでした。\nよくある構成のpyenv+poetryのpython開発環境を作るとともに、ドキュメントもちゃんとやりたいなということで、ユーザー向けのAPIドキュメントに加えて、Pythonコードの設計とかを記述できるように開発者向けドキュメントとしてmkdocsを併用したpythonプロジェクトの環境を作ってみました。\nこの記事では作るまでの流れを自分のための備忘録的な感じで残しておこうと思います。\n\n 今回試した環境\n\nUbuntu 22.04.2 LTS (MacBook Air M1のLim...",
          "link": "https://zenn.dev/okojomoeko/articles/python-project-with-mkdocs",
          "publishedOn": "2023-04-02T14:23:30.000Z",
          "wordCount": 1331,
          "title": "Poetryとmkdocsとsphinxを使ってPythonのプロジェクトを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RQeyoaN3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2581%25A8mkdocs%25E3%2581%25A8sphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RQeyoaN3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2581%25A8mkdocs%25E3%2581%25A8sphinx%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojomoeko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMNkVKb2h6OEduQlRFRzd6SUFtNUZobl9JV1hKaHZ0UWw5SDA4MU93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tkyk/articles/ef2c0f8b567355",
          "author": "tkyk",
          "description": "はじめまして。\nプログラミングのことを色々調べていたらZennに出会いました。\n今後はここに学んだことをアウトプットしていきたいと思っています。\n\n 今まで\n大学時代の専攻は英米文学という、スーパー文系でした。\n更に大学時代、サークルの人間関係の悪化がきっかけで、引きこもり生活を何年か続けていました。\n結局6年半かけて大学を卒業しました。\n社会人になってからは主に営業・企画畑で仕事をしてきました。\n現在はSaaS企業で営業企画の部署にいます。\n30歳で結婚し、現在35歳で、妻と娘（2歳）の3人暮らしです。\n子供が生まれる前は、土日・深夜早朝問わず働けていましたが、子供が生まれてからは、1...",
          "link": "https://zenn.dev/tkyk/articles/ef2c0f8b567355",
          "publishedOn": "2023-04-02T14:14:58.000Z",
          "wordCount": 87,
          "title": "35歳でプログラミング入門する男の自己紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aonbLsJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:35%25E6%25AD%25B3%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%25E7%2594%25B7%25E3%2581%25AE%25E8%2587%25AA%25E5%25B7%25B1%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aonbLsJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:35%25E6%25AD%25B3%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%25E7%2594%25B7%25E3%2581%25AE%25E8%2587%25AA%25E5%25B7%25B1%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkyk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MGJkMWFmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lot36z/articles/6ac1a0f7cebf3c",
          "author": "のっかー",
          "description": "Pythonでdebounceを実現するサンプルコードです。\nこのサンプルコードでは、最後のユーザ入力から2秒間入力がない場合に最後の入力をメッセージとして出力する仕組みになっています。\nPython 3.10.10 で動作確認済みです。\nサンプルコードについて補足説明しますと、\nnonlocalを使用することで、\n関数の外側の変数（例. timer, callback, waittime）にアクセスしています。\nまた、debouncerは「引数として与えた関数callbackをwaittime秒だけdebounceした関数を返す」関数で、\n以下サイトのJavaScriptの実装をほぼそ...",
          "link": "https://zenn.dev/lot36z/articles/6ac1a0f7cebf3c",
          "publishedOn": "2023-04-02T12:36:52.000Z",
          "wordCount": 636,
          "title": "Pythonでdebounce",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zyLL5uDn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Python%25E3%2581%25A7debounce%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zyLL5uDn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Python%25E3%2581%25A7debounce%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/c51a759af9b5ca",
          "author": "ShunDev",
          "description": "概要\nモンテカルロ積分の証明を忘れていたことに気づいたので証明を行う. モンテカルロ積分とは乱数を用いた積分手法である.\n\n 定義・性質\n以下の積分を確率変数を用いて行うことを考える\n\n関数: g(x).\n積分: \\theta = \\int_0^1 g(x) dx.\n確率変数: X : X \\backsim U(0,1).\n\nこのとき, \\theta について以下が成り立つ.\n\n\\mathbb{E}[g(X)] = \\int_0^1 g(x) \\cdot \\frac{1}{1-0} dx = \\theta.\n\n\nすなわち, \\mathbb{E}[g(X)] を推定すればよい. ここで...",
          "link": "https://zenn.dev/shundeveloper/articles/c51a759af9b5ca",
          "publishedOn": "2023-04-02T11:28:53.000Z",
          "wordCount": 1722,
          "title": "[統計学]モンテカルロ積分の証明と実践",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--t8DkrmQL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E7%25A9%258D%25E5%2588%2586%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--t8DkrmQL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E7%25A9%258D%25E5%2588%2586%25E3%2581%25AE%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShunDev%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/3ca01bea711e67",
          "author": "Tanny",
          "description": "はじめに\nPythonのforループって、なんだか難しくないですか？？🤔\nナゾのrange()関数が登場したり、リストを与えたらそのまま値を取得できたりと、はじめて出会う考え方も多いですよね。自分も初心者の頃は、これらの挙動を理解するのに苦労しました。実はこれまでも、なんとなくの理解だったりします。\nそこで今回は、Pythonの繰り返し処理の仕組みをStep-by-stepで読み解くことで、forループで何が行われているかをしっかりと把握することを目指します。「forループは書けるけど、その仕組みはよくわかっていない」という方にオススメです。\n!\n軽い気持ちで調べ始めたところ、for...",
          "link": "https://zenn.dev/tanny/articles/3ca01bea711e67",
          "publishedOn": "2023-04-02T11:18:14.000Z",
          "wordCount": 1561,
          "title": "いまさら聞けない！Pythonのforループの仕組みをStep-by-stepで理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yq1PcGOj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E8%2581%259E%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581Python%25E3%2581%25AEfor%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592Step-by-step%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yq1PcGOj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E8%2581%259E%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581Python%25E3%2581%25AEfor%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592Step-by-step%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ovrsa/articles/6e66c50f3b3429",
          "author": "ovrsa",
          "description": "この記事では、MacでReact (Next.js) と Python (Flask) を使ってウェブアプリケーションを開発する方法を紹介します。また、データベースとしてSQLiteを利用し、データの永続化も行います。\n\n 必要なソフトウェアのインストール\nまずはじめに、以下のソフトウェアをインストールしておきます。\n\nNode.js (Next.js開発のため)\nPython (Flask開発のため)\n\nNode.jsのインストールは、公式サイトからMac用のインストーラをダウンロードしてインストールしてください。\nhttps://nodejs.org/en/download/pack...",
          "link": "https://zenn.dev/ovrsa/articles/6e66c50f3b3429",
          "publishedOn": "2023-04-02T09:28:47.000Z",
          "wordCount": 909,
          "title": "React (Next.js) と Python (Flask) を使ったアプリケーションの作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8qql7buA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%2528Next.js%2529%2520%25E3%2581%25A8%2520Python%2520%2528Flask%2529%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8qql7buA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%2528Next.js%2529%2520%25E3%2581%25A8%2520Python%2520%2528Flask%2529%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/001e4c9b3630bc",
          "author": "Darman",
          "description": "int_to_binary関数\ndef int_to_binary(num):\n    binary = []\n    while num:\n        binary.insert(0, num % 2)\n        num //= 2\n    return binary\n\n エントリーポイント\ndef main():\n    input_number = int(input(\"整数を入力してください: \"))\n    binary_representation = int_to_binary(input_number)\n    print(f\"2進数表現: {binary_...",
          "link": "https://zenn.dev/yutabeee/articles/001e4c9b3630bc",
          "publishedOn": "2023-04-02T04:13:19.000Z",
          "wordCount": 301,
          "title": "[Python] 整数を2進数に変換する関数",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dLlqmSvq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E6%2595%25B4%25E6%2595%25B0%25E3%2582%25922%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dLlqmSvq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E6%2595%25B4%25E6%2595%25B0%25E3%2582%25922%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ca5518d416d17f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 A - Slot\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('Won' if len(set(list(s))) == 1 else 'Lost')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ca5518d416d17f",
          "publishedOn": "2023-04-02T02:37:48.000Z",
          "wordCount": 240,
          "title": "［AtCoder］ABC-189｜A - Slot",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FWDXHnc2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CA%2520-%2520Slot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FWDXHnc2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CA%2520-%2520Slot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/52e39584b75ce8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-189 B - Alcoholic\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, x = getIntMap()\n    l = getIntListRow(n)\n\n    a = [v * p for v, p in l]\n\n    s = 0\n    c = 0\n ...",
          "link": "https://zenn.dev/hyperdb/articles/52e39584b75ce8",
          "publishedOn": "2023-04-02T02:37:47.000Z",
          "wordCount": 435,
          "title": "［AtCoder］ABC-189｜B - Alcoholic",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DbIUwjyx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CB%2520-%2520Alcoholic%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DbIUwjyx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-189%25EF%25BD%259CB%2520-%2520Alcoholic%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/38d61de05c1731",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 A - Three-Point Shot\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x, y = getIntMap()\n\n    print('Yes' if abs(x - y) < 3 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/38d61de05c1731",
          "publishedOn": "2023-04-02T02:37:46.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-188｜A - Three-Point Shot",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b4Mwfg5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CA%2520-%2520Three-Point%2520Shot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b4Mwfg5p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CA%2520-%2520Three-Point%2520Shot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0276fe7b46d9e3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-188 B - Orthogonality\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    b = getIntList()\n\n    c = []\n    for i in range(n):\n        c.append(a[i] * b[i])\n\n    print('Y...",
          "link": "https://zenn.dev/hyperdb/articles/0276fe7b46d9e3",
          "publishedOn": "2023-04-02T02:37:45.000Z",
          "wordCount": 361,
          "title": "［AtCoder］ABC-188｜B - Orthogonality",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jQHtZQri--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CB%2520-%2520Orthogonality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jQHtZQri--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-188%25EF%25BD%259CB%2520-%2520Orthogonality%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hiro345/articles/044240a308b9cd",
          "author": "Hiroshi Koyama",
          "description": "Heroku でアカウントを登録したところ、多要素認証の設定が必要でした。セキュリティ強化の一旦として、Heroku のように多要素認証の設定を強制するサービスが増えてきています。少し調べてみました。\n\n OTP\n多要素認証のひとつにワンタイムパスワードの利用があり、よく使われています。ワンタイムパスワード（OTP）とは の説明\nOTP には、TOTP(Time-based One-time Password)や HOTP(HMAC-based One-time Password) の方式があります。HOTPの「H」は、Hash-based Message Authentication ...",
          "link": "https://zenn.dev/hiro345/articles/044240a308b9cd",
          "publishedOn": "2023-04-01T15:41:12.000Z",
          "wordCount": 958,
          "title": "多要素認証のワンタイムパスワードを利用する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZRhNjx2L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%259A%25E8%25A6%2581%25E7%25B4%25A0%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZRhNjx2L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%259A%25E8%25A6%2581%25E7%25B4%25A0%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hg/articles/4cf2dbc432621e",
          "author": "hi_go",
          "description": "はじめに\n今年のエイプリルフールに、Twitterで「自分は実はAIでした」というネタをやりました。\nそして、その一環として過去の自分のツイートからマルコフ連鎖を使用してツイートを生成してみました[1]。\nせっかくなのでそのやり方を簡単にメモしておきます。\n\n 基本方針\nhttps://qiita.com/hitsumabushi845/items/647f8bbe8d399f76825c\n基本的にこちらの記事を踏襲する形で作業していきます。\nただし、現在はTwitterからダウンロードできる自分の全ツイートはtweets.csvではなくtweets.jsに入っているため、主にその仕...",
          "link": "https://zenn.dev/hg/articles/4cf2dbc432621e",
          "publishedOn": "2023-04-01T15:00:00.000Z",
          "wordCount": 1502,
          "title": "Pythonでマルコフ連鎖を使って自分のツイートから新たな文章を生成する（2023年3月版）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mELVjdhn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E9%2580%25A3%25E9%258E%2596%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25EF%25BC%25882023%25E5%25B9%25B43%25E6%259C%2588%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hi_go%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwMWZkMGIyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mELVjdhn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E9%2580%25A3%25E9%258E%2596%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E6%2596%2587%25E7%25AB%25A0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25EF%25BC%25882023%25E5%25B9%25B43%25E6%259C%2588%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hi_go%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwMWZkMGIyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimakaze_soft/articles/8a9fac7296bd4d",
          "author": "shimakaze_soft",
          "description": "Pythonを用いてのGoFの定義した23個のデザインパターンの一つであるObserverパターンの実装方法について解説します。\nObserverパターンは、「振る舞い関するデザインパターン」に分類されます。\n\n Observerパターンとは？\nobserverパターンには主に大きく分けて二つの役割が存在します。\n観察対象(Subject)の何らかの状態が変化した際に、Observer(観察者)に通知を行います。\n通知を受けたObserver(観察者)は状態変化に応じた処理を行います。\nそのためPublish/subscribeモデルとも言えます。\n簡単に言えば、「データの更新を複数のオ...",
          "link": "https://zenn.dev/shimakaze_soft/articles/8a9fac7296bd4d",
          "publishedOn": "2023-04-01T11:54:00.000Z",
          "wordCount": 1237,
          "title": "Pythonでデザインパターンを学ぼう (Observer)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FofZN8a0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Observer%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FofZN8a0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Observer%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/23a7081d784fa2",
          "author": "Darman",
          "description": "木構造の表現方法\n木構造を２次元配列で表現しています。\nNodes[Node[Left, Right, Data]]\n\nLeft , Right : 連結するNodeのインデックス\nData : Nodeに含まれるデータ\n\nnode_data = [\n    [1,    2,    10],\n    [3,    4,     5],\n    [5,    None, 12],\n    [None, None,  2],\n    [6,    7,     8],\n    [None, None, 11],\n    [None, None,  6],\n    [None, None...",
          "link": "https://zenn.dev/yutabeee/articles/23a7081d784fa2",
          "publishedOn": "2023-04-01T09:42:22.000Z",
          "wordCount": 890,
          "title": "２分木探索（通りがけ順）をPythonで表現してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fsPeiN6v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2592%25E5%2588%2586%25E6%259C%25A8%25E6%258E%25A2%25E7%25B4%25A2%25EF%25BC%2588%25E9%2580%259A%25E3%2582%258A%25E3%2581%258C%25E3%2581%2591%25E9%25A0%2586%25EF%25BC%2589%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fsPeiN6v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2592%25E5%2588%2586%25E6%259C%25A8%25E6%258E%25A2%25E7%25B4%25A2%25EF%25BC%2588%25E9%2580%259A%25E3%2582%258A%25E3%2581%258C%25E3%2581%2591%25E9%25A0%2586%25EF%25BC%2589%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/da0f8cfb5ee960",
          "author": "sergicalsix",
          "description": "多重継承とダイヤモンド継承\n多重継承とは、クラスが複数のクラスを継承することです。\n多重継承の一つの例であるダイヤモンド継承とは、多重継承の一種であり、クラスAを継承したクラスB、クラスAを継承したクラスCが存在しているときに、クラスBとクラスCを継承することです。\nダイヤモンド継承は図にすると以下です。\n\n 多重継承の例\nもっとも簡単な多重継承の書き方は以下です。\nclass A:\n    def __init__(self):\n        pass\nclass B:\n    def __init__(self):\n        pass\nclass C(A,B):\n    ...",
          "link": "https://zenn.dev/sergicalsix/articles/da0f8cfb5ee960",
          "publishedOn": "2023-04-01T04:10:40.000Z",
          "wordCount": 895,
          "title": "Pythonでclassを使う:番外編(1) 多重継承&ダイヤモンド継承",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Qg3XjAgg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25281%2529%2520%25E5%25A4%259A%25E9%2587%258D%25E7%25B6%2599%25E6%2589%25BF%2526%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2589%25E7%25B6%2599%25E6%2589%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Qg3XjAgg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253A%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25281%2529%2520%25E5%25A4%259A%25E9%2587%258D%25E7%25B6%2599%25E6%2589%25BF%2526%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2589%25E7%25B6%2599%25E6%2589%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/80248e2caf2d63",
          "author": "tirimen",
          "description": "本記事の目的\n例に漏れず、言語化して浅い理解を深くしていく。今回はベイズ推定。ベイズ統計学という言葉もあるように、統計の中でもメジャーだと思われる。このベイズ推定を、いつも通り理論→実践で理解する。理論についてはこちらの書籍を参考にさせていただいた。（amazonに飛ぶのでご注意ください）\nhttps://www.amazon.co.jp/道具としてのベイズ統計-涌井-良幸/dp/4534046472\n\n ベイズ理論とは\nベイズ推定の話に移る前に、その根底にあるベイズ理論について簡単に説明する。これは入力したデータを加味し、次のデータを予測する理論である。身近な一例を挙げる。ある試験...",
          "link": "https://zenn.dev/tirimen/articles/80248e2caf2d63",
          "publishedOn": "2023-04-01T01:00:00.000Z",
          "wordCount": 2672,
          "title": "MCMC法のギブスサンプリングをstreamlitで見える化しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pFqRjrLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2582%25AE%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592streamlit%25E3%2581%25A7%25E8%25A6%258B%25E3%2581%2588%25E3%2582%258B%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pFqRjrLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCMC%25E6%25B3%2595%25E3%2581%25AE%25E3%2582%25AE%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592streamlit%25E3%2581%25A7%25E8%25A6%258B%25E3%2581%2588%25E3%2582%258B%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/houser/articles/ff3aeb9ed34a36",
          "author": "Houser",
          "description": "もくじ\n\n\n\n\nもくじ\n\n\n\n\n\n1\n心得/マインド系\n\n\n\n2\n参考レファレンス\n\n\n\n3\n基本コマンド/メソッド系\n\n\n\n4\n初期設定/ライブラリ系\n\n\n\n5\n設計/アーキテクチャ系\n\n\n\n6\nディレクトリ構成/命名規則\n\n\n\n7\nデバック系\n\n\n\n8\nログ出力系\n\n\n\n9\nマイグレーション系\n\n\n\n10\nテスト系\n\n\n\n11\nDocker系\n\n\n\n12\nキャッシュ系\n\n\n\n13\nバリデーション系\n\n\n\n14\nミドルウェア系\n\n\n\n15\nよくある/遭遇したエラー系\n\n\n\n16\n日付処理\n\n\n\n17\nレスポンス系\n\n\n\n\n\n 心得マインド系\nThe Zen of Python\nht...",
          "link": "https://zenn.dev/houser/articles/ff3aeb9ed34a36",
          "publishedOn": "2023-03-31T13:46:41.000Z",
          "wordCount": 1165,
          "title": "python開発のための参考リスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eDgGPl3L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%258F%2582%25E8%2580%2583%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Houser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4OWMwMzE5MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eDgGPl3L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%258F%2582%25E8%2580%2583%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Houser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4OWMwMzE5MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/siganai/articles/20230331_python_delete_target_list",
          "author": "SiganAI",
          "description": "データ分析の際に配列から特定の要素（例えば注目対象ではない要素など）を削除する方法を備忘録としてまとめる．\n使用言語はPython．\n本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．\n\n 方法\nPythonのremove関数およびpop関数を使用する．\n実際のコードを以下で示す．\n\n 実際の使用例\nここでは例として，ある配列から任意の要素（1種類）を削除する．\n\ndelete_list_target.py\nlist1 = [1, 2, 3, 4, 5]\ntarget1 = 3\nlist1.remove(target1)\n\nprint(list1)\n# [1, ...",
          "link": "https://zenn.dev/siganai/articles/20230331_python_delete_target_list",
          "publishedOn": "2023-03-31T11:38:07.000Z",
          "wordCount": 947,
          "title": "【Python】配列から特定の要素を削除する方法について【備忘録】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zFpA3Phe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%2585%258D%25E5%2588%2597%25E3%2581%258B%25E3%2582%2589%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SiganAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zFpA3Phe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%2585%258D%25E5%2588%2597%25E3%2581%258B%25E3%2582%2589%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SiganAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkMycHdUMUEzOWY2TzVOSGd4T3FHTUpqNXZNUHU4RHpwRThBQXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/cfc328a436142f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-187 B - Gentle Pairs\n\n\n\n 提出結果\nimport itertools\n\n\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef s(x, y):\n    return (y[1] - x[1]) / (y[0] - x[0])\n\n\ndef main():\n    n = getInt()\n    l = getIntListRow(...",
          "link": "https://zenn.dev/hyperdb/articles/cfc328a436142f",
          "publishedOn": "2023-03-31T09:22:09.000Z",
          "wordCount": 510,
          "title": "［AtCoder］ABC-187｜B - Gentle Pairs",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TjIuG8Hz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-187%25EF%25BD%259CB%2520-%2520Gentle%2520Pairs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TjIuG8Hz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-187%25EF%25BD%259CB%2520-%2520Gentle%2520Pairs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1fc5ee5b3ca47d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-187 A - Large Digits\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef s(x):\n    return sum(map(int, list(str(x))))\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(max(s(a), s(b)))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1fc5ee5b3ca47d",
          "publishedOn": "2023-03-31T09:22:09.000Z",
          "wordCount": 292,
          "title": "［AtCoder］ABC-187｜A - Large Digits",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c9chjVUB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-187%25EF%25BD%259CA%2520-%2520Large%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c9chjVUB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-187%25EF%25BD%259CA%2520-%2520Large%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutakawanaga/articles/d61699fa0a1b13",
          "author": "YutaKawanaga",
          "description": "きっかけ\n\n\nrequest.data['hoge']みたいに何が何の型で入っているのか分からないのがどうにかならないかと思って\n詳しく知りたい方はこちら\n\n\n 本題\nfrom typing import TypedDict\n\nclass ObjectType(TypedDict):\n    id: int\n    name: str\n\nclass RequestType(TypedDict):\n    foo: str\n    bar: ObjectType\n\ndef get(self, args: RequestType) -> None:\n    foo = args['...",
          "link": "https://zenn.dev/yutakawanaga/articles/d61699fa0a1b13",
          "publishedOn": "2023-03-31T01:35:15.000Z",
          "wordCount": 263,
          "title": "Pythonのdictに型付けする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eX3wTrjG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEdict%25E3%2581%25AB%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YutaKawanaga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljNWYwZWJhOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eX3wTrjG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEdict%25E3%2581%25AB%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YutaKawanaga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljNWYwZWJhOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/235c11c5a67e53",
          "author": "オライリーヨッシー",
          "description": "概要\nなんとも不可思議なエラーが発生したので記事を作成。どなたかご存知の方がいれば、詳細を教えてほしい。どういったエラーかというと、Flaskアプリケーションを立ち上げた際に、上記エラーが発生した。ローカル立ち上げた後、問題なく下記レスポンスがDBから返却された。\n\nそして、試しにPostmanで同様のローカルURLに対してレスポンスを送ったところ、403エラーが返ってきた。\n\n\n 原因\n一応、上記画像にtokenは記載されているが、tokenを要するわけではない。使用するライブラリがインストールされていない、もしくはCORSの設定がされていない訳でもない。どうすれば良いものか、、と...",
          "link": "https://zenn.dev/oreilly_ota/articles/235c11c5a67e53",
          "publishedOn": "2023-03-31T00:04:03.000Z",
          "wordCount": 123,
          "title": "【Postoman】PostmanでのGETリクエストが403 Forbiddenエラーを返す一方、ブラウザ上で正常に動作する状況",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ju9ZxrhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Postoman%25E3%2580%2591Postman%25E3%2581%25A7%25E3%2581%25AEGET%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258C403%2520Forbidden%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E4%25B8%2580%25E6%2596%25B9%25E3%2580%2581%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E6%25AD%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ju9ZxrhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Postoman%25E3%2580%2591Postman%25E3%2581%25A7%25E3%2581%25AEGET%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258C403%2520Forbidden%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E4%25B8%2580%25E6%2596%25B9%25E3%2580%2581%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E6%25AD%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/edojidaipj/articles/da703b617ef778",
          "author": "江戸時代PJ",
          "description": "背景\n「起きたら全て消えていた」　Discordで横行する“サーバー凍結荒らし”、1万人参加サーバーが一夜で消えたその手口\nという記事を読んで、「gpt-3.5-turboに検知させたらいいんじゃなイカ！？」\nって思ったのでやってみようと思います。\n・・・\nできました。\nサーバーを開いてあるのでいろいろ試してみて下さい。\n一応言っておきますが、シークレットトークンは送信しないでくださいね？\nhttps://discord.gg/DnWFxRAU\n\n 実装のポイント\n以下のような構成で作りました。\n\n以下のようなプロンプトを使用して検知させてみました。\n日本語にではなく英語を使用した理...",
          "link": "https://zenn.dev/edojidaipj/articles/da703b617ef778",
          "publishedOn": "2023-03-30T19:25:22.000Z",
          "wordCount": 393,
          "title": "gpt-3.5-turboを使ってチャットの異常を検知する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rJNdNPDx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:gpt-3.5-turbo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B1%259F%25E6%2588%25B8%25E6%2599%2582%25E4%25BB%25A3PJ%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYzJmOGExYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rJNdNPDx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:gpt-3.5-turbo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B1%259F%25E6%2588%25B8%25E6%2599%2582%25E4%25BB%25A3PJ%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYzJmOGExYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lot36z/articles/1c734bde03677c",
          "author": "のっかー",
          "description": "Windows用のpyenvのインストール方法です。\nWindows用のpyenvが以下のサイトに公開されています。\nhttps://github.com/pyenv-win/pyenv-win\n上記サイトに記載されている手順でインストール可能です。\nGitコマンドを使用する方法が最新版のpyenvを使用できて便利だと思います。\npipコマンドを使用する方法だと最新版のpyenvを使用できず、最近リリースされたPythonをpyenvでインストールできないことがありました。\n以下、PowerShellで実行していきます。\nまず以下のコマンドでpyenv-winのソースコードをホームフォル...",
          "link": "https://zenn.dev/lot36z/articles/1c734bde03677c",
          "publishedOn": "2023-03-30T14:14:34.000Z",
          "wordCount": 267,
          "title": "pyenvをWindowsにインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n36kRnrE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%25E3%2582%2592Windows%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n36kRnrE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%25E3%2582%2592Windows%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/04ba92c0abe02e",
          "author": "sergicalsix",
          "description": "はじめに\nmatplotlibで作成した線を枠線で縁取ったことはありますか？\n線を縁取ることで、線がはっきりするので複数の線が乱立しているような図では役に立つかもしれません。\n実線の縁取りは簡単なものの、点線の縁取りは専用の機能を使わないとできない上に日本語の参考記事がなかったので、今回作成しました。\n\n 結論\nmatplotlib.patheffectsで枠線の設定をしよう！！\nimport matplotlib.pyplot as plt\nimport matplotlib.patheffects as pe\n\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, ...",
          "link": "https://zenn.dev/sergicalsix/articles/04ba92c0abe02e",
          "publishedOn": "2023-03-30T13:11:38.000Z",
          "wordCount": 913,
          "title": "matplotlibで枠線を書く:点線の縁取り",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UIRQkwjp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:matplotlib%25E3%2581%25A7%25E6%259E%25A0%25E7%25B7%259A%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%253A%25E7%2582%25B9%25E7%25B7%259A%25E3%2581%25AE%25E7%25B8%2581%25E5%258F%2596%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UIRQkwjp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:matplotlib%25E3%2581%25A7%25E6%259E%25A0%25E7%25B7%259A%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%253A%25E7%2582%25B9%25E7%25B7%259A%25E3%2581%25AE%25E7%25B8%2581%25E5%258F%2596%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/d15a366bf1708d",
          "author": "Darman",
          "description": "以前私が普段使っている、Pythonのディレクトリ構成について記事を書きました。\nhttps://zenn.dev/yutabeee/articles/c53890d1bdbd56\nだんだんこのフォルダとファイルを手打ちで作るのがめんどくさくなってきたので、自動で作成するスクリプトを作成したので記録しておきます。\n\n 目標とするディレクトリ構成\n    project_name/\n    ├── class_name.module/\n    │ ├── __init__.py\n    │ └── class_name.py\n    │\n    ├── tests/\n    │ ├── _...",
          "link": "https://zenn.dev/yutabeee/articles/d15a366bf1708d",
          "publishedOn": "2023-03-30T12:35:12.000Z",
          "wordCount": 671,
          "title": "ディレクトリ構成を自動生成するPythonスクリプト作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C1yb6EAZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C1yb6EAZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dba206d4dfea7f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-186 A - Brick\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, w = getIntMap()\n\n    print(n // w)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/dba206d4dfea7f",
          "publishedOn": "2023-03-30T05:32:40.000Z",
          "wordCount": 226,
          "title": "［AtCoder］ABC-186｜A - Brick",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AnlzLX0Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-186%25EF%25BD%259CA%2520-%2520Brick%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AnlzLX0Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-186%25EF%25BD%259CA%2520-%2520Brick%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/90bd2359b072c9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-186 B - Blocks on Grid\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    h, w = getIntMap()\n    a = getIntListRow(h)\n\n    m = min([min(l) for l in a])\n    s = sum([s...",
          "link": "https://zenn.dev/hyperdb/articles/90bd2359b072c9",
          "publishedOn": "2023-03-30T05:32:40.000Z",
          "wordCount": 407,
          "title": "［AtCoder］ABC-186｜B - Blocks on Grid",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yBDoUXVO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-186%25EF%25BD%259CB%2520-%2520Blocks%2520on%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yBDoUXVO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-186%25EF%25BD%259CB%2520-%2520Blocks%2520on%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuph/articles/ea6cf252aace7c",
          "author": "kazuph",
          "description": "今回はこれを使います。\nhttps://github.com/mmabrouk/chatgpt-wrapper\n有料でもよければAPIのキーを渡して使えますが、無料でやるために内部でヘッドレスブラウザを利用する方法もあるみたいなので、今回はそれを試してみます。\n!\nブラウザ版のChatGPTを利用すると、OpenAIのモデルの学習に使われる可能性があるので、渡したくない機密データは扱わないでください。\n\n\n Setup\nまずpipのモジュールをインストール\npip install git+https://github.com/mmabrouk/chatgpt-wrapper\n次に、pl...",
          "link": "https://zenn.dev/kazuph/articles/ea6cf252aace7c",
          "publishedOn": "2023-03-30T02:59:36.000Z",
          "wordCount": 540,
          "title": "コマンドライン上でChatGPTを実行したい（playwright, パイプでテキスト渡せる）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--O846-sLt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E4%25B8%258A%25E3%2581%25A7ChatGPT%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2588playwright%252C%2520%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%25B8%25A1%25E3%2581%259B%25E3%2582%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuph%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjNmY3ODBlZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--O846-sLt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E4%25B8%258A%25E3%2581%25A7ChatGPT%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2588playwright%252C%2520%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%25B8%25A1%25E3%2581%259B%25E3%2582%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuph%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjNmY3ODBlZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/methane/articles/2023-pep582-is-rejected",
          "author": "methane",
          "description": "__pypackages__ を自動的にimport pathに追加する提案 PEP 582 が Reject されました。ただし \"at least in its current form.\" という但し書きがついているので、今後形を変えて復活する可能性は残っています。\nhttps://discuss.python.org/t/pep-582-python-local-packages-directory/963/430\n\n PEP 582 とは\nhttps://peps.python.org/pep-0582/\n提案されていた仕様を簡単に説明すると、次のようになります。\n次の場所に ...",
          "link": "https://zenn.dev/methane/articles/2023-pep582-is-rejected",
          "publishedOn": "2023-03-30T02:02:04.000Z",
          "wordCount": 607,
          "title": "PEP 582 (__pypackages__) がRejectされました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0tXhEN-b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PEP%2520582%2520%2528__pypackages__%2529%2520%25E3%2581%258CReject%25E3%2581%2595%25E3%2582%258C%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:methane%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4RE5nS2F5a3FreGhkeUZMaG9Yc3hRVk9QVFVrd3hqTngtZGlxT05FPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0tXhEN-b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PEP%2520582%2520%2528__pypackages__%2529%2520%25E3%2581%258CReject%25E3%2581%2595%25E3%2582%258C%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:methane%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4RE5nS2F5a3FreGhkeUZMaG9Yc3hRVk9QVFVrd3hqTngtZGlxT05FPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsui/articles/langchain-plugin",
          "author": "tatsui",
          "description": "はじめに\nChatGPTの機能を拡張するためのツール ChatGPT plugins が一部の開発者向けにリリースされました。\n!\n2023年3月30日時点ではアルファー版であり一般には公開されていません。\n\nしかし、プラグインを作るための仕様は公開されているので、今のうちに使い方を確認しておいて一般公開されたら自作プラグインをすぐに実行できるように準備しておきましょう。\n\n プラグインの実装方法\n実装方法はとてもシンプルで、以下のようなAPIの仕様書を記載したURLとAPIに関する説明などを記載したjsonを用意するだけです。\n{\n  \"schema_version\": \"v1\",...",
          "link": "https://zenn.dev/tatsui/articles/langchain-plugin",
          "publishedOn": "2023-03-30T01:32:52.000Z",
          "wordCount": 2283,
          "title": "ChatGPTプラグインの機能をいち早く試すには",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HqJrs6tk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%2584%25E3%2581%25A1%25E6%2597%25A9%25E3%2581%258F%25E8%25A9%25A6%25E3%2581%2599%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsui%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiN2M1ZGU4NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HqJrs6tk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%2584%25E3%2581%25A1%25E6%2597%25A9%25E3%2581%258F%25E8%25A9%25A6%25E3%2581%2599%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsui%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiN2M1ZGU4NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/dcf32f3516f013",
          "author": "ryohtaka",
          "description": "はじめに\nOpenAI の言語モデルで日本語を扱う際に、コスト概算などの目的で処理されるトークン数を推定したい場合がありますが、英語以外の言語に関しては OpenAI のドキュメントや記事に具体的な指標が記載されておらず、個人の経験則に基づいて推定するしかない状況でした。\nよって、実際どのくらいになるのか、ある程度大きなデータセットを使って指標を計算してみました。\n\nWhat are tokens and how to count them?\n\n\nHow words are split into tokens is also language-dependent. For examp...",
          "link": "https://zenn.dev/microsoft/articles/dcf32f3516f013",
          "publishedOn": "2023-03-30T01:19:20.000Z",
          "wordCount": 1233,
          "title": "OpenAI 言語モデルで日本語を扱う際のトークン推定指標",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dWNmU7Ki--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%258E%25A8%25E5%25AE%259A%25E6%258C%2587%25E6%25A8%2599%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dWNmU7Ki--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%258E%25A8%25E5%25AE%259A%25E6%258C%2587%25E6%25A8%2599%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryo117/articles/dcf32f3516f013",
          "author": "ryohtaka",
          "description": "はじめに\nOpenAI の言語モデルで日本語を扱う際に、コスト概算などの目的で処理されるトークン数を推定したい場合がありますが、英語以外の言語に関しては OpenAI のドキュメントや記事に具体的な指標が記載されておらず、個人の経験則に基づいて推定するしかない状況でした。\nよって、実際どのくらいになるのか、ある程度大きなデータセットを使って指標を計算してみました。\n\nWhat are tokens and how to count them?\n\n\nHow words are split into tokens is also language-dependent. For examp...",
          "link": "https://zenn.dev/ryo117/articles/dcf32f3516f013",
          "publishedOn": "2023-03-30T01:19:20.000Z",
          "wordCount": 1215,
          "title": "OpenAI 言語モデルで日本語を扱う際のトークン推定指標",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pm-Qsh6J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%258E%25A8%25E5%25AE%259A%25E6%258C%2587%25E6%25A8%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryohtaka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pm-Qsh6J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%258E%25A8%25E5%25AE%259A%25E6%258C%2587%25E6%25A8%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryohtaka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/openlabo/articles/d19d92b1226e37",
          "author": "meme",
          "description": "Python の初期設定のついて\nDebian系のosでのインストール想定\n\nPythonインストール\napt-getパッケージを使用してインストールする。\n\nsudo apt-get install python3\n\nvenvインストール\nwindows版だと標準でvenvもインストールされているがlinux版はインストールが必要\nなのでインストールする。\n\nsudo apt-get install python3-venv\n\npipインストール\npythonでパッケージ管理に必要なpipもインストールする。\n\nsudo apt-get install python3-pip\n\np...",
          "link": "https://zenn.dev/openlabo/articles/d19d92b1226e37",
          "publishedOn": "2023-03-29T23:19:42.000Z",
          "wordCount": 150,
          "title": "Pythonのインストールについて備忘",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZYZUxhQq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%2582%2599%25E5%25BF%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meme%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YjZBY094NUVUdG42SVFic2NGMDBENnRacUdHR19CTDlWVDE1ZnFiUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZYZUxhQq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%2582%2599%25E5%25BF%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meme%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YjZBY094NUVUdG42SVFic2NGMDBENnRacUdHR19CTDlWVDE1ZnFiUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/articles/4558bbdb9a5bbd",
          "author": "S.A",
          "description": "前記事までのまとめ、および、本記事の目的\n前記事までは、多品種少量生産における需要予測手法の確立に向けて以下のことをしていきました。\n・初回記事 : 時系列解析手法の実装と評価\n　この記事では、Store Item Demand Forecasting Challengeのデータセットにおいて、Neuralprophetの手法が精度の高い手法であると評価しました。\n\n・第2回記事 : 時間をかけず多品種の需要を精度良く予測する手法の考察\n　この記事の考察により、変動要因を除去した誤差成分に対してクラスタリングをしていき、品種をクラスターごとにまとめることにより、予測時間をかけずに精度...",
          "link": "https://zenn.dev/shungo_a/articles/4558bbdb9a5bbd",
          "publishedOn": "2023-03-29T22:37:44.000Z",
          "wordCount": 6479,
          "title": "需要の先行情報を予測に活かす実装方法の考察",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UWgJdqqd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259C%2580%25E8%25A6%2581%25E3%2581%25AE%25E5%2585%2588%25E8%25A1%258C%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%25AB%25E6%25B4%25BB%25E3%2581%258B%25E3%2581%2599%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AE%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UWgJdqqd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259C%2580%25E8%25A6%2581%25E3%2581%25AE%25E5%2585%2588%25E8%25A1%258C%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%25AB%25E6%25B4%25BB%25E3%2581%258B%25E3%2581%2599%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AE%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k0kishima/articles/5466aaeb57be7a",
          "author": "k0kishima",
          "description": "型を明示することの重要性\nロバストPython を読みました。\nhttps://amzn.to/40NzY65\nやはり型注釈が果たす文書化の役目はコードの可読性に大きく寄与するなと改めて思いました。\n一方、静的型付けの大きな特徴としては型の不整合がある場合は、実行時ではなくコンパイル時に警告を受けられることがあると思います。\nPython は動的型付け言語に分類されますが、静的解析による型エラーの指摘は受けられます。\n具体的には mypy を使います。\n$ mypy main.py          \nmain.py:3: error: Incompatible types in a...",
          "link": "https://zenn.dev/k0kishima/articles/5466aaeb57be7a",
          "publishedOn": "2023-03-29T09:08:34.000Z",
          "wordCount": 760,
          "title": "Python の型チェックを VSCode 上で行いたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aULf2kWr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%2520VSCode%2520%25E4%25B8%258A%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k0kishima%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlZGQxYzU0ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aULf2kWr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%2520VSCode%2520%25E4%25B8%258A%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k0kishima%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlZGQxYzU0ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yktakaha4/articles/get_github_projects_item_with_graphql",
          "author": "Yuuki Takahashi",
          "description": "小ネタです🍣\nIssueに紐づくGitHub Projectsを情報を取得するスクリプトをChatGPTに教えてもらったので共有します\n例えば、取得したいProjectに以下のようなCustom fieldsがあった場合、\n\n\n以下のようなスクリプトで対象のIssueに紐づく内容が取得できます\nfieldValueByName の戻り値について、どのようなデータ型を選択すべきかについては、以下を確認してください\nhttps://docs.github.com/ja/graphql/reference/unions#projectv2itemfieldvalue\n\nget_projects...",
          "link": "https://zenn.dev/yktakaha4/articles/get_github_projects_item_with_graphql",
          "publishedOn": "2023-03-29T08:17:42.000Z",
          "wordCount": 1296,
          "title": "Issueに紐づくGitHub Projectsの情報をGraphQL経由で取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7MtEEoLT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Issue%25E3%2581%25AB%25E7%25B4%2590%25E3%2581%25A5%25E3%2581%258FGitHub%2520Projects%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592GraphQL%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7MtEEoLT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Issue%25E3%2581%25AB%25E7%25B4%2590%25E3%2581%25A5%25E3%2581%258FGitHub%2520Projects%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592GraphQL%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b431c70ffa23e1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-185 B - Smartphone Addiction\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, m, t = getIntMap()\n    l = getIntListRow(m)\n\n    s = 0\n    c = n\n    r = True\n    f...",
          "link": "https://zenn.dev/hyperdb/articles/b431c70ffa23e1",
          "publishedOn": "2023-03-29T05:46:41.000Z",
          "wordCount": 504,
          "title": "［AtCoder］ABC-185｜B - Smartphone Addiction",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YwDGBHvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-185%25EF%25BD%259CB%2520-%2520Smartphone%2520Addiction%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YwDGBHvb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-185%25EF%25BD%259CB%2520-%2520Smartphone%2520Addiction%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7091fab839dde6",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-185 A - ABC Preparation\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    a = getIntList()\n\n    print(min(a))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7091fab839dde6",
          "publishedOn": "2023-03-29T05:46:41.000Z",
          "wordCount": 233,
          "title": "［AtCoder］ABC-185｜A - ABC Preparation",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xCBxwWk9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-185%25EF%25BD%259CA%2520-%2520ABC%2520Preparation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xCBxwWk9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-185%25EF%25BD%259CA%2520-%2520ABC%2520Preparation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/f6272c2c32d195",
          "author": "Darman",
          "description": "抽象化とは何か\n抽象化とは、物事の本質的な部分だけを取り出して、それ以外の細かい部分を無視して単純化することです。プログラミングにおいては、複雑なプログラムをより簡潔に表現するために、抽象化が重要な役割を果たします。\n\n 抽象化の例\n例えば、車を抽象化する場合、車に必要な情報だけを取り出して表現します。車の重さや形状などの詳細な情報は必要ありません。代わりに、車の速度やブレーキの機能など、本質的な情報だけを取り出して表現します。このように、抽象化は本質的な部分だけを取り出し、細かい部分を無視することで、物事を単純化することができます。\n\n 抽象化の利点\n抽象化をすることで、プログラム...",
          "link": "https://zenn.dev/yutabeee/articles/f6272c2c32d195",
          "publishedOn": "2023-03-29T05:46:30.000Z",
          "wordCount": 84,
          "title": "オブジェクト指向の抽象化について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--374Io0XM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AE%25E6%258A%25BD%25E8%25B1%25A1%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--374Io0XM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AE%25E6%258A%25BD%25E8%25B1%25A1%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/076a78faf53b57",
          "author": "Darman",
          "description": "カプセル化とは何か\nカプセル化とは、オブジェクト指向プログラミングにおいて、オブジェクトの内部状態を外部から隠蔽し、公開する必要のある部分だけを公開することを指します。オブジェクトの内部状態は、変数やメソッドなどで構成されます。\n\n カプセル化の例\n例えば、車のオブジェクトを考えてみます。車のオブジェクトには、速度や車種などの内部状態がありますが、これらの情報は外部から直接アクセスすることはできません。代わりに、車の速度を取得するためのget_speedメソッドや、車の車種を変更するためのset_modelメソッドを公開し、これらのメソッドを介してのみ、内部状態にアクセスすることがで...",
          "link": "https://zenn.dev/yutabeee/articles/076a78faf53b57",
          "publishedOn": "2023-03-29T05:45:09.000Z",
          "wordCount": 84,
          "title": "オブジェクト指向のカプセル化について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CMvntScs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%2597%25E3%2582%25BB%25E3%2583%25AB%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CMvntScs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%2597%25E3%2582%25BB%25E3%2583%25AB%25E5%258C%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/a1f5ff0b6a4a4c",
          "author": "sergicalsix",
          "description": "結論\nラッパー関数作成時はfunctools.wrapsを使う!!\n\n 通常のラッパー関数と弊害\nラッパー関数とは、元の関数を書き換えることなく、機能を追加する関数である。\nラッパー関数は例えば以下のように書く。\ndef trace(func):\n    def wrapper(*args,**kwargs):\n        result = func(*args,**kwargs)\n        print('Hello')　#追加したい処理\n\treturn result\n    return wrapper\n@trace \ndef f(n):\n    \"\"\"nの2乗を返す関数...",
          "link": "https://zenn.dev/sergicalsix/articles/a1f5ff0b6a4a4c",
          "publishedOn": "2023-03-29T04:44:10.000Z",
          "wordCount": 395,
          "title": "Pythonにおけるラッパー関数のテクニック:functools.wraps",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fZB87xiU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%253Afunctools.wraps%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fZB87xiU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%253Afunctools.wraps%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/teba_eleven/articles/bc4e29c9ee6f14",
          "author": "手羽先",
          "description": "環境\n\nM1Mac\n\nVentura 13.2.1（22D68）\n\n\npython\n\nPython 3.9.6\n\n\npythonライブラリ\n\nライブラリを表示> pip list\nPackage                 Version\n----------------------- --------------------\nabsl-py                 1.4.0\nappnope                 0.1.3\nasttokens               2.2.1\nbackcall                0.2.0\ncache...",
          "link": "https://zenn.dev/teba_eleven/articles/bc4e29c9ee6f14",
          "publishedOn": "2023-03-29T04:09:51.000Z",
          "wordCount": 631,
          "title": "【Python】YOLOv5で画面上をリアルタイムで推論する【M1/Mac】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A3-SWUlD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591YOLOv5%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E4%25B8%258A%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590M1%252FMac%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E7%25BE%25BD%25E5%2585%2588%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjRmMWJiZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A3-SWUlD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591YOLOv5%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E4%25B8%258A%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590M1%252FMac%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E7%25BE%25BD%25E5%2585%2588%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjRmMWJiZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/c53890d1bdbd56",
          "author": "Darman",
          "description": "Pythonのディレクトリ構成は、プロジェクトやライブラリによって異なる場合がありますが、一般的な構成を以下に示します。\n\n 基本的なディレクトリ構成\nプロジェクト名/\n│\n├─ __init__.py\n├─ main.py （メインの実行ファイル）\n│\n├─ パッケージ1/\n│   ├─ __init__.py\n│   ├─ モジュール1.py\n│   └─ モジュール2.py\n│\n├─ パッケージ2/\n│   ├─ __init__.py\n│   ├─ モジュール3.py\n│   └─ モジュール4.py\n│\n├─ tests/ （テスト用ディレクトリ）\n│   ├─ __init_...",
          "link": "https://zenn.dev/yutabeee/articles/c53890d1bdbd56",
          "publishedOn": "2023-03-29T04:04:15.000Z",
          "wordCount": 629,
          "title": "Pythonのパッケージの基本的なディレクトリ構成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LpBPXeKo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LpBPXeKo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/9303de36ea79e5",
          "author": "Darman",
          "description": "Pythonにおいて、プログラム実行中にエラーが発生することはよくあります。このような場合、エラーが発生してプログラムが中断されるのではなく、エラーに対処するための処理を行うことができます。このような処理のことをエラーハンドリングといいます。\n\n try-except文\nPythonにおけるエラーハンドリングの基本的な方法は、try-except文です。tryブロック内にエラーが発生する可能性のあるコードを記述し、exceptブロックでエラーが発生した場合に実行する処理を記述します。例えば、以下のようなコードが考えられます。\n\npython\ntry:\n    # エラーが発生する可能性の...",
          "link": "https://zenn.dev/yutabeee/articles/9303de36ea79e5",
          "publishedOn": "2023-03-29T02:18:11.000Z",
          "wordCount": 364,
          "title": "Pythonのエラーハンドリングについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pzjGEWrN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pzjGEWrN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/35cf127cb0e0a5",
          "author": "Darman",
          "description": "Pythonのdocstring（ドキュメント文字列）は、コードの可読性と保守性を向上させるために重要な要素です。この記事では、docstringの基本について解説します。\n\n docstringとは？\ndocstringは、関数、クラス、モジュールなどのコードブロックに説明や使い方を記述するためのコメントです。docstringは、コードの可読性を向上させ、他の開発者や将来の自分が理解しやすくすることが目的です。\n\n docstringの基本\ndocstringを書く際には、以下のルールに従ってください。\n\n\n三重引用符で囲む: docstringは、シングルクォート（'）かダブルクォ...",
          "link": "https://zenn.dev/yutabeee/articles/35cf127cb0e0a5",
          "publishedOn": "2023-03-29T00:44:17.000Z",
          "wordCount": 170,
          "title": "[Python] docstringってなに？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G7-MOyuo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520docstring%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G7-MOyuo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520docstring%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/f52f76d930e093",
          "author": "Darman",
          "description": "Pythonは動的型付け言語であるため、型宣言は必須ではありませんが、最近のバージョンでは型宣言を使用することが可能です。型宣言の利用によって、プログラムの可読性が向上し、タイプミスによるバグを防止することができます。\n型宣言の方法は、変数名や関数名の後ろにコロン（:）を記述し、その後に型を記述することです。例えば、整数型の変数を宣言する場合は以下のようになります。\n\npython\nnum: int = 10\n\n関数の場合は、引数と返り値の型を宣言することができます。例えば、整数型の引数を受け取り、文字列型を返す関数を宣言する場合は以下のようになります。\n\npython\ndef func...",
          "link": "https://zenn.dev/yutabeee/articles/f52f76d930e093",
          "publishedOn": "2023-03-28T15:54:13.000Z",
          "wordCount": 136,
          "title": "Pythonで型宣言をする時の基本的な書き方！！！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N5YS9jwz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%25A3%25E8%25A8%2580%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25EF%25BC%2581%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N5YS9jwz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%25A3%25E8%25A8%2580%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25EF%25BC%2581%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/156d855f7dd4f2",
          "author": "Darman",
          "description": "プログラミングの基礎である値渡と参照渡しについてコードのサンプルを作成しながらまとめていきます。\n\n 値渡し\n値渡しは、関数に引数の値をコピーして渡す方法です。関数内で引数の値が変更されても、元の変数の値は影響を受けません。Pythonでは、イミュータブル（変更不可）なオブジェクトが値渡しの対象となります。例えば、数値、文字列、タプルなどです。\n\n値渡しの例\ndef update_value(x):\n    x = x * 2\n    print(\"x in function:\", x)\n\nx = 10\nupdate_value(x)\nprint(\"x outside function:...",
          "link": "https://zenn.dev/yutabeee/articles/156d855f7dd4f2",
          "publishedOn": "2023-03-28T14:58:41.000Z",
          "wordCount": 438,
          "title": "Pythonで値渡しと参照渡しについて考える。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CP-WSjhS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CP-WSjhS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A8%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Darman%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWZiZTBhM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/windvoice/articles/32fb9574fcb5b5",
          "author": "WindVoice",
          "description": "最近話題のRWKV-LMのRWKC-v4neo 14Bモデルを手元のPCで動かしましたので手順を書き残しておきます。とても簡単に書いてありますが、だいたい私が実行した通りです。\n\n スペック\n\nCPU Intel Core i7 12700K\n64GB Memory(16GB x 4)\nNVIDIA GeForce RTX 3070(8GB) ※ただしCPUモードで動かしています\nWindows 11\nPython 3.9.12\nPyTorch 1.13.1+cu117\n\nなお、17Bモデルは64GBメモリでは本来不足なので、swap領域を増やしています。Windows 11の場合、「設...",
          "link": "https://zenn.dev/windvoice/articles/32fb9574fcb5b5",
          "publishedOn": "2023-03-28T13:12:47.000Z",
          "wordCount": 599,
          "title": "【手順】RWKV-LMがローカルPCで動作するまで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J0bn24Zm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2589%258B%25E9%25A0%2586%25E3%2580%2591RWKV-LM%25E3%2581%258C%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:WindVoice%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1YTM2MjcxZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J0bn24Zm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2589%258B%25E9%25A0%2586%25E3%2580%2591RWKV-LM%25E3%2581%258C%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:WindVoice%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1YTM2MjcxZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s_ryuuki/articles/79ab112ba32c19",
          "author": "s_ryuuki",
          "description": "はじめに\n↓の記事を見てMacでもできないかなと思い試してみました。\nhttps://note.com/ohnuma/n/nad3dec051684\n\n 実行環境\n\n ハード\n% system_profiler SPHardwareDataType\nHardware:\n\n    Hardware Overview:\n\n      Model Name: Mac Studio\n      Model Identifier: Mac13,1\n      Chip: Apple M1 Max\n      Total Number of Cores: 10 (8 performance an...",
          "link": "https://zenn.dev/s_ryuuki/articles/79ab112ba32c19",
          "publishedOn": "2023-03-28T12:32:20.000Z",
          "wordCount": 2437,
          "title": "M1 MaxでChatRWKVを使いrwkv-4-pile-7bを動かしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I7OdLTyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Max%25E3%2581%25A7ChatRWKV%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584rwkv-4-pile-7b%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s_ryuuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4OTgtUmxVdWxra0JEengtN2pQRE8tX2R6by02cGZNVWxHdTl5R2c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I7OdLTyD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%2520Max%25E3%2581%25A7ChatRWKV%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584rwkv-4-pile-7b%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s_ryuuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4OTgtUmxVdWxra0JEengtN2pQRE8tX2R6by02cGZNVWxHdTl5R2c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b2aadee9350e25",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-184 B - Quizzes\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n, x = getIntMap()\n    s = list(getString())\n\n    for a in s:\n        x += 1 if a == 'o' else -1\n        x = max(x, 0)\n    print(x)\n\n\nif __name__ ==...",
          "link": "https://zenn.dev/hyperdb/articles/b2aadee9350e25",
          "publishedOn": "2023-03-28T07:01:05.000Z",
          "wordCount": 331,
          "title": "［AtCoder］ABC-184｜B - Quizzes",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ih9Gg2ju--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-184%25EF%25BD%259CB%2520-%2520Quizzes%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ih9Gg2ju--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-184%25EF%25BD%259CB%2520-%2520Quizzes%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7462c69d3d35d5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-184 A - Determinant\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n    c, d = getIntMap()\n\n    print(a * d - b * c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7462c69d3d35d5",
          "publishedOn": "2023-03-28T07:01:04.000Z",
          "wordCount": 254,
          "title": "［AtCoder］ABC-184｜A - Determinant",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LxNeWBlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-184%25EF%25BD%259CA%2520-%2520Determinant%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LxNeWBlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-184%25EF%25BD%259CA%2520-%2520Determinant%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shin1007/articles/3416e44ffe6868",
          "author": "shin1007",
          "description": "クラスファイル\nfrom base64 import b64encode\nimport csv\nfrom tempfile import TemporaryFile\n\nfrom cryptography.fernet import Fernet # pip install cryptography\n\n# TODO: PyArmorでコード自体を暗号化する\n# https://kyogom.com/tech/pyarmor/\nclass Encryption:\n    # 暗号化の参考ページ\n    # https://laboratory.kazuuu.net/encrypting-...",
          "link": "https://zenn.dev/shin1007/articles/3416e44ffe6868",
          "publishedOn": "2023-03-28T04:22:00.000Z",
          "wordCount": 991,
          "title": "Pythonで簡単な暗号化/復号を行うクラス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_1asDdzN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%252F%25E5%25BE%25A9%25E5%258F%25B7%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shin1007%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUg4dkpGZlgxTi1pQXh2VHRsbUhRZ2g5ekt0ZWRmLWF0NzNXcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_1asDdzN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%252F%25E5%25BE%25A9%25E5%258F%25B7%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shin1007%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUg4dkpGZlgxTi1pQXh2VHRsbUhRZ2g5ekt0ZWRmLWF0NzNXcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/atakon/articles/youtube-transcript",
          "author": "かずお",
          "description": "こんにちは、日台カップルYouTuberです。\n以前はRailsのバックエンド開発オンリーでしたが、直近半年くらいはSwiftでiOSアプリ開発をしています。個人開発でも最近はSwiftUIを使ってゲームアプリを作っています。今月中にリリース予定なので、そちらの方もまた記事にしたいと考えています。\n\n はじめに\n今回はYouTubeの編集の際に利用する字幕の自動生成と動画編集への適用の仕方についてまとめたいと思います。\n最近OpenAIのwhisper apiが公開されたことがきっかけで調査をはじめました。\n次の一つでも当てはまればに参考になると思います。\n* OpenAIのwhiper...",
          "link": "https://zenn.dev/atakon/articles/youtube-transcript",
          "publishedOn": "2023-03-28T03:48:34.000Z",
          "wordCount": 3322,
          "title": "YouTube動画編集のために利用する字幕をOpenAIのwhisper apiを使って生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pnXb_xeL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%25E5%258B%2595%25E7%2594%25BB%25E7%25B7%25A8%25E9%259B%2586%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25AD%2597%25E5%25B9%2595%25E3%2582%2592OpenAI%25E3%2581%25AEwhisper%2520api%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lVXzRoWm52dmhORjE1X2hBSHIwU0ZfZUpKMWk1S1hDVER3cTU1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pnXb_xeL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%25E5%258B%2595%25E7%2594%25BB%25E7%25B7%25A8%25E9%259B%2586%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25AD%2597%25E5%25B9%2595%25E3%2582%2592OpenAI%25E3%2581%25AEwhisper%2520api%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lVXzRoWm52dmhORjE1X2hBSHIwU0ZfZUpKMWk1S1hDVER3cTU1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kmasan/articles/c5853d91f6f691",
          "author": "kmasan",
          "description": "自分よくセンサを使ったことする人でセンサを扱うにも得られるデータの分析をしないといけない\n今回は自分がよくセンサデータの分析に使っているmatplotlibの使い方について載せておく\n\n matplotlibで何ができるの？\n\n グラフが作れる\nデータを見れるだけでなく，データ処理の結果も表示できる\n言語はpythonを使用しているので，JupyterNotebookで実行する以外にもpython単体でも動きます\nなんならvsCodeでJupyter環境構築できます\nというかvsCodeでやるのおすすめです\n\n JupyteNotebookで実行するメリット・デメリット\n\n\nメリット\n\n...",
          "link": "https://zenn.dev/kmasan/articles/c5853d91f6f691",
          "publishedOn": "2023-03-28T01:55:00.000Z",
          "wordCount": 1467,
          "title": "Jupyter(matplotlib)でセンサデータの分析をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LrDgYnfW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2528matplotlib%2529%25E3%2581%25A7%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmasan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxY2Y1NjA0OWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LrDgYnfW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2528matplotlib%2529%25E3%2581%25A7%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmasan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxY2Y1NjA0OWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hojicha/articles/a5663b0b3c524a",
          "author": "hojicha",
          "description": "COEIROINKにリリンちゃんが追加されました。これは試すしかありません。Ubuntuで。しかし、2023/3/28現在、UbuntuはCOEIROINKによりサポートされていません。\n調べると、UbuntuでCOEIROINKのエンジンを動かす試みをされた先駆記事がありましたが、依存関係が変わったせいか私の環境では再現されませんでした。\nその後、修正して私の手元で動かすことができたので、その手順を共有します。\n※今後COEIROINKがLinuxに対応した場合は、そちらに従ってください。また、Google Colabでも動いたので、他環境で依存関係の解決に困っている方にも参考になるか...",
          "link": "https://zenn.dev/hojicha/articles/a5663b0b3c524a",
          "publishedOn": "2023-03-28T00:29:41.000Z",
          "wordCount": 502,
          "title": "Ubuntu22.04でCOEIROINK(GPU)のエンジンを動かしてリリンちゃんと話す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_L81rPDs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu22.04%25E3%2581%25A7COEIROINK%2528GPU%2529%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25B3%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E8%25A9%25B1%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hojicha%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2oxM1Utb1hfeGlNRlctZGlCY19PaHpCcGdMTzVOTGdYNTdFMEt5PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_L81rPDs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu22.04%25E3%2581%25A7COEIROINK%2528GPU%2529%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25B3%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E8%25A9%25B1%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hojicha%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2oxM1Utb1hfeGlNRlctZGlCY19PaHpCcGdMTzVOTGdYNTdFMEt5PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuma_soon/articles/ff7fffaa7f64cc",
          "author": "kazuma-soon",
          "description": "Armory3dとはblenderのゲームエンジンです。\nゲームエンジンならUEでいいじゃん！と思いましたが、blenderで使用できるものがあるので、そちらを使用してみます。\nしかしながら、こいつ、、、公式通りにインストールしても動かない！\n今回は、MacOSでArmoryを動かすまでです。簡単です。\n\n 環境\n\nApple M1 Pro, macOS Ventura 13.2.1\nblender 3.3.5LTS（安定版）\n\n\n アドオンのインストール\nこちらの手順で行います。\nこれは他のアドオンと同じで、armory.pyをインストールします。\n注意すべきは、GitHubからダウン...",
          "link": "https://zenn.dev/kazuma_soon/articles/ff7fffaa7f64cc",
          "publishedOn": "2023-03-27T16:26:07.000Z",
          "wordCount": 180,
          "title": "[blender]Armory3dをMacで稼働させる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RXOZNYAP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bblender%255DArmory3d%25E3%2582%2592Mac%25E3%2581%25A7%25E7%25A8%25BC%25E5%2583%258D%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RXOZNYAP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bblender%255DArmory3d%25E3%2582%2592Mac%25E3%2581%25A7%25E7%25A8%25BC%25E5%2583%258D%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ykmra/articles/ead0201924866d",
          "author": "ykmra",
          "description": "2022/8にPython3エンジニア認定データ分析試験を受験し、合格した。\n以下に、勉強方法を共有する。\n※試験に合格することではなく、pythonを使いこなせるようになることが目的で勉強したので、最短での合格方法ではない。\n\n 勉強前\nプログラミングを業務で使用した経験なし。\n学生時代のプログラミング経験なし。\nもちろん、文法なども全く知らない状態\n統計検定２級取得済。\n\n 使用教材と勉強方法\nhttps://www.udemy.com/course/python-ai/\nhttps://www.udemy.com/course/ds_for_python/\npythonの基本的な文...",
          "link": "https://zenn.dev/ykmra/articles/ead0201924866d",
          "publishedOn": "2023-03-27T13:47:37.000Z",
          "wordCount": 180,
          "title": "プログラミング経験ゼロの社会人がPython3エンジニア認定データ分析試験に合格するまで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BEKNCxou--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%25AE%25E7%25A4%25BE%25E4%25BC%259A%25E4%25BA%25BA%25E3%2581%258CPython3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E8%25A9%25A6%25E9%25A8%2593%25E3%2581%25AB%25E5%2590%2588%25E6%25A0%25BC%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykmra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Wm1IRjRXZjNEVGp6QXJTeEZzbkhoY0xIVzlhWkh0LWNadkp1MmI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BEKNCxou--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%25AE%25E7%25A4%25BE%25E4%25BC%259A%25E4%25BA%25BA%25E3%2581%258CPython3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E8%25A9%25A6%25E9%25A8%2593%25E3%2581%25AB%25E5%2590%2588%25E6%25A0%25BC%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykmra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Wm1IRjRXZjNEVGp6QXJTeEZzbkhoY0xIVzlhWkh0LWNadkp1MmI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hikapoppin/articles/559cf40a50af7e",
          "author": "hikaru",
          "description": "概要\n以下の記事の続きです。\nhttps://zenn.dev/hikapoppin/articles/69be223c89fbd5\nAWS CDKを使って簡単なサーバーレスアプリにしてみました。\n\n 背景\n上記の記事のプログラムを作成中にAWS CDKの学習およびAWS Certified Developer - Associateの勉強をしており、せっかくなのでAWS上で稼働させてみることにしました。\n\n システム構成図\n\n大まかな処理フローは以下の通りです。\n\nユーザーがCloudFrontのドメイン名にアクセス\nWAFがIPsetに記載されているアドレス以外からの通信をブロッ...",
          "link": "https://zenn.dev/hikapoppin/articles/559cf40a50af7e",
          "publishedOn": "2023-03-27T12:48:32.000Z",
          "wordCount": 8465,
          "title": "SpotifyAPIで未知の曲を漁ってみた②：AWS CDKを使用したサーバーレスAPI化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ngamr5vy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpotifyAPI%25E3%2581%25A7%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E6%259B%25B2%25E3%2582%2592%25E6%25BC%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A1%25EF%25BC%259AAWS%2520CDK%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9API%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ykc4a2d0MkRET1AzQTNmbmNzMjhKM2UxWWJPQklHdGc3NndKNGhIQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ngamr5vy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpotifyAPI%25E3%2581%25A7%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E6%259B%25B2%25E3%2582%2592%25E6%25BC%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A1%25EF%25BC%259AAWS%2520CDK%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9API%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ykc4a2d0MkRET1AzQTNmbmNzMjhKM2UxWWJPQklHdGc3NndKNGhIQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/otohbk_ky/articles/set_up_pyspark_env",
          "author": "OtO",
          "description": "はじめに\n社内でSpark関連の基礎知識をまとめたblogを書くに当たって、RDDを実際に作成しながら試したかったのでlocalでpysparkの環境構築。\nただ、調べていると色んなやり方があって少しごちゃごちゃしていたので、もっとも簡単な方法を自分の整理のために残しておきます。（今後環境が変わった時とかにすぐ使えるように）\n\n 環境\n今回は以下の環境でpysparkをダウンロードします。\n事前にpythonとjavaのインストールが必要です。（javaが必要な理由はApache Sparkが動くのに必要なため。）\npipがインストールされてない場合はpythonのインストール後に行...",
          "link": "https://zenn.dev/otohbk_ky/articles/set_up_pyspark_env",
          "publishedOn": "2023-03-27T09:35:33.000Z",
          "wordCount": 548,
          "title": "localでpysparkの簡易環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NQS_8EXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:local%25E3%2581%25A7pyspark%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OtO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxN2Y4MWZiYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NQS_8EXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:local%25E3%2581%25A7pyspark%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OtO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxN2Y4MWZiYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/accb751b2795d6",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-183 A - ReLU\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(n if n >= 0 else 0)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/accb751b2795d6",
          "publishedOn": "2023-03-27T03:44:32.000Z",
          "wordCount": 226,
          "title": "［AtCoder］ABC-183｜A - ReLU",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4Lg-3RG9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-183%25EF%25BD%259CA%2520-%2520ReLU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4Lg-3RG9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-183%25EF%25BD%259CA%2520-%2520ReLU%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4136755d286d42",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-183 B - Billiards\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    sx, sy, gx, gy = getIntMap()\n\n    rx = gx - sx\n    ry = gy / sy\n\n    df = (rx / (ry + 1)) * ry\n\n    print(gx - df)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/4136755d286d42",
          "publishedOn": "2023-03-27T03:44:32.000Z",
          "wordCount": 298,
          "title": "［AtCoder］ABC-183｜B - Billiards",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Klm6fRsi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-183%25EF%25BD%259CB%2520-%2520Billiards%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Klm6fRsi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-183%25EF%25BD%259CB%2520-%2520Billiards%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/26295363907c89",
          "author": "オライリーヨッシー",
          "description": "概要\nシステム開発に携わるデベロッパーであれば、誰しもデバッグに頭を悩ませることが多いだろう。特にデバッグするためのエラー内容特定について、時間がかかる人が多いのではないか。かく言う自分もそうである。システム開発歴が短いため、「これって、どう言うエラー？？」とか「どこに原因があるの？？」と問題分析ができず、時間を空費してしまうことが多々あった。コードを書くうえで、避けるべきエラー出力の方法と良いエラー出力の方法を記載する。\n\n 避けるべきエラー出力の方法\n結論から言うと、下記が避けるべきエラー出力の方法である。\nexcept:\n\treturn json.dumps({\n\t    's...",
          "link": "https://zenn.dev/oreilly_ota/articles/26295363907c89",
          "publishedOn": "2023-03-26T23:49:38.000Z",
          "wordCount": 895,
          "title": "【Python】例外処理把握によるエラーの特定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eZhkbzhQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E6%258A%258A%25E6%258F%25A1%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eZhkbzhQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E6%258A%258A%25E6%258F%25A1%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dencyu/articles/2b58f669bcd473",
          "author": "でんちゅー",
          "description": "記事を書いた背景\n最近業務で業務効率化のオンプレwebアプリケーションや自動化プログラムを作成する機会増えているが、特に自動化プログラムにおいてlogという存在の重要性をより強く感じている。\n作成したアプリケーションやシステムの数が増えるほど、個々の動作確認に割くことができる工数が限られてくるため、より分かりやすいフォーマットで効率よくログ収集する必要がある。\nこの記事では、Pythonにおけるloggingを\"イメージ重視\"でわかりやすく解説していく。\n!\n一定以上のコード読解力がある人や、他言語での経験がある人にとっては多少回りくどいと感じる部分もあるかもしれないが、コードとイメ...",
          "link": "https://zenn.dev/dencyu/articles/2b58f669bcd473",
          "publishedOn": "2023-03-26T14:19:49.000Z",
          "wordCount": 3438,
          "title": "Pythonのloggingをイメージで理解する【Python Logging徹底解説】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8tvHRUNq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AElogging%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python%2520Logging%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A7%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2585%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzc4NjQ0NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8tvHRUNq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AElogging%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python%2520Logging%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A7%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2585%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzc4NjQ0NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuiseki/articles/c86e6120414b6c",
          "author": "yuiseki",
          "description": "はい、承知しました🤗。Huggingface Transformersで可能な限り多くの事前学習済みの画像キャプション生成機械学習モデルを試して、考察いたします🤗。\n以下に、私が検証した事前学習済みモデルを列挙します🤗。\n\nViT GPT-2 image captioning\n\nnlpconnect/vit-gpt2-image-captioning\n\n\nGIT base textcaps\n\nmicrosoft/git-base-textcaps\n\n\nGIT large textcaps\n\nmicrosoft/git-large-r-textcaps\n\n\nBLIP image capti...",
          "link": "https://zenn.dev/yuiseki/articles/c86e6120414b6c",
          "publishedOn": "2023-03-26T13:28:13.000Z",
          "wordCount": 2627,
          "title": "Huggingface Transformersで可能な限り多くの事前学習済み画像キャプション生成機械学習モデルを試して考察せよ🤗。実行：",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cf-JkWgd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Huggingface%2520Transformers%25E3%2581%25A7%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E9%2599%2590%25E3%2582%258A%25E5%25A4%259A%25E3%2581%258F%25E3%2581%25AE%25E4%25BA%258B%25E5%2589%258D%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cf-JkWgd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Huggingface%2520Transformers%25E3%2581%25A7%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E9%2599%2590%25E3%2582%258A%25E5%25A4%259A%25E3%2581%258F%25E3%2581%25AE%25E4%25BA%258B%25E5%2589%258D%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryo_tan/articles/5d03c0157501aa",
          "author": "りょー",
          "description": "Stock price prediction using Informer and Alpha Vantage API\nA memo on stock price prediction using the Informer algorithm, an improvement on the Transformer algorithm used in ChatGPT, for time series data.\nI am not responsible if you lose money using this!\nThe code in this article is an arrange...",
          "link": "https://zenn.dev/ryo_tan/articles/5d03c0157501aa",
          "publishedOn": "2023-03-26T12:35:53.000Z",
          "wordCount": 4531,
          "title": "Stock Price Prediction Using Informer And Alpha Vantage API",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jAMsZXIt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stock%2520Price%2520Prediction%2520Using%2520Informer%2520And%2520Alpha%2520Vantage%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRDTVY5YU9SWS1OenZUVi1rOTNCMDNuazZUXy1Cd2FJWFlJeE9tQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jAMsZXIt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stock%2520Price%2520Prediction%2520Using%2520Informer%2520And%2520Alpha%2520Vantage%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRDTVY5YU9SWS1OenZUVi1rOTNCMDNuazZUXy1Cd2FJWFlJeE9tQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yagiyuki/articles/tictactoe_tkinter",
          "author": "yagiyuki",
          "description": "はじめに\nPythonとGUIライブラリであるTkinterを使って、簡単な○✗ゲームを作成するための記事を書きました。\nPythonを勉強してみたいけど、何からやればいい変わらないという方は、ぜひこの記事の手順に沿ってゲームを作成してみてください。\n楽しくPythonが勉強できると思います。\nまた、最後に本記事の理解度を確認するための問題も用意したので、ぜひチャレンジしてみてください。\n\n 実装手順\n下記に○✗ゲーム実装の手順を書きます。\nまずは、完成したコードを実際に動かしてから読みたいという人は、「実装結果」を参照してください。\n\n 1. Tkinterのインポート\nまずは、T...",
          "link": "https://zenn.dev/yagiyuki/articles/tictactoe_tkinter",
          "publishedOn": "2023-03-26T12:25:01.000Z",
          "wordCount": 1602,
          "title": "Python初心者必見！Tkinterを使って簡単に○✗ゲームを作成しよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nhl9t4BT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%25BF%2585%25E8%25A6%258B%25EF%25BC%2581Tkinter%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E2%2597%258B%25E2%259C%2597%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nhl9t4BT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%25BF%2585%25E8%25A6%258B%25EF%25BC%2581Tkinter%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E2%2597%258B%25E2%259C%2597%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yodoyodo/articles/9d8d3aaf9a8814",
          "author": "淀淀",
          "description": "はじめに\nN + 1問題については、たくさんの情報が既にあります。Pythonの学習中なのでPythonでまとめてみました。解釈が間違っていましたらご指摘ください。\n\n N+1問題とは\n余計なSQLを重複して発行して処理が遅くなることです。データベースとのやり取りにおいて、リレーションシップ（関連）のあるデータを取得する際に、効率の悪いクエリが発生し、パフォーマンスに悪影響を与える問題です。一般的には、ORM（Object-Relational Mapping）を使用しているアプリケーションでよく発生します。\n\n Eager Loading（イーガーローディング）:\n関連するデータを...",
          "link": "https://zenn.dev/yodoyodo/articles/9d8d3aaf9a8814",
          "publishedOn": "2023-03-26T12:23:02.000Z",
          "wordCount": 903,
          "title": "N+1問題とその解決方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nW0-y3OR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:N%252B1%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B7%2580%25E6%25B7%2580%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVpaRkY2MEFDaXBlSXYyN1V1a1RyVklZZmpPS2FxODE5ZURRNGo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nW0-y3OR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:N%252B1%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B7%2580%25E6%25B7%2580%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVpaRkY2MEFDaXBlSXYyN1V1a1RyVklZZmpPS2FxODE5ZURRNGo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryo_tan/articles/4dce04c65c40b9",
          "author": "りょー",
          "description": "InformerとAlpha Vantage APIを用いた株価予測\nChatGPTで採用されているアルゴリズム、Transformerを改良したInformerアルゴリズムを用いて時系列データである株価予測を行った備忘録\nこれを使って大損しても責任負いません！\n本記事で記述するコードはInformer論文のファーストオーサーであるHaoyi Zhou氏が公開しているGithub Repositoryをアレンジしたものです\nhttps://github.com/zhouhaoyi/Informer2020\n\n Informerとは\nAAAI2021 Best paperとなった論文\n...",
          "link": "https://zenn.dev/ryo_tan/articles/4dce04c65c40b9",
          "publishedOn": "2023-03-26T11:37:04.000Z",
          "wordCount": 4009,
          "title": "InformerとAlpha Vantage APIを用いた株価予測メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2sMLtx7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Informer%25E3%2581%25A8Alpha%2520Vantage%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%25A0%25AA%25E4%25BE%25A1%25E4%25BA%2588%25E6%25B8%25AC%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRDTVY5YU9SWS1OenZUVi1rOTNCMDNuazZUXy1Cd2FJWFlJeE9tQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2sMLtx7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Informer%25E3%2581%25A8Alpha%2520Vantage%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%25A0%25AA%25E4%25BE%25A1%25E4%25BA%2588%25E6%25B8%25AC%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRDTVY5YU9SWS1OenZUVi1rOTNCMDNuazZUXy1Cd2FJWFlJeE9tQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f579d27b4519d7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-182 A - twiblr\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(max((a * 2 + 100) - b, 0))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f579d27b4519d7",
          "publishedOn": "2023-03-26T09:26:15.000Z",
          "wordCount": 258,
          "title": "［AtCoder］ABC-182｜A - twiblr",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sXYpdgRr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-182%25EF%25BD%259CA%2520-%2520twiblr%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sXYpdgRr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-182%25EF%25BD%259CA%2520-%2520twiblr%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e48234cfd62f37",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-181 B - Trapezoid Sum\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    l = getIntListRow(n)\n\n    s = 0\n    for a, b in l:\n        c = b - a + 1\n        s += (a + b...",
          "link": "https://zenn.dev/hyperdb/articles/e48234cfd62f37",
          "publishedOn": "2023-03-26T09:26:12.000Z",
          "wordCount": 374,
          "title": "［AtCoder］ABC-181｜B - Trapezoid Sum",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iQ5Pz9mQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-181%25EF%25BD%259CB%2520-%2520Trapezoid%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iQ5Pz9mQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-181%25EF%25BD%259CB%2520-%2520Trapezoid%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/763920ac858c78",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-182 B - Almost GCD\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    b = 0\n    c = 0\n    for i in range(2, max(a) + 1):\n        d = len([t for t in a if t % i == 0])\n...",
          "link": "https://zenn.dev/hyperdb/articles/763920ac858c78",
          "publishedOn": "2023-03-26T09:26:11.000Z",
          "wordCount": 434,
          "title": "［AtCoder］ABC-182｜B - Almost GCD",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8PihJqZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-182%25EF%25BD%259CB%2520-%2520Almost%2520GCD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8PihJqZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-182%25EF%25BD%259CB%2520-%2520Almost%2520GCD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/466a63c57d779c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-181 A - Heavy Rotation\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print('White' if n % 2 == 0 else 'Black')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/466a63c57d779c",
          "publishedOn": "2023-03-26T09:26:10.000Z",
          "wordCount": 241,
          "title": "［AtCoder］ABC-181｜A - Heavy Rotation",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HJz6xBBB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-181%25EF%25BD%259CA%2520-%2520Heavy%2520Rotation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HJz6xBBB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-181%25EF%25BD%259CA%2520-%2520Heavy%2520Rotation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/cd4ae32f1cf884",
          "author": "オライリーヨッシー",
          "description": "概要\nUdacityのCoffee Shop Appの開発をしていて、Backendのエラーが発生した。具体的には、下記URLに対してGETリクエストを送信したところ、JWTデコードのエラーが発生した。\nhttp://127.0.0.1:5000/drinks-detail\ndrinks-deitalはJWT認証が求められるため、その認証が通らないという状況。jwt.ioでtokenを確認しても、正しくユーザ権限が割り当てられていた。具体のエラーは下記の通り。\n[2023-03-26 17:48:13,554] ERROR in app: Exception on /drinks-d...",
          "link": "https://zenn.dev/oreilly_ota/articles/cd4ae32f1cf884",
          "publishedOn": "2023-03-26T09:19:30.000Z",
          "wordCount": 515,
          "title": "【Python】JWT tokenのデコードエラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Lk6q4QfV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591JWT%2520token%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Lk6q4QfV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591JWT%2520token%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuiseki/articles/64a42ef526323d",
          "author": "yuiseki",
          "description": "実装\n\napp.py\nimport sys\nimport requests\nfrom PIL import Image\nfrom transformers import BlipProcessor, BlipForConditionalGeneration\n\nif len(sys.argv) == 1:\n  print(\"URL of Image is missing!\")\n  print(\"python3 app.py [image_url]\")\n  sys.exit(1)\n\ndevice = \"cuda\" if torch.cuda.is_available() else \"cp...",
          "link": "https://zenn.dev/yuiseki/articles/64a42ef526323d",
          "publishedOn": "2023-03-26T06:43:40.000Z",
          "wordCount": 491,
          "title": "🤗BLIPで画像キャプション生成するPythonスクリプト🤗",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--V9OJwf2V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520BLIP%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--V9OJwf2V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520BLIP%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekodamistie/articles/9fcb9aa130f554",
          "author": "sacat.neko",
          "description": "背景\n筆者はいままで参照権限しか与えられずDDL知識は半端な状態。\n晴れて権限を貰えたが、ETLツールは使用できない環境。\nそれでも自動化しなければチームの業務も滞る。\n使い慣れたPythonでbat用スクリプトを作成していたが、\n兎にも角にもデータがインサートされない。\nその時のトライアンドエラーを記録する。\nDBクライアントツールはDBeaverを使用。\ncopy_fromについては今回触れない。CSVからINSERTする方法のみ。\n\n 先に結論\n\n close()も大事だけど、commit()も大事\n「PostgreSQL Python インサートできない」\nこの検索ワードで辿...",
          "link": "https://zenn.dev/nekodamistie/articles/9fcb9aa130f554",
          "publishedOn": "2023-03-26T06:19:04.000Z",
          "wordCount": 1833,
          "title": "PythonからPostgreSQLにCSVインポートするときハマった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6D6W50L1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589PostgreSQL%25E3%2581%25ABCSV%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6D6W50L1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589PostgreSQL%25E3%2581%25ABCSV%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aozou/articles/34a763a2bccf99",
          "author": "aozou",
          "description": "できたツール\n使い方はREADMEを読んでください！\nhttps://github.com/aozou99/youtube_whisper\n\n 作った理由\n\n 英語できないけど英語面接することになった\n現在所属しているチームの採用活動に携わっているのですが、最近海外エンジニアの採用を始めました。\n自分の英語スキルはTOEIC700点台で、Readingはなんとなくできるけど、それ以外が全然駄目です。\n英語が得意なメンバーがいるので、ついつい頼ってしまうのですが、やはり英語できるようになりたい！\n\n YoutubeにCode Interviewの動画があるやん\nただ、何をやれば英語面接...",
          "link": "https://zenn.dev/aozou/articles/34a763a2bccf99",
          "publishedOn": "2023-03-26T04:27:01.000Z",
          "wordCount": 303,
          "title": "YoutubeをWhisperで文字起こしするツールを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wvKVg1Bt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Youtube%25E3%2582%2592Whisper%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aozou%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pyYWFTc2lUSTdHZWFjbmg1cl9UR21JZ2tSU1NndjA4TldUVVphQlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wvKVg1Bt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Youtube%25E3%2582%2592Whisper%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aozou%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pyYWFTc2lUSTdHZWFjbmg1cl9UR21JZ2tSU1NndjA4TldUVVphQlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/saygox/articles/71559f55eb1f4b",
          "author": "saygox",
          "description": "前回の投稿では、Schemathesisを用いてOpenAPIのプロパティ・ベースド・テスト（PBT）を行いましたが、テストだけだったため、実際に何が行われているのかが理解しにくかったかもしれません。そこで、今回はPythonのFastAPIモジュールを使ったサーバ側の実装を示し、テストエラーの原因と対策を通じて、プロパティ・ベースド・テストの有用性について説明します。\n\n FastAPIによる実装概要\n前回の記事で紹介したOpenAPIのGUIの図に基づいて、\n\nFastAPIを用いた実装を簡潔に説明します\n# post data format\nclass User(BaseModel...",
          "link": "https://zenn.dev/saygox/articles/71559f55eb1f4b",
          "publishedOn": "2023-03-26T04:23:11.000Z",
          "wordCount": 790,
          "title": "FastAPIとSchemathesisを用いてプロパティ・ベースド・テスト(PBT)を実践してみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--28PwdHrp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8Schemathesis%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2528PBT%2529%25E3%2582%2592%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saygox%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lOZlZieEtMZGdEbUdscnJTX2NwcWtHTWVCVXgxQzRrWVNLTFZMamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--28PwdHrp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A8Schemathesis%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2528PBT%2529%25E3%2582%2592%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saygox%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lOZlZieEtMZGdEbUdscnJTX2NwcWtHTWVCVXgxQzRrWVNLTFZMamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuiseki/articles/bd73f607a2acf0",
          "author": "yuiseki",
          "description": "Google Colabolatory等で実行してね\n# 依存関係セットアップ\n!pip install transformers\n\n# モデルの読み込み\nfrom transformers import BlipProcessor, BlipForConditionalGeneration\n\nprocessor = BlipProcessor.from_pretrained(\"Salesforce/blip-image-captioning-large\")\nmodel = BlipForConditionalGeneration.from_pretrained(\"Salesforc...",
          "link": "https://zenn.dev/yuiseki/articles/bd73f607a2acf0",
          "publishedOn": "2023-03-26T04:18:44.000Z",
          "wordCount": 419,
          "title": "🤗15行のPythonでBLIPによる画像キャプション生成🤗",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Asmdr8Mt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252015%25E8%25A1%258C%25E3%2581%25AEPython%25E3%2581%25A7BLIP%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Asmdr8Mt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252015%25E8%25A1%258C%25E3%2581%25AEPython%25E3%2581%25A7BLIP%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2594%259F%25E6%2588%2590%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuiseki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gamella/articles/40053be16383f7",
          "author": "tomo@Alpaca",
          "description": "はじめに\n3/24にマケデコ主催でJ-Quants APIのリリース直前イベントが開催されました。\nhttps://mkdeco.connpass.com/event/273256/\nJ-Quants APIとは簡単に言うと、これまで機関投資家しかほとんどアクセスができなかった日本株式の様々な情報に個人がアクセス可能となるAPIで、そのなかでも事前発表されていたプレミアムプランの内容に注目が集まっていました。\nちょうどJ-Quantsの公式サイトもオープンになったので、発表の内容を見てみると以下のように月額でフリー、ライト、スタンダード、プレミアムの4プランで利用可能となったいます。...",
          "link": "https://zenn.dev/gamella/articles/40053be16383f7",
          "publishedOn": "2023-03-26T03:45:12.000Z",
          "wordCount": 351,
          "title": "J-Quants APIのリリースにより株式投資の時代が一歩進んだ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DkrBKkCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:J-Quants%2520API%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258A%25E6%25A0%25AA%25E5%25BC%258F%25E6%258A%2595%25E8%25B3%2587%25E3%2581%25AE%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%258C%25E4%25B8%2580%25E6%25AD%25A9%25E9%2580%25B2%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2540Alpaca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DkrBKkCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:J-Quants%2520API%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258A%25E6%25A0%25AA%25E5%25BC%258F%25E6%258A%2595%25E8%25B3%2587%25E3%2581%25AE%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%258C%25E4%25B8%2580%25E6%25AD%25A9%25E9%2580%25B2%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2540Alpaca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuma_soon/articles/bfd0c17444b804",
          "author": "kazuma-soon",
          "description": "背景\nblenderのアドオンを開発していると、デバッグしたい時があります。\nむしろそういう時しかないかもしれません。\nしかしながら、環境構築がめちゃくちゃ大変そうで、「これは俺にはできない！」と思い、発見した方法です。\n\n 結論\nbreakpoint() でデバッグする。\n\n 具体的な方法\n\nblenderをターミナルから立ち上げる。\n\n# これでpythonの実行ログがターミナルにて見られるようになる\n❯ /Applications/Blender.app/Contents/MacOS/Blender\n\n\nblenderにてスクリプトを書く\n\nデバッグしたいところに breakp...",
          "link": "https://zenn.dev/kazuma_soon/articles/bfd0c17444b804",
          "publishedOn": "2023-03-25T18:44:42.000Z",
          "wordCount": 109,
          "title": "簡単にblenderのスクリプトをデバッグする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KrlUKQOJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABblender%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KrlUKQOJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABblender%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/saygox/articles/06f4b290cf0ba2",
          "author": "saygox",
          "description": "ソフトウェア開発におけるテスト技術は急速に進化しています。中でも、プロパティ・ベースド・テスト（Property-Based Testing、略称PBT）が注目されていますが、まだ十分に普及していないと感じられます。\nこの記事では、プロパティ・ベースド・テストの基本概念や特徴については触れず、実践から入ります。簡単な使い方を学んで、プロパティ・ベースド・テストの効果を実感してみましょう。本格的な理解はその後でも問題ありません。\n今回は、OpenAPIのインターフェースに従って自動的にテストを行うSchemathesisを使用します\n\n OpenAPIとSchemathesis\nOpenA...",
          "link": "https://zenn.dev/saygox/articles/06f4b290cf0ba2",
          "publishedOn": "2023-03-25T15:12:47.000Z",
          "wordCount": 281,
          "title": "プロパティ・ベースド・テスト(PBT)を入門せずに恩恵に預かろう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ut3Owi3Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2528PBT%2529%25E3%2582%2592%25E5%2585%25A5%25E9%2596%2580%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E6%2581%25A9%25E6%2581%25B5%25E3%2581%25AB%25E9%25A0%2590%25E3%2581%258B%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saygox%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lOZlZieEtMZGdEbUdscnJTX2NwcWtHTWVCVXgxQzRrWVNLTFZMamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ut3Owi3Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2528PBT%2529%25E3%2582%2592%25E5%2585%25A5%25E9%2596%2580%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E6%2581%25A9%25E6%2581%25B5%25E3%2581%25AB%25E9%25A0%2590%25E3%2581%258B%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saygox%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lOZlZieEtMZGdEbUdscnJTX2NwcWtHTWVCVXgxQzRrWVNLTFZMamc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/cb1511666e2f99",
          "author": "Josh Nobus",
          "description": "はじめに\n本記事は以下の記事の続きとなる。\nhttps://zenn.dev/wsuzume/articles/6971d9449214ca\n前回は Keras で Sequential モデルを使って単純なフィードフォワード NN を作るとこまでやったので、今度はもっと複雑なコネクションを持つ NN を構築する。\nネットワークが複雑になるとデータセットを用意するのも学習するのも面倒くさくなっていくのでどう記事にしたものか悩んだのだが、とりあえず出力の shape が期待したものになっていたり、shape だけ一致している擬似データに対して学習が実行できればネットワークは構築できたこ...",
          "link": "https://zenn.dev/wsuzume/articles/cb1511666e2f99",
          "publishedOn": "2023-03-25T14:15:01.000Z",
          "wordCount": 2328,
          "title": "TensorFlow の使い方練習２：Functional API",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ahUxLzud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2592%25EF%25BC%259AFunctional%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ahUxLzud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%2592%25EF%25BC%259AFunctional%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekodamistie/articles/69b715938690b8",
          "author": "sacat.neko",
          "description": "SeleniumもChromeDriverもインストールしたのに\nまずはブラウザの立ち上げできるかなと思ったら、動かない。\n矢鱈にインストールした初心者ぼくが悪い。\n「pip install chromedriver-binary」だけすればOK！という情報に惑わされ、\n以下のようなエラーが出た。\n言われた通りバージョン指定しても同じエラー・・・\n\n'chromedriver' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home\n\n\n 解決してくれた参考サイト\nChrome...",
          "link": "https://zenn.dev/nekodamistie/articles/69b715938690b8",
          "publishedOn": "2023-03-25T13:32:18.000Z",
          "wordCount": 274,
          "title": "Seleniumのエラー、苦労話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---YLc4t5l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Selenium%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2581%25E8%258B%25A6%25E5%258A%25B4%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---YLc4t5l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Selenium%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2581%25E8%258B%25A6%25E5%258A%25B4%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekodamistie/articles/bcb9f348b2db46",
          "author": "sacat.neko",
          "description": "個人情報をマスキングする\nダッシュボードでデータを掲載したいものの、個人情報は情報セキュリティ的に載せられない。\nCRM（顧客情報管理システム）などで手入力されるデータは表記が揺れるため、\nSQLやPowerQueryには限界を感じ、自分の扱う個人情報で特に多い電話番号のマスキングに\n正規表現を使用してみた。\nSQLでもある程度できるが、使用しているDBで一般的なreplace関数の引数が使えず、\n何度も電話番号が出現した場合は対応できないため、諦めた。\n\n テストデータを用意する\n携帯電話と固定電話を含んだリストを作成する。\nメモなどに入力され、電話番号以外にも情報があり、それは残...",
          "link": "https://zenn.dev/nekodamistie/articles/bcb9f348b2db46",
          "publishedOn": "2023-03-25T12:38:42.000Z",
          "wordCount": 526,
          "title": "Python 正規表現で個人情報マスキング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VI_48B1I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E6%2583%2585%25E5%25A0%25B1%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VI_48B1I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E6%2583%2585%25E5%25A0%25B1%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/astrologian/articles/5769d81671d49e",
          "author": "zoniha",
          "description": "こんにちは 👋\n今回は昔作った「文字列ジェネレーター」という Web サービスを Streamlit で作り直してみた話をしたいと思います。\n\n 新しく作ったもの\n名前を「文字列ジェネレーター」から「Eastest」に変更しました。「easy」+「test」=「Eastest」という安直な名前です。\nhttps://mog-mog.streamlit.app/\n\n 昔作った Web サービスの概要\nhttps://zenn.dev/astrologian/articles/9e09eaf519e720\n昔作ったものについては上の記事に書いてあるのですが、簡単に説明すると\n\n実務のテスト工...",
          "link": "https://zenn.dev/astrologian/articles/5769d81671d49e",
          "publishedOn": "2023-03-25T11:56:08.000Z",
          "wordCount": 536,
          "title": "昔作ったWebサービスをStreamlitで作り直した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZTJMAk6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2598%2594%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592Streamlit%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258A%25E7%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zoniha%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYjRlYjlhN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZTJMAk6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2598%2594%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592Streamlit%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258A%25E7%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zoniha%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYjRlYjlhN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zerebom/articles/1ffd51da420c9e",
          "author": "zerebom",
          "description": "こんにちは！本記事ではChatGPT4を使ってPDF文書を要約し、質問応答サービスを提供するWebアプリケーションを開発した記録を紹介します。このサービスは、論文を読む際に役立つサポートツールとして作成しました。\n記事では、サービス開発においてChatGPT-4がどのように活用できるか、また、どのようにペアプロを行うと効果的かといった内容をシェアします。\nこの記事を通じて、AI技術とエンジニアがどのように協力し、新たな価値を生み出すことができそうか、という所感を伝えられたら嬉しいです。\n\n gpt-pdf-summarizerの概要\n今回開発したgpt-pdf-summarizerは、P...",
          "link": "https://zenn.dev/zerebom/articles/1ffd51da420c9e",
          "publishedOn": "2023-03-25T10:41:23.000Z",
          "wordCount": 543,
          "title": "ChatGPT-4とのペアプログラミング体験: PDF要約＆Q&Aサービス開発の所感",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wV9w85fl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT-4%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%259A%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E4%25BD%2593%25E9%25A8%2593%253A%2520PDF%25E8%25A6%2581%25E7%25B4%2584%25EF%25BC%2586Q%2526A%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E6%2589%2580%25E6%2584%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zerebom%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2FmMmVhNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wV9w85fl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT-4%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%259A%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E4%25BD%2593%25E9%25A8%2593%253A%2520PDF%25E8%25A6%2581%25E7%25B4%2584%25EF%25BC%2586Q%2526A%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E6%2589%2580%25E6%2584%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zerebom%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwN2FmMmVhNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuma_soon/articles/54fa7c065c88ac",
          "author": "kazuma-soon",
          "description": "どんなアドオンか？\nblenderをやっていると、.blend1, .blend2っていうような拡張子のバックアップファイルを作成してくれます。ありがたいのですが、作業ディレクトリにどんどん作られちゃうので、煩雑になっちゃうんですよね。。。\nそこで、これらのバックアップファイルをサブディレクトリにまとめて放り込んでくれるアドオンを作成しました〜。\nこちらを参考に作成しました。\nこちらだと、macOSでは動かないのですよね（path表記が異なるため）。\n※Windowsの方はこちらを参考にしてください。\n\n 使用法\nGitHubにまとめています。\n他のblenderのアドオンと同じ方法...",
          "link": "https://zenn.dev/kazuma_soon/articles/54fa7c065c88ac",
          "publishedOn": "2023-03-25T10:33:57.000Z",
          "wordCount": 2359,
          "title": "blenderのバックアップを自動整理するアドオン作りました！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cYgh6T9m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:blender%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25B3%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cYgh6T9m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:blender%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25B3%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma-soon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MTA4MTc3NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/28b2124b3adac5",
          "author": "shimo",
          "description": "動機など\n\nS3を使ったCodePipelineのテストをしていて、何度も作り直すときにバケットの中身を消すのが面倒だった\nバージョニングがあっても消せます\n\n\n 使い方\npython /path/to/delete_cfn_stack_with_s3.py\n\n スクリプト\n\ndelete_cfn_stack_with_s3.py\nimport boto3\n\n\"\"\"\nThis script is for deleting an AWS CloudFormation stack with S3 buckets.\nUsage: python /full/path/to/script.py...",
          "link": "https://zenn.dev/shimo_s3/articles/28b2124b3adac5",
          "publishedOn": "2023-03-25T08:58:06.000Z",
          "wordCount": 743,
          "title": "CloudFormationのスタックをS3があっても無理やり消すPythonスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FQs0iEMz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CloudFormation%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592S3%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2582%25E7%2584%25A1%25E7%2590%2586%25E3%2582%2584%25E3%2582%258A%25E6%25B6%2588%25E3%2581%2599Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FQs0iEMz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CloudFormation%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592S3%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2582%25E7%2584%25A1%25E7%2590%2586%25E3%2582%2584%25E3%2582%258A%25E6%25B6%2588%25E3%2581%2599Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoya0121/articles/8652fc85e4457a",
          "author": "R",
          "description": "SQLAlchemyはPythonで使われるORM（Object Relational Mapper）であり、データベース操作をより簡単に行えるようにするライブラリ。\n\n SQLAlchemyのインストール\n簡単なディレクトリを作成し、venv(仮想環境)を使用してSQLAlchemyをインストールしていく。\n# 簡単なディレクトリを作成する\n$ mkdir ~/sqlalchemy-test\n\n# ディレクトリを移動する\n$ cd ~/sqlachemy-test\n\n# venvを作成する\n$ python3 -m venv venv\n\n# 仮想環境へ入る。仮想環境へ入れたら左側に(v...",
          "link": "https://zenn.dev/ryoya0121/articles/8652fc85e4457a",
          "publishedOn": "2023-03-25T03:46:09.000Z",
          "wordCount": 564,
          "title": "SQLAlchemyの基本的な使い方について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sjwVvEEb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OTBiNTI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sjwVvEEb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLAlchemy%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OTBiNTI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/0369b4d3cc5638",
          "author": "tirimen",
          "description": "本記事の目的\nベイズ最適化記事のための前記事第二弾。前回はモンテカルロ法を用いて円周率を導出した。\nhttps://zenn.dev/tirimen/articles/9c0416969d3a0b\nこのモンテカルロ法と本記事のマルコフチェーンを組み合わせた手法をMCMC法（マルコフ連鎖モンテカルロ法）といい、ベイズ最適化を行う際によく用いられている。なので、ベイズ最適化を学ぶ前にマルコフチェーンについても学ぶ必要があると思い、記事にまとめた。\n\n マルコフチェーンとは\nいつも通り表面だけ説明していく。マルコフチェーンとは、事後データが前データの中でも直前のデータのみに依存するモデルを...",
          "link": "https://zenn.dev/tirimen/articles/0369b4d3cc5638",
          "publishedOn": "2023-03-25T03:35:00.000Z",
          "wordCount": 2952,
          "title": "Pythonでマルコフチェーンを用い、天気の遷移確率を求めよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P6fbH-8g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2580%2581%25E5%25A4%25A9%25E6%25B0%2597%25E3%2581%25AE%25E9%2581%25B7%25E7%25A7%25BB%25E7%25A2%25BA%25E7%258E%2587%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P6fbH-8g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%2595%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2580%2581%25E5%25A4%25A9%25E6%25B0%2597%25E3%2581%25AE%25E9%2581%25B7%25E7%25A7%25BB%25E7%25A2%25BA%25E7%258E%2587%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoya0121/articles/0802cee3b855c0",
          "author": "R",
          "description": "app.pyを以下のように作成する\nfrom wsgiref.simple_server import make_server\nfrom pyramid.config import Configurator\nfrom pyramid.response import Response\n\ndef hello_world(request):\n    print('Request inbound!')\n    return Response('Hello World!')\n\nif __name__ == '__main__':\n    config = Configurator()\n    co...",
          "link": "https://zenn.dev/ryoya0121/articles/0802cee3b855c0",
          "publishedOn": "2023-03-25T03:34:25.000Z",
          "wordCount": 380,
          "title": "DockerでPyramidアプリケーションを起動",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZI5wQIGc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Pyramid%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OTBiNTI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZI5wQIGc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Pyramid%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OTBiNTI4ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/claustra01/articles/0d8efd08905526",
          "author": "claustra01",
          "description": "はじめに\nこの記事は、WindowsへWSL2(Ubuntu)とVSCodeをインストールし、pythonで開発ができるようになるまでの手順を個人的な備忘録としてまとめたものです。\nWSLやUbuntu、VSCodeその他のアップデートおよび仕様変更によって将来的にこの手順が使用できなくなる可能性があります。(記.2023/3/24)\n\n Pyenvとは？\npyenvとは、pythonのバージョン管理ツールで、これを導入することによって「プロジェクトによってpythonのバージョンを切り替えたい……」というような時に、逐一pythonをアンインストールしたり環境変数を手動で書き換えた...",
          "link": "https://zenn.dev/claustra01/articles/0d8efd08905526",
          "publishedOn": "2023-03-24T12:08:43.000Z",
          "wordCount": 292,
          "title": "WSL2にpyenvを導入してPythonのバージョンを管理する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DQXqWYEn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25ABpyenv%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:claustra01%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYzA5NTNjMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DQXqWYEn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25ABpyenv%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6Python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:claustra01%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYzA5NTNjMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kacky/articles/d15f120a3c2aba",
          "author": "kacky",
          "description": "はじめに\n本記事では、AWS と Python を用いたバックエンドエンジニアにとっての関心事である、並列処理の最適な設定を検証します。具体的には、Python での並列実行において最もネットワークパフォーマンスが高まる並列数を調査します。\n\n 実験手法\nAWS S3 バケット内の全ファイルを取得し、サイズを返すプログラムの実行時間を計測しました。実験環境は AWS Fargate を使用し、Thread と Process による並列処理を検証しました。詳細なプログラムは下記のコードを参照してください。\nimport base64\nimport csv\nimport hashlib...",
          "link": "https://zenn.dev/kacky/articles/d15f120a3c2aba",
          "publishedOn": "2023-03-24T10:13:14.000Z",
          "wordCount": 1396,
          "title": "PythonとAWSで並列処理最適化: パフォーマンス向上の鍵",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--k_xIkIzd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8AWS%25E3%2581%25A7%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%253A%2520%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%2591%25E4%25B8%258A%25E3%2581%25AE%25E9%258D%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kacky%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNDNjY2VhMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--k_xIkIzd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8AWS%25E3%2581%25A7%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%253A%2520%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%2591%25E4%25B8%258A%25E3%2581%25AE%25E9%258D%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kacky%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNDNjY2VhMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nek0n0mimi/articles/dfc53be51e7ba9",
          "author": "calcifer",
          "description": "実行環境\n\nPython 3.9\nSelenium 4\nmacOS\n\n\n 問題\nエラー文\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element:\n\noptions.headless = Trueを追加すると、元々取得できていた要素が取得できなくなった。\n様々な方法を試し解決した方法を紹介する。\n\n 解決\nオプションを以下のように記入する。\n注意点として、options.add_argument('window-size=1400,60...",
          "link": "https://zenn.dev/nek0n0mimi/articles/dfc53be51e7ba9",
          "publishedOn": "2023-03-24T09:38:56.000Z",
          "wordCount": 140,
          "title": "【Selenium4】Headlessにすると要素が見つからない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P3lmruqx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Selenium4%25E3%2580%2591Headless%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%258C%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:calcifer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3MmQ1YzM4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P3lmruqx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Selenium4%25E3%2580%2591Headless%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%258C%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:calcifer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3MmQ1YzM4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9458610b41ed6b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-180 A - box\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, a, b = getIntMap()\n\n    print(n - a + b)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9458610b41ed6b",
          "publishedOn": "2023-03-24T05:02:35.000Z",
          "wordCount": 236,
          "title": "［AtCoder］ABC-180｜A - box",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DtSn45_R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-180%25EF%25BD%259CA%2520-%2520box%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DtSn45_R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-180%25EF%25BD%259CA%2520-%2520box%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1af4230043a679",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-180 B - Various distances\n\n\n\n 提出結果\nimport math\n\n\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef m(l):\n    s = 0\n    for i in l:\n        s += abs(i)\n    return s\n\n\ndef e(l):\n    s = 0\n    for i in l:\n        s += abs(i) ** 2...",
          "link": "https://zenn.dev/hyperdb/articles/1af4230043a679",
          "publishedOn": "2023-03-24T05:02:34.000Z",
          "wordCount": 468,
          "title": "［AtCoder］ABC-180｜B - Various distances",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s0OlMX91--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-180%25EF%25BD%259CB%2520-%2520Various%2520distances%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s0OlMX91--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-180%25EF%25BD%259CB%2520-%2520Various%2520distances%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/itasan2/articles/f2d2bd881425b8",
          "author": "itasan2",
          "description": "はじめに\n皆さん、こんにちは！\nZenn初めての投稿となる今回は、今最もホットな話題のChatGPTをテーマにしてみました。\n似たようなチャットボットプログラムは既にいっぱいあると思いますが、ChatGPT APIとPythonライブラリーのGradioを使ってシンプルにチャットボットを作成してみたので、その情報を共有したいと思います。なお、完成イメージは下記スクリーンショットの通りとなります。\n\n\n 準備\nChatGPT APIを使用するには下記が必要となります。\n\n ①OpenAIアカウント\nOpenAIのサイトでアカウントを作成（無料）\n\n ②APIキー\nOpenAIアカウント...",
          "link": "https://zenn.dev/itasan2/articles/f2d2bd881425b8",
          "publishedOn": "2023-03-24T04:38:08.000Z",
          "wordCount": 1571,
          "title": "ChatGPT APIとGradioでチャットボットを簡単作成しよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Bv2ie8WX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520API%25E3%2581%25A8Gradio%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:itasan2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YU9TQldJTXFWSGZGS3gwZXVUdEhzZUJnRlFiMzhWZjNWOHc1eU9odz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Bv2ie8WX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520API%25E3%2581%25A8Gradio%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:itasan2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YU9TQldJTXFWSGZGS3gwZXVUdEhzZUJnRlFiMzhWZjNWOHc1eU9odz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/c092f1be13c79b",
          "author": "オライリーヨッシー",
          "description": "概要\nFlaskでアプリケーションを構築していたところ、下記エラーに遭遇した。\n\nどういったエラーか説明すると、/drinks-detailsというjwt認証を必要とするエンドポイントにリクエストを送ると、上記エラーが発生する。具体的なコードは下記の通り。\n@app.route('/drinks-detail', methods=['GET'])\n@requires_auth('get:drinks-detail')\ndef get_drinks_detail(jwt):\n    try:\n        drinksLongList = [drink.long() for drin...",
          "link": "https://zenn.dev/oreilly_ota/articles/c092f1be13c79b",
          "publishedOn": "2023-03-24T00:55:53.000Z",
          "wordCount": 370,
          "title": "【Python】エラー：urllib.error.URLError/ SSL: CERTIFICATE_VERIFY_FAILED",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---B7zcDxN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25EF%25BC%259Aurllib.error.URLError%252F%2520SSL%253A%2520CERTIFICATE_VERIF...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---B7zcDxN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25EF%25BC%259Aurllib.error.URLError%252F%2520SSL%253A%2520CERTIFICATE_VERIF...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/misakiishihara/articles/1704849eb643ad",
          "author": "石原岬",
          "description": "あまりにも暇すぎて久しぶりに映画でも観るかと思い立ったのですが、大学生という４年間のモラトリアムに名作・傑作を全て見尽くしてしまった感があり、久しぶりにPythonを触りたくなったのでfilmarksから人気な映画に絞っていい映画に出会ってみようと思います。\nhttps://beautiful-soup-4.readthedocs.io/en/latest/\n執筆中・・・（途中)\n一応流れ\n\n 必要なライブラリのインストール\n!pip install requests\n!pip install beautifulsoup4\nimport sqlite3\n\n Filmarksのレビューペー...",
          "link": "https://zenn.dev/misakiishihara/articles/1704849eb643ad",
          "publishedOn": "2023-03-23T15:11:48.000Z",
          "wordCount": 431,
          "title": "[Python]Beautiful Soup 4であらゆるデータをスクレイピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pwPH1juk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255DBeautiful%2520Soup%25204%25E3%2581%25A7%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczZDRkOWU5ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pwPH1juk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255DBeautiful%2520Soup%25204%25E3%2581%25A7%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczZDRkOWU5ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/skwbc/articles/implement_gradient_boosting",
          "author": "skwbc",
          "description": "概要\n勾配ブースティングは、2023年現在最も広く使われている機械学習アルゴリズムの一つです。[1]\n勾配ブースティングを実装したライブラリとしてはXGBoostやLightGBMなどが有名で、これらを使うことで高速かつ高精度な機械学習モデルを簡単に構築することが出来ます。\n実際に自分でもこれらのライブラリを日常的に使っているのですが、よく使うものなので自分でも実装してみることで良い学びが得られるような気がしています。\nそこで、本記事では勾配ブースティングのアルゴリズムを自分で実装してみようと思います。\n実装の方針は以下の通りです。\n\n最もよく使われる弱学習器として決定木を使う手法[...",
          "link": "https://zenn.dev/skwbc/articles/implement_gradient_boosting",
          "publishedOn": "2023-03-23T09:20:54.000Z",
          "wordCount": 7367,
          "title": "勾配ブースティングを自分で実装してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4i8ksPc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%25BE%25E9%2585%258D%25E3%2583%2596%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skwbc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4i8ksPc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%25BE%25E9%2585%258D%25E3%2583%2596%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skwbc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangaezaru/articles/c58c40d9bb8012",
          "author": "kangaezaru",
          "description": "1. 本稿の概要\n\n ◆ ゴール\n以下のような機能を満たすPythonスクリプトを作成しました。\nこちらはELBインスタンス向けです。\n\nELBで特定タグ(Owner)の付与状況をリスト化\nローカル環境でI/Oが自由なPythonスクリプトとして実行\nその抽出結果はCSVカンマ区切り形式でローカルに出力\n\n\n ◆ 背景、前提、その他サービスまとめなど\n全体論はこちら を参照\n※単にタグを棚卸したり付与するだけならタグエディタで見るのが一番楽かとは思います。\n\n 2. 開発\n\n ◆ 概説\nE+BのOwnerタグが未付与のリソースの一覧を出力します。\nとりあえず単体では東京リージョ...",
          "link": "https://zenn.dev/kangaezaru/articles/c58c40d9bb8012",
          "publishedOn": "2023-03-23T08:09:07.000Z",
          "wordCount": 542,
          "title": "【ELB】AWS Boto3 by Pythonで特定タグ未付与のリソース抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QY6I2WFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ELB%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QY6I2WFx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ELB%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangaezaru/articles/f978d56e62beae",
          "author": "kangaezaru",
          "description": "1. 本稿の概要\n\n ◆ ゴール\n以下のような機能を満たすPythonスクリプトを作成しました。\nこちらはRDSインスタンス向けです。\n\nRDSインスタンスで特定タグ(Owner)の付与状況をリスト化\nローカル環境でI/Oが自由なPythonスクリプトとして実行\nその抽出結果はCSVカンマ区切り形式でローカルに出力\n\n\n ◆ 背景、前提、その他サービスまとめなど\n全体論はこちら を参照\n※単にタグを棚卸したり付与するだけならタグエディタで見るのが一番楽かとは思います。\n\n 2. 開発\n\n ◆ 概説\nRDSのOwnerタグが未付与のリソースの一覧を出力します。\nとりあえず単体では...",
          "link": "https://zenn.dev/kangaezaru/articles/f978d56e62beae",
          "publishedOn": "2023-03-23T08:05:00.000Z",
          "wordCount": 496,
          "title": "【RDS編】AWS Boto3 by Pythonで特定タグ未付与のリソース抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--syNt-tCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590RDS%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--syNt-tCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590RDS%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c073aea370a601",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-179 A - Plural Form\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print(s + ('es' if s[-1] == 's' else 's'))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c073aea370a601",
          "publishedOn": "2023-03-23T05:17:45.000Z",
          "wordCount": 245,
          "title": "［AtCoder］ABC-179｜A - Plural Form",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MgshOZrr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-179%25EF%25BD%259CA%2520-%2520Plural%2520Form%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MgshOZrr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-179%25EF%25BD%259CA%2520-%2520Plural%2520Form%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4617a7b2a92d79",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-179 B - Go to Jail\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    d = getIntListRow(n)\n\n    z = 0\n    for a in d:\n        if len(set(a)) == 1:\n            z += 1...",
          "link": "https://zenn.dev/hyperdb/articles/4617a7b2a92d79",
          "publishedOn": "2023-03-23T05:17:44.000Z",
          "wordCount": 419,
          "title": "［AtCoder］ABC-179｜B - Go to Jail",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OE7pWQdE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-179%25EF%25BD%259CB%2520-%2520Go%2520to%2520Jail%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OE7pWQdE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-179%25EF%25BD%259CB%2520-%2520Go%2520to%2520Jail%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/harukaeru/articles/c73cdcdd2cd7a8",
          "author": "かえる",
          "description": "■ 概要\n※ この文章は人間の文章です。\nよく「ChatGPTに何かを指示して実装してもらったり、支援してもらったりする」という内容のものを見かけます。\nただ、ぼくとしては「そこまでわかっているのなら、勝手にプロダクトを実装できるのではないか？」と考えて、ぼくからは何も具体的な指示はせずに、プロダクトをChatGPTさんに考えてもらってそれを実装してもらいました。\nプロンプトの出発点は次の文言になります。\n\n最終的な成果物は次のような、簡単な言語学習クイズのプロトタイプになります。\n\n\nなぜ言語学習クイズかというと、ChatGPTさんから提案されたからです。ChatGPTさんは、AI...",
          "link": "https://zenn.dev/harukaeru/articles/c73cdcdd2cd7a8",
          "publishedOn": "2023-03-23T02:48:16.000Z",
          "wordCount": 253,
          "title": "ChatGPTに指示せずゼロからプロダクト（のプロトタイプ）を実装してもらった: AIを用いた革新的なアプローチ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fYUr6J8N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AB%25E6%258C%2587%25E7%25A4%25BA%25E3%2581%259B%25E3%2581%259A%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25EF%25BC%2588%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%253A%2520AI%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E9%259D%25A9%25E6%2596%25B0%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2588%25E3%2582%258B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNbUd4NXlWM3BBZFlIaWpnYXhhTHJwbjBtOUlpTWFLWmE5MkxkcGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fYUr6J8N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AB%25E6%258C%2587%25E7%25A4%25BA%25E3%2581%259B%25E3%2581%259A%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25EF%25BC%2588%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%253A%2520AI%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E9%259D%25A9%25E6%2596%25B0%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2588%25E3%2582%258B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNbUd4NXlWM3BBZFlIaWpnYXhhTHJwbjBtOUlpTWFLWmE5MkxkcGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hkdord/articles/prometheus-python-go-rust",
          "author": "Hidekazu Karino",
          "description": "はじめに\n去年から Observability に興味がありいくつか記事を書いてきた(Go で書いたアプリから Jaeger や X-Ray にトレースを送る記事とかコンテナでデプロイした AWS Lambda から X-Ray に OpenTelemetry SDK でトレースを送る記事とか)のですが、今まではトレースのことばかりでメトリクスはノータッチでした。Observability 観点だとメトリクスも外せないと考えてメトリクスデビューすることにしました。今回は Prometheus を使ってみます。アプリケーションは Python(Flask), Go (Echo), Ru...",
          "link": "https://zenn.dev/hkdord/articles/prometheus-python-go-rust",
          "publishedOn": "2023-03-22T13:54:33.000Z",
          "wordCount": 2430,
          "title": "Prometheus を Python, Go, Rust で始める",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uMoPG45H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prometheus%2520%25E3%2582%2592%2520Python%252C%2520Go%252C%2520Rust%2520%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hidekazu%2520Karino%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYzE5MWFjMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uMoPG45H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prometheus%2520%25E3%2582%2592%2520Python%252C%2520Go%252C%2520Rust%2520%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hidekazu%2520Karino%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYzE5MWFjMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/anieca/articles/230b3451018620",
          "author": "Anieca",
          "description": "はじめに\nGPT を使って画像・テキストから欲しい情報を抽出するライブラリを作りました。\nhttps://github.com/Anieca/Xtracture\nパッケージを公開済みなので以下のコマンドでインストールできます。\npip install -U xtracture\n\n 使い方\n下例のとおりです。\n!\nOpenAI の API キーが適切に設定されている必要があります。\nまた OCR に Google Cloud Vision API あるいは Tesseract を使う場合はこれらも適切に設定されている必要があります。\n\nfrom pathlib import Path\n...",
          "link": "https://zenn.dev/anieca/articles/230b3451018620",
          "publishedOn": "2023-03-22T10:41:30.000Z",
          "wordCount": 678,
          "title": "GPT を使って汎用 OCR を作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iZV8hgOY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25B1%258E%25E7%2594%25A8%2520OCR%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Anieca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDakJoZ0dFejZDQUN6NEpia3MxMVFzaEM2bGFId2Vsc1J5SlNDPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iZV8hgOY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25B1%258E%25E7%2594%25A8%2520OCR%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Anieca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDakJoZ0dFejZDQUN6NEpia3MxMVFzaEM2bGFId2Vsc1J5SlNDPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dms_sub/articles/6aedc87dc258e8",
          "author": "tuna2134",
          "description": "なぜ作ったか\nとある組織が開発しているbotでvoicevoxを使った読み上げを作っていたのですが、あまりにも作るのがめんどくさいので、たくさんの人と協力しながら作りたいと思って、voicevoxって名前でpypiにだしました。\nただし本家様に名前を変えるよう言われたためvoicevox-clientに名前を変えました。\n\n PyPIに上げる際のメタデータに使っているもの\ntwineとsetup.py、そしてpyproject.tomlを使っています。twineはライブラリーをアップロードするために使っています。\n\n 使用しているクライアントライブラリー\nhttpx、なぜhttpxを...",
          "link": "https://zenn.dev/dms_sub/articles/6aedc87dc258e8",
          "publishedOn": "2023-03-22T09:12:06.000Z",
          "wordCount": 329,
          "title": "新しいライブラリーを作った！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3AJQllva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3AJQllva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/turing_motors/articles/e23973714c3ecf",
          "author": "ymg_aq",
          "description": "はじめに\nPythonは世界的にも人気のあるプログラミング言語ですが、実行速度については課題があります。Pythonの実行速度を高速化したい、という要求は根強く、これまでにも様々なツールや処理系が開発されています。\nこの記事ではMITの研究者らが開発したPythonを高速化するツール「Codon」について紹介します。\nこの記事を3行でまとめると：\n\n高性能で簡単に扱えるPythonコンパイラ「Codon」\nPythonとの互換性がありながら、CやC++に匹敵する高速化を実現\n実際にPythonコードが100倍速くなることを検証\n\n\n Codonとは\nCodonは高性能なPython...",
          "link": "https://zenn.dev/turing_motors/articles/e23973714c3ecf",
          "publishedOn": "2023-03-22T09:00:00.000Z",
          "wordCount": 3895,
          "title": "あなたのPythonを100倍高速にする技術 / Codon入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EnR_O_f5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25AEPython%25E3%2582%2592100%25E5%2580%258D%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2520%252F%2520Codon%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Technical%2520blog%2520-%2520Turing%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ymg_aq%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NmMwZTUwYzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EnR_O_f5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25AEPython%25E3%2582%2592100%25E5%2580%258D%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2520%252F%2520Codon%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Technical%2520blog%2520-%2520Turing%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ymg_aq%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NmMwZTUwYzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hirotech/articles/498fcdfdf73a33",
          "author": "hiro-tech",
          "description": "はじめに\nAWSでサーバレスのシステムを開発する場合、コンソールを使って一から手でポチポチするのもしんどいので専用のフレームワークを使うことが多いと思います。代表的なところでいくとSAM、Amplify、Serverless Framework、CDKなどなど。\nこの中でも圧倒的な生産性の高さから、私は特にChaliceを好んで使っています。Pythonを使ってサーバレスアプリを組むならChalice一択とさえ思っているのですが、今回はそのChaliceを使ったときに発生しがちな悩みどころの解消方法を書いておきたいと思います。\nそもそもChaliceってなんやねん、という方は以下の記...",
          "link": "https://zenn.dev/hirotech/articles/498fcdfdf73a33",
          "publishedOn": "2023-03-22T06:43:33.000Z",
          "wordCount": 893,
          "title": "Blueprint機能を使ってChaliceのapp.pyを分割する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TJ0DZlip--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Blueprint%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Chalice%25E3%2581%25AEapp.py%25E3%2582%2592%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiro-tech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzOTc0OWM3MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TJ0DZlip--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Blueprint%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Chalice%25E3%2581%25AEapp.py%25E3%2582%2592%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiro-tech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzOTc0OWM3MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f3b35bef069f18",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-178 A - Not\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    print(0 if x == 1 else 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f3b35bef069f18",
          "publishedOn": "2023-03-22T05:25:43.000Z",
          "wordCount": 228,
          "title": "［AtCoder］ABC-178｜A - Not",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X18cNo7i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-178%25EF%25BD%259CA%2520-%2520Not%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X18cNo7i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-178%25EF%25BD%259CA%2520-%2520Not%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b402f2a3db21cd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-178 B - Product Max\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c, d = getIntMap()\n\n    print(max(max(a * c, a * d), max(b * c, b * d)))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b402f2a3db21cd",
          "publishedOn": "2023-03-22T05:25:42.000Z",
          "wordCount": 287,
          "title": "［AtCoder］ABC-178｜B - Product Max",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GpIUunMC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-178%25EF%25BD%259CB%2520-%2520Product%2520Max%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GpIUunMC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-178%25EF%25BD%259CB%2520-%2520Product%2520Max%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maco_macoo/articles/10536179963c95",
          "author": "M.Sato",
          "description": "はじめに\nPythonの勉強を始めて５か月…\nまだまだ技術的に身につけるべきことが多いです。\nそんな私がPythonを始めて勉強するときに使った参考書『スッキリわかるPython入門』について、まとめてみました。\nPythonの勉強をこれから始めるぞ！っていう人に特に読んでほしいです。\n\n 自分自身について\n私は情報系学部に所属しています。\nプログラミングの勉強を始めたのは大学生になってからです。\n大学では主にC言語を使っており、Pythonには触れたこともありませんでした。\nPythonは知人から紹介でやってみようと思い、勉強を始めました。\nまだ知識は浅いので、これからもっと勉強し...",
          "link": "https://zenn.dev/maco_macoo/articles/10536179963c95",
          "publishedOn": "2023-03-21T14:21:36.000Z",
          "wordCount": 230,
          "title": "『スッキリわかるPython入門』のレビュー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C4iRKsp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258E%25E3%2582%25B9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25AA%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BPython%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258F%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M.Sato%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WklzUGM1dV9IVXQ0NDhvc2xXUzNuYmFqMmtBNG1uVUFqTUtpckZIZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C4iRKsp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258E%25E3%2582%25B9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25AA%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BPython%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258F%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M.Sato%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WklzUGM1dV9IVXQ0NDhvc2xXUzNuYmFqMmtBNG1uVUFqTUtpckZIZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/katsu996/articles/python-fastapi",
          "author": "勝利 -Shori-",
          "description": "はじめに\n今回、はじめてZennで記事を書いてみることにしました。\n記事を書くことに慣れていないため、おかしな点があるかもしれませんがご了承下さい。\n初めての記事の題材に、FastAPIをDeta Spaceにデプロイするというテーマを選んだ理由は、実際に自分自身で使用していて、日本語の記事があまり見つからなかったためです。\n少しでもFastAPIをデプロイしたいという方のお役に立てるよう、記事を書くことにしました。\n実装やデプロイを完了した後に記事を執筆しているため、キャプチャがない部分や省略した箇所がありますが、ご了承ください。\n\n FastAPIとは\n個人的に一言でまとめると簡...",
          "link": "https://zenn.dev/katsu996/articles/python-fastapi",
          "publishedOn": "2023-03-21T13:30:00.000Z",
          "wordCount": 1719,
          "title": "無料でFastAPIで作ったAPIをデプロイする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gznmShqY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7FastAPI%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FAPI%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258B%259D%25E5%2588%25A9%2520-Shori-%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyNDE2YTA3Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gznmShqY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7FastAPI%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FAPI%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258B%259D%25E5%2588%25A9%2520-Shori-%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyNDE2YTA3Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hideoamezawa/books/study_owasp_zap",
          "author": "hideame",
          "description": "Djangoのサンプルサイトに脆弱性診断を実施してみましょう！",
          "link": "https://zenn.dev/hideoamezawa/books/study_owasp_zap",
          "publishedOn": "2023-03-21T11:55:52.000Z",
          "wordCount": 72,
          "title": "脆弱性診断入門（OWASP ZAP編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eWx5xDPo--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wYTdhNDE5MzViLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eWx5xDPo--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wYTdhNDE5MzViLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/wsuzume/articles/6971d9449214ca",
          "author": "Josh Nobus",
          "description": "はじめに\nnumpy だといろいろ機能が足りないことが増えてきてメインウェポンを tensorflow に移行したいので勉強したことまとめ。この記事は Sequential モデルを用いた単純なフィードフォワードニューラルネットの作成まで。\nGoogle Colab のノートブックはこちら。\nよい子のみなさんはこんな記事を読まずに公式のガイドやチュートリアルを読みましょう。\nhttps://www.tensorflow.org/guide\n\n 参考文献\n\n『Guide | TensorFlow Core』\n『Python: TensorFlow2 の自動微分を試してみる』\n『お話：数...",
          "link": "https://zenn.dev/wsuzume/articles/6971d9449214ca",
          "publishedOn": "2023-03-21T09:51:36.000Z",
          "wordCount": 6692,
          "title": "TensorFlow の使い方練習：自動微分と Sequential モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OPeBOISo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25E3%2581%25A8%2520Sequential%2520%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OPeBOISo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E7%25B7%25B4%25E7%25BF%2592%25EF%25BC%259A%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25E3%2581%25A8%2520Sequential%2520%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NTk2ODI4YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/724a601b208398",
          "author": "しろ",
          "description": "jpholidayライブラリを使い祝日を調べる\n\njpholidayでできること\n\n指定日の祝日名を取得\n指定日が祝日か判定\n指定月と年の祝日を取得\n指定範囲の祝日を取得\n独自の休日を追加、削除\n\n\n\n\n 使い方\ndatetimeライブラリを使うのでインポートを忘れずに\npip install jpholiday\n\n 指定日の祝日名を取得\n\n\nis_holiday_nameメソッドを使います\n\ndatetime.datetimeを引数にしても同じようにできます\n\nimport jpholiday\nimport datetime\n\nprint(jpholiday.is_holiday_...",
          "link": "https://zenn.dev/shiro_toy_box/articles/724a601b208398",
          "publishedOn": "2023-03-21T09:42:18.000Z",
          "wordCount": 1872,
          "title": "Pythonで祝日を調べる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BXq9xrPz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%25A5%259D%25E6%2597%25A5%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BXq9xrPz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E7%25A5%259D%25E6%2597%25A5%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tamakiii/articles/poetry-local-installation",
          "author": "Daichi Tamaki",
          "description": "TL;DR\n\n\npoetry install のインストール先は {cache-dir}/virtualenvs/...\n\n扱いにくいのでプロジェクト内に配置したい\n\n\n\npoetry config --local virtualenvs.in-project true でプロジェクト内に作るようになる\n\n\npoetry.toml が生成されて .venv にインストールされるようになる\n\n\n\nvirtualenv: error: argument --prompt: expected one argument で困ったら\n\nsee: https://gist.github.com/...",
          "link": "https://zenn.dev/tamakiii/articles/poetry-local-installation",
          "publishedOn": "2023-03-21T09:29:49.000Z",
          "wordCount": 4907,
          "title": "poetry でプロジェクト内にパッケージをインストールする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xbqRrrm4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%2586%2585%25E3%2581%25AB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daichi%2520Tamaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ptcGJxR1NYYkR4NXUtTENkamlqaE91TEw5X25YcWJwZDhKaDVwNUFZPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xbqRrrm4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%2586%2585%25E3%2581%25AB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daichi%2520Tamaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ptcGJxR1NYYkR4NXUtTENkamlqaE91TEw5X25YcWJwZDhKaDVwNUFZPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gamella/articles/c3157a285a236d",
          "author": "tomo@Alpaca",
          "description": "はじめに\nマケデコという主に株式関連のマーケットAPIを活用し、分析や予測モデルを構築しているbotterのDiscordコミュニティをJPX総研様、AlpacaJapanの協賛で運営しています。\nhttps://market-api.dev/\nマケデコの中で、さまざまなイベントを企画する中で、前提知識として、機械学習モデルが生成するスコアについての知識があまり共有されていないと感じていて、この文章を書いた次第です。\n過去に作成したものだと、JPX総研様と一緒に作成した株式分析チュートリアルなどはかなり網羅的にいろいろなトピックを扱っているのですが、こちらはSIGNATEで開催された...",
          "link": "https://zenn.dev/gamella/articles/c3157a285a236d",
          "publishedOn": "2023-03-21T06:35:53.000Z",
          "wordCount": 356,
          "title": "システムトレードを始めるための基本のスコア設計",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3byZjlED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25B3%25E3%2582%25A2%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2540Alpaca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3byZjlED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25B3%25E3%2582%25A2%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2540Alpaca%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDJhY2U1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/da9b0c43dc404b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-176 A - Takoyaki\n\n\n\n 提出結果\nimport math\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, x, t = getIntMap()\n\n    print(math.ceil(n / x) * t)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/da9b0c43dc404b",
          "publishedOn": "2023-03-21T04:43:02.000Z",
          "wordCount": 247,
          "title": "［AtCoder］ABC-176｜A - Takoyaki",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f-JSUv4d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-176%25EF%25BD%259CA%2520-%2520Takoyaki%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f-JSUv4d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-176%25EF%25BD%259CA%2520-%2520Takoyaki%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9d1242746c7c66",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-177 B - Substring\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef cnt_diff(s, t):\n    c = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            c += 1\n    return c\n\n\ndef main():\n    s = getString()\n    t = getString()\n\n    a = len(s)\n    b = len(t)\n    c = b\n    for ...",
          "link": "https://zenn.dev/hyperdb/articles/9d1242746c7c66",
          "publishedOn": "2023-03-21T04:43:02.000Z",
          "wordCount": 429,
          "title": "［AtCoder］ABC-177｜B - Substring",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bVI3QahV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-177%25EF%25BD%259CB%2520-%2520Substring%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bVI3QahV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-177%25EF%25BD%259CB%2520-%2520Substring%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7d65fafcb01ca8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-177 A - Don't be late\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    d, t, s = getIntMap()\n\n    print('Yes' if d / s <= t else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7d65fafcb01ca8",
          "publishedOn": "2023-03-21T04:43:01.000Z",
          "wordCount": 262,
          "title": "［AtCoder］ABC-177｜A - Don't be late",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FeOm9lKP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-177%25EF%25BD%259CA%2520-%2520Don%2527t%2520be%2520late%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FeOm9lKP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-177%25EF%25BD%259CA%2520-%2520Don%2527t%2520be%2520late%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4010f38975001b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-176 B - Multiple of 9\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    l = map(int, list(str(n)))\n\n    print('Yes' if sum(l) % 9 == 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/4010f38975001b",
          "publishedOn": "2023-03-21T04:43:01.000Z",
          "wordCount": 284,
          "title": "［AtCoder］ABC-176｜B - Multiple of 9",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G78z1d9_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-176%25EF%25BD%259CB%2520-%2520Multiple%2520of%25209%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G78z1d9_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-176%25EF%25BD%259CB%2520-%2520Multiple%2520of%25209%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hikapoppin/articles/69be223c89fbd5",
          "author": "hikaru",
          "description": "概要\nPythonでSpoyifyAPIを使って完全にランダムにランダムな曲をプレイリストに入れてみました。\n\n 背景\n普段皆さんは音楽の配信サービスは使用していますか？自分はSpotifyを使って、仕事中や移動中、ご飯食べてるときなどほぼ一日中音楽を聴いています。ただ、こういうサブスクのサービスって、どうしても試聴する音楽のジャンルが偏ったり、未知の音楽を発見しづらいという欠点があります。自分はJPOPからアフリカの民族音楽までなんでも聴くような人間なので、それでは困ります。特にDJみたいに、新しい音楽を発見するのが仕事といった人には不向きな機能なんじゃないんでしょうか。しかし、ま...",
          "link": "https://zenn.dev/hikapoppin/articles/69be223c89fbd5",
          "publishedOn": "2023-03-21T03:33:03.000Z",
          "wordCount": 1270,
          "title": "SpotifyAPIで未知の曲を漁ってみた①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--k28D0vrd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpotifyAPI%25E3%2581%25A7%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E6%259B%25B2%25E3%2582%2592%25E6%25BC%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ykc4a2d0MkRET1AzQTNmbmNzMjhKM2UxWWJPQklHdGc3NndKNGhIQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--k28D0vrd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpotifyAPI%25E3%2581%25A7%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E6%259B%25B2%25E3%2582%2592%25E6%25BC%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Ykc4a2d0MkRET1AzQTNmbmNzMjhKM2UxWWJPQklHdGc3NndKNGhIQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/9c0416969d3a0b",
          "author": "tirimen",
          "description": "本記事の目的\n知識を深めるために行う。現在はベイズ最適化の記事を書きたいが、その準備記事としてモンテカルロ法の記事を書く。前回、Streamlitを用いて簡単なアプリ制作はできるようになったので、今回は円周率の導出アプリを雑に作っていく。\n\n モンテカルロ法とは\nざっくり言うと、「乱数を用いて、試行回数を多くし、問題を解く」手法。ベイズ最適化も確率で重みづけした乱数を用いて最適解を求めている。今回は確率で重みづけしていない乱数（一様乱数）で行うが、基本原理は同じだと思ってほしい。\n\n 理論:円周率の導出\nモンテカルロ法の説明には円周率の導出が頻繁に用いられている。その導出方法は次の通...",
          "link": "https://zenn.dev/tirimen/articles/9c0416969d3a0b",
          "publishedOn": "2023-03-21T00:48:02.000Z",
          "wordCount": 778,
          "title": "Pythonでモンテカルロ法を用いてみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uA3XrPQB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uA3XrPQB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/qwegat/articles/4fb99ad25f3f36",
          "author": "qwegat",
          "description": "この記事は何\n\n\nTechカテゴリに含まれてこそいるものの、この記事はあくまで理論の側面でアプローチについて語るメモのようなものです。このアプローチに沿ったプロンプトやプログラムを書いてはいるものの、まだ期待通りの挙動をするとは言い難いです。\nなぜ公開したかというと、自分より賢くて素早い誰かが理屈だけを見て代わりにやってくれたりしないか、という期待からです。\nChatGPT Plus(GPT-4 APIではない)とPythonを使います。\n\n\n 今回作ったプロンプト\nそういう前提を踏まえ、まだ完成していないプロンプトを掲載します。\nプロンプト(コードブロック記法の関係で```が``に...",
          "link": "https://zenn.dev/qwegat/articles/4fb99ad25f3f36",
          "publishedOn": "2023-03-20T12:34:20.000Z",
          "wordCount": 2031,
          "title": "ChatGPTにCtrl+Fを覚えさせるアプローチについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dYz9jGbL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25ABCtrl%252BF%25E3%2582%2592%25E8%25A6%259A%25E3%2581%2588%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qwegat%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5NzlhNzAzZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dYz9jGbL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25ABCtrl%252BF%25E3%2582%2592%25E8%25A6%259A%25E3%2581%2588%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qwegat%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5NzlhNzAzZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/toppy/articles/04a55453706f9b",
          "author": "toppy",
          "description": "事前準備\n\n FastAPI 周りのインストール\nこのリンク を参考に fastapi, uvicorn をインストールする\n\n Vercel のアカウントの作成\nこのリンクから から Vercel のアカウントを作成する\n\n フォルダの作成\nフォルダ構成は以下の通り\n<pre>\n.\n├── main.py\n├── requirements.txt\n└── vercel.json\n</pre>\n\n main.py\n\nmain.py\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\nasync...",
          "link": "https://zenn.dev/toppy/articles/04a55453706f9b",
          "publishedOn": "2023-03-20T10:27:47.000Z",
          "wordCount": 434,
          "title": "FastAPI を Vercel にデプロイする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QLbjCxIp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2582%2592%2520Vercel%2520%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toppy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ctUHRnUU1IanUwU2JFNV9DVUR5SURBM3VuN2lJMVNkREhHZDJ3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QLbjCxIp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2582%2592%2520Vercel%2520%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toppy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ctUHRnUU1IanUwU2JFNV9DVUR5SURBM3VuN2lJMVNkREhHZDJ3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/articles/ffbdb3614867ca",
          "author": "S.A",
          "description": "前回記事までのまとめ、および、本記事の目的\n多品種少量生産下における需要予測手法の確立に向けて、前回記事までは、まず、SARIMA、LSTM、NeuralProphetの3つの時系列解析手法の実装の評価を実施し、Store Item Demand Forecasting Challengeのデータセットにおいて、product 1における2017年の需要予測を実施し、NeuralProphetが良いという結果を得ました。\n\n　次に上記の結果を利用し、予測時間をかけず精度の良い予測をするための手法の考察をしました。その結果、変動要因に類似性がある場合、変動要因の除去を除いた定常性のある...",
          "link": "https://zenn.dev/shungo_a/articles/ffbdb3614867ca",
          "publishedOn": "2023-03-20T10:26:42.000Z",
          "wordCount": 5365,
          "title": "Pythonによる時系列クラスタリング(Euclid/DTW,k-shape,PCA/t-SNE)の実装と評価",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GxDF5VF1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2528Euclid%252FDTW%252Ck-shape%252CPCA%252Ft-SNE%2529%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GxDF5VF1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2528Euclid%252FDTW%252Ck-shape%252CPCA%252Ft-SNE%2529%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/afa3ee18a858f9",
          "author": "yutabeeee",
          "description": "フローチャート\n\n\n UML\nhttps://zenn.dev/yutabeee/articles/45b13c7ed9f714\n\n 実装\n\nLinkedList.py\nclass LinkedList:\n    \"\"\"データとポインタを含む線形リストのクラス\"\"\"\n\n    def __init__(self, max_size=5):\n        \"\"\"初期化メソッド\n\n        Args:\n            max_size (int, optional): リストの最大サイズ. Defaults to 5.\n        \"\"\"\n        self.m...",
          "link": "https://zenn.dev/yutabeee/articles/afa3ee18a858f9",
          "publishedOn": "2023-03-20T06:39:20.000Z",
          "wordCount": 950,
          "title": "データ構造：連結リストのクラスをPythonで実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Swe-nqRR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25EF%25BC%259A%25E9%2580%25A3%25E7%25B5%2590%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Swe-nqRR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25EF%25BC%259A%25E9%2580%25A3%25E7%25B5%2590%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/45b13c7ed9f714",
          "author": "yutabeeee",
          "description": "UML図とアクセス修飾子について\nUML図は、ソフトウェアの設計や構造を視覚化するために使用される一般的な表記法です。クラス図はUMLの一部であり、クラス間の関係やクラス内の属性やメソッドを表現します。メソッドや属性の前にある記号（+、-、#、~）は、そのメソッドや属性の可視性（アクセス修飾子）を示しています。\n\n アクセス修飾子の種類\n\n\nプラス記号（+）：この記号は、メソッドや属性がpublicであることを示します。つまり、そのメソッドや属性は、クラスの外部からアクセス可能です。\n\n\nマイナス記号（-）：この記号は、メソッドや属性がprivateであることを示します。つまり、その...",
          "link": "https://zenn.dev/yutabeee/articles/45b13c7ed9f714",
          "publishedOn": "2023-03-20T06:27:33.000Z",
          "wordCount": 74,
          "title": "UMLにおけるアクセス修飾子の表現方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xGcwzfWI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:UML%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E4%25BF%25AE%25E9%25A3%25BE%25E5%25AD%2590%25E3%2581%25AE%25E8%25A1%25A8%25E7%258F%25BE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xGcwzfWI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:UML%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E4%25BF%25AE%25E9%25A3%25BE%25E5%25AD%2590%25E3%2581%25AE%25E8%25A1%25A8%25E7%258F%25BE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e5e0a27558b9db",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-175 B - Making Triangle\n\n\n\n 提出結果\nimport itertools\n\n\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    l = getIntList()\n\n    c = 0\n    a = list(itertools.combinations(l, 3))\n    for t in a:\n        ...",
          "link": "https://zenn.dev/hyperdb/articles/e5e0a27558b9db",
          "publishedOn": "2023-03-20T04:41:41.000Z",
          "wordCount": 409,
          "title": "［AtCoder］ABC-175｜B - Making Triangle",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C009L7EK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-175%25EF%25BD%259CB%2520-%2520Making%2520Triangle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C009L7EK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-175%25EF%25BD%259CB%2520-%2520Making%2520Triangle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1a96f8ec4a5f87",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-175 A - Rainy Season\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    c = 0\n    for i in [3, 2, 1]:\n        if 'R' * i in s:\n            c = i\n            break\n    print(c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1a96f8ec4a5f87",
          "publishedOn": "2023-03-20T04:41:40.000Z",
          "wordCount": 279,
          "title": "［AtCoder］ABC-175｜A - Rainy Season",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--t_SN-AsT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-175%25EF%25BD%259CA%2520-%2520Rainy%2520Season%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--t_SN-AsT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-175%25EF%25BD%259CA%2520-%2520Rainy%2520Season%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/2d140cbe57e848",
          "author": "yutabeeee",
          "description": "リストの図解\n以下は、線型リストを図解したものです。\n+------+    +------+    +------+    +------+\n| node |    | node |    | node |    | node |\n+------+    +------+    +------+    +------+\n| data |    | data |    | data |    | data |\n+------+    +------+    +------+    +------+\n| next |--> | next |--> | next |-->...",
          "link": "https://zenn.dev/yutabeee/articles/2d140cbe57e848",
          "publishedOn": "2023-03-19T18:29:34.000Z",
          "wordCount": 970,
          "title": "データ構造：リストをPythonで実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pWO60zEo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25EF%25BC%259A%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pWO60zEo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25EF%25BC%259A%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/1848cb6ebfbbc7",
          "author": "yutabeeee",
          "description": "キューとは\nキューとは、データを一時的に格納するためのデータ構造の一つで、データをFIFO（First In, First Out）の順序で追加・取り出しを行います。つまり、先に追加されたデータが先に取り出されます。\nキューは、プログラミングにおいて多くの場面で用いられます。例えば、データの処理が複数のスレッドで行われる場合や、データの送受信が頻繁に行われるネットワークプログラムにおいて、キューはよく使われます。\n\n バッファとリングバッファについて\nバッファ（Buffer）とは、一時的にデータを蓄えるためのメモリ領域を指します。バッファは、入力や出力の速度の違いを調整するために使用...",
          "link": "https://zenn.dev/yutabeee/articles/1848cb6ebfbbc7",
          "publishedOn": "2023-03-19T16:51:31.000Z",
          "wordCount": 814,
          "title": "データ構造：キューをPythonで実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UCba9HRR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25EF%25BC%259A%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UCba9HRR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25EF%25BC%259A%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/876d0139173538",
          "author": "yutabeeee",
          "description": "スタックとは\nスタックとは、データを一時的に保存するためのデータ構造で、最後に追加されたデータが最初に取り出される仕組みを持ちます。主にプログラミングやコンピュータの内部処理に使用され、基本的にはPush（追加）とPop（取り出し）の2つの操作のみが行われます。再帰呼び出しや式の評価など、多くの場面で利用され、正しく理解することでプログラミングの効率が向上します。\n\n 実装\n\nstack.py\nclass Stack:\n    \"\"\"\n    スタックを実現するクラス。\n    \"\"\"\n\n    def __init__(self, max_size: int):\n        \"...",
          "link": "https://zenn.dev/yutabeee/articles/876d0139173538",
          "publishedOn": "2023-03-19T16:08:08.000Z",
          "wordCount": 580,
          "title": "データ構造：スタックをPythonで実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QWC_4fbx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25EF%25BC%259A%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QWC_4fbx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25EF%25BC%259A%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/d10984a08da438",
          "author": "yutabeeee",
          "description": "エラトステネスの篩とは\nエラトステネスの篩は、素数を見つけるためのアルゴリズムの一つです。このアルゴリズムでは、まず探索する範囲内の数字をリストに並べ、最初に2を素数として選びます。次に2の倍数をリストから削除します。その後、リストの先頭の数字を次の素数として選び、その倍数を削除していきます。この処理を繰り返すことで、リストに残った数字が素数となります。\n具体的には、以下のような手順で素数を見つけます。\n\n探索する範囲内の数字をリストに並べる。\nリストの先頭の数字を素数として選び、その倍数をリストから削除する。\nリストの先頭の数字を次の素数として選び、その倍数をリストから削除する。\n...",
          "link": "https://zenn.dev/yutabeee/articles/d10984a08da438",
          "publishedOn": "2023-03-19T15:03:32.000Z",
          "wordCount": 523,
          "title": "エラトステネスの篩をPythonで実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--q3WFpotm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%2588%25E3%2582%25B9%25E3%2583%2586%25E3%2583%258D%25E3%2582%25B9%25E3%2581%25AE%25E7%25AF%25A9%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--q3WFpotm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%2588%25E3%2582%25B9%25E3%2583%2586%25E3%2583%258D%25E3%2582%25B9%25E3%2581%25AE%25E7%25AF%25A9%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sion_pn/articles/5373a8db399cce",
          "author": "SiON",
          "description": "OpenAI Python Libraryとは\nhttps://github.com/openai/openai-python\nPythonでOpenAI APIを叩くためのラッパーです。\npip install openai\nでインストールできます。\n\nmain.py\nimport openai\n\nopenai.api_key = 'API_KEY'\ntry:\n    completion = openai.ChatCompletion.create(\n        model=\"gpt-3.5-turbo\",\n        messages=[\n            {\"r...",
          "link": "https://zenn.dev/sion_pn/articles/5373a8db399cce",
          "publishedOn": "2023-03-19T13:12:44.000Z",
          "wordCount": 695,
          "title": "OpenAI Python LibraryでChatGPTを使用するときも、timeoutを設定した方が良いという話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SiNblysA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520Python%2520Library%25E3%2581%25A7ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2582%2582%25E3%2580%2581timeout%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E6%2596%25B9%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SiON%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SiNblysA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520Python%2520Library%25E3%2581%25A7ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2582%2582%25E3%2580%2581timeout%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E6%2596%25B9%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SiON%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/meihei/articles/7c4ec330a8ab82",
          "author": "meihei",
          "description": "TL;DR\nGitHub Actions 上で Python を実行して、入力値のバリデーションが引っかかった場合sys.exit(1)と、その理由を出力しようとした。\nエラーが発生した場合は標準エラー出力に出力されるため、print関数にfile=sys.stderrを指定してあげる必要がある。\nprint(f'Error: {message}', file=sys.stderr)\n\n 詳細\n以下のようなPythonコードをGitHub Actions上で実行していた。このコードは、入力されたmakefileが存在しない場合、sys.exit(1)を呼び出してエラー終了するようにな...",
          "link": "https://zenn.dev/meihei/articles/7c4ec330a8ab82",
          "publishedOn": "2023-03-19T11:57:28.000Z",
          "wordCount": 434,
          "title": "GitHub Actions上のPythonでexit(1)する時、printの標準出力は表示されない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cVCW5jht--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E4%25B8%258A%25E3%2581%25AEPython%25E3%2581%25A7exit%25281%2529%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2580%2581print%25E3%2581%25AE%25E6%25A8%2599%25E6%25BA%2596%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AF%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meihei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyNTJhOWZlNWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cVCW5jht--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E4%25B8%258A%25E3%2581%25AEPython%25E3%2581%25A7exit%25281%2529%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2580%2581print%25E3%2581%25AE%25E6%25A8%2599%25E6%25BA%2596%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AF%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meihei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyNTJhOWZlNWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/a5b196a9395925",
          "author": "tirimen",
          "description": "本記事の目的\n最近、Todoリストの作り方を学んだので、知識を深化させるために言語化する。プログラミング初心者の筆者でも作れたので、プログラミング初心者のモチベーションを上げるためにも、できるだけ分かりやすく書いていく。今回は後編のフロントエンド編。前編のバックエンドはコチラ。\nhttps://zenn.dev/tirimen/articles/7b5861c40e8a77\n\n Streamlitとは\nPythonでWebアプリケーションを作成するためのフレームワークの一つ。フロントエンドは正直デザイン性が大事なので、筆者は苦手な部類なのだが、Streamlitは短いプログラムでそれ...",
          "link": "https://zenn.dev/tirimen/articles/a5b196a9395925",
          "publishedOn": "2023-03-19T11:08:03.000Z",
          "wordCount": 1294,
          "title": "PostgreSQLとFastAPIとStreamlitを使ってTodoリストを作ろう（後編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tAtgD3z1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%25E3%2581%25A8FastAPI%25E3%2581%25A8Streamlit%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Todo%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2588%25E5%25BE%258C%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tAtgD3z1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%25E3%2581%25A8FastAPI%25E3%2581%25A8Streamlit%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Todo%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2588%25E5%25BE%258C%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/5083365cb79659",
          "author": "yutabeeee",
          "description": "階乗とは\n階乗とは、ある自然数nについて、1からnまでの全ての自然数をかけ合わせた値のことを指します。nの階乗はn!と表記されます。\n例えば、5の階乗は以下のように計算されます。\n5! = 5 × 4 × 3 × 2 × 1 = 120\n\n 再帰関数とは\n再帰関数は、自分自身を呼び出す関数のことです。再帰関数を使用することで、複雑な問題を単純化することができます\n\n 再帰関数なしの場合のn!を求める関数\n\nfactorial.py\ndef factorial(n):\n    result = 1\n    for i in range(n, 0, -1):\n        result...",
          "link": "https://zenn.dev/yutabeee/articles/5083365cb79659",
          "publishedOn": "2023-03-19T11:05:56.000Z",
          "wordCount": 301,
          "title": "n!を求めるアルゴリズムで再帰関数について考える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7Oah5Hdn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:n%2521%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A7%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7Oah5Hdn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:n%2521%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A7%25E5%2586%258D%25E5%25B8%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/e431729b8d69b4",
          "author": "yutabeeee",
          "description": "この関数は、startとendの2つの引数を受け取り、startからendまでの素数を出力します。\nstartの引数は省略可能で、省略された場合は自動的に2が設定されます。\ndef print_primes(end, start=2):\n    \"\"\"\n    startからendまでの素数を出力する関数。\n    \"\"\"\n    # 素数を探す範囲を指定する\n    for number in range(start, end + 1):\n        # numberが素数であるかどうかを判定する\n        is_prime = is_prime_number(number)...",
          "link": "https://zenn.dev/yutabeee/articles/e431729b8d69b4",
          "publishedOn": "2023-03-19T10:37:24.000Z",
          "wordCount": 341,
          "title": "素数を求めるアルゴリズムをPythonで書いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4znaHIsH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B4%25A0%25E6%2595%25B0%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4znaHIsH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B4%25A0%25E6%2595%25B0%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592Python%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/husty/articles/99fe7c252c8d5f",
          "author": "Takumi Yamashita",
          "description": "共有メモリを使った高速な大規模データのプロセス間通信について「なんかシンプルな方法はないかなあ...」と考えているときに見つけたやり方です。\n実装はこちら。\nhttps://github.com/husty530/subprocess\n基本的な考え方はパイプ通信です。これはマルチプロセスの実装で一般的に使われるものです。\nプロセスは親子の関係が必要です。今回はC++/C#が親プロセスとなり，子プロセスのPythonを呼び出し通信します。\nさらに，子プロセスの実装をシンプルにするため親プロセスでは子プロセスの起動時に，子プロセスの標準入出力を親のパイプに繋ぎかえます(リダイレクト)。\nこれ...",
          "link": "https://zenn.dev/husty/articles/99fe7c252c8d5f",
          "publishedOn": "2023-03-19T10:00:36.000Z",
          "wordCount": 115,
          "title": "標準入出力をパイプにリダイレクト (C++, C#, Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JXZSJOfL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A8%2599%25E6%25BA%2596%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25AB%25E3%2583%25AA%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%2520%2528C%252B%252B%252C%2520C%2523%252C%2520Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Yamashita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTc2d2ZGdzdianFISFJDR3BZMDlnOElELUM1dzZfSGN3WkVXbzdZZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JXZSJOfL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A8%2599%25E6%25BA%2596%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25AB%25E3%2583%25AA%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%2520%2528C%252B%252B%252C%2520C%2523%252C%2520Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Yamashita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTc2d2ZGdzdianFISFJDR3BZMDlnOElELUM1dzZfSGN3WkVXbzdZZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/7b5861c40e8a77",
          "author": "tirimen",
          "description": "本記事の目的\n最近、Todoリストの作り方を学んだので、知識を深化させるために言語化する。プログラミング初心者の筆者でも作れたので、プログラミング初心者のモチベーションを上げるためにも、できるだけ分かりやすく書いていく。\n\n PostgreSQLとは\nリレーショナルデータベース管理システムの一つ。正直、MySQLやOracle Databaseでも良いが、初心者の自分にとっては、PostgreSQL用のGUI管理ツールのpgAdmin4が使いやすいので、こちらを採用。インストール方法や操作方法については下記の記事を参考にしてほしい。\nhttps://postgresweb.com/i...",
          "link": "https://zenn.dev/tirimen/articles/7b5861c40e8a77",
          "publishedOn": "2023-03-19T09:43:45.000Z",
          "wordCount": 2852,
          "title": "PostgreSQLとFastAPIとStreamlitを使ってTodoリストを作ろう（前編）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OOQsCicJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%25E3%2581%25A8FastAPI%25E3%2581%25A8Streamlit%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Todo%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2588%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OOQsCicJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%25E3%2581%25A8FastAPI%25E3%2581%25A8Streamlit%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Todo%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2588%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/v22uta/articles/6860f779199aad",
          "author": "ナツメグ",
          "description": "iFacialMocap Puppeteerは、人物の動きをリアルタイムでキャプチャし、アバターに反映させることができるソフトウェアです。しかし、このソフトウェアを使用している際に、Windowsファイアウォールによって通信がブロックされてしまい、表情が動かずに固まってしまう問題が発生することがあります。\nこの問題を解決するためには、以下の手順を行います。\n\n 手順\n\nWindowsのスタートメニューを開き、検索欄に「Windows ファイアウォール」と入力します。\n「Windows ファイアウォールによるアプリケーションの許可」を選択します。\n「変更の設定」を選択します。この操作には管...",
          "link": "https://zenn.dev/v22uta/articles/6860f779199aad",
          "publishedOn": "2023-03-19T09:33:04.000Z",
          "wordCount": 101,
          "title": "iFacialMocap Puppeteerの通信がWindowsファイアウォールにブロックされる問題の解決方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--o5xm6VvD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:iFacialMocap%2520Puppeteer%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%258CWindows%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2582%25A2%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258A%25E3%2583%2584%25E3%2583%25A1%25E3%2582%25B0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzYTA0MTI1YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--o5xm6VvD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:iFacialMocap%2520Puppeteer%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%258CWindows%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2582%25A2%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258A%25E3%2583%2584%25E3%2583%25A1%25E3%2582%25B0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzYTA0MTI1YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/3fa8bdedd07e57",
          "author": "yutabeeee",
          "description": "Pythonにおいて、1からnまでの整数を足し合わせる関数を作成することができます。今回は、複数の方法を用いてこの問題を解いていきます。\n\n 方法1：forループを用いた方法\n最も基本的な方法として、forループを用いて1からnまでの整数を順に足し合わせていく方法があります。以下がそのコードです。\n\nsum1.py\ndef sum1(n):\n    result = 0\n    for i in range(1, n+1):\n        result += i\n    return result\n\nこのコードでは、1からnまでの整数を順にresultに加算していくため、nに比例して処...",
          "link": "https://zenn.dev/yutabeee/articles/3fa8bdedd07e57",
          "publishedOn": "2023-03-19T09:32:01.000Z",
          "wordCount": 297,
          "title": "1からnまで加算するアルゴリズムを用いて効率の良いプログラムについて考える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QUQ4VClD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1%25E3%2581%258B%25E3%2582%2589n%25E3%2581%25BE%25E3%2581%25A7%25E5%258A%25A0%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E5%258A%25B9%25E7%258E%2587%25E3%2581%25AE%25E8%2589%25AF%25E3%2581%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QUQ4VClD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1%25E3%2581%258B%25E3%2582%2589n%25E3%2581%25BE%25E3%2581%25A7%25E5%258A%25A0%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E5%258A%25B9%25E7%258E%2587%25E3%2581%25AE%25E8%2589%25AF%25E3%2581%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/reds/articles/2580aa9d2e33ae",
          "author": "ゆーとおじさん",
          "description": "概要\nPILを使って画像のExifデータを削除を実装をする時のためのメモ。（Pythonど素人）\n\n Exif情報が存在する可能性のあるmimeタイプ\n\nimage/jpeg\nimage/tiff\nimage/heif\nimage/heic\nimage/webp\nなどなど\n\n\n サンプルコード\n# 画像のexif情報を削除する\nfrom PIL import Image\n\ndef remove_exif_data(input_path, output_path):\n    with Image.open(input_path) as image:\n        if not ima...",
          "link": "https://zenn.dev/reds/articles/2580aa9d2e33ae",
          "publishedOn": "2023-03-19T08:08:00.000Z",
          "wordCount": 355,
          "title": "【自分用】Pythonで画像のExifデータを削除する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n9Ul1QJ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2580%2591Python%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AEExif%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%258A%25E3%2581%2598%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OWM4YzQwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n9Ul1QJ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2580%2591Python%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AEExif%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%258A%25E3%2581%2598%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OWM4YzQwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yutabeee/articles/b25f7a063ecd87",
          "author": "yutabeeee",
          "description": "Pythonの統合開発環境であるIDLEは、Python標準ライブラリに含まれており、Pythonの開発やデバッグに役立ちます。以下に、IDLEの基本的な使い方をまとめます。\n\n 1. IDLEの起動\nIDLEは、Pythonをインストールすると一緒にインストールされます。Mac OS Xであれば、アプリケーションフォルダ内にある「Python 3.x」フォルダを開き、「IDLE」をクリックして起動します。ターミナルからは、idle3と入力すれば起動できます。\n\n 2. エディタの起動\nIDLEには、Pythonスクリプトを編集するためのエディタが用意されています。エディタを起動するには...",
          "link": "https://zenn.dev/yutabeee/articles/b25f7a063ecd87",
          "publishedOn": "2023-03-19T07:39:49.000Z",
          "wordCount": 134,
          "title": "Pythonの統合開発環境IDLEの利用方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ld2nuqf7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%25B5%25B1%25E5%2590%2588%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583IDLE%25E3%2581%25AE%25E5%2588%25A9%25E7%2594%25A8%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ld2nuqf7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%25B5%25B1%25E5%2590%2588%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583IDLE%25E3%2581%25AE%25E5%2588%25A9%25E7%2594%25A8%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutabeeee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JPdVNLQzYtR080cVFRNnBOb1VBazgtSVh2Tk1mRFhWMERseXZaN0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e3776a0af11078",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-174 A - Air Conditioner\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    print('Yes' if x >= 30 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e3776a0af11078",
          "publishedOn": "2023-03-19T06:35:23.000Z",
          "wordCount": 233,
          "title": "［AtCoder］ABC-174｜A - Air Conditioner",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yf3yUcm6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-174%25EF%25BD%259CA%2520-%2520Air%2520Conditioner%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yf3yUcm6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-174%25EF%25BD%259CA%2520-%2520Air%2520Conditioner%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/62d06ceeb45e25",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-173 B - Judge Status Summary\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    s = getStringRow(n)\n\n    a = {'AC': 0, 'WA': 0, 'TLE': 0, 'RE': 0}\n\n    for r in s:\n        a[r] += 1\n\n    for...",
          "link": "https://zenn.dev/hyperdb/articles/62d06ceeb45e25",
          "publishedOn": "2023-03-19T06:35:22.000Z",
          "wordCount": 401,
          "title": "［AtCoder］ABC-173｜B - Judge Status Summary",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_uCsihhS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-173%25EF%25BD%259CB%2520-%2520Judge%2520Status%2520Summary%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_uCsihhS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-173%25EF%25BD%259CB%2520-%2520Judge%2520Status%2520Summary%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5cc84727ea7319",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-173 A - Payment\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    m = n % 1000\n\n    print(0 if m == 0 else 1000 - m)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5cc84727ea7319",
          "publishedOn": "2023-03-19T06:35:22.000Z",
          "wordCount": 250,
          "title": "［AtCoder］ABC-173｜A - Payment",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Pqq-42os--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-173%25EF%25BD%259CA%2520-%2520Payment%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Pqq-42os--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-173%25EF%25BD%259CA%2520-%2520Payment%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/487d0d5b6c476c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-174 B - Distance\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, d = getIntMap()\n    l = getIntListRow(n)\n\n    d = d ** 2\n\n    c = 0\n    for x, y in l:\n        ...",
          "link": "https://zenn.dev/hyperdb/articles/487d0d5b6c476c",
          "publishedOn": "2023-03-19T06:35:21.000Z",
          "wordCount": 397,
          "title": "［AtCoder］ABC-174｜B - Distance",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mmpKfP6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-174%25EF%25BD%259CB%2520-%2520Distance%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mmpKfP6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-174%25EF%25BD%259CB%2520-%2520Distance%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tinyowl/articles/941abcf2e04262",
          "author": "Tiny Owl",
          "description": "はじめに\nAnkiという暗記帳アプリをご存知でしょうか。\nAnkiを一言で表すと、「多機能で自由にカスタマイズ可能な暗記帳アプリ」です。\n僕はこのアプリで英単語などを学習しているのですが、英単語ノートをデッキに追加する作業が面倒で、どうにか楽できないかと悩んでいました。\nそこでPythonを使って簡単に英単語ノートを追加できる拡張機能を作ろうと思い、本記事を作成しました。\n\n 参考にしたサイト\n\nAnki公式ドキュメント(日本語版)\nAnkiのソースコード(Github)\n\n\n 環境\n\nMacOS\nPython 3.9\nAnki 2.1.60\n\n\n 拡張機能の基本\n開発する際の型サポ...",
          "link": "https://zenn.dev/tinyowl/articles/941abcf2e04262",
          "publishedOn": "2023-03-19T06:03:53.000Z",
          "wordCount": 1418,
          "title": "PythonでAnkiの拡張機能を作ろう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--K_C3qKSm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Anki%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tiny%2520Owl%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNGt3RmlqY0pUV1Z2cnJQR2c2SEZmZFFEeTFRMnQ4ZUF0WnNhaDA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--K_C3qKSm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Anki%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tiny%2520Owl%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNGt3RmlqY0pUV1Z2cnJQR2c2SEZmZFFEeTFRMnQ4ZUF0WnNhaDA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ekusiadadus/articles/youtube_chatgpt_4_api",
          "author": "ekusiadadus",
          "description": "【ChatGPT+Python】GPT-4 API を爆速レビュー\nhttps://www.youtube.com/watch?v=MZAiNbJxatM\nAPI 部分\nhttps://github.com/ekusiadadus/youtube-gpt-4-api\nGPT-4 に作ってもらった Discord BOT\nhttps://github.com/ekusiadadus/youtube-discord-gpt-4-bot\n\n GPT-4 API が解放された！\n\n2023/03/18 2:29 に OpenAI からメールが来ていて、GPT-4 API が解放されました！\n...",
          "link": "https://zenn.dev/ekusiadadus/articles/youtube_chatgpt_4_api",
          "publishedOn": "2023-03-18T20:25:43.000Z",
          "wordCount": 1317,
          "title": "【ChatGPT+Python】GPT-4 API を爆速レビュー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AM_m8YrH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ChatGPT%252BPython%25E3%2580%2591GPT-4%2520API%2520%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ekusiadadus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQTdHV3Q0eUx2U1dIamZ5eVhhSjNMSWpaUVJ4MlNxTFNvMzExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AM_m8YrH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ChatGPT%252BPython%25E3%2580%2591GPT-4%2520API%2520%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ekusiadadus%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQTdHV3Q0eUx2U1dIamZ5eVhhSjNMSWpaUVJ4MlNxTFNvMzExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sion_pn/articles/07c12d1ef2fa7f",
          "author": "SiON",
          "description": "python-twitter-v2とは\nhttps://github.com/sns-sdks/python-twitter\npythonでTwitter API V2を叩くためのラッパーです。\n\nzsh\npip install python-twitter-v2\n\nでインストールできます。\n\nmain.py\nfrom pytwitter import Api\napi = Api(\n    consumer_key = 'consumer_key',\n    consumer_secret = 'consumer_secret',\n    access_token = 'access...",
          "link": "https://zenn.dev/sion_pn/articles/07c12d1ef2fa7f",
          "publishedOn": "2023-03-18T15:02:30.000Z",
          "wordCount": 1010,
          "title": "python-twitter-v2を使用するときは、timeoutを設定した方が良いという話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ROCaVVHF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python-twitter-v2%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AF%25E3%2580%2581timeout%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E6%2596%25B9%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SiON%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ROCaVVHF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python-twitter-v2%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AF%25E3%2580%2581timeout%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E6%2596%25B9%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SiON%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takapc/articles/d69a9bd7a19bb1",
          "author": "takapc",
          "description": "こんにちは。Takaと申します。普段は大阪の自称進学校でプログラミングを学んでいます。\n昔、似たようなシステムを作ったのですが利便性が無さすぎて採用されなかったのでリベンジです。\nPythonを使って本格的にプロジェクトをするのは初めてなので大目に見てください。\n\n PaSoRiって何やねん\nPaSoRiとはソニー株式会社が提供する非接触ICカードリーダーです。FeliCa規格のカードなら何でも読み込めます。僕が700クレジットを溶かしたAimeのカードももちろん読み込めます。ちなみに日本橋で300円で売ってたそうです。動いたからヨシ！\n\n 環境\n\nPython 3.10.8\nFlask...",
          "link": "https://zenn.dev/takapc/articles/d69a9bd7a19bb1",
          "publishedOn": "2023-03-18T14:43:00.000Z",
          "wordCount": 1471,
          "title": "PaSoRIとFlaskを使ってICカードで部活の入退室管理をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ll7a-lVy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PaSoRI%25E3%2581%25A8Flask%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6IC%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E9%2583%25A8%25E6%25B4%25BB%25E3%2581%25AE%25E5%2585%25A5%25E9%2580%2580%25E5%25AE%25A4%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takapc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1YWJlYjk1YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ll7a-lVy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PaSoRI%25E3%2581%25A8Flask%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6IC%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E9%2583%25A8%25E6%25B4%25BB%25E3%2581%25AE%25E5%2585%25A5%25E9%2580%2580%25E5%25AE%25A4%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takapc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1YWJlYjk1YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ca941b64e0f231",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-172 B - Minor Change\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n    t = list(getString())\n\n    c = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            c += 1\n    print(c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ca941b64e0f231",
          "publishedOn": "2023-03-18T06:21:57.000Z",
          "wordCount": 295,
          "title": "［AtCoder］ABC-172｜B - Minor Change",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_cg0YtFF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-172%25EF%25BD%259CB%2520-%2520Minor%2520Change%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_cg0YtFF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-172%25EF%25BD%259CB%2520-%2520Minor%2520Change%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a309b8050ccd11",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-172 A - Calc\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    a = getInt()\n\n    print(a + a ** 2 + a ** 3)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/a309b8050ccd11",
          "publishedOn": "2023-03-18T06:21:57.000Z",
          "wordCount": 232,
          "title": "［AtCoder］ABC-172｜A - Calc",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ca9nClda--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-172%25EF%25BD%259CA%2520-%2520Calc%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ca9nClda--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-172%25EF%25BD%259CA%2520-%2520Calc%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/605116edbb6374",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-171 A - αlphabet\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('a' if ord(s) >= ord('a') else 'A')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/605116edbb6374",
          "publishedOn": "2023-03-18T06:21:56.000Z",
          "wordCount": 234,
          "title": "［AtCoder］ABC-171｜A - αlphabet",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vsKGrTxN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-171%25EF%25BD%259CA%2520-%2520%25CE%25B1lphabet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vsKGrTxN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-171%25EF%25BD%259CA%2520-%2520%25CE%25B1lphabet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/56887623ee0823",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-171 B - Mix Juice\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m = getIntMap()\n    p = getIntList()\n\n    p.sort()\n\n    s = 0\n    for i in range(m):\n        s += p[i]\n    print(s)\n\n\n...",
          "link": "https://zenn.dev/hyperdb/articles/56887623ee0823",
          "publishedOn": "2023-03-18T06:21:56.000Z",
          "wordCount": 336,
          "title": "［AtCoder］ABC-171｜B - Mix Juice",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C411FMqj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-171%25EF%25BD%259CB%2520-%2520Mix%2520Juice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C411FMqj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-171%25EF%25BD%259CB%2520-%2520Mix%2520Juice%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatausuru/articles/35e123034b98ba",
          "author": "tatatsuru",
          "description": "大前提\nDocker desktopがinstallされていること！！\nそして起動してあること！\nversionを最新に！！(この記事は2023/3/18現在)\n\n ①ファイル/フォルダの作成\n・docker-compose.yml\n・Dockerfile\n・ /app/app.py\n・ /app/requirements.txt\nこの4つのファイル/フォルダを作成します。\n\n ②Dockerfile\nDockerfileに下記コードを記載します。\n# pythonのバージョンは任意\nFROM python:3.8\n\nWORKDIR /usr/src/app\nENV FLASK_AP...",
          "link": "https://zenn.dev/tatausuru/articles/35e123034b98ba",
          "publishedOn": "2023-03-18T05:20:24.000Z",
          "wordCount": 461,
          "title": "Docker + Flask 環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AViUSfa0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%252B%2520Flask%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatatsuru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxZGYyZjFiNzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AViUSfa0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%252B%2520Flask%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatatsuru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxZGYyZjFiNzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/11daec98dadd54",
          "author": "nakamura196",
          "description": "TEI/XMLファイルからrespStmtのnameの値を抽出する方法: PythonでBeautifulSoupとElementTreeを使ったアプローチ\nこの記事では、PythonのBeautifulSoupとElementTreeを使って、TEI/XMLファイルからrespStmtのnameの値を抽出する方法を紹介します。\n\n 方法1: ElementTreeを使う\nまず、Pythonの標準ライブラリであるxml.etree.ElementTreeを使って、respStmtのnameの値を抽出します。\nimport xml.etree.ElementTree as ET\n\n# ...",
          "link": "https://zenn.dev/nakamura196/articles/11daec98dadd54",
          "publishedOn": "2023-03-17T13:09:55.000Z",
          "wordCount": 408,
          "title": "TEI/XMLファイルからrespStmtのnameの値を抽出する方法（GPT-4による解説）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i3xb_N_K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TEI%252FXML%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589respStmt%25E3%2581%25AEname%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588GPT-4%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i3xb_N_K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TEI%252FXML%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589respStmt%25E3%2581%25AEname%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588GPT-4%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/62d6fa54badf5a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-170 A - Five Variables\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    x = getIntList()\n\n    print(x.index(0) + 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/62d6fa54badf5a",
          "publishedOn": "2023-03-17T06:59:14.000Z",
          "wordCount": 243,
          "title": "［AtCoder］ABC-170｜A - Five Variables",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TGKytpry--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-170%25EF%25BD%259CA%2520-%2520Five%2520Variables%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TGKytpry--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-170%25EF%25BD%259CA%2520-%2520Five%2520Variables%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/241ca99de4372b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-170 B - Crane and Turtle\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x, y = getIntMap()\n\n    # x = a + b\n    # y = 2a + 4b\n    a = (4 * x - y) // 2\n    b = x - a\n\n    if y % 2 == 1:\n        print('No')\n    elif a >= 0 and b >= 0:\n        pr...",
          "link": "https://zenn.dev/hyperdb/articles/241ca99de4372b",
          "publishedOn": "2023-03-17T06:59:14.000Z",
          "wordCount": 388,
          "title": "［AtCoder］ABC-170｜B - Crane and Turtle",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i2VOI5D2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-170%25EF%25BD%259CB%2520-%2520Crane%2520and%2520Turtle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i2VOI5D2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-170%25EF%25BD%259CB%2520-%2520Crane%2520and%2520Turtle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zuma_lab/articles/troubleshooting-pipenv-install-envalid-egg_info",
          "author": "ZUMA",
          "description": "amplify add function コマンドで作成した Lambda (Python) で amplify push コマンド実行時 invalid command 'egg_info' エラーが発生したので、そのトラブルシューティングです。\nPython 初心者な為、2 時間以上試行錯誤したので覚書として残しておきます。\n\n 環境\n\nmacOS Ventura 13.1（22C65）\nAmplify 10.8.1\npipenv version 2022.12.19\nvirtualenv 20.17.1\n\n\n 再現方法\n\npipenv で asyncio インストール\namplif...",
          "link": "https://zenn.dev/zuma_lab/articles/troubleshooting-pipenv-install-envalid-egg_info",
          "publishedOn": "2023-03-17T03:30:56.000Z",
          "wordCount": 502,
          "title": "Amplifyで作成したLambda(Python)で発生するinvalid command 'egg_info'エラー解決法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CpPM-GKR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amplify%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259FLambda%2528Python%2529%25E3%2581%25A7%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258Binvalid%2520command%2520%2527egg_info%2527...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ZUMA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o4UGNQSXBZNFlfQ2ZyNnNKTG9EcExtcHBpQUctWm5vNmNIaU9kPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CpPM-GKR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amplify%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259FLambda%2528Python%2529%25E3%2581%25A7%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258Binvalid%2520command%2520%2527egg_info%2527...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ZUMA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o4UGNQSXBZNFlfQ2ZyNnNKTG9EcExtcHBpQUctWm5vNmNIaU9kPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zuma_lab/articles/troubleshooting-pipenv-install-asyncio-error",
          "author": "ZUMA",
          "description": "amplify add function コマンドで作成した Lambda (Python) で amplify push コマンド実行時 UserCodeSyntaxError が発生したので、そのトラブルシューティングです。\n\n 環境\n\nmacOS Ventura 13.1（22C65）\nAmplify 10.8.1\npipenv version 2022.12.19\nvirtualenv 20.17.1\n\n\n 再現方法\n\npipenv で asyncio インストール\namplify push コマンド実行\n内部的に pipenv install 実行\npipenv install...",
          "link": "https://zenn.dev/zuma_lab/articles/troubleshooting-pipenv-install-asyncio-error",
          "publishedOn": "2023-03-17T03:30:56.000Z",
          "wordCount": 620,
          "title": "Amplifyで作成したLambda(Python)でasyncioインストール後に発生するUserCodeSyntaxError解決法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DvdnFERN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amplify%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259FLambda%2528Python%2529%25E3%2581%25A7asyncio%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E5%25BE%258C%25E3%2581%25AB%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258BUserCodeSyn...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ZUMA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o4UGNQSXBZNFlfQ2ZyNnNKTG9EcExtcHBpQUctWm5vNmNIaU9kPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DvdnFERN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amplify%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259FLambda%2528Python%2529%25E3%2581%25A7asyncio%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E5%25BE%258C%25E3%2581%25AB%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258BUserCodeSyn...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ZUMA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o4UGNQSXBZNFlfQ2ZyNnNKTG9EcExtcHBpQUctWm5vNmNIaU9kPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/msn/articles/1992216802cec5",
          "author": "msn",
          "description": "SingularityでPoetryが使いたい\nこれまでSingualrity上のPythonパッケージ管理はpipで行っていました．\n最近，以下の記事をきっかけにPoetryの存在を知り，調べていくうちに虜になりました．\nPython環境構築[Pyenv+Poetry]｜研究のためのPython開発環境\n今後，開発したプログラムの公開も見据え，環境の再現性を担保するためにもPoetryを導入したいと思います．\nまた副次的な産物として，Singularityでpipを使う場合，新しいパッケージの追加はdefファイルを再記述してbuildし直す必要がありましたが，Poetryではイメー...",
          "link": "https://zenn.dev/msn/articles/1992216802cec5",
          "publishedOn": "2023-03-17T02:40:28.000Z",
          "wordCount": 1055,
          "title": "SingularityでPyenv&Poetry環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f8rvAw1h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Singularity%25E3%2581%25A7Pyenv%2526Poetry%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:msn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZGZkZTRkZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f8rvAw1h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Singularity%25E3%2581%25A7Pyenv%2526Poetry%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:msn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZGZkZTRkZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazuemon/articles/7dd7c0e5078b25",
          "author": "かずえもん",
          "description": "困りごと\nWSL2 上で python3 とか pip とかを打っても何も出てこない...\n\n 対処法\nunset DISPLAY を実行する\nhttps://stackoverflow.com/questions/69795744/pip3-list-not-showing-any-output-on-terminal-when-using-wsl",
          "link": "https://zenn.dev/kazuemon/articles/7dd7c0e5078b25",
          "publishedOn": "2023-03-16T14:04:45.000Z",
          "wordCount": 123,
          "title": "WSL2 で Python の出力が何も出てこない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--V0aB9vHn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2581%258C%25E4%25BD%2595%25E3%2582%2582%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZDE0YjE2NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--V0aB9vHn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2581%258C%25E4%25BD%2595%25E3%2582%2582%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZDE0YjE2NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/msh0x01/articles/0bb52d73f2f089",
          "author": "m(s)h",
          "description": "訳ありで手動でカバレッジをとりたい人向けです。\n\n Coverage.pyのインストール\nPythonでカバレッジを取得するなら、Coverage.pyを使いましょう。pip install coverageでインストールすると使えるようになります。\n>pip install coverage\n\n テストするプログラム\nテストするプログラムにtest.pyという、以下のPythonファイルがあるとします。\nimport sys\n \nif len(sys.argv) > 1 and sys.argv[1] == \"1\":\n    print(\"a\")\nelse:\n    pri...",
          "link": "https://zenn.dev/msh0x01/articles/0bb52d73f2f089",
          "publishedOn": "2023-03-16T13:33:19.000Z",
          "wordCount": 488,
          "title": "【Coverage.py】Pythonでカバレッジを取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--99tuHVjx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Coverage.py%25E3%2580%2591Python%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%2590%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m%2528s%2529h%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmZTlkNGY5OGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--99tuHVjx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Coverage.py%25E3%2580%2591Python%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%2590%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m%2528s%2529h%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmZTlkNGY5OGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joanofarc/articles/serendipity-development-report",
          "author": "JoanOfArc",
          "description": "本記事について\nこの度、就活生、転職活動中の方に利用して頂くことを目的とした企業検索Webアプリケーションである Serendipity をリリース致しました。URLはこちらになります。\n\n私は本格的な Web アプリケーション開発は初めて取り組んだため、色々と至らないところがたくさんあるかと思いますが、「データから価値を生み出したい」という一心で作りました。もしご関心があれば、この記事を読んでいただいたり、アプリケーションを実際に使っていただけたりするととても嬉しいです。\n本記事では、素人ながらに構築したアプリケーションについて概要をご報告させていただければと思います。どうぞよろし...",
          "link": "https://zenn.dev/joanofarc/articles/serendipity-development-report",
          "publishedOn": "2023-03-16T09:33:23.000Z",
          "wordCount": 246,
          "title": "【開発報告】就活生、転職活動中の方をご支援する企業検索アプリを作成しました！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2S_cBgfz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%2596%258B%25E7%2599%25BA%25E5%25A0%25B1%25E5%2591%258A%25E3%2580%2591%25E5%25B0%25B1%25E6%25B4%25BB%25E7%2594%259F%25E3%2580%2581%25E8%25BB%25A2%25E8%2581%25B7%25E6%25B4%25BB%25E5%258B%2595%25E4%25B8%25AD%25E3%2581%25AE%25E6%2596%25B9%25E3%2582%2592%25E3%2581%2594%25E6%2594%25AF%25E6%258F%25B4%25E3%2581%2599%25E3%2582%258B%25E4%25BC%2581%25E6%25A5%25AD%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2S_cBgfz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%2596%258B%25E7%2599%25BA%25E5%25A0%25B1%25E5%2591%258A%25E3%2580%2591%25E5%25B0%25B1%25E6%25B4%25BB%25E7%2594%259F%25E3%2580%2581%25E8%25BB%25A2%25E8%2581%25B7%25E6%25B4%25BB%25E5%258B%2595%25E4%25B8%25AD%25E3%2581%25AE%25E6%2596%25B9%25E3%2582%2592%25E3%2581%2594%25E6%2594%25AF%25E6%258F%25B4%25E3%2581%2599%25E3%2582%258B%25E4%25BC%2581%25E6%25A5%25AD%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sre_holdings/articles/4ff923a73e7e5a",
          "author": "okaken",
          "description": "SREホールディングス株式会社でデータサイエンティストをしている岡林です。\n当社ではAI査定をはじめとする不動産系のプロダクト、AIの開発を行っています。\n不動産情報を扱うにあたって、切っても切り離せないのがGIS（地理情報システム）です。\n今回は国土交通省の国土数値情報で公開されているデータを使用して、PythonでGISを扱う手順についてご紹介します。\n\n 前提\n\n使用するライブラリとバージョン\n\nPython 3.11.0\ngeopandas 0.12.2\nfiona 1.8.22\nshapely 2.0.1\nfolium 0.14.0\nnumpy 1.24.2\n\n\n\n※fiona...",
          "link": "https://zenn.dev/sre_holdings/articles/4ff923a73e7e5a",
          "publishedOn": "2023-03-16T05:39:48.000Z",
          "wordCount": 1648,
          "title": "地理情報をPythonで扱う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ukZyMq9U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259C%25B0%25E7%2590%2586%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592Python%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SRE%2520Holdings%2520%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:okaken%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlYWJhYWQ3ZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkJpWHFTa3hWUFhnUjBPc2VMbExKS3dZaFN3WUlYX3o1TGxMWm95QT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ukZyMq9U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259C%25B0%25E7%2590%2586%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592Python%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SRE%2520Holdings%2520%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:okaken%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlYWJhYWQ3ZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkJpWHFTa3hWUFhnUjBPc2VMbExKS3dZaFN3WUlYX3o1TGxMWm95QT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b24948580797b5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-169 A - Multiplication 1\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(a * b)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b24948580797b5",
          "publishedOn": "2023-03-16T05:18:18.000Z",
          "wordCount": 231,
          "title": "［AtCoder］ABC-169｜A - Multiplication 1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--h9Rba-1n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-169%25EF%25BD%259CA%2520-%2520Multiplication%25201%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--h9Rba-1n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-169%25EF%25BD%259CA%2520-%2520Multiplication%25201%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/10273a004a8937",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-169 B - Multiplication 2\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    if 0 in a:\n        print(0)\n    else:\n        m = 10**18\n        c = a[0]\n        for i in ...",
          "link": "https://zenn.dev/hyperdb/articles/10273a004a8937",
          "publishedOn": "2023-03-16T05:18:17.000Z",
          "wordCount": 404,
          "title": "［AtCoder］ABC-169｜B - Multiplication 2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--q4G36IRW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-169%25EF%25BD%259CB%2520-%2520Multiplication%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--q4G36IRW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-169%25EF%25BD%259CB%2520-%2520Multiplication%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/banbiossa/articles/24b4ded68c4ea4",
          "author": "banbiossa",
          "description": "google系のSDKを使うときにgrpcioが入ってくるが、buildずみのwhlはM1だと正常に動かない。（googleがM1用のwhlを作ってくれないのが原因だとどこかで見た）\nいろんな人がいろんなエラーで苦しんでいるのが見える（https://github.com/grpc/grpc/issues/31737）\n大体poetryで管理しているのでいい感じのoverrideが今の所なく、poetry install の後に次をやっている。\nexport VER=\"1.51.3\"\npip3 install --no-cache-dir  --force-reinstall -Iv \"...",
          "link": "https://zenn.dev/banbiossa/articles/24b4ded68c4ea4",
          "publishedOn": "2023-03-16T03:36:32.000Z",
          "wordCount": 120,
          "title": "M1でgrpcioがインストールできない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3tlJXoiX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%25E3%2581%25A7grpcio%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:banbiossa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNzQxZjE3NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3tlJXoiX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%25E3%2581%25A7grpcio%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:banbiossa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNzQxZjE3NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aidemy/articles/a43ebe82dfbb8b",
          "author": "Shingo Nakazawa",
          "description": "はじめに\nこんにちは。機械学習を完全に理解した中沢(@shnakazawa_ja)です[1][2]。\n世の中にはテーブルデータを対象とした機械学習モデルのチュートリアルは多くありますが、画像に対するものは少なく、コードまで提供されているものは更に少なくなります。そこで、本シリーズでは基本的なコンピュータビジョンモデリングの手法をPythonで実装していきます。\n\n\n前々回：PyTorchとEfficientNetV2で作る画像分類モデル\n\n前回：PyTorchとDetection Transformer (DETR)で作る物体認識モデル\n\n\n\n今回はSemantic segmenta...",
          "link": "https://zenn.dev/aidemy/articles/a43ebe82dfbb8b",
          "publishedOn": "2023-03-16T02:40:00.000Z",
          "wordCount": 5771,
          "title": "PyTorchとU-Netで作る領域分割モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J1i0vOHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%25E3%2581%25A8U-Net%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E9%25A0%2598%25E5%259F%259F%25E5%2588%2586%25E5%2589%25B2%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shingo%2520Nakazawa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZpRDBMTzl3ZF9sN0M0OWhDbnNCWVJfek13akk2QmVNLVJ4OUw9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J1i0vOHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%25E3%2581%25A8U-Net%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E9%25A0%2598%25E5%259F%259F%25E5%2588%2586%25E5%2589%25B2%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shingo%2520Nakazawa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZpRDBMTzl3ZF9sN0M0OWhDbnNCWVJfek13akk2QmVNLVJ4OUw9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/junkor/articles/eb42a0aeb231e3",
          "author": "7e+8",
          "description": "個人的な備忘録。\nPythonの環境構築方法は無限(?)にあるので、あくまでもいちサンプルとして。\nあと前提としてLinux上での環境構築を想定しています。\n\n 動機・目的\ncondaは何だかんだいって便利である。\nパッケージマネージャーとしてpip並みに貧弱で微妙ではあるが、\nほぼほぼ任意のバージョンのPythonをインストール出来るし、\npipではインストール出来ない依存ライブラリ（なんならJavaやnodejsなどまで）も一緒にインストール出来るので、（ディスク容量の消費と引き換えに）どの環境でもちゃんと動作してくれる移植性・再現性の高い環境構築が可能である。\nライブラリによっては...",
          "link": "https://zenn.dev/junkor/articles/eb42a0aeb231e3",
          "publishedOn": "2023-03-15T16:48:32.000Z",
          "wordCount": 798,
          "title": "システムのPythonと共存させる形でのconda(Mambaforge)の導入方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xQ3J2uM6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AEPython%25E3%2581%25A8%25E5%2585%25B1%25E5%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E5%25BD%25A2%25E3%2581%25A7%25E3%2581%25AEconda%2528Mambaforge%2529%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xQ3J2uM6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AEPython%25E3%2581%25A8%25E5%2585%25B1%25E5%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E5%25BD%25A2%25E3%2581%25A7%25E3%2581%25AEconda%2528Mambaforge%2529%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/t_katsumoto/articles/2407ae38fa01cb",
          "author": "Katsumoto Takashi",
          "description": "はじめに\nTableauでは計算フィールドを一度に一つしか表示できない。\n\nTableau経験者ほどその仕様に慣れ過ぎて、特に違和感を感じない方も多いかもしれない。\nだが、恐らく誰もが最低一度は（人によっては数えきれない程！）\n「なんで一つしか表示できないんだ！並べて見たいのに！」\nと思った事があると思う。\n実際周りの人にも聞いてみたが、やはりみんな同じ感情を抱いているようだった。\n次はコミュニティの ideas を見てみる。\n・・・複数ウィンドウを実現してほしいという趣旨の要望で溢れかえっているではないか！\n私がざっと検索した限りではこれだけある。\nMultiple Windows...",
          "link": "https://zenn.dev/t_katsumoto/articles/2407ae38fa01cb",
          "publishedOn": "2023-03-15T16:45:19.000Z",
          "wordCount": 328,
          "title": "Tableauで計算フィールドの複数ポップアップを実現する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A05NilaK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%25E3%2581%25A7%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AE%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%259D%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Katsumoto%2520Takashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWZsNDQ2RlNJN0t4SlhhSzUwWm1kSTg0N3oxclZ1Vkp4NDVYT1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A05NilaK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%25E3%2581%25A7%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AE%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%259D%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Katsumoto%2520Takashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWZsNDQ2RlNJN0t4SlhhSzUwWm1kSTg0N3oxclZ1Vkp4NDVYT1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/e208637977e963",
          "author": "nakamura196",
          "description": "概要\nPythonでパッケージを作成する際、nbdevを使用しています。\nhttps://nbdev.fast.ai/\nnbdevは以下のように説明されています。\n\nWrite, test, document, and distribute software packages and technical articles — all in one place, your notebook.\n\n（機械翻訳） ソフトウェア パッケージや技術記事の作成、テスト、文書化、配布をすべて 1 か所のノートブックで行います。\n本記事では、nbdevを使用する際の備忘録です。\n\n インストール\n以下...",
          "link": "https://zenn.dev/nakamura196/articles/e208637977e963",
          "publishedOn": "2023-03-15T12:34:58.000Z",
          "wordCount": 242,
          "title": "nbdevを使用する際の備忘録",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--177TFnM4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:nbdev%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--177TFnM4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:nbdev%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekoallergy/articles/stat-basic-central-tendency",
          "author": "NekoAllergy",
          "description": "はじめに\n\n代表値って？\n近年、AI技術の発展に伴って、統計学の重要性が再注目されています。\n今回は、統計学の基本である「代表値（だいひょうち）」について紹介します。代表値は、統計学ではとても重要で基本的な考え方です。\nデータを端的に表すための代表値について、基本を押さえましょう。\n\nDeepLearning の基礎を本にまとめています。手に取って頂けるととても喜びます ↓\nhttps://zenn.dev/nekoallergy/books/904df952389317\n\n皆さんの理解が一歩でも進むと嬉しいです。\n\n\nCreated by NekoAllergy\n\n 代表値って？\n...",
          "link": "https://zenn.dev/nekoallergy/articles/stat-basic-central-tendency",
          "publishedOn": "2023-03-15T10:04:22.000Z",
          "wordCount": 402,
          "title": "【図解】統計学の3つの代表値（平均値/中央値/最頻値）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Y2lPdOZI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%25E3%2581%25AE3%25E3%2581%25A4%25E3%2581%25AE%25E4%25BB%25A3%25E8%25A1%25A8%25E5%2580%25A4%25EF%25BC%2588%25E5%25B9%25B3%25E5%259D%2587%25E5%2580%25A4%252F%25E4%25B8%25AD%25E5%25A4%25AE%25E5%2580%25A4%252F%25E6%259C%2580%25E9%25A0%25BB%25E5%2580%25A4%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NekoAllergy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Y2lPdOZI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%25E3%2581%25AE3%25E3%2581%25A4%25E3%2581%25AE%25E4%25BB%25A3%25E8%25A1%25A8%25E5%2580%25A4%25EF%25BC%2588%25E5%25B9%25B3%25E5%259D%2587%25E5%2580%25A4%252F%25E4%25B8%25AD%25E5%25A4%25AE%25E5%2580%25A4%252F%25E6%259C%2580%25E9%25A0%25BB%25E5%2580%25A4%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NekoAllergy%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangaezaru/articles/caafc545dce041",
          "author": "kangaezaru",
          "description": "1. 本稿の概要\n\n ◆ ゴール\n以下のような機能を満たすPythonスクリプトを作成しました。\nこちらはlambda向けです。\n\nLambdaFunctionsで特定タグ(Owner)の付与状況をリスト化\nローカル環境でI/Oが自由なPythonスクリプトとして実行\nその抽出結果はCSVカンマ区切り形式でローカルに出力\n\n\n ◆ 背景、前提、その他サービスまとめなど\n全体論はこちら を参照\n※単に見たり付与するだけならタグエディタで見るのが一番楽かとは思います。\n\n 2. 開発\n\n ◆ 概説\nlambdaのID、Ownerタグの一覧を出力します。\nとりあえず単体では東京リージ...",
          "link": "https://zenn.dev/kangaezaru/articles/caafc545dce041",
          "publishedOn": "2023-03-15T07:54:53.000Z",
          "wordCount": 627,
          "title": "【検証不十分】【lambda編】AWS Boto3 by Pythonで特定タグ未付与のリソース抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XIUjcTyf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25A4%259C%25E8%25A8%25BC%25E4%25B8%258D%25E5%258D%2581%25E5%2588%2586%25E3%2580%2591%25E3%2580%2590lambda%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XIUjcTyf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25A4%259C%25E8%25A8%25BC%25E4%25B8%258D%25E5%258D%2581%25E5%2588%2586%25E3%2580%2591%25E3%2580%2590lambda%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangaezaru/articles/864f286ac6a386",
          "author": "kangaezaru",
          "description": "1. 本稿の概要\n\n ◆ ゴール\n以下のような機能を満たすPythonスクリプトを作成しました。\nこちらはcloudfront向けです。\n\nCloudFront Distributionsで特定タグ(Owner)の付与状況をリスト化\nローカル環境でI/Oが自由なPythonスクリプトとして実行\nその抽出結果はCSVカンマ区切り形式でローカルに出力\n\n\n ◆ 背景、前提、その他サービスまとめなど\n全体論はこちら を参照\nCloudfrontのBotoというかAPIは少々勝手が違うんですかね・・・もっと簡単にできる方法あれば教えてください\n※単にタグを棚卸したり付与するだけならタグ...",
          "link": "https://zenn.dev/kangaezaru/articles/864f286ac6a386",
          "publishedOn": "2023-03-15T06:04:14.000Z",
          "wordCount": 565,
          "title": "【cloudfront編】AWS Boto3 by Pythonで特定タグ付与状況のリスト抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XuIaAtlN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590cloudfront%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E4%25BB%2598%25E4%25B8%258E%25E7%258A%25B6%25E6%25B3%2581%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XuIaAtlN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590cloudfront%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E4%25BB%2598%25E4%25B8%258E%25E7%258A%25B6%25E6%25B3%2581%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8e9a950b9c027b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-168 B - ... (Triple Dots)\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    k = getInt()\n    s = getString()\n\n    print(s[:k] + ('...' if len(s) > k else ''))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/8e9a950b9c027b",
          "publishedOn": "2023-03-15T05:24:28.000Z",
          "wordCount": 295,
          "title": "［AtCoder］ABC-168｜B - ... (Triple Dots)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GUkUqrBJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-168%25EF%25BD%259CB%2520-%2520...%2520%2528Triple%2520Dots%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GUkUqrBJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-168%25EF%25BD%259CB%2520-%2520...%2520%2528Triple%2520Dots%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1ef55012bdb667",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-168 A - ∴ (Therefore)\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    n %= 10\n\n    print('bon' if n == 3 else 'pon' if n in [0, 1, 6, 8] else 'hon')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1ef55012bdb667",
          "publishedOn": "2023-03-15T05:24:27.000Z",
          "wordCount": 287,
          "title": "［AtCoder］ABC-168｜A - ∴ (Therefore)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nCelJ5Us--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-168%25EF%25BD%259CA%2520-%2520%25E2%2588%25B4%2520%2528Therefore%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nCelJ5Us--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-168%25EF%25BD%259CA%2520-%2520%25E2%2588%25B4%2520%2528Therefore%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fastriver/articles/open3d-change-background",
          "author": "fastriver",
          "description": "Open3DのVisualizer、便利なんですが背景が白いので目に刺さりがち...。背景色を変更して目を保護したいと思います。\n\n 通常\nimport open3d as o3d\n\nbunny = o3d.data.BunnyMesh()\nmesh = o3d.io.read_triangle_mesh(bunny.path)\nmesh.compute_vertex_normals()\n\no3d.visualization.draw_geometries([mesh])\nopen3d.visualization.draw_geometries()でオブジェクトを表示するのは上記のような...",
          "link": "https://zenn.dev/fastriver/articles/open3d-change-background",
          "publishedOn": "2023-03-15T02:20:30.000Z",
          "wordCount": 409,
          "title": "Open3Dで背景色を変える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vPwA5yVY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Open3D%25E3%2581%25A7%25E8%2583%258C%25E6%2599%25AF%25E8%2589%25B2%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastriver%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3OTZiYTczZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vPwA5yVY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Open3D%25E3%2581%25A7%25E8%2583%258C%25E6%2599%25AF%25E8%2589%25B2%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastriver%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3OTZiYTczZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangaezaru/articles/d75970018b8fa8",
          "author": "kangaezaru",
          "description": "1. 本稿の概要\n\n ◆ ゴール\n以下のような機能を満たすPythonスクリプトを作成しました。\n\nEC2インスタンスで特定タグが付いていないリソースをフィルタリング\nローカル環境でI/Oが自由なPythonスクリプトとして実行\nその抽出結果はCSVカンマ区切り形式でローカルに出力\n\nそれを(弊社の中の)各主要サービスにおいて作成し、連結・自動化して一括自動出力まで目指す\n\n ◆ 背景\n百人規模のグループのAWSで不特定多数のユーザによりリソースが作られ、ガバナンスも効いていない世界に迷い込んだ。用途不明のサーバが跋扈しコストと責任の追跡ができていない世紀末である。とりあえずA...",
          "link": "https://zenn.dev/kangaezaru/articles/d75970018b8fa8",
          "publishedOn": "2023-03-15T01:10:37.000Z",
          "wordCount": 182,
          "title": "【まとめ編】AWS Boto3 by Pythonで特定タグ未付与のリソース抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--as7KoR6j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--as7KoR6j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kangaezaru/articles/aba89a266df2f4",
          "author": "kangaezaru",
          "description": "1. 本稿の概要\n\n ◆ ゴール\n以下のような機能を満たすPythonスクリプトを作成しました。\nこちらはEC2インスタンス向けです。\n\nEC2インスタンスで特定タグが付いていないリソースをフィルタリング\nローカル環境でI/Oが自由なPythonスクリプトとして実行\nその抽出結果はCSVカンマ区切り形式でローカルに出力\n\n\n ◆ 背景、前提、その他サービスまとめなど\nこちら を参照\n\n 2. 開発\n\n ◆ 概説\n今回はEC2のNameタグ、Ownerタグが未付与のリソースの一覧を出力します。\nとりあえず単体では東京リージョンのみを対象としています。\n\n ◆ コード\n\ncheck...",
          "link": "https://zenn.dev/kangaezaru/articles/aba89a266df2f4",
          "publishedOn": "2023-03-15T01:01:33.000Z",
          "wordCount": 560,
          "title": "【EC2編】AWS Boto3 by Pythonで特定タグ未付与のリソース抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JOvNQUzt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590EC2%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JOvNQUzt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590EC2%25E7%25B7%25A8%25E3%2580%2591AWS%2520Boto3%2520by%2520Python%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25B0%25E6%259C%25AA%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kangaezaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODZhZWFlMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fastriver/articles/open3d-display-grid",
          "author": "fastriver",
          "description": "Open3DのVisualizerでは標準にグリッドを表示する機能がありません。しかしセンサ出力点群などの場合はグリッドを表示できたほうが点群の位置などがわかりやすくなると思うので、自分でグリッドを作ってみます。\n\n\n例えばVeloViewでは上のようにXY平面上のグリッドが表示される\n\n\n Open3Dで線を引く\nOpen3DのVisualizer上に線を引くのにはgeometry.LineSetを用います。\nhttp://www.open3d.org/docs/release/python_api/open3d.geometry.LineSet.html\nimport open3d ...",
          "link": "https://zenn.dev/fastriver/articles/open3d-display-grid",
          "publishedOn": "2023-03-14T15:07:11.000Z",
          "wordCount": 1368,
          "title": "Open3Dでグリッドを表示する(LineSet)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vDOcdhIP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Open3D%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2528LineSet%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastriver%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3OTZiYTczZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vDOcdhIP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Open3D%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2528LineSet%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastriver%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3OTZiYTczZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/te19oishi/articles/62ddcaadca0849",
          "author": "Oishi",
          "description": "1. 概要\n先日地元で行われたハッカソンでインスタグラムの画像をスクレイピングしてURLのリストとして出力したのでメモとして残しておきます。\n\n 2. 環境\n\nMacBook Air(M1)\nmacOS Ventura version13.1\n\n\n 3. 結論\n\n 3.1. コード\n取得したい画像の枚数が2枚以下ならクリックする必要がないのでより早く短いコードになります。\n\nscraping.py\n\nfrom time import sleep\nfrom selenium import webdriver\n# seleniumが最新版なら必要\n#from selenium.webdr...",
          "link": "https://zenn.dev/te19oishi/articles/62ddcaadca0849",
          "publishedOn": "2023-03-14T14:21:35.000Z",
          "wordCount": 724,
          "title": "PythonのSeleniumでInstagramの投稿画像をスクレイピングした",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TiT4XVIB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AESelenium%25E3%2581%25A7Instagram%25E3%2581%25AE%25E6%258A%2595%25E7%25A8%25BF%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Oishi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyYzk2NzZhZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TiT4XVIB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AESelenium%25E3%2581%25A7Instagram%25E3%2581%25AE%25E6%258A%2595%25E7%25A8%25BF%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Oishi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyYzk2NzZhZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/atsushiambo/articles/0563e7fe72afd3",
          "author": "安保 睦",
          "description": "OpenAIの公式ホームページにAPIの使用方法が書かれていたので、サンプルアプリと共に構築してみました。\n\n 前提条件\n\nPythonがインストール済み。インストールしていない人はこちらから。\n\n\n\n アプリのコードを用意する\n下記のリポジトリをクローンしてアプリファイルをインストールします。または、公式サイトからzipファイルをダウンロードします。\ngit clone https://github.com/openai/openai-quickstart-python.git\n\n APIキーを追加する\nクローンしたリポジトリに移動して、新規の.envファイルを作成します。\n% cd ...",
          "link": "https://zenn.dev/atsushiambo/articles/0563e7fe72afd3",
          "publishedOn": "2023-03-14T14:16:33.000Z",
          "wordCount": 656,
          "title": "OpenAI APIを使用したアプリを構築してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DqJQwW_P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520API%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%2589%25E4%25BF%259D%2520%25E7%259D%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwYTAwMzJlNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DqJQwW_P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520API%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%2589%25E4%25BF%259D%2520%25E7%259D%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwYTAwMzJlNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sexy_fujii/articles/f6ffa615d0e018",
          "author": "セクシー藤井",
          "description": "概要\nMacで Python3 の開発環境を構築する方法を紹介します。\n今回はAppleが提供する Command Line Tools for Xcode をインストールすることで、同梱されているPython3を利用できるようにする方法の紹介です。\n簡単かつ短時間で準備を済ませPython3を体験してみたいという方向けの手順です。本格的に開発したいという方にはお勧めしません。\n\n 環境\n以下の環境で手順を検証しました。\n\n\n\n項目名\n内容\n\n\n\n\n機器\nMacBook Air (M1, 2020)\n\n\nOS\nmacOS Ventura 13.2.1\n\n\nメモリ\n16GB\n\n\nストレ...",
          "link": "https://zenn.dev/sexy_fujii/articles/f6ffa615d0e018",
          "publishedOn": "2023-03-14T12:33:27.000Z",
          "wordCount": 560,
          "title": "MacでPython3の開発環境を構築する（Command Line Tools for Xcodeによるインストール）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mE-63sLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25A7Python3%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Command%2520Line%2520Tools%2520for%2520Xcode%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E8%2597%25A4%25E4%25BA%2595%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXBpM3E5UVlXcUYzU25TNDV3SzBUMnp3Nm9TWUZGcUk1NUQ5NEM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mE-63sLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25A7Python3%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Command%2520Line%2520Tools%2520for%2520Xcode%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E8%2597%25A4%25E4%25BA%2595%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YXBpM3E5UVlXcUYzU25TNDV3SzBUMnp3Nm9TWUZGcUk1NUQ5NEM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/68ffd8416d9b78",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-167 B - Easy Linear Programming\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c, k = getIntMap()\n\n    s = 0\n    if a >= k or a + b >= k:\n        s = a if a <= k else k\n    else:\n        k -= (a + b)\n        s = a - (c if c < k els...",
          "link": "https://zenn.dev/hyperdb/articles/68ffd8416d9b78",
          "publishedOn": "2023-03-14T05:04:22.000Z",
          "wordCount": 363,
          "title": "［AtCoder］ABC-167｜B - Easy Linear Programming",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uGII2dqL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-167%25EF%25BD%259CB%2520-%2520Easy%2520Linear%2520Programming%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uGII2dqL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-167%25EF%25BD%259CB%2520-%2520Easy%2520Linear%2520Programming%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5c310c5f593eea",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-167 A - Registration\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n    t = getString()\n\n    print('Yes' if s == t[:-1] else 'No')\n\n\nif __name__ == \"__main__\":\n    main()\n    ```",
          "link": "https://zenn.dev/hyperdb/articles/5c310c5f593eea",
          "publishedOn": "2023-03-14T05:04:22.000Z",
          "wordCount": 241,
          "title": "［AtCoder］ABC-167｜A - Registration",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PHz9bwJo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-167%25EF%25BD%259CA%2520-%2520Registration%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PHz9bwJo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-167%25EF%25BD%259CA%2520-%2520Registration%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/qwegat/articles/dced9d104ea0ec",
          "author": "qwegat",
          "description": "初手宣伝\nhttps://qwegat-chatgptplaylist-main-gyigsk.streamlit.app/\nここで試せます。\n今回、いろいろなサービス（StreamLit、Spotify API、OpenAI API）を縦断してシステムを構築したのですが、そのすべてに1ドルも払っていないので、おそらく試せるのは数日以内でしょう。裏返せば、試すなら今しかないということです。\nさあ。\nhttps://qwegat-chatgptplaylist-main-gyigsk.streamlit.app/\n\n 基本的な理屈\nもう寝たいので、いつもの記事のように丁寧な構成はしませ...",
          "link": "https://zenn.dev/qwegat/articles/dced9d104ea0ec",
          "publishedOn": "2023-03-13T14:38:53.000Z",
          "wordCount": 1888,
          "title": "PlaylistGPT: ChatGPTにSpotifyの曲でプレイリストを作らせる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CqDO7zCP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PlaylistGPT%253A%2520ChatGPT%25E3%2581%25ABSpotify%25E3%2581%25AE%25E6%259B%25B2%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%2589%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qwegat%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5NzlhNzAzZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CqDO7zCP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PlaylistGPT%253A%2520ChatGPT%25E3%2581%25ABSpotify%25E3%2581%25AE%25E6%259B%25B2%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%2589%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qwegat%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5NzlhNzAzZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuk6ra/articles/9c24eb70211c2a",
          "author": "yuk6ra",
          "description": "はじめに\nAnacondaを弄っていたら、condaで仮想環境を構築できなくなってしまいました。CondaSSLErrorというエラーが発生したようで、OpenSSLを導入することで解決しました。\n\n 前提知識\n\nWndows 10 Home\nPowershell\nAnaconda\nconda 22.9.0\n\n\nterminal\nPS C:\\Users\\username> conda -V\nconda 22.9.0\n\n\n エラー: CondaSSLError\n\nterminal\nPS C:\\Users\\username> conda create -n test pyth...",
          "link": "https://zenn.dev/yuk6ra/articles/9c24eb70211c2a",
          "publishedOn": "2023-03-13T11:43:51.000Z",
          "wordCount": 515,
          "title": "【Anaconda】conda createでCondaSSLErrorが発生した際の解決策",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BVaZ_OgH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Anaconda%25E3%2580%2591conda%2520create%25E3%2581%25A7CondaSSLError%25E3%2581%258C%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuk6ra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwNmViM2E2MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BVaZ_OgH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Anaconda%25E3%2580%2591conda%2520create%25E3%2581%25A7CondaSSLError%25E3%2581%258C%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuk6ra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwNmViM2E2MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/iyamada/articles/8e00792314d74b",
          "author": "いやぁ...",
          "description": "概要\n\n コンテスト\nAtCoder Regular Contest 158\n\n 結果\nIyamada\n1613 位\n300 点 (1)\n110 分 28 秒\nA問題\n300点(1)\n105分28秒\nB問題\n0点(1)\nー\nC問題以降提出なし\n\n\n 本題\n\n 感想\n\n　今回のARCはかなり苦戦した。\nA問題に時間のほぼすべてを使い、B問題はヤケクソ全探査を提出したのみであった。\n　今回のARCはリアル世界の問題の最適解を求めるものではなく、卓上の数字のみの計算という問題を集めたようなものであった。\n\n\n A問題 +3 +5 +7\n\n\n\n問題\n整数 x_1 , x_2 , x_3が与え...",
          "link": "https://zenn.dev/iyamada/articles/8e00792314d74b",
          "publishedOn": "2023-03-13T10:14:23.000Z",
          "wordCount": 1267,
          "title": "ARC.158 by Iyaa",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sKLE-Fu8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:ARC.158%2520by%2520Iyaa%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%2584%25E3%2581%2581...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhYmEyMTEwZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sKLE-Fu8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:ARC.158%2520by%2520Iyaa%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%2584%25E3%2581%2581...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhYmEyMTEwZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tfutada/articles/a90e2c83b50356",
          "author": "TF",
          "description": "はじめに\nChatGPTの問題に、2021年までのデータでしか学習しておらず、最新の情報に答えることができないことがあります。例えば昨日の東京の天気を教えてと、小学生でも分かる質問にすら答えることができません。また、インターネットに公開していない情報、例えば企業の内部情報や個人のプライベートな情報にも無力です。人間もそうですが、人工知能と言えど知らないことは知らないのです。\nその問題の解決策の一つにファインチューンがあります。自社データを持ち込み学習モデルの微調整を行う方法です。つい先日、Azure版のgpt-3.5 turboのファインチューンがサポートされました。ただこの方法はお...",
          "link": "https://zenn.dev/tfutada/articles/a90e2c83b50356",
          "publishedOn": "2023-03-13T07:23:46.000Z",
          "wordCount": 1335,
          "title": "俺のChatGPTがこんなに賢いわけがない。ベクトル検索エンジン",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L6Pl9bDg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BF%25BA%25E3%2581%25AEChatGPT%25E3%2581%258C%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AA%25E3%2581%25AB%25E8%25B3%25A2%25E3%2581%2584%25E3%2582%258F%25E3%2581%2591%25E3%2581%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2582%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--L6Pl9bDg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BF%25BA%25E3%2581%25AEChatGPT%25E3%2581%258C%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AA%25E3%2581%25AB%25E8%25B3%25A2%25E3%2581%2584%25E3%2582%258F%25E3%2581%2591%25E3%2581%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2582%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ozushi/articles/a9ee4ac9c574ab",
          "author": "ズシ",
          "description": "ある日、Twitterを巡回していると\n\nえ...マジで？となりました。自分の専属AIを作りたい！と思い立ち、実際に動かしてみました。\n\n 目標\nこのようにローカルPC上でLLaMAとチャットできるようになります。\n\nただ、自分が使ったモデルは7Bモデルと言って、パラメータがあまり大きくない＝あまり賢くないモデルだったので出力は変な感じになっています笑\n(明らかにネットの会話を推論に引っ張ってきてますね...)\nなので、今回はとりあえず動かしてみたい人向けです！精度などは気にせずお試しください。\nちなみに、自分はM1 MacBookAir(8Gメモリ)で動きました！信じられないぐらい遅い...",
          "link": "https://zenn.dev/ozushi/articles/a9ee4ac9c574ab",
          "publishedOn": "2023-03-13T06:19:13.000Z",
          "wordCount": 277,
          "title": "【超簡単手順】低スペックローカルPCで大規模言語モデル「LLaMA」を動かす！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5XTs-NFY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E6%2589%258B%25E9%25A0%2586%25E3%2580%2591%25E4%25BD%258E%25E3%2582%25B9%25E3%2583%259A%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25A7%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2580%258CLLaMA%25E3%2580%258D%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BA%25E3%2582%25B7%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3YTE3NmZhYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5XTs-NFY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E6%2589%258B%25E9%25A0%2586%25E3%2580%2591%25E4%25BD%258E%25E3%2582%25B9%25E3%2583%259A%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25A7%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2580%258CLLaMA%25E3%2580%258D%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BA%25E3%2582%25B7%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3YTE3NmZhYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b63605b6e0744c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-166 B - Trick or Treat\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, k = getIntMap()\n\n    s = [i + 1 for i in range(n)]\n\n    for i in range(k)...",
          "link": "https://zenn.dev/hyperdb/articles/b63605b6e0744c",
          "publishedOn": "2023-03-13T04:40:00.000Z",
          "wordCount": 431,
          "title": "［AtCoder］ABC-166｜B - Trick or Treat",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1i2mtwQQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-166%25EF%25BD%259CB%2520-%2520Trick%2520or%2520Treat%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1i2mtwQQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-166%25EF%25BD%259CB%2520-%2520Trick%2520or%2520Treat%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/165724e35805a5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-166 A - A?C\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('ABC' if s == 'ARC' else 'ARC')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/165724e35805a5",
          "publishedOn": "2023-03-13T04:39:59.000Z",
          "wordCount": 219,
          "title": "［AtCoder］ABC-166｜A - A?C",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s5XCTH9Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-166%25EF%25BD%259CA%2520-%2520A%253FC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s5XCTH9Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-166%25EF%25BD%259CA%2520-%2520A%253FC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hamakou108/articles/255d7ea55ccd69",
          "author": "hamakou108",
          "description": "PDMを使ってパッケージ管理している Python プロジェクトで GitHub Actions を使ってテストや静的解析、パッケージングを自動化する方法について記述する。\nなお、 PDM のインストールや初期設定については過去に書いた記事があるのでこちらを参照。\n\n 環境\n\nmacOS: Ventura 13.0.1\nPython: 3.11.2\nPDM: 2.4.5\n\n\n PDM の GitHub Action\nPDM から提供されている GitHub Action を使用する。\nhttps://github.com/marketplace/actions/setup-pdm\n以降で...",
          "link": "https://zenn.dev/hamakou108/articles/255d7ea55ccd69",
          "publishedOn": "2023-03-13T00:19:53.000Z",
          "wordCount": 1120,
          "title": "PDM + GitHub Actions でテストとパッケージングを自動化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CnKOQtu5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PDM%2520%252B%2520GitHub%2520Actions%2520%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hamakou108%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd2h2R2VPdGFaVk9pRTZLLUFaMjY5OHhFY1NCa3NhMHBvMlBHdks9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CnKOQtu5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PDM%2520%252B%2520GitHub%2520Actions%2520%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hamakou108%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd2h2R2VPdGFaVk9pRTZLLUFaMjY5OHhFY1NCa3NhMHBvMlBHdks9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimokenpi/articles/0831bbf64028ba",
          "author": "六兵衛",
          "description": "目的\n例えばChatGPTに人間同士の議論の審判をさせるというケースを考えます。\nネット上のバイアスやそもそも意味を理解できているのかという問題がありますが、AIに議論の判定（もしくは進行）をさせるというのは中立性の面からも将来主流になるのではと思います。\nではChatGPTにAとBの議論の勝敗判定をさせたとして、その出力は当然文章になるわけですが、プログラムで扱うにはAIから得られた文章を\n\nA勝ち\nB勝ち\n引き分け\n\nに分類する必要があります。\nChatGPTに出力の形式を指定するという方法もあるのですが、安定性に難あり、トークンを余計に使う、などの問題があります。\nそこでOpe...",
          "link": "https://zenn.dev/shimokenpi/articles/0831bbf64028ba",
          "publishedOn": "2023-03-12T17:42:27.000Z",
          "wordCount": 524,
          "title": "ChatGPT-APIの出力をプログラムに落としこむ（Text-Embeddings）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OCTkElCO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT-API%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AB%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E3%2581%2593%25E3%2582%2580%25EF%25BC%2588Text-Embeddings%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%25AD%25E5%2585%25B5%25E8%25A1%259B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4OGQ4NmRiMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OCTkElCO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT-API%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AB%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E3%2581%2593%25E3%2582%2580%25EF%25BC%2588Text-Embeddings%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%25AD%25E5%2585%25B5%25E8%25A1%259B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4OGQ4NmRiMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nkty/articles/7266e4666f3908",
          "author": "nkty",
          "description": "結論から。自分はこのように書いています。\nfrom moto import mock_dynamodb\nimport pytest\nimport boto3\nimport logging\n\n\nclass TestHoge:\n\n    @pytest.fixture(autouse=True)\n    def dynamo_setup(self):\n        with mock_dynamodb():\n            # テーブル作成\n            dynamodb = boto3.resource(\"dynamodb\", region_name=\"ap-north...",
          "link": "https://zenn.dev/nkty/articles/7266e4666f3908",
          "publishedOn": "2023-03-12T10:25:22.000Z",
          "wordCount": 828,
          "title": "motoでdynamoのモックを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OjqD6Beu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:moto%25E3%2581%25A7dynamo%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nkty%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y28zZF83c05SRTQ5VjBSTXpMNks1Qm95UlVsT09MdnZHTkNKNXZua2VRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OjqD6Beu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:moto%25E3%2581%25A7dynamo%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nkty%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y28zZF83c05SRTQ5VjBSTXpMNks1Qm95UlVsT09MdnZHTkNKNXZua2VRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/isogaba/articles/5170bdac8dbc09",
          "author": "急がば回れ",
          "description": "最近Pythonでcsvを読み込み、データを操作することが多くなりました。\nそのため、これを機にPythonでcsvを操作できるライブラリはどのようなものがあるか調べることにしました。\n本記事ではcsv読み込みに絞って比較したいと思います。\nなお、csvデータは気象庁が公開している過去の気象データを使用させて頂いております。\n気象庁ホームページ\n\n csvデータを操作するライブラリ\npythonでcsvを操作できる以下のライブラリについて比較します。\n\n標準機能・標準ライブラリ(csvモジュール)\nNumPy\npandas\nPolars\n\n\n 標準機能・標準ライブラリでcsvを読み込む\n...",
          "link": "https://zenn.dev/isogaba/articles/5170bdac8dbc09",
          "publishedOn": "2023-03-12T10:25:12.000Z",
          "wordCount": 6190,
          "title": "pythonでcsvを読み込む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wFGxjDCi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7csv%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2580%25A5%25E3%2581%258C%25E3%2581%25B0%25E5%259B%259E%25E3%2582%258C%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3Mzk3YTcxMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wFGxjDCi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7csv%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2580%25A5%25E3%2581%258C%25E3%2581%25B0%25E5%259B%259E%25E3%2582%258C%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3Mzk3YTcxMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumemi_inc/articles/2f9334de7fd165",
          "author": "lightkun",
          "description": "背景\nPuthonのコードをキレイに整形してくれるblackを使ってコードを整えてみました。\nhttps://github.com/psf/black\n下記の記事にあるように、black以外にも使えそうなものはありますが、blackが結構メインで使っているところが多くなってきていそうな雰囲気があります。ただし、名前が黒と同じなのでややこしい。\nhttps://zenn.dev/naiq112/articles/df1b32fc08d383\n\n 環境\n機種 : MacBook Pro 2021(M1 Max)\npython version : 3.9.16\npip version : ...",
          "link": "https://zenn.dev/yumemi_inc/articles/2f9334de7fd165",
          "publishedOn": "2023-03-12T08:34:29.000Z",
          "wordCount": 1160,
          "title": "Pythonのコードをformatterのblackで整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ES45K3X8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592formatter%25E3%2581%25AEblack%25E3%2581%25A7%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%2586%25E3%2582%2581%25E3%2581%25BF%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:lightkun%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MzAxMTgwMzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1YTU1MTFmYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ES45K3X8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592formatter%25E3%2581%25AEblack%25E3%2581%25A7%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%2586%25E3%2582%2581%25E3%2581%25BF%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:lightkun%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MzAxMTgwMzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1YTU1MTFmYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6d7925cee4e867",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-165 B - 1%\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    a = 100\n    c = 0\n    while a < x:\n        a += a // 100\n        c += 1\n    print(c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/6d7925cee4e867",
          "publishedOn": "2023-03-12T05:53:57.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-165｜B - 1%",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PF-_w5XO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-165%25EF%25BD%259CB%2520-%25201%2525%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PF-_w5XO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-165%25EF%25BD%259CB%2520-%25201%2525%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1cae336ff060cf",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-165 A - We Love Golf\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    k = getInt()\n    a, b = getIntMap()\n\n    f = False\n    for i in range(a, b + 1):\n        if i % k == 0:\n            f = True\n            brea...",
          "link": "https://zenn.dev/hyperdb/articles/1cae336ff060cf",
          "publishedOn": "2023-03-12T05:53:56.000Z",
          "wordCount": 364,
          "title": "［AtCoder］ABC-165｜A - We Love Golf",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pwwPcR6m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-165%25EF%25BD%259CA%2520-%2520We%2520Love%2520Golf%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pwwPcR6m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-165%25EF%25BD%259CA%2520-%2520We%2520Love%2520Golf%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/4030be7360134b",
          "author": "Matsuzaki",
          "description": "aiohttpとasyncioを使用したPythonの非同期HTTPリクエストについて\n非同期コードは結果を待つ間に一度処理を中断しその間に他のコードを実行できるコード。\n他のコードの実行をブロックしないのでノンブロッキングコードとも言われる\nasyncioライブラリは非同期処理を行うツールがある\naiohttpライブラリにはHTTPリクエストの機能がある。\nこれらを組み合わせることによって非同期の中でも並行してhttpのリクエストを行うことができる\nイメージは同時に複数のapiをコールできる感じ\n実装としては以下のようなイメージ(結構簡略化して書いてあります）\nasync def ...",
          "link": "https://zenn.dev/zi_matsu/articles/4030be7360134b",
          "publishedOn": "2023-03-12T05:07:57.000Z",
          "wordCount": 207,
          "title": "3/6~3/10で技術的にやったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mcsraB2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:3%252F6%7E3%252F10%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mcsraB2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:3%252F6%7E3%252F10%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuzaki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/haimaru/articles/6cba8dc0edf56d",
          "author": "haimarusan",
          "description": "Python is 何？\nprint(\"Hello World\")",
          "link": "https://zenn.dev/haimaru/articles/6cba8dc0edf56d",
          "publishedOn": "2023-03-12T04:48:56.000Z",
          "wordCount": 81,
          "title": "Pythonのお試し用",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4wXe4dXm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:haimarusan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4wXe4dXm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:haimarusan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rie_amasato/articles/a9e600c0e105db",
          "author": "Amasato Rie(遍怜 悧叡)",
          "description": "Githubのプロフィール、いろんなトロフィーとかSNSとか入れている方いるじゃないですか。たのしそう！\nで、私も真似したいのだけど、Githubの活動は大してしてないし、極度のSNS疲れでTwitterアカウント消滅させたばっかだしで、外部に出すようなものがないわけです。かなしい\n外部に出すと言うか、ちょっとしたポートフォリオ？的にこんなことできますの意を込めて、動的に変化させるという点をチャレンジしてみることにした\n\n 実際の動作\nReadmeのカスタムって中身なにやっているの？って調べたところ、実装方法として\n\n動的に動かせるサーバーを立ててしまう\nGithub Actionを使っ...",
          "link": "https://zenn.dev/rie_amasato/articles/a9e600c0e105db",
          "publishedOn": "2023-03-12T01:09:01.000Z",
          "wordCount": 219,
          "title": "Githubのプロフィールを動的に変化させるカスタマイズを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MwvEKkmR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Github%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E5%25A4%2589%25E5%258C%2596%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Amasato%2520Rie%2528%25E9%2581%258D%25E6%2580%259C%2520%25E6%2582%25A7%25E5%258F%25A1%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYzE4OTZjN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MwvEKkmR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Github%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E5%25A4%2589%25E5%258C%2596%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Amasato%2520Rie%2528%25E9%2581%258D%25E6%2580%259C%2520%25E6%2582%25A7%25E5%258F%25A1%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYzE4OTZjN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryome/articles/9a28660d27363b",
          "author": "ryome",
          "description": "正規表現の基礎をまとめた備忘録\n\n 正規表現とは\n正規表現（Regular Expression）は、文字列のパターンマッチングに使われる表現方法の一つです。\n文字列に含まれる文字や文字列のパターンを指定して、一致する文字列を検索したり、置換したりすることができます。\n\n 正規表現習得のロードマップ\n\n正規表現の基本的な概念や表現方法の習得\n正規表現を使用したプログラムコードのパターンマッチング、データの抽出、ログの解析の習得\n正規表現の後方参照、肯定先読み、否定後読みの習得\n\n\n 1. 正規表現の基本的な概念や表現方法の習得\nメタ文字\n正規表現において、メタ文字（特殊文字）は、パタ...",
          "link": "https://zenn.dev/ryome/articles/9a28660d27363b",
          "publishedOn": "2023-03-11T22:00:00.000Z",
          "wordCount": 1153,
          "title": "正規表現の基礎まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uHjzGwYn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryome%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZNnRKMExiZTFHTnlzbWo0UXJNLXM4VWd4WHNTTC16dmhoak10NXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uHjzGwYn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryome%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZNnRKMExiZTFHTnlzbWo0UXJNLXM4VWd4WHNTTC16dmhoak10NXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/quojama/articles/63fdc637a3020b",
          "author": "こやま",
          "description": "方法は複数あると思いますので方法の一つです。\nファイル構成\n.\n├── cogs/\n│   ├── ping.py\n│   ├── sample1.py\n│   └── sample2.py\n└── main.py\n\n 本体 (main.py)\n自分のサーバーで使うような小規模のBotを想定しています。\nギルドコマンドとグローバルコマンドというのがありますが、\nグローバルコマンドはBotを立ち上げてからスラッシュコマンドが反映されるまでに時間がかかったり、同期しすぎると怒られたり(？) するようです。\n今回はGuild IDを指定してそのギルドだけで使えるギルドコマンドです。\nギルドコマ...",
          "link": "https://zenn.dev/quojama/articles/63fdc637a3020b",
          "publishedOn": "2023-03-11T18:57:13.000Z",
          "wordCount": 1380,
          "title": "discord.pyとextensionでスラッシュコマンドを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8imvrUNd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E3%2581%25A8extension%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2582%2584%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNUhWbTRSVFkyY2g1U2VZNWNXWnJQTFIxTjBRUHFZTXVpUUhHaFE3MDg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8imvrUNd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E3%2581%25A8extension%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2582%2584%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNUhWbTRSVFkyY2g1U2VZNWNXWnJQTFIxTjBRUHFZTXVpUUhHaFE3MDg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/midra_lab/articles/e7d71e0980fcd8",
          "author": "eisuke",
          "description": "はじめに\n筆者は完全初心者のPythonの学習者です。普段はC#を使って開発をしています。\n情報学に関して深い知見を持っているわけでゃないので、間違っているところがあればご指摘いただけると幸いです。\n今回はmain.pyにべた書きしているので見苦しいかもしれませんがご了承くださいませ。\n筆者は個人的なTodoをNotionで管理していてより自分好みに自動化できればより効率の良いタスク管理ができるのではないかと考えてこのプロジェクトを作成しました。\n\n 今回作成したもの\nタイトル詐欺にはなってしまいますが実際にはアーカイブして完全に記事を削除というわけではありません。\n今回はページの持...",
          "link": "https://zenn.dev/midra_lab/articles/e7d71e0980fcd8",
          "publishedOn": "2023-03-11T17:22:10.000Z",
          "wordCount": 1170,
          "title": "NotionAPIとGithubActionsで自動アーカイブ？機能を作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R8AvH2YM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NotionAPI%25E3%2581%25A8GithubActions%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%2596%25EF%25BC%259F%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:eisuke%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhNzYwNmQ3YmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R8AvH2YM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NotionAPI%25E3%2581%25A8GithubActions%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%2596%25EF%25BC%259F%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MidraLab%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:eisuke%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhNzYwNmQ3YmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/tokoi/books/by_gpt35t_python_v0_2",
          "author": "tokoi",
          "description": "ChatGPT(open-aiのgpt-3.5-turbo)で、全文を生成しました。章立てのみ人間が書いており、あとはすべて自動生成した文章です。内容の正確性については未確認です。LLMでどんなものが書けるのか興味ある人はどうぞご覧下さい。",
          "link": "https://zenn.dev/tokoi/books/by_gpt35t_python_v0_2",
          "publishedOn": "2023-03-11T16:14:07.000Z",
          "wordCount": 63,
          "title": "ChatGPTで全文生成したPythonの本 ver0.2",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/yonda/articles/26205e5d325ff2",
          "author": "yonda",
          "description": "Tiffは言わずとしたら画像ファイルのフォーマットですが、そのピクセルの値はChunkyに保持されます。\nRGBAな画像でChunkyだとこんなの感じな配列になる。\n1ピクセル目のR, 1ピクセル目のG, 1ピクセル目のB, 1ピクセル目のA,\n2ピクセル目のR, 2ピクセル目のG, 2ピクセル目のB, 2ピクセル目のA,\n3ピクセル目のR, 3ピクセル目のG, 3ピクセル目のB, 3ピクセル目のA,\n4ピクセル目のR, 4ピクセル目のG, 4ピクセル目のB, 4ピクセル目のA,\n...\n現在出回っているTiffのほとんどはこの方式ですが、実はChunky以外にもSeparateという方...",
          "link": "https://zenn.dev/yonda/articles/26205e5d325ff2",
          "publishedOn": "2023-03-11T14:01:26.000Z",
          "wordCount": 898,
          "title": "PythonでSeparateなTiffを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vucf0Yoa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Separate%25E3%2581%25AATiff%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yonda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZmM1MDUwZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vucf0Yoa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Separate%25E3%2581%25AATiff%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yonda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZmM1MDUwZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mashi_z/articles/blood-data-visualizattion",
          "author": "mashi",
          "description": "これは何？\nラブラッドのサイトから閲覧できるデータのうち、2009.3.15以降の献血データを取得するプログラムです。\nずいぶん前からですが、献血結果を 献血Web会員サービスのラブラッドのサイトにて確認できるようになりました。\nかなり前からのデータも確認できるのですが、一度に閲覧できるデータ数は３回分でして、もう少し長い期間の傾向を見たいなと思い、スクレイピングの練習も兼ねて献血結果の取得と可視化を行いました。\nスクレイピングは、Seleniumで行っております。Selenium IDEは、なかなか便利です。\n私の血液の検査結果をさらすのもあれなので、元データに乱数をかけて数字を加...",
          "link": "https://zenn.dev/mashi_z/articles/blood-data-visualizattion",
          "publishedOn": "2023-03-11T07:45:15.000Z",
          "wordCount": 316,
          "title": "献血記録の可視化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--D3TaM6we--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258C%25AE%25E8%25A1%2580%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkOGFkMmZmYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--D3TaM6we--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258C%25AE%25E8%25A1%2580%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkOGFkMmZmYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laplace_daemon/books/0441b7af996665",
          "author": "Laplace",
          "description": "会社の新人のために作成したPython3の基本文法について教える際に作成した教材です。\n別媒体で公開したところ多数の高評価をいただき13000回以上見ていただけていたので、改めて図や説明文をブラッシュアップしたものを公開します。\n\nこの教材のうりは筋トレを題材にした、理解度チェックテストです。\n処理の流れを追うことが出来たらもうpythonの基本は大丈夫！というコードを作りました。\nまた理解度チェックテストをクリアするために必要な構文等をコード例付きで解説をしており、解説の中にはより効率よくコーディングを行うための情報を散りばめています。\n\nこの教材は読者のpython習熟度合いによっておすすめの進め方が変わります。\n\nあまりpythonの文法に詳しくない方には以下の流れで進めることをお勧めします。\n1. 理解度確認用のコード（以後、理解度チェックコード）の下にある解説を最初に一通り確認\n2. 理解度チェックコードを読み進める\n3. 分からない箇所があったら解説に飛ぶ\n4. 2~3の繰り返し\n5. 解説を見ないでも理解度チェックコードの処理内容が分かる\n\npythonの文法に詳しい方は上の手順の内1は飛ばして問題ありません。",
          "link": "https://zenn.dev/laplace_daemon/books/0441b7af996665",
          "publishedOn": "2023-03-11T07:27:01.000Z",
          "wordCount": 85,
          "title": "筋トレで理解するPython基本の「き」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BBHFrFJN--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZDMzZTMzNmIxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BBHFrFJN--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZDMzZTMzNmIxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f7f2105f1cf351",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-164 A - Sheep and Wolves\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    s, w = getIntMap()\n\n    print('unsafe' if s <= w else 'safe')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f7f2105f1cf351",
          "publishedOn": "2023-03-11T06:52:55.000Z",
          "wordCount": 249,
          "title": "［AtCoder］ABC-164｜A - Sheep and Wolves",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tjGirlwF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-164%25EF%25BD%259CA%2520-%2520Sheep%2520and%2520Wolves%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tjGirlwF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-164%25EF%25BD%259CA%2520-%2520Sheep%2520and%2520Wolves%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a5679d1eec5f84",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-163 A - Circle Pond\n\n\n\n 提出結果\nimport math\n\n\ndef getInt():\n    return int(input())\n\n\ndef main():\n    r = getInt()\n\n    print(2 * math.pi * r)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/a5679d1eec5f84",
          "publishedOn": "2023-03-11T06:52:55.000Z",
          "wordCount": 227,
          "title": "［AtCoder］ABC-163｜A - Circle Pond",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KnPMdlgY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-163%25EF%25BD%259CA%2520-%2520Circle%2520Pond%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KnPMdlgY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-163%25EF%25BD%259CA%2520-%2520Circle%2520Pond%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9559c6ab8a9161",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-163 B - Homework\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m = getIntMap()\n    a = getIntList()\n\n    b = n - sum(a)\n\n    print(b if b >= 0 else -1)\n\n\nif __name__ == \"__main__\"...",
          "link": "https://zenn.dev/hyperdb/articles/9559c6ab8a9161",
          "publishedOn": "2023-03-11T06:52:55.000Z",
          "wordCount": 322,
          "title": "［AtCoder］ABC-163｜B - Homework",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CQUhi-3V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-163%25EF%25BD%259CB%2520-%2520Homework%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CQUhi-3V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-163%25EF%25BD%259CB%2520-%2520Homework%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/82ef443a6e532d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-164 B - Battle\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c, d = getIntMap()\n\n    while a > 0 and c > 0:\n        c -= b\n        if c <= 0:\n            print('Yes')\n            break\n        a -= d\n        if a <= 0:\n           ...",
          "link": "https://zenn.dev/hyperdb/articles/82ef443a6e532d",
          "publishedOn": "2023-03-11T06:52:54.000Z",
          "wordCount": 323,
          "title": "［AtCoder］ABC-164｜B - Battle",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9Bg5sdb7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-164%25EF%25BD%259CB%2520-%2520Battle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9Bg5sdb7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-164%25EF%25BD%259CB%2520-%2520Battle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/na7na/articles/18fee2843844cb",
          "author": "NA7NA",
          "description": "要約\nServerlessInference(サーバレスエンドポイント)、AsyncInference(非同期エンドポイント)を用いて従量課金(利用時のみ課金)な機械学習endpoint設計を実現。\nOpenAIのWhisperを動かした。\n比較的新しいサーバレス推論だが、\n23年3月時点だと下記点がデメリットに該当するので、今後に期待。\n\nGPUが使えない\n推論タイムアウトが60秒\nコールドスタート\n\n\n 読者対象\n\nAWS SageMakerを使った/使いたい人\n機械学習モデルのデプロイ設計に悩んでいる人\n文字起こしAIのWhisperを使ったことがある/使う予定がある人\n\n\n ...",
          "link": "https://zenn.dev/na7na/articles/18fee2843844cb",
          "publishedOn": "2023-03-11T06:33:49.000Z",
          "wordCount": 940,
          "title": "Sagemaker EndpointとWhisperで文字起こし",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hheIMjGe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sagemaker%2520Endpoint%25E3%2581%25A8Whisper%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NA7NA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4OTgyZjJkM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hheIMjGe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sagemaker%2520Endpoint%25E3%2581%25A8Whisper%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NA7NA%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4OTgyZjJkM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sindicum/books/how-to-use-gee",
          "author": "sindicum",
          "description": "衛星画像利用の初心者向けに、Google Earth Engineのアカウント登録からデータ取得、そしてPythonライブラリを用いた解析方法を簡潔にご紹介します。",
          "link": "https://zenn.dev/sindicum/books/how-to-use-gee",
          "publishedOn": "2023-03-11T01:53:14.000Z",
          "wordCount": 77,
          "title": "Google Earth EngineとPythonで始める衛星データ利用入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ync5EOGZ--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81NTUzMmY1NzRjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ync5EOGZ--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81NTUzMmY1NzRjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/killit/articles/ebe85f18a1e0cb",
          "author": "killit",
          "description": "プロロロロローグ\n!\nなんでもAIちゃんを作った時に調べた情報をまとめた記事です\n\nLINE Add Friend\n無料なんで興味本位で追加をお願いします！\n追加してくれると、自分の請求額は増えますが\nなんでもAIちゃんが喜びます☺️\n\n\n そもそも\n\n ChatGPTとは\nOpenAI社が開発したチャットボット\n\n ChatGPT APIとは\nChatGPTで用いているモデルと同じ「gpt-3.5-turbo」を利用しているAPI\n料金は1000トークンあたり0.002ドル\n日本語の場合は1文字が1トークン以上とカウントされ、ひらがなは1トークン、漢字は2,3トークンにカウントさ...",
          "link": "https://zenn.dev/killit/articles/ebe85f18a1e0cb",
          "publishedOn": "2023-03-10T16:32:06.000Z",
          "wordCount": 1467,
          "title": "【Python初心者が】ChatGPT APIとLINEを繋げてみるし、文脈も把握させてみるし、ChatGPTの説明も簡単にしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fMDM5n_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E3%2580%2591ChatGPT%2520API%25E3%2581%25A8LINE%25E3%2582%2592%25E7%25B9%258B%25E3%2581%2592%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2581%2597%25E3%2580%2581%25E6%2596%2587%25E8%2584%2588%25E3%2582%2582%25E6%258A%258A%25E6%258F%25A1%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2581%2597%25E3%2580%2581ChatGPT%25E3%2581%25AE%25E8%25AA%25AC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:killit%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKenh6dUJXUElFbUVJcnZXcG9GVWRmdFpFd0laYlJFNXJ4OFdNdGQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fMDM5n_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E3%2580%2591ChatGPT%2520API%25E3%2581%25A8LINE%25E3%2582%2592%25E7%25B9%258B%25E3%2581%2592%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2581%2597%25E3%2580%2581%25E6%2596%2587%25E8%2584%2588%25E3%2582%2582%25E6%258A%258A%25E6%258F%25A1%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2581%2597%25E3%2580%2581ChatGPT%25E3%2581%25AE%25E8%25AA%25AC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:killit%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKenh6dUJXUElFbUVJcnZXcG9GVWRmdFpFd0laYlJFNXJ4OFdNdGQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nosukey/articles/python_use_field_size_limit",
          "author": "Nosukey",
          "description": "書くこと\n\n\n_csv.Error: field larger than field limit (131072)対策\n\n\n 想定\n\npythonの標準ライブラリを利用\nサイズの大きなCSVファイルを処理したい\n\n\n 方法論\n\nfield_size_limitの変更\n\nimport csv\nOVER_SIZE_LIMIT = 200_000_000\n\ncsv.field_size_limit(OVER_SIZE_LIMIT)\n\n# 以下、書きたい処理",
          "link": "https://zenn.dev/nosukey/articles/python_use_field_size_limit",
          "publishedOn": "2023-03-10T14:51:15.000Z",
          "wordCount": 135,
          "title": "pythonでサイズの大きなCSV処理時に発生する「_csv.Error: field larger than field limit」対策",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fugkkscB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AE%25E5%25A4%25A7%25E3%2581%258D%25E3%2581%25AACSV%25E5%2587%25A6%25E7%2590%2586%25E6%2599%2582%25E3%2581%25AB%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%25E3%2580%258C_csv.Error%253A%2520field%2520larger%2520than%2520f...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nosukey%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5OGI2ZmFjZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fugkkscB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AE%25E5%25A4%25A7%25E3%2581%258D%25E3%2581%25AACSV%25E5%2587%25A6%25E7%2590%2586%25E6%2599%2582%25E3%2581%25AB%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%25E3%2580%258C_csv.Error%253A%2520field%2520larger%2520than%2520f...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nosukey%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5OGI2ZmFjZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/masadream/articles/c53372c796c2e6",
          "author": "masadream",
          "description": "きっかけ\n仕事の都合があり、日経クロストレンドで情報収集をすることにしました。\nhttps://xtrend.nikkei.com/\nWEBサイトの記事はFeedlyにRSSフィードを登録してまとめて読むようにしているので、これもまとめちゃお～と思ったのですが、なんと日経クロストレンドは新着記事のRSSフィードを吐いていないようです[1]。\nないなら作ればいいんじゃない？ということで、PythonもAWSも初心者の筆者がやってみたら意外とさくっとできたので、自分の整理も兼ねて記事にしようと思った次第です。\n\n 作りたいことの要件\n\n新着記事一覧のRSSファイルを生成する\n生成したRS...",
          "link": "https://zenn.dev/masadream/articles/c53372c796c2e6",
          "publishedOn": "2023-03-10T09:39:24.000Z",
          "wordCount": 1706,
          "title": "日経クロストレンドのRSSフィードを自分用に生成してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Iveftbru--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AERSS%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2581%25AB%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masadream%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXIzT01jX3doMnRMYk1xRTVLZzRBNzRpTjROYUEwV3I0VTlfZnlHdVk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Iveftbru--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AERSS%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2581%25AB%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masadream%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXIzT01jX3doMnRMYk1xRTVLZzRBNzRpTjROYUEwV3I0VTlfZnlHdVk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tmori/articles/7fae797fa494a3",
          "author": "tmori",
          "description": "https://atcoder.jp/contests/abc291\n\n A - camel Case\nPythonの場合、str型のメソッドのstr.isupper()で大文字の判定をする。C++の場合。isupper(s)で大文字の判定をする。\nPythons = list(input())\n \nfor i, s_i in enumerate(s):\n    if s_i.isupper():\n        print(i + 1)\n        break\n\nC++#include<bits/stdc++.h>\nusing namespace std;\nint ma...",
          "link": "https://zenn.dev/tmori/articles/7fae797fa494a3",
          "publishedOn": "2023-03-10T09:18:32.000Z",
          "wordCount": 2804,
          "title": "【ABC291】AtCoder Beginner Contest 291 A-D 振り返り【Python】【C++】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---9WqLXvC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC291%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520291%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%25E3%2580%2590C%252B%252B%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---9WqLXvC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC291%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520291%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%25E3%2580%2590C%252B%252B%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aidemy/articles/30f10cf2c48e6a",
          "author": "Shingo Nakazawa",
          "description": "はじめに\nこんにちは。機械学習ビギナーの中沢(@shnakazawa_ja)です[1]。\n世の中にはテーブルデータを対象とした機械学習モデルのチュートリアルは多くありますが、画像に対するものは少なく、コードまで提供されているものは更に少なくなります。そこで、本シリーズでは基本的なコンピュータビジョンモデリングの手法をPythonで実装していきます。\n今回はObject detection （物体認識） を扱います。本稿ではモデルをtorch.hub.load()を用いて取得します[2]。\n\n\n前回: PyTorchとEfficientNetV2で作る画像分類モデル\n\n\n\n実装はKag...",
          "link": "https://zenn.dev/aidemy/articles/30f10cf2c48e6a",
          "publishedOn": "2023-03-10T08:02:19.000Z",
          "wordCount": 6329,
          "title": "PyTorchとDetection Transformer (DETR)で作る物体認識モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--egdL0FfA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%25E3%2581%25A8Detection%2520Transformer%2520%2528DETR%2529%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E7%2589%25A9%25E4%25BD%2593%25E8%25AA%258D%25E8%25AD%2598%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shingo%2520Nakazawa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZpRDBMTzl3ZF9sN0M0OWhDbnNCWVJfek13akk2QmVNLVJ4OUw9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--egdL0FfA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%25E3%2581%25A8Detection%2520Transformer%2520%2528DETR%2529%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E7%2589%25A9%25E4%25BD%2593%25E8%25AA%258D%25E8%25AD%2598%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shingo%2520Nakazawa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZpRDBMTzl3ZF9sN0M0OWhDbnNCWVJfek13akk2QmVNLVJ4OUw9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/coderisu/articles/7a830251b19171",
          "author": "コードリス",
          "description": "Django(ジャンゴ)とは？\nDjangoは、Pythonプログラミング言語で書かれたオープンソースのWebアプリケーションフレームワークです。Djangoは、高速なWebアプリケーションの開発を容易にするために設計されており、さまざまな機能を提供しています。\n以下に、Djangoフレームワークについての詳細な情報を提供します。\n\n 1. Djangoの特徴\nドメイン固有言語(Domain-Specific Language, DSL)を使用して、高度なWebアプリケーションの開発を容易にする。\nプロジェクトテンプレートを提供し、Webアプリケーションの構造を自動的に生成する。\n...",
          "link": "https://zenn.dev/coderisu/articles/7a830251b19171",
          "publishedOn": "2023-03-10T07:00:58.000Z",
          "wordCount": 431,
          "title": "【2023年最新版 Python】DjangoでWebアプリケーションを開発するための基礎知識",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3OefSa6u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B4%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%2520Python%25E3%2580%2591Django%25E3%2581%25A7Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2582%25B9%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZGYyYjc2M2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3OefSa6u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B4%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%2520Python%25E3%2580%2591Django%25E3%2581%25A7Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2582%25B9%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZGYyYjc2M2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/df4be7a3a4aa4f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-162 B - FizzBuzz Sum\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    c = 0\n    for i in range(1, n + 1):\n        if i % 3 == 0 or i % 5 == 0:\n            continue\n        c += i\n    print(c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/df4be7a3a4aa4f",
          "publishedOn": "2023-03-10T03:56:47.000Z",
          "wordCount": 308,
          "title": "［AtCoder］ABC-162｜B - FizzBuzz Sum",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_yrmqXwg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-162%25EF%25BD%259CB%2520-%2520FizzBuzz%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_yrmqXwg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-162%25EF%25BD%259CB%2520-%2520FizzBuzz%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8ef88984625ca6",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-162 A - Lucky 7\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print('Yes' if '7' in list(str(n)) else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/8ef88984625ca6",
          "publishedOn": "2023-03-10T03:56:46.000Z",
          "wordCount": 242,
          "title": "［AtCoder］ABC-162｜A - Lucky 7",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JjFMNxbc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-162%25EF%25BD%259CA%2520-%2520Lucky%25207%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JjFMNxbc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-162%25EF%25BD%259CA%2520-%2520Lucky%25207%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kokopi/articles/c9dc32849f9263",
          "author": "ここぴのパパ",
          "description": "マイグレーションのおさらいとユースケース\nmigrate実行の流れとしては下記の２つの手順を踏みます。\n\n マイグレーションファイルを生成\npython manage.py makemigrate\n\n マイグレーションの実行\npython manage.py migrate\nたったこれだけで、DBをCREATEしてくれて非常に助かるのですが、\nここで、「あっ、項目（カラム）が1つ足りなかった。。。追加しよう。」ということありますよね？\nmodels.pyファイルに追記して再度migrateでは下記のようにエラーになってしまいます。\n  Your models in app(s): '...",
          "link": "https://zenn.dev/kokopi/articles/c9dc32849f9263",
          "publishedOn": "2023-03-10T02:58:57.000Z",
          "wordCount": 229,
          "title": "Django4でmigrationをやり直したい時の手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mHENeou7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django4%25E3%2581%25A7migration%25E3%2582%2592%25E3%2582%2584%25E3%2582%258A%25E7%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25B4%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2591%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzZNV054RGIwMnhtcWh1S3UwR2NMNlRGbXhHQkJJWm1sazlOaDM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mHENeou7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django4%25E3%2581%25A7migration%25E3%2582%2592%25E3%2582%2584%25E3%2582%258A%25E7%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25B4%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2591%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzZNV054RGIwMnhtcWh1S3UwR2NMNlRGbXhHQkJJWm1sazlOaDM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/3438cf410cc0b5",
          "author": "ryohtaka",
          "description": "はじめに\nタイトルのとおり情報をまとめました。\n\n エンコーディングについて\nOpenAI 言語モデルにおけるエンコーディングとは、テキストがトークンに変換される際の (トークナイズされる際の) ルールのようなものです。モデルによって使用するエンコーディングは異なります。\n\n 確認方法\n各モデルが使うエンコーディングは Python パッケージの tiktoken で確認することができます。\n下記の例では ChatGPT API のモデルのひとつである gpt-3.5-turbo のエンコーディングを確認しています。\n>>> import tiktoken\n>...",
          "link": "https://zenn.dev/microsoft/articles/3438cf410cc0b5",
          "publishedOn": "2023-03-09T12:18:46.000Z",
          "wordCount": 2281,
          "title": "OpenAI 言語モデルごとのエンコーディング一覧",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JFnjTIYq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JFnjTIYq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hashiba/articles/summertime-in-airflow",
          "author": "Shinichi Hashiba",
          "description": "概要\nAirflowでサマータイムを考慮する必要があり、Airflowのタイムゾーンの取り扱いについての調査を実施。調査結果は、以下の通り。\n個別のDAGでサマータイムを意識する場合は、Time zone aware DAGsを使い、タイムゾーンの設定にTZ database name（例えばEurope/London、 America/New_York）を指定する。（標準時（例えばGMT、EST）ではだめ）\n\n 調査\n\n 方向性\nAirflowすでにタイムゾーンが考慮されており、2つの方法で対応が可能。\nhttps://airflow.apache.org/docs/apache-...",
          "link": "https://zenn.dev/hashiba/articles/summertime-in-airflow",
          "publishedOn": "2023-03-09T11:01:07.000Z",
          "wordCount": 500,
          "title": "Airflowでサマータイムを考慮した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CZUxd7Br--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Airflow%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shinichi%2520Hashiba%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqUGxmME5PSUREUHNlRXVodU1ZYm5JeTlhcUluaVRuV3plbThYZlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CZUxd7Br--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Airflow%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shinichi%2520Hashiba%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqUGxmME5PSUREUHNlRXVodU1ZYm5JeTlhcUluaVRuV3plbThYZlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/osawa_koki/articles/171898325c4a9c",
          "author": "osawa-koki",
          "description": "解決策\n'3.10' とシングルクォーテーションで囲むと解決しました。\nダブルクォーテーションでもOKです。\n\n 原因\n3.10だと数字として認識され、3.1になってしまうようです。\n'3.10'とシングルクォーテーションで囲むと文字列として認識され、3.10になります。",
          "link": "https://zenn.dev/osawa_koki/articles/171898325c4a9c",
          "publishedOn": "2023-03-09T10:02:05.000Z",
          "wordCount": 84,
          "title": "GitHub ActionsでPython3.10を使うと3.1になっちゃう、、、",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W5XOZwmT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7Python3.10%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A83.1%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2581%2586%25E3%2580%2581%25E3%2580%2581%25E3%2580%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osawa-koki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlYxU0NYQ01femJIby1WczJPMmlZUEFEOUN5Mm80VEhTY2RxNHM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--W5XOZwmT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7Python3.10%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A83.1%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2581%2586%25E3%2580%2581%25E3%2580%2581%25E3%2580%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osawa-koki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlYxU0NYQ01femJIby1WczJPMmlZUEFEOUN5Mm80VEhTY2RxNHM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syoyo/articles/b37df06229c123",
          "author": "syoyo",
          "description": "背景\nclass のインスタンス作ったときには property は作らない.\nユーザーが dynamic に(実行時に)つくったときに実行時型チェックしたい.\nc = MyClass()\nprint(c.name) # NG. name はまだ存在しない\nc.name = \"\" # str. OK\nc.name = 3 # Error!\n\n型付き property がほしい(property の名前と型は事前にわかっているようなのがある)\nNone 状態はつくらず, property が無い状態を作りたい\n\n型アノテーションで Union[str, None] とかめんどい.\nまた...",
          "link": "https://zenn.dev/syoyo/articles/b37df06229c123",
          "publishedOn": "2023-03-09T08:35:23.000Z",
          "wordCount": 539,
          "title": "Python 3.7+ で typed dynamic property みたいなことしたいメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--818zZrIr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.7%252B%2520%25E3%2581%25A7%2520typed%2520dynamic%2520property%2520%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2593%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--818zZrIr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.7%252B%2520%25E3%2581%25A7%2520typed%2520dynamic%2520property%2520%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2593%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/aidemy/articles/f851fb091dbb23",
          "author": "Shingo Nakazawa",
          "description": "はじめに\nこんにちは。機械学習初心者の中沢(@shnakazawa_ja)です[1]。\n世の中にはテーブルデータを対象とした機械学習モデルのチュートリアルは多くありますが、画像に対するものは少なく、コードまで提供されているものは更に少なくなります。そこで、今回から数記事に分けて基本的なコンピュータビジョンモデリングの手法をPythonで実装していきたいと思います。\n本稿では Classification (画像分類) を扱います。また、本稿ではモデルをパッケージから取得します。\n\n実装はKaggle Notebook上で行うことで誰もが再現できるコードを目指します。主な読者として\n\n...",
          "link": "https://zenn.dev/aidemy/articles/f851fb091dbb23",
          "publishedOn": "2023-03-09T08:14:16.000Z",
          "wordCount": 4487,
          "title": "PyTorchとEfficientNetV2で作る画像分類モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yeUBrAYq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%25E3%2581%25A8EfficientNetV2%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E5%2588%2586%25E9%25A1%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shingo%2520Nakazawa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZpRDBMTzl3ZF9sN0M0OWhDbnNCWVJfek13akk2QmVNLVJ4OUw9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yeUBrAYq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%25E3%2581%25A8EfficientNetV2%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E5%2588%2586%25E9%25A1%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shingo%2520Nakazawa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0ZpRDBMTzl3ZF9sN0M0OWhDbnNCWVJfek13akk2QmVNLVJ4OUw9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/roistaff/articles/348a56000ff5e7",
          "author": "Staff Roi",
          "description": "はじめに\n皆さんは、Pythonで自作のパッケージをローカルにインストールして試す時に、editableモードを使いませんか。変更した内容が即座に更新されるeditableモードは、自作のパッケージ開発には欠かせないインストールモードなのですが、editableモードでインストールしたパッケージをアンインストールしたかった時、pip uninstall package_name ではうまくいきませんでした。\n　調べてみると、editableモードでインストールしたパッケージをアンインストールできないという事例が他にもあったので、解決策を調べてみました。\n\n 問題\nこのように\nsudo...",
          "link": "https://zenn.dev/roistaff/articles/348a56000ff5e7",
          "publishedOn": "2023-03-09T05:16:46.000Z",
          "wordCount": 197,
          "title": "pipのeditableモードでインストールしたパッケージをアンインストールする方法 ~ChatGPTに聞く~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Lgty00VW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pip%25E3%2581%25AEeditable%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2520%7EChatGPT%25E3%2581%25AB%25E8%2581%259E%25E3%2581%258F%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Lgty00VW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pip%25E3%2581%25AEeditable%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2520%7EChatGPT%25E3%2581%25AB%25E8%2581%259E%25E3%2581%258F%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Staff%2520Roi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmdUZURqZjNBbUtMWXN1VVdralB4SzJKVV82MUozMEFSTW9uaVItdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c93327dc1bc7cf",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-161 A - ABC Swap\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef swap(a, b):\n    return b, a\n\n\ndef main():\n    x, y, z = getIntMap()\n\n    x, y = swap(x, y)\n    x, z = swap(x, z)\n\n    print('%d %d %d' % (x, y, z))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c93327dc1bc7cf",
          "publishedOn": "2023-03-09T04:35:15.000Z",
          "wordCount": 317,
          "title": "［AtCoder］ABC-161｜A - ABC Swap",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wLxN5exv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-161%25EF%25BD%259CA%2520-%2520ABC%2520Swap%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wLxN5exv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-161%25EF%25BD%259CA%2520-%2520ABC%2520Swap%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/91e1f7794979a9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-161 B - Popular Vote\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m = getIntMap()\n    a = getIntList()\n\n    c = 0\n    l = sum(a) / (4 * m)\n\n    for x in a:\n        if x >= l:\n   ...",
          "link": "https://zenn.dev/hyperdb/articles/91e1f7794979a9",
          "publishedOn": "2023-03-09T04:35:15.000Z",
          "wordCount": 403,
          "title": "［AtCoder］ABC-161｜B - Popular Vote",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s1KC2xQn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-161%25EF%25BD%259CB%2520-%2520Popular%2520Vote%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s1KC2xQn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-161%25EF%25BD%259CB%2520-%2520Popular%2520Vote%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/frodo/articles/72714e2a2f8d4d",
          "author": "Frodo",
          "description": "昨日(2023年3月8日)、Pyright v1.1.297にInline Syntax for TypedDictの実験的サポートが実装されました。Inline Syntax for TypedDictとはどのような機能なのか、何が嬉しいのかを説明しようと思います。\n\n Motivation\n従来より、Pythonの辞書型は、typing.TypedDict を利用して型付けを行うことができます。\nfrom typing import TypedDict\n\nclass Vector(TypedDict):\n  x: float\n  y: float\n  z: float\n\nvec: V...",
          "link": "https://zenn.dev/frodo/articles/72714e2a2f8d4d",
          "publishedOn": "2023-03-09T03:30:54.000Z",
          "wordCount": 1102,
          "title": "[Pre-PEP] Inline Syntax for TypedDict",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M1b2wmK---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:%255BPre-PEP%255D%2520Inline%2520Syntax%2520for%2520TypedDict%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Frodo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5YzM5ODk5NzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M1b2wmK---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:%255BPre-PEP%255D%2520Inline%2520Syntax%2520for%2520TypedDict%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Frodo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5YzM5ODk5NzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yakumo/articles/4c7ad15dc36eaf",
          "author": "Yakumo Saki",
          "description": "TL;DR;\n\nhttps://github.com/yakumo-saki/worktools/\n\n\n 何ができるの\n\nポモドーロタイマー\nPhilips Hueと連動して色を変える\n\n\n どう使ってほしいか\n\nそのまま使えるならそれはそれでいいけど、多分そんなわけはないので必要なところだけソースをコピペして再構成して使ってほしい\n\n\n 裏側\n\nPython3\nrumps\npy2app\n\n\n 動機\n\n本当は、TickTickのアプリのポモドーロタイマーをそのまま使いたかった。それ使えば自動的にログが記録されるし、時間も記録されるし良いこと尽くめ。\nだけれども、なんとなくPhilip...",
          "link": "https://zenn.dev/yakumo/articles/4c7ad15dc36eaf",
          "publishedOn": "2023-03-08T18:01:41.000Z",
          "wordCount": 151,
          "title": "Work Toolsを作った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_shezr16--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Work%2520Tools%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yakumo%2520Saki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlMGQ5ZWExZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_shezr16--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Work%2520Tools%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yakumo%2520Saki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlMGQ5ZWExZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kappa1779/articles/4cc8303fa68b3c",
          "author": "Atsuya Ide",
          "description": "はじめに\nマイクロサービスの勉強中に, Apache Kafkaという技術が存在することを知りました.\nKafka の勉強がてら Docker を活用して構築する手順をまとめたので記事にまとめます.\n\n 🖨 この記事で取り扱うこと\nKafka の基本的な概念や用語については説明しません. あくまで手を動かしながら\n\nDocker を活用してローカル環境に Kafka クラスターを構築する\nKafka の状態を監視/操作する UI ツールを試す\nクライアントアプリケーション(Python)を動作させる\n\nことに焦点を当てます.\nなお, Kafka クラスターは複数マシン(それぞれが別 ...",
          "link": "https://zenn.dev/kappa1779/articles/4cc8303fa68b3c",
          "publishedOn": "2023-03-08T15:20:52.000Z",
          "wordCount": 1482,
          "title": "Dockerを活用してKafkaクラスターを構築し, 各種UIツールを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--u6rzqrUx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Kafka%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%252C%2520%25E5%2590%2584%25E7%25A8%25AEUI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Atsuya%2520Ide%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi03c2lGV3ZrVm84NW1VYjBkZV9EOHVVa1pBLXltYnFhQndEZXk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--u6rzqrUx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Kafka%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%252C%2520%25E5%2590%2584%25E7%25A8%25AEUI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Atsuya%2520Ide%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi03c2lGV3ZrVm84NW1VYjBkZV9EOHVVa1pBLXltYnFhQndEZXk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fikastudio/articles/efcfe246642553",
          "author": "情報工学入門チャンネル",
          "description": "ハッシュ法は、ソート済みリストからの探索だけでなく、データの追加や削除も効率よく行う手法です。\n\nソート済みリスト（List A）に新たにデータ（12）を追加する場面を考えます。この時の操作は以下のようになります。\n\nデータを挿入すべき位置を特定する\n挿入位置よりも後ろにあるデータを全て1つずつ後方にずらす\nデータを挿入する\n\n単に新規にデータを追加するコストは決して小さくありません。データ削除も同様です。\n\n\n ハッシュ法\nハッシュ法は、データ追加や削除を効率よく行う手法になります。具体的には、データの剰余（ハッシュ値と呼ぶ）を元にリストを作成・管理する方法です。\n\nリストに入ってい...",
          "link": "https://zenn.dev/fikastudio/articles/efcfe246642553",
          "publishedOn": "2023-03-08T13:51:22.000Z",
          "wordCount": 1031,
          "title": "Python で学ぶハッシュ探索法 - チェーン法とオープンアドレス法 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sD0fc8qf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E6%258E%25A2%25E7%25B4%25A2%25E6%25B3%2595%2520-%2520%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E6%25B3%2595%25E3%2581%25A8%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25B9%25E6%25B3%2595%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sD0fc8qf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E6%258E%25A2%25E7%25B4%25A2%25E6%25B3%2595%2520-%2520%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E6%25B3%2595%25E3%2581%25A8%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25B9%25E6%25B3%2595%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nnydtmg/articles/aws-cost-daily-mention-cdk",
          "author": "nnydtmg",
          "description": "やりたいこと\nAWSの利用料は予算管理をしていても、予算の指定したパーセンテージに達するか、請求が確定するまでデフォルトでは通知ができません。\n消し忘れのリソースについては1日でも早く気が付きたいです。\nそのためには毎日コスト状況を確認する事が大事です。\nということで、毎日Slackに利用料を通知する仕組みを作ってみようと思います。\nこの手の話は沢山の方が記事にされているので、そこまで新規性はないですが、やったことメモ的な感じで残しておきます。\nまた、せっかくなのでCDKを使ってLambdaまで構築してみようと思います。\nCDKはTypescript、Lambdaはpythonで作成...",
          "link": "https://zenn.dev/nnydtmg/articles/aws-cost-daily-mention-cdk",
          "publishedOn": "2023-03-08T13:23:43.000Z",
          "wordCount": 2139,
          "title": "AWS CDKで毎日の料金をSlackに通知する機能を実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6kpt2HJ6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%25E3%2581%25A7%25E6%25AF%258E%25E6%2597%25A5%25E3%2581%25AE%25E6%2596%2599%25E9%2587%2591%25E3%2582%2592Slack%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nnydtmg%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWY5cGFBTVBuSE9kX3puM3ZuQnJoNWRDYXlLMV80dzhxdko1M0M9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6kpt2HJ6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%25E3%2581%25A7%25E6%25AF%258E%25E6%2597%25A5%25E3%2581%25AE%25E6%2596%2599%25E9%2587%2591%25E3%2582%2592Slack%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nnydtmg%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWY5cGFBTVBuSE9kX3puM3ZuQnJoNWRDYXlLMV80dzhxdko1M0M9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fikastudio/articles/83838a9b93f8c5",
          "author": "情報工学入門チャンネル",
          "description": "計算量（Complexity） とは、アルゴリズムの性能を客観的に評価するための尺度です。計算量は、時間計算量（Time Complexity：実行に要する時間を評価）と領域計算量（Space Complexity：実行に要する記憶域やファイル域を評価）の２つに大別することができます。\nここでは、線形探索と２分探索の時間計算量について考えてみます。\n\n 線形探索\n線形探索は、リストの先頭から順番に探索対象を探していくメソッドになります。Python で記述した線形探索の例を以下に示します。\nL = [1, 9, 2, 5, 4, 7]\ndef linear_search(search_o...",
          "link": "https://zenn.dev/fikastudio/articles/83838a9b93f8c5",
          "publishedOn": "2023-03-08T08:48:25.000Z",
          "wordCount": 740,
          "title": "「計算量（オーダー？）」って何？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--h_BgD14W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E8%25A8%2588%25E7%25AE%2597%25E9%2587%258F%25EF%25BC%2588%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25EF%25BC%259F%25EF%25BC%2589%25E3%2580%258D%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--h_BgD14W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E8%25A8%2588%25E7%25AE%2597%25E9%2587%258F%25EF%25BC%2588%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25EF%25BC%259F%25EF%25BC%2589%25E3%2580%258D%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okome_oisi/articles/23598e48252b45",
          "author": "okometabetai",
          "description": "注意したこと\n\nscheduleは別スレッドで動かす。そうしないとscheduleが、gui要素関連の処理を呼び出す時、schedule.run_pending()のループが止まってしまう。\n通常は、schedule.run_pending()をwhile文で無限ループするが、そうすると、プログラムを終了する時、Scheduler_Threadが終了できない。\nそのためにwhile文ではなくQTimerで、1秒ごとにschedule.run_pending()を呼び出す。\nしかし、別スレッドでQTimerは利用できない。↓\n\n\nYou must start and stop the ...",
          "link": "https://zenn.dev/okome_oisi/articles/23598e48252b45",
          "publishedOn": "2023-03-08T05:14:42.000Z",
          "wordCount": 610,
          "title": "PySide6(Qt for Python) のGUIアプリで、scheduleモジュールで定期実行。(QThread,QTimer)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wU26l2_r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PySide6%2528Qt%2520for%2520Python%2529%2520%25E3%2581%25AEGUI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A7%25E3%2580%2581schedule%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E5%25AE%259A%25E6%259C%259F%25E5%25AE%259F%25E8%25A1%258C%25E3%2580%2582%2528QThre...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okometabetai%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MHpqVmJiem5wckUybkFMbmJiaU8yN0ljWTlsZFZfS3pabXBnUGYtQ0k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wU26l2_r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PySide6%2528Qt%2520for%2520Python%2529%2520%25E3%2581%25AEGUI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A7%25E3%2580%2581schedule%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E5%25AE%259A%25E6%259C%259F%25E5%25AE%259F%25E8%25A1%258C%25E3%2580%2582%2528QThre...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okometabetai%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MHpqVmJiem5wckUybkFMbmJiaU8yN0ljWTlsZFZfS3pabXBnUGYtQ0k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/4b4788224fa5d7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-160 B - Golden Coins\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    v = x // 500 * 1000\n\n    x %= 500\n\n    v += x // 5 * 5\n\n    print(v)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/4b4788224fa5d7",
          "publishedOn": "2023-03-08T05:10:43.000Z",
          "wordCount": 264,
          "title": "［AtCoder］ABC-160｜B - Golden Coins",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---00s37EJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-160%25EF%25BD%259CB%2520-%2520Golden%2520Coins%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---00s37EJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-160%25EF%25BD%259CB%2520-%2520Golden%2520Coins%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/45a76d57c6a237",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-160 A - Coffee\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    print('Yes' if s[2] == s[3] and s[4] == s[5] else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/45a76d57c6a237",
          "publishedOn": "2023-03-08T05:10:43.000Z",
          "wordCount": 259,
          "title": "［AtCoder］ABC-160｜A - Coffee",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2BGZaEb9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-160%25EF%25BD%259CA%2520-%2520Coffee%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2BGZaEb9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-160%25EF%25BD%259CA%2520-%2520Coffee%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/b39ba0452fec81",
          "author": "ryo_kawamata",
          "description": "最近 ChatGPT API にコードを書かせてそれを eval するという仕組みを作りました。\nその際に考えたエラーハンドリングのプラクティスが、ChatGPT API ならではで個人的に面白かったので記事に残しておきます。\n!\n前提として、ChatGPT のコードをそのまま eval するのは危険なので、使用する際は注意してください。\n\n\n 📝 tl;dr\n\nChatGPT はコードを書くことを拒否する場合がある。考慮したリトライの仕組みを作る\nChatGPT の書いたコードで発生したエラーは ChatGPT に解決してもらう\n\n\n 💬 何をやろうとした？\n以前の記事にて Minec...",
          "link": "https://zenn.dev/ryo_kawamata/articles/b39ba0452fec81",
          "publishedOn": "2023-03-08T03:40:19.000Z",
          "wordCount": 2481,
          "title": "ChatGPT API にコードを書かせて eval する際のエラーハンドリング・プラクティス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HcS2PH-F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520API%2520%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258B%25E3%2581%259B%25E3%2581%25A6%2520eval%2520%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25BB%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryo_kawamata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2N2NiMTI0ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HcS2PH-F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520API%2520%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258B%25E3%2581%259B%25E3%2581%25A6%2520eval%2520%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25BB%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryo_kawamata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2N2NiMTI0ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kokopi/articles/a35d53b6ebae1d",
          "author": "ここぴのパパ",
          "description": "djangoでこんなエラーに遭遇\nCannot find reference 'url' in 'init.py'\n\n\n 原因\nDjango4からurl関数が廃止されてしまったためです。\nDjango3までの場合はなんの問題もなく使えていたものです。\n\n 解決策\n下記のようにfromの部分を書き換えてください。\nfrom修正前\nfrom django.conf.urls import url\nfrom修正後\nfrom django.urls import path\n当然ですが、関数を呼び出す部分も修正してあげる必要があります。\n例）\n関数呼び出し修正前\nurlpatterns = [...",
          "link": "https://zenn.dev/kokopi/articles/a35d53b6ebae1d",
          "publishedOn": "2023-03-07T16:06:28.000Z",
          "wordCount": 142,
          "title": "Cannot find reference 'url' in '__init__.py'の解決策",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Rt26Z2GP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cannot%2520find%2520reference%2520%2527url%2527%2520in%2520%2527__init__.py%2527%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25B4%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2591%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzZNV054RGIwMnhtcWh1S3UwR2NMNlRGbXhHQkJJWm1sazlOaDM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Rt26Z2GP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cannot%2520find%2520reference%2520%2527url%2527%2520in%2520%2527__init__.py%2527%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25B4%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2591%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzZNV054RGIwMnhtcWh1S3UwR2NMNlRGbXhHQkJJWm1sazlOaDM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fikastudio/articles/2f6c27a12d10e7",
          "author": "情報工学入門チャンネル",
          "description": "要素が直線上に並んだリスト（配列）からの探索は、リストの先頭から順番に走査して探索対象と同じかどうかを確認することで実現できます。これを線形探索、もしくは逐次探索と言います。\nPython での実装例を以下に示しています。\nL = [1, 9, 2, 5, 4, 7]\ndef linear_search(search_obj):\n    index = 0\n    while True:\n        if index == len(L): # $1\n\t    # 探索失敗\n        if L[index] == search_obj: # $2\n\t    # 探索成功\n\tin...",
          "link": "https://zenn.dev/fikastudio/articles/2f6c27a12d10e7",
          "publishedOn": "2023-03-07T15:21:24.000Z",
          "wordCount": 445,
          "title": "番兵法を用いた線形探索",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0wu2lKea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25AA%25E5%2585%25B5%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%25B7%259A%25E5%25BD%25A2%25E6%258E%25A2%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0wu2lKea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2595%25AA%25E5%2585%25B5%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%25B7%259A%25E5%25BD%25A2%25E6%258E%25A2%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E5%25B7%25A5%25E5%25AD%25A6%25E5%2585%25A5%25E9%2596%2580%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tukiakaritabane/articles/python-mmd-shape-keys",
          "author": "月明たばね",
          "description": "表情シェイプキーのコピー作業を自動化できないか調べたところ、\nPythonでBlenderをマクロ操作できることが分かったので、書いてみました。\n注意点と使用方法は以下の通りです。\n\n 注意点\n以下の表情シェイプキーは、表情の内容が変更されます。\n\n\n\nシェイプキー\n変更後の表情\n\n\n\n\nにやり\n口角上げ\n\n\n上\nデフォルト表情(Basis)\n\n\n下\nデフォルト表情(Basis)\n\n\n\n対応する表情がないシェイプキーについては、デフォルト表情(Basis)のシェイプキーをコピーしています。\n\n\n\nシェイプキー\n\n\n\n\n光下\n\n\n口角広げ\n\n\n上\n\n\n下\n\n\n\n\n 使用方法\nFBXをインポ...",
          "link": "https://zenn.dev/tukiakaritabane/articles/python-mmd-shape-keys",
          "publishedOn": "2023-03-07T13:21:49.000Z",
          "wordCount": 1612,
          "title": "INABAの表情筋を鍛えるためのPythonスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w3kF1Y-0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:INABA%25E3%2581%25AE%25E8%25A1%25A8%25E6%2583%2585%25E7%25AD%258B%25E3%2582%2592%25E9%258D%259B%25E3%2581%2588%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%2588%25E6%2598%258E%25E3%2581%259F%25E3%2581%25B0%25E3%2581%25AD%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WWk4UDRnUzZFczQzY25wbFlrWjdoMkFrWkRQQ2hvZUNzaFZzYUs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--w3kF1Y-0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:INABA%25E3%2581%25AE%25E8%25A1%25A8%25E6%2583%2585%25E7%25AD%258B%25E3%2582%2592%25E9%258D%259B%25E3%2581%2588%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%2588%25E6%2598%258E%25E3%2581%259F%25E3%2581%25B0%25E3%2581%25AD%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WWk4UDRnUzZFczQzY25wbFlrWjdoMkFrWkRQQ2hvZUNzaFZzYUs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ca02667d6797be",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-159 A - The Number of Even Pairs\n\n\n\n 提出結果\nimport math\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, m = getIntMap()\n\n    print(math.comb(n, 2) + math.comb(m, 2))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ca02667d6797be",
          "publishedOn": "2023-03-07T09:24:31.000Z",
          "wordCount": 272,
          "title": "［AtCoder］ABC-159｜A - The Number of Even Pairs",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9FHLl2wk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-159%25EF%25BD%259CA%2520-%2520The%2520Number%2520of%2520Even%2520Pairs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9FHLl2wk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-159%25EF%25BD%259CA%2520-%2520The%2520Number%2520of%2520Even%2520Pairs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ac85b4a2b9b340",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-159 B - String Palindrome\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef palindrome(s):\n    r = s[::-1]\n\n    return True if s == r else False\n\n\ndef main():\n    s = getString()\n\n    l = len(s)\n    t = s[:(l - 1) // 2]\n    u = s[(l + 3) // 2 - 1:]\n\n    print('Yes' if palindrome(s)...",
          "link": "https://zenn.dev/hyperdb/articles/ac85b4a2b9b340",
          "publishedOn": "2023-03-07T09:24:31.000Z",
          "wordCount": 391,
          "title": "［AtCoder］ABC-159｜B - String Palindrome",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6euEVf8X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-159%25EF%25BD%259CB%2520-%2520String%2520Palindrome%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6euEVf8X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-159%25EF%25BD%259CB%2520-%2520String%2520Palindrome%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/k41531/articles/6133b1b045d1aa",
          "author": "kaisei",
          "description": "環境\n\nMac mini(M1)\n\nVenture 13.1\n\n\nPython\n\nホスト：3.11.2\nvenv：3.10.10\n\n\n\n\n 解決策\nバージョンに合ったpython-tkを入れる。\nbrew install python-tk@3.10\n\n 問題\nホストとバージョンの違うPythonをvenvで動かしている際。tkinterが次のエラーを出して困っていた。\nTraceback (most recent call last):\n  File \"/opt/homebrew/Cellar/python@3.10/3.10.10_1/Frameworks/Python.fram...",
          "link": "https://zenn.dev/k41531/articles/6133b1b045d1aa",
          "publishedOn": "2023-03-07T07:12:35.000Z",
          "wordCount": 258,
          "title": "venvでtkinterを使おうとして詰まった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cIWtpehB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:venv%25E3%2581%25A7tkinter%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaisei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZTJhN2E2NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cIWtpehB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:venv%25E3%2581%25A7tkinter%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaisei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZTJhN2E2NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/motokoike/articles/1569e91413aba3",
          "author": "元小池",
          "description": "はじめに\nTradingViewのアラート通知は、「Webhook URL」を指定できるので、AWS（lambda）を利用してPOSTリクエストを受信し、LINEへ通知するbotを作成してみました。\n\n\n 構成イメージ\n\n\n 前提条件\n\nTradingViewの有料アカウント（Pro以上）を取得済みであること。\nAWSのアカウントを取得済みであること。\nLINEのアカウントを取得済みであること。\n\nTradingViewのアカウントを未作成の場合は、こちらからご登録下さい。\n\n LINE Notifyへログイン\nこちらのリンクからLINE Notifyのぺージに遷移し、「ログイン」ボ...",
          "link": "https://zenn.dev/motokoike/articles/1569e91413aba3",
          "publishedOn": "2023-03-06T13:16:39.000Z",
          "wordCount": 688,
          "title": "TradingViewのアラート通知をAWS（lambda）を使ってLINEへ通知する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--70owPe1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TradingView%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2588%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592AWS%25EF%25BC%2588lambda%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6LINE%25E3%2581%25B8%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%2583%25E5%25B0%258F%25E6%25B1%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkNjI1NGRmNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--70owPe1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TradingView%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2588%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592AWS%25EF%25BC%2588lambda%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6LINE%25E3%2581%25B8%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%2583%25E5%25B0%258F%25E6%25B1%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkNjI1NGRmNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/husty/articles/a0cf8cd55346f5",
          "author": "Takumi Yamashita",
          "description": "どどーん\nhttps://github.com/husty530/socket-template\n内容物はTCP/UDP Server/Client です。\n\n 解説\n「お手軽」の定義は次の3つです。\n\n外部ライブラリに依存しない。\nプラットフォームに依存しない。\n1ファイルで完結。\n\n使い方はサンプルコードに目を通していただければわかるかと思いますが，何も書かないのもアレなので，ざっくりとだけプレビューを示します。\nTCPのPython -> C++, C#のつもりで書いています。マネっこでServer/Clientを逆にしたりエコーにしたり，UDPにしたりするのは簡単です。...",
          "link": "https://zenn.dev/husty/articles/a0cf8cd55346f5",
          "publishedOn": "2023-03-06T12:24:40.000Z",
          "wordCount": 688,
          "title": "お手軽ソケット通信 (C++, C#, Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Zl-jmeuc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2582%25BD%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E9%2580%259A%25E4%25BF%25A1%2520%2528C%252B%252B%252C%2520C%2523%252C%2520Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Yamashita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTc2d2ZGdzdianFISFJDR3BZMDlnOElELUM1dzZfSGN3WkVXbzdZZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Zl-jmeuc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2582%25BD%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E9%2580%259A%25E4%25BF%25A1%2520%2528C%252B%252B%252C%2520C%2523%252C%2520Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Yamashita%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTc2d2ZGdzdianFISFJDR3BZMDlnOElELUM1dzZfSGN3WkVXbzdZZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/piment/articles/2a42d863da82a2",
          "author": "ぴーまん",
          "description": "ERNIE-LayoutのREADMEを読んで試してみます。\n\n\n README\n\n\nモデル説明\n事前学習により、視覚な文章を理解できるようになってきている。\nしかし、既存の手法の多くは、レイアウトを意識した理解が最適とは言えない。\n本論文では、ワークフローを通してレイアウトを学習し、テキスト、レイアウト、画像の特徴を組み合わせたより良い表現を学習する、新しい文書学習ソリューションERNIE-Layoutを提案します。\n具体的には、まず直列化段階で入力シーケンスの並び替えを行い、次に相関的な事前学習タスクである読み順予測を提示し、文書の適切な読み順を学習する。\nまた、モデルのレイアウト認...",
          "link": "https://zenn.dev/piment/articles/2a42d863da82a2",
          "publishedOn": "2023-03-06T09:36:51.000Z",
          "wordCount": 4110,
          "title": "ERNIE-LayoutのREADME",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JyUpzqxt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:ERNIE-Layout%25E3%2581%25AEREADME%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JyUpzqxt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:ERNIE-Layout%25E3%2581%25AEREADME%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/umyomyomyon/articles/5f07abe67a289b",
          "author": "umyomyomyon",
          "description": "概要\nマイク入力をWhisper APIで文字起こしし、音声から起こした文字をChatGPT APIに投げて返答をVOICEVOXに渡すことによってChatGPTとの会話を行います。\n\n 概要図\n\nリポジトリはこちらです\nhttps://github.com/umyomyomyon/whisper-chatgpt-voicevox\n\n Whisper APIを使用してマイク入力をテキストに\nマイクからの入力をWhisperで文字起こしをするコードはこちらの記事を参考にさせていただきました。\nhttps://nikkie-ftnext.hatenablog.com/entry/my-f...",
          "link": "https://zenn.dev/umyomyomyon/articles/5f07abe67a289b",
          "publishedOn": "2023-03-06T09:21:06.000Z",
          "wordCount": 1538,
          "title": "Whisper API, ChatGPT API, VOICEVOXを使ってAIと会話する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pModiRWU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Whisper%2520API%252C%2520ChatGPT%2520API%252C%2520VOICEVOX%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6AI%25E3%2581%25A8%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:umyomyomyon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ODk5YTU4MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pModiRWU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Whisper%2520API%252C%2520ChatGPT%2520API%252C%2520VOICEVOX%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6AI%25E3%2581%25A8%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:umyomyomyon%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ODk5YTU4MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/murakoshi/articles/89462440e35073",
          "author": "murakoshi",
          "description": "OCRで画像を文字認識してGoogle Cloud Text-to-Speechにかませて音声データを生成すると、\n文字数制限とかには引っかかってないのに定期的にエラーレスポンスが返ってきてた。\n{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"Request contains an invalid argument.\",\n    \"status\": \"INVALID_ARGUMENT\"\n  }\n}\nどうやらたまたまOCRの精度が悪くて記号多めで読み上げが辛そうなテキストになると\nたまにRequest contains an invalid ...",
          "link": "https://zenn.dev/murakoshi/articles/89462440e35073",
          "publishedOn": "2023-03-06T06:41:05.000Z",
          "wordCount": 351,
          "title": "Google Cloud Text-to-Speechは変な文字の並びになるとたまにバグる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S4D8mSGc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Cloud%2520Text-to-Speech%25E3%2581%25AF%25E5%25A4%2589%25E3%2581%25AA%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E4%25B8%25A6%25E3%2581%25B3%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25AB%25E3%2583%2590%25E3%2582%25B0%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:murakoshi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDhhMWU2ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S4D8mSGc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Cloud%2520Text-to-Speech%25E3%2581%25AF%25E5%25A4%2589%25E3%2581%25AA%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E4%25B8%25A6%25E3%2581%25B3%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25AB%25E3%2583%2590%25E3%2582%25B0%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:murakoshi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDhhMWU2ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d1b2104e629a60",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-158 B - Count Balls\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, a, b = getIntMap()\n\n    c = n // (a + b) * a\n\n    m = n % (a + b)\n    c += m if m <= a else a\n\n    print(c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d1b2104e629a60",
          "publishedOn": "2023-03-06T05:02:09.000Z",
          "wordCount": 306,
          "title": "［AtCoder］ABC-158｜B - Count Balls",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ceLl8wim--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-158%25EF%25BD%259CB%2520-%2520Count%2520Balls%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ceLl8wim--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-158%25EF%25BD%259CB%2520-%2520Count%2520Balls%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/bcdb04f34c0977",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-158 A - Station and Bus\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    l = list(getString())\n\n    print('No' if len(set(l)) == 1 else 'Yes')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/bcdb04f34c0977",
          "publishedOn": "2023-03-06T05:02:08.000Z",
          "wordCount": 247,
          "title": "［AtCoder］ABC-158｜A - Station and Bus",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OQvWdqhq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-158%25EF%25BD%259CA%2520-%2520Station%2520and%2520Bus%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OQvWdqhq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-158%25EF%25BD%259CA%2520-%2520Station%2520and%2520Bus%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/5980d30972ff29",
          "author": "ryo_kawamata",
          "description": "息子と一緒に遊びたいなと、Minecraft と ChatGPT を繋げて、やりたいことを日本語で伝えるといい感じに実現してくれるコマンドを作りました\n\n 🪄 作ったもの\n/py magic に続けてやりたいことを伝えると、いい感じに実現してくれます。\n家をつくる例\n/py magic 10マス先に豪華な家を作って。窓は広めで。\n\n水流エレベーターをつくる例\n/py magic 水流エレベーターを作って。周りは石ブロックで。\n\n\n 🛠️ 実装\n事前に Minecraft で Python を実行できる環境を整えます。\nhttps://files.minecraftforge.net/ne...",
          "link": "https://zenn.dev/ryo_kawamata/articles/5980d30972ff29",
          "publishedOn": "2023-03-06T03:44:16.000Z",
          "wordCount": 979,
          "title": "[Minecraft × ChatGPT] マイクラで作りたいものを伝えると魔法みたいに実現してくれるコマンドを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2TR5N40N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BMinecraft%2520%25C3%2597%2520ChatGPT%255D%2520%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25A9%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BC%259D%25E3%2581%2588%25E3%2582%258B%25E3%2581%25A8%25E9%25AD%2594%25E6%25B3%2595%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AB%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryo_kawamata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2N2NiMTI0ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2TR5N40N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BMinecraft%2520%25C3%2597%2520ChatGPT%255D%2520%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25A9%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BC%259D%25E3%2581%2588%25E3%2582%258B%25E3%2581%25A8%25E9%25AD%2594%25E6%25B3%2595%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AB%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryo_kawamata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2N2NiMTI0ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}