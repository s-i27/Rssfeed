{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/syoyo/articles/547c490fd94184",
          "author": "syoyo",
          "description": "背景\n機械学習や CG 系で Python(tkinter, PyQt など)で GUI 作る必要がある.\nReact とか Streamlit みたいに GUI のリロードしたい...\n最近だと VS Code で LiveCode for Python で行けました!\nhttps://www.youtube.com/watch?v=28jxTjk2QJM\n\n 設定\n\nで GUI ライブラリのモジュール名を指定します.\ntkinter などよく使われているものはすでに登録されていましたが, PySide6 などはありませんでした(2023/09 時点)\n\n リロードのタイミング\nG...",
          "link": "https://zenn.dev/syoyo/articles/547c490fd94184",
          "publishedOn": "2023-09-19T17:40:38.000Z",
          "wordCount": 249,
          "title": "VSCode: Python GUI アプリのライブリロードをするメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jCxtqQKD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%253A%2520Python%2520GUI%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jCxtqQKD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%253A%2520Python%2520GUI%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/t_tomo/articles/6959aa8be04a7f",
          "author": "t_tomo",
          "description": "課題\n会社の電話番号やサービス名の変更時、もしくは特定のキャンペーンフレーズが含まれているテンプレートを特定したい時、SendGridダッシュボードでテンプレートを1つ1つ開いてサーチすると時間が掛かる上に事故が起こりやすい。\n\n 要約\nPythonプログラムを用意して上記手順を自動実行する。\n\n 必要なもの\n\nSendGrid API キーの値（SG.xxxxxxx.xxxxxxxxxxxxxx）\nサーチしたい用語（例 06-1234-5678、早期登録キャンペーン、プレミアム会員など）\n\n\n 手順\n\n 以下のシェルスクリプトを実行してローカル環境に全テンプレート情報を取得する。\n...",
          "link": "https://zenn.dev/t_tomo/articles/6959aa8be04a7f",
          "publishedOn": "2023-09-19T12:30:37.000Z",
          "wordCount": 935,
          "title": "特定の用語が含まれているSendGridテンプレートを抽出する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d_fTXrwm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E7%2594%25A8%25E8%25AA%259E%25E3%2581%258C%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BSendGrid%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_tomo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpR2tyTmNDZFpDRjZQRDhaYVE5YWRhandoanI0cG8zaDNvT0stZkE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d_fTXrwm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E7%2594%25A8%25E8%25AA%259E%25E3%2581%258C%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BSendGrid%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_tomo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpR2tyTmNDZFpDRjZQRDhaYVE5YWRhandoanI0cG8zaDNvT0stZkE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/t_tomo/articles/6d3893820db2b6",
          "author": "t_tomo",
          "description": "課題\nSendGridテンプレートを整理する際、テンプレートIDを1つ1つクリップボードにコピーしてプロジェクトディレクトリ内で参照されているかサーチすると時間が掛かる上に事故が起こりやすい。\n\n 要約\nPythonプログラムを用意して上記手順を自動実行する。\n\n 必要なもの\n\nSendGrid API キーの値（SG.xxxxxxx.xxxxxxxxxxxxxx）\nプロジェクトディレクトリ\n\n\n 手順\n\n 以下のシェルスクリプトを実行してローカル環境に全テンプレート情報を取得する。\n% curl -X GET \"https://api.sendgrid.com/v3/templat...",
          "link": "https://zenn.dev/t_tomo/articles/6d3893820db2b6",
          "publishedOn": "2023-09-19T12:24:42.000Z",
          "wordCount": 810,
          "title": "未使用のSendGridテンプレートを抽出する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VuXs4PvC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%25AESendGrid%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_tomo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpR2tyTmNDZFpDRjZQRDhaYVE5YWRhandoanI0cG8zaDNvT0stZkE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VuXs4PvC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%25AESendGrid%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_tomo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpR2tyTmNDZFpDRjZQRDhaYVE5YWRhandoanI0cG8zaDNvT0stZkE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kentoo1/articles/592272d3a1a28d",
          "author": "ケントゥ",
          "description": "前回は、モデルの学習方法について解説しました。\n今回は、次のテストデータについて、学習済みモデルのレコメンド先を推論します。\n\n test.csv\nuser_id\n5\n1\n2222\n3333\n\n\n 最終コード\nまずコードの全体を載せます。\nテストファイルは ./data/processed/anime/test.csv、モデルファイルは ./saved/BPR-Sep-15-2023_16-55-36.pth に入っているとします。\npredict.py\n ./predict.py\nfrom __future__ import annotations\n\nimport logging\n\ni...",
          "link": "https://zenn.dev/kentoo1/articles/592272d3a1a28d",
          "publishedOn": "2023-09-19T11:04:12.000Z",
          "wordCount": 1696,
          "title": "RecBoleを使ってみよう5　推論",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xMazHbTh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25865%25E3%2580%2580%25E6%258E%25A8%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xMazHbTh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25865%25E3%2580%2580%25E6%258E%25A8%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/025b0eabf24e20",
          "author": "yKesamaru",
          "description": "はじめに\nアルゴリズム\n実装\n出力結果\n\n\n はじめに\n頭部姿勢推定は、顔の向きや角度を計算する技術です。\nこの記事では、複雑なパラメーターを使用せず、簡易的な方法を用いて頭部姿勢を推定する方法を紹介します。具体的には、顔のランドマークを利用して三角形をつくり、その重心から顔の向きを2D平面上で推定します。\n\n通常、頭部姿勢推定にはカメラの\n\n内部パラメーター\n外部パラメーター\n\nが必要となります。内部パラメーターは、カメラの焦点距離や画像の中心点などを表すパラメーターで、カメラごとに異なります。外部パラメーターは、カメラの位置や向きを表すパラメーターで、カメラの位置や向きが変わると...",
          "link": "https://zenn.dev/ykesamaru/articles/025b0eabf24e20",
          "publishedOn": "2023-09-19T10:20:28.000Z",
          "wordCount": 155,
          "title": "頭部姿勢推定を簡易実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lzA91nZl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A0%25AD%25E9%2583%25A8%25E5%25A7%25BF%25E5%258B%25A2%25E6%258E%25A8%25E5%25AE%259A%25E3%2582%2592%25E7%25B0%25A1%25E6%2598%2593%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lzA91nZl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A0%25AD%25E9%2583%25A8%25E5%25A7%25BF%25E5%258B%25A2%25E6%258E%25A8%25E5%25AE%259A%25E3%2582%2592%25E7%25B0%25A1%25E6%2598%2593%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/4ergfbv547uezdf/articles/74647c626d8155",
          "author": "bunnyhopper_isolated",
          "description": "概要\nこのPDF資料において、プロトタイプを作る上でのHaskellの優位性が書かれています。\n具体的なコードの全体が示されていないので実際に書いてみました。また上記資料にはPythonについて検証されていないので、Pythonバージョンのコードも書いてみて比較考察してみました。その際はラムダ式を使うようにしています。\n私はもともとC/C++やPythonをメインに使っていました。見識を広げるためにHaskellを勉強していまして、それがどれほど手続き型言語(の関数型的書き方)に応用できるのか知りたく思っていました。\n\n 課題\n以下図は上記で示したPDF資料から取っています。\n軍事系...",
          "link": "https://zenn.dev/4ergfbv547uezdf/articles/74647c626d8155",
          "publishedOn": "2023-09-19T09:59:04.000Z",
          "wordCount": 2694,
          "title": "HaskellからPythonに翻訳して何かを味わう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j3pr5d1u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Haskell%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25AB%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%2595%25E3%2581%258B%25E3%2582%2592%25E5%2591%25B3%25E3%2582%258F%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bunnyhopper_iso...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNklBRDQ3Mm5reFc3Sl9jMmlHdDFZajNHMU1CSDFpU3JGTVVFVHI5UT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j3pr5d1u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Haskell%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25AB%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%2595%25E3%2581%258B%25E3%2582%2592%25E5%2591%25B3%25E3%2582%258F%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bunnyhopper_iso...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNklBRDQ3Mm5reFc3Sl9jMmlHdDFZajNHMU1CSDFpU3JGTVVFVHI5UT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/htnk128/articles/20c16b70f59b50",
          "author": "htnk128",
          "description": "これはなに？\nDatadog Fowarder はログを Datadog に転送する Lambda 関数だが、使用しているバージョンが古いため AWS Lambda における Python 3.7 ランタイムのサポート終了ともなう対応が必要なためその対応方法をまとめたものである\n\n 手順\n基本的に公式の通り実施する\n\n 事前確認\n\n以下のコマンドにて datadog-forwarder が存在することを確認する    $ aws lambda list-functions --function-version ALL --region {リージョン} --output text --...",
          "link": "https://zenn.dev/htnk128/articles/20c16b70f59b50",
          "publishedOn": "2023-09-19T07:35:54.000Z",
          "wordCount": 314,
          "title": "Datadog Fowarder のアップグレード",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--47QVUC0o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Datadog%2520Fowarder%2520%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:htnk128%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YnRGdzVXaks1aE9kajh0bEVCdFl0ejU5ZHZoWkJmbWFHbWl1cVM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--47QVUC0o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Datadog%2520Fowarder%2520%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:htnk128%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YnRGdzVXaks1aE9kajh0bEVCdFl0ejU5ZHZoWkJmbWFHbWl1cVM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f5a319586ffcf0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-307 B - racecar\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef chk(x, y):\n    z = x + y\n    if z == z[::-1]:\n        return True\n\n    z = y + x\n    if z == z[::-1]:\n        return True\n    return False\n\n\ndef main():...",
          "link": "https://zenn.dev/hyperdb/articles/f5a319586ffcf0",
          "publishedOn": "2023-09-19T04:42:09.000Z",
          "wordCount": 505,
          "title": "［AtCoder］ABC-307｜B - racecar",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nrn6DkZd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-307%25EF%25BD%259CB%2520-%2520racecar%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nrn6DkZd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-307%25EF%25BD%259CB%2520-%2520racecar%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8903e896f6e2a2",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-307 A - Weekly Records\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    sw = []\n    for i in range(n):\n        s = i * 7\n        e = s + 7\n        sw.append(sum(a[s:...",
          "link": "https://zenn.dev/hyperdb/articles/8903e896f6e2a2",
          "publishedOn": "2023-09-19T04:42:09.000Z",
          "wordCount": 369,
          "title": "［AtCoder］ABC-307｜A - Weekly Records",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7HKROYnu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-307%25EF%25BD%259CA%2520-%2520Weekly%2520Records%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7HKROYnu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-307%25EF%25BD%259CA%2520-%2520Weekly%2520Records%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/toki_mwc/articles/84ce8d3abdbc54",
          "author": "toki_mwc",
          "description": "1. はじめに\nanimatediff-cli-prompt-travelは、GitHub上で公開されているツールで、アニメーションの差分を生成するためのCLIツールです。この記事では、このツールのインストール方法から使い方、実際の使用結果までを紹介します。\n\n 2. animatediff-cli-prompt-travelとは？\nこのツールは、neggles/animatediff-cliをベースにしており、特にフレームの中間でプロンプトを変更する実験的な機能が追加されています。\n\n 3. インストール方法\nWindows環境を前提として、Python 3.10とgitクライアン...",
          "link": "https://zenn.dev/toki_mwc/articles/84ce8d3abdbc54",
          "publishedOn": "2023-09-19T03:40:49.000Z",
          "wordCount": 426,
          "title": "【AnimateDiff】animatediff-cli-prompt-travelを試してみた！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kvkci1FK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AnimateDiff%25E3%2580%2591animatediff-cli-prompt-travel%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki_mwc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNzRiNzczNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kvkci1FK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AnimateDiff%25E3%2580%2591animatediff-cli-prompt-travel%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki_mwc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNzRiNzczNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nakurei/articles/understand-python-repr-method",
          "author": "NakuRei",
          "description": "これはなに\nPythonのオブジェクトが持つ特殊メソッド__repr__について調べたメモ。\n\n 特殊メソッド__repr__とは\n__repr__は、objectクラスで定義されている、オブジェクトの「公式な（official）」文字列表現を返すための特殊メソッドである。\n__repr__はobjectクラスで定義されており、すべてのクラスは暗黙的にobjectクラスを継承する。そのため、すべてのクラスに__repr__メソッドは定義（継承）されている。\n\n __repr__の目的\nこのメソッドの目的は、そのオブジェクトの「公式な（official）」文字列表現を返し、オブジェクト...",
          "link": "https://zenn.dev/nakurei/articles/understand-python-repr-method",
          "publishedOn": "2023-09-18T22:56:43.000Z",
          "wordCount": 565,
          "title": "Pythonの__repr__メソッドを理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kU69XMze--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE__repr__%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjNThmYWI0YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kU69XMze--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE__repr__%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjNThmYWI0YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/aiq_dev/articles/78cde201571ae7",
          "author": "まさぴょん",
          "description": "こんにちは、AIQ株式会社のフロントエンドエンジニアのまさぴょんです！\n今回は、社内向けの『Python基礎講座』の連載1回目になります。\n今回のテーマは、「Google Colaboratory とは？ Google Colab の環境構築編」です。\n\n Google Colaboratory (通称:Colab) とは？\nGoogle Colaboratory (通称:Colab)は、ブラウザから Python を実行できるサービス(実行環境でありEditor)です。\nGoogle Colab では、Google アカウントがあれば、簡単にPython の実行環境を構築できます。\nま...",
          "link": "https://zenn.dev/aiq_dev/articles/78cde201571ae7",
          "publishedOn": "2023-09-18T13:32:33.000Z",
          "wordCount": 670,
          "title": "【Python基礎講座・連載1回目 】Google Colaboratory とは？ Google Colab の環境構築編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7510hvb8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E5%259F%25BA%25E7%25A4%258E%25E8%25AC%259B%25E5%25BA%25A7%25E3%2583%25BB%25E9%2580%25A3%25E8%25BC%25891%25E5%259B%259E%25E7%259B%25AE%2520%25E3%2580%2591Google%2520Colaboratory%2520%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2520Google%2520Colab%2520%25E3%2581%25AE...%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AIQ%2520Tech%2520Blog%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MzZmYTU3YzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZWDhyNWVCOGNkZmExeVRBNmhEMWF4bkFpYnJRUXpCd01EbXhIdVFRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7510hvb8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E5%259F%25BA%25E7%25A4%258E%25E8%25AC%259B%25E5%25BA%25A7%25E3%2583%25BB%25E9%2580%25A3%25E8%25BC%25891%25E5%259B%259E%25E7%259B%25AE%2520%25E3%2580%2591Google%2520Colaboratory%2520%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2520Google%2520Colab%2520%25E3%2581%25AE...%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AIQ%2520Tech%2520Blog%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MzZmYTU3YzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZWDhyNWVCOGNkZmExeVRBNmhEMWF4bkFpYnJRUXpCd01EbXhIdVFRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tsujino/articles/d0ca3c9b847b66",
          "author": "Tsujino",
          "description": "はじめに\nこの記事ではTapo C310という種類のネットワークカメラの映像をRTSP経由でMacPCの画面に表示する手順を解説します。\nTapoシリーズのネットワークカメラは、映像をスマホアプリで閲覧するのが公式の方法のようですが、仕様外の機能でRTSPのプロトコルを開放しているため自力で設定をすればパソコンでも表示できるようになっています。私の環境で使っているルーターの関係でルーター側の設定が少しトリッキーでしたが、手順自体はとても簡単です。\n今回使用した機器や環境は以下の通りです。\n\nNetwork camera: Tapo C310\nRouter: docomo home5g...",
          "link": "https://zenn.dev/tsujino/articles/d0ca3c9b847b66",
          "publishedOn": "2023-09-18T13:27:34.000Z",
          "wordCount": 693,
          "title": "ネットワークカメラの映像をRTSP経由でMacの画面に表示する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mqepKdaj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2581%25AE%25E6%2598%25A0%25E5%2583%258F%25E3%2582%2592RTSP%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7Mac%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tsujino%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZHZUVUljOTBPY1lGa3l0ZDVKa2QyRkdPVGVMYmtQdl9GVG94bEVGSkhLYWNnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mqepKdaj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2581%25AE%25E6%2598%25A0%25E5%2583%258F%25E3%2582%2592RTSP%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7Mac%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tsujino%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZHZUVUljOTBPY1lGa3l0ZDVKa2QyRkdPVGVMYmtQdl9GVG94bEVGSkhLYWNnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/raio/articles/a6a5f6d698341e",
          "author": "Raio｜高校生エンジニア",
          "description": "はじめに\nみなさん、こんにちは。高校生エンジニアのRaioです！\n平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻\n↓筆者について↓\nhttps://qiita.com/Raio14f/items/ef0fb67685b36298bcb0\n今回の記事では、0円で読めるJavaScriptの技術書5選を紹介します！\n無料で読む方法も紹介してるので、是非最後まで見て頂けると幸いです👍🏻\n\n 技術書を無料で読む方法\nKindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌\n\n200万冊以上の書籍が何冊でも読み放題\n...",
          "link": "https://zenn.dev/raio/articles/a6a5f6d698341e",
          "publishedOn": "2023-09-18T12:57:29.000Z",
          "wordCount": 361,
          "title": "【2023年9月】0円で読めるJavaScript技術書5選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ktM0J3HT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B49%25E6%259C%2588%25E3%2580%25910%25E5%2586%2586%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258BJavaScript%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B85%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ktM0J3HT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B49%25E6%259C%2588%25E3%2580%25910%25E5%2586%2586%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258BJavaScript%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B85%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/straydog/articles/5753c72fa9bd03",
          "author": "stray dog",
          "description": "はじめに\nファイル編集 Slack アプリを作成を作成したので、そのアプリについて記事にしてみました。気分で機能追加しているので、もしかすると記事更新するかもしれないです。\n作成した経緯は、最近 Slack アプリをいじる事が増えたので、自分の今まで積んできたスキルスタック、触ってきたサービスで作ってみるかぁというモチベーション。そもそもラッパーライブラリが用意されている RDB ではなくて、 NoSQL DB を使うのはバグってる気がする。仕事じゃないからできることですね。\n作ってみた感じとしては、やはりフロントエンドを実装しない分、工数はそれほどかからないし、OpenAI（Fun...",
          "link": "https://zenn.dev/straydog/articles/5753c72fa9bd03",
          "publishedOn": "2023-09-18T12:14:32.000Z",
          "wordCount": 284,
          "title": "ファイル編集（＋画像生成＋音声生成）Slackアプリを作ってみた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ngSVZ-OO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E7%25B7%25A8%25E9%259B%2586%25EF%25BC%2588%25EF%25BC%258B%25E7%2594%25BB%25E5%2583%258F%25E7%2594%259F%25E6%2588%2590%25EF%25BC%258B%25E9%259F%25B3%25E5%25A3%25B0%25E7%2594%259F%25E6%2588%2590%25EF%25BC%2589Slack%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ngSVZ-OO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E7%25B7%25A8%25E9%259B%2586%25EF%25BC%2588%25EF%25BC%258B%25E7%2594%25BB%25E5%2583%258F%25E7%2594%259F%25E6%2588%2590%25EF%25BC%258B%25E9%259F%25B3%25E5%25A3%25B0%25E7%2594%259F%25E6%2588%2590%25EF%25BC%2589Slack%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/daysooon/articles/9091bd87054be1",
          "author": "D-suke",
          "description": "アプリについて\nhttps://wavook.net/\nサービスの内容としては、Note上で紹介されているビジネス書をスキの数が多い順にランキング化したものです。各書籍には紹介しているNote記事へのリンクと、Amazonへのリンクを添付しています。現在では全体ランキングのみですが、今後は金融・ITなどのカテゴリ分けや、月間ランキングなどの機能を追加予定です。\n\n アプリ画面\n\n\n 使用技術\n\n フロントエンド\n\nNext.js\nTypeScript\nTailwind CSS\nPrisma\n\ntremor ダッシュボードを簡単に作成できるUIライブラリです\n\n\n インフラ\n\n\nNet...",
          "link": "https://zenn.dev/daysooon/articles/9091bd87054be1",
          "publishedOn": "2023-09-18T08:55:12.000Z",
          "wordCount": 192,
          "title": "【個人開発】Noteでおすすめされているビジネス書のランキングサイトを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3obslCry--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591Note%25E3%2581%25A7%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2583%2593%25E3%2582%25B8%25E3%2583%258D%25E3%2582%25B9%25E6%259B%25B8%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:D-suke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pyWU41SExtMk8xVUg1NmNKWG05SFJmNjlOVEM0TVhEZnhQWmVrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3obslCry--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591Note%25E3%2581%25A7%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2583%2593%25E3%2582%25B8%25E3%2583%258D%25E3%2582%25B9%25E6%259B%25B8%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:D-suke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pyWU41SExtMk8xVUg1NmNKWG05SFJmNjlOVEM0TVhEZnhQWmVrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/6e2098dbef148e",
          "author": "yKesamaru",
          "description": "はじめに\n寝顔でスマホの顔認証ロックを解除　50万円の不正送金被害も　どう防ぐ?専門家に聞いたというニュースがあり驚きました。悪い人はいろんなこと考えるんですね。\n\nあなたの個人情報や資産に関する情報などが詰まったスマートフォン。普段はロックをかけているが、もし寝ている間にロックが解除されてしまったら?\nそんな恐ろしい事件が実際に起きた。警視庁は、飲食店で知り合った男性が寝た後に、男性の寝顔でスマホやネットバンキングの顔認証ロックを解除し、不正に50万円を送金した疑いで、チュニジア人の男を逮捕したのだ。9/14(木) 15:54配信\n\nこのニュースで出てきた「画面注視認識機能」。要は...",
          "link": "https://zenn.dev/ykesamaru/articles/6e2098dbef148e",
          "publishedOn": "2023-09-18T08:17:38.000Z",
          "wordCount": 417,
          "title": "スマホの画面注視認識機能を簡易実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--01s-VjP8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2583%259E%25E3%2583%259B%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E6%25B3%25A8%25E8%25A6%2596%25E8%25AA%258D%25E8%25AD%2598%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E7%25B0%25A1%25E6%2598%2593%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--01s-VjP8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2583%259E%25E3%2583%259B%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E6%25B3%25A8%25E8%25A6%2596%25E8%25AA%258D%25E8%25AD%2598%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E7%25B0%25A1%25E6%2598%2593%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/aiq_dev/articles/dbc01683625524",
          "author": "まさぴょん",
          "description": "こんにちは、AIQ株式会社のフロントエンドエンジニアのまさぴょんです！\n今回は、Pandas入門講座です。「Pandasとは何か？」や、Pandasの基本の使い方をまとめて、チートシートとして使えるようにしています。ぜひご活用ください。\n以前書いたスクラップ記事はこちら。\n(これをベースに記事作成しました)\nhttps://zenn.dev/manase/scraps/2e430d208596dd\n\n Pandasとは？\nPandasとは、\n\nPandas(パンダス)とは、データ解析を容易にする機能を提供するPythonのデータ解析ライブラリです。\nPandasの特徴には、データフレーム...",
          "link": "https://zenn.dev/aiq_dev/articles/dbc01683625524",
          "publishedOn": "2023-09-18T07:38:13.000Z",
          "wordCount": 6301,
          "title": "【Pandas入門】Pandasとは？Pandasの基本の使い方・Pandasチートシート",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--shVmBYCA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Pandas%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591Pandas%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FPandas%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%25BBPandas%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AIQ%2520Tech%2520Blog%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MzZmYTU3YzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZWDhyNWVCOGNkZmExeVRBNmhEMWF4bkFpYnJRUXpCd01EbXhIdVFRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--shVmBYCA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Pandas%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591Pandas%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FPandas%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%25BBPandas%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AIQ%2520Tech%2520Blog%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MzZmYTU3YzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZWDhyNWVCOGNkZmExeVRBNmhEMWF4bkFpYnJRUXpCd01EbXhIdVFRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/go_furu93/articles/lambda_bcrypt_no_backends_available",
          "author": "ふるはうす",
          "description": "先に結論\nWindows(WSL)でデプロイ時、Lambdaのアーキテクチャがx86_64だと、bcryptが使用できないというエラーが発生しました。Lambdaのアーキテクチャにarm64を使うと、エラーが発生しなくなりました。\n\n 現象\nWindowsのWSLを使って開発しています。\npasslib経由でbcryptを動かすFunctionを作成して、ローカルでは正しく動作しました。\nただし、Serverless Frameworkでデプロイして、Functionを動かすとpasslib.exc.MissingBackendError: bcrypt: no backends a...",
          "link": "https://zenn.dev/go_furu93/articles/lambda_bcrypt_no_backends_available",
          "publishedOn": "2023-09-18T06:18:05.000Z",
          "wordCount": 1003,
          "title": "passlibを使うLambdaをWindowsでデプロイしてpasslib.exc.MissingBackendErrorとなったら",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TVvcC4_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:passlib%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586Lambda%25E3%2582%2592Windows%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6passlib.exc.MissingBackend...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%25AF%25E3%2581%2586%25E3%2581%2599%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwMTYzOTI0Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TVvcC4_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:passlib%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586Lambda%25E3%2582%2592Windows%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6passlib.exc.MissingBackend...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%25AF%25E3%2581%2586%25E3%2581%2599%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwMTYzOTI0Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tirimen/articles/0c70e82df4add4",
          "author": "tirimen",
          "description": "今回もベイズ最適化の記事を書くための前段階記事。回帰というと、線形回帰を思い浮かべるかもしれないが、ベイズ最適化ではガウス過程回帰を用いている。そこで自分用にまとめてみた。\n\n ガウス過程回帰とは\nガウス過程という言葉についてまず考えてみる。こちらのサイトが詳しく書いてあるので、参考にしてほしい。\nhttps://www.jstage.jst.go.jp/article/isciesci/62/10/62_390/_pdf\nまた、こちらの書籍も参考にした。（amazonに飛ぶのでご注意ください）\nhttps://www.amazon.co.jp/ウェブ最適化ではじめる機械学習-―-Bテス...",
          "link": "https://zenn.dev/tirimen/articles/0c70e82df4add4",
          "publishedOn": "2023-09-18T05:14:57.000Z",
          "wordCount": 2483,
          "title": "Pythonでガウス過程回帰をやってみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BRSINMfZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BRSINMfZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tirimen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YmY2MGNlYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nondescript/articles/c43d7fb850555f",
          "author": "素人の戯言",
          "description": "TL;DR\n\nエラー内容\n/bin/sh: 1: txtregist.php: not found\n対策\n#!/usr/local/phpに変更 or hookオプションを\"php ファイル名\"にする\nその他\nPHPにこだわる必要はない\n\n\n 背景\n\nMYDNS.JPのサブドメインに対するSSL証明書をLet's Encryptから自動で取得したかった\nCertbotのHTTP-01のために80や443ポートは使いたくなかった\nホスト環境は汚したくなかったのでDockerで実行したかった\nMYDNS.JP公式でDNS-01用のphpスクリプトが公開されているので、それを使おうとした\n...",
          "link": "https://zenn.dev/nondescript/articles/c43d7fb850555f",
          "publishedOn": "2023-09-18T04:58:36.000Z",
          "wordCount": 4529,
          "title": "MYDNS.JPのサブドメイン用SSL証明書取得に、Docker版PHPでLet's EncryptのDNS-01を用いた際にエラー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XqmlWqxn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MYDNS.JP%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%2596%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E7%2594%25A8SSL%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25E5%258F%2596%25E5%25BE%2597%25E3%2581%25AB%25E3%2580%2581Docker%25E7%2589%2588PHP%25E3%2581%25A7Let%2527s%2520Encrypt%25E3%2581%25AEDNS-01...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XqmlWqxn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MYDNS.JP%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%2596%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E7%2594%25A8SSL%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25E5%258F%2596%25E5%25BE%2597%25E3%2581%25AB%25E3%2580%2581Docker%25E7%2589%2588PHP%25E3%2581%25A7Let%2527s%2520Encrypt%25E3%2581%25AEDNS-01...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/wmoto_ai/articles/c7ad0b897aca3d",
          "author": "生ビール",
          "description": "はじめに\nどうも、趣味で機械学習関連を勉強中の生ビールと申します。備忘録がてら初めてのZenn記事投稿します。\nモチベーション湧かない家事はやりたくないめんどくさがり屋です。家事する暇あったらその時間ビールを飲んで過ごしていたいです。\n\n 動機\n結婚したことをきっかけに、互いの時間を増やすべく家事の時短化を進めていました。初めの一歩として、音声操作のAlexaやSwitchbotを導入。これで少しは楽になったのですが、子供が生まれたのを機にもっと家事の時間を減らすべくトライしてみました。\n例えば、「たこ焼きソースないな」て思った”その場で”買い物リストに追加して、それをネット内で自動...",
          "link": "https://zenn.dev/wmoto_ai/articles/c7ad0b897aca3d",
          "publishedOn": "2023-09-18T03:04:54.000Z",
          "wordCount": 1589,
          "title": "Alexaで追加した買い物リストをもとにAmazon系以外のECサイトでも音声ショッピングしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1cjezN7f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alexa%25E3%2581%25A7%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2597%25E3%2581%259F%25E8%25B2%25B7%25E3%2581%2584%25E7%2589%25A9%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25ABAmazon%25E7%25B3%25BB%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AEEC%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25A7%25E3%2582%2582%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%259F%25E3%2583%2593%25E3%2583%25BC%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMjE4MDU4ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1cjezN7f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alexa%25E3%2581%25A7%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2597%25E3%2581%259F%25E8%25B2%25B7%25E3%2581%2584%25E7%2589%25A9%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25ABAmazon%25E7%25B3%25BB%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AEEC%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25A7%25E3%2582%2582%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%259F%25E3%2583%2593%25E3%2583%25BC%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMjE4MDU4ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuto_mo/articles/5c4d165330c5ab",
          "author": "pomu",
          "description": "今回は__init__(self) -> None:について解説していきます。\n\n __ init__(self) -> None:って何？\n__ init__(self) -> None:は\n\nreturnで何も返さない\n\nことを示しています。\n\n 説明\n-> None は型ヒントと呼ばれるもので、読み手や開発者に対して関数のインターフェース（入力と出力の型）を示すことができます。\nこのコードがあることで、この関数は何も返さないことが理解しやすくなります。\n__init__は初期化関数で基本的にreturnを行わないため、エディタによっては自動で入力されることが...",
          "link": "https://zenn.dev/yuto_mo/articles/5c4d165330c5ab",
          "publishedOn": "2023-09-18T02:13:36.000Z",
          "wordCount": 109,
          "title": "__init__(self) -> None:って何？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GlvBm39a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:__init__%2528self%2529%2520-%253E%2520None%253A%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GlvBm39a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:__init__%2528self%2529%2520-%253E%2520None%253A%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuto_mo/articles/3afdcfba6c8b8c",
          "author": "pomu",
          "description": "今回はrandom.sample()について解説します。\n\n random.sample()とは？\nrandom.sample()は\n\nランダムな要素を指定した数だけ取り出して、新しいリストとして返す\n\n操作です。\n指定は random.sample(元の配列, 取り出す個数) の形式です。\n具体的な使い方をコードで見ていきましょう。\n\n 使い方\n例コード\nimport random\n\n# サンプルとなるリスト\ndata_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n# data_listからランダムに3つの要素を取り出す\nsampled_list = ...",
          "link": "https://zenn.dev/yuto_mo/articles/3afdcfba6c8b8c",
          "publishedOn": "2023-09-18T00:39:33.000Z",
          "wordCount": 233,
          "title": "random.sample()について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i4l5XNq1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:random.sample%2528%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i4l5XNq1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:random.sample%2528%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kamorei/articles/cloudcam-googlesite",
          "author": "Kamorei",
          "description": "概略\nUSBカメラで定期的に撮影した画像をGoogle Driveにアップロードし、Google Sitesで表示することで、リモートモニタリングを実現します。\nGoogle Sitesであればアクセス制限も利用でき、スマホからも確認できるため、セキュリティカメラとしても利用できます。\n\n システム構成\nシステムの流れは以下の通りです。\n\n\nUSBカメラを利用し画像を撮影し、保存する\n撮影した画像をPyDrive2を利用しGoogle Driveにアップロードする\nGoogle Sites内にHTMLを埋め込み、Google Driveにアップロードした画像を表示する\nGoogle ...",
          "link": "https://zenn.dev/kamorei/articles/cloudcam-googlesite",
          "publishedOn": "2023-09-17T21:20:34.000Z",
          "wordCount": 889,
          "title": "USBカメラとGoogle Sitesを使ったリモートモニタリングの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N0lBJyHD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:USB%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2581%25A8Google%2520Sites%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A2%25E3%2583%258B%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kamorei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4MGM2ODQ2NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N0lBJyHD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:USB%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2581%25A8Google%2520Sites%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A2%25E3%2583%258B%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kamorei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4MGM2ODQ2NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/matsua_ant/articles/5665cea0cb04ee",
          "author": "ちゃーて松島",
          "description": "概要・背景\naws lambda(python)で関数をいくつか作成しています。\n毎度、関数の作成時にloggingの処理を入れるのが面倒でclass化したい思いが膨らんできました。\nでもaws lambdaはcloud watch logsへのログ出力があるためfile出力はできません。\nwebでの参考になるサイトなどから学習し個人的にいい感じの範囲で共通化＆class化しました。\n\n 作成したクラス\n\nLogging_Class.py\nimport logging\n\n#コメントアウトのフォーマットは全項目出力版フォーマット\n#LOG_FORMAT = '%(asctime)s -...",
          "link": "https://zenn.dev/matsua_ant/articles/5665cea0cb04ee",
          "publishedOn": "2023-09-17T12:37:03.000Z",
          "wordCount": 994,
          "title": "aws lambda(python)に最適なlogging classの作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dk_dmvdX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:aws%2520lambda%2528python%2529%25E3%2581%25AB%25E6%259C%2580%25E9%2581%25A9%25E3%2581%25AAlogging%2520class%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2582%2583%25E3%2583%25BC%25E3%2581%25A6%25E6%259D%25BE%25E5%25B3%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlNjlmOWQ1MTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dk_dmvdX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:aws%2520lambda%2528python%2529%25E3%2581%25AB%25E6%259C%2580%25E9%2581%25A9%25E3%2581%25AAlogging%2520class%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2582%2583%25E3%2583%25BC%25E3%2581%25A6%25E6%259D%25BE%25E5%25B3%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlNjlmOWQ1MTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/raio/articles/685a2cf40df840",
          "author": "Raio｜高校生エンジニア",
          "description": "はじめに\nみなさん、こんにちは。高校生エンジニアのRaioです🧑🏻‍💻\n平日は公立高校に通いながら、休日は放課後はIT企業のエンジニアとして働いています。\n今回の記事では、エンジニアがAudible入るべき理由を詳しく解説していきます。\n僕も実際に使ってみて、飛躍的に技術に関する知識が増えたのでおすすめです👍🏻\nご興味ある方は、是非最後までご覧ください！\n\n Audibleとは？\nAudible（オーディブル）は、書籍を朗読した音声コンテンツを配信しているサービスで、一般的には「聴く読書 」などとも呼ばれています。\n通常の読書とは異なり、書籍の内容を音声によって聞くことができるため、...",
          "link": "https://zenn.dev/raio/articles/685a2cf40df840",
          "publishedOn": "2023-09-17T11:21:38.000Z",
          "wordCount": 336,
          "title": "エンジニアなのにAudible入ってないの？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3nZ1S6lO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25ABAudible%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3nZ1S6lO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25ABAudible%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuta_extend/articles/c928d1d32d3f36",
          "author": "YuTa",
          "description": "Next.js の静的サイトのビルド時に外部 API からデータを取り込んで加工してから、それをサイトのデータソースとして使うサンプルです。ホスティングサービスとして Cloudflare Pages を使っています。\n1 日 1 回大規模データを取り込んで加工してその日のデータを静的サイトで高速表示したい、みたいなパターンを想定しています。\n\n 1. Next.js のプロジェクトを作成する\nまずは以下のコマンドで Next.js のプロジェクトを作成します。TypeScript オプションをつけておきます。\nnpx create-next-app --ts mysite\ncd mys...",
          "link": "https://zenn.dev/yuta_extend/articles/c928d1d32d3f36",
          "publishedOn": "2023-09-17T03:39:39.000Z",
          "wordCount": 917,
          "title": "Next.js の静的サイトのビルド時に Python で外部 API から最新情報を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0zJDAq12--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%25E3%2581%25AE%25E9%259D%2599%25E7%259A%2584%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E6%2599%2582%25E3%2581%25AB%2520Python%2520%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8%2520API%2520%25E3%2581%258B%25E3%2582%2589%25E6%259C%2580%25E6%2596%25B0%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YuTa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd3hvWXMyVFQ3LVpqVzRzd0g0dGNhYXlJUE1YRkVoaEFPSXVhSG89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0zJDAq12--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%25E3%2581%25AE%25E9%259D%2599%25E7%259A%2584%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E6%2599%2582%25E3%2581%25AB%2520Python%2520%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8%2520API%2520%25E3%2581%258B%25E3%2582%2589%25E6%259C%2580%25E6%2596%25B0%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YuTa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd3hvWXMyVFQ3LVpqVzRzd0g0dGNhYXlJUE1YRkVoaEFPSXVhSG89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/mkymdk/articles/5c369e6e74c606",
          "author": "Mukaiyama",
          "description": "Google Colaboratoryでの、提出ファイルの管理についてメモ書きとして残しておきます。\nコンペ主催者が提供しているサンプルコードそのままだと、\n'submission.csv'等の名前でcsvが生成されます。\nしかし、csvが何を指しているのか忘れてしまったり、\nいちいち書くのが少し手間というデメリットがあったりするので、\n下記のようなコードで処理しています。\nfilenameにメモとして、残したい内容を記載してください。\nメモには、model名や追加した特徴量等を書いています。\nメモ_時間.csv(例：lgb_0917_1234.csv)という名前で、PCにダウンロードし...",
          "link": "https://zenn.dev/mkymdk/articles/5c369e6e74c606",
          "publishedOn": "2023-09-17T03:00:28.000Z",
          "wordCount": 259,
          "title": "Google Colaboratory 提出ファイルの管理",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0PS-twp8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colaboratory%2520%25E6%258F%2590%25E5%2587%25BA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mukaiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjOTQyMjgwY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0PS-twp8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colaboratory%2520%25E6%258F%2590%25E5%2587%25BA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mukaiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjOTQyMjgwY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuto_mo/articles/b5805f912bf549",
          "author": "pomu",
          "description": "今回はnumpyのnewaxisについて解説します。\n\n newaxisとは？\nnewaxisは\n\n配列に次元を追加するためのインデックス\n\nです。\n具体的な使い方をコードで見ていきましょう。\n\n 使い方\n少し難しいですが、まずは「次元を追加する」という意味を掴みましょう。\nimport numpy as np\n\n# 1次元配列\narr1 = np.array([1, 2, 3])\nprint(arr1)\nprint(\"Shape:\", arr1.shape)\nShape: (3,)\n# [1 2 3]\n# Shape: (3,)\n\n# 行ベクトルに変換（次元を追加）\nrow_vecto...",
          "link": "https://zenn.dev/yuto_mo/articles/b5805f912bf549",
          "publishedOn": "2023-09-17T01:23:44.000Z",
          "wordCount": 447,
          "title": "newaxisを解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6q0qd69f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:newaxis%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6q0qd69f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:newaxis%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuto_mo/articles/cb7ce477d70153",
          "author": "pomu",
          "description": "今回はnumpyのスライスについて解説します。\n\n スライスとは？\nスライスは\n\n配列データなどから条件に一致する部分を抜き出す\n\n\n操作です。\nPythonのリストやNumPyの配列に対して、[start:stop:step] といった形でスライスを指定することができます。\nコードで使い方を見ていきましょう。\n\n コード\nnumpyのスライスは多次元データにも適用できます。まずは1次元から見ていきます。\n・1次元配列のスライス\nimport numpy as np\n\n# 1次元配列\narr1 = np.array([0, 1, 2, 3, 4, 5])\n\n# インデックス1から3までの...",
          "link": "https://zenn.dev/yuto_mo/articles/cb7ce477d70153",
          "publishedOn": "2023-09-16T12:07:55.000Z",
          "wordCount": 676,
          "title": "numpyのスライスについて解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GHOLCBIk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:numpy%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GHOLCBIk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:numpy%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/raio/articles/f22d767531fbc0",
          "author": "Raio｜高校生エンジニア",
          "description": "皆さん、こんにちは。高校生エンジニアのRaioです🙌\n公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています。\nhttps://zenn.dev/raio/articles/2478a66537c685\n今回の記事では、日々進化する技術を追うエンジニアがKidnleUnlimitedに入るメリットを３つ解説しようと思います。\nご興味あれば、是非最後までご覧ください👀\n↓KindleUnlimitedに入会したい方は画像をクリック↓\nhttps://amzn.to/3OJt26v\n\n 1ヶ月無料で技術書が読み放題\nKindleUnlimitedを使えば、1ヶ月間無料で沢...",
          "link": "https://zenn.dev/raio/articles/f22d767531fbc0",
          "publishedOn": "2023-09-16T11:20:22.000Z",
          "wordCount": 217,
          "title": "エンジニアなのにKindleUnlimited入ってないの？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--t_OPxFFp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25ABKindleUnlimited%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--t_OPxFFp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25ABKindleUnlimited%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sumeragi_0258/articles/e20bed20533612",
          "author": "すめらぎ",
          "description": "GPT4を利用して、プロンプトエンジニアリングを中心としたなんちゃって実装をしました。\nなお、記事の執筆は一部ChatGPTに手伝ってもらっています。\n\n メタ強化学習とは？\nメタ強化学習（Meta-Reinforcement Learning、Meta-RL）は、AIモデルが新しいタスクや環境に対して迅速に適応できるように学習する技術です。伝統的な強化学習アプローチでは、モデルは特定のタスクに特化して学習しますが、新しいタスクに遭遇したとき、ゼロから学習しなければなりません。これに対して、メタ強化学習ではモデルは複数のタスクにわたって「学習する方法を学習」します。\nこのアプローチの利点...",
          "link": "https://zenn.dev/sumeragi_0258/articles/e20bed20533612",
          "publishedOn": "2023-09-16T09:28:29.000Z",
          "wordCount": 2626,
          "title": "メタ強化学習を搭載したChatbotの実装方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eWqlAduL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A1%25E3%2582%25BF%25E5%25BC%25B7%25E5%258C%2596%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E6%2590%25AD%25E8%25BC%2589%25E3%2581%2597%25E3%2581%259FChatbot%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2582%2581%25E3%2582%2589%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSm1nN3RWYkRZREpuTlI5TlRiT3dDTUg3RkZuWGZzTXN4UWlyOE1Sd2NIc3VJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eWqlAduL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A1%25E3%2582%25BF%25E5%25BC%25B7%25E5%258C%2596%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E6%2590%25AD%25E8%25BC%2589%25E3%2581%2597%25E3%2581%259FChatbot%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2582%2581%25E3%2582%2589%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSm1nN3RWYkRZREpuTlI5TlRiT3dDTUg3RkZuWGZzTXN4UWlyOE1Sd2NIc3VJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/bathtimefish/articles/4988990670ee7d",
          "author": "bathtimefish",
          "description": "はじめに\nやばいと評判のOpen Interpreter。GPT4で使うのが鉄板だと思いますがローカルPCにモデルをロードして使うこともできます。\nここではWindows11のWSL上にOpen InterpreterをインストールしてローカルのCode Llamaを使う方法を紹介します。\n試した環境は以下のとおりです\n\nCore i9-13900\n64GB RAM\nGeForce RTX 4090\nWindows 11 Pro\nWSL (Ubuntu 22.04 LTS)\n\n\n セットアップする\nこちらのようにWSL上でCUDAが利用できるようになっているのが前提です。\nOpen ...",
          "link": "https://zenn.dev/bathtimefish/articles/4988990670ee7d",
          "publishedOn": "2023-09-16T08:45:38.000Z",
          "wordCount": 1151,
          "title": "Open InterpreterをローカルモデルでWSL上で使ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--E0wjzKCN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Open%2520Interpreter%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7WSL%25E4%25B8%258A%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bathtimefish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiNjQyNThkN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--E0wjzKCN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Open%2520Interpreter%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7WSL%25E4%25B8%258A%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bathtimefish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiNjQyNThkN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kazuhito/articles/800e1176270c43",
          "author": "kazuhito",
          "description": "NumPyのmemmap()を使って、OpenCVの画像を他プロセスに受け渡すメモです🦔\n以下のようなイメージ↓\n\n書き込み側のスクリプトからメモリマップドファイルに書き込んで、別スクリプトから読み込む↓\n\n画像の受け渡しデータはメモリマップドファイルに書き込まれているので、書き込み側のスクリプトを終了しても、最後に書き込まれた画像が参照できる↓\n\n再度、書き込み側のスクリプトを実行すればメモリマップドファイルに書き込みが再開するので、読み取り側の表示も更新が再開する↓\n\nそれぞれのスクリプトは以下です。\nメモリマップドファイル書き込み側↓\n\ncv-np-memmap-writer.py...",
          "link": "https://zenn.dev/kazuhito/articles/800e1176270c43",
          "publishedOn": "2023-09-16T08:23:23.000Z",
          "wordCount": 694,
          "title": "【Python】NumPyのmemmap()を使って、OpenCVの画像を他プロセスに受け渡すメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uteczS24--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591NumPy%25E3%2581%25AEmemmap%2528%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581OpenCV%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E4%25BB%2596%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25AB%25E5%258F%2597%25E3%2581%2591%25E6%25B8%25A1%25E3%2581%2599%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuhito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uteczS24--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591NumPy%25E3%2581%25AEmemmap%2528%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581OpenCV%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E4%25BB%2596%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25AB%25E5%258F%2597%25E3%2581%2591%25E6%25B8%25A1%25E3%2581%2599%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuhito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/yuto_mo/articles/9fcf1089c0aade",
          "author": "pomu",
          "description": "今回はpythonのクラスで使用するselfについて解説します。\n\n selfとは\nselfとは\n\nインスタンス自体を指す特殊な変数\n\nです。\n\n インスタンスとは？\nインスタンスはクラスから生成されたオブジェクトのことを指します\nこれはコードで見た方が理解しやすいと思います。\nclass Car:\n    # クラス内の関数をメソッドと呼ぶ\n    # コンストラクタ（初期化メソッド）\n    def __init__(self, color, size):\n        self.color = color  # インスタンス変数colorを設定\n        self.size...",
          "link": "https://zenn.dev/yuto_mo/articles/9fcf1089c0aade",
          "publishedOn": "2023-09-16T08:11:22.000Z",
          "wordCount": 503,
          "title": "selfについて解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FjW18KBj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:self%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FjW18KBj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:self%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/porphyrio/articles/b687a5c757fe75",
          "author": "porphyrio",
          "description": "はじめに\n東工大の機械系の院試の問題をpythonを使って解いてみます。今回は令和1年度 材料力学 を解いていきます。過去問は以下のページにあります。\nhttps://www.titech.ac.jp/admissions/prospective-students/admissions/past-exam-papers\n\n 問題\n\n\n\n 問1\npythonを使う必要がないので普通に解きます。\n(1)\n①\n\n\\alpha L \\Delta T\n\n②\n\n\\alpha L \\Delta T\n(2)\n\n\\lambda=\\varepsilon L=\\frac{\\sigma}{E}L=\\frac...",
          "link": "https://zenn.dev/porphyrio/articles/b687a5c757fe75",
          "publishedOn": "2023-09-16T08:02:47.000Z",
          "wordCount": 1542,
          "title": "東工大機械系院試をpythonで解いてみた[材料力学編]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JTsSV_gP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%259D%2590%25E6%2596%2599%25E5%258A%259B%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JTsSV_gP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%259D%2590%25E6%2596%2599%25E5%258A%259B%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ninnin324/books/64557f0881ce31",
          "author": "にんにん324",
          "description": "短いコードで簡単なブラウザを作ります",
          "link": "https://zenn.dev/ninnin324/books/64557f0881ce31",
          "publishedOn": "2023-09-16T04:30:08.000Z",
          "wordCount": 63,
          "title": "ブラウザを作ろう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Qc4OFQOh--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iZmZkMWY1MjUzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Qc4OFQOh--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iZmZkMWY1MjUzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/raio/articles/5aa3d6f268cbbd",
          "author": "Raio｜高校生エンジニア",
          "description": "はじめに\nみなさん、こんにちは。高校生エンジニアのRaioです🧑🏻‍💻\n平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています！\n今回の記事では、自社開発したい人に向けた自社開発企業に転職出来るサイトを紹介します🗣️\n\n自社開発したい\nIT転職したい\n今より収入を上げたい\n\nこんな方には、おすすめの記事です🥳\nご興味のある方は、是非最後までご覧ください！\n\n クラウドリンクとは？\nみなさん、クラウドリンクはご存知ですか？\nクラウドリンクは株式会社Cloud Linkが運営している転職エージェントです。\n特に自社開発系の求人に特化しています。\n自社開発といえば...",
          "link": "https://zenn.dev/raio/articles/5aa3d6f268cbbd",
          "publishedOn": "2023-09-15T11:25:33.000Z",
          "wordCount": 301,
          "title": "自社開発したい人必見！自社開発企業に転職できるサイトを紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jfUinI6m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E7%25A4%25BE%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E5%25BF%2585%25E8%25A6%258B%25EF%25BC%2581%25E8%2587%25AA%25E7%25A4%25BE%25E9%2596%258B%25E7%2599%25BA%25E4%25BC%2581%25E6%25A5%25AD%25E3%2581%25AB%25E8%25BB%25A2%25E8%2581%25B7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jfUinI6m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E7%25A4%25BE%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E5%25BF%2585%25E8%25A6%258B%25EF%25BC%2581%25E8%2587%25AA%25E7%25A4%25BE%25E9%2596%258B%25E7%2599%25BA%25E4%25BC%2581%25E6%25A5%25AD%25E3%2581%25AB%25E8%25BB%25A2%25E8%2581%25B7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/killy/articles/fc44464c6eb62e",
          "author": "代理構成体",
          "description": "Pythonととのってない\nPythonってライブラリとpython自体の管理が非常に大変です\nこれまでに数多のパッケージングツールや仮想環境ツールが作られてきました\nその度に我々は新しいものに飛びついては, 裏切られ...\nとにかくPythonのエコシステムは無秩序に発展してきたといっても過言ではない\n\n Rye\n上記のPythonのエコシステムを統一したいという気持ちで生まれた、らしい\nFlaskなどで有名な@mitsuhiko氏が作者である。\nhttps://github.com/mitsuhiko/rye?ref=ground-reality.ghost.io\nRust製なの...",
          "link": "https://zenn.dev/killy/articles/fc44464c6eb62e",
          "publishedOn": "2023-09-15T08:51:57.000Z",
          "wordCount": 367,
          "title": "Ryeでととのう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Uw0thKfu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Rye%25E3%2581%25A7%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25AE%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BB%25A3%25E7%2590%2586%25E6%25A7%258B%25E6%2588%2590%25E4%25BD%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmJjODk2MjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Uw0thKfu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Rye%25E3%2581%25A7%25E3%2581%25A8%25E3%2581%25A8%25E3%2581%25AE%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BB%25A3%25E7%2590%2586%25E6%25A7%258B%25E6%2588%2590%25E4%25BD%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmJjODk2MjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/kentoo1/articles/7bc48cb54c55a2",
          "author": "ケントゥ",
          "description": "概要\n今回はモデルの学習と精度の検証を行います。\nデータセットは第2回で用意したAnimeにします。複数のモデルの学習を行い、精度を比較することを目標とします。\n\n run_recbole関数\n初回にも使ったrun_recboleは、次の全てを実行してくれるオールインワンな関数です。\n\nデータの読み込み\nデータの分割（デフォルトでは8:1:1に分割します）\n\n学習データ\n検証データ\nテストデータ\n\n\n学習データと検証データを用いたモデルの学習\n（学習データで学習し、検証データの精度を見て、改善が見られなくなってきたら学習を早期停止します）\nテストデータの精度を算出\n\n今回はただ動かす...",
          "link": "https://zenn.dev/kentoo1/articles/7bc48cb54c55a2",
          "publishedOn": "2023-09-15T08:34:45.000Z",
          "wordCount": 2975,
          "title": "RecBoleを使ってみよう4　モデルの学習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vz3W0lqi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25864%25E3%2580%2580%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Vz3W0lqi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25864%25E3%2580%2580%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b75844912efd6e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-306 B - Base 2\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    a = getIntList()\n\n    r = 0\n    for i in range(len(a)):\n        if a[i] == 0:\n            continue\n        r += (2 ** i)\n\n    print(r)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b75844912efd6e",
          "publishedOn": "2023-09-15T04:09:36.000Z",
          "wordCount": 300,
          "title": "［AtCoder］ABC-306｜B - Base 2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SwktFv_3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-306%25EF%25BD%259CB%2520-%2520Base%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SwktFv_3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-306%25EF%25BD%259CB%2520-%2520Base%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6bf2e05726cd46",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-306 A - Echo\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = list(getString())\n    t = ''\n\n    for c in s:\n        t += (c * 2)\n\n    print(t)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/6bf2e05726cd46",
          "publishedOn": "2023-09-15T04:09:36.000Z",
          "wordCount": 284,
          "title": "［AtCoder］ABC-306｜A - Echo",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cSQpO0kw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-306%25EF%25BD%259CA%2520-%2520Echo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cSQpO0kw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-306%25EF%25BD%259CA%2520-%2520Echo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/shotakaha/articles/1df7d807137f61",
          "author": "shotakaha",
          "description": "GitHub Actions\nPoetry + SphinxでGitHub PagesできるGitHub Actionsです。\n\n .github/workflows/static.yml\n# Simple workflow for deploying static content to GitHub Pages\nname: Deploy Sphinx Document to Pages\n\non:\n  # Runs on pushes targeting the default branch\n  push:\n    branches: [\"main\"]\n\n  # Allows you...",
          "link": "https://zenn.dev/shotakaha/articles/1df7d807137f61",
          "publishedOn": "2023-09-14T14:50:32.000Z",
          "wordCount": 1253,
          "title": "GitHub Pages で Sphinxしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Zl4Xq98d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Pages%2520%25E3%2581%25A7%2520Sphinx%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shotakaha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pSdlNMd19RbGV4akIwRklwYWZjRG1PbHJJdjMyRnVMVFF4THc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Zl4Xq98d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Pages%2520%25E3%2581%25A7%2520Sphinx%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shotakaha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pSdlNMd19RbGV4akIwRklwYWZjRG1PbHJJdjMyRnVMVFF4THc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/bathtimefish/articles/401519803660bb",
          "author": "bathtimefish",
          "description": "はじめに\nPythonの音声処理ライブラリlibrosaがRaspberry Pi 4でインストールエラーが発生したので回避方法を模索。いろいろやってたらなんとかなったのでメモっときます。\n\n 環境\n\nRaspberry Pi 4B 8GB\nuname -a\nLinux raspberrypi 6.1.21-v8+ #1642 SMP PREEMPT Mon Apr  3 17:24:16 BST 2023 aarch64 GNU/Linux\nPython 3.9.2\npip 20.3.4\n\n\n 回避方法\nsudo apt install -y llvm libatlas3-base...",
          "link": "https://zenn.dev/bathtimefish/articles/401519803660bb",
          "publishedOn": "2023-09-14T13:37:02.000Z",
          "wordCount": 322,
          "title": "Raspberry Pi 4でのlibrosaのインストールエラー回避方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jZvfnhI0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%25204%25E3%2581%25A7%25E3%2581%25AElibrosa%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%259B%259E%25E9%2581%25BF%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bathtimefish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiNjQyNThkN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jZvfnhI0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%25204%25E3%2581%25A7%25E3%2581%25AElibrosa%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%259B%259E%25E9%2581%25BF%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bathtimefish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiNjQyNThkN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit20",
          "author": "derwind",
          "description": "目的\nこの記事は大分昔に書いた記事 がベースだったりする[1]。\nこの時はちょっと Qiskit の古い API を使ったのだが、今回はそれも含めて最新の API にまでアップデートしたい。なお、実用性は狙いではない。\n量子コンピューティングの基礎を手を使って学ぶ上での良書に「IBM Quantumで学ぶ量子コンピュータ」があるが、同書 pp.203-210 に掲載された QAOA のコードは新しい Qiskit では動かない。Qiskit Aqua という Deprecated になってしまったパッケージを使っているからである。このコードをQiskit 0.44.0 以降で動くとこ...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit20",
          "publishedOn": "2023-09-14T12:01:49.000Z",
          "wordCount": 2874,
          "title": "Qiskit で遊んでみる (20) — Qiskit Optimization での QAOA",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RlH0ofNg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252820%2529%2520%25E2%2580%2594%2520Qiskit%2520Optimization%2520%25E3%2581%25A7%25E3%2581%25AE%2520QAOA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RlH0ofNg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252820%2529%2520%25E2%2580%2594%2520Qiskit%2520Optimization%2520%25E3%2581%25A7%25E3%2581%25AE%2520QAOA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/raio/articles/bcdacfbf43bcc8",
          "author": "Raio｜高校生エンジニア",
          "description": "はじめに\nみなさん、こんにちは。高校生エンジニアのRaioです！\n平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻\n↓筆者について↓\nhttps://qiita.com/Raio14f/items/ef0fb67685b36298bcb0\n今回の記事では、0円で読めるPythonの技術書5選を紹介します！\n無料で読む方法も紹介してるので、是非最後まで見て頂けると幸いです👍🏻\n\n 技術書を無料で読む方法\nKindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌\n\n200万冊以上の書籍が何冊でも読み放題\n月額98...",
          "link": "https://zenn.dev/raio/articles/bcdacfbf43bcc8",
          "publishedOn": "2023-09-14T11:52:30.000Z",
          "wordCount": 374,
          "title": "【2023年9月】0円で読めるPythonの技術書5選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lEC2SNIa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B49%25E6%259C%2588%25E3%2580%25910%25E5%2586%2586%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258BPython%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B85%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lEC2SNIa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902023%25E5%25B9%25B49%25E6%259C%2588%25E3%2580%25910%25E5%2586%2586%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258BPython%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B85%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Raio%25EF%25BD%259C%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGJiMmU3N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/apo_zenn/articles/1c2a9c0a92a6c6",
          "author": "apo_zenn",
          "description": "このように凡例がはみ出してしまう場合\n\n以下を最後に追加する。\nfig.tight_layout() \n\n 修正後\n\n無事、凡例がFigure内に収められる\n\n plot.を使っている人 (pyplot使用者の場合)\nplt.tihgt_layout()\nでいけます。\n\n 例\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.arange(0,10,0.1)\ny = np.sin(x)\n\n# 表示\nfig, ax = plt.subplots(1,1,figsize=(6,4))\nax.set_title(\"SIN\", ...",
          "link": "https://zenn.dev/apo_zenn/articles/1c2a9c0a92a6c6",
          "publishedOn": "2023-09-14T08:58:58.000Z",
          "wordCount": 362,
          "title": "matplotlibの fig, axで凡例がはみ出る時の対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q1HoBrqZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:matplotlib%25E3%2581%25AE%2520fig%252C%2520ax%25E3%2581%25A7%25E5%2587%25A1%25E4%25BE%258B%25E3%2581%258C%25E3%2581%25AF%25E3%2581%25BF%25E5%2587%25BA%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMWY3NGQ1ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q1HoBrqZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:matplotlib%25E3%2581%25AE%2520fig%252C%2520ax%25E3%2581%25A7%25E5%2587%25A1%25E4%25BE%258B%25E3%2581%258C%25E3%2581%25AF%25E3%2581%25BF%25E5%2587%25BA%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMWY3NGQ1ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ryotajin/articles/19-build-python-by-pyenv-venv",
          "author": "riu",
          "description": "はじめに\nPythonを始める上で最初につまずくのは実行環境の構築だと思います。私もずいぶん苦労した思い出があります。\nさらに頭を悩ませるのがバージョン管理です。ライブラリのバージョンはもちろん、Python自体のバージョンも管理の必要が出てきます。自分でライブラリを作るようになるとこの必要性を強く感じます。\nそこで今回はpyenvとvenvを併用して、Pythonとライブラリのバージョンを管理しつつ環境を構築する方法について解説します。\n本記事の想定はPythonはある程度使ったことがあって、バージョン管理をきちんとやりたくなってきた人です。また、GitHubの操作がたびたび出てく...",
          "link": "https://zenn.dev/ryotajin/articles/19-build-python-by-pyenv-venv",
          "publishedOn": "2023-09-14T07:23:56.000Z",
          "wordCount": 364,
          "title": "pyenvとvenvを利用したPython環境の構築（Windows、macOS対応）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tIjpE_t5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%25E3%2581%25A8venv%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%2588Windows%25E3%2580%2581macOS%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:riu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXFZTjR1WkJYZFo3MEtfeEU0UEllbkdoUGlXdTI0MkpnTmRZSTdEdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tIjpE_t5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%25E3%2581%25A8venv%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%2588Windows%25E3%2580%2581macOS%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:riu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXFZTjR1WkJYZFo3MEtfeEU0UEllbkdoUGlXdTI0MkpnTmRZSTdEdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f9734172210f8e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-305 A - Water Station\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    p = n // 5\n\n    print(p * 5 if n % 5 < 3 else (p + 1) * 5)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f9734172210f8e",
          "publishedOn": "2023-09-14T04:40:39.000Z",
          "wordCount": 274,
          "title": "［AtCoder］ABC-305｜A - Water Station",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FKUmWMhF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-305%25EF%25BD%259CA%2520-%2520Water%2520Station%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FKUmWMhF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-305%25EF%25BD%259CA%2520-%2520Water%2520Station%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d1e5c40c4ea5ac",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-305 B - ABCDEFG\n\n\n\n 提出結果\ndef getStringMap():\n    return input().split()\n\n\ndef main():\n    p, q = getStringMap()\n    d = [3, 1, 4, 1, 5, 9]\n    s = ord(p) - ord('A')\n    e = ord(q) - ord('A')\n\n    print(abs(sum(d[:s]) - sum(d[:e])))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d1e5c40c4ea5ac",
          "publishedOn": "2023-09-14T04:40:38.000Z",
          "wordCount": 337,
          "title": "［AtCoder］ABC-305｜B - ABCDEFG",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vE6Ql8tk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-305%25EF%25BD%259CB%2520-%2520ABCDEFG%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vE6Ql8tk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-305%25EF%25BD%259CB%2520-%2520ABCDEFG%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/cae_taka/articles/421352fa73d4c7",
          "author": "Taka",
          "description": "動機\nCAEの結果（形状やコンター図など）から資料を作成する機会6面視の画像を作成することが、\n多くあると思います。（僕は多かったです。）\nこの作業、やってることは単純ですが案外やってみるとめんどくさいです。\nこういう作業は、自動化ですね。\nちょっと長くなりそうなので2回に分けて書いていきます。\n\n 今回やること\n1回目では、6面視の画像を作成しました。今回は作成した画像を新規作成したエクセルに貼り付けていきます。\n\n プログラムの説明\n\nまずは、エクセルを操作するために。openpyxlとPillowをインストールします。\n\npip install openpyxl\npip ins...",
          "link": "https://zenn.dev/cae_taka/articles/421352fa73d4c7",
          "publishedOn": "2023-09-14T02:51:54.000Z",
          "wordCount": 648,
          "title": "CAEのためのpython5(6面視画像をエクセルに貼り付け)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0ubWmBnv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEpython5%25286%25E9%259D%25A2%25E8%25A6%2596%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AB%25E8%25B2%25BC%25E3%2582%258A%25E4%25BB%2598%25E3%2581%2591%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0ubWmBnv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEpython5%25286%25E9%259D%25A2%25E8%25A6%2596%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AB%25E8%25B2%25BC%25E3%2582%258A%25E4%25BB%2598%25E3%2581%2591%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ohtaman/articles/llm_finetune_lora",
          "author": "ohtaman",
          "description": "三行要約\n\nLLM のファインチューニングでは事実の学習ができないという話があったので、事実の学習の例として、シェイクスピアのRomeoをBobに置き換える実験を行った\n実験では、訓練対象とする層による結果の違いを確認した。アテンション層のみを訓練した場合は、Bobへの置き換えはできなかった。一方、全結合層を含めて訓練した場合は、学習率を調整するとBobへの置き換えができた\nファインチューニングが事実の学習に向いているかはさておき、工夫次第でファインチューニングも事実の学習に利用できる可能性はある\n\n\n 背景\n先月 ChatGPT(GPT-3.5 Turbo) のファインチューニング...",
          "link": "https://zenn.dev/ohtaman/articles/llm_finetune_lora",
          "publishedOn": "2023-09-13T21:19:25.000Z",
          "wordCount": 1349,
          "title": "LLMのファインチューニングで事実の学習ができないのは本当か？ちょっと実験してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JLdJpG9Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E4%25BA%258B%25E5%25AE%259F%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25AF%25E6%259C%25AC%25E5%25BD%2593%25E3%2581%258B%25EF%25BC%259F%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E5%25AE%259F%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohtaman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l3cGFNNU1ua0EwU05mTWNVRE40aVBMVFoxenRJbGJ4ZkE4eXVwLWRzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JLdJpG9Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E4%25BA%258B%25E5%25AE%259F%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25AF%25E6%259C%25AC%25E5%25BD%2593%25E3%2581%258B%25EF%25BC%259F%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E5%25AE%259F%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohtaman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l3cGFNNU1ua0EwU05mTWNVRE40aVBMVFoxenRJbGJ4ZkE4eXVwLWRzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/230913-poetry",
          "author": "knao124",
          "description": "poetryとは\n\nvenv + .lockでバージョン統一できるpip\n高速（遅くない）\nhttps://python-poetry.org/docs/\n\n\n install\n以下参考\n\nhttps://python-poetry.org/docs/\n\n\n 使い方\nprojectでpoetryを使い始める\n\n$ poetry init\n\nなにかpackageをinstallしたいとき\n\n$ poetry add <package_name>\n\ndev環境のみでいいとき\n\n$ poetry add --dev <package_name>\n\n.lockファイル...",
          "link": "https://zenn.dev/knao124/articles/230913-poetry",
          "publishedOn": "2023-09-13T15:02:45.000Z",
          "wordCount": 183,
          "title": "poetryでpythonのpackageを管理する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J0yemqBX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%25E3%2581%25A7python%25E3%2581%25AEpackage%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J0yemqBX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%25E3%2581%25A7python%25E3%2581%25AEpackage%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/tunaproducts/articles/5e30986540bbca",
          "author": "tunaProductsTech(つなぷろテック)",
          "description": "!\n気になる英文記事を引用して記事を書いてみました。\n\n機械学習、ディープラーニングには、\nよくPython言語が用いられますが、\nその理由の一つとして、\n「豊富なライブラリが存在する」 ということが、\n挙げられると思います。\n引用元の記事は、\nタイトルが\n「Top 10 Python Machine Learning Libraries in 2022\n(2022年のPythonの機械学習ライブラリ１０選)」\nとありましたので、\n引用しながら2023年の機械学習のライブラリについて考えてみます。\n\nWith a Python-based machine learning librar...",
          "link": "https://zenn.dev/tunaproducts/articles/5e30986540bbca",
          "publishedOn": "2023-09-13T12:27:43.000Z",
          "wordCount": 1121,
          "title": "【Python、英文引用】機械学習用ライブラリ10選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--T67SF1PE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2581%25E8%258B%25B1%25E6%2596%2587%25E5%25BC%2595%25E7%2594%25A8%25E3%2580%2591%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E7%2594%25A8%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA10%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tunaProductsTec...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTM5NTNkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--T67SF1PE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2581%25E8%258B%25B1%25E6%2596%2587%25E5%25BC%2595%25E7%2594%25A8%25E3%2580%2591%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E7%2594%25A8%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA10%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tunaProductsTec...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTM5NTNkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/bbled/books/pandas_book_2023",
          "author": "超Ｌチカ団編集局",
          "description": "Pandas を使ったデータ処理の演習問題とその回答集です。 対象の読者としては、python の基本的な文法を理解しており、Google Colabolatory もしくはローカルの python 実行環境を使って python のコードを実行することができる方を 想定しています",
          "link": "https://zenn.dev/bbled/books/pandas_book_2023",
          "publishedOn": "2023-09-13T10:52:52.000Z",
          "wordCount": 91,
          "title": "Pandas 演習 100",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8KfZBbgg--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81NjA3YTkyZWUyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8KfZBbgg--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81NjA3YTkyZWUyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b042faf0eb933f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-304 A - First Player\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringListRow(N):\n    return [list(input().split()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    sa = getStringListRow(n)\n\n    s = []\n    a = []\n    for x, y in sa:\n        s.append(x)\n        a.ap...",
          "link": "https://zenn.dev/hyperdb/articles/b042faf0eb933f",
          "publishedOn": "2023-09-13T07:44:20.000Z",
          "wordCount": 399,
          "title": "［AtCoder］ABC-304｜A - First Player",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SZuMXm64--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-304%25EF%25BD%259CA%2520-%2520First%2520Player%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SZuMXm64--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-304%25EF%25BD%259CA%2520-%2520First%2520Player%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/937d0041cfeffe",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-304 B - Subscribers\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n    s = str(n)\n\n    print(s[0:3] + '0' * (len(s) - 3))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/937d0041cfeffe",
          "publishedOn": "2023-09-13T07:44:19.000Z",
          "wordCount": 253,
          "title": "［AtCoder］ABC-304｜B - Subscribers",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_xbbMgOe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-304%25EF%25BD%259CB%2520-%2520Subscribers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_xbbMgOe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-304%25EF%25BD%259CB%2520-%2520Subscribers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/8f77b3d3dd1a12",
          "author": "ryohtaka",
          "description": "はじめに\n2023 年 6 月の Data + AI Summit で発表された English SDK for Apache Spark (pyspark-ai) の概要と、Azure Databricks で pyspark-ai のエンジンに Azure OpenAI Service を指定してデータ分析を行う方法をまとめました。\n\n English SDK for Apache Spark (pyspark-ai) とは\n\n 概要\nEnglish SDK for Apache Spark (pyspark-ai) は Spark 開発をアシストしてくれる、Copilot 的な...",
          "link": "https://zenn.dev/microsoft/articles/8f77b3d3dd1a12",
          "publishedOn": "2023-09-13T06:06:16.000Z",
          "wordCount": 6541,
          "title": "Azure Databricks で English SDK for Apache Spark を使ってデータ分析を効率化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OMmhCKi7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Databricks%2520%25E3%2581%25A7%2520English%2520SDK%2520for%2520Apache%2520Spark%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590...%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OMmhCKi7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Databricks%2520%25E3%2581%25A7%2520English%2520SDK%2520for%2520Apache%2520Spark%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590...%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/roboin/articles/a02e784daa0fde",
          "author": "ろぼいん",
          "description": "phi-1.5とは？\nphi-1.5は、Microsoftがリリースした13億（1.3B）パラメーターのLLMです。Microsoftは6月に、phi-1を発表しており、phi-1.5はその進化版です。\nhttps://huggingface.co/microsoft/phi-1_5\nたったの13億パラメーターしかないにも関わらず、常識、言語理解、論理的推論をテストするベンチマークで、100億パラメーター以下のモデルの中でほぼ最先端の性能を示すそうです。\n学習に「教科書品質」のデータを用いることで、少ないパラメーター数で高い性能を実現しています。\nphi-1.5は、安全性に関わる重要...",
          "link": "https://zenn.dev/roboin/articles/a02e784daa0fde",
          "publishedOn": "2023-09-13T04:11:13.000Z",
          "wordCount": 1142,
          "title": "Microsoftの小型で高性能なLLM「phi-1.5」を試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c4av5qvf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Microsoft%25E3%2581%25AE%25E5%25B0%258F%25E5%259E%258B%25E3%2581%25A7%25E9%25AB%2598%25E6%2580%25A7%25E8%2583%25BD%25E3%2581%25AALLM%25E3%2580%258Cphi-1.5%25E3%2580%258D%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2581%25BC%25E3%2581%2584%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmZDE0NTA0NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c4av5qvf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Microsoft%25E3%2581%25AE%25E5%25B0%258F%25E5%259E%258B%25E3%2581%25A7%25E9%25AB%2598%25E6%2580%25A7%25E8%2583%25BD%25E3%2581%25AALLM%25E3%2580%258Cphi-1.5%25E3%2580%258D%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2581%25BC%25E3%2581%2584%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmZDE0NTA0NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/b48d48aa2869fa",
          "author": "osn_Lofi",
          "description": "Pythonで緯度・経度から距離を算出する方法についてご紹介します。\n機械学習でも役にたつスキルだと思います。\n\n 1.計算式\n弧度法のラジアンを単位とした緯度を\\phi、経度を\\lambdaとします。\n地点Aの緯度・経度を\\phi_1・\\lambda_1、\n地点Bの緯度・経度を\\phi_2・\\lambda_2とします。\nまた、地球の半径は6,371kmとします。\nこの時、地点Aと地点Bの距離は、以下の公式で計算されます。\n\ndistance = 6371 \\times arccos(sin\\phi_1 \\times sin\\phi_2 + cos\\phi_1 \\times cos\\ph...",
          "link": "https://zenn.dev/robes/articles/b48d48aa2869fa",
          "publishedOn": "2023-09-12T21:53:57.000Z",
          "wordCount": 437,
          "title": "【Python】緯度・経度から距離を算出する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aJMpf0WT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E7%25B7%25AF%25E5%25BA%25A6%25E3%2583%25BB%25E7%25B5%258C%25E5%25BA%25A6%25E3%2581%258B%25E3%2582%2589%25E8%25B7%259D%25E9%259B%25A2%25E3%2582%2592%25E7%25AE%2597%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aJMpf0WT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E7%25B7%25AF%25E5%25BA%25A6%25E3%2583%25BB%25E7%25B5%258C%25E5%25BA%25A6%25E3%2581%258B%25E3%2582%2589%25E8%25B7%259D%25E9%259B%25A2%25E3%2582%2592%25E7%25AE%2597%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/takiser/articles/e164ff093a5b66",
          "author": "takiser",
          "description": "import tkinter as tk\nfrom tkinter import ttk\nfrom tkinter import filedialog\nfrom pathlib import Path\n\n\nclass DataModel:\n    def __init__(self):\n        self.selected_folder = None\n        self.selected_files = []\n\n    def set_selected_folder(self, folder_path):\n        self.selected_folder = fold...",
          "link": "https://zenn.dev/takiser/articles/e164ff093a5b66",
          "publishedOn": "2023-09-12T15:06:30.000Z",
          "wordCount": 1930,
          "title": "Tkinter csvフォルダ選択GUI",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rq2uOA8u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tkinter%2520csv%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E9%2581%25B8%25E6%258A%259EGUI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rq2uOA8u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tkinter%2520csv%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E9%2581%25B8%25E6%258A%259EGUI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/ssym/books/8e89577a4eb6fb",
          "author": "SSYM",
          "description": "これは、Pythonを学習・復習するための個人的な備忘録です",
          "link": "https://zenn.dev/ssym/books/8e89577a4eb6fb",
          "publishedOn": "2023-09-12T14:33:52.000Z",
          "wordCount": 56,
          "title": "Python　勉強会",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8ObLD4yD--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mMTJiMjU2MTIyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8ObLD4yD--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mMTJiMjU2MTIyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/73958e64c226bb",
          "author": "yKesamaru",
          "description": "Pythonにおけるappendとextendについて、使い方を誤ると思わぬバグを生むことになります。この記事ではappendとextendの基本的な使い方と、面倒くさいことを考えずに済むように、ラッパー関数を作成し、最後に再利用可能なモジュール化を行います。\n\n\n基本事項\n\nappendとextendの基本的な動作\n\n1. リストに要素を追加する場合\n\n正しい使い方:\n誤用:\n\n\n\n2. リストにリストを追加する場合\n\n正しい使い方:\n誤用:\n\n\n\n3. 上記をforループで使う場合\n\n正しい使い方:\n誤用:\n\n\n\n4. np.ndarrayをリストに追加する場合\n\n正しい使い方:\n...",
          "link": "https://zenn.dev/ykesamaru/articles/73958e64c226bb",
          "publishedOn": "2023-09-12T10:04:40.000Z",
          "wordCount": 2968,
          "title": "`append`と`extend`の違いを知らないと、思わぬバグを生むことになる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--awIh4IEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2560append%2560%25E3%2581%25A8%2560extend%2560%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2580%2581%25E6%2580%259D%25E3%2582%258F%25E3%2581%25AC%25E3%2583%2590%25E3%2582%25B0%25E3%2582%2592%25E7%2594%259F%25E3%2582%2580%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--awIh4IEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2560append%2560%25E3%2581%25A8%2560extend%2560%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2580%2581%25E6%2580%259D%25E3%2582%258F%25E3%2581%25AC%25E3%2583%2590%25E3%2582%25B0%25E3%2582%2592%25E7%2594%259F%25E3%2582%2580%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/cae_taka/articles/e0c85896c66d95",
          "author": "Taka",
          "description": "動機\nCAEの結果（形状やコンター図など）から資料を作成する機会6面視の画像を作成することが、\n多くあると思います。（僕は多かったです。）\nこの作業、やってることは単純ですが案外やってみるとめんどくさいです。\nこういう作業は、自動化ですね。\nちょっと長くなりそうなので2回に分けて書いていきます。\n\n 今回やること\n1回目は、ファイルをドラック＆ドロップすると6面視の画像が作成されるところまでやります。\n今回は、LSTC社（現在は、Ansys社に買収）が作成したLs-Dyna用のフリープリポストである\nlsprepostを自動的に操作して画像を作成します。\n※私が使用しているバージョン...",
          "link": "https://zenn.dev/cae_taka/articles/e0c85896c66d95",
          "publishedOn": "2023-09-12T06:18:39.000Z",
          "wordCount": 1111,
          "title": "CAEのためのPython4(6面視画像の自動作成1)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6mOK6lPs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython4%25286%25E9%259D%25A2%25E8%25A6%2596%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E4%25BD%259C%25E6%2588%25901%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6mOK6lPs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython4%25286%25E9%259D%25A2%25E8%25A6%2596%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E4%25BD%259C%25E6%2588%25901%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b050ac627bfe63",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-303 A - Similar String\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringList():\n    return list(input())\n\n\ndef sc(x, y):\n    r = False\n    if x == y:\n        r = True\n    elif (x == '1' and y == 'l') or (x == 'l' and y == '1'):\n        r = True\n    elif (x == '0' and y ...",
          "link": "https://zenn.dev/hyperdb/articles/b050ac627bfe63",
          "publishedOn": "2023-09-12T04:38:37.000Z",
          "wordCount": 558,
          "title": "［AtCoder］ABC-303｜A - Similar String",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--edppPf2a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-303%25EF%25BD%259CA%2520-%2520Similar%2520String%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--edppPf2a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-303%25EF%25BD%259CA%2520-%2520Similar%2520String%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/03c9e079fbff32",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-303 B - Discord\n\n\n\n 提出結果\nimport math\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, m = getIntMap()\n    a = getIntListRow(m)\n    c = []\n\n    for b in a:\n        for i...",
          "link": "https://zenn.dev/hyperdb/articles/03c9e079fbff32",
          "publishedOn": "2023-09-12T04:38:37.000Z",
          "wordCount": 459,
          "title": "［AtCoder］ABC-303｜B - Discord",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hivDWKus--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-303%25EF%25BD%259CB%2520-%2520Discord%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hivDWKus--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-303%25EF%25BD%259CB%2520-%2520Discord%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/laplace_daemon/articles/598f91c76bb045",
          "author": "Laplace",
          "description": "Flaskを使ってアプリケーションを作成している時に、ちょっとした疑問が浮かんだ箇所がありまして、その疑問を調査によって解消することができたので備忘録として残しておきます。\n\n 実行環境\nOS: Ubuntu 18.04.2 LTS\npython: 3.6.8\nFlask: 1.1.1\n\n 疑問の内容\n以下のFlaskアプリケーションを起動させるファイルを実行してみた時に事件は起こりました。\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/')\ndef hello():\n    return \"Hello World!...",
          "link": "https://zenn.dev/laplace_daemon/articles/598f91c76bb045",
          "publishedOn": "2023-09-11T15:29:32.000Z",
          "wordCount": 943,
          "title": "【Flask】初期化時の一つの謎を解明したので解説【無駄知識】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UyZodqzi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Flask%25E3%2580%2591%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E6%2599%2582%25E3%2581%25AE%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25AE%25E8%25AC%258E%25E3%2582%2592%25E8%25A7%25A3%25E6%2598%258E%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2590%25E7%2584%25A1%25E9%25A7%2584%25E7%259F%25A5%25E8%25AD%2598%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Laplace%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMmU0MWE3MmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UyZodqzi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Flask%25E3%2580%2591%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E6%2599%2582%25E3%2581%25AE%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25AE%25E8%25AC%258E%25E3%2582%2592%25E8%25A7%25A3%25E6%2598%258E%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2590%25E7%2584%25A1%25E9%25A7%2584%25E7%259F%25A5%25E8%25AD%2598%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Laplace%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMmU0MWE3MmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sankichi92/articles/2023-09-11_tellus-traveler",
          "author": "Takahiro Miyoshi",
          "description": "この記事では、tellus-traveler という Python パッケージを使って、衛星データプラットフォーム Tellus の衛星データを検索・取得する方法を紹介します。\ntellus-traveler は pip を使ってインストールできます。\n$ pip install tellus-traveler\n\n API トークンをセットする\ntellus-traveler は Tellus Satellite Data Traveler API を利用します。\nこの API の利用には API トークンが必要なため、Tellus にログインし、https://www.tellusxd...",
          "link": "https://zenn.dev/sankichi92/articles/2023-09-11_tellus-traveler",
          "publishedOn": "2023-09-11T15:00:05.000Z",
          "wordCount": 2273,
          "title": "Python で Tellus の衛星データを検索・取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--emXqX80l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%2520Tellus%2520%25E3%2581%25AE%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25A4%259C%25E7%25B4%25A2%25E3%2583%25BB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takahiro%2520Miyoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29saS1PUm5hclV5ZUljZW45MjZKTGdzalJ5SEtyY3JVc21oTmtWSUNZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--emXqX80l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%2520Tellus%2520%25E3%2581%25AE%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25A4%259C%25E7%25B4%25A2%25E3%2583%25BB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takahiro%2520Miyoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29saS1PUm5hclV5ZUljZW45MjZKTGdzalJ5SEtyY3JVc21oTmtWSUNZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/riontajima/articles/0aab45b7c99c00",
          "author": "田島利恩",
          "description": "はじめに\nはじめまして。新卒エンジニアです。\nPythonでAPIを作る経験をしてみたい、そう感じ今回記事を書かせていただきました。\n\n REST API\nAPIを作成するにあたって、REST APIについて学習しました。\nhttps://tech.012grp.co.jp/entry/rest_api_basics\n上記のサイトは、一つ一つかみ砕いて説明がしてあり、とても分かりやすかったです。\nサイトの内容を簡単にまとめると\n\nRESTは「RESTの4原則に沿ったシンプルな設計思想」のことで、\n　　①統一インターフェース\n　　②アドレス可能性\n　　③接続性\n　　④ステートレス性\n　...",
          "link": "https://zenn.dev/riontajima/articles/0aab45b7c99c00",
          "publishedOn": "2023-09-11T12:31:25.000Z",
          "wordCount": 1271,
          "title": "PythonでWebAPI作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A8QKkrPy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7WebAPI%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%25B0%25E5%25B3%25B6%25E5%2588%25A9%25E6%2581%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WUgzdHJsdUR0TnhqRHFWNHF1ZzBXYXRPZ0EwWHh3VUxCZUtIOFk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A8QKkrPy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7WebAPI%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%25B0%25E5%25B3%25B6%25E5%2588%25A9%25E6%2581%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WUgzdHJsdUR0TnhqRHFWNHF1ZzBXYXRPZ0EwWHh3VUxCZUtIOFk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/sikkim/articles/bc86fbcac3a9fd",
          "author": "TAKAHASHI Taro",
          "description": "!\n注意：この記事はかなり長いです。\n\n\n はじめに\n数か月ほど前、住所の正規化が話題になりました。こちらの記事が特に有名ですね。\nhttps://note.com/inuro/n/n7ec7cf15cf9c\n関連して、こちらの記事も話題になりました。\nhttps://yoshinorinie.hatenablog.com/entry/2023/06/09/091804\n当時はほかにも色々な人が日本のヤバい住所の例をあげてくれて、とても楽しかったです。\n実は弊社でもAddressianという住所正規化サービスを提供しています。初めて目にする変わった住所を見かけたら、とりあえず自社のAPI...",
          "link": "https://zenn.dev/sikkim/articles/bc86fbcac3a9fd",
          "publishedOn": "2023-09-11T08:04:36.000Z",
          "wordCount": 3044,
          "title": "住所正規化のデモ機能を作ったので、日本のヤバい住所を入力してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uqOZJ-Ud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%258F%25E6%2589%2580%25E6%25AD%25A3%25E8%25A6%258F%25E5%258C%2596%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25A2%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E6%2597%25A5%25E6%259C%25AC%25E3%2581%25AE%25E3%2583%25A4%25E3%2583%2590%25E3%2581%2584%25E4%25BD%258F%25E6%2589%2580%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKAHASHI%2520Taro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMWVmZDc1ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uqOZJ-Ud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%258F%25E6%2589%2580%25E6%25AD%25A3%25E8%25A6%258F%25E5%258C%2596%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25A2%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E6%2597%25A5%25E6%259C%25AC%25E3%2581%25AE%25E3%2583%25A4%25E3%2583%2590%25E3%2581%2584%25E4%25BD%258F%25E6%2589%2580%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TAKAHASHI%2520Taro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMWVmZDc1ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/bfd92e1cea3b76",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-302 A - Attack\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    c = a // b\n\n    print(c if a % b == 0 else c + 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/bfd92e1cea3b76",
          "publishedOn": "2023-09-11T05:26:01.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-302｜A - Attack",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DSQiYS3l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-302%25EF%25BD%259CA%2520-%2520Attack%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DSQiYS3l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-302%25EF%25BD%259CA%2520-%2520Attack%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/af130ee6bf2127",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-302 B - Find snuke\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringListRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef chk(l, s):\n    p = [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]]\n\n    for i in range(len(p)):\n    ...",
          "link": "https://zenn.dev/hyperdb/articles/af130ee6bf2127",
          "publishedOn": "2023-09-11T05:26:00.000Z",
          "wordCount": 944,
          "title": "［AtCoder］ABC-302｜B - Find snuke",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gPZGHOv9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-302%25EF%25BD%259CB%2520-%2520Find%2520snuke%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gPZGHOv9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-302%25EF%25BD%259CB%2520-%2520Find%2520snuke%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nii/articles/lower-upper-comparison",
          "author": "nii",
          "description": "概要\nPythonの文字列で、\"Python\"のような文字列を\"python”に変換したいことがあります。\n本記事では、大文字や小文字を判定する方法や変換する方法をまとめました。\nまた、大量の文字列に対して変換する際の速度比較も実施しました。\n\n 変換方法\n\n 大文字から小文字に変換\nstr型のlower()を使用します。\nhttps://docs.python.org/ja/3/library/stdtypes.html#str.lower\nupper_str = \"THIS IS UPPERCASE\"\nto_lower_str = upper_str.lower()\n\nprint...",
          "link": "https://zenn.dev/nii/articles/lower-upper-comparison",
          "publishedOn": "2023-09-11T04:56:30.000Z",
          "wordCount": 1026,
          "title": "Pythonで大文字と小文字の変換と速度比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fEAJG_nk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25A4%25A7%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25A8%25E5%25B0%258F%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25A8%25E9%2580%259F%25E5%25BA%25A6%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5M2FmMTYyNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fEAJG_nk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25A4%25A7%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25A8%25E5%25B0%258F%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25A8%25E9%2580%259F%25E5%25BA%25A6%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5M2FmMTYyNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/taishii/articles/04964001eb644d",
          "author": "taishi-i",
          "description": "Huggingface Datasets で利用可能なテキスト分類用データセットを公開しました🤗\nこのデータセットは、GitHub リポジトリに対して日本語の自然言語処理（NLP）に関連するか否かのラベルが付与されています。\nさらにベースライン用のモデルも公開しましたので、大規模言語モデルの性能評価の比較に活用いただければと考えています。\nこの記事では、データセットの詳細、利用方法やベースラインモデルのエラー分析の結果を紹介します。\nhttps://huggingface.co/datasets/taishi-i/awesome-japanese-nlp-classification-d...",
          "link": "https://zenn.dev/taishii/articles/04964001eb644d",
          "publishedOn": "2023-09-11T03:31:34.000Z",
          "wordCount": 1407,
          "title": "日本語 NLP リポジトリ分類データセットを公開しました！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P-HEvzW0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%2520NLP%2520%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E5%2588%2586%25E9%25A1%259E%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taishi-i%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4OGM2ZjQwMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P-HEvzW0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%2520NLP%2520%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E5%2588%2586%25E9%25A1%259E%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taishi-i%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4OGM2ZjQwMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png"
        },
        {
          "id": "https://zenn.dev/nakurei/articles/understand-python-enumerate",
          "author": "NakuRei",
          "description": "これはなに\nEffective Python 第2版の項目7「rangeではなくenumerateを使おう」において、下記の記述があった。\n\nenumerateは、遅延評価ジェネレータでイテレータをラップします。\nenumerateは、ループのインデックスとイテレータの次の値の対をyieldします。\n\nこの記述の意味がさっぱりわからなかったので調べた。\n\n そもそもenumerateとは\nenumerateはPythonの組み込み関数のひとつである。\nenumerate(iterable, start=0)\n\n 引数\n\n\n\n引数\n名前\n渡すもの\n\n\n\n\n第1引数\niterable\nシ...",
          "link": "https://zenn.dev/nakurei/articles/understand-python-enumerate",
          "publishedOn": "2023-09-10T23:37:14.000Z",
          "wordCount": 1064,
          "title": "Pythonのenumerateの挙動を理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Xicu7Ys_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEenumerate%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjNThmYWI0YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Xicu7Ys_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEenumerate%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjNThmYWI0YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takiser/articles/c64fc753129791",
          "author": "takiser",
          "description": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nfrom mpl_toolkits.mplot3d import Axes3D\n\n\nclass SingleLotDataModel:\n    def __init__(self, csvPath):\n        self.timeFromStart = \"TimeFromStart\"\n        self.timeFromPlane = \"TimeFromPlane\"\n        self.timeFromLayer = ...",
          "link": "https://zenn.dev/takiser/articles/c64fc753129791",
          "publishedOn": "2023-09-10T14:08:08.000Z",
          "wordCount": 2264,
          "title": "plt3d",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5KYgSmMR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:plt3d%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5KYgSmMR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:plt3d%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tunaproducts/articles/a04e86c050f50a",
          "author": "tunaProductsTech(つなぷろテック)",
          "description": "!\n文系向けに書かれたAIの本を読んでみたので、レビューを書きました。内容のネタバレはしないように配慮いたします。\n\n\n 読んだ本\n\nタイトル：文系AI人材になる\n著者：野口竜司\n\nhttps://www.amazon.co.jp/文系ＡＩ人材になる―統計・プログラム知識は不要-野口-竜司-ebook/dp/B0828D1TYR/ref=sr_1_1?adgrpid=134580030913&gclid=CjwKCAiA3KefBhByEiwAi2LDHBAsdVGfPZ_NywYgCVA4ENmaOVZwTkqyaE6S4I4u27cFWBUnxS2yGxoCqLwQAvD_...",
          "link": "https://zenn.dev/tunaproducts/articles/a04e86c050f50a",
          "publishedOn": "2023-09-10T13:55:19.000Z",
          "wordCount": 211,
          "title": "【AI】AIの本を読んだのでレビュー(その2:文系向けのAI関連本)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mp3i53Jl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AI%25E3%2580%2591AI%25E3%2581%25AE%25E6%259C%25AC%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25AE%25E3%2581%25A7%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2528%25E3%2581%259D%25E3%2581%25AE2%253A%25E6%2596%2587%25E7%25B3%25BB%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AEAI%25E9%2596%25A2%25E9%2580%25A3%25E6%259C%25AC%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tunaProductsTec...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5NzI0MzQ2NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mp3i53Jl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AI%25E3%2580%2591AI%25E3%2581%25AE%25E6%259C%25AC%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25AE%25E3%2581%25A7%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2528%25E3%2581%259D%25E3%2581%25AE2%253A%25E6%2596%2587%25E7%25B3%25BB%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AEAI%25E9%2596%25A2%25E9%2580%25A3%25E6%259C%25AC%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tunaProductsTec...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5NzI0MzQ2NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/c6tower/articles/c43e9f2fa93f5a",
          "author": "み",
          "description": "要約\n\nApache AirflowのDAGには標準でExponential Backoff And Jitterが用意されている\n2.5.3以前と2.6.0以降でretry間隔の最大値に変更があった模様\n\n\n 前提\n\n Airflowのversionは？\n2.5.3。\n一部、2.6.0の話も出てくる。\n執筆時の最新バージョンは2.7.1。\n\n Exponential Backoffとは？\nしっかりと理解したい人向け: AWSのブログがオススメ\nhttps://aws.amazon.com/jp/blogs/architecture/exponential-backoff-and-j...",
          "link": "https://zenn.dev/c6tower/articles/c43e9f2fa93f5a",
          "publishedOn": "2023-09-10T12:37:40.000Z",
          "wordCount": 1060,
          "title": "Apache AirflowのExponential Backoffを読み解く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0rZNvPo4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Airflow%25E3%2581%25AEExponential%2520Backoff%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkZWRhOGYwMDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0rZNvPo4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Airflow%25E3%2581%25AEExponential%2520Backoff%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkZWRhOGYwMDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/5f58fecdb8411d",
          "author": "sergicalsix",
          "description": "はじめに\n自然言語生成（Natural Language Generation, NLG）は、AIと自然言語処理（NLP）の興味深い分野の一つです。Hugging FaceのTransformersライブラリは、このようなタスクを簡単に行うための多くのツールを提供しています。\nこの記事では、Transformersライブラリを使って自然言語生成を簡単に行うための自作ラッパークラスを紹介します。\n自作ラッパークラスの特徴は以下です。\n\n簡単な初期化: モデル名を指定するだけで、tokenizerとmodelが自動的に初期化されます。\n柔軟なオプション: エンコード、生成、デコードの各ス...",
          "link": "https://zenn.dev/sergicalsix/articles/5f58fecdb8411d",
          "publishedOn": "2023-09-10T10:50:00.000Z",
          "wordCount": 1402,
          "title": "Transformersライブラリで自然言語生成（NLG）を簡単に！自作ラッパークラスの作成と使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MawW-A2r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformers%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A7%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E7%2594%259F%25E6%2588%2590%25EF%25BC%2588NLG%25EF%25BC%2589%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25EF%25BC%2581%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MawW-A2r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformers%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A7%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E7%2594%259F%25E6%2588%2590%25EF%25BC%2588NLG%25EF%25BC%2589%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25EF%25BC%2581%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/b5cc85b4d1e7eb",
          "author": "Shun",
          "description": "注意\n\nここで日本語に関連するとしているunicodeの範囲は以下とする.\nunicode正規化(NFC)を使えば大体はカバーしていると思われるが, 足りない・入れて欲しい部分部分等があればコメントをお願いします.\n\n\n\nhiragana (U+3040 to U+309F): Hiragana PDF\n\n\nkatakana (U+30A0 to U+30FF): Katakana PDF\n\n\nkatakana_half_width (U+FF65 to U+FF9F): Half-width Katakana PDF\n\n\nkatakana_phonetic_extensions (...",
          "link": "https://zenn.dev/shundeveloper/articles/b5cc85b4d1e7eb",
          "publishedOn": "2023-09-10T10:33:54.000Z",
          "wordCount": 2162,
          "title": "日本語に関連するunicodeの範囲一文字を指定する正規表現マッチオブジェクトを作成する関数の作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--o6HPwgUI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AB%25E9%2596%25A2%25E9%2580%25A3%25E3%2581%2599%25E3%2582%258Bunicodew_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shun%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--o6HPwgUI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AB%25E9%2596%25A2%25E9%2580%25A3%25E3%2581%2599%25E3%2582%258Bunicodew_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shun%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/blueman/articles/7faaae8e09e26d",
          "author": "ブルーマン",
          "description": "この記事はQiitaの記事の転載です!!\nQiitaの記事はこちら!!\nhttps://qiita.com/blueman/items/ebd7ff126704bcdbf93d\n\n\n 目次\nはじめに\n実行環境\nwebカメラの幅と高さの取得方法\nメインウィンドウのサイズの設定方法\nリアルタイム映像の表示領域の設定方法\nスライドバーで小数を扱う方法\nスライドバーの設定方法\nガンマ補正の実装方法\nルックアップテーブルの作成方法\nガンマ補正の処理方法\nリアルタイム画像のtkinterでの表示方法\n定期的に処理を実行する方法\nソースコード\n結果\nまとめ\n\n はじめに\n今回は、前回のTwitter(...",
          "link": "https://zenn.dev/blueman/articles/7faaae8e09e26d",
          "publishedOn": "2023-09-10T10:00:00.000Z",
          "wordCount": 1963,
          "title": "ガンマ補正を用いたリアルタイム映像の明るさ調整【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jDBYX1gZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AC%25E3%2583%25B3%25E3%2583%259E%25E8%25A3%259C%25E6%25AD%25A3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%2598%25A0%25E5%2583%258F%25E3%2581%25AE%25E6%2598%258E%25E3%2582%258B%25E3%2581%2595%25E8%25AA%25BF%25E6%2595%25B4%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jDBYX1gZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AC%25E3%2583%25B3%25E3%2583%259E%25E8%25A3%259C%25E6%25AD%25A3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%2598%25A0%25E5%2583%258F%25E3%2581%25AE%25E6%2598%258E%25E3%2582%258B%25E3%2581%2595%25E8%25AA%25BF%25E6%2595%25B4%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/044dfe042c327e",
          "author": "xxyyzz",
          "description": "Visitor パターンは、オブジェクトの構造からアルゴリズムを分離することで、構造が変更されない限り、新しい操作を追加できるようにするデザインパターンです。このパターンは、構造内の各要素に対して訪問者が実行する操作を表すことができる Visitor クラスを使用します。\n\n 主要な構成要素:\n\n\nVisitor (訪問者): 具体的な訪問者を表すクラスまたはインターフェース。\n\nConcreteVisitor (具体的な訪問者): 特定のアルゴリズムを実行するためのVisitorの具体的な実装。\n\nElement (要素): Visitor クラスが訪問する要素のインターフェース。\n\n...",
          "link": "https://zenn.dev/xxyyzz/articles/044dfe042c327e",
          "publishedOn": "2023-09-10T07:19:17.000Z",
          "wordCount": 479,
          "title": "Visitor",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1ZnmmZLm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Visitor%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1ZnmmZLm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Visitor%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/2d866877e5db55",
          "author": "xxyyzz",
          "description": "Template Method パターンは、アルゴリズムの骨格を定義するが、一部のステップをサブクラスに委譲することでアルゴリズムの構造を変更することなく特定のステップをオーバーライドするデザインパターンです。\n\n 主要な構成要素:\n\n\nAbstract Class (抽象クラス): アルゴリズムの骨格を定義するテンプレートメソッドを持つクラス。このクラスは、オーバーライド可能な一部のステップを定義することもできます。\n\nConcrete Class (具体クラス): 抽象クラスのメソッドをオーバーライドして具体的な実装を提供するクラス。\n\n\n 例:\n簡単な料理の手順を考えてみましょう。...",
          "link": "https://zenn.dev/xxyyzz/articles/2d866877e5db55",
          "publishedOn": "2023-09-10T07:18:40.000Z",
          "wordCount": 548,
          "title": "Template Method",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--prmweREr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Template%2520Method%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--prmweREr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Template%2520Method%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/c29bb8fd716323",
          "author": "xxyyzz",
          "description": "Strategy デザインパターンは、アルゴリズムのセットを定義し、それぞれのアルゴリズムをカプセル化するもので、これによりアルゴリズムを互いに独立して変更したり交換したりできます。\n基本的には、アルゴリズムの実装の詳細を隠蔽しながら、クライアント側から異なるアルゴリズムや戦略を選択・交換する能力を提供します。\n\n Strategy パターンの具体的な例：ソートアルゴリズム\n例として、異なる種類のソートアルゴリズムを適用するシステムを考えます。\n\n\nStrategy (インターフェース/抽象クラス)\nfrom abc import ABC, abstractmethod\n\nclass S...",
          "link": "https://zenn.dev/xxyyzz/articles/c29bb8fd716323",
          "publishedOn": "2023-09-10T07:18:01.000Z",
          "wordCount": 865,
          "title": "Strategy",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hClnvWuP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Strategy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hClnvWuP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Strategy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/9f0eaa9f91f5f6",
          "author": "xxyyzz",
          "description": "State パターンは、オブジェクトの内部状態が変わるたびにオブジェクトの動作を変更するためのデザインパターンです。このパターンは、オブジェクトが状態ごとに異なる動作を持つ場合や、複雑な条件や分岐がオブジェクトの動作に関連する場合に役立ちます。\n\n 主要な構成要素:\n\n\nContext (文脈): 現在の状態を定義し、クライアントに対して一貫したインターフェースを提供するクラス。\n\nState (状態): すべての具体的な状態が実装すべきインターフェース。\n\nConcreteState (具体的な状態): State インターフェースを実装し、Contextの状態に関連する特定の動作を提...",
          "link": "https://zenn.dev/xxyyzz/articles/9f0eaa9f91f5f6",
          "publishedOn": "2023-09-10T07:17:23.000Z",
          "wordCount": 506,
          "title": "State",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QswmGlnM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:State%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QswmGlnM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:State%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/996a06f8438e37",
          "author": "xxyyzz",
          "description": "Observer パターンは、オブジェクトの状態の変更が他のオブジェクトに影響を及ぼす場合に、これらのオブジェクト間の依存関係を定義するデザインパターンです。状態が変更されたときに自動的に通知されるオブジェクトを登録します。\n\n 主要な構成要素:\n\n\nSubject (被験者): Observerを追加、削除、通知するメソッドを持つオブジェクト。\n\nObserver (観察者): Subjectからの更新を受け取るオブジェクトのインターフェース。\n\nConcreteObserver (具体的な観察者): Observerインターフェースを実装するオブジェクトで、Subjectからの更新を...",
          "link": "https://zenn.dev/xxyyzz/articles/996a06f8438e37",
          "publishedOn": "2023-09-10T07:16:39.000Z",
          "wordCount": 575,
          "title": "Observer",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G4768KIx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Observer%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G4768KIx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Observer%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/ef204d8b60a043",
          "author": "xxyyzz",
          "description": "Memento パターンは、オブジェクトの内部状態をキャプチャし、後でそのオブジェクトをその状態に戻す方法を提供するデザインパターンです。これにより、オブジェクトの状態を変更した後でも、変更を元に戻す（アンドゥ）操作が可能になります。\n\n 主要な構成要素:\n\n\nOriginator (発行者): 状態を持つオブジェクト。Mementoを作成し、前の状態に戻すためにそれを使用します。\n\nMemento (記念品): Originatorの内部状態のスナップショットを保持するオブジェクト。\n\nCaretaker (保管者): Mementoの保管と状態の復元を管理するオブジェクト。\n\n\n 例...",
          "link": "https://zenn.dev/xxyyzz/articles/ef204d8b60a043",
          "publishedOn": "2023-09-10T07:15:51.000Z",
          "wordCount": 523,
          "title": "Memento",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6YQdxd7w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Memento%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6YQdxd7w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Memento%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/53860a9a493ce2",
          "author": "xxyyzz",
          "description": "Mediator パターンは、オブジェクト間の通信をカプセル化するオブジェクトを定義するデザインパターンです。このパターンは、オブジェクトが直接通信するのではなく、Mediatorオブジェクトを介して通信することで、オブジェクト間の依存関係を減少させ、疎結合を促進します。\n\n 主要な構成要素:\n\n\nMediator (仲介者): すべての通信をコーディネートするインターフェースや抽象クラス。\n\nConcreteMediator (具体的な仲介者): Mediatorの具体的な実装で、Colleagueオブジェクト間の通信を調整します。\n\nColleague (同僚): 通信を行うオブジェ...",
          "link": "https://zenn.dev/xxyyzz/articles/53860a9a493ce2",
          "publishedOn": "2023-09-10T07:15:16.000Z",
          "wordCount": 640,
          "title": "Mediator",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vS9mfOrh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Mediator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vS9mfOrh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Mediator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/95782e76463ce3",
          "author": "xxyyzz",
          "description": "Interpreter パターンは、特定のタスクのための言語を解釈するための表現を定義し、それを使用して文を解釈するための解釈機を使用するデザインパターンです。これは主に、繰り返し発生する問題のための簡単な言語を作成する場合に使用されます。\n\n 主要な構成要素:\n\n\nAbstractExpression (抽象表現): すべての具体的な表現の共通の操作を定義するインターフェースや抽象クラス。\n\nTerminalExpression (終端表現): 文中の終端記号を表す。\n\nNonTerminalExpression (非終端表現): 文中の非終端記号を表す。\n\nContext (文脈):...",
          "link": "https://zenn.dev/xxyyzz/articles/95782e76463ce3",
          "publishedOn": "2023-09-10T07:14:41.000Z",
          "wordCount": 565,
          "title": "Interpreter",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KoFrobr9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Interpreter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KoFrobr9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Interpreter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/a4052adc76df9c",
          "author": "xxyyzz",
          "description": "Command パターンは、リクエストをオブジェクトとしてカプセル化し、遅延実行やキュー、ログ取り、トランザクションなどのサポートを可能にするデザインパターンです。このパターンを使用することで、リクエストの送信者と受信者を分離できます。\n\n 主要な構成要素:\n\n\nCommand (コマンド): 実行されるアクションを表すインターフェースや抽象クラス。\n\nConcreteCommand (具体的なコマンド): Command インターフェースを実装する具体的なクラス。\n\nInvoker (起動者): Command の実行を要求するクラス。\n\nReceiver (受信者): コマンドの実際...",
          "link": "https://zenn.dev/xxyyzz/articles/a4052adc76df9c",
          "publishedOn": "2023-09-10T07:14:08.000Z",
          "wordCount": 434,
          "title": "Command",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lYRjG0tK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Command%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lYRjG0tK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Command%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/bf2ba5000a4b6e",
          "author": "xxyyzz",
          "description": "Chain of Responsibility パターンは、複数のオブジェクトを一連の処理手段として連鎖させ、リクエストをこのチェーン上で逐次的に処理させるデザインパターンです。これにより、リクエストの送信者と受信者を分離し、処理を行うオブジェクトを動的に指定できます。\n\n 主要な構成要素:\n\n\nHandler (ハンドラ): 処理要求を持つインターフェースや抽象クラス。\n\nConcreteHandler (具体的なハンドラ): Handler インターフェースを実装する具体的なクラス。次のハンドラへの参照を持つこともできます。\n\n\n 例:\nログの重要度に応じて、異なるログレベルでのメッ...",
          "link": "https://zenn.dev/xxyyzz/articles/bf2ba5000a4b6e",
          "publishedOn": "2023-09-10T07:13:36.000Z",
          "wordCount": 643,
          "title": "Chain of Responsibility",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--13YJLUC9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Chain%2520of%2520Responsibility%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--13YJLUC9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Chain%2520of%2520Responsibility%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/3fa688f3446462",
          "author": "xxyyzz",
          "description": "Proxy パターンは、別のオブジェクトへのアクセスを制御するための代理または置き換えオブジェクトを提供するデザインパターンです。プロキシは元のオブジェクトと同じインターフェースを持っており、クライアントはプロキシを通じて元のオブジェクトにアクセスします。\n\n 主要な構成要素:\n\n\nSubject (対象): RealSubject と Proxy が共有するインターフェースや抽象クラス。\n\nRealSubject (実対象): Proxy が代表する実際のオブジェクト。\n\nProxy (代理): RealSubject へのアクセスを制御するオブジェクト。\n\n\n 例:\nデータベースへの...",
          "link": "https://zenn.dev/xxyyzz/articles/3fa688f3446462",
          "publishedOn": "2023-09-10T07:09:48.000Z",
          "wordCount": 371,
          "title": "Proxy",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y6lLd3W9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Proxy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y6lLd3W9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Proxy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/3f12416eb2b0be",
          "author": "xxyyzz",
          "description": "Flyweight パターンは、大量の類似したオブジェクトを効率的に共有することで、メモリの使用を最適化するデザインパターンです。このパターンは、オブジェクトの共通のデータを外部のデータ構造に保持し、オブジェクト自体はそのデータへの参照のみを持つことで、メモリ使用量を削減します。\n\n 主要な構成要素:\n\n\nFlyweight (フライウェイト): すべての具象フライウェイトが共有するインターフェースや抽象クラス。\n\nConcreteFlyweight (具象フライウェイト): 共有される具体的なオブジェクト。\n\nFlyweightFactory (フライウェイト工場): 既存のフライウェ...",
          "link": "https://zenn.dev/xxyyzz/articles/3f12416eb2b0be",
          "publishedOn": "2023-09-10T07:09:12.000Z",
          "wordCount": 442,
          "title": "Flyweight",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r8LUf1ol--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Flyweight%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--r8LUf1ol--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Flyweight%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/xxyyzz/articles/13967a4ff7b76e",
          "author": "xxyyzz",
          "description": "Facade（ファサード）パターンは、複雑なサブシステムのインターフェースを単純化するためのデザインパターンです。このパターンでは、シンプルな一つのインターフェースを介してサブシステムの一連のインターフェースにアクセスできるようにします。これにより、サブシステムを使用するクライアントは、サブシステム内部の複雑さを知らなくてもその機能を利用できます。\n\n 主要な構成要素:\n\n\nFacade (ファサード): クライアントからのリクエストを適切なサブシステムのオブジェクトに転送する役割を持つクラス。\n\nSubsystem (サブシステム): ファサードによってラップされる一連の複雑なクラスや...",
          "link": "https://zenn.dev/xxyyzz/articles/13967a4ff7b76e",
          "publishedOn": "2023-09-10T07:08:27.000Z",
          "wordCount": 545,
          "title": "Facade",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yf0GWB5Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Facade%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yf0GWB5Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Facade%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xxyyzz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNMRkloLXNFRlFEbkYwR0hSX3Y2eHp2Vko0dmVrcTdHQ1ZXRFhSX25GQXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tunaproducts/articles/de841b91a1a856",
          "author": "tunaProducts<tech>(つなぷろテック)",
          "description": "!\nAI関連本を読んだのでレビューをしてみます\n\n\n 読んだ本\n\nタイトル：\n投資対効果を最大化するAI導入7つのルール\n著者：石川聡彦(株式会社アイデミー社長)\n\nhttps://www.amazon.co.jp/投資対効果を最大化する-AI導入７つのルール-石川-聡彦-ebook/dp/B0854G2KS3\n※Kindle版もあり、\nKindle Unlimited会員は追加料金なしで読めます。\n\n レビュー（最高★★★⇔最低☆☆☆）\n読みやすさ　★★☆\n専門性　　　★★☆\n総合　　　　★★☆\n\n 全体概略\n本著の序文には以下のように記されています。\n\n技術としては草創期、歴史の浅...",
          "link": "https://zenn.dev/tunaproducts/articles/de841b91a1a856",
          "publishedOn": "2023-09-10T00:44:32.000Z",
          "wordCount": 194,
          "title": "【AI】AIの本を読んだのでレビュー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ox72TF9H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AI%25E3%2580%2591AI%25E3%2581%25AE%25E6%259C%25AC%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25AE%25E3%2581%25A7%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tunaProducts%253Cte...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5NzI0MzQ2NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ox72TF9H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AI%25E3%2580%2591AI%25E3%2581%25AE%25E6%259C%25AC%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25AE%25E3%2581%25A7%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tunaProducts%253Cte...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5NzI0MzQ2NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pilefort/articles/a286144465cb6b",
          "author": "pilefort",
          "description": "対象\n\nPythonのFastAPIをAWS Lambdaで動かしたい人\nカスタムイメージを使ってビルドしたい人\nローカルでの動作確認方法を知りたい人\nAWSのリソース作成の概略を知りたい人\n\n\n 利用するライブラリのバージョン\n以下のライブラリを利用します。\nfastapiは執筆時点での最新版、mangumは0.11.0より新しいバージョンだとエラーが発生するため、このバージョンとしてます。\npydanticやstarlette, typing-extensionsはfastapiやmangumの依存ライブラリです。\nfastapi==0.103.1\npydantic==2.3.0...",
          "link": "https://zenn.dev/pilefort/articles/a286144465cb6b",
          "publishedOn": "2023-09-09T16:26:50.000Z",
          "wordCount": 930,
          "title": "FastAPI (mangum) を AWS Lambda で動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hrPlAEVi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%2528mangum%2529%2520%25E3%2582%2592%2520AWS%2520Lambda%2520%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pilefort%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvcC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hrPlAEVi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%2528mangum%2529%2520%25E3%2582%2592%2520AWS%2520Lambda%2520%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pilefort%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvcC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nishimoto/articles/4b7d0fe2592504",
          "author": "nishimoto",
          "description": "結論とソースコード\nこんな感じでTrainerのcallbacksにtransformers.TrainerCallbackを継承したクラスを渡せばOK。\ndef init_logger(log_file='train.log'):\n    from logging import getLogger, INFO, FileHandler, Formatter, StreamHandler\n    logger = getLogger(__name__)\n    logger.setLevel(INFO)\n    handler1 = StreamHandler()\n    handl...",
          "link": "https://zenn.dev/nishimoto/articles/4b7d0fe2592504",
          "publishedOn": "2023-09-09T12:18:06.000Z",
          "wordCount": 490,
          "title": "HuggingfaceのTrainer.train()でログを残す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RUBm8sFF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Huggingface%25E3%2581%25AETrainer.train%2528%2529%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E6%25AE%258B%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RUBm8sFF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Huggingface%25E3%2581%25AETrainer.train%2528%2529%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E6%25AE%258B%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/huraipan/articles/5a2be9823f8716",
          "author": "huraipan",
          "description": "今日は簡単にf-Stringの使い方を勉強しましょう。\n\nsuji = 12\n\nprint(\"sujiは \" + suji + \"です。\")   ## error\n\n今までintとかfloatをstringと一緒にprint()関数の中で使うためにintをStringに変更して少し面倒くさいでした\nsuji = 12\n\nprint(\"sujiは \" + str(suji) + \"です。\")   ## sujiは 12です。\n\n\nしかしf-Stringを使ったらもっと簡単にできます。\nまずダブルクォーテーションの前にfを付きます。\nそして使いたいintとかfloat関数名を{}の中に書きま...",
          "link": "https://zenn.dev/huraipan/articles/5a2be9823f8716",
          "publishedOn": "2023-09-09T07:36:14.000Z",
          "wordCount": 191,
          "title": "[Python] Stringと数字を一緒に出力(f-String)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--619YJ12w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520String%25E3%2581%25A8%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E4%25B8%2580%25E7%25B7%2592%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%2528f-String%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--619YJ12w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520String%25E3%2581%25A8%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E4%25B8%2580%25E7%25B7%2592%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%2528f-String%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ttttkkkkk/articles/295089fcf26129",
          "author": "Taqqn",
          "description": "はじめに\nPythonと互換性がありながら、高速化された新言語 Mojoが一般公開され、色々触ってみています。\nMojo の特徴として、型に以下の3種類が存在することが挙げられます。\n\nムーブ・コピー不可\nムーブ可能\n\n\n__moveinit__ の実装が条件\n\n\nコピー・ムーブ可能\n\n\n__copyinit__ の実装が条件\nムーブの時には__moveinit__ があればそちらがよばれるし、なければ__copyinit__が呼ばれる\n\n\n\nこの3種類をうまく使うことで所有権の管理が可能です。\nまた\na = b^\nのような ^ transfer 演算子が呼ばれた際には、__move...",
          "link": "https://zenn.dev/ttttkkkkk/articles/295089fcf26129",
          "publishedOn": "2023-09-09T05:26:41.000Z",
          "wordCount": 963,
          "title": "Mojo の __moveinit__ を適用させるには __del__ が必要",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WQ_4cT3K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mojo%2520%25E3%2581%25AE%2520__moveinit__%2520%25E3%2582%2592%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AB%25E3%2581%25AF%2520__del__%2520%25E3%2581%258C%25E5%25BF%2585%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taqqn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMzdmZDNhMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WQ_4cT3K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mojo%2520%25E3%2581%25AE%2520__moveinit__%2520%25E3%2582%2592%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AB%25E3%2581%25AF%2520__del__%2520%25E3%2581%258C%25E5%25BF%2585%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taqqn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMzdmZDNhMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ttttkkkkk/articles/f3cfb2ba5e73d6",
          "author": "Taqqn",
          "description": "Mojo 言語が一般公開されたので、色々コンパイラで遊んでみました。\nその研究記録をここに残します！！\n\n borrowed, inout, owned について\nMojo には関数の引数として borrowed, inout, owned を取ることができます。それぞれ引数がどのように関数内で扱われるかが異なります。\nRustの借用やC++の参照・ポインタを思い出します。\n\n borrowed\nまず基本的なのが、borrowedです。これは Mojo のデフォルトの設定となり、省略が可能です。\nつまり\nfn add(borrowed x: Int, borrowed y: Int) -...",
          "link": "https://zenn.dev/ttttkkkkk/articles/f3cfb2ba5e73d6",
          "publishedOn": "2023-09-08T18:11:07.000Z",
          "wordCount": 1691,
          "title": "Mojo の borrowed, inout, owned",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aroNbtAx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:Mojo%2520%25E3%2581%25AE%2520borrowed%252C%2520inout%252C%2520owned%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taqqn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMzdmZDNhMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aroNbtAx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:Mojo%2520%25E3%2581%25AE%2520borrowed%252C%2520inout%252C%2520owned%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taqqn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMzdmZDNhMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/glm-coefficients-p-value",
          "author": "knao124",
          "description": "回帰係数のp値の意味\n\n p値の意味\n回帰係数のp値は、 各係数が統計的に有意であるかを判定するための指標となっている。\np値が十分に小さければ、各係数は目的変数に影響を与えている、と\"統計的に\"判断できる。\n\n 検定の内容\n具体的に、線形な項では以下の検定を行っている。\n\n帰無仮説（H_0）: 該当する回帰係数は0である。（目的変数に影響を与えない）\n対立仮説（H_1）: 該当する回帰係数は0ではない。（目的変数に影響を与える）\n\np値が有意水準（一般的には0.05とか0.01）よりも小さい場合、帰無仮説が棄却され、対立仮説が採択される。\n\n p値が小さい == 目的変数への影響度...",
          "link": "https://zenn.dev/knao124/articles/glm-coefficients-p-value",
          "publishedOn": "2023-09-08T12:00:31.000Z",
          "wordCount": 241,
          "title": "回帰係数のp値の意味",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1-YOnTfx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%259E%25E5%25B8%25B0%25E4%25BF%2582%25E6%2595%25B0%25E3%2581%25AEp%25E5%2580%25A4%25E3%2581%25AE%25E6%2584%258F%25E5%2591%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1-YOnTfx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%259E%25E5%25B8%25B0%25E4%25BF%2582%25E6%2595%25B0%25E3%2581%25AEp%25E5%2580%25A4%25E3%2581%25AE%25E6%2584%258F%25E5%2591%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/ssfuno/articles/2e45f6aec8f444",
          "author": "すふー",
          "description": "イントロダクション\n本記事では、Pythonで2地点間の方位角を16方位に変換する方法について記載します。\n\n16方位の図（出典：日本地図センター）\nこちらの記事のJavaScriptでのコードを参考にさせていただきました。\nhttps://qiita.com/m-suizu@github/items/a3d69c211f8f3a5cb624\n\n 動作環境\n\nmacOS Ventura 13.5.1\nPython 3.11.4\n\n\n コードと説明\n方位角が0〜360°で表される時は、下記のように算出できます。\nfrom decimal import Decimal, ROUND_HA...",
          "link": "https://zenn.dev/ssfuno/articles/2e45f6aec8f444",
          "publishedOn": "2023-09-08T09:02:04.000Z",
          "wordCount": 855,
          "title": "Pythonで方位角を16方位に変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6Cu5R32S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%2596%25B9%25E4%25BD%258D%25E8%25A7%2592%25E3%2582%259216%25E6%2596%25B9%25E4%25BD%258D%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6Cu5R32S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%2596%25B9%25E4%25BD%258D%25E8%25A7%2592%25E3%2582%259216%25E6%2596%25B9%25E4%25BD%258D%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2ZmY3ZDJhMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shintaroamaike/articles/afcbc867db495e",
          "author": "ShintaroAmaike",
          "description": "以前投稿した新言語「Mojo」がローカルダウンロードできるようになったとの案内がされました。\nhttps://zenn.dev/minedia/articles/1432443e97cb13\n実際にWindows環境へインストールしてローカル環境で実施してみます。\nModular\nにアクセスします。\n\n 手順\n\n 1.VSCodeをインストールし、WSL extensionとMojo extensionをインストールします。\nWSL extension\n\nMojo extension\n\n\n 2.Ubuntu 22.04 for WSLをインストールし、開きます。\nUbuntu 22.04...",
          "link": "https://zenn.dev/shintaroamaike/articles/afcbc867db495e",
          "publishedOn": "2023-09-08T08:22:49.000Z",
          "wordCount": 303,
          "title": "Pythonライクな新言語「Mojo」が一般公開され、ローカル環境に構築できるようになりました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WAZ8JFfO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25AF%25E3%2581%25AA%25E6%2596%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2580%258CMojo%25E3%2580%258D%25E3%2581%258C%25E4%25B8%2580%25E8%2588%25AC%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2595%25E3%2582%258C%25E3%2580%2581%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShintaroAmaike%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmNWYzMmE0MWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WAZ8JFfO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25AF%25E3%2581%25AA%25E6%2596%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2580%258CMojo%25E3%2580%258D%25E3%2581%258C%25E4%25B8%2580%25E8%2588%25AC%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2595%25E3%2582%258C%25E3%2580%2581%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShintaroAmaike%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmNWYzMmE0MWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/solxyz_bso/articles/trying-chatdev",
          "author": "Kojiro Ohara",
          "description": "仮想のソフトウェア開発会社ChatDev\n先日X（旧Twitter）で話題となっていた、OpenAI APIを利用して自動でソフトウェアを作成するChatDevに興味を持ったので、実際に試してみました。\nhttps://github.com/OpenBMB/ChatDev\n\nChatDevは、最高経営責任者（CEO）、最高技術責任者（CTO）、プログラマー、テスターなど、さまざまな役割を持つインテリジェントエージェントによって運営されるバーチャルソフトウェア企業です。\nこれらのエージェントは、マルチエージェントの組織構造を形成し、\"プログラミングを通じてデジタル世界に革命を起こす\"と...",
          "link": "https://zenn.dev/solxyz_bso/articles/trying-chatdev",
          "publishedOn": "2023-09-08T00:05:59.000Z",
          "wordCount": 933,
          "title": "Windows環境で噂のChatDevを動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s2g7e_5G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%2599%2582%25E3%2581%25AEChatDev%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%25AB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25BA%25EF%25BC%2588%25E4%25BA%258B%25E6%25A5%25AD%25E6%2588%25A6%25E7%2595%25A5%25E5%25AE%25A4%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kojiro%2520Ohara%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4MWMwN2FhYjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiZWJiYTJkNjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s2g7e_5G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%2599%2582%25E3%2581%25AEChatDev%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%25AB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25BA%25EF%25BC%2588%25E4%25BA%258B%25E6%25A5%25AD%25E6%2588%25A6%25E7%2595%25A5%25E5%25AE%25A4%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kojiro%2520Ohara%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4MWMwN2FhYjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiZWJiYTJkNjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/atsuik/articles/5bbc1415e7ac69",
          "author": "atsuik",
          "description": "はじめに\nPythonで新しくプロジェクトを作ろうとした際、そういえばLoggerの設定や取り扱いってどうすればいいんだっけ？と思って調べてみたところQiitaやZennだと様々な流儀のLoggingのやり方が書いてあって、結局どうすればいいのかがわからず混乱したので自分で調べてまとめました。\n\n 最低限十分なLogginngの方法\n私がLoggingについて調べ始めたときは、とりあえずどうしたらいいのかだけが分かればよかったので同じ気持ちの人のために結論だけ書きます。\n\n Packageプロジェクトの場合\nPythonのPackageを作成している場合はログを送出したい各モジュール...",
          "link": "https://zenn.dev/atsuik/articles/5bbc1415e7ac69",
          "publishedOn": "2023-09-07T16:01:50.000Z",
          "wordCount": 300,
          "title": "PythonのLogginng(Minimum)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sXf5lc0n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:Python%25E3%2581%25AELogginng%2528Minimum%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atsuik%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2VyRXg4M0pVblZyenZhVGVuVmZyNXNHbWRoOXpheThtTjhDY2FEdWJXPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sXf5lc0n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:Python%25E3%2581%25AELogginng%2528Minimum%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atsuik%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2VyRXg4M0pVblZyenZhVGVuVmZyNXNHbWRoOXpheThtTjhDY2FEdWJXPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takiser/articles/55a67a45bf9603",
          "author": "takiser",
          "description": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\n\n# import glob\n\n\nclass SingleLotDataModel:\n    def __init__(self, csvPath):\n        self.__loadData(csvPath=csvPath)\n        self.timeColmun = \"TimeFromStart\"\n        self.intervalName = [\"INTERVAL\"]\n        self.__addTi...",
          "link": "https://zenn.dev/takiser/articles/55a67a45bf9603",
          "publishedOn": "2023-09-07T13:33:32.000Z",
          "wordCount": 1332,
          "title": "Tabular Data Plot",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3-Cghdbn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Tabular%2520Data%2520Plot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3-Cghdbn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Tabular%2520Data%2520Plot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/y0/articles/5a69e8e882b6c8",
          "author": "y0",
          "description": "はじめに\nRecBoleはMIT licenseで公開されているOSSで、81種[1]の推薦アルゴリズムが実装されているPython(PyTorch)のライブラリである。主に研究の文脈で、各アルゴリズムの再現性を確認するために開発されており、実装されているアルゴリズムの一覧は、「Model Introduction¶」にて確認できる。\nこの記事では、「General Recommendation」に分類される一般的な推薦アルゴリズムの使用方法と、その中で比較的高性能な推薦が行えるDNNベースのモデルであるRecVAE[2]について紹介する。私自身は推薦アルゴリズムが専門ではないため、...",
          "link": "https://zenn.dev/y0/articles/5a69e8e882b6c8",
          "publishedOn": "2023-09-07T12:24:40.000Z",
          "wordCount": 1358,
          "title": "RecBole を使った推薦システムの実装とRecVAEの概要",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iiVvLnQS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%258E%25A8%25E8%2596%25A6%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8RecVAE%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:y0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljNWMzODZmNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iiVvLnQS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%258E%25A8%25E8%2596%25A6%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8RecVAE%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:y0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljNWMzODZmNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/4e40e0285b0b66",
          "author": "yKesamaru",
          "description": "前回の記事で、顔データセットの類似度の計算には組み合わせが15億8600通りあり、総当りで計算すると1年以上かかる事が分かりました。\nそのため、faissを用いて多次元ベクトル類似度計算の高速化を試みましたが、前回の記事では、faissを用いても計算時間が長くなってしまいました。\nそのため、以下のfaissチュートリアルを参考に、計算時間を短縮することができるかを試してみました。\nhttps://github.com/facebookresearch/faiss\nhttps://github.com/facebookresearch/faiss/wiki/Getting-started\n...",
          "link": "https://zenn.dev/ykesamaru/articles/4e40e0285b0b66",
          "publishedOn": "2023-09-07T06:10:05.000Z",
          "wordCount": 593,
          "title": "【faiss】なにこれすごい。顔データセットの間違い探し　成功編③",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HKHhnmju--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590faiss%25E3%2580%2591%25E3%2581%25AA%25E3%2581%25AB%25E3%2581%2593%25E3%2582%258C%25E3%2581%2599%25E3%2581%2594%25E3%2581%2584%25E3%2580%2582%25E9%25A1%2594%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%25E3%2580%2580%25E6%2588%2590%25E5%258A%259F%25E7%25B7%25A8%25E2%2591%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HKHhnmju--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590faiss%25E3%2580%2591%25E3%2581%25AA%25E3%2581%25AB%25E3%2581%2593%25E3%2582%258C%25E3%2581%2599%25E3%2581%2594%25E3%2581%2584%25E3%2580%2582%25E9%25A1%2594%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%25E3%2580%2580%25E6%2588%2590%25E5%258A%259F%25E7%25B7%25A8%25E2%2591%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e5cd8f33349121",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-301 A - Overall Winner\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = getString()\n\n    if s.count('A') > s.count('T'):\n        print('A')\n    elif s.count('A') < s.count('T'):\n        print('T')\n    e...",
          "link": "https://zenn.dev/hyperdb/articles/e5cd8f33349121",
          "publishedOn": "2023-09-07T05:23:02.000Z",
          "wordCount": 367,
          "title": "［AtCoder］ABC-301｜A - Overall Winner",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wKGAWsBQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-301%25EF%25BD%259CA%2520-%2520Overall%2520Winner%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wKGAWsBQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-301%25EF%25BD%259CA%2520-%2520Overall%2520Winner%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/646f8ed4b4f3a8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-301 B - Fill the Gaps\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef d(x, y):\n    t = []\n\n    if x < y:\n        for i in range(x + 1, y):\n            t.append(i)\n    else:\n        for i in range(y + 1, x):\n     ...",
          "link": "https://zenn.dev/hyperdb/articles/646f8ed4b4f3a8",
          "publishedOn": "2023-09-07T05:23:01.000Z",
          "wordCount": 595,
          "title": "［AtCoder］ABC-301｜B - Fill the Gaps",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ffN-iMqn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-301%25EF%25BD%259CB%2520-%2520Fill%2520the%2520Gaps%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ffN-iMqn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-301%25EF%25BD%259CB%2520-%2520Fill%2520the%2520Gaps%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/microsoft/articles/06063068b75a91",
          "author": "ryohtaka",
          "description": "はじめに\n2023 年 8 月の更新で Azure OpenAI Service On your data でベクトル検索ができるようになったため、使い方や勘所をまとめました。\nhttps://learn.microsoft.com/ja-jp/azure/ai-services/openai/whats-new#august-2023\n\n On your data ベクトル検索で何が変わる？\n2023 年 6 月に On your data のナレッジベースとして使われている Azure Cognitive Search にてベクトル検索のパブリックプレビューが開始しました。これに...",
          "link": "https://zenn.dev/microsoft/articles/06063068b75a91",
          "publishedOn": "2023-09-06T16:50:45.000Z",
          "wordCount": 1533,
          "title": "Azure OpenAI Service On your data でベクトル検索を行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Oj6jax77--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520On%2520your%2520data%2520%25E3%2581%25A7%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Oj6jax77--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%2520On%2520your%2520data%2520%25E3%2581%25A7%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryohtaka%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NzVkNmI1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/takiser/articles/94b05d752d082a",
          "author": "takiser",
          "description": "import tkinter as tk\nfrom tkinter import filedialog\n\n\nclass ToolbarView(tk.Frame):\n    def __init__(self, master=None):\n        super().__init__(master)\n        self.master = master\n\n        self.pack()\n        self.create_widgets()\n\n    def create_widgets(self):\n        # self.label1 = tk.Label(...",
          "link": "https://zenn.dev/takiser/articles/94b05d752d082a",
          "publishedOn": "2023-09-06T13:48:02.000Z",
          "wordCount": 1514,
          "title": "# Tkinterで画面を作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AYMwWa6N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523%2520Tkinter%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AYMwWa6N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523%2520Tkinter%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takiser/articles/e847aef130d4d8",
          "author": "takiser",
          "description": "並列に並べる場合\nimport tkinter as tk\n\nclass Frame1(tk.Frame):\n    def __init__(self, master=None):\n        super().__init__(master)\n        self.master = master\n        self.pack()\n        self.create_widgets()\n\n    def create_widgets(self):\n        self.label1 = tk.Label(self)\n        self.label1[\"te...",
          "link": "https://zenn.dev/takiser/articles/e847aef130d4d8",
          "publishedOn": "2023-09-06T12:13:05.000Z",
          "wordCount": 996,
          "title": "Python Tkinterで複数Frameアプリを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oVbviVS4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Tkinter%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0Frame%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oVbviVS4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Tkinter%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0Frame%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiser%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dacXJINlVvNlVkY28zd3FMamhhZnQwd1JhWHNrT3ZLNjlzSVVwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dcb0e8eb956501",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-300 B - Same Map in the RPG World\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringListRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef rx(x):\n    for i in range(len(x)):\n        x[i] = x[i][1:] + x[i][:1]\n    return x\n\n\ndef ry(x):\n    return x...",
          "link": "https://zenn.dev/hyperdb/articles/dcb0e8eb956501",
          "publishedOn": "2023-09-06T05:54:27.000Z",
          "wordCount": 619,
          "title": "［AtCoder］ABC-300｜B - Same Map in the RPG World",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--epjmi9q6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-300%25EF%25BD%259CB%2520-%2520Same%2520Map%2520in%2520the%2520RPG%2520World%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--epjmi9q6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-300%25EF%25BD%259CB%2520-%2520Same%2520Map%2520in%2520the%2520RPG%2520World%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6083bb53238640",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-300 A - N-choice question\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, a, b = getIntMap()\n    c = [0] + getIntList()\n\n    print(c.index(a + b))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/6083bb53238640",
          "publishedOn": "2023-09-06T05:54:26.000Z",
          "wordCount": 307,
          "title": "［AtCoder］ABC-300｜A - N-choice question",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NmIanXz_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-300%25EF%25BD%259CA%2520-%2520N-choice%2520question%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NmIanXz_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-300%25EF%25BD%259CA%2520-%2520N-choice%2520question%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/os1ma/articles/935f6e653f1052",
          "author": "oshima_123",
          "description": "先日 \"Python の「仮想環境」を完全に理解しよう\" というスライドを公開したらかなり反響がありました。\n\nPython の開発環境の構築は、正直言ってかなり複雑だと思います。\npip・venv・pyenv・Pipenv などなど、似たような名前・似たような役割のツールがたくさん登場して、最初は全然意味が分かりません。\n慣れればなんとかなるのですが、慣れるまではかなり苦しいです。\nこのようにとても難解であるにも関わらず、Python は機械学習などでよく使われることから、避けられないことも多いです。\nそこでこの記事には、「そもそも Python の開発環境にはどんな観点があるんだ？こ...",
          "link": "https://zenn.dev/os1ma/articles/935f6e653f1052",
          "publishedOn": "2023-09-06T02:58:34.000Z",
          "wordCount": 1385,
          "title": "Pythonの開発環境の3つの観点をおさえよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HKzHjLrv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE3%25E3%2581%25A4%25E3%2581%25AE%25E8%25A6%25B3%25E7%2582%25B9%25E3%2582%2592%25E3%2581%258A%25E3%2581%2595%25E3%2581%2588%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oshima_123%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjAzMGZmOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HKzHjLrv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE3%25E3%2581%25A4%25E3%2581%25AE%25E8%25A6%25B3%25E7%2582%25B9%25E3%2582%2592%25E3%2581%258A%25E3%2581%2595%25E3%2581%2588%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oshima_123%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjAzMGZmOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum09",
          "author": "derwind",
          "description": "目的\ncuQuantum で遊んでみる (8) — QAOA の期待値計算高速化 で大分計算周りをマシにしたのでもう少し本格的な計算をしてみたいというもの。\nなお、今回の計算、どこか間違えているようなのだが間違えているなりにそこそこ行けてそうなので、一旦記事にしてしまって後日修正したい。\n実験は Google Colab 上で T4 を使って行った。そんな手軽な環境で本格的な QAOA も VQE も実行できるのである。\n\n お題\nTYTANSDK のチュートリアル 線形回帰 を拝借したい。因みにこの問題は疑似量子アニーリングで計算したらすぐに結果が得られる。\n\n QAOA に書き直...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum09",
          "publishedOn": "2023-09-05T15:51:40.000Z",
          "wordCount": 4305,
          "title": "cuQuantum で遊んでみる (9) — 少し規模が大きめの QAOA を計算する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pLbKETBy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25289%2529%2520%25E2%2580%2594%2520%25E5%25B0%2591%25E3%2581%2597%25E8%25A6%258F%25E6%25A8%25A1%25E3%2581%258C%25E5%25A4%25A7%25E3%2581%258D%25E3%2582%2581%25E3%2581%25AE%2520QAOA%2520%25E3%2582%2592%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pLbKETBy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25289%2529%2520%25E2%2580%2594%2520%25E5%25B0%2591%25E3%2581%2597%25E8%25A6%258F%25E6%25A8%25A1%25E3%2581%258C%25E5%25A4%25A7%25E3%2581%258D%25E3%2582%2581%25E3%2581%25AE%2520QAOA%2520%25E3%2582%2592%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daidai_daitai/articles/64f45e2d3df2b0",
          "author": "橙。",
          "description": "その1では何をしたのか\nその1では日経先物のタイムバーに、DaySessionとNightSessionの情報を追加し、SesssionごとにUniqueなIDを割り当てました。\n今回その情報は使用しませんが、気になる方は見てみて下さい。\nhttps://zenn.dev/daidai_daitai/articles/92e8fbbfa79e42\n\n その2では何をするのか\n日経先物のつなぎ足データから次のSQまでの残存時間を計算します。今回はタイムバーを使用しますが、その他の方法でサンプリングされたデータでも、コードを少し変えれば使用できると思います。\n\n SQとは\n以下は生成AI...",
          "link": "https://zenn.dev/daidai_daitai/articles/64f45e2d3df2b0",
          "publishedOn": "2023-09-05T13:23:09.000Z",
          "wordCount": 5565,
          "title": "日経先物分析その2 ... SQまでの残存時間の計算",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CplaaHzB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE2%2520...%2520SQ%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%25AE%258B%25E5%25AD%2598%25E6%2599%2582%25E9%2596%2593%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CplaaHzB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE2%2520...%2520SQ%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%25AE%258B%25E5%25AD%2598%25E6%2599%2582%25E9%2596%2593%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/notch_man8600/articles/efee2fb94b1519",
          "author": "notch_man",
          "description": "最近、Telnetがホットですね。\n\nというわけでPythonで読んでみました。なお、telnetlibでは上手くいきませんでした。\n# Standard Library\nimport socket\n\ntry:\n    sock = socket.create_connection((\"koukoku.shadan.open.ad.jp\", 23))\n    while True:\n        chunk = sock.recv(2)\n        if not chunk:\n            break\n        try:\n            print(chun...",
          "link": "https://zenn.dev/notch_man8600/articles/efee2fb94b1519",
          "publishedOn": "2023-09-05T12:33:08.000Z",
          "wordCount": 452,
          "title": "一般社団法人サイバー技術・インターネット自由研究会の電子公告をPythonで読む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MQ94VZa1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E8%2588%25AC%25E7%25A4%25BE%25E5%259B%25A3%25E6%25B3%2595%25E4%25BA%25BA%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25BC%25E6%258A%2580%25E8%25A1%2593%25E3%2583%25BB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E8%2587%25AA%25E7%2594%25B1%25E7%25A0%2594%25E7%25A9%25B6%25E4%25BC%259A%25E3%2581%25AE%25E9%259B%25BB%25E5%25AD%2590%25E5%2585%25AC%25E5%2591%258A%25E3%2582%2592Python%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:notch_man%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1NWIwNjRlY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MQ94VZa1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E8%2588%25AC%25E7%25A4%25BE%25E5%259B%25A3%25E6%25B3%2595%25E4%25BA%25BA%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25BC%25E6%258A%2580%25E8%25A1%2593%25E3%2583%25BB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E8%2587%25AA%25E7%2594%25B1%25E7%25A0%2594%25E7%25A9%25B6%25E4%25BC%259A%25E3%2581%25AE%25E9%259B%25BB%25E5%25AD%2590%25E5%2585%25AC%25E5%2591%258A%25E3%2582%2592Python%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:notch_man%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1NWIwNjRlY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/83b171b045809c",
          "author": "yKesamaru",
          "description": "顔データセットの間違い探し 失敗編②\n前回の記事では、マシンが熱暴走して何回かブラックアウトするという屈辱を味わいました。今回は、その続きです。\n\n!\nこの記事で紹介している方法で、顔データセットの間違い探しを行いましたが、処理時間が異常に長く、諦めました。ですので、以降の記事を「失敗編②」としました。\n\n前回の記事\nhttps://zenn.dev/ykesamaru/articles/d4b78ea53b02e2\n前回の手法では、顔画像から特徴ベクトルを取得し、その後組み合わせを作成していました。そこで今回は、特徴ベクトルを作成する段階と、組み合わせからコサイン類似度を計算する段...",
          "link": "https://zenn.dev/ykesamaru/articles/83b171b045809c",
          "publishedOn": "2023-09-05T12:06:24.000Z",
          "wordCount": 2797,
          "title": "【Python】顔データセットの間違い探し（失敗編②）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BkuvGJbt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%25A1%2594%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%25EF%25BC%2588%25E5%25A4%25B1%25E6%2595%2597%25E7%25B7%25A8%25E2%2591%25A1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BkuvGJbt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%25A1%2594%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%25EF%25BC%2588%25E5%25A4%25B1%25E6%2595%2597%25E7%25B7%25A8%25E2%2591%25A1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/saldra/articles/26288e2f03f2ae",
          "author": "Sald ra",
          "description": "概要\nRTX-4090環境でtext-generation-webui環境を構築していたところ、なぜかllama.cppのモデルでGPUオフロードできなかったので、調べて解決した。\nhttps://zenn.dev/saldra/articles/619232a81f2705\n\n やったこと\n\n pytorchの最新化\nnvcc -Vを行ったところ、CUDA12系だったのでpytorchを入れなおした。\npip install --pre torch --index-url https://download.pytorch.org/whl/nightly/cu121\nこれでも直らなか...",
          "link": "https://zenn.dev/saldra/articles/26288e2f03f2ae",
          "publishedOn": "2023-09-05T05:09:09.000Z",
          "wordCount": 179,
          "title": "【個人メモ】RTX4090+llama.cppでGPUオフロードできなかったので解決した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8qyi82j4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591RTX4090%252Bllama.cpp%25E3%2581%25A7GPU%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sald%2520ra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiZmIxNDBmZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8qyi82j4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591RTX4090%252Bllama.cpp%25E3%2581%25A7GPU%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sald%2520ra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiZmIxNDBmZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/daa9c8ec47568a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-299 B - Trick Taking\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, t = getIntMap()\n    c = [0] + getIntList()\n    r = [0] + getIntList()\n\n    a = [i for i in range(len(c)) if c[i] ==...",
          "link": "https://zenn.dev/hyperdb/articles/daa9c8ec47568a",
          "publishedOn": "2023-09-05T04:36:12.000Z",
          "wordCount": 487,
          "title": "［AtCoder］ABC-299｜B - Trick Taking",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--59rV0TM1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-299%25EF%25BD%259CB%2520-%2520Trick%2520Taking%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--59rV0TM1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-299%25EF%25BD%259CB%2520-%2520Trick%2520Taking%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/75aa806a5a4a1d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-299 A - Treasure Chest\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = getString()\n\n    print('in' if s.find('|') < s.find('*') < s.rfind('|') else 'out')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/75aa806a5a4a1d",
          "publishedOn": "2023-09-05T04:36:12.000Z",
          "wordCount": 291,
          "title": "［AtCoder］ABC-299｜A - Treasure Chest",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fL5Ko_IX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-299%25EF%25BD%259CA%2520-%2520Treasure%2520Chest%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fL5Ko_IX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-299%25EF%25BD%259CA%2520-%2520Treasure%2520Chest%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/whitishlion/articles/d6c4765a8f1684",
          "author": "oreo_k",
          "description": "みなさんこんにちは！\nこの記事は，IBMが提供する量子開発者認定資格試験 Exam C1000-112: Fundamentals of Quantum Computation Using Qiskit v0.2X Developerサンプル問題の解答と解説記事です！\n今回は後編で，前編は下記ページにありますので，まだご覧になってない方は是非ご一読ください！\nhttps://zenn.dev/whitishlion/articles/daff336619acef\n前編で取り扱ったQ01.~Q10.の続きでQ11.~20を扱います。\nでは，早速解説の続きに進みたいと思います！\n\n第11問は...",
          "link": "https://zenn.dev/whitishlion/articles/d6c4765a8f1684",
          "publishedOn": "2023-09-05T02:01:06.000Z",
          "wordCount": 2898,
          "title": "【量子コンピュータ】IBM量子開発者認定試験(C1000-112)サンプル問題をしがんでしがんで舐め回す(後編  Q011-20)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--91Gl88Qa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25BF%25E3%2580%2591IBM%25E9%2587%258F%25E5%25AD%2590%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E8%25AA%258D%25E5%25AE%259A%25E8%25A9%25A6%25E9%25A8%2593%2528C1000-112%2529%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E3%2581%2597%25E3%2581%258C%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2597%25E3%2581%258C%25E3%2582%2593%25E3%2581%25A7%25E8%2588%2590%25E3%2582%2581%25E5%259B%259E%25E3%2581%2599%2528%25E5%25BE%258C%25E7%25B7%25A8%2520%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oreo_k%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd053RGlEU2c2aGZNZk93Wm1pTnd5c1RGVnBCVmQ5ZTBqYVpDakI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--91Gl88Qa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25BF%25E3%2580%2591IBM%25E9%2587%258F%25E5%25AD%2590%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E8%25AA%258D%25E5%25AE%259A%25E8%25A9%25A6%25E9%25A8%2593%2528C1000-112%2529%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E3%2581%2597%25E3%2581%258C%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2597%25E3%2581%258C%25E3%2582%2593%25E3%2581%25A7%25E8%2588%2590%25E3%2582%2581%25E5%259B%259E%25E3%2581%2599%2528%25E5%25BE%258C%25E7%25B7%25A8%2520%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oreo_k%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd053RGlEU2c2aGZNZk93Wm1pTnd5c1RGVnBCVmQ5ZTBqYVpDakI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/superstudio/articles/17e346b27114ef",
          "author": "Yuji Miyashita",
          "description": "はじめに\n弊社では ecforce というシステムをSaaSという形でサービスを提供しています。\necforceの導入を希望されるクライアント様には、大きく2パターンがあります。\n\n\n新規で ECを立ち上げたいというクライアント様\n別のカートシステムを現在使っており、ecforceに乗り換えたいというクライアント様\n\n後者につきまして、当然ながら顧客や注文データをリセットするわけにもいかないので、 既存データも引き継ぎたい という要望をいただくことが大多数です。\nただ他社のカートシステムとecforceではデータ構造が異なるので、データを抽出してそのままecforceのデータベースに...",
          "link": "https://zenn.dev/superstudio/articles/17e346b27114ef",
          "publishedOn": "2023-09-05T02:00:00.000Z",
          "wordCount": 929,
          "title": "移行業務の改善 その3 CSV加工の分離",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kB0p6Piq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A7%25BB%25E8%25A1%258C%25E6%25A5%25AD%25E5%258B%2599%25E3%2581%25AE%25E6%2594%25B9%25E5%2596%2584%2520%25E3%2581%259D%25E3%2581%25AE3%2520CSV%25E5%258A%25A0%25E5%25B7%25A5%25E3%2581%25AE%25E5%2588%2586%25E9%259B%25A2%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SUPER%2520STUDIO%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yuji%2520Miyashita%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4NWIxMTkzZGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhNGJmYTEzOTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kB0p6Piq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A7%25BB%25E8%25A1%258C%25E6%25A5%25AD%25E5%258B%2599%25E3%2581%25AE%25E6%2594%25B9%25E5%2596%2584%2520%25E3%2581%259D%25E3%2581%25AE3%2520CSV%25E5%258A%25A0%25E5%25B7%25A5%25E3%2581%25AE%25E5%2588%2586%25E9%259B%25A2%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SUPER%2520STUDIO%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yuji%2520Miyashita%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4NWIxMTkzZGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhNGJmYTEzOTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/koupro0204/articles/bf87dea2478b72",
          "author": "い。",
          "description": "インターンで作成したガチャのアルゴリズムが果たして正しいのか検証してみる。\n\n アルゴリズムについて\n以下の記事を参考にコーディングしました。\nループを用いて重み付き抽選を行う\n正直自分が解説するよりわかりやすいので気になる方は記事を見てみてください。\n以下がGoのコードになります。（ちょっとだけコメント入れました）\n細かいほかの部分のコードはちょっと見せれないです。\n// getGacha ガチャアルゴリズム\nfunc getGacha(times int, allcollection []entity.RatioCollection) []entity.RatioCollection...",
          "link": "https://zenn.dev/koupro0204/articles/bf87dea2478b72",
          "publishedOn": "2023-09-04T19:24:16.000Z",
          "wordCount": 592,
          "title": "Golangで重み付き乱択アルゴリズムを作成したので検証してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GZRTVZwM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Golang%25E3%2581%25A7%25E9%2587%258D%25E3%2581%25BF%25E4%25BB%2598%25E3%2581%258D%25E4%25B9%25B1%25E6%258A%259E%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjOWNmMDljNTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GZRTVZwM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Golang%25E3%2581%25A7%25E9%2587%258D%25E3%2581%25BF%25E4%25BB%2598%25E3%2581%258D%25E4%25B9%25B1%25E6%258A%259E%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjOWNmMDljNTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pinter/articles/20230903functionspythondifference",
          "author": "チャマ",
          "description": "Azure Functions の最新の 4.x version では、C#、JavaScript、Java、Powershell、Python、TypeScript など様々な言語が使用可能です。\n中でも、Python を使用する際には、Python v1 プログラミングモデルと、Python v2 プログラミングモデルがあります。\nなお、ここでいう v1 や v2 は Python 自体のバージョンとは関係ありません。あくまで、Functions で Python を使用する際のプログラミングモデルの話です。\nv2 のプログラミングモデルでは、Functions アプリケーションを簡...",
          "link": "https://zenn.dev/pinter/articles/20230903functionspythondifference",
          "publishedOn": "2023-09-04T14:24:25.000Z",
          "wordCount": 2305,
          "title": "Azure Functions Python Programming Model v1 と v2 の違い",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UviEQMrk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Functions%2520Python%2520Programming%2520Model%2520v1%2520%25E3%2581%25A8%2520v2%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2581%25E3%2583%25A3%25E3%2583%259E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMR2ZhYmNfbmdmS3VFUnJNcVhJNGdQbm1EalZOd3NwTjhKYlRNRkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UviEQMrk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Functions%2520Python%2520Programming%2520Model%2520v1%2520%25E3%2581%25A8%2520v2%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2581%25E3%2583%25A3%25E3%2583%259E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMR2ZhYmNfbmdmS3VFUnJNcVhJNGdQbm1EalZOd3NwTjhKYlRNRkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/2863c493c22118",
          "author": "sergicalsix",
          "description": "概要\n機械学習モデルのファインチューニングは、特定のタスクに対してモデルを最適化する一般的な手法です。しかし、ファインチューニングを行う前に、適切なデータセットを用意する必要があります。\nこの記事では、Pythonを使用して簡単にファインチューニング用のデータセットを作成する方法を紹介します。\n\n 内容\n\n 事前準備:ライブラリのインストールとトークナイザーの準備\ndatasetsとtransformersを使えば簡単にファインチューニングができます。\nhttps://huggingface.co/docs/datasets/index\nhttps://huggingface.co/...",
          "link": "https://zenn.dev/sergicalsix/articles/2863c493c22118",
          "publishedOn": "2023-09-04T13:58:31.000Z",
          "wordCount": 374,
          "title": "ファインチューニング用の訓練データの作成方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7kc4HHet--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E7%2594%25A8%25E3%2581%25AE%25E8%25A8%2593%25E7%25B7%25B4%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7kc4HHet--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E7%2594%25A8%25E3%2581%25AE%25E8%25A8%2593%25E7%25B7%25B4%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum08",
          "author": "derwind",
          "description": "目的\ncuQuantum で遊んでみる (6) — 最大カット問題と QUBO と QAOA で QAOA の計算を cuQuantum の cuTensorNet で行ったがあまり速くなかった。\nこれについて、cuQuantum で遊んでみる (7) — 期待値計算再考 で QAOA の類のハミルトニアンのテンソルネットワークへの効率的な埋め込みについて考察した。\nこの上で更に GPU 計算への配慮をした実装をすると 2 倍以上の高速化ができるのでこれについて簡単にまとめる。実際は更に工夫すると 3 倍以上に高速化ができるが、コードも 3 倍汚くなるので本記事では 2 倍くらいで止...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum08",
          "publishedOn": "2023-09-04T13:48:06.000Z",
          "wordCount": 4061,
          "title": "cuQuantum で遊んでみる (8) — QAOA の期待値計算高速化",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UlyR2hXE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25288%2529%2520%25E2%2580%2594%2520QAOA%2520%25E3%2581%25AE%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UlyR2hXE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25288%2529%2520%25E2%2580%2594%2520QAOA%2520%25E3%2581%25AE%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hk_ilohas/articles/mersenne-twister-previous-state",
          "author": "HK_ilohas",
          "description": "はじめに\nMersenne Twister (MT, メルセンヌ・ツイスタ) は擬似乱数を生成するアルゴリズムの一種です。その中でも、MT19937 という手法には次のような長所があります。\n\n周期が 2^{19937}-1 と非常に長い。\n高次元（623 次元）でも均等に分布する。\n擬似乱数の生成が高速。\n\nこのような特徴から、様々なプログラミング言語の標準的な擬似乱数生成器に Mersenne Twister が採用されています。たとえば、Python の random には MT19937 が採用されています。\nしかし、Mersenne Twister は暗号論的擬似乱数ではあ...",
          "link": "https://zenn.dev/hk_ilohas/articles/mersenne-twister-previous-state",
          "publishedOn": "2023-09-04T13:12:52.000Z",
          "wordCount": 4367,
          "title": "Mersenne Twister (MT19937) で未来と過去の乱数列を予測してみる【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jSCFyQor--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mersenne%2520Twister%2520%2528MT19937%2529%2520%25E3%2581%25A7%25E6%259C%25AA%25E6%259D%25A5%25E3%2581%25A8%25E9%2581%258E%25E5%258E%25BB%25E3%2581%25AE%25E4%25B9%25B1%25E6%2595%25B0%25E5%2588%2597%25E3%2582%2592%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jSCFyQor--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mersenne%2520Twister%2520%2528MT19937%2529%2520%25E3%2581%25A7%25E6%259C%25AA%25E6%259D%25A5%25E3%2581%25A8%25E9%2581%258E%25E5%258E%25BB%25E3%2581%25AE%25E4%25B9%25B1%25E6%2595%25B0%25E5%2588%2597%25E3%2582%2592%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/akai_t/articles/fa18bdca2d8c93",
          "author": "Tadaaki AKAI",
          "description": "内容について\nPythonを基礎から勉強するためにPythonプログラミング入門を読んで気になったところや他の知っている言語（PHP等）との違いをメモ\n\n \n\n 数値演算\n\n** と指定すると指数になる（ex:4 ** 2 = 16)\n\nPHPは5.6以降で同じ書き方ができる（知らなかった）\nPHP5.6未満の場合はpow(4, 2)と書く\n\n\n// で割ると切り捨てとなる（ex:7 / 2 = 3.5だが7 // 2 = 3となる）\n\nPHPの場合はfloor(7 / 2)\n\n\n\n\n\n 変数と関数の基礎\n\n関数定義はdef 関数名 (引数, ...):という形式になる。\n中括弧({...",
          "link": "https://zenn.dev/akai_t/articles/fa18bdca2d8c93",
          "publishedOn": "2023-09-04T11:42:16.000Z",
          "wordCount": 4148,
          "title": "Pythonの勉強メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i087QfdA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tadaaki%2520AKAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSk5aWkszM2hUY29aMExTcDZVZHlyV1Zxa2d0N2RMc29WSkI4UlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--i087QfdA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tadaaki%2520AKAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSk5aWkszM2hUY29aMExTcDZVZHlyV1Zxa2d0N2RMc29WSkI4UlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/akai_t/articles/af8f8b502a59bf",
          "author": "Tadaaki AKAI",
          "description": "構築失敗編\n\n 前提知識と仕様\n\nPHPやJavaを用いたWebアプリケーションの開発経験はあるが、Pythonは全く触った経験無し\nさくらのレンタルサーバ スタンダードを契約済み\n問い合わせは基本的に無料で利用できるChatGPT3.5を利用\nできる限りAIを利用して構築（使用技術等は自分で決定し、随時記載）\nフレームワークはFlaskを使ってみることとする\n\n\nUser\nFlaskを利用してデータベースと接続するWebアプリを作成したい\nChatGPT\n素晴らしいです！Flaskを使用してデータベースと接続するWebアプリケーションを作成することは、一般的なタスクです。以下に、基...",
          "link": "https://zenn.dev/akai_t/articles/af8f8b502a59bf",
          "publishedOn": "2023-09-04T11:41:14.000Z",
          "wordCount": 2020,
          "title": "AIを利用して知識ゼロからPythonでシステム構築をする その３ - 構築失敗編 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5QdUDTOc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%259F%25A5%25E8%25AD%2598%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%2520-%2520%25E6%25A7%258B%25E7%25AF%2589%25E5%25A4%25B1%25E6%2595%2597%25E7%25B7%25A8%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tadaaki%2520AKAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSk5aWkszM2hUY29aMExTcDZVZHlyV1Zxa2d0N2RMc29WSkI4UlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5QdUDTOc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%259F%25A5%25E8%25AD%2598%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%2520-%2520%25E6%25A7%258B%25E7%25AF%2589%25E5%25A4%25B1%25E6%2595%2597%25E7%25B7%25A8%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tadaaki%2520AKAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSk5aWkszM2hUY29aMExTcDZVZHlyV1Zxa2d0N2RMc29WSkI4UlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/akai_t/articles/3ad9378c57f4ec",
          "author": "Tadaaki AKAI",
          "description": "Flask編\n\n 前提知識と仕様\n\nPHPやJavaを用いたWebアプリケーションの開発経験はあるが、Pythonは全く触った経験無し\nさくらのレンタルサーバ スタンダードを契約済み\n問い合わせは基本的に無料で利用できるChatGPT3.5を利用\nできる限りAIを利用して構築（使用技術等は自分で決定し、随時記載）\nフレームワークはFlaskを使ってみることとする\n\n\nUser\nFlaskを利用してWebシステムを構築したい。\nFlaskの基本的な使い方を教えてください。\nChatGPT\nFlaskはPythonで書かれた軽量なWebアプリケーションフレームワークです。以下に、Flas...",
          "link": "https://zenn.dev/akai_t/articles/3ad9378c57f4ec",
          "publishedOn": "2023-09-04T11:41:01.000Z",
          "wordCount": 1538,
          "title": "AIを利用して知識ゼロからPythonでシステム構築をする その２ - Flask編 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wRTUwlvx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%259F%25A5%25E8%25AD%2598%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2520-%2520Flask%25E7%25B7%25A8%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tadaaki%2520AKAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSk5aWkszM2hUY29aMExTcDZVZHlyV1Zxa2d0N2RMc29WSkI4UlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wRTUwlvx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%259F%25A5%25E8%25AD%2598%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2520-%2520Flask%25E7%25B7%25A8%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tadaaki%2520AKAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSk5aWkszM2hUY29aMExTcDZVZHlyV1Zxa2d0N2RMc29WSkI4UlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/akai_t/articles/b32e6c92660e8f",
          "author": "Tadaaki AKAI",
          "description": "サーバー構築編\n\n 前提知識と仕様\n\nPHPやJavaを用いたWebアプリケーションの開発経験はあるが、Pythonは全く触った経験無し\nさくらのレンタルサーバ スタンダードを契約済み\n問い合わせは基本的に無料で利用できるChatGPT3.5を利用\nできる限りAIを利用して構築（使用技術等は自分で決定し、随時記載）\n\n\nUser\nPythonでWebアプリケーションを作成します。\nはじめに何からすればいいですか？\nChatGPT\nPythonでWebアプリケーションを作成する際の基本的な手順は次のとおりです：\n\n\nWebフレームワークの選択: Pythonには様々なWebフレームワー...",
          "link": "https://zenn.dev/akai_t/articles/b32e6c92660e8f",
          "publishedOn": "2023-09-04T11:40:47.000Z",
          "wordCount": 1808,
          "title": "AIを利用して知識ゼロからPythonでシステム構築をする その１ - サーバー構築編 -",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UB7SHjDS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%259F%25A5%25E8%25AD%2598%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2520-%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tadaaki%2520AKAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSk5aWkszM2hUY29aMExTcDZVZHlyV1Zxa2d0N2RMc29WSkI4UlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UB7SHjDS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%259F%25A5%25E8%25AD%2598%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589Python%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2520-%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tadaaki%2520AKAI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSk5aWkszM2hUY29aMExTcDZVZHlyV1Zxa2d0N2RMc29WSkI4UlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/manabinaoshi/articles/81eb6709bc1b38",
          "author": "ベテラン初心者",
          "description": "社会に出て１０年あまり、高校数学の記憶もあやふや、ITも初心者のおっさんがデータサイエンスを一から勉強。Python、R、Java、PHPなどプログラミングはサッパリ、なんならExcel、Wordもあやしい、そんな状況からスタート。\n備忘録として使いつつ、何か教えてくれる人がいればラッキーと思う、そんなよこしまな気持ちで投稿してみよう。初投稿なので読みにくいかも、まいっか。",
          "link": "https://zenn.dev/manabinaoshi/articles/81eb6709bc1b38",
          "publishedOn": "2023-09-04T09:27:54.000Z",
          "wordCount": 50,
          "title": "おっさん、学びなおす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WAjIVIer--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%258A%25E3%2581%25A3%25E3%2581%2595%25E3%2582%2593%25E3%2580%2581%25E5%25AD%25A6%25E3%2581%25B3%25E3%2581%25AA%25E3%2581%258A%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25B3%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4NzJjZjNjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WAjIVIer--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%258A%25E3%2581%25A3%25E3%2581%2595%25E3%2582%2593%25E3%2580%2581%25E5%25AD%25A6%25E3%2581%25B3%25E3%2581%25AA%25E3%2581%258A%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25B3%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4NzJjZjNjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/whitishlion/articles/daff336619acef",
          "author": "oreo_k",
          "description": "みなさんこんにちは！\nこの記事は，IBMが提供する量子開発者認定資格試験 Exam C1000-112: Fundamentals of Quantum Computation Using Qiskit v0.2X Developerサンプル問題の解答と解説記事です！\nIBMは, 当IBM量子開発者認定という資格を提供しており，その資格取得のためには当試験のpassが必要がです。(筆者は2023年8月にIBM量子開発者認定を取得。取得ホヤホヤ🍲で本記事執筆中です！)\n本記事はとにかくボリュームが多いため、試験自体の説明は概要に留め, サンプル問題の解説に集中しています。\nまた，本前編/後...",
          "link": "https://zenn.dev/whitishlion/articles/daff336619acef",
          "publishedOn": "2023-09-04T07:22:29.000Z",
          "wordCount": 5312,
          "title": "【量子コンピュータ】IBM量子開発者認定試験(C1000-112)サンプル問題をしがんでしがんで舐め回す(前編 Q01-10)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gYQu9bN6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25BF%25E3%2580%2591IBM%25E9%2587%258F%25E5%25AD%2590%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E8%25AA%258D%25E5%25AE%259A%25E8%25A9%25A6%25E9%25A8%2593%2528C1000-112%2529%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E3%2581%2597%25E3%2581%258C%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2597%25E3%2581%258C%25E3%2582%2593%25E3%2581%25A7%25E8%2588%2590%25E3%2582%2581%25E5%259B%259E%25E3%2581%2599%2528%25E5%2589%258D%25E7%25B7%25A8%2520Q...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oreo_k%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd053RGlEU2c2aGZNZk93Wm1pTnd5c1RGVnBCVmQ5ZTBqYVpDakI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gYQu9bN6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25BF%25E3%2580%2591IBM%25E9%2587%258F%25E5%25AD%2590%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E8%25AA%258D%25E5%25AE%259A%25E8%25A9%25A6%25E9%25A8%2593%2528C1000-112%2529%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E3%2581%2597%25E3%2581%258C%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2597%25E3%2581%258C%25E3%2582%2593%25E3%2581%25A7%25E8%2588%2590%25E3%2582%2581%25E5%259B%259E%25E3%2581%2599%2528%25E5%2589%258D%25E7%25B7%25A8%2520Q...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oreo_k%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd053RGlEU2c2aGZNZk93Wm1pTnd5c1RGVnBCVmQ5ZTBqYVpDakI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kedama_nth/articles/how-to-pyparsing",
          "author": "kedama_nth",
          "description": "はじめに\n詳しい説明は他の記事に譲りますが、pyparsingはPEG(Parsing Expression Grammar)という手法を用いた構文解析ライブラリです。\npyparsingを利用することで、比較的簡単にパース処理を記述することができます。\nパース処理が書けるようになると、コマンドやプログラムが吐き出したログから欲しいデータだけを取り出せるようになるほか、データの変換処理やユーザが入力した文字列の処理などが書けるようになります。\n本記事は「正規表現がイマイチ理解できなくて困っている」「パース処理を書きたいけど、正規表現が書けない」という方々に向けた記事になります。\n本記...",
          "link": "https://zenn.dev/kedama_nth/articles/how-to-pyparsing",
          "publishedOn": "2023-09-04T04:49:28.000Z",
          "wordCount": 2736,
          "title": "pyparsingを使えば正規表現がわからなくてもパース処理が書ける",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gA9Cblcu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyparsing%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25B0%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%258C%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A6%25E3%2582%2582%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kedama_nth%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l6OEFiVjNqSm9EVGNEYUJMZDVHSUdhS2xyV0Q2cWd1Q0oxMEdRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gA9Cblcu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyparsing%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25B0%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%258C%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A6%25E3%2582%2582%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kedama_nth%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l6OEFiVjNqSm9EVGNEYUJMZDVHSUdhS2xyV0Q2cWd1Q0oxMEdRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b2a0f44d3e6bc7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-298 A - Job Interview\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = getString()\n\n    print('Yes' if s.count('o') > 0 and s.count('x') == 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b2a0f44d3e6bc7",
          "publishedOn": "2023-09-04T04:36:35.000Z",
          "wordCount": 293,
          "title": "［AtCoder］ABC-298｜A - Job Interview",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HVSucJF3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-298%25EF%25BD%259CA%2520-%2520Job%2520Interview%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HVSucJF3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-298%25EF%25BD%259CA%2520-%2520Job%2520Interview%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6144f611f7eadb",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-298 B - Coloring Matrix\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef updown(l):\n    result = []\n\n    for i in range(len(l)):\n        result.append(l[len(l) - i - 1])\n\n    return result\n\n\nd...",
          "link": "https://zenn.dev/hyperdb/articles/6144f611f7eadb",
          "publishedOn": "2023-09-04T04:36:34.000Z",
          "wordCount": 798,
          "title": "［AtCoder］ABC-298｜B - Coloring Matrix",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r7EHmK44--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-298%25EF%25BD%259CB%2520-%2520Coloring%2520Matrix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--r7EHmK44--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-298%25EF%25BD%259CB%2520-%2520Coloring%2520Matrix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/erand/articles/c771d28aba8413",
          "author": "えらんど",
          "description": "株・FXで儲けたくて自動売買ツールを作った方は、海外FXの口座開設ボーナスを使って資金調達するのがおすすめ。私もPythonでコードを書いて、口座開設ボーナスを使って検証をしてました。\nデモ口座でも出来るとおっしゃる方もいますが、どうしても本気度が出ない方もいるので実際のお金がかかった状態がよいです。ただし、自己資金を使うのはリスクがあるのでボーナスを使いましょう。\n参考サイト：海外FXで口座開設ボーナスがもらえる業者一覧",
          "link": "https://zenn.dev/erand/articles/c771d28aba8413",
          "publishedOn": "2023-09-03T15:27:35.000Z",
          "wordCount": 56,
          "title": "自動売買ツールをリアル環境で検証する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--k3-Frej8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%258B%2595%25E5%25A3%25B2%25E8%25B2%25B7%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2582%2589%25E3%2582%2593%25E3%2581%25A9%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZFZfZWV3cW94WmpSeW1kdEk3VWFGbzVReG5fYkdyczJBcVVDbi1OVjhSPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--k3-Frej8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%258B%2595%25E5%25A3%25B2%25E8%25B2%25B7%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2582%2589%25E3%2582%2593%25E3%2581%25A9%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZFZfZWV3cW94WmpSeW1kdEk3VWFGbzVReG5fYkdyczJBcVVDbi1OVjhSPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/comachi/articles/a058dc03790d55",
          "author": "comachi",
          "description": "はじめに\n\nこの記事では、最近 WSL2 を使い始めた私が、FastAPI が動く諸々整った Python 環境を Docker で作る方法を、メモとして残します。\nFastAPI で単に Hello, World するためだけの環境ではなく、フォーマッタ、リンタ、型チェック、ユニットテスト、パッケージ管理などを導入した環境を用意しました。\n\nまた、VSCode 上でのテストカバレッジの可視化についても実施できるようにしました。\n\n\nこの記事は、nikkie さんの Hatena Blog を参考にして作成しました。いくつかの記事の Tips をまとめたものを作成したイメージです。\n...",
          "link": "https://zenn.dev/comachi/articles/a058dc03790d55",
          "publishedOn": "2023-09-03T13:36:23.000Z",
          "wordCount": 284,
          "title": "FastAPI が動く諸々整った Python 環境を Docker で作ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--THtWSR-S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2581%258C%25E5%258B%2595%25E3%2581%258F%25E8%25AB%25B8%25E3%2580%2585%25E6%2595%25B4%25E3%2581%25A3%25E3%2581%259F%2520Python%2520%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%2520Docker%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:comachi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmZjhjY2NmZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--THtWSR-S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2581%258C%25E5%258B%2595%25E3%2581%258F%25E8%25AB%25B8%25E3%2580%2585%25E6%2595%25B4%25E3%2581%25A3%25E3%2581%259F%2520Python%2520%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%2520Docker%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:comachi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmZjhjY2NmZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hk_ilohas/articles/openfhe-python-example",
          "author": "HK_ilohas",
          "description": "はじめに\nOpenFHE とは、完全準同型暗号（Fully Homomorphic Encryption, FHE）のオープンソースライブラリです。FHE は暗号化されたデータを復号せずに加法や乗法、回転などの計算を実行できます。今回は OpenFHE の Python wrapper をインストールし、いくつかサンプルプログラムを動かしてみました。\n\n インストール\nhttps://github.com/openfheorg/openfhe-python/tree/main\n公式の README に従ってインストールします。OpenFHE の Python wrapper をビルド...",
          "link": "https://zenn.dev/hk_ilohas/articles/openfhe-python-example",
          "publishedOn": "2023-09-03T09:14:13.000Z",
          "wordCount": 1600,
          "title": "OpenFHEのPython wrapperで準同型暗号を試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--reX1JFGm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenFHE%25E3%2581%25AEPython%2520wrapper%25E3%2581%25A7%25E6%25BA%2596%25E5%2590%258C%25E5%259E%258B%25E6%259A%2597%25E5%258F%25B7%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--reX1JFGm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenFHE%25E3%2581%25AEPython%2520wrapper%25E3%2581%25A7%25E6%25BA%2596%25E5%2590%258C%25E5%259E%258B%25E6%259A%2597%25E5%258F%25B7%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/jusanz/articles/d6cec091d45657",
          "author": "jedinakahira",
          "description": "Base64エンコーディングした文字列をURLパラメータで送信を求められることがあります。Base64エンコーディングされた文字列にはURLに含められない+ 、/、=が含まれるため、URLセーフ　に変換が必要です。\n\n Base64エンコーディングとは\nデータを 64種類の文字 (アルファベット大文字小文字、0から9の数字)と+、 /、=の記号のみを使って変換する方式。メールの添付ファイル送信などに使われます。\n\n javascriptの場合\nconst encoded = btoa(\"String to be encoded\")\n    .replace(/=/g, \"\")\n    ....",
          "link": "https://zenn.dev/jusanz/articles/d6cec091d45657",
          "publishedOn": "2023-09-03T06:31:38.000Z",
          "wordCount": 338,
          "title": "URLセーフなBase64エンコーディングとデコーディング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DBpKIcn0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:URL%25E3%2582%25BB%25E3%2583%25BC%25E3%2583%2595%25E3%2581%25AABase64%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jedinakahira%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DBpKIcn0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:URL%25E3%2582%25BB%25E3%2583%25BC%25E3%2583%2595%25E3%2581%25AABase64%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jedinakahira%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/gaimo_ch/articles/c2d67d7dbd39b5",
          "author": "がいも",
          "description": "🚨 SSH-Notify\nLinuxサーバに対するSSH接続をPAMを用いて検知し、WebhookでDiscordに通知を行うよ。\nPython 3.10.12 / Ubuntu 22.04.3\n\n 🛠 準備をしよう\n\n Python\n\n 使用ライブラリについて\nrequests : クライアントのグローバルIPと国を取得\nnetifaces : サーバのローカルIPを取得\nsocket : サーバのホスト名を取得\n\n ssh-notify.py\n#!/usr/bin/env python3\nimport socket\nimport netifaces\nimport requests...",
          "link": "https://zenn.dev/gaimo_ch/articles/c2d67d7dbd39b5",
          "publishedOn": "2023-09-03T06:17:46.000Z",
          "wordCount": 606,
          "title": "Linuxサーバーに対するSSH接続を検知してDiscordに通知するよ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v_w1ELq6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258BSSH%25E6%258E%25A5%25E7%25B6%259A%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2597%25E3%2581%25A6Discord%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258C%25E3%2581%2584%25E3%2582%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2M2JhZjk2MjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v_w1ELq6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258BSSH%25E6%258E%25A5%25E7%25B6%259A%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2597%25E3%2581%25A6Discord%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258C%25E3%2581%2584%25E3%2582%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2M2JhZjk2MjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/ssm-03-local-level-model",
          "author": "knao124",
          "description": "ローカルレベルモデル\n\n 定義  [1, p193]\n以下の式で表される状態空間モデルをローカルレベルモデルと呼ぶ。\n\n\\mu_t = \\mu_{t-1}+w_t,\\quad  w_t\\sim N(0, \\sigma_w^2)\n\\\\\ny_t = \\mu_t + v_t, \\quad v_t\\sim N(0, \\sigma_v^2)\n\nw_t は状態誤差、 v_tは観測誤差と呼ばれる。状態\\mu_tは水準（レベル） とも呼ばれる。\n\n データの生成過程の仮定\nローカルレベルモデルは、状態も観測値も、生成過程が正規分布だと仮定するモデルである。\nこのことは、上記の式を、以下のように変形す...",
          "link": "https://zenn.dev/knao124/articles/ssm-03-local-level-model",
          "publishedOn": "2023-09-03T05:00:52.000Z",
          "wordCount": 495,
          "title": "線形ガウス状態空間モデル(2) - ローカルレベルモデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NromeDWK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B7%259A%25E5%25BD%25A2%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E7%258A%25B6%25E6%2585%258B%25E7%25A9%25BA%25E9%2596%2593%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25282%2529%2520-%2520%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NromeDWK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B7%259A%25E5%25BD%25A2%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E7%258A%25B6%25E6%2585%258B%25E7%25A9%25BA%25E9%2596%2593%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25282%2529%2520-%2520%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/ssm-02-linear-gaussian",
          "author": "knao124",
          "description": "線形ガウス状態空間モデル\n\n 定義 [1, p187]\n以下の式で表される状態空間モデルを線形ガウス状態空間モデルと呼ぶ。\n\n\\begin{equation}\n\\begin{aligned}\nx_t &= T_t x_{t-1} + R_t \\xi_t,\\quad &\\xi_t \\sim N(0, Q_t)\n\\\\\ny_t &= Z_t x_t + \\epsilon_t, \\quad &\\epsilon_t \\sim N(0, H_t)\n\\end{aligned}\n\\end{equation}\n\n\n\nx_t が状態、 y_t が観測値。\n\nT_t , R...",
          "link": "https://zenn.dev/knao124/articles/ssm-02-linear-gaussian",
          "publishedOn": "2023-09-03T04:12:01.000Z",
          "wordCount": 251,
          "title": "線形ガウス状態空間モデル(1) - 線形ガウス状態空間モデルとは",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OKjQDTRG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B7%259A%25E5%25BD%25A2%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E7%258A%25B6%25E6%2585%258B%25E7%25A9%25BA%25E9%2596%2593%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25281%2529%2520-%2520%25E7%25B7%259A%25E5%25BD%25A2%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E7%258A%25B6%25E6%2585%258B%25E7%25A9%25BA%25E9%2596%2593%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OKjQDTRG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B7%259A%25E5%25BD%25A2%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E7%258A%25B6%25E6%2585%258B%25E7%25A9%25BA%25E9%2596%2593%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25281%2529%2520-%2520%25E7%25B7%259A%25E5%25BD%25A2%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E7%258A%25B6%25E6%2585%258B%25E7%25A9%25BA%25E9%2596%2593%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/ssm-01-state-space-model",
          "author": "knao124",
          "description": "定義\n状態空間モデルは、システムが時間によってどう変わるかを説明するための数学的なフレームワーク（モデル）を指す。\n\n 状態と観測値\nモデルは、「状態」と「観測値」の2つの方程式で構成される。\n文字通り「状態」は「システムの現在の状態」のことを指し、「観測値」は「その状態を観測した値」のことを指す。\n\n 具体例1: 温度の計測\n具体例として、温度を1時間おきに計測することを考える。このとき、状態と観測値はそれぞれ以下の通りである。\n\n状態: 宇宙の法則として決まる真の温度\n観測値: 温度センサーに表示される値\n\n\n 状態空間モデルでのモデル化\n状態空間モデルでのモデル化とは、この状態...",
          "link": "https://zenn.dev/knao124/articles/ssm-01-state-space-model",
          "publishedOn": "2023-09-03T04:11:17.000Z",
          "wordCount": 247,
          "title": "状態空間モデル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AJnOke7i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25B6%25E6%2585%258B%25E7%25A9%25BA%25E9%2596%2593%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AJnOke7i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25B6%25E6%2585%258B%25E7%25A9%25BA%25E9%2596%2593%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/230901-streamlit-stepper",
          "author": "knao124",
          "description": "現時点で存在しない\n議論\n\nRemove number_input -/+ step toggles option · Issue #894 · streamlit/streamlit\n\n修正\n\nAssorted visual tweaks by sfc-gh-jgarcia · Pull Request #7050 · streamlit/streamlit\n\ninput_numberが120px以下になると消えるようになっているが、直接消したりする方法はない\nこれ以上対応する予定もないとのこと\n\n 対応策\n\n120px以下にする\nmarkdown経由でcssをいじる(バージョンが...",
          "link": "https://zenn.dev/knao124/articles/230901-streamlit-stepper",
          "publishedOn": "2023-09-03T01:23:37.000Z",
          "wordCount": 119,
          "title": "【streamlit】st.input_numberのstepperを消す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UNETye2k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590streamlit%25E3%2580%2591st.input_number%25E3%2581%25AEstepper%25E3%2582%2592%25E6%25B6%2588%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UNETye2k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590streamlit%25E3%2580%2591st.input_number%25E3%2581%25AEstepper%25E3%2582%2592%25E6%25B6%2588%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/yag_ays/articles/5df1a2d3b00912",
          "author": "yag_ays",
          "description": "クローリング監視の必要性\nウェブサイトのクローリングは、インターネット上の情報を自動的に収集する方法です。機械学習の文脈では、言語モデルや辞書作成などのデータの収集に欠かすことができない技術です。必要な質および量のデータを収集するためには、定期的かつ大規模なクローリングが必要となります。\nさて、クローリングを実装し運用する上で問題となるのが、エラーの対応です。インターネットを通じてウェブページをクローリングする際には、以下のような問題が偶発的に発生します。\n\nネットワーク的な問題でリクエストがタイムアウトする\nリクエスト先のサーバの問題で、正常にHTMLが読み込まれない\nウェブページ...",
          "link": "https://zenn.dev/yag_ays/articles/5df1a2d3b00912",
          "publishedOn": "2023-09-03T01:23:08.000Z",
          "wordCount": 250,
          "title": "Sentryを使ったScrapyのウェブクローリング監視",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hcm965gz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sentry%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FScrapy%25E3%2581%25AE%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E7%259B%25A3%25E8%25A6%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yag_ays%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMWRjYWIzODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hcm965gz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sentry%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FScrapy%25E3%2581%25AE%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E7%259B%25A3%25E8%25A6%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yag_ays%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMWRjYWIzODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum07",
          "author": "derwind",
          "description": "目的\ncuQuantum で遊んでみる (6) — 最大カット問題と QUBO と QAOA で cuQuantum を使った、QAOA 的なハミルトニアンの期待値計算を扱った。この計算は素直で分かりやすいのだが、一方で非効率なところもあるように思う。それは何度も CircuitToEinsum を呼び出し、何度も contract を呼ぶことである。まずは contract の呼び出しを減らせないかを考察してみたい。\n\n 問題設定\n3 量子ビットの量子回路において、ハミルトニアン H = Z_0 \\otimes Z_1 + Z_1 \\otimes Z_2 の期待値を計算するものとす...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum07",
          "publishedOn": "2023-09-02T17:17:24.000Z",
          "wordCount": 2733,
          "title": "cuQuantum で遊んでみる (7) — 期待値計算再考",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dCtw7Jkp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25287%2529%2520%25E2%2580%2594%2520%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25E5%2586%258D%25E8%2580%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dCtw7Jkp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25287%2529%2520%25E2%2580%2594%2520%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25E5%2586%258D%25E8%2580%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syu_tan/articles/2c43758b8c349d",
          "author": "emmyeil",
          "description": "ポリゴンの扱いをしている中で以下のようなエラーが発生します。\nGEOSException: TopologyException: \nInput geom 0 is invalid: \nSelf-intersection at 182.71451535122969 3137.9381128435944\n\nエラーの原因は Self-intersection の通りでポリゴン自体が 自己交差 してしまっていることが原因です。\nArcGIS の資料には 自己交差 の例が記載されています。\nhttps://pro.arcgis.com/ja/pro-app/latest/help/editing/...",
          "link": "https://zenn.dev/syu_tan/articles/2c43758b8c349d",
          "publishedOn": "2023-09-02T14:41:13.000Z",
          "wordCount": 4268,
          "title": "geom 0 is INVALID: Self-intersection 自己交差エラーとその回避",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y1gMhU2U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:geom%25200%2520is%2520INVALID%253A%2520Self-intersection%2520%25E8%2587%25AA%25E5%25B7%25B1%25E4%25BA%25A4%25E5%25B7%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%259B%259E%25E9%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emmyeil%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxODg1NmFkMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y1gMhU2U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:geom%25200%2520is%2520INVALID%253A%2520Self-intersection%2520%25E8%2587%25AA%25E5%25B7%25B1%25E4%25BA%25A4%25E5%25B7%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%259B%259E%25E9%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emmyeil%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxODg1NmFkMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syab_syab/articles/32863c7f3ac9a6",
          "author": "しゃぶしゃぶ",
          "description": "はじめに\n外国からの輸入品を日本円から現地の通貨に換算して、向こうではどのくらいの価値があるのかの目安を示すことができるWEBアプリ「YEN$CONVERSION」を完成させてしばらく経ちました。\n開発で疲れ切った頭もようやく回復してきたので、今回は反省点を書こうと思います。\n文章量が多くなりそうなので、2つに分けて投稿したいと思います。\n\nフロントエンド編\nバックエンド編 ← 今ここ\n\nこちらの記事 → React.js + Supabase + GCPで作った個人開発WEBアプリ「YEN$CONVERSION」もよろしくお願いします。\n\n 今回の開発を通しての感想\nとにかく長引い...",
          "link": "https://zenn.dev/syab_syab/articles/32863c7f3ac9a6",
          "publishedOn": "2023-09-02T12:13:00.000Z",
          "wordCount": 271,
          "title": "個人開発の反省点(地獄のバックエンド編)～個人開発WEBアプリYEN$CONVERSION」より～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hsq7pYyK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%258F%258D%25E7%259C%2581%25E7%2582%25B9%2528%25E5%259C%25B0%25E7%258D%2584%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%25B7%25A8%2529%25EF%25BD%259E%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BAWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AAYEN%2524CONVERSION%25E3%2580%258D%25E3%2582%2588%25E3%2582%258A%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVLdDBZeHh0TzVNRVdqV3lrQlQtM0l0UWZPZ1JlaE1EbERNR0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hsq7pYyK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%258F%258D%25E7%259C%2581%25E7%2582%25B9%2528%25E5%259C%25B0%25E7%258D%2584%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%25B7%25A8%2529%25EF%25BD%259E%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BAWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AAYEN%2524CONVERSION%25E3%2580%258D%25E3%2582%2588%25E3%2582%258A%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVLdDBZeHh0TzVNRVdqV3lrQlQtM0l0UWZPZ1JlaE1EbERNR0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuto_mo/articles/3a381c4a4086e7",
          "author": "pomu",
          "description": "今回はpythonのdequeについて解説します。\n\n deque(デック)とは\ndeque(デック)とは、\n・両端に対する要素の追加や削除が高速に行えるデータ構造\nです。\nデータ構造とはpythonで使用されるデータの型のことで、例えばlistやdictもデータ構造の一種です。\n\n 特徴\ndequeの特徴は\n・キュー処理やスタック処理を高速に行う事ができること\nです。\n特に大量のデータを扱う際にはパフォーマンスの違いが顕著になることがあります。\n※キュー処理とスタック処理\n簡単に言うと[1,2,3,4,5]などのデータの先頭や末尾にデータを追加したり、データを消したりすること\n要約：l...",
          "link": "https://zenn.dev/yuto_mo/articles/3a381c4a4086e7",
          "publishedOn": "2023-09-02T09:58:59.000Z",
          "wordCount": 549,
          "title": "dequeの使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--K7h-VATr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:deque%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--K7h-VATr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:deque%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pomu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VrTExkd1N5ZlVzTndSLW1vRzNmdmRBZXZCMmlmdXBwdjRkbEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ykesamaru/articles/d4b78ea53b02e2",
          "author": "yKesamaru",
          "description": "はじめに\n深層学習におけるモデル学習において、データセットのクレンジングは重要な作業です。\n顔認証システムにおいてのデータセットのクレンジングとは、「人物Aの顔画像ファイルが、間違いなく人物Aのフォルダーに存在しているか」と定義できます。\nこのクレンジング作業は、ある程度自動化していますが、最終的には目視で確認する必要があります。\nなかには知っている人物もありますが、大部分は知らない人物です。\nスクレイピング対象の人物名がマイナーな場合（仮に人物Aとします）、同じ名字の有名人（人物B）がヒットしてしまうこともあります。\n有名人と言っても私は知らないので、顔画像枚数の多い人物Bを、人...",
          "link": "https://zenn.dev/ykesamaru/articles/d4b78ea53b02e2",
          "publishedOn": "2023-09-02T04:01:20.000Z",
          "wordCount": 1279,
          "title": "【Python】データセットの間違い探し",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wrvM8eHf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wrvM8eHf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0ODhjZWYyNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/inuo/articles/35cc9a14697363",
          "author": "いぬお",
          "description": "2020年ごろに作成したDiscordのBotを色々あって2023年の今実行しようとしたら下記エラーが\n\nTypeError: init() missing 1 required keyword-only argument: 'intents'\nなんか書き方が変わったらしい\n\n\n 従来の記載\nclient = discord.Client()\n\n 新しい記載\nclient = d.scord.Client(intents=discord.Intents.all())\nまあエラー分そのままの意味に書き換えただけだけど\n\n なんか違うエラーが出た\n\ndiscord.errors.Privil...",
          "link": "https://zenn.dev/inuo/articles/35cc9a14697363",
          "publishedOn": "2023-09-02T03:42:16.000Z",
          "wordCount": 207,
          "title": "DiscordBotの仕様変更で受けた影響(2020->2023)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--scb3B4XS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DiscordBot%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E3%2581%259F%25E5%25BD%25B1%25E9%259F%25BF%25282020-%253E2023%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%25AC%25E3%2581%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlY2I2YmNjN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--scb3B4XS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DiscordBot%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E3%2581%259F%25E5%25BD%25B1%25E9%259F%25BF%25282020-%253E2023%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%25AC%25E3%2581%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlY2I2YmNjN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/karaage0703/articles/05b647078a2d8a",
          "author": "karaage0703",
          "description": "ChatGPTにゲーム開発を委託\nこれが面白そうだったので試してみました。\nhttps://nowokay.hatenablog.com/entry/2023/09/01/132459\nDockerとか使おうかなと思いましたが、GitHubを見た感じcondaだったので、MacとMiniForgeで動かすのが一番無難そうと直感したので、そうしました。\nというわけでMacBook Air + MiniForgeです。以下参照にセットアップしましょう。\nhttps://zenn.dev/karaage0703/articles/f3254b14898b4d\n開発中のデバッグで、GUI使...",
          "link": "https://zenn.dev/karaage0703/articles/05b647078a2d8a",
          "publishedOn": "2023-09-02T02:35:54.000Z",
          "wordCount": 308,
          "title": "ChatGPTの仮想会社「ChatDev」にゲームを開発してもらう方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZcMdU97z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E4%25BC%259A%25E7%25A4%25BE%25E3%2580%258CChatDev%25E3%2580%258D%25E3%2581%25AB%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karaage0703%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZcMdU97z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E4%25BC%259A%25E7%25A4%25BE%25E3%2580%258CChatDev%25E3%2580%258D%25E3%2581%25AB%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:karaage0703%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/porphyrio/articles/c43ab6b9879af1",
          "author": "porphyrio",
          "description": "はじめに\n東工大の機械系の院試の問題をpythonを使って解いてみます。今回は令和1年度 流体力学 問題1を解いていきます。過去問は以下のページにあります。\nhttps://www.titech.ac.jp/admissions/prospective-students/admissions/past-exam-papers\n\n 問題\n\n\n (1)\nW(z)にz=re^{i\\theta}を代入し、展開した式の実部が速度ポテンシャル、虚部が流れ関数です。\nfrom sympy import symbols, I, ln, cos, sin, re, im, arg, Abs\n\n# 変数...",
          "link": "https://zenn.dev/porphyrio/articles/c43ab6b9879af1",
          "publishedOn": "2023-09-02T01:41:39.000Z",
          "wordCount": 2659,
          "title": "東工大機械系院試をpythonで解いてみた[流体力学編]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cy0BZQ5g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%25B5%2581%25E4%25BD%2593%25E5%258A%259B%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cy0BZQ5g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%25B5%2581%25E4%25BD%2593%25E5%258A%259B%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/usma11dia0/articles/solve-alds-1-8-c",
          "author": "usma11dia0",
          "description": "本記事ではAizu Online Judgeより、ALDS1_8_Cの考え方と実際の解答をpythonで解説します。問題のリンク先は下記となります。\nhttps://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ALDS1_8_C&lang=ja\n\n 方針\n二分探索木の実装に関する問題です。まず二分探索木がどのような条件を満たす木であるかを確認します。\nその後、条件を満たすよう実装していきますが、実装には関数で行う方法とクラスで行う方法の2通りが考えられます。\n今回はクラスでの実装を試みたいと思います。\n\n 二分探索木の特徴\n...",
          "link": "https://zenn.dev/usma11dia0/articles/solve-alds-1-8-c",
          "publishedOn": "2023-09-01T15:10:13.000Z",
          "wordCount": 3087,
          "title": "【AOJ解説(python)】ALDS1_8_C 二分探索木の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2Sp5zkQS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AOJ%25E8%25A7%25A3%25E8%25AA%25AC%2528python%2529%25E3%2580%2591ALDS1_8_C%2520%25E4%25BA%258C%25E5%2588%2586%25E6%258E%25A2%25E7%25B4%25A2%25E6%259C%25A8%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:usma11dia0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MTU3NmFmM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2Sp5zkQS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AOJ%25E8%25A7%25A3%25E8%25AA%25AC%2528python%2529%25E3%2580%2591ALDS1_8_C%2520%25E4%25BA%258C%25E5%2588%2586%25E6%258E%25A2%25E7%25B4%25A2%25E6%259C%25A8%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:usma11dia0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MTU3NmFmM2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kentoo1/articles/d5aef1c67901a0",
          "author": "ケントゥ",
          "description": "概要\n前回はAnimeデータセットをRecBole用のデータに変換しました。変換後のデータの先頭部分を少し見てみましょう。\n\n anime.item\n\n\n\n\nitem_id:token\nname:token_seq\ngenre:token_seq\ntype:token\nepisodes:float\navg_rating:float\nmembers:float\n\n\n\n\n32281\nKimi no Na wa.\nDrama, Romance, School, Supernatural\nMovie\n1\n9.37\n200630\n\n\n5114\nFullmetal Alchemist: Brot...",
          "link": "https://zenn.dev/kentoo1/articles/d5aef1c67901a0",
          "publishedOn": "2023-09-01T13:32:58.000Z",
          "wordCount": 350,
          "title": "RecBoleを使ってみよう3　Atomicファイルについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FPXVANX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25863%25E3%2580%2580Atomic%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FPXVANX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25863%25E3%2580%2580Atomic%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/blueman/articles/4aef850be5f439",
          "author": "ブルーマン",
          "description": "この記事はQiitaの記事の転載です!!\nQiitaの記事はこちら!!\nhttps://qiita.com/blueman/items/27be76fd66f238f2e2e1\n\n\n 目次\nはじめに\n実行環境\n画像の画素値へのアクセス方法\n補色の計算方法\n画像上に文字を出力する方法\n複数の画像を横並びに表示する方法\nソースコード\n結果\nまとめ\n\n はじめに\n今回は、前回のTwitter(X)のアンケートでトップだった動画像処理についての記事です。\nそのジャンルの中から、オリジナル画像・画像の画素値ごとの補色を用いて変換した画像・ネガポジ反転した画像を並べて表示させ、ネガポジ反転と補色を用...",
          "link": "https://zenn.dev/blueman/articles/4aef850be5f439",
          "publishedOn": "2023-09-01T10:47:31.000Z",
          "wordCount": 1652,
          "title": "OpenCVを用いた画像の画素ごとの補色を用いた色変換【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y7L14eoA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenCV%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E7%2594%25BB%25E7%25B4%25A0%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A3%259C%25E8%2589%25B2%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%2589%25B2%25E5%25A4%2589%25E6%258F%259B%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y7L14eoA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenCV%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E7%2594%25BB%25E7%25B4%25A0%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A3%259C%25E8%2589%25B2%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%2589%25B2%25E5%25A4%2589%25E6%258F%259B%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/230901-vscode-ipynb",
          "author": "knao124",
          "description": "保存時+Cell実行時にblackでformatする\n{\n    \"[python]\": {\n        \"editor.defaultFormatter\": \"ms-python.black-formatter\"\n    },\n    \"notebook.formatOnSave.enabled\": true,\n    \"notebook.formatOnCellExecution\": true\n}\n\n 参考\n\n\nVisual Studio Code March 2023\n\n保存時\n\n\n\nVisual Studio Code May 2023\n\nCell実行時\n\n\n\nvisua...",
          "link": "https://zenn.dev/knao124/articles/230901-vscode-ipynb",
          "publishedOn": "2023-09-01T05:50:09.000Z",
          "wordCount": 156,
          "title": "VSCode 保存時+Cell実行時にnotebookをblackでformatする設定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S2nhEKk_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%25E4%25BF%259D%25E5%25AD%2598%25E6%2599%2582%252BCell%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25ABnotebook%25E3%2582%2592black%25E3%2581%25A7format%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S2nhEKk_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%25E4%25BF%259D%25E5%25AD%2598%25E6%2599%2582%252BCell%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25ABnotebook%25E3%2582%2592black%25E3%2581%25A7format%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ce2d0f2fe9dc6f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-297 B - chess960\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    r = False\n    if s.find('B') % 2 != s.rfind('B') % 2 and s.find('R') < s.find('K') < s.rfind('R'):\n        r = True\n\n    print('Yes' if r else 'No')\n\n\nif __name__ == \"__main__\"...",
          "link": "https://zenn.dev/hyperdb/articles/ce2d0f2fe9dc6f",
          "publishedOn": "2023-09-01T04:32:22.000Z",
          "wordCount": 315,
          "title": "［AtCoder］ABC-297｜B - chess960",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--D0g26qbs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-297%25EF%25BD%259CB%2520-%2520chess960%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--D0g26qbs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-297%25EF%25BD%259CB%2520-%2520chess960%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2d8ca84bdb66f7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-297 A - Double Click\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, d = getIntMap()\n    t = getIntList()\n\n    c = [i for i in range(1, n) if t[i] - t[i - 1] <= d]\n\n    print(t[min(...",
          "link": "https://zenn.dev/hyperdb/articles/2d8ca84bdb66f7",
          "publishedOn": "2023-09-01T04:32:22.000Z",
          "wordCount": 389,
          "title": "［AtCoder］ABC-297｜A - Double Click",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Kf_RCzH_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-297%25EF%25BD%259CA%2520-%2520Double%2520Click%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Kf_RCzH_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-297%25EF%25BD%259CA%2520-%2520Double%2520Click%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-cuquantum06",
          "author": "derwind",
          "description": "目的\ncuQuantum で遊んでみる (5) — VQE その 2 で VQE を無理やり実行してみたが、今回は 3 種類の方法で最大カット問題を解いてみたい。\n\n 最大カット問題\nMaximum cut にあるように、頂点と辺がつながったグラフにおいて、頂点を黒と白に塗分ける類のものである。辺で繋がった頂点同士が異なる色で塗られている場合に、その辺は “カット可能” という解釈をする。カットできる箇所を最大化するという組み合わせ最適化問題である。\n明らかに 最大カット問題 のほうが明らかに優しい雰囲気の解説である。\n\n 今回試す手法\n\n\nTYTAN SDK: 疑似量子アニーリング...",
          "link": "https://zenn.dev/derwind/articles/dwd-cuquantum06",
          "publishedOn": "2023-08-31T17:59:41.000Z",
          "wordCount": 3293,
          "title": "cuQuantum で遊んでみる (6) — 最大カット問題と QUBO と QAOA",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cmLCt9va--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25286%2529%2520%25E2%2580%2594%2520%25E6%259C%2580%25E5%25A4%25A7%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%2520QUBO%2520%25E3%2581%25A8%2520QAOA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cmLCt9va--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cuQuantum%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%25286%2529%2520%25E2%2580%2594%2520%25E6%259C%2580%25E5%25A4%25A7%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%2520QUBO%2520%25E3%2581%25A8%2520QAOA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/x_point_1/articles/65a0a20bea145f",
          "author": "うみぶどう",
          "description": "はじめに\nどうも、うみぶどうです。エックスポイントワンで働き始めてまだ日が浅いエンジニアです。\nPythonのジェネレータの動きについて、理解が足りず困った経験から記事を執筆しました。\n表題通りです。どうなるんでしょう。\n\n そもそもジェネレータってなに\nPythonにおいて、繰り返し値を返却することができる関数のことです。\nものすごくざっくり説明すると、関数で値の返却を記述する局面で、\nreturn value\nとするところをreturnの代わりに、yieldを以下のように使用します。\nfor row in rows:\n    yield row\n呼び出される度に一つずつ、値を返却...",
          "link": "https://zenn.dev/x_point_1/articles/65a0a20bea145f",
          "publishedOn": "2023-08-31T14:50:07.000Z",
          "wordCount": 188,
          "title": "ジェネレータでyieldの後に処理が書いてあったらどうなる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NXqUB5LJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7yield%25E3%2581%25AE%25E5%25BE%258C%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25B6%25E3%2581%25A9%25E3%2581%2586%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ODA3MWRhN2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NXqUB5LJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7yield%25E3%2581%25AE%25E5%25BE%258C%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25B6%25E3%2581%25A9%25E3%2581%2586%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ODA3MWRhN2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/collabostyle/articles/d6e32c3d96b2ec",
          "author": "TETRER",
          "description": "はじめに\n今回はExcelで作った文書のレイアウトを、PythonでHTMLに変換するツールを作成してみました。\nサンプルで使った文書は、いわゆるExcel方眼紙の稟議書です。\n\n 結果\n実行結果から書いてしまいますが、Pythonのライブラリ「openpyxl」を使うことで、\nExcelのセルの情報を読み取り、それっぽくHTML＋CSSに変換できることができました！\nですが、再現性を上げるには装飾の反映や、マージセルの考慮などが大変なことも分かりました。\n処理の流れを解説しますが、罫線の種類、背景色、文字色の指定などいろいろ未完成です💦\n\n\n 処理の流れ\n\n 【１】メイン処理\nエン...",
          "link": "https://zenn.dev/collabostyle/articles/d6e32c3d96b2ec",
          "publishedOn": "2023-08-31T14:48:01.000Z",
          "wordCount": 2304,
          "title": "Python（openpyxl）でExcelをHTMLに変換する試み",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5Kr5l7zr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BC%2588openpyxl%25EF%25BC%2589%25E3%2581%25A7Excel%25E3%2582%2592HTML%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:TETRER%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyN2RmN2E0ZWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5Kr5l7zr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BC%2588openpyxl%25EF%25BC%2589%25E3%2581%25A7Excel%25E3%2582%2592HTML%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:TETRER%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyN2RmN2E0ZWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/daidai_daitai/articles/92e8fbbfa79e42",
          "author": "橙。",
          "description": "何をするのか\n日経先物を対象にデータの前処理や分析を行います。一度に全部を書くのが大変なので、シリーズ化しちょこちょこ書いて行こうと思っていますが、勉強中の素人なので間違いは勘弁してください。\n\n その1の目的\n日経先物miniの1分足データを使用し、session名を割り当て、sessionごとにuniqueなIDを割り当てる方法を解説します。\n\n 準備\n\n 使用するデータ\nDataFrame\n \nshape: (2_874_147, 6)\n┌─────────────────────┬───────┬───────┬───────┬───────┬────────┐\n│ date...",
          "link": "https://zenn.dev/daidai_daitai/articles/92e8fbbfa79e42",
          "publishedOn": "2023-08-31T13:55:07.000Z",
          "wordCount": 3101,
          "title": "日経先物分析その1 ... Sessionの割り当て",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LnS4Ac7z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE1%2520...%2520Session%25E3%2581%25AE%25E5%2589%25B2%25E3%2582%258A%25E5%25BD%2593%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LnS4Ac7z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E7%25B5%258C%25E5%2585%2588%25E7%2589%25A9%25E5%2588%2586%25E6%259E%2590%25E3%2581%259D%25E3%2581%25AE1%2520...%2520Session%25E3%2581%25AE%25E5%2589%25B2%25E3%2582%258A%25E5%25BD%2593%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seven_901/articles/05bd001edd4aaa",
          "author": "seven_901",
          "description": "概要\n3年ぶりにPythonの開発環境を整えるためにzennなどを調査してみると、最近ではRyeと呼ばれるパッケージ管理ツールが注目されているそうです。\nhttps://rye-up.com/\n早速、こちらのインストール手順を進めてから、日本語のwikipediaを学習させるためのWord2Vecの開発環境を構築しました。\nその時の環境構築の手順と実際にRyeを利用してみた感想を記述したいと思います。\n\n リポジトリ\nhttps://github.com/hagiwa901/word2vec\n\n 環境\n\nMac\nDocker：20.10.0\ndocker-compose：1.27.4...",
          "link": "https://zenn.dev/seven_901/articles/05bd001edd4aaa",
          "publishedOn": "2023-08-31T12:23:05.000Z",
          "wordCount": 793,
          "title": "RyeでWord2Vecの開発環境を構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--p7W5BMjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rye%25E3%2581%25A7Word2Vec%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seven_901%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjZmMyNDM2NTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--p7W5BMjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rye%25E3%2581%25A7Word2Vec%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seven_901%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjZmMyNDM2NTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/terass_dev/articles/c38e38499e0635",
          "author": "hiroya",
          "description": "株式会社TERASS でエンジニアリングマネージャーを担当している hiroya です。\n前回、TERASS エンジニアメンバーのデスク環境座談会と題した記事を公開しましたが、今回はその記事ができるまでの過程をご紹介したいと思います。\nまた、「最新の音声認識モデルを利用することで文字起こし作業がどれだけ簡略化できるか？」といった点について、記事の後半でその手順や実際の精度について説明していきます。\n\n 全体の流れ\n\n 1. 記事のストーリーを決める\n記事全体の流れを想定しながら、どんな感じの内容を盛り込むか決めていきます。\n\n\n 2. スケジュールを確保し、座談会を開催\nTERASSは「...",
          "link": "https://zenn.dev/terass_dev/articles/c38e38499e0635",
          "publishedOn": "2023-08-31T10:48:34.000Z",
          "wordCount": 1226,
          "title": "座談会記事ができるまで 〜Whisper + pyannote.audio で自動書き起こし・話者分離を試してみた〜",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PmWleX1y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BA%25A7%25E8%25AB%2587%25E4%25BC%259A%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2520%25E3%2580%259CWhisper%2520%252B%2520pyannote.audio%2520%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2583%25BB%25E8%25A9%25B1%25E8%2580%2585%25E5%2588%2586%25E9%259B%25A2%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Terass%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:hiroya%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjJkODQzYTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3ZGI3MTE2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PmWleX1y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BA%25A7%25E8%25AB%2587%25E4%25BC%259A%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2520%25E3%2580%259CWhisper%2520%252B%2520pyannote.audio%2520%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2583%25BB%25E8%25A9%25B1%25E8%2580%2585%25E5%2588%2586%25E9%259B%25A2%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Terass%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:hiroya%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjJkODQzYTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3ZGI3MTE2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/mkpoli/articles/ff01135f91d7ee",
          "author": "mkpoli",
          "description": "導入\nアイヌ語は日本語と異なり、閉音節（子音で終わる音節）も存在するので、表記の際音素文字であるラテン文字なら、そのまま p, t, k, m, n, s, r などの子音文字を後ろの付ければ良いわけなので、アイヌ語ローマ字表記では、何も問題が生じない。しかし、元々開音節言語である日本語に特化したカタカナのような仮名文字で表記する際、鼻音 n は「ン」でなんとかなる（実はそれでもまずい事になっているけどここでは割愛する）が、p, t, k, m, n, s, r, h はどうしようもないので、特殊の捨て仮名（小書き仮名文字）を利用することになっている。\n具体的には以下のような特殊仮名...",
          "link": "https://zenn.dev/mkpoli/articles/ff01135f91d7ee",
          "publishedOn": "2023-08-31T08:08:25.000Z",
          "wordCount": 989,
          "title": "アイヌ語仮名「ㇷ゚」に対する正規表現の罠",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dP6qdFDq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%258C%25E8%25AA%259E%25E4%25BB%25AE%25E5%2590%258D%25E3%2580%258C%25E3%2587%25B7%25E3%2582%259A%25E3%2580%258D%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258B%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25AE%25E7%25BD%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mkpoli%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYmE0YjkxMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dP6qdFDq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%258C%25E8%25AA%259E%25E4%25BB%25AE%25E5%2590%258D%25E3%2580%258C%25E3%2587%25B7%25E3%2582%259A%25E3%2580%258D%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258B%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25AE%25E7%25BD%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mkpoli%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYmE0YjkxMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okun/articles/3ed213edd1048e",
          "author": "t_nobu",
          "description": "pandasのDataFrameで大容量データを扱っていると、すぐにメモリ超過してしまいます。\nメモリ超過すると、ついスペック側でメモリを上げたくなってしまいますが、やはり費用が嵩んでしまいます。\nしかし、pandasの実装を少し工夫するだけで、使用メモリを大幅に抑えられることが結構あります。\n私はこれまでメモリを節約するためにあらゆる方法を試してきましたので、今回はおすすめの手法をまとめてみました！\n皆さんのサーバー費用が少しでも抑えられると幸いです。\n\n 基本編\n\n カラムの型指定をする\nカラムについて、型の指定がないと、数値の場合には自動でint64またはfloat64が付与されて...",
          "link": "https://zenn.dev/okun/articles/3ed213edd1048e",
          "publishedOn": "2023-08-31T07:00:45.000Z",
          "wordCount": 391,
          "title": "[保存版] pandasのメモリ節約方法まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EPCe3wBJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E4%25BF%259D%25E5%25AD%2598%25E7%2589%2588%255D%2520pandas%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E7%25AF%2580%25E7%25B4%2584%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:O-KUN%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:t_nobu%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMWVmODg2OWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3MWUwNGEyYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EPCe3wBJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E4%25BF%259D%25E5%25AD%2598%25E7%2589%2588%255D%2520pandas%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E7%25AF%2580%25E7%25B4%2584%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:O-KUN%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:t_nobu%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMWVmODg2OWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3MWUwNGEyYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/maeda56/articles/da8ea39cd5a030",
          "author": "maeda56",
          "description": "conda install ipykernel\npython -m ipykernel install --user --name=環境名",
          "link": "https://zenn.dev/maeda56/articles/da8ea39cd5a030",
          "publishedOn": "2023-08-31T06:13:03.000Z",
          "wordCount": 68,
          "title": "conda環境をjupyter notebookで使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--to7ILWP4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:conda%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592jupyter%2520notebook%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--to7ILWP4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:conda%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592jupyter%2520notebook%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maeda56/articles/7d0a72c90491a5",
          "author": "maeda56",
          "description": "apt-get install g++\npip install git+https://github.com/facebookresearch/pytorch3d.git\n環境はUbuntu22.04.3LTSのanaconda環境。\npip　install pytorch3dやcondaではうまく行かなかった。gitからpipでとってくる方法だとうまく行きました。",
          "link": "https://zenn.dev/maeda56/articles/7d0a72c90491a5",
          "publishedOn": "2023-08-31T05:36:56.000Z",
          "wordCount": 65,
          "title": "Pytorch3dのインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GmCJdpp---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch3d%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GmCJdpp---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch3d%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maeda56/articles/07083a654e98e9",
          "author": "maeda56",
          "description": "anaconda環境でpip install notebookとすると以下のログが出ました。\n(省略)\nAttempting uninstall: pyyaml\n    Found existing installation: PyYAML 5.1.2\nERROR: Cannot uninstall 'PyYAML'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial ...",
          "link": "https://zenn.dev/maeda56/articles/07083a654e98e9",
          "publishedOn": "2023-08-31T05:36:23.000Z",
          "wordCount": 153,
          "title": "pip install notebookでPyYaml error",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ju_SvlwR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:pip%2520install%2520notebook%25E3%2581%25A7PyYaml%2520error%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ju_SvlwR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:pip%2520install%2520notebook%25E3%2581%25A7PyYaml%2520error%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maeda56%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2ZGZmNmIyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/bdd8a22ba9d6f9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-296 A - Alternately\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = getString()\n\n    print('Yes' if s.find('MM') == -1 and s.find('FF') == -1 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/bdd8a22ba9d6f9",
          "publishedOn": "2023-08-31T05:09:25.000Z",
          "wordCount": 292,
          "title": "［AtCoder］ABC-296｜A - Alternately",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4oQxmYUS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-296%25EF%25BD%259CA%2520-%2520Alternately%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4oQxmYUS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-296%25EF%25BD%259CA%2520-%2520Alternately%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/95d1b7b3b2c836",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-296 B - Chessboard\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    s = getStringRow(8)\n    s.reverse()\n\n    for y in range(8):\n        x = s[y].find('*')\n        if x >= 0:\n            print('%s%d' % (chr(ord('a') + x), y + 1))\n\n\nif __name__...",
          "link": "https://zenn.dev/hyperdb/articles/95d1b7b3b2c836",
          "publishedOn": "2023-08-31T05:09:24.000Z",
          "wordCount": 325,
          "title": "［AtCoder］ABC-296｜B - Chessboard",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WoW_9YoO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-296%25EF%25BD%259CB%2520-%2520Chessboard%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WoW_9YoO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-296%25EF%25BD%259CB%2520-%2520Chessboard%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tmori/articles/5b29373cad0197",
          "author": "tmori",
          "description": "https://atcoder.jp/contests/abc317\n\n A - Potions\n以下の条件になるまで傷口を順番に選択する。\nP_n (傷薬nの回復量) + H (現在の体力) \\geq X (目標体力)\nN, H, X = map(int, input().split())\np_list = list(map(int, input().split()))\n\nfor i, p in enumerate(p_list):\n    if H + p >= X:\n        print(i + 1)\n        exit()\n\n B - MissingNo.\nナオ...",
          "link": "https://zenn.dev/tmori/articles/5b29373cad0197",
          "publishedOn": "2023-08-31T01:22:27.000Z",
          "wordCount": 911,
          "title": "【ABC317】AtCoder Beginner Contest 317 A-D 振り返り【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--e2nIGP7g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC317%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520317%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--e2nIGP7g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ABC317%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520317%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmori%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/d2c_mtech_blog/articles/1d4511c9345e7c",
          "author": "D2C m-tech",
          "description": "はじめに\nこんにちは、D2Cデータサイエンティストの小林です。\n本記事では、Pythonによるハッシュの扱い方とハッシュを用いることで使用するメモリの削減ができるのかを検証します。\nハッシュについては簡単な紹介のみとなりますので、ハッシュについて深く知りたい方は他の記事を参考していただければと思います。\n\n 開発環境\n検証において以下の環境を使用しました。\n\nAWS EC2 (インスタンスタイプ: r5.2xlarge)\nPython 3.10系（3.10.9）\npandas 1.5.1\nmemory_profiler 0.61.0\nhashlib 3.10系で提供されているモジュー...",
          "link": "https://zenn.dev/d2c_mtech_blog/articles/1d4511c9345e7c",
          "publishedOn": "2023-08-31T00:53:37.000Z",
          "wordCount": 757,
          "title": "Pythonにおけるハッシュの扱いとメモリの削減について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Afr35cM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25AE%25E5%2589%258A%25E6%25B8%259B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:D2C%2520m-tech%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:D2C%2520m-tech%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmZTIyZmYyMWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NDFkOTJhMTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Afr35cM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25AE%25E5%2589%258A%25E6%25B8%259B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:D2C%2520m-tech%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:D2C%2520m-tech%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmZTIyZmYyMWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NDFkOTJhMTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoooou/articles/6eac87b85984ea",
          "author": "リョウ",
          "description": "覚書なので、全くもって完ぺきではありません。なのでより良い方法がありましたら、コメントをお願いします。\n参考\nhttps://saturncloud.io/blog/how-to-convert-a-tensorflow-frozen-graph-to-savedmodel/\nhttps://stackoverflow.com/questions/44329185/convert-a-graph-proto-pb-pbtxt-to-a-savedmodel-for-use-in-tensorflow-serving-o/44329200#44329200\nimport tensorflo...",
          "link": "https://zenn.dev/ryoooou/articles/6eac87b85984ea",
          "publishedOn": "2023-08-30T22:04:45.000Z",
          "wordCount": 690,
          "title": "tensorflow v2でfrozen_inference_graph.pbをsaved_modelに変換",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nMTdxXW6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tensorflow%2520v2%25E3%2581%25A7frozen_inference_graph.pb%25E3%2582%2592saved_model%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%25A7%25E3%2582%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NjA1NTA3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nMTdxXW6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tensorflow%2520v2%25E3%2581%25A7frozen_inference_graph.pb%25E3%2582%2592saved_model%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%25A7%25E3%2582%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NjA1NTA3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoooou/articles/676d79492f62c9",
          "author": "リョウ",
          "description": "覚書なので、全くもって完ぺきではありません。なのでより良い方法がありましたら、コメントをお願いします。\n参考　https://github.com/tensorflow/models/blob/master/research/object_detection/colab_tutorials/inference_tf2_colab.ipynb\nimport os\nimport pathlib\n\n# Clone the tensorflow models repository if it doesn't already exist\nif \"models\" in pathlib.Path.cw...",
          "link": "https://zenn.dev/ryoooou/articles/676d79492f62c9",
          "publishedOn": "2023-08-30T21:48:17.000Z",
          "wordCount": 306,
          "title": "google colabでtensorflowのobject_detectionモジュールを使えるようになるまで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HHywTcVR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:google%2520colab%25E3%2581%25A7tensorflow%25E3%2581%25AEobject_detection%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%25A7%25E3%2582%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NjA1NTA3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HHywTcVR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:google%2520colab%25E3%2581%25A7tensorflow%25E3%2581%25AEobject_detection%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%25A7%25E3%2582%25A6%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NjA1NTA3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/honomaru/articles/23afaa348280fc",
          "author": "Honoka",
          "description": "毎日やると言いましたが、和訳も元の英語のブログも更新できていません、、というのも体調を大きく崩しており...継続が大事ということで投げ出さず細々と続けていけたらと思います。\nDay2はRay Core(分散コンピューティングを支える基礎となるAPIを提供している部分)概要に入る前の前提知識の整理がメインになります。\nアプリケーションアーキテクチャの本などで基本のきとして載ってる内容なのかなとか思います。\n\n Ray Core の前に...\n\n 1. Rayクラスターとは\nRayクラスターは、アプリケーションのプロセスを分散させたいノードのセットを指します（ベアメタルサーバー、仮想マシン、...",
          "link": "https://zenn.dev/honomaru/articles/23afaa348280fc",
          "publishedOn": "2023-08-30T15:08:43.000Z",
          "wordCount": 406,
          "title": "Day2：Ray Core の前に... ~ N日間Rayを学ぶ  / Python で分散コンピューティング~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--35a7xuba--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Day2%25EF%25BC%259ARay%2520Core%2520%25E3%2581%25AE%25E5%2589%258D%25E3%2581%25AB...%2520%7E%2520N%25E6%2597%25A5%25E9%2596%2593Ray%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2520%2520%252F%2520Python%2520%25E3%2581%25A7%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Honoka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZkhvUlFkcXEyaTRiRXVOQTU1Yk1OMTYxSTFfMlh4NzcyRFZXQ2dfUVJpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--35a7xuba--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Day2%25EF%25BC%259ARay%2520Core%2520%25E3%2581%25AE%25E5%2589%258D%25E3%2581%25AB...%2520%7E%2520N%25E6%2597%25A5%25E9%2596%2593Ray%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2520%2520%252F%2520Python%2520%25E3%2581%25A7%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Honoka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZkhvUlFkcXEyaTRiRXVOQTU1Yk1OMTYxSTFfMlh4NzcyRFZXQ2dfUVJpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rie_amasato/articles/00db1989798b9c",
          "author": "Amasato Rie(遍怜 悧叡)",
          "description": "前に書いた記事ではGitpodというクラウド上でVSCodeライクな環境を使えるサービスを使って、クラウド上にJupyterのターミナルを置いてお手軽iPadでJupyter環境を整えていました\nしかし、Jupyter Notebookが7系アップグレードされたことで問題が発生してしまった\niPadだとShft+Enterでのコードブロック実行後に次のコードブロックにカーソルが移動しない！\nこれ、いくつかのコードブロックを実行したいそき、右手小指でShiftキーを長押ししながら、薬指でEnter、Enter、Enter…って連続してコードブロックを実行できていたのができなくなっています。...",
          "link": "https://zenn.dev/rie_amasato/articles/00db1989798b9c",
          "publishedOn": "2023-08-30T08:12:50.000Z",
          "wordCount": 239,
          "title": "Gitpod上でのJupyter環境で、バージョンを7系から6系にしたお話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rQ9ItoiY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gitpod%25E4%25B8%258A%25E3%2581%25A7%25E3%2581%25AEJupyter%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2580%2581%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25927%25E7%25B3%25BB%25E3%2581%258B%25E3%2582%25896%25E7%25B3%25BB%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Amasato%2520Rie%2528%25E9%2581%258D%25E6%2580%259C%2520%25E6%2582%25A7%25E5%258F%25A1%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYzE4OTZjN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rQ9ItoiY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gitpod%25E4%25B8%258A%25E3%2581%25A7%25E3%2581%25AEJupyter%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2580%2581%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25927%25E7%25B3%25BB%25E3%2581%258B%25E3%2582%25896%25E7%25B3%25BB%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Amasato%2520Rie%2528%25E9%2581%258D%25E6%2580%259C%2520%25E6%2582%25A7%25E5%258F%25A1%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYzE4OTZjN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a3bbb772add1f8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-295 A - Probably English\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringList():\n    return list(input().split())\n\n\ndef main():\n    n = getInt()\n    w = getStringList()\n    d = ['and', 'not', 'that', 'the', 'you']\n\n    w.sort()\n\n    r = False\n    for x in set(w):\n     ...",
          "link": "https://zenn.dev/hyperdb/articles/a3bbb772add1f8",
          "publishedOn": "2023-08-30T07:31:35.000Z",
          "wordCount": 371,
          "title": "［AtCoder］ABC-295｜A - Probably English",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LwGmPoCU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-295%25EF%25BD%259CA%2520-%2520Probably%2520English%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LwGmPoCU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-295%25EF%25BD%259CA%2520-%2520Probably%2520English%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/664232fa21aa5b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-295 B - Bombs\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringListRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef explode(a, x, y, w, h):\n    p = int(a[y][x])\n\n    a[y][x] = '.'\n\n    for j in range(-p, p + 1):\n        for i in range(-p, p + 1...",
          "link": "https://zenn.dev/hyperdb/articles/664232fa21aa5b",
          "publishedOn": "2023-08-30T07:31:35.000Z",
          "wordCount": 683,
          "title": "［AtCoder］ABC-295｜B - Bombs",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ua6fC4XW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-295%25EF%25BD%259CB%2520-%2520Bombs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ua6fC4XW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-295%25EF%25BD%259CB%2520-%2520Bombs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sutamac/articles/630dc87f62e6b4",
          "author": "KNR109",
          "description": "はじめに\n今回はChatGPTを利用した開発におけるアシスタントのやり方とLangChainを活用した実装方法を具体的なアプリ開発を例に解説していきます。\nLangChainの実装方法について、Python未経験の自分でもサクッと実装できたので、初心者でも理解できるように解説をしていきます。\n\n この記事で学べること\n\nChatGPTを使って要件定義、設計、開発などをアシストする活用例が分かる\nアプリ開発においてLangChainの活用方法を学べる\n\n前半でビジネスサイド(いわゆる要件定義、設計)などの解説をし、後半で具体的な開発例を解説する構成になっています。\nLangChainに...",
          "link": "https://zenn.dev/sutamac/articles/630dc87f62e6b4",
          "publishedOn": "2023-08-30T07:00:54.000Z",
          "wordCount": 4597,
          "title": "ChatGPTとLangChainを活用したアプリ開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MH8oOitW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A8LangChain%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KNR109%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ODZiYTE3MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MH8oOitW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A8LangChain%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KNR109%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ODZiYTE3MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsuromurata/articles/b8bcaac383b167",
          "author": "しば🐕AI",
          "description": "huggingface autotrainとは\nhuggingface autotrainとは、データセットさえあれば誰でも簡単にLLMやStable diffusionを学習することができるprojectです。\nhttps://github.com/huggingface/autotrain-advanced\n今回はstable diffusion xlを対象にやってみようと思います。\n\n リンク\nColab\ngithub\n\n 準備\nGoogle Colabを開き、メニューから「ランタイム→ランタイムのタイプを変更」でランタイムを「GPU」に変更します。\n\n 環境構築\nインストール...",
          "link": "https://zenn.dev/tatsuromurata/articles/b8bcaac383b167",
          "publishedOn": "2023-08-30T03:39:59.000Z",
          "wordCount": 942,
          "title": "huggingface autotrainをgoogle colabで試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HQdzBYIZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:huggingface%2520autotrain%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HQdzBYIZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:huggingface%2520autotrain%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lot36z/articles/0453eb2a06ebe5",
          "author": "のっかー",
          "description": "PythonコードをVSCodeでptvsdを使ってリモートデバッグする方法のメモです。\nPythonのバージョンは以下のとおり。\npython --version\n出力結果:\nPython 3.10.8\n\n 必要ライブラリのインストール\n# 必要ライブラリのインストール\npython -m pip install ptvsd==4.3.2\n\n 実行スクリプトの作成\n実行スクリプト(=デバッグしたいスクリプト)を仮で以下のとおり作成。\n\n./sample.py\nimport sys\n\nif __name__ == '__main__':\n    print(\"Hello, \" + sys...",
          "link": "https://zenn.dev/lot36z/articles/0453eb2a06ebe5",
          "publishedOn": "2023-08-30T03:27:50.000Z",
          "wordCount": 473,
          "title": "PythonコードをVSCodeでptvsdを使ってリモートデバッグ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HAOtaLP5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592VSCode%25E3%2581%25A7ptvsd%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HAOtaLP5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592VSCode%25E3%2581%25A7ptvsd%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%25A3%25E3%2581%258B%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MzdsN0cxaEFVU3pDX0ZHVktSZTBDRHRfbzRGYmMxNjV3NTZRM1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zuzuzu/articles/e3d4305c403707",
          "author": "zuki",
          "description": "エラー内容\nRun pytest\n  pytest\n  shell: /usr/bin/bash -e {0}\n  env:\n    pythonLocation: /opt/hostedtoolcache/Python/3.7.17/x64\n    PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.7.17/x64/lib/pkgconfig\n    Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.7.17/x64\n    Python2_ROOT_DIR: /opt/hostedtoolca...",
          "link": "https://zenn.dev/zuzuzu/articles/e3d4305c403707",
          "publishedOn": "2023-08-30T02:11:01.000Z",
          "wordCount": 194,
          "title": "[github actions]Error: Process completed with exit code 5.",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HXe4J72T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bgithub%2520actions%255DError%253A%2520Process%2520completed%2520with%2520exit%2520code%25205.%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYzkyNjY5ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HXe4J72T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bgithub%2520actions%255DError%253A%2520Process%2520completed%2520with%2520exit%2520code%25205.%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYzkyNjY5ZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/porphyrio/articles/93ef80b71703d3",
          "author": "porphyrio",
          "description": "はじめに\n東工大の機械系の院試の問題をpythonを使って解いてみます。今回は令和3年度の数学の試験を解いていきます。過去問は以下のページにあります。\nhttps://www.titech.ac.jp/admissions/prospective-students/admissions/past-exam-papers\n\n 問１\n\n\n 問1 (1)\n回転体の体積を求める問題です。まず図を書いてみます。\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#仮の値\na = 2\nb = 5\n\n# 円のパラメータ\ncenter = (0,...",
          "link": "https://zenn.dev/porphyrio/articles/93ef80b71703d3",
          "publishedOn": "2023-08-29T15:14:23.000Z",
          "wordCount": 3273,
          "title": "東工大機械系院試をpythonで解いてみた[数学編]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0mSQ8zwL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%2595%25B0%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0mSQ8zwL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259D%25B1%25E5%25B7%25A5%25E5%25A4%25A7%25E6%25A9%259F%25E6%25A2%25B0%25E7%25B3%25BB%25E9%2599%25A2%25E8%25A9%25A6%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255B%25E6%2595%25B0%25E5%25AD%25A6%25E7%25B7%25A8%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porphyrio%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyYWIyZTAzMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kentoo1/articles/30ac7f25d76278",
          "author": "ケントゥ",
          "description": "概要\n前回はPoetryを用いてRecboleの環境構築をし、テストコマンドが通るところまで進めました。\n今回は、Recboleが用意しているデータセットリストの中からAnimeデータセットを取得し、RecBoleで使えるフォーマットに加工する方法を書きます。基本的には公式ドキュメント（Anime.md）の通りに進めればよいのですが、ローカル環境に依存しない形で進めたいので、ここではPoetryを使った方法を紹介します。\n\n データを用意する\n\n データ加工リポジトリのクローン\nmkdir ~/src\ncd ~/src\ngit clone https://github.com/RUC...",
          "link": "https://zenn.dev/kentoo1/articles/30ac7f25d76278",
          "publishedOn": "2023-08-29T14:28:14.000Z",
          "wordCount": 239,
          "title": "RecBoleを使ってみよう2　データの用意",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Mq26oQmi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25862%25E3%2580%2580%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%2594%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Mq26oQmi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%25862%25E3%2580%2580%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%2594%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/h_hiroyuki/articles/4b92c64ab41ede",
          "author": "Hiro",
          "description": "はじめに\n衛生画像を活用して健康と衛生に関する情報を得ることは、今や一般的な方法です。本記事では、Pythonを使用して、衛生画像をNDVI（Normalized Difference Vegetation Index）に変換し、そのプロセスを通じて衛生画像の解析方法を紹介します。\n\n 衛生画像とNDVIとは？\n衛生画像は、特定の波長範囲で撮影された画像で、土地や植物の健康状態を評価するのに使用されます。一方、NDVIは植物の植生を示す指標で、緑色と近赤外線の光の反射率を比較することで算出されます。NDVIは、植物の生育状態や土地の質を評価するのに役立つ重要な指標です。\n農業では、例...",
          "link": "https://zenn.dev/h_hiroyuki/articles/4b92c64ab41ede",
          "publishedOn": "2023-08-29T13:47:28.000Z",
          "wordCount": 405,
          "title": "衛生画像をPythonでNDVIに変換して表示する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QjrxHtFp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%259B%25E7%2594%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592Python%25E3%2581%25A7NDVI%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%25A6%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MllIU1h5eTFrNkRvWmpuQUZyLWZRMlc5V05SUk1zMlpvbmlPMGp1Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QjrxHtFp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%259B%25E7%2594%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592Python%25E3%2581%25A7NDVI%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%25A6%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MllIU1h5eTFrNkRvWmpuQUZyLWZRMlc5V05SUk1zMlpvbmlPMGp1Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/honomaru/articles/16121b9124e7b4",
          "author": "Honoka",
          "description": "前書き\n毎日Rayとその周りの知識について、少しでも学習した記録を残していこうと思います。\nRayだけでなくOS周りの知識もつけていきたいなと思います。\nみなさんは、Rayをご存知でしょうか？\n英語でもRayのブログを書いているんですが、調べていて日本語の記事が少ないのかな？と思ったので、日本語でも書いてみようかなというモチベーションです。\n※英語版も同じですが、学習過程の記録なので理解が誤ってる可能性もありますが、誤りに気づいたらできるだけ修正もしていきたいと思います。。\nRayについては、オライリーから書籍が出ています。英語版ですが。。\n\nScaling Python With ...",
          "link": "https://zenn.dev/honomaru/articles/16121b9124e7b4",
          "publishedOn": "2023-08-29T09:18:44.000Z",
          "wordCount": 368,
          "title": "Day 1 ~ N日間Rayを学ぶ  / Python で分散コンピューティング~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--phUBjXjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Day%25201%2520%7E%2520N%25E6%2597%25A5%25E9%2596%2593Ray%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2520%2520%252F%2520Python%2520%25E3%2581%25A7%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Honoka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZkhvUlFkcXEyaTRiRXVOQTU1Yk1OMTYxSTFfMlh4NzcyRFZXQ2dfUVJpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--phUBjXjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Day%25201%2520%7E%2520N%25E6%2597%25A5%25E9%2596%2593Ray%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2520%2520%252F%2520Python%2520%25E3%2581%25A7%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Honoka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZkhvUlFkcXEyaTRiRXVOQTU1Yk1OMTYxSTFfMlh4NzcyRFZXQ2dfUVJpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/f8b749930ed0af16d76c",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/f8b749930ed0af16d76c\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n\n 変更前タイトル：pythonのクラス変数に外部関数を使うときにTypeError: function name takes 0 positional arguments but 1 was...",
          "link": "https://zenn.dev/nomuraya/articles/f8b749930ed0af16d76c",
          "publishedOn": "2023-08-29T07:40:11.000Z",
          "wordCount": 266,
          "title": "pythonのクラス変数に外部関数を使うとTypeError:(省略) but 1 was givenになる問題を考える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SG3Wfa9L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2596%25E9%2583%25A8%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8TypeError%253A%2528%25E7%259C%2581%25E7%2595%25A5%2529%2520but%25201%2520was%2520given%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SG3Wfa9L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2596%25E9%2583%25A8%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8TypeError%253A%2528%25E7%259C%2581%25E7%2595%25A5%2529%2520but%25201%2520was%2520given%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/d68ed63a7dae897eda7c",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/d68ed63a7dae897eda7c\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\nbase_string = 'test'\nINSERT_POINT = 2  #分かりやすくするために大文字\ninsert_string = '--hoge--'\n\n# 2文字目から挿入したい...",
          "link": "https://zenn.dev/nomuraya/articles/d68ed63a7dae897eda7c",
          "publishedOn": "2023-08-29T07:36:41.000Z",
          "wordCount": 202,
          "title": "pythonで任意の場所に文字を挿入したい！（関数・ラムダ式でも書いてみた）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AWOvgTp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%25EF%25BC%2588%25E9%2596%25A2%25E6%2595%25B0%25E3%2583%25BB%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25E3%2581%25A7%25E3%2582%2582%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AWOvgTp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%25EF%25BC%2588%25E9%2596%25A2%25E6%2595%25B0%25E3%2583%25BB%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25E3%2581%25A7%25E3%2582%2582%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/d360b531039cac1a9842",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/d360b531039cac1a9842\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n<a href=\"https://teratail.com/questions/141682\">フルパスを持つPath or strから、任意に指定した階層以上だけを切り捨てたい&...",
          "link": "https://zenn.dev/nomuraya/articles/d360b531039cac1a9842",
          "publishedOn": "2023-08-29T07:36:40.000Z",
          "wordCount": 156,
          "title": "pathlibのメソッドチェーンだけでパスを加工したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5ApO0Uqf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pathlib%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E5%258A%25A0%25E5%25B7%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5ApO0Uqf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pathlib%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E5%258A%25A0%25E5%25B7%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/b1a59a78ddb1b21f172a",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/b1a59a78ddb1b21f172a\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n気付いたらそれだけなんですが、気付くまでに時間が掛かるやつです。\n探しても見つからなかったので備忘録。\n\n やりたいこと\ndef practice(message = None):\n  if ...",
          "link": "https://zenn.dev/nomuraya/articles/b1a59a78ddb1b21f172a",
          "publishedOn": "2023-08-29T07:32:33.000Z",
          "wordCount": 253,
          "title": "備忘録：pythonのelse時に何もしない場合の書き方をワンライナーで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q-bVsL4W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%259Apython%25E3%2581%25AEelse%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%2595%25E3%2582%2582%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q-bVsL4W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%259Apython%25E3%2581%25AEelse%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%2595%25E3%2582%2582%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/ab1f3c7062f9ef6d588f",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/ab1f3c7062f9ef6d588f\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n\n [map,filterなど高階関数がよく分からない場合]listの中にlistを持っていた時にmap関数を使いたい\nなんてことはないんだけど、解説してるサイトが見つからなかったので、後で困...",
          "link": "https://zenn.dev/nomuraya/articles/ab1f3c7062f9ef6d588f",
          "publishedOn": "2023-08-29T07:32:31.000Z",
          "wordCount": 333,
          "title": "[map,filterなど高階関数がよく分からない場合]listの中にlistを持っていた時にmap関数を使いたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AkXAmoPN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bmap%252Cfilter%25E3%2581%25AA%25E3%2581%25A9%25E9%25AB%2598%25E9%259A%258E%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E5%2588%2586%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%255Dlist%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25ABlist%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E6%2599%2582%25E3%2581%25ABmap%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AkXAmoPN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bmap%252Cfilter%25E3%2581%25AA%25E3%2581%25A9%25E9%25AB%2598%25E9%259A%258E%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E5%2588%2586%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%255Dlist%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25ABlist%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E6%2599%2582%25E3%2581%25ABmap%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/a53faad2d3ad566f9b69",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/a53faad2d3ad566f9b69\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n結構簡単に出来るみたいです。\n当初は素直にlist作ってその中にtargetが存在するかチェックするループを使って…としていたんですが、数によってはめちゃくちゃ重くなるforを実行してしまいま...",
          "link": "https://zenn.dev/nomuraya/articles/a53faad2d3ad566f9b69",
          "publishedOn": "2023-08-29T07:25:17.000Z",
          "wordCount": 169,
          "title": "もっと簡単で高速に一意なデータの判別がしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--40XZGICI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E4%25B8%2580%25E6%2584%258F%25E3%2581%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--40XZGICI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E4%25B8%2580%25E6%2584%258F%25E3%2581%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/7ae15e8dc299ea8ad2c8",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/7ae15e8dc299ea8ad2c8\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\nPython2.7でやってます。3系はもっと簡単に出来そう。\n\n ソースコード\nfrom urlparse import urlparse\nimport urllib\n\ndef toGSBL(...",
          "link": "https://zenn.dev/nomuraya/articles/7ae15e8dc299ea8ad2c8",
          "publishedOn": "2023-08-29T07:25:07.000Z",
          "wordCount": 373,
          "title": "Google Safe Browsing ListにCSVから取得したマルチバイト文字を含んだURLを渡す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sgQauXGz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Safe%2520Browsing%2520List%25E3%2581%25ABCSV%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2588%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0URL%25E3%2582%2592%25E6%25B8%25A1%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sgQauXGz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Safe%2520Browsing%2520List%25E3%2581%25ABCSV%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2588%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2593%25E3%2581%25A0URL%25E3%2582%2592%25E6%25B8%25A1%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/78d0174977bb61a52808",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/78d0174977bb61a52808\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n\n XMLファイルをPandas.DataFrameで扱いたい\npandasはcsvやjsonを扱う時は便利ですが、xmlは対応してくれていないのか、良い方法が思いつきませんでした。\nxmlを...",
          "link": "https://zenn.dev/nomuraya/articles/78d0174977bb61a52808",
          "publishedOn": "2023-08-29T07:25:06.000Z",
          "wordCount": 283,
          "title": "XMLファイルをPandas.DataFrameで扱いたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nwLV6DFk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XML%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592Pandas.DataFrame%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nwLV6DFk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XML%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592Pandas.DataFrame%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nomuraya/articles/51b5a8bf9ef41ed04ac2",
          "author": "nomuraya@元CTOのIT講師",
          "description": "!\nこの記事はQiitaから移行しています。\n\nhttps://qiita.com/items/51b5a8bf9ef41ed04ac2\n\n\n お詫び\nQiitaの元記事にて、区切り線を「---」で書いている場所があり、これがZennの記法に干渉して一部うまく表示できない記事がある事を認識しています。\n全ての記事を精査しきれていないため、お手数ですがお見かけの際は教えていただけると大変喜びます。\n\n私自身、pythonもあまり理解していると言えないレベルだが、そんなレベルでも手っ取り早くパンダさんすげー！っていいたい記事が見つからなかったので書いた。\n正直、他の記事とかを読むと、周りのレ...",
          "link": "https://zenn.dev/nomuraya/articles/51b5a8bf9ef41ed04ac2",
          "publishedOn": "2023-08-29T07:25:00.000Z",
          "wordCount": 528,
          "title": "pandasの威力を手っ取り早く実感したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cf8Yfxvw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AE%25E5%25A8%2581%25E5%258A%259B%25E3%2582%2592%25E6%2589%258B%25E3%2581%25A3%25E5%258F%2596%25E3%2582%258A%25E6%2597%25A9%25E3%2581%258F%25E5%25AE%259F%25E6%2584%259F%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cf8Yfxvw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AE%25E5%25A8%2581%25E5%258A%259B%25E3%2582%2592%25E6%2589%258B%25E3%2581%25A3%25E5%258F%2596%25E3%2582%258A%25E6%2597%25A9%25E3%2581%258F%25E5%25AE%259F%25E6%2584%259F%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomuraya%2540%25E5%2585%2583CTO%25E3%2581%25AEIT%25E8%25AC%259B%25E5%25B8%25AB%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cyeDF3QzRTNUdSLVlmSWN5RDV0b2lxUkQ1SklaSkFpSjk4cUk1UVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yu_9/articles/cd31b6a904dcde",
          "author": "yukyu",
          "description": "読んだ技術記事の理解を深めるべく、技術記事の内容からクイズを生成するサイトを作りました。\nhttps://quizbite.yukyu.net/about\n\n 使い方\nhttps://quizbite.yukyu.net にテキストボックスに技術記事のURLを入力し、「クイズを作る」をクリックします。\nあとは、クイズが生成されるまで待ちます。生成が終わるまで大体1分半くらいかかります。\n\nhttps://quizbite.yukyu.net/?url=<技術記事のURL>とすると、テキストボックスにurlが入力された状態で共有できます。\n\n デモ動画\nhttps://yout...",
          "link": "https://zenn.dev/yu_9/articles/cd31b6a904dcde",
          "publishedOn": "2023-08-29T06:02:56.000Z",
          "wordCount": 1002,
          "title": "GPT-4とLangChainで技術記事のクイズを生成するサイトを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--u19Zco9A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-4%25E3%2581%25A8LangChain%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukyu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4YzcxMmIzM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--u19Zco9A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-4%25E3%2581%25A8LangChain%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukyu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4YzcxMmIzM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shabaraba/articles/c581b6126b1a23",
          "author": "しゃば",
          "description": "はじめに\n今は訳合ってサービスを閉じてしまっているのですが、スマレジプラットフォームアプリでlook-into-basketsというアプリを公開していました。\nhttps://github.com/shabaraba/look-into-baskets\n取引履歴から期間を指定してアソシエーション分析結果を表示するアプリだったのですが、\n\nフロントとバックが密結合だったので、分割したかった\n「アソシエーション分析」というもの自体が割と使い勝手がよく、いろんなことに応用が効きそう\n\n自作ブログのタグを分析すれば、僕の興味とかスキルセットとか見えるんじゃないか、とか\n\n\n\nという理由から、...",
          "link": "https://zenn.dev/shabaraba/articles/c581b6126b1a23",
          "publishedOn": "2023-08-29T05:48:48.000Z",
          "wordCount": 1577,
          "title": "アソシエーション分析ができるAPIをlambdaとAPI-Gatewayで作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--65sTOJsD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25BD%25E3%2582%25B7%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2588%2586%25E6%259E%2590%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BAPI%25E3%2582%2592lambda%25E3%2581%25A8API-Gateway%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmMjlhNmM2OTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--65sTOJsD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25BD%25E3%2582%25B7%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2588%2586%25E6%259E%2590%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BAPI%25E3%2582%2592lambda%25E3%2581%25A8API-Gateway%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmMjlhNmM2OTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maretol/articles/9d6aca61cbb89e",
          "author": "Maretol",
          "description": "ことのはじまり\nBigQueryで集計した結果をMｙSQLに入れる作業でpythonを用いてこんな感じの実装をしていた（実際はもうちょいいろいろしてる\nquery_job = bq_client.query(some_query)\nquery_job.result()\nresult = query_job.to_dataframe()\n\nresult.to_sql(\n\tsome_table,\n\tconnection,\n\tif_exist=\"append\",\n)\nあるとき、この部分でエラーが起きて対応したのだが（この対応自体は本記事とあまり関係ないため省略）、pandasのドキュメント...",
          "link": "https://zenn.dev/maretol/articles/9d6aca61cbb89e",
          "publishedOn": "2023-08-29T05:15:20.000Z",
          "wordCount": 576,
          "title": "pandasのDataFrame.to_sqlのmethodとchunksize設定について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uXa6jMaP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AEDataFrame.to_sql%25E3%2581%25AEmethod%25E3%2581%25A8chunksize%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maretol%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHd3ROUEQtTzQxSkszUmNIbmUtel9hb1hhQ3d2M2phWlBJVzlDPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uXa6jMaP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AEDataFrame.to_sql%25E3%2581%25AEmethod%25E3%2581%25A8chunksize%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maretol%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHd3ROUEQtTzQxSkszUmNIbmUtel9hb1hhQ3d2M2phWlBJVzlDPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/fb995e930cf0c1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-294 A - Filter\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n    b = [i for i in a if i % 2 == 0]\n\n    print(\" \".join(map(str, b)))\n\n\nif __name__ == \"__main__\":\n    ma...",
          "link": "https://zenn.dev/hyperdb/articles/fb995e930cf0c1",
          "publishedOn": "2023-08-29T04:02:50.000Z",
          "wordCount": 326,
          "title": "［AtCoder］ABC-294｜A - Filter",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rXopiIsv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-294%25EF%25BD%259CA%2520-%2520Filter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rXopiIsv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-294%25EF%25BD%259CA%2520-%2520Filter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1f21f49cdf37d5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-294 B - ASCII Art\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef asc(c):\n    return chr(ord('A') + c - 1)\n\n\ndef main():\n    h, w = getIntMap()\n    a = getIntListRow(h)\n\n    f...",
          "link": "https://zenn.dev/hyperdb/articles/1f21f49cdf37d5",
          "publishedOn": "2023-08-29T04:02:50.000Z",
          "wordCount": 420,
          "title": "［AtCoder］ABC-294｜B - ASCII Art",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Gr4_OMpi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-294%25EF%25BD%259CB%2520-%2520ASCII%2520Art%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Gr4_OMpi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-294%25EF%25BD%259CB%2520-%2520ASCII%2520Art%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/suehiro3721p/books/5b47e32964893f",
          "author": "JJ",
          "description": "メルマガ「Pythoで、情報、数学再学習」(パイマガ)のまとめ\nhttps://www.mag2.com/m/0001685552\n\nPython  言語で、高校に導入された教科「情報」を学習し、高校数学、さらに、大学工学部で勉強する数学を勉強します。人工知能の基礎となる統計も学習します。",
          "link": "https://zenn.dev/suehiro3721p/books/5b47e32964893f",
          "publishedOn": "2023-08-29T02:43:54.000Z",
          "wordCount": 64,
          "title": "大人のためのPythoで、情報、数学再学習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s6X8UUTi--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zNjEzOTkwNzA4LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s6X8UUTi--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zNjEzOTkwNzA4LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/dexcter/articles/b90455b7f523c7",
          "author": "dexcter",
          "description": "発生問題\nコマンドにpip install mysqclientと入力すると、以下のエラーメッセージが出てきた\n・・・\n/bin/sh: 1: mysql_config: not found\n/bin/sh: 1: mariadb_config: not found\n/bin/sh: 1: mysql_config: not found\nTraceback (most recent call last):\nFile \"<string>\", line 1, in <module>\nFile \"/tmp/pip-install-pnhw9vzq/mysqlclie...",
          "link": "https://zenn.dev/dexcter/articles/b90455b7f523c7",
          "publishedOn": "2023-08-29T00:08:40.000Z",
          "wordCount": 215,
          "title": "「OSError: mysql_config not found」と言われた時の対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ck2__gA7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258COSError%253A%2520mysql_config%2520not%2520found%25E3%2580%258D%25E3%2581%25A8%25E8%25A8%2580%25E3%2582%258F%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dexcter%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2ZmE0OTdmNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ck2__gA7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258COSError%253A%2520mysql_config%2520not%2520found%25E3%2580%258D%25E3%2581%25A8%25E8%25A8%2580%25E3%2582%258F%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dexcter%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2ZmE0OTdmNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/serverless_streamlit_stlite",
          "author": "Tamtam",
          "description": "stliteとは\nstliteは、Streamlitを完全にWebブラウザ上で動作させるためのものです。\nstliteはPyodideというCPythonをWebAssembly/Emscriptenに移植させたモノを搭載しています。\nPyodideを使うことで、ブラウザ上でmicropipを使ってPythonパッケージをインストールして実行することができます。\n言い換えれば、Streamlit用のPythonサーバーを立てることなく、静的なウェブページをセットアップするだけで、必要な計算をユーザーのマシンで直接実行することができます。\nPythonでWebアプリのプロトタイプを素早...",
          "link": "https://zenn.dev/fitness_densuke/articles/serverless_streamlit_stlite",
          "publishedOn": "2023-08-28T15:14:28.000Z",
          "wordCount": 973,
          "title": "Webブラウザ上で動くサーバーレスなStreamlitのstliteを試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HBuUMfJt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25AAStreamlit%25E3%2581%25AEstlite%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HBuUMfJt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25AAStreamlit%25E3%2581%25AEstlite%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/rookzeno/articles/f238f23fcd6e4e",
          "author": "rookzeno",
          "description": "他の人の解法を見ようと思ったのに、あんまり解法が見当たらなかったので書きました。\n上位解法は表彰式に参加して確認しましょう。\n\n タスク\n以下のような中古車販売のデータが与えられるので値段(price)を当てるものです。\n\n\n\n走行距離\n車種\nprice\n\n\n\n\n30000\nトヨタ\n100\n\n\n10000\n日産\nNull\n\n\n\n\n 評価指標\n\\text{MAPE} = \\dfrac{100}{n}\\displaystyle\\sum_{i＝1}^n|\\dfrac{y_i-\\hat{y_i}}{y_i}|\n評価指標がMAPEだったのがこのコンペで難しい部分であり、面白い部分でもあったかもしれ...",
          "link": "https://zenn.dev/rookzeno/articles/f238f23fcd6e4e",
          "publishedOn": "2023-08-28T15:07:49.000Z",
          "wordCount": 1228,
          "title": "SIGNATE Career Up Challenge 2023の24位解法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HNrm5bkv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SIGNATE%2520Career%2520Up%2520Challenge%25202023%25E3%2581%25AE24%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rookzeno%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkYjQxYjk5NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HNrm5bkv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SIGNATE%2520Career%2520Up%2520Challenge%25202023%25E3%2581%25AE24%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rookzeno%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkYjQxYjk5NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/3323b08e1e6e41",
          "author": "よしだ",
          "description": "はじめに\n最近はPPLのStan、NumPyro、PyMCを触っていたのですが、それぞれ一長一短だったため個人的な感覚での評価値ですが、各ライブラリの比較表を残しておきます。\n各ライブラリの細かい使い方は記事一覧から確認してください。\n\n 比較表\n階層モデル〜DL系までのカテゴリは書きやすさで評価しています。\n\n\n\n\nStan\nNumPyro\nPyMC\nMEMO\n\n\n\n\n階層モデル\n△\n◯\n◯\nNumPyroとPyMCでは階層のところを行列演算で自然に書くことができる\n\n\nガウス過程\n△\n△\n◯\nPyMCではカーネル関数やスパースGPなどデフォルトで用意されている\n\n\n時系列モデル（...",
          "link": "https://zenn.dev/yoshida0312/articles/3323b08e1e6e41",
          "publishedOn": "2023-08-28T14:31:00.000Z",
          "wordCount": 138,
          "title": "PPL比較：Stan、NumPyro、PyMC",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tDLc2DzC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PPL%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%259AStan%25E3%2580%2581NumPyro%25E3%2580%2581PyMC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tDLc2DzC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PPL%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%259AStan%25E3%2580%2581NumPyro%25E3%2580%2581PyMC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hiro_0128/books/f74e4a24f5e95d",
          "author": "hirosan",
          "description": "Mattermost のサーバーを構築から公開までの忘備録。",
          "link": "https://zenn.dev/hiro_0128/books/f74e4a24f5e95d",
          "publishedOn": "2023-08-28T12:05:34.000Z",
          "wordCount": 82,
          "title": "ubuntu に nginx, Postgresql, ngrok を使って Mattermost を使ってみた。",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/hk_ilohas/articles/gaussian-process",
          "author": "HK_ilohas",
          "description": "はじめに\nKindle の日替わりセールで買って積読になっていた『ガウス過程と機械学習』を読んだので，ガウス過程回帰について整理し，GPy で試してみました．この記事の内容は『ガウス過程と機械学習』の 2-4 章に対応しています．\nガウス過程回帰とは回帰分析手法の一種で，非線形な関数関係を表すことができます．ガウス過程回帰ではカーネル関数と呼ばれる類似度を表す関数を設定しますが，このカーネル関数を変えることで無限回微分可能な滑らかな関数やブラウン運動，周期性など様々なものを扱えます．\n\n ガウス分布\n平均 \\mu，分散 \\sigma ^2 のガウス分布の確率密度関数は，\n\n\\math...",
          "link": "https://zenn.dev/hk_ilohas/articles/gaussian-process",
          "publishedOn": "2023-08-28T08:30:19.000Z",
          "wordCount": 1425,
          "title": "ガウス過程回帰とGPyのメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uqYbSyIJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%25A8GPy%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uqYbSyIJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%25E5%259B%259E%25E5%25B8%25B0%25E3%2581%25A8GPy%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HK_ilohas%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjcxM2U1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/techflagcorp/articles/5f2aead03878b1",
          "author": "dagger1",
          "description": "SlackとChatGPT APIでチャットボットを作る パート5（番外編／Gradioインターフェイス）\nパート1（基礎編）、パート2（会話履歴管理編）、パート3（function calling編）、パート4 （code interpreterぽい編）ときて、パート5では番外編としてインターフェイスをGradioにすげ換えてみたいと思います。Slackを使っていない方も多いと思いますが、そんな皆さんもGradioなら手軽に試すことができます。ただひとつ、実は悲しいお知らせがありまして、パート4 （code interpreterぽい編）でPythonコードの実行に使ったIPyth...",
          "link": "https://zenn.dev/techflagcorp/articles/5f2aead03878b1",
          "publishedOn": "2023-08-28T07:52:11.000Z",
          "wordCount": 860,
          "title": "SlackとChatGPT APIでチャットボットを作る パート5（番外編／Gradioインターフェイス）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C6c71e_D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25885%25EF%25BC%2588%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25EF%25BC%258FGradio%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C6c71e_D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A8ChatGPT%2520API%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%25E3%2583%2591%25E3%2583%25BC%25E3%2583%25885%25EF%25BC%2588%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%25EF%25BC%258FGradio%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:dagger1%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NDU5Y2E2OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxN2U5ZWU4MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/96fb2d58e273e1",
          "author": "オライリーヨッシー",
          "description": "概要\n本記事では、中間テーブルのデータ表示方法を解説する。「中間テーブルとは #1」に続く記事なので、より詳細を知りたい方はそちらを参考いただきたい。\nhttps://zenn.dev/oreilly_ota/articles/a9a3b4d1dabec0\n\n 中間テーブルのおさらい\n中間テーブルのコードを以下に記載する。\norder_items = db.Table('order_items',\n    db.Column('order_id', db.Integer, db.ForeignKey('order.id'), primary_key=True),\n    db.Col...",
          "link": "https://zenn.dev/oreilly_ota/articles/96fb2d58e273e1",
          "publishedOn": "2023-08-28T05:13:08.000Z",
          "wordCount": 1841,
          "title": "中間テーブルとは #2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZDwavqI1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25AD%25E9%2596%2593%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZDwavqI1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%25AD%25E9%2596%2593%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f3fc0c304664d1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-293 A - Swap Odd and Even\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n    t = ''\n\n    i = 0\n    while i < len(s):\n        t += (s[i:i+2])[::-1]\n        i += 2\n    print(t)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f3fc0c304664d1",
          "publishedOn": "2023-08-28T04:50:37.000Z",
          "wordCount": 290,
          "title": "［AtCoder］ABC-293｜A - Swap Odd and Even",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ouQ_PI4I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-293%25EF%25BD%259CA%2520-%2520Swap%2520Odd%2520and%2520Even%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ouQ_PI4I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-293%25EF%25BD%259CA%2520-%2520Swap%2520Odd%2520and%2520Even%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dbb58b46626623",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-293 B - Call the ID Number\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = [0] + getIntList()\n    b = [0 for _ in range(len(a))]\n\n    for i in range(1, len(a)):\n        if b[i] == 0:...",
          "link": "https://zenn.dev/hyperdb/articles/dbb58b46626623",
          "publishedOn": "2023-08-28T04:50:36.000Z",
          "wordCount": 489,
          "title": "［AtCoder］ABC-293｜B - Call the ID Number",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gkcpHoRA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-293%25EF%25BD%259CB%2520-%2520Call%2520the%2520ID%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gkcpHoRA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-293%25EF%25BD%259CB%2520-%2520Call%2520the%2520ID%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sion_pn/articles/a725029649b0f8",
          "author": "Mimaki SiON",
          "description": "https://zenn.dev/sion_pn/articles/afe598bdbfebf9\n前回、AtProtocolを使ってBlueskyにPythonからPostする方法を書きましたが、この方法でURLを含んだテキストを投稿しても、リンクが自動では有効にならないため任意のWebページを開くことが出来ません。\nそのため、Blueskyへリンク付きのPostを投稿したい場合、LinkCardを作成して投稿を行うという手順を踏む必要があります。\n\n 使用ライブラリ\n前回の記事で紹介した、The At Protocol SDK for Pythonを使用して実装を行います。\n本記事投稿...",
          "link": "https://zenn.dev/sion_pn/articles/a725029649b0f8",
          "publishedOn": "2023-08-28T01:40:45.000Z",
          "wordCount": 731,
          "title": "AtProtocolを使ってBlueskyにPythonからLinkCardをPostする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mmuC9pfd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtProtocol%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Bluesky%25E3%2581%25ABPython%25E3%2581%258B%25E3%2582%2589LinkCard%25E3%2582%2592Post%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mimaki%2520SiON%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mmuC9pfd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtProtocol%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Bluesky%25E3%2581%25ABPython%25E3%2581%258B%25E3%2582%2589LinkCard%25E3%2582%2592Post%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mimaki%2520SiON%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/torachi0401/articles/how_to_twitter_bot",
          "author": "Torachi0401",
          "description": "はじめに\n楽天BooksのIT関連の書籍の売れ筋からランダムでTwitterに投稿するシステムを作りました。\n特定のジャンルの売れ筋上位30の中からランダムに1つを選択していますので、場合によっては同じ商品が投稿される場合もあります。\n\n 環境\n\n\nRailway\n\npython3.11\n\ntweepy\nreuests\n\n\n\n\n\n\n ソースコード\nimport tweepy\nfrom const import *\n\n\ndef create_post(_title, _affiliate_url, _item_caption):\n    client = tweepy.Client(c...",
          "link": "https://zenn.dev/torachi0401/articles/how_to_twitter_bot",
          "publishedOn": "2023-08-27T16:15:59.000Z",
          "wordCount": 398,
          "title": "楽天の売れ筋商品からランダムにX(Twitter)に投稿する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Heks1esG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25BD%25E5%25A4%25A9%25E3%2581%25AE%25E5%25A3%25B2%25E3%2582%258C%25E7%25AD%258B%25E5%2595%2586%25E5%2593%2581%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2581%25ABX%2528Twitter%2529%25E3%2581%25AB%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Heks1esG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25BD%25E5%25A4%25A9%25E3%2581%25AE%25E5%25A3%25B2%25E3%2582%258C%25E7%25AD%258B%25E5%2595%2586%25E5%2593%2581%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2581%25ABX%2528Twitter%2529%25E3%2581%25AB%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Torachi0401%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODYyYTE0MDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nori0__/articles/0ef8cbb5bda1d8",
          "author": "nori0__",
          "description": "背景\n今まで投稿した技術記事を一覧で欲しいと言われてたので手作業だるすぎとなったのでコード書くことにした。\n\n 実装\nhttps://github.com/nori1994/OUTPUT_CSV_OF_QIITA_ZENN_ARTICLE\nZennだけでなくQiitaでの記事一覧も欲しかったのでどちらも出力できるようにした。\nQiitaについてはこちら。\n記事作成日と記事名のCSVが出力される。\npublished, title,\nYYYY/mm/dd, article title,\n\n 工夫したところ\n\n\n仮想環境記事を参考に仮想環境が Python3 の標準ライブラリである ve...",
          "link": "https://zenn.dev/nori0__/articles/0ef8cbb5bda1d8",
          "publishedOn": "2023-08-27T15:13:55.000Z",
          "wordCount": 160,
          "title": "Zennに投稿した記事一覧をCSVに出力する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8hd1ptmc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E3%2581%25AB%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592CSV%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nori0__%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4ZjdkODlmZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8hd1ptmc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E3%2581%25AB%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592CSV%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nori0__%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4ZjdkODlmZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yonda/articles/13ff0912b92dce",
          "author": "yonda",
          "description": "最適制御問題を最適化手法を利用して解く直説法\nこれをpythonでやってみるだけのメモ\n例題とモデルの数式は「直接法による最適計算手法と宇宙機への応用」（宇宙開発事業団技術報告， ISSN1345-7888， NASDA-TMR-010010）より利用させてもらう。\n\n 例題1\n1次元の運動\n位置:x\n速度:v\n推力:u\n推力は\n-1 <= u <= 1\nと制限される。\n境界条件は\nx(0) = 0\nv(0) = 0\nv(1) = 0\n目的関数は\n\\max x(1)\nつまり、\n始め（t=0）は静止しているが、\n最後(t=1)にはできるだけ遠いところで静止するような\nロケットの...",
          "link": "https://zenn.dev/yonda/articles/13ff0912b92dce",
          "publishedOn": "2023-08-27T12:53:36.000Z",
          "wordCount": 3437,
          "title": "pythonでの直接法による最適計算の一例",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--X0D0DCzw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E7%259B%25B4%25E6%258E%25A5%25E6%25B3%2595%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%2580%25E9%2581%25A9%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E4%25B8%2580%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yonda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZmM1MDUwZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--X0D0DCzw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E7%259B%25B4%25E6%258E%25A5%25E6%25B3%2595%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%2580%25E9%2581%25A9%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AE%25E4%25B8%2580%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yonda%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZmM1MDUwZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/sse_fastapi_openai",
          "author": "Tamtam",
          "description": "今回はFastAPIとSSE(Server-Sent Events)を使って、ChatGPTのようなストリーミングによるレスポンスを実装してみたいと思います！\n\n SSE(Server-Sent Events)とは\nSSEとは、サーバーからクライアントへのイベント・ストリームによる非同期通信をHTTP経由で提供する技術です。\nContent-Typeヘッダーにtext/event-streamを指定しデータを送信すると、クライアント側でイベントを受け取ることができます。\nWebSocketとSSEの主な違いは、WebSocketが双方向通信であるのに対し、SSEは単一方向の通信です。\nS...",
          "link": "https://zenn.dev/fitness_densuke/articles/sse_fastapi_openai",
          "publishedOn": "2023-08-27T11:13:22.000Z",
          "wordCount": 859,
          "title": "SSE(Server-Sent Events)をFastAPIで行いChatGPTの回答をストリーミングで返すAPIサーバーの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UYTR4nHC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSE%2528Server-Sent%2520Events%2529%25E3%2582%2592FastAPI%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2584ChatGPT%25E3%2581%25AE%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E8%25BF%2594%25E3%2581%2599AP...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UYTR4nHC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSE%2528Server-Sent%2520Events%2529%25E3%2582%2592FastAPI%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2584ChatGPT%25E3%2581%25AE%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E8%25BF%2594%25E3%2581%2599AP...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/h0tcatnohotmens/articles/ad6fe9ec3a7148",
          "author": "のーり",
          "description": "はじめに\n\nスロットのデータを手入力でcsvに書き込み、ランダムフォレストで大当たり確率・設定の予想をして、検証をした結果を記事にしてみました。\n\n\n 対象読者\n\n機械学習に興味がある方\nスロットの大当たり予想を試してみたい方\n\n\n 大当たり予想の検証をした経緯\n\nスロットは1から6まで設定が存在し、6に近いほど高設定と呼ばれプレイヤーが勝ちやすくなります。\n当然ながら、しょっちゅう設定6が入ることは無いのが現実です。\nそこで、機械学習で過去のデータを学習して予想すれば高設定の台に座りやすくなったり、低設定を打つリスクが下げられるのではと考え実験しました。\n\n\n 注意\nこの記事および...",
          "link": "https://zenn.dev/h0tcatnohotmens/articles/ad6fe9ec3a7148",
          "publishedOn": "2023-08-27T10:20:22.000Z",
          "wordCount": 186,
          "title": "Python3とscikit-learnでスロットの大当たり確率を予想して無双しようとした話(ランダムフォレスト編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WS3_fEdj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2581%25A8scikit-learnw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2583%25BC%25E3%2582%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JSSlNUeC00VDVCS184a2xtWmxsUFZyYWtCZXpVbzIwUG1takFGPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WS3_fEdj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2581%25A8scikit-learnw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2583%25BC%25E3%2582%258A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JSSlNUeC00VDVCS184a2xtWmxsUFZyYWtCZXpVbzIwUG1takFGPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/jcc/articles/76ba8d333f375d",
          "author": "jc",
          "description": "先日の記事にてパーティション化されたCSVオブジェクトをCloudSQLにimportする方法を紹介しました。\nhttps://zenn.dev/jcc/articles/053ee1e609411d\nSDKを利用して32より多いオブジェクトをまとめる場合、GCPのコミュニティのチュートリアルのコードをそのまま使っていました。（2023.8.10にアーカイブされ済み）\nhttps://github.com/GoogleCloudPlatform/community/blob/master/archived/cloud-storage-infinite-compose/index.md\n文...",
          "link": "https://zenn.dev/jcc/articles/76ba8d333f375d",
          "publishedOn": "2023-08-27T09:58:42.000Z",
          "wordCount": 1857,
          "title": "GCS composeで32以上のオブジェクトをまとめる方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ifSSyhwE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCS%2520compose%25E3%2581%25A732%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ifSSyhwE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCS%2520compose%25E3%2581%25A732%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/otinu/articles/4207621a3e2e0d",
          "author": "おチヌ",
          "description": "ご挨拶\nはじめまして！ おチヌと申します。\n普段は Java に触ることが多いですが、個人では Python や JS など自由にやっています。\n何かしらやってることの区切りがついたり、おもしろそうなネタがまとまったりした際に記事などアウトプットしていきたいと考えてます。\n誰かの記事に助けられることが多いので、自分の記事も微力ながら誰かの+@になるとうれしいです。\nどうぞよろしくお願いします。\n\n GmailAPI の設定\n公式ドキュメントが分かりやすかったです。\nhttps://developers.google.com/gmail/api/quickstart/python?hl...",
          "link": "https://zenn.dev/otinu/articles/4207621a3e2e0d",
          "publishedOn": "2023-08-27T09:50:20.000Z",
          "wordCount": 542,
          "title": "Gmailに届く認証コードをGmailAPIから自動確認したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZRv_KwLs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gmail%25E3%2581%25AB%25E5%25B1%258A%25E3%2581%258F%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592GmailAPI%25E3%2581%258B%25E3%2582%2589%25E8%2587%25AA%25E5%258B%2595%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2583%2581%25E3%2583%258C%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkNTNkM2I3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZRv_KwLs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gmail%25E3%2581%25AB%25E5%25B1%258A%25E3%2581%258F%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592GmailAPI%25E3%2581%258B%25E3%2582%2589%25E8%2587%25AA%25E5%258B%2595%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2583%2581%25E3%2583%258C%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkNTNkM2I3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/huraipan/articles/e49e856058625e",
          "author": "huraipan",
          "description": "本当に簡単な作業をしましょう。\nこれは初めてPyhtonを学ぶ方向けの練習問題です。\n名前を入力したら名前の文字数を出力します。\n\n 文字列を入力してもらおう\nまず文字列を入力してもらう必要がありますね\ninput関数を使って名前をもらいます。\ninput(\"名前を教えてください\")\n\n 文字数を数える関数は？\nlen関数を使ったら文字数を数えることができます。\nlen(\"abc\")  # 3\n\n 結合\nじゃあ上で学んだ関数を使って結合しましょう。\nまずinputを使ったところに入力した文字列が残ります。\nこれで入力した名前の文字数をわかりますね。\nlen(input(\"名前を教えてくだ...",
          "link": "https://zenn.dev/huraipan/articles/e49e856058625e",
          "publishedOn": "2023-08-27T06:36:53.000Z",
          "wordCount": 149,
          "title": "[Python]文字列の入力を受けて文字数を数える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EzQElnzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E5%2585%25A5%25E5%258A%259B%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%2592%25E6%2595%25B0%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EzQElnzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E5%2585%25A5%25E5%258A%259B%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%2592%25E6%2595%25B0%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:huraipan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXY3eUhtRlk4RjNPZjM5M1MybVIyck9kaUh2QVJlRDFNX2p3SW5WXzV4UmRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/blueman/articles/8c04b1a57cb4dd",
          "author": "ブルーマン",
          "description": "目次\nはじめに\n実際にやったこと\nおわりに\n\n はじめに\nコマンドプロンプト上でライブラリを実行しようとするとエラーが出て調べてもあまり分からず苦労したので、自分以外にも同様の問題に遭遇している方の助けになればと思い対処法を紹介します。\nライブラリ名をコマンドプロンプトにて入力して使用するライブラリ(例えば、pyinstallerやmanimなど)でコマンドプロンプト上でライブラリを実行しようとしたところ次のようなエラーが出ました。\nエラー文\n\nエラー文\n\nこのエラーを解決するためにpip installを実行してpyinstallerがどこの階層にあるのかを調べると、\n実行結果\n\n...",
          "link": "https://zenn.dev/blueman/articles/8c04b1a57cb4dd",
          "publishedOn": "2023-08-27T01:00:00.000Z",
          "wordCount": 235,
          "title": "コマンドプロンプト上で実行するライブラリのエラー対処法(Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jyIp5pBX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E4%25B8%258A%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jyIp5pBX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E4%25B8%258A%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shim_a2kf3/articles/typed_python_no_0",
          "author": "しま",
          "description": "はじめに\nお仕事でPythonを書いて1年くらい経ちました。\n(Python自体はもう少しやっています。)\n結構カッチリルールを決めてプログラムを書いていく現場に当たったこともあり、型ヒントやmypyを使ってPythonらしからぬ型チェックを強制しています。\n型を意識しなくとも気軽に使えることが利点のPythonで、わざわざ型を意識したコーディングをする理由とはなんでしょうか？\nこの疑問の答えを探しつつ、やっぱりPythonでも型の意識は大事だよね と共感していただけたらと思い、少しずつ記事を書いていこうかと腰を上げた次第です。\n\n おことわり\n本記事と関連する記事は、あくまで個人の...",
          "link": "https://zenn.dev/shim_a2kf3/articles/typed_python_no_0",
          "publishedOn": "2023-08-26T16:02:38.000Z",
          "wordCount": 354,
          "title": "型を意識したPythonのすすめ 第0回",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2B7bHU9N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E3%2582%2592%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259FPython%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2520%25E7%25AC%25AC0%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4YTRkMjU0YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2B7bHU9N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E3%2582%2592%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259FPython%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2520%25E7%25AC%25AC0%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4YTRkMjU0YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kentoo1/articles/f3d0d4fd610f12",
          "author": "ケントゥ",
          "description": "RecBoleのロゴ。公式サイト https://recbole.io/index.html より引用\n\n 概要\nRecBoleは、多機能かつ拡張性の高いレコメンドシステム用のフレームワークで、様々なレコメンドアルゴリズムとデータセット、評価方法を統一的なフォーマットで扱うことができます。\n今回はRecBoleが動作する環境をPoetry上に構築していきます。\n\n 環境構築\n以下の環境で作業を行っています。\n\nハードウェア: MacBook Air (M1, 2020)\nOS: MacOS Ventura 13.4.1\n\n\n Pythonの用意\n今回は ~/src/recbole_sa...",
          "link": "https://zenn.dev/kentoo1/articles/f3d0d4fd610f12",
          "publishedOn": "2023-08-26T11:20:30.000Z",
          "wordCount": 540,
          "title": "RecBoleを使ってみよう 環境構築編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cxmp03SF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cxmp03SF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RecBole%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZTJFYmV2S1VvM1Y4Z3lNZ2I2MVppYS1IUEk0aXcxZmx3WW9ISmdrMEg2TUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/9930977e690e63",
          "author": "shimo",
          "description": "pytestで出力の1行目を改行する\nprintデバッグをしているとき、pytestの一行目の開始点が揃わないのでよく惑わされています。\npytest -s --no-header test_rollback.py\n\n 通常\nstdoutはテスト関数名の直後から始まります。\n\n\n pytest_runtest_setupフックを使う\nroot_of_test/conftest.pyにこのように書くと最初に改行してくれる。\ndef pytest_runtest_setup(item):\n    print(\"\\n\")\n\n\n 特定のファイルを除外するとき\n以下をpytestから除外したい...",
          "link": "https://zenn.dev/shimo_s3/articles/9930977e690e63",
          "publishedOn": "2023-08-26T08:18:14.000Z",
          "wordCount": 246,
          "title": "pytest メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OfJOzQpR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pytest%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OfJOzQpR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:pytest%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qiskit19",
          "author": "derwind",
          "description": "目的\nNISQ 量子コンピュータの代表的なアルゴリズムの 1 つに VQE (Variational Quantum Eigensolver) というものがある。名前も凄そうだが、解説が圧倒される難しいものが多い。これについて 今北産業 の精神で迫ってみたい。\n\n 結論\nVQE とは要するに以下 (3 行) である:\nqc = QuantumCircuit(1)\nqc.ry(Parameter(\"θ\"), 0)\nprint(VQE(Estimator(), qc, SPSA()).compute_minimum_eigenvalue(Pauli(\"Z\")).optimal_param...",
          "link": "https://zenn.dev/derwind/articles/dwd-qiskit19",
          "publishedOn": "2023-08-26T08:10:01.000Z",
          "wordCount": 659,
          "title": "Qiskit で遊んでみる (19) — VQE を今北産業する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vzLHfGta--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252819%2529%2520%25E2%2580%2594%2520VQE%2520%25E3%2582%2592%25E4%25BB%258A%25E5%258C%2597%25E7%2594%25A3%25E6%25A5%25AD%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vzLHfGta--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qiskit%2520%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2520%252819%2529%2520%25E2%2580%2594%2520VQE%2520%25E3%2582%2592%25E4%25BB%258A%25E5%258C%2597%25E7%2594%25A3%25E6%25A5%25AD%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/f7f3a11153dd80",
          "author": "laiso",
          "description": "SeamlessM4Tとは\nhttps://gigazine.net/news/20230823-meta-speech-translation-transcription-seamlessm4t/\n\n 環境構築\nLinux+CUDAな環境が一番楽です。Google Colab Proが良いでしょう。\nhttps://note.com/npaka/n/ne7874068482f\n\n 依存ライブラリ\nシステム依存については https://huggingface.co/spaces/facebook/seamless_m4t/blob/main/Dockerfile が参考になります。...",
          "link": "https://zenn.dev/laiso/articles/f7f3a11153dd80",
          "publishedOn": "2023-08-26T04:07:39.000Z",
          "wordCount": 1702,
          "title": "SeamlessM4Tで英語のYouTube動画の日本語音声を自動生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NcEvbly_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SeamlessM4T%25E3%2581%25A7%25E8%258B%25B1%25E8%25AA%259E%25E3%2581%25AEYouTube%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NcEvbly_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SeamlessM4T%25E3%2581%25A7%25E8%258B%25B1%25E8%25AA%259E%25E3%2581%25AEYouTube%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2019-01-02t14_14_32-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "成功しているロゴはGoogle検索しなくても思い出せるやつ\n思い出せないやつは成功しているとは言えないんじゃないか\nGolangのGoPherくんは公式ロゴじゃないらしい、公式ロゴは誰も知らない\n\n\n English\nWhat is the rememberable succeeded logo design? @github @twitter @docker @golang @php\n\n its no googling remembering logo\n\n e.g Docker\n\n\n Github\neasy to remember for engineers\nbut some par...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2019-01-02t14_14_32-09_00",
          "publishedOn": "2023-08-26T03:55:34.000Z",
          "wordCount": 585,
          "title": "Google検索せずにサービスロゴを思い出せるのが成功パターン  @github @twitter @docker @golang @php",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0j2N-r6G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2583%25AD%25E3%2582%25B4%25E3%2582%2592%25E6%2580%259D%25E3%2581%2584%25E5%2587%25BA%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258C%25E6%2588%2590%25E5%258A%259F%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2520%2520%2540github%2520%2540twitter%2520%2540docker...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0j2N-r6G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2583%25AD%25E3%2582%25B4%25E3%2582%2592%25E6%2580%259D%25E3%2581%2584%25E5%2587%25BA%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258C%25E6%2588%2590%25E5%258A%259F%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2520%2520%2540github%2520%2540twitter%2520%2540docker...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-12-26t15_57_03-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "Pythonのgcモジュールでガベージコレクションを行う方法 | TechAcademyマガジン\n\n 疑問、pythonでgcとか必要なの？そんな低レイヤーの処理\n\nプログラマーはメモリの解放を明示的にコーディングしなければなりません。コーディングを忘れたり間違えたりすると、メモリリーク(漏れ)の原因になります。\n\n\n やはり相当低レイヤー向けの処理らしい\n\nPythonは必要に応じて自動的にガベージコレクションを行います。\n通常の用途では明示的にガベージコレクションを行う必要はありません。\n\n\n gc用のモジュールがあるらしい\n\n1行目でgcモジュールをインポートしています。\n\nimp...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-12-26t15_57_03-09_00",
          "publishedOn": "2023-08-26T03:54:35.000Z",
          "wordCount": 273,
          "title": "#python #初心者 #gc #ガベージコレクション #勉強 したい #rubyist @yumainaura",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q1KIYhEn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523python%2520%2523%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%2520%2523gc%2520%2523%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2520%2523%25E5%258B%2589%25E5%25BC%25B7%2520%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%2523rubyist%2520%2540yumainaura%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q1KIYhEn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523python%2520%2523%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%2520%2523gc%2520%2523%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2520%2523%25E5%258B%2589%25E5%25BC%25B7%2520%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%2523rubyist%2520%2540yumainaura%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-12-20t12_56_37-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "おもしろいダジャレを入力すると布団が吹っ飛ぶ装置を作った - Qiita\n\nby @fujit33 さん\n\n ダジャレとはなにか、言語学チックに言うと\n「多様な形での、言葉の反復」と言い直すことが出来るかも。なるほど。\n\n2018年12月現在、Sharekaで対応可能なダジャレは、「完全反復型」「不完全反復型」のみであり、「変形反復型」「潜在表現重複型」は対応していません。\n\n\n 「完全反復型」\n\nアサインされて日が浅いんです\n\n「あさいん」と「あさいん」で完全一致\n\n 「不完全反復型」\n\n裏面のらーめん\n\n「らめん」と「らーめん」が反復されているが、不完全一致\n\n 「変形反復型」\n...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-12-20t12_56_37-09_00",
          "publishedOn": "2023-08-26T03:54:17.000Z",
          "wordCount": 240,
          "title": "そもそも言語学的にダジャレとは何なのか？「おもしろいダジャレを入力すると布団が吹っ飛ぶ装置を作った」で学習したいまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QYb-tRwf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2582%2582%25E3%2581%259D%25E3%2582%2582%25E8%25A8%2580%25E8%25AA%259E%25E5%25AD%25A6%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%25E3%2580%258C%25E3%2581%258A%25E3%2582%2582%25E3%2581%2597%25E3%2582%258D%25E3%2581%2584%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%25B8%2583%25E5%259B%25A3%25E3%2581%258C%25E5%2590%25B9%25E3%2581%25A3%25E9%25A3%259B%25E3%2581%25B6%25E8%25A3%2585%25E7%25BD%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258D%25E3%2581%25A7%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QYb-tRwf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2582%2582%25E3%2581%259D%25E3%2582%2582%25E8%25A8%2580%25E8%25AA%259E%25E5%25AD%25A6%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%25E3%2580%258C%25E3%2581%258A%25E3%2582%2582%25E3%2581%2597%25E3%2582%258D%25E3%2581%2584%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%25B8%2583%25E5%259B%25A3%25E3%2581%258C%25E5%2590%25B9%25E3%2581%25A3%25E9%25A3%259B%25E3%2581%25B6%25E8%25A3%2585%25E7%25BD%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258D%25E3%2581%25A7%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-12-20t12_48_28-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "おもしろいダジャレを入力すると布団が吹っ飛ぶ装置を作った - Qiita\n\nby @fujit33 さん\n\n ルールベースって人工知能なの？\nらしい。\n\n※ルールベースは人工知能ではないと言い張る人は、第２次人工知能ブームでググってください。\n\n\n ルールベースによるアプローチの例\n\n「布団がふっとんだ」を「全てカタカナ」に変える(小文字とか記号も削除)\n「3文字ずつのズレ配列を作る」\n重複判定する\n\n\n['フトン', 'トンガ', 'ンガフ', 'ガフト', 'フトン', 'トンダ']\n\n\n ダジャレ判定判定の結果\nnの設定「二文字重複」と「三文字重複」で結果が変わる。\n精度は変わ...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-12-20t12_48_28-09_00",
          "publishedOn": "2023-08-26T03:54:16.000Z",
          "wordCount": 231,
          "title": "ルールベースのアプローチとは？「おもしろいダジャレを入力すると布団が吹っ飛ぶ装置を作った」まとめ自己学習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6rgbkzZe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E3%2580%258C%25E3%2581%258A%25E3%2582%2582%25E3%2581%2597%25E3%2582%258D%25E3%2581%2584%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%25B8%2583%25E5%259B%25A3%25E3%2581%258C%25E5%2590%25B9%25E3%2581%25A3%25E9%25A3%259B%25E3%2581%25B6%25E8%25A3%2585%25E7%25BD%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258D%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E8%2587%25AA%25E5%25B7%25B1%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6rgbkzZe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E3%2580%258C%25E3%2581%258A%25E3%2582%2582%25E3%2581%2597%25E3%2582%258D%25E3%2581%2584%25E3%2583%2580%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25AC%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%25B8%2583%25E5%259B%25A3%25E3%2581%258C%25E5%2590%25B9%25E3%2581%25A3%25E9%25A3%259B%25E3%2581%25B6%25E8%25A3%2585%25E7%25BD%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258D%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E8%2587%25AA%25E5%25B7%25B1%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-08-02t09_45_50-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "どうしてもという時に、こういう方法もあるよという話。\nInternet Archive: Wayback Machine はWebページのアーカイブサービス。\n圧縮ファイルなどもアーカイブしているようだ。\n\n ホップ\nリンク切れしたURLを入力する\n\n\n ステップ\n見つけた\n\n\n ジャンプ\nダウンロード！\n\n 危なくない？\n公平なアーカイブサービスだから危険度が高いとは思わないが、扱いはお任せする。\nちなみに僕はダウンロードまで進みこそすれ、実際に利用したことはない。\n\n Gist\n\nThe Case of using \"Wayback Machine\" when old version...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-08-02t09_45_50-09_00",
          "publishedOn": "2023-08-26T03:52:32.000Z",
          "wordCount": 280,
          "title": "Wayback Machine を使ってリンク切れした古いバージョンのモジュール・ライブラリをダウンロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n1eRbal5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wayback%2520Machine%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E5%2588%2587%25E3%2582%258C%25E3%2581%2597%25E3%2581%259F%25E5%258F%25A4%25E3%2581%2584%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n1eRbal5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wayback%2520Machine%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E5%2588%2587%25E3%2582%258C%25E3%2581%2597%25E3%2581%259F%25E5%258F%25A4%25E3%2581%2584%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-07-15t13_12_59-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "答え\nリモートサーバーに実行プログラムを送り込む仕組みだから。\nそのプログラム=モジュールが主にpythonで書かれているから。(*)\n\nEFFICIENT ARCHITECTURE\nAnsible works by connecting to your nodes and pushing out small programs, called \"Ansible modules\" to them.\n\nHow Ansible Works | Ansible.com\n\n 試してみよう\n\n ansible コマンドを実行\n$ ansible -i inventory.txt example ...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-07-15t13_12_59-09_00",
          "publishedOn": "2023-08-26T03:52:17.000Z",
          "wordCount": 3016,
          "title": "Ansibleの仕組み | なぜ Ansible はリモートサーバーにも python を必要とするのか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LSwpJCYX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ansible%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2520%257C%2520%25E3%2581%25AA%25E3%2581%259C%2520Ansible%2520%25E3%2581%25AF%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%2582%2520python%2520%25E3%2582%2592%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LSwpJCYX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ansible%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2520%257C%2520%25E3%2581%25AA%25E3%2581%259C%2520Ansible%2520%25E3%2581%25AF%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%2582%2520python%2520%25E3%2582%2592%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumainaura/articles/qiita-2018-07-06t01_28_34-09_00",
          "author": "稲浦悠馬 (いなうらゆうま)",
          "description": "pyenv activate コマンドは pyenv-virtualenv プラグインによる追加コマンド。\npyenv shell とだいたい同じことをするが、シェルのために色々やってくれるっぽい。(曖昧な理解)\n一時的に virtualenv の特定環境を使う場合は pyenv activate を叩いたら良さそう。\n\n コマンド\n\n\npyenv activate [viatualenvの環境名] で有効化\n\npyenv deactivate で無効化\n\n\n 例\n特に分かりやすいのは、 activate した時にシェルに virtualenv の名前を表示してくれるところ。\n\n\n 自動...",
          "link": "https://zenn.dev/yumainaura/articles/qiita-2018-07-06t01_28_34-09_00",
          "publishedOn": "2023-08-26T03:44:51.000Z",
          "wordCount": 3408,
          "title": "pyenv の activate って何？ ( pyenv shell との違い )",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1EP-lL_---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%2520%25E3%2581%25AE%2520activate%2520%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%2520%2528%2520pyenv%2520shell%2520%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2520%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1EP-lL_---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyenv%2520%25E3%2581%25AE%2520activate%2520%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%2520%2528%2520pyenv%2520shell%2520%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2520%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pycetra/articles/chrome_extension_and_selenium_for_end2end",
          "author": "pycetra",
          "description": "はじめに\n第三者のchrome拡張を使ったwebサイトのend2endのテスト環境を作ってみたところ、\n手作業をけっこう減らせたのでこの記事にまとめておきます。\n環境\n\nmacOS:m2\nPython 3.10.6\nselenium 4.11.2\n\n\n 実行方法\ngit clone https://github.com/GoogleChrome/chrome-extensions-samples.git\nmkdir sample; cp ./chrome-extensions-samples/functional-samples/tutorial.hello-world/* ./sa...",
          "link": "https://zenn.dev/pycetra/articles/chrome_extension_and_selenium_for_end2end",
          "publishedOn": "2023-08-26T02:48:39.000Z",
          "wordCount": 478,
          "title": "chrome拡張をseleniumのブラウザに取り込む",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JqpHHGP9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chrome%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592selenium%25E3%2581%25AE%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AB%25E5%258F%2596%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pycetra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjkxZTkyMzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JqpHHGP9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chrome%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592selenium%25E3%2581%25AE%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AB%25E5%258F%2596%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pycetra%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjkxZTkyMzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yumemo/articles/cf56813599259e",
          "author": "YUme",
          "description": "はじめてPythonを触ってみて、「こう書くんだ〜」と思ったことを雑にメモしていきます🐰\nPythonもさくさく書けて楽しい💖\n記載しているコードはすべて以下のバージョンにて動作確認済みです🕊️\n・Python 3.9.6\n・ruby 3.2.2 / Rails 7.0.7\n\n フォーマット\n\n ブロックをコロンとインデントで書く\n\npython\ndef sum(a, b):\n  return a + b\n\n\n クラスや関数を定義するときは、空行が2つ必要\n1行目に定義するときは空行はなくて大丈夫。\n空行が足りないと E302 expected 2 blank lines って言われちゃ...",
          "link": "https://zenn.dev/yumemo/articles/cf56813599259e",
          "publishedOn": "2023-08-25T18:58:48.000Z",
          "wordCount": 2308,
          "title": "Ruby使いがPythonを触ってみたメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Y27oXtCb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ruby%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%258CPython%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YUme%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BZbEpCOHYwZ1JpMVkzMC1ZTmZaSEtXWVpLZXVXMEZjS21ZM1BqYVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Y27oXtCb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ruby%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%258CPython%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YUme%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BZbEpCOHYwZ1JpMVkzMC1ZTmZaSEtXWVpLZXVXMEZjS21ZM1BqYVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/blueman/articles/bb11f8929a0dad",
          "author": "ブルーマン",
          "description": "この記事はQiitaの記事の転載です!!\n元記事はこちら\nhttps://qiita.com/blueman/items/94054906f377afbe910b\n\n\n 目次\nはじめに\n作成した経緯\n実行環境\n正規表現を用いてフォルダにアクセスする方法\n拡張子ありのファイル名の取得方法\nファイル名から拡張子を取得する方法\nプログラムデータと結果・素材データの識別方法\nフォルダの作成方法\nフォルダごとにデータを振り分ける方法\nソースコード\n結果\nまとめ\n\n はじめに\n今回は、前回の記事で振り分けたフォルダの中のデータを拡張子から「結果・素材」フォルダと「ソースコード」フォルダにデータを振り...",
          "link": "https://zenn.dev/blueman/articles/bb11f8929a0dad",
          "publishedOn": "2023-08-25T10:05:50.000Z",
          "wordCount": 810,
          "title": "Pythonのglob・osを用いた拡張子ごとのフォルダ振り分け",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--owUuRXuM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEglob%25E3%2583%25BBos%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%258B%25A1%25E5%25BC%25B5%25E5%25AD%2590%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--owUuRXuM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEglob%25E3%2583%25BBos%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%258B%25A1%25E5%25BC%25B5%25E5%25AD%2590%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zkt1ajRKaldOUWItM0o1cV8yUmFNc1ZockFKNjJBVEtDNnZfUHZLV1Robm9vPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/paxdare_labo/articles/99c4e373a9fb58",
          "author": "PAX dare Labo",
          "description": "前置き\nDuckDBというOLAPデータベースをご存じでしょうか。\n去年くらいから、そこはかとなく流行り始めているようで、Python環境で簡単に動くのですが、処理が速いとか色々な形式に対応しているとか、様々な特徴があります。\nと、DuckDBを昨日知ったばかりの私が、これ以上語っていくとボロがでそうなので、それは参考にさせていただいたページの諸先輩方にお任せします。\n[参考]\n\nhttps://zenn.dev/notrogue/articles/1193d0ab8d8eda\nhttps://www.salesanalytics.co.jp/datascience/datascie...",
          "link": "https://zenn.dev/paxdare_labo/articles/99c4e373a9fb58",
          "publishedOn": "2023-08-25T07:25:16.000Z",
          "wordCount": 614,
          "title": "パンダとアヒルの手を組ませて、オープンデータを楽に分析する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6t-IDmPc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2592%25E3%2583%25AB%25E3%2581%25AE%25E6%2589%258B%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BE%25E3%2581%259B%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%2588%2586%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PAX%2520dare%2520Labo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXBSQ092cXJjVGc4SHFoM3oyYmZ3b0pkQVVJZE1ZT2hoc1dVckdsRUNHUnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6t-IDmPc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2592%25E3%2583%25AB%25E3%2581%25AE%25E6%2589%258B%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BE%25E3%2581%259B%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%2588%2586%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PAX%2520dare%2520Labo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXBSQ092cXJjVGc4SHFoM3oyYmZ3b0pkQVVJZE1ZT2hoc1dVckdsRUNHUnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tigrebiz/articles/python-django-tutorial",
          "author": "taiga",
          "description": "本記事の目的\n\n実務でPythonDjangoで開発をすることになったため、チュートリアルをおこなって理解を深める。\n公式チュートリアルを学習しつつ、不明点や分かりにくい点については補足をおこなっていく。\n\n\n 目次\n\n\n本記事の目的\n目次\nDjango公式ドキュメントを見ながらチュートリアルを行う\nDjango の概要\n\nクイックインストールガイド\n\nPythonのインストール\nDjangoのインストール\n仮想開発環境ディレクトリについて\n\n\n\nはじめての Django アプリ作成 その 1\n\nDjango学習の基本\nプロジェクトを作成する\n開発用サーバー\nPolls アプリケーシ...",
          "link": "https://zenn.dev/tigrebiz/articles/python-django-tutorial",
          "publishedOn": "2023-08-25T06:59:48.000Z",
          "wordCount": 2635,
          "title": "【補足解説】Django公式チュートリアル（その１のみ）を初級者向けに補足してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vnW7Thp8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25A3%259C%25E8%25B6%25B3%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Django%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25E3%2581%25AE%25E3%2581%25BF%25EF%25BC%2589%25E3%2582%2592%25E5%2588%259D%25E7%25B4%259A%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AB%25E8%25A3%259C%25E8%25B6%25B3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vnW7Thp8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25A3%259C%25E8%25B6%25B3%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Django%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%25E3%2581%25AE%25E3%2581%25BF%25EF%25BC%2589%25E3%2582%2592%25E5%2588%259D%25E7%25B4%259A%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AB%25E8%25A3%259C%25E8%25B6%25B3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/coji/articles/08154798093d04",
          "author": "Coji Mizoguchi",
          "description": "結論\nuvicorn server:app --host :: --port 8080\nこれでホストについてる IPv6 のアドレス全部に bind されます。\n[::] を指定しても動かない。",
          "link": "https://zenn.dev/coji/articles/08154798093d04",
          "publishedOn": "2023-08-25T06:49:41.000Z",
          "wordCount": 111,
          "title": "IPv6 で公開する FastAPI サーバ / uvicorn の起動方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eiq92hPL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IPv6%2520%25E3%2581%25A7%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%2520FastAPI%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%2520%252F%2520uvicorn%2520%25E3%2581%25AE%25E8%25B5%25B7%25E5%258B%2595%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eiq92hPL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IPv6%2520%25E3%2581%25A7%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%2520FastAPI%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%2520%252F%2520uvicorn%2520%25E3%2581%25AE%25E8%25B5%25B7%25E5%258B%2595%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d56c492a01aedd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-292 B - Yellow and Red Card\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, q = getIntMap()\n    ev = getIntListRow(q)\n    c = [0] + [0 for _ in range(n)]\n\n    f...",
          "link": "https://zenn.dev/hyperdb/articles/d56c492a01aedd",
          "publishedOn": "2023-08-25T03:50:56.000Z",
          "wordCount": 435,
          "title": "［AtCoder］ABC-292｜B - Yellow and Red Card",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YoTWcYLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-292%25EF%25BD%259CB%2520-%2520Yellow%2520and%2520Red%2520Card%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YoTWcYLW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-292%25EF%25BD%259CB%2520-%2520Yellow%2520and%2520Red%2520Card%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/942930634a99e4",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-292 A - CAPS LOCK\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print(s.upper())\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/942930634a99e4",
          "publishedOn": "2023-08-25T03:50:55.000Z",
          "wordCount": 202,
          "title": "［AtCoder］ABC-292｜A - CAPS LOCK",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AQLJ4NkZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-292%25EF%25BD%259CA%2520-%2520CAPS%2520LOCK%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AQLJ4NkZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-292%25EF%25BD%259CA%2520-%2520CAPS%2520LOCK%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kikuta/articles/notion-api-with-python-to-batch-input-relation",
          "author": "kikuta",
          "description": "gist のリンク\nhttps://gist.github.com/kikutadev/25b4f9fc725b14d2bcb4103182f78539\n\n Colab のリンク\nhttps://colab.research.google.com/gist/kikutadev/25b4f9fc725b14d2bcb4103182f78539/notion-api-batch-relation.ipynb\n\n 使い方\n以下の 5 ステップで進めていきます。\n\nNOTION_TOKEN の取得\nNotion でインテグレーションを追加する\ndatabase_id の取得\nプロパティの編集...",
          "link": "https://zenn.dev/kikuta/articles/notion-api-with-python-to-batch-input-relation",
          "publishedOn": "2023-08-24T15:42:45.000Z",
          "wordCount": 398,
          "title": "NotionのテーブルにNotion APIを使ってリレーションを一括追加するGoogle Colabファイルを公開しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a8bHSaMr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Notion%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25ABNotion%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258BGoogle%2520Colab%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%2585%25AC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kikuta%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZThjYTUzZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a8bHSaMr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Notion%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25ABNotion%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258BGoogle%2520Colab%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%2585%25AC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kikuta%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZThjYTUzZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/coji/articles/1a1fc3fa9ed710",
          "author": "Coji Mizoguchi",
          "description": "なにもかもわからず、３時間ぐらい試行錯誤したので、忘れたときのために。\n\n 結論\nrye init したあとに\n\npyproject.toml に sources を追加 (CPU版の場合)\n\n[[tool.rye.sources]]\nname = \"torch\"\nurl = \"https://download.pytorch.org/whl/cpu\"\ntype = \"index\"\n※ CPU版以外がほしい場合は pytoach 公式サイトの Getting Started で適切なやつを選んで、pip3 install のオプションに指定されてるURLを指定する。\n\nrye add の...",
          "link": "https://zenn.dev/coji/articles/1a1fc3fa9ed710",
          "publishedOn": "2023-08-24T13:55:51.000Z",
          "wordCount": 141,
          "title": "rye で pytorch を追加/インストールする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CXtwjcvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rye%2520%25E3%2581%25A7%2520pytorch%2520%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%252F%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CXtwjcvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rye%2520%25E3%2581%25A7%2520pytorch%2520%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%252F%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/collabostyle/articles/69e3d2cac37707",
          "author": "kony",
          "description": "はじめに\n前回以下の記事でLlamaIndexでPDFファイルを読み込んでQAボットを作成しましたが、LlamaIndexではslackからもデータを読み込む事ができるようなので、やってみました。\nhttps://zenn.dev/collabostyle/articles/cc52ff546df34d\n\n パッケージのインストール\nPythonで以下のパッケージをインストールします。\n今回はslackからデータを読み取るためslack sdkをインストールします。\npip install llama-index\npip install openai\npip install slac...",
          "link": "https://zenn.dev/collabostyle/articles/69e3d2cac37707",
          "publishedOn": "2023-08-24T10:00:59.000Z",
          "wordCount": 485,
          "title": "LlamaIndexでslackのQAボットを作成してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FPqh4bcB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LlamaIndex%25E3%2581%25A7slack%25E3%2581%25AEQA%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:kony%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4NGQxMGUxMGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FPqh4bcB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LlamaIndex%25E3%2581%25A7slack%25E3%2581%25AEQA%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:kony%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4NGQxMGUxMGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/takaha4k/articles/b515ded6cdf15f",
          "author": "takaha4k",
          "description": "TL;DR\nPythonの開発環境を整える際、選択肢がありすぎて困る。\nその困りごとを一掃してくれるのが、Ryeである。\nPythonの開発環境を整えるのであれば、Ryeを使うべし。\n\n Ryeとは\nPythonにおけるone-stop-shop、すなはち、これ１つですべての用事が足りるものらしいです。\n以下は原文。\n\nRye is Armin's personal one-stop-shop for all his Python needs. It installs and manages Python installations, manages pyproject.toml f...",
          "link": "https://zenn.dev/takaha4k/articles/b515ded6cdf15f",
          "publishedOn": "2023-08-24T09:16:57.000Z",
          "wordCount": 366,
          "title": "Python開発環境をディファクトになりつつあるRyeで整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FpCz5_MD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2583%2587%25E3%2582%25A3%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25A4%25E3%2581%25A4%25E3%2581%2582%25E3%2582%258BRye%25E3%2581%25A7%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMGM1MDU4ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FpCz5_MD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2583%2587%25E3%2582%25A3%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25A4%25E3%2581%25A4%25E3%2581%2582%25E3%2582%258BRye%25E3%2581%25A7%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMGM1MDU4ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/t_ooka/articles/aaaa4fba79e53d",
          "author": "t-ooka",
          "description": "Python初心者です。\n最近競プロに興味を持ってコーディング問題を解いていたのですが、ListをListで初期化する際に気づいたことがありまとめます。\n\n 参考コード\nsampleList = [[]]*10\nprint(sampleList)\n# [[], [], [], [], [], [], [], [], [], []] \nsampleList[0].append(1)\nprint(sampleList)\n# [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]\n\n 気づき\n上記の形[[]]*10のように初期化されたListオブジ...",
          "link": "https://zenn.dev/t_ooka/articles/aaaa4fba79e53d",
          "publishedOn": "2023-08-24T04:02:14.000Z",
          "wordCount": 294,
          "title": "Python3の二重Listを初期化するときに気をつけること",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fvY0clCl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2581%25AE%25E4%25BA%258C%25E9%2587%258DList%25E3%2582%2592%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-ooka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MGIxYzQ2ZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fvY0clCl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2581%25AE%25E4%25BA%258C%25E9%2587%258DList%25E3%2582%2592%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-ooka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MGIxYzQ2ZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/91f1cc180318d5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-291 B - Trimmed Mean\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    x = getIntList()\n\n    x.sort()\n    y = x[n:n*4]\n\n    print(sum(y) / (3 * n))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/91f1cc180318d5",
          "publishedOn": "2023-08-24T03:27:01.000Z",
          "wordCount": 313,
          "title": "［AtCoder］ABC-291｜B - Trimmed Mean",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ygwB59nP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-291%25EF%25BD%259CB%2520-%2520Trimmed%2520Mean%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ygwB59nP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-291%25EF%25BD%259CB%2520-%2520Trimmed%2520Mean%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7e5ed3e2d65db7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-291 A - camel Case\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    for i in range(len(s)):\n        if s[i] <= 'Z':\n            print(i + 1)\n            break\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7e5ed3e2d65db7",
          "publishedOn": "2023-08-24T03:27:01.000Z",
          "wordCount": 260,
          "title": "［AtCoder］ABC-291｜A - camel Case",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S8zeH1tn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-291%25EF%25BD%259CA%2520-%2520camel%2520Case%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S8zeH1tn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-291%25EF%25BD%259CA%2520-%2520camel%2520Case%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nano_sudo/articles/eaf0d77646d7b8",
          "author": "須藤ナノ",
          "description": "はじめに\nこんにちは、@nano_sudoです！\nついに、皆様ご待望のgpt3.5-turboのファインチューニングができるようになりました！\nということで、今回は、chatGPT(gpt-3.5-turbo)をファインチューニングする方法を紹介します。\n\n ファインチューニングのメリット\n\nファインチューニングを行うことで、APIを通じて利用可能なモデルをさらに活用することができます:\n\nプロンプトよりも高品質な結果\nプロンプトに収まりきらないほどの例でトレーニングできる能力\n短いプロンプトによるトークンの節約\n\n低レイテンシーのリクエスト\n(OpenAI公式ドキュメント)[Fin...",
          "link": "https://zenn.dev/nano_sudo/articles/eaf0d77646d7b8",
          "publishedOn": "2023-08-23T16:30:46.000Z",
          "wordCount": 4881,
          "title": "chatGPT(gpt3.5-turbo)をファインチューニングしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sNk2KAhx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%2528gpt3.5-turbo%2529%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A0%2588%25E8%2597%25A4%25E3%2583%258A%25E3%2583%258E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxZTllNTY0ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sNk2KAhx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%2528gpt3.5-turbo%2529%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A0%2588%25E8%2597%25A4%25E3%2583%258A%25E3%2583%258E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxZTllNTY0ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pinto0309/articles/216488def0c00b",
          "author": "PINTO",
          "description": "1. 環境\n\nIntel Corei9 Gen.10\nUbuntu 22.04\nTorchVision\nONNX\nTensorFlow\n\n\n 2. パッケージのインストール\nsudo apt-get update \\\n&& sudo apt-get install -y flatbuffers-compiler\n\npip install -U onnx==1.14.0 \\\n&& python -m pip install onnx_graphsurgeon \\\n    --index-url https://pypi.ngc.nvidia.com \\\n...",
          "link": "https://zenn.dev/pinto0309/articles/216488def0c00b",
          "publishedOn": "2023-08-23T15:17:05.000Z",
          "wordCount": 996,
          "title": "TorchVision (MobileNetV3 Large) -> ONNX -> TFLite (シグネチャ推論)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ySox3yBr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TorchVision%2520%2528MobileNetV3%2520Large%2529%2520-%253E%2520ONNX%2520-%253E%2520TFLite%2520%2528%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E6%258E%25A8%25E8%25AB%2596%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PINTO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czMW9DdWpQQmY4YmFpTXFmY0M4bG5jamUxVnZBWUdTeEVZMnN6VXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ySox3yBr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TorchVision%2520%2528MobileNetV3%2520Large%2529%2520-%253E%2520ONNX%2520-%253E%2520TFLite%2520%2528%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E6%258E%25A8%25E8%25AB%2596%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PINTO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czMW9DdWpQQmY4YmFpTXFmY0M4bG5jamUxVnZBWUdTeEVZMnN6VXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/thaim/articles/2023-08-lambroll-subdir",
          "author": "thaim",
          "description": "lambrollでlambda関数を構築する\npythonでlambda関数を構築する。そのデプロイにlambrollを利用したい。対象のディレクトリ構成に応じてどのようにデプロイ設定をすればよいか。\n\n ルートディレクトリにハンドラー関数がある場合\nルートディレクトリに lambda_function.py があり、そこで定義されている関数 lambda_handler を呼び出したい場合。\nこの場合はlambrollのREADMEにある通り、単に lambroll deploy すればよい。\n$ ls\nfunction.json  lambda_function.py\n\n$ ca...",
          "link": "https://zenn.dev/thaim/articles/2023-08-lambroll-subdir",
          "publishedOn": "2023-08-23T14:39:53.000Z",
          "wordCount": 1480,
          "title": "lambrollでサブディレクトリにある関数を指定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a7tqmFOZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:lambroll%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%2596%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:thaim%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlYzExYmI5OWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a7tqmFOZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:lambroll%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%2596%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:thaim%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlYzExYmI5OWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/u1f992/articles/3924f969958853",
          "author": "Koutaro Mukai",
          "description": "https://techcommunity.microsoft.com/t5/excel-blog/announcing-python-in-excel-combining-the-power-of-python-and-the/ba-p/3893439\nこんな話を見かけたのでVBAで再現する回です。\n\n 実装\nhttps://twitter.com/u1F992/status/1694321103873933632\n標準入力に1行書いて出力を読むだけ、かんたんですね！他の言語でもできると思います。久しぶりにVBAを書いたので、ベストプラクティスからは外れているかもしれません。\nOpti...",
          "link": "https://zenn.dev/u1f992/articles/3924f969958853",
          "publishedOn": "2023-08-23T12:16:02.000Z",
          "wordCount": 1380,
          "title": "文字列やセル内容をPythonで実行するワークシート関数をVBAで再現する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_di31KYN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2584%25E3%2582%25BB%25E3%2583%25AB%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592VBA%25E3%2581%25A7%25E5%2586%258D%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koutaro%2520Mukai%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwNDRlMzkzOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_di31KYN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2584%25E3%2582%25BB%25E3%2583%25AB%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592VBA%25E3%2581%25A7%25E5%2586%258D%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koutaro%2520Mukai%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwNDRlMzkzOWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/straydog/articles/1724190bd5b31d",
          "author": "stray dog",
          "description": "はじめに\n沼ったのでメモ。2023 年 8 月 23 日時点での情報です。\nheroku の console 上で flask db upgrade をしたら「password authentication failed for user」が出ました。今まで特に問題なく DB と接続できていたのに、なぜか急に出るようになったので、原因を調べてみました。\n\n 原因\n同じ原因で接続できなかった人が以下の issue にいました。SQLAlchemy のバグ対応でリリースされたバージョンに移行すると起こる様子。古い Flask-Migrate の「flask db init」で生成された ...",
          "link": "https://zenn.dev/straydog/articles/1724190bd5b31d",
          "publishedOn": "2023-08-23T09:09:18.000Z",
          "wordCount": 187,
          "title": "flask db upgradeすると「password authentication failed for user」が出る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LUHEFJXr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:flask%2520db%2520upgrade%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2580%258Cpassword%2520authentication%2520failed%2520for%2520us...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LUHEFJXr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:flask%2520db%2520upgrade%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2580%258Cpassword%2520authentication%2520failed%2520for%2520us...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c9734bf6ad7c0a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-290 B - Qual B\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n, k = getIntMap()\n    s = list(getString())\n\n    j = 0\n    for i in range(k):\n        j = s.index('o', j)\n        j += 1\n    print(\"\".join(s[0: j] +...",
          "link": "https://zenn.dev/hyperdb/articles/c9734bf6ad7c0a",
          "publishedOn": "2023-08-23T07:41:41.000Z",
          "wordCount": 375,
          "title": "［AtCoder］ABC-290｜B - Qual B",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9513jvMg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-290%25EF%25BD%259CB%2520-%2520Qual%2520B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9513jvMg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-290%25EF%25BD%259CB%2520-%2520Qual%2520B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/67aa7c83eb6068",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-290 A - Contest Result\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m = getIntMap()\n    a = [0] + getIntList()\n    b = getIntList()\n\n    c = 0\n    for i in b:\n        c += a[i]\n    ...",
          "link": "https://zenn.dev/hyperdb/articles/67aa7c83eb6068",
          "publishedOn": "2023-08-23T07:41:41.000Z",
          "wordCount": 339,
          "title": "［AtCoder］ABC-290｜A - Contest Result",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---sjAMAsl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-290%25EF%25BD%259CA%2520-%2520Contest%2520Result%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---sjAMAsl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-290%25EF%25BD%259CA%2520-%2520Contest%2520Result%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knao124/articles/230822-weekly-scrapbox",
          "author": "knao124",
          "description": "開発生産性 Four Keys を簡単に可視化する\nDORAというチームが研究した成果らしい\n\n計測と現状把握｜開発生産性 実践入門\nエリート DevOps チームであることを Four Keys プロジェクトで確認する | Google Cloud 公式ブログ\n\nFour Keys\n\n(リリース)\n\nデプロイの頻度\n変更のリードタイム\n\n\n(バグ対応)\n\n変更障害率\nサービス復元時間\n\n\n\nGCPでインスタンスを立てて、Githubのデータを取り込むことで簡易に計測できるとのこと\n\ndora-team/fourkeys: Platform for monitoring the fo...",
          "link": "https://zenn.dev/knao124/articles/230822-weekly-scrapbox",
          "publishedOn": "2023-08-23T03:46:19.000Z",
          "wordCount": 447,
          "title": "読んでた記事 230822~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UBvseeI5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%2520230822%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UBvseeI5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%259F%25E8%25A8%2598%25E4%25BA%258B%2520230822%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knao124%2Cx_90%2Cy_98/og-base.png"
        },
        {
          "id": "https://zenn.dev/esm/articles/d2d5ba20c5863b",
          "author": "sfjwr",
          "description": "この記事は「おしゃべりクマちゃん🧸」シリーズの記事になります。インデックスはコチラ。前回の記事はコチラ。\n今回は、発言生成機能に直接は関係ないのですが、これまでに紹介した機能を利用して複数人のキャラクタを作成し、キャラクタ同士の会話を試みた時のことを紹介します😀\n\n 概要\nこれまでに紹介してきた仕組みを利用して、複数のキャラクタを生成し、会話させるアプリケーションを作成しました。\nキャラクタは、前々回紹介したプロンプトの「プロフィール」の部分だけを差し替える形で、複数用意しました。\nアプリケーションの仕組みとしては、\n\nユーザーからの発言を取得\nどのキャラクタが発言するのかを決定(全員が...",
          "link": "https://zenn.dev/esm/articles/d2d5ba20c5863b",
          "publishedOn": "2023-08-23T01:00:00.000Z",
          "wordCount": 253,
          "title": "【FDO43】【会話文章生成 その4】AIキャラクタ同士で会話させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TYn2a_Bw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FDO43%25E3%2580%2591%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%2520%25E3%2581%259D%25E3%2581%25AE4%25E3%2580%2591AI%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E5%2590%258C%25E5%25A3%25AB%25E3%2581%25A7%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25B0%25B8%25E5%2592%258C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%259E%25E3%2583%258D%25E3%2582%25B8%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520Tech%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:sfjwr%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzlhYmNlZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WU00VG5xR2pzRl9UYS10V0xrYVpzVy1YT2pDb1NOTmZ3LXRTVk89czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TYn2a_Bw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FDO43%25E3%2580%2591%25E3%2580%2590%25E4%25BC%259A%25E8%25A9%25B1%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%2520%25E3%2581%259D%25E3%2581%25AE4%25E3%2580%2591AI%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E5%2590%258C%25E5%25A3%25AB%25E3%2581%25A7%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25B0%25B8%25E5%2592%258C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%259E%25E3%2583%258D%25E3%2582%25B8%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520Tech%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:sfjwr%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzlhYmNlZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WU00VG5xR2pzRl9UYS10V0xrYVpzVy1YT2pDb1NOTmZ3LXRTVk89czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/masswork/articles/a14d7f4c7b9664",
          "author": "mass",
          "description": "ExcelとPythonの統合\nExcel内でPythonを使用するパブリックプレビューがリリースされました。\nPythonとExcelの分析を組み合わせることが可能になります。\n※現状はWindowsのベータチャンネル登録者のみのようです。\n\n 主な特徴\n\n\n分析者向けの機能\nExcelの新しいPY関数を使用して、PythonコードをExcelセルに直接入力できます。可視化、データクリーニング、機械学習など、より強力な分析が可能に。\n=PYを入力するだけでPythonモードに移行できる様です。\n\n\nAnacondaとの連携\nAnacondaは、世界中のデータ専門家が使用する主要なP...",
          "link": "https://zenn.dev/masswork/articles/a14d7f4c7b9664",
          "publishedOn": "2023-08-22T23:00:01.000Z",
          "wordCount": 139,
          "title": "ついにExcelにPythonが搭載されるらしいのでまとめてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GOqMxbE---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25ABExcel%25E3%2581%25ABPython%25E3%2581%258C%25E6%2590%25AD%25E8%25BC%2589%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mass%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MmQ0YjJiOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GOqMxbE---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25ABExcel%25E3%2581%25ABPython%25E3%2581%258C%25E6%2590%25AD%25E8%25BC%2589%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mass%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MmQ0YjJiOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/noneprogrammer/articles/ed58b1411cb8f8",
          "author": "none_programmer",
          "description": "txtファイルの家計簿のカテゴリー別グラフ(月集計)を作成するデスクトップアプリをpythonで作成しました。\n\n ファイル構成\n●単一ファイル\n---boss\n    |---main.py\n    |---005_note_money.txt　(入力データ)\n\n クラス図\n\n\n 構造化\n\n\n デスクトップアプリの出力\nTwitterにアップしました。\n\n\n ソースコード\nfrom __future__ import annotations\nimport os \nimport re \nfrom collections import defaultdict\nimport matplotl...",
          "link": "https://zenn.dev/noneprogrammer/articles/ed58b1411cb8f8",
          "publishedOn": "2023-08-22T23:00:00.000Z",
          "wordCount": 4704,
          "title": "オブジェクト指向で構造化プログラミング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KInffmJz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25A7%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:none_programmer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi1FSlJ6TTFSc0pRcDZLM3llSFNpVkQ4aDJjTDMyQm5MWTNHcFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KInffmJz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25A7%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:none_programmer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi1FSlJ6TTFSc0pRcDZLM3llSFNpVkQ4aDJjTDMyQm5MWTNHcFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-convolution04",
          "author": "derwind",
          "description": "目的\nQiskit で遊んでみる (18) — Quantum Convolutional Networks その 1 で量子畳み込みニューラルネットワークの訓練をしたが、普通の畳み込みニューラルネットワークでもやっておくという内容。\n\n データセット\n11_quantum_convolutional_neural_networks.ipynb のデータセットを PyTorch で使いやすいように箱詰めする:\nfrom __future__ import annotations\n\nfrom typing import Any, Callable\n\nimport numpy as np...",
          "link": "https://zenn.dev/derwind/articles/dwd-convolution04",
          "publishedOn": "2023-08-22T17:07:09.000Z",
          "wordCount": 3510,
          "title": "ニューラルネットの畳み込み層 (4) — 量子畳み込みニューラルネットワークと比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3o9wYF4g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E5%25B1%25A4%2520%25284%2529%2520%25E2%2580%2594%2520%25E9%2587%258F%25E5%25AD%2590%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3o9wYF4g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E5%25B1%25A4%2520%25284%2529%2520%25E2%2580%2594%2520%25E9%2587%258F%25E5%25AD%2590%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/957a8659f4eba1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-289 B - レ\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m = getIntMap()\n    if m > 0:\n        a = getIntList()\n\n    l = [i + 1 for i in range(n)]\n    if m == 0:\n        print(\" \"....",
          "link": "https://zenn.dev/hyperdb/articles/957a8659f4eba1",
          "publishedOn": "2023-08-22T05:19:33.000Z",
          "wordCount": 494,
          "title": "［AtCoder］ABC-289｜B - レ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wpY_JvZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-289%25EF%25BD%259CB%2520-%2520%25E3%2583%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wpY_JvZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-289%25EF%25BD%259CB%2520-%2520%25E3%2583%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/27e3854b7e5076",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-289 A - flip\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    t = [i ^ 1 for i in list(map(int, list(s)))]\n\n    print(\"\".join(list(map(str, t))))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/27e3854b7e5076",
          "publishedOn": "2023-08-22T05:19:32.000Z",
          "wordCount": 273,
          "title": "［AtCoder］ABC-289｜A - flip",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ldDora_d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-289%25EF%25BD%259CA%2520-%2520flip%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ldDora_d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-289%25EF%25BD%259CA%2520-%2520flip%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tigrebiz/articles/python-try-exception",
          "author": "taiga",
          "description": "本記事の目的\n\n実務でPythonDjangoを触ることになったので、とりあえず例外処理から理解する。\n完全に理解する。\n実務で使えるレベルにする。\n\nそういうことだ！\n\n 目次\n\n\n本記事の目的\n目次\n\nPython例外処理の基本\n\n例外処理の基本のキ\nPythonの例外処理の解説\n実務レベルの例外処理\n\n\n\nPython例外処理の応用\n\n\nデコレータによる例外処理の共通化\n\nデコレータとは\nデコレータを使ったエラーハンドリングの方法\n\n\n\nカスタムエラークラスを使った例外処理\n\nカスタムエラークラスの具体的な使い方\nカスタムエラークラスの詳細解説\n\n\nより実務的なカスタムクラスを...",
          "link": "https://zenn.dev/tigrebiz/articles/python-try-exception",
          "publishedOn": "2023-08-22T04:19:08.000Z",
          "wordCount": 5370,
          "title": "【完全解説！】Pythonの例外処理を基礎から実務レベルまで完全にマスターする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0eNwIwxP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%25E3%2580%2591Python%25E3%2581%25AE%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E5%258B%2599%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2581%25BE%25E3%2581%25A7%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0eNwIwxP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%258C%25E5%2585%25A8%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%25E3%2580%2591Python%25E3%2581%25AE%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E5%258B%2599%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2581%25BE%25E3%2581%25A7%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/cae_taka/articles/309f7e11e4010c",
          "author": "Taka",
          "description": "動機\n前回の記事でNastranファイルを読み込めたので同じ要領でkeywordファイルの入出力をやってみます。\nLs-Dynaのkeywordファイルは、個人的に慣れ親しんだ形式なので節点、要素以外にPART,Section,材料,セット（パート、節点）も扱えるようしようと思います。\n\n 今回やること\nkeywordファイルの入出力を行います。\n\n プログラムの説明\n\nkeywordファイルは、キーワード（*NODEなど）とキーワードの間に中身が記述されています。\n\n*NODE\n     100        331.7869       -215.0759        -109...",
          "link": "https://zenn.dev/cae_taka/articles/309f7e11e4010c",
          "publishedOn": "2023-08-22T02:58:25.000Z",
          "wordCount": 4881,
          "title": "CAEのためのPython3(keywordファイルの入出力)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MTypI0v0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython3%2528keyword%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MTypI0v0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPython3%2528keyword%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/9dc79b70dccd5e",
          "author": "nakamura196",
          "description": "概要\n以下のようなGoogle Mapsの短縮URLから緯度経度を取得する機会がありました。\nhttps://goo.gl/maps/aPxUgDJ9KP2FLFkN7\nhttps://goo.gl/maps/aPxUgDJ9KP2FLFkN7\n\nこの時、2つの緯度経度が取得できたので、その備忘録です。\n\n 抽出方法\nGPT-4から以下の回答が得られました。\n--- 以下、回答 ---\nGoogle Mapsの短縮URL (goo.gl/maps/...) から直接緯度経度を抽出することはできません。しかし、この短縮URLを展開して元のURLを取得することで、そのURLから緯度経度を...",
          "link": "https://zenn.dev/nakamura196/articles/9dc79b70dccd5e",
          "publishedOn": "2023-08-22T02:05:58.000Z",
          "wordCount": 673,
          "title": "Google Mapsの短縮URLから緯度経度を取得する際の備忘録",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KujVeBDz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Maps%25E3%2581%25AE%25E7%259F%25AD%25E7%25B8%25AEURL%25E3%2581%258B%25E3%2582%2589%25E7%25B7%25AF%25E5%25BA%25A6%25E7%25B5%258C%25E5%25BA%25A6%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KujVeBDz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Maps%25E3%2581%25AE%25E7%259F%25AD%25E7%25B8%25AEURL%25E3%2581%258B%25E3%2582%2589%25E7%25B7%25AF%25E5%25BA%25A6%25E7%25B5%258C%25E5%25BA%25A6%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kumazo/articles/35215498b86939",
          "author": "kumazo",
          "description": "いつからか Windows では Python のインストールをサポートするようになった。\nPython 未インストールの状態で python コマンドを叩くと Windows ストアからのインストール画面が表示される。\nPS C:\\> python\nただ Windows ストア版では、pip でインストールしたコマンドへの PATH を通してくれないので自分でやる必要がある。\nストア版 Python の確認。\nPS C:\\> where.exe python\nC:\\Users\\myname\\AppData\\Local\\Microsoft\\WindowsApps\\python...",
          "link": "https://zenn.dev/kumazo/articles/35215498b86939",
          "publishedOn": "2023-08-22T01:24:57.000Z",
          "wordCount": 290,
          "title": "Windows ストア版 Python の pip でインストールしたコマンドに PATH を通したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NN7VW3SX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E7%2589%2588%2520Python%2520%25E3%2581%25AE%2520pip%2520%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AB%2520PATH%2520%25E3%2582%2592%25E9%2580%259A%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kumazo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeExoY1hMWjVQdlJYME5TRDNGbUVrWVZEOUk0VDE5UnJCb2dheTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NN7VW3SX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E7%2589%2588%2520Python%2520%25E3%2581%25AE%2520pip%2520%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AB%2520PATH%2520%25E3%2582%2592%25E9%2580%259A%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kumazo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeExoY1hMWjVQdlJYME5TRDNGbUVrWVZEOUk0VDE5UnJCb2dheTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knowledgework/articles/8beb4fb11efaa9",
          "author": "ざわきん/zawakin",
          "description": "TL;DR\nPythonライブラリ 「PromptoGen」 をリリースしました 🎉\nPromptoGenは、「LLMとPythonの間のギャップをシームレスに繋ぐことで、効率的で未来を見据えたコミュニケーションを実現する。」 というビジョンの元、\nあえて具体的なLLM実装への依存性をなくし、抽象化を行う ことで、\n今後のLLM進化について行きやすい基盤を作る OSSプロジェクトです。\nこの記事では、PromptoGen プロジェクトの紹介やライブラリの使い方を紹介します。\n\n\nドキュメント: https://promptogen.zawakin.dev/ja\nドキュメント(英語):...",
          "link": "https://zenn.dev/knowledgework/articles/8beb4fb11efaa9",
          "publishedOn": "2023-08-21T23:30:00.000Z",
          "wordCount": 2619,
          "title": "LLMとのコミュニケーションをより効率化するPythonライブラリ「PromptoGen」をリリースしました🎉",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--aIhdceBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2582%2588%25E3%2582%258A%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258BPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CPromptoGen%25E3%2580%258D%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%258A%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2596%25E3%2582%258F%25E3%2581%258D%25E3%2582%2593%252Fzawakin%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4MWZhOWNhZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNDk4ZTQ3YmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--aIhdceBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2582%2588%25E3%2582%258A%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258BPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CPromptoGen%25E3%2580%258D%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%258A%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2596%25E3%2582%258F%25E3%2581%258D%25E3%2582%2593%252Fzawakin%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4MWZhOWNhZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNDk4ZTQ3YmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/ark_sakura/articles/86f4461a7acab0",
          "author": "ark-sakura",
          "description": "AtCoderの言語アップデートによりPythonもバージョンアップ。これまではpypyではnumpyのimport時点でエラーが出てpypy+numpyの組み合わせは使えなかった。アップデートでpypyでもnumpyをサポートしてくれたので、これでnumpy使った解法の提出が増える、と思ったが・・・\n\n アップデート後もpypyとnumpyの相性は悪く実用的でない\npypyでもnumpy, scipyのimportと関数が使えるようになったというだけで、numpyの速さが活きるかというとそんなことはなかった。\n10^8の配列でコードテストしてみるとpypy+numpyの組み合わせはメリ...",
          "link": "https://zenn.dev/ark_sakura/articles/86f4461a7acab0",
          "publishedOn": "2023-08-21T16:18:02.000Z",
          "wordCount": 368,
          "title": "AtCoder言語アップデート(2023年8月)後でもpypyでnumpyが使えない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JFqHkIz4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25282023%25E5%25B9%25B48%25E6%259C%2588%2529%25E5%25BE%258C%25E3%2581%25A7%25E3%2582%2582pypy%25E3%2581%25A7numpy%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ark-sakura%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZDZkMjVjODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JFqHkIz4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25282023%25E5%25B9%25B48%25E6%259C%2588%2529%25E5%25BE%258C%25E3%2581%25A7%25E3%2582%2582pypy%25E3%2581%25A7numpy%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ark-sakura%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZDZkMjVjODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/medchem_learner/articles/3699f3c1c3f1fb",
          "author": "AI MedChem Learner",
          "description": "１．はじめに\n少し前のことですが、とても興味深い記事を読みました。\nhttps://zenn.dev/seiyakitazume/articles/bc11bbd020cdfe\nタイトルにある通り、データサイエンス初心者がchatGPTのサポートを受けながらモデル構築を行い、SIGNATEコンペティションの上位にランクインした、というのです。\n筆者も本業でchatGPTを使うことはありますが、主な用途は「英語⇔日本語の翻訳」や「暇つぶしのお遊びレベル」でした。そのため本記事の内容は\nそうか、、こういう使い方があったか\nと目からウロコモノでした。\n前回記事に書いたように、筆者はプログ...",
          "link": "https://zenn.dev/medchem_learner/articles/3699f3c1c3f1fb",
          "publishedOn": "2023-08-21T15:19:25.000Z",
          "wordCount": 4171,
          "title": "chatGPT先生に教わる機械学習　～SIGNATE competition「医学論文の自動仕分けチャレンジ」編～",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5BehrImg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E5%2585%2588%25E7%2594%259F%25E3%2581%25AB%25E6%2595%2599%25E3%2582%258F%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2580%25EF%25BD%259ESIGNATE%2520competition%25E3%2580%258C%25E5%258C%25BB%25E5%25AD%25A6%25E8%25AB%2596%25E6%2596%2587%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E4%25BB%2595%25E5%2588%2586%25E3%2581%2591%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2580%258D%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AI%2520MedChem%2520Learner%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MGUyZTQ2OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5BehrImg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E5%2585%2588%25E7%2594%259F%25E3%2581%25AB%25E6%2595%2599%25E3%2582%258F%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2580%25EF%25BD%259ESIGNATE%2520competition%25E3%2580%258C%25E5%258C%25BB%25E5%25AD%25A6%25E8%25AB%2596%25E6%2596%2587%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E4%25BB%2595%25E5%2588%2586%25E3%2581%2591%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2580%258D%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AI%2520MedChem%2520Learner%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MGUyZTQ2OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}