{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/elfmimi/articles/c85b113e3c4479",
          "author": "a_p_u_r_o",
          "description": "Python には、(非公式な) hid あるいは hidapi モジュールが複数あって仕様が微妙に異なっているので使う人は困ってしまいます。\n仕方がないので把握できる限りをまとめました。\npypi で配布されているパッケージが少なくとも3系統あります。\nどれも libusb のサブプロジェクトである hidapi ライブラリを Python から使えるようにすることを意図している点は同じです。\n\n\n\nimport\npypi\ngithub\ndebian\nwindows対応\nmac対応\n\n\n\n\nhid\nhid\npyhidapi\n-\n△\n▽\n\n\nhid または hidraw\nhidapi\nc...",
          "link": "https://zenn.dev/elfmimi/articles/c85b113e3c4479",
          "publishedOn": "2023-02-05T13:42:18.000Z",
          "wordCount": 1295,
          "title": "Python の hid モジュールを理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l6l8U2uS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:a_p_u_r_o%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E3%2581%25AE%2520hid%2520%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1CcnNkU2NreS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZWU5YWE1M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l6l8U2uS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:a_p_u_r_o%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E3%2581%25AE%2520hid%2520%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1CcnNkU2NreS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZWU5YWE1M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/masa86/articles/azure-blob-readwrite",
          "author": "masa86",
          "description": "Python で Azure の blob ストレージで Parquet ファイルを読み書きする方法を紹介します。\n\n ストレージアカウントを作成する\nblob ストレージは、Azure ストレージアカウントサービスに含まれるサービスです。blob ストレージを使うには Azure にストレージアカウントを作成する必要があります。ストレージアカウントを作成しましょう。\n\n 1.リソースの作成\nMicrosoft Azureへアクセスし、Azure サービスの「リソースの作成」をクリックします。\n\n\n 2.ストレージアカウント選ぶ\nMarketplace へ移動するので、検索窓に「ストレー...",
          "link": "https://zenn.dev/masa86/articles/azure-blob-readwrite",
          "publishedOn": "2023-02-05T11:56:36.000Z",
          "wordCount": 777,
          "title": "PythonでAzureのblobストレージでParquetファイルを読み書きする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_C_rjZIK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:masa86%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2581%25A7Azure%25E3%2581%25AEblob%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7Parquet%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E6%259B%25B8%25E3%2581%258D%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Na0t6cWJTby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjODgzY2MxYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_C_rjZIK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:masa86%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2581%25A7Azure%25E3%2581%25AEblob%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7Parquet%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E6%259B%25B8%25E3%2581%258D%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1Na0t6cWJTby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjODgzY2MxYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sukesan000/articles/8d53214c174166",
          "author": "sukesan",
          "description": "Pythonとデザインパターンを勉強中なので、TemplateMethodパターンをPythonで書いてみました。\n\n TemplateMethodパターンとは\nテンプレートとなるスーパークラスと、そのクラスを実際に実装するサブクラスで形成されるデザインパターン。処理の枠組みと具体的な処理内容を分担させることで、スーパークラスを各サブクラスで継承した時に一貫性を保つことができる。同じクラスを継承しているのでまた、詳細な処理をサブクラスに任せているため拡張性が高い。\n\n コード\nfrom abc import ABC, abstractmethod\n\ndef client():\n    c...",
          "link": "https://zenn.dev/sukesan000/articles/8d53214c174166",
          "publishedOn": "2023-02-05T10:33:33.000Z",
          "wordCount": 264,
          "title": "PythonでTemplateMethodパターンを書いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bT3ukfIB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sukesan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7TemplateMethod%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVN4U2M5elRRM29xZEQzNWQ3NWR5amJzdGk5enhsaG5jZno5STg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bT3ukfIB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sukesan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7TemplateMethod%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVN4U2M5elRRM29xZEQzNWQ3NWR5amJzdGk5enhsaG5jZno5STg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/lily_jenny/articles/f545eceb968a86",
          "author": "HAJIME-TOKYO",
          "description": "本記事について\n!\n本記事はM1 MACに買い換えた際の、初期設定(特にpyenv、Homebrew)について記述しています。M1 Mac なので、zsh での説明になります。intel Mac の方は bash なため、異なりますのでご注意ください。また、Usernameは自分のPC環境に置き換えてコマンドを入力してください。\n\n\n Homebrewをインストールする\nHomebrewをインストールしていない場合は、下記コマンドにてインストールする。\n\nターミナル\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.co...",
          "link": "https://zenn.dev/lily_jenny/articles/f545eceb968a86",
          "publishedOn": "2023-02-05T10:20:49.000Z",
          "wordCount": 390,
          "title": "M1 Macの初期設定(pyenv、Homebrewなど)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wWgaXyo8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:HAJIME-TOKYO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:M1%2520Mac%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E8%25A8%25AD%25E5%25AE%259A%2528pyenv%25E3%2580%2581Homebrew%25E3%2581%25AA%25E3%2581%25A9%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS02TXN5Nlowby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ZjE2ZDNiYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wWgaXyo8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:HAJIME-TOKYO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:M1%2520Mac%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E8%25A8%25AD%25E5%25AE%259A%2528pyenv%25E3%2580%2581Homebrew%25E3%2581%25AA%25E3%2581%25A9%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS02TXN5Nlowby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ZjE2ZDNiYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/1276dacc02c60c",
          "author": "Matsuzaki",
          "description": "身内のことでバタバタしていて、特段新しい発見はなし！！\nこおいう週もあるけど、、、、\nあるとしたら\n仕様書のないプログラムは本当にその後にどうしようもないことになるから、仕様書なしで作らないほうがいいと思う。本当に、、、だめ。絶対",
          "link": "https://zenn.dev/zi_matsu/articles/1276dacc02c60c",
          "publishedOn": "2023-02-05T07:00:32.000Z",
          "wordCount": 64,
          "title": "1/30~2/3で技術的にやったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SxC2qL_n--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Matsuzaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:1%252F30%7E2%252F3%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16ZW9oU3UweC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SxC2qL_n--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Matsuzaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:1%252F30%7E2%252F3%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16ZW9oU3UweC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/875b66ebe1bee0",
          "author": "Web Life CH",
          "description": "【１８Error Handling】\nYouTube: https://youtu.be/IRmUT-Xm-lE\nhttps://youtu.be/IRmUT-Xm-lE\n今回はエラー画面が気になる方向けに\n「getPostById」のビューを使って\n簡単なエラーハンドリングについて解説します。\n例えば現状ですと、\n「Post」の個別データを取得しようとして、\n存在しない「id」をURLに設定しますと\nエラー画面が表示されてしまいます。\nこのエラー画面が出ないように\n「try」「except」を使用して、簡単なエラーハンドリングを実装します。\n\nmyapp/posts/views.p...",
          "link": "https://zenn.dev/web_life_ch/articles/875b66ebe1bee0",
          "publishedOn": "2023-02-05T06:28:39.000Z",
          "wordCount": 930,
          "title": "【Django】Pythonで作るRest API【１８Error Handling】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---VbhZQ29--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2598Error%2520Handling%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---VbhZQ29--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2598Error%2520Handling%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kuromame614/articles/721563f74a308e",
          "author": "黒豆。",
          "description": "はじめに\nこんにちは、山田です。\n今回は、CloudWatchログアラームをExcelから作成する方法について記載していきます。\nよろしくお願いします。\n\n 概要図\n概要図は以下の通りです。\n\n①：Lambdaを用いて、Excelファイルを作成してS3にアップロードします。\n②：作成されたExcelファイルをダウンロードします。\n③：ダウンロード後、Excelファイルを記入してアップロードします。\n④：Lambdaを用いて、Excelファイルを読み込みCloudWatchアラームを作成します。\n\n エクセルファイル作成用Lmabdaのフローチャート・コード\nエクセルファイル作成用Lm...",
          "link": "https://zenn.dev/kuromame614/articles/721563f74a308e",
          "publishedOn": "2023-02-05T06:05:49.000Z",
          "wordCount": 3424,
          "title": "CloudWatchログアラームの作成が面倒なので、Excelファイルから設定値を読み込んで作成できるようにしてみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NE627jtB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%25BB%2592%25E8%25B1%2586%25E3%2580%2582%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:CloudWatch%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E3%2581%258C%25E9%259D%25A2%25E5%2580%2592%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E8%25A8%25AD%25E5%25AE%259A%25E5%2580%25A4%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkVUS005MmVIRWRkYWFuQjZJY0hiazh1UWVrYUxBQXRRQnF0aFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NE627jtB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E9%25BB%2592%25E8%25B1%2586%25E3%2580%2582%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:CloudWatch%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E3%2581%258C%25E9%259D%25A2%25E5%2580%2592%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581Excel%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E8%25A8%25AD%25E5%25AE%259A%25E5%2580%25A4%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MkVUS005MmVIRWRkYWFuQjZJY0hiazh1UWVrYUxBQXRRQnF0aFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f7170ba5a13e43",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-118 B - Foods Loved by Everyone\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, m = getIntMap()\n    x = getIntListRow(n)\n\n    l = [0 for i in range(m + 1)]\n\n   ...",
          "link": "https://zenn.dev/hyperdb/articles/f7170ba5a13e43",
          "publishedOn": "2023-02-05T04:27:22.000Z",
          "wordCount": 499,
          "title": "［AtCoder］ABC-118｜B - Foods Loved by Everyone",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gKYIlPii--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-118%25EF%25BD%259CB%2520-%2520Foods%2520Loved%2520by%2520Everyone%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gKYIlPii--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-118%25EF%25BD%259CB%2520-%2520Foods%2520Loved%2520by%2520Everyone%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1c1444e55a5126",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-118 A - B +/- A\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(a + b if b % a == 0 else b - a)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1c1444e55a5126",
          "publishedOn": "2023-02-05T04:27:21.000Z",
          "wordCount": 275,
          "title": "［AtCoder］ABC-118｜A - B +/- A",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RcaNpYXB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-118%25EF%25BD%259CA%2520-%2520B%2520%252B%252F-%2520A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RcaNpYXB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-118%25EF%25BD%259CA%2520-%2520B%2520%252B%252F-%2520A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d0282bbde887b2",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-117 A - Entrance Examination\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    t, x = getIntMap()\n\n    print(t / x)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d0282bbde887b2",
          "publishedOn": "2023-02-05T04:24:32.000Z",
          "wordCount": 238,
          "title": "［AtCoder］ABC-117｜A - Entrance Examination",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jolbNcnS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-117%25EF%25BD%259CA%2520-%2520Entrance%2520Examination%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jolbNcnS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-117%25EF%25BD%259CA%2520-%2520Entrance%2520Examination%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/094bc21322e75d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-117 B - Polygon\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    l = getIntList()\n\n    l.sort()\n\n    m = l[n - 1]\n    l.pop(n - 1)\n\n    print('Yes' if sum(l) > m else 'No')\n\n\nif __name...",
          "link": "https://zenn.dev/hyperdb/articles/094bc21322e75d",
          "publishedOn": "2023-02-05T04:24:31.000Z",
          "wordCount": 344,
          "title": "［AtCoder］ABC-117｜B - Polygon",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OAJIcdnd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-117%25EF%25BD%259CB%2520-%2520Polygon%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OAJIcdnd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-117%25EF%25BD%259CB%2520-%2520Polygon%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tinyowl/articles/c2a0399d4bb47e",
          "author": "Tiny Owl",
          "description": "やりたいこと\nこのようなdict型のデータがあったとします。\ndata = {\n    \"name\": \"tinyowl\",\n    \"age\": 5,\n    \"language\": [\n        \"japanise\",\n        \"english\",\n        \"owl-lang\"\n    ]\n}\n上のデータを、自作クラスに変換したいのです。\ndef to_user_class(data: dict) -> User:\n\t# なんやかんや\n\nuser1 = to_user_class(data)\n\nprint(type(user1)) # <clas...",
          "link": "https://zenn.dev/tinyowl/articles/c2a0399d4bb47e",
          "publishedOn": "2023-02-05T02:44:40.000Z",
          "wordCount": 947,
          "title": "Pythonで辞書型をクラスに変換したい！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VFDCYfWH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tiny%2520Owl%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNGt3RmlqY0pUV1Z2cnJQR2c2SEZmZFFEeTFRMnQ4ZUF0WnNhaDA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VFDCYfWH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tiny%2520Owl%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNGt3RmlqY0pUV1Z2cnJQR2c2SEZmZFFEeTFRMnQ4ZUF0WnNhaDA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shota_matsumoto/articles/2eacbf4d5c9842",
          "author": "くまごり",
          "description": "DataFrameのindexやcolumnsに任意の値を後付けで設定する\nDataFrameのindexやcolumnsをオプションで指定しなかった場合、自動で0始まりの連番が振られるが任意の値をindexやcolumnsへ後付け設定したいとき\n実装\nimport pandas as pd\n\ndf = pd.DataFrame([\n    [1, 2, 3],\n    ['a', 'b', 'c'],\n    ['ｱ', 'ｲ', 'ｳ'],\n])\nprint(df)\n\ndf.index = ['a'] * len(df)\ndf.columns = ['A', 'B', 'C', ...",
          "link": "https://zenn.dev/shota_matsumoto/articles/2eacbf4d5c9842",
          "publishedOn": "2023-02-05T02:44:01.000Z",
          "wordCount": 435,
          "title": "DataFrameのindexやcolumnsに任意の値を後付けで設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XEsBC4zd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258F%25E3%2581%25BE%25E3%2581%2594%25E3%2582%258A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:DataFrame%25E3%2581%25AEindex%25E3%2582%2584columns%25E3%2581%25AB%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E5%25BE%258C%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25A7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUnp5WURPWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYTU1MzhmYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XEsBC4zd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258F%25E3%2581%25BE%25E3%2581%2594%25E3%2582%258A%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:DataFrame%25E3%2581%25AEindex%25E3%2582%2584columns%25E3%2581%25AB%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E5%25BE%258C%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25A7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUnp5WURPWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYTU1MzhmYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ohtaman/articles/irt_cat_python_01",
          "author": "ohtaman",
          "description": "世の中には受験者毎に最適化された問題が出題される試験があります。\n例えば日本人向けの英語テスト CASEC では、「日本初のアダプティブ（適応型）なテスト！」を謳っており、従来のペーパーテストと比べて短時間で正確な測定が可能となっている[1]そうです。\nCASEC のこちらのページでは、その仕組みを視力検査に準えてわかりやすく説明してくれています。以下の図のように、それまでの解答履歴を元に、出題する難易度を調整する、というのが基本方針のようです。\n\nCATの仕組み 引用元: CASEC\nさて、こういった試験はコンピューター適応型試験（Computer Adaptive Test, 以下 ...",
          "link": "https://zenn.dev/ohtaman/articles/irt_cat_python_01",
          "publishedOn": "2023-02-05T02:06:12.000Z",
          "wordCount": 4232,
          "title": "受験者毎に適切な問題を出しわける試験の仕組みをAutoEncoderとみなして実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---nf3nGyz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ohtaman%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E5%258F%2597%25E9%25A8%2593%25E8%2580%2585%25E6%25AF%258E%25E3%2581%25AB%25E9%2581%25A9%25E5%2588%2587%25E3%2581%25AA%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2597%25E3%2582%258F%25E3%2581%2591%25E3%2582%258B%25E8%25A9%25A6%25E9%25A8%2593%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592AutoEncoder%25E3%2581%25A8%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A6%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l3cGFNNU1ua0EwU05mTWNVRE40aVBMVFoxenRJbGJ4ZkE4eXVwLWRzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---nf3nGyz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ohtaman%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E5%258F%2597%25E9%25A8%2593%25E8%2580%2585%25E6%25AF%258E%25E3%2581%25AB%25E9%2581%25A9%25E5%2588%2587%25E3%2581%25AA%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2597%25E3%2582%258F%25E3%2581%2591%25E3%2582%258B%25E8%25A9%25A6%25E9%25A8%2593%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592AutoEncoder%25E3%2581%25A8%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A6%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l3cGFNNU1ua0EwU05mTWNVRE40aVBMVFoxenRJbGJ4ZkE4eXVwLWRzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/motokoike/articles/0df53ac8dda8f7",
          "author": "元小池",
          "description": "bookersについて\n有料予想・有料記事を登録できるサイト\n記事投稿できるAPIが提供されている為、競馬予想から競馬予想投稿までを自動化してみました。\n\n 投稿API用シークレットキー\nbookersにログイン後、アカウント設定の最下部の投稿API用シークレットキーを取得する。\n\n\n 記事一覧取得[GET]\npythonサンプルコード\nimport requests\n# Tokenに投稿API用シークレットキーを指定する\nheaders = {\n    'Authorization': 'Token *****************',\n}\nres = requests.get(...",
          "link": "https://zenn.dev/motokoike/articles/0df53ac8dda8f7",
          "publishedOn": "2023-02-04T17:59:24.000Z",
          "wordCount": 1968,
          "title": "bookersの投稿API（python）を使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rVwpkdL7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%2585%2583%25E5%25B0%258F%25E6%25B1%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:bookers%25E3%2581%25AE%25E6%258A%2595%25E7%25A8%25BFAPI%25EF%25BC%2588python%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ITFAzeGN6LS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkNjI1NGRmNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rVwpkdL7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%2585%2583%25E5%25B0%258F%25E6%25B1%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:bookers%25E3%2581%25AE%25E6%258A%2595%25E7%25A8%25BFAPI%25EF%25BC%2588python%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ITFAzeGN6LS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkNjI1NGRmNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sion_pn/articles/1f672c6d2df165",
          "author": "SiON",
          "description": "Twitter API有料化に伴い、個人で動かしているTwitter Botの運用継続が難しくなりそうなので、Mastodon APIのPythonラッパーであるMastodon.pyを使ってMastodonへのPythonによるToot実装を試してみました。\nhttps://github.com/halcy/Mastodon.py\n\n 環境構築\n\n Python環境の構築\nPythonの開発環境が構築できていない場合、以下の記事を参考に環境構築を行なって下さい。\nhttps://zenn.dev/sion_pn/articles/4418eeda7c62d0\nhttps://zenn....",
          "link": "https://zenn.dev/sion_pn/articles/1f672c6d2df165",
          "publishedOn": "2023-02-04T16:30:02.000Z",
          "wordCount": 409,
          "title": "Mastodon.pyを使ってPythonからトゥートする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WARNcwv2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiON%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Mastodon.py%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%258B%25E3%2582%2589%25E3%2583%2588%25E3%2582%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WARNcwv2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiON%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Mastodon.py%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Python%25E3%2581%258B%25E3%2582%2589%25E3%2583%2588%25E3%2582%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tab_ki/articles/web_scraping",
          "author": "Tab_Ki",
          "description": "1. 概要\nBeautifulSoupなどを利用したwebスクレイピングにおいて、PDFファイルの解析時にファイルを一度ローカルに書き込んでしまうと余計な時間がかかります。この記事は取得したPDFのバイナリデータをストリーム形式に変換することでそのまま解析する方法のメモになります。PDFの解析ライブラリにはpdfminerを利用します。\n\n 1.1. 環境\n\n\n\nName\nVersion\n\n\n\n\nPython\n3.10.6\n\n\npdfminer.six\n20221105\n\n\n\n\n 1.2. pdfminer\nPDFをPythonで解析するためのライブラリです。pipでインストールでき...",
          "link": "https://zenn.dev/tab_ki/articles/web_scraping",
          "publishedOn": "2023-02-04T15:53:59.000Z",
          "wordCount": 784,
          "title": "【Python】webスクレイピング時にPDFファイルをローカルへ保存せずにテキスト抽出する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A-i_PF8C--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tab_Ki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E3%2580%2591web%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E6%2599%2582%25E3%2581%25ABPDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25B8%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kNjFHQWR3Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzZWNlZWM5ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A-i_PF8C--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tab_Ki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Python%25E3%2580%2591web%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E6%2599%2582%25E3%2581%25ABPDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25B8%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kNjFHQWR3Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzZWNlZWM5ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1ae6c6301de459",
          "author": "はいぱぁ",
          "description": "昨年の12月からAtCoderの過去問チャレンジを続けているのですが、別のブログにこちらの記事へのリンクを載せた記事を書こうと思っているのですが、aticlesディレクトリの直下の記事が増えてくると目的の記事がどれなのかが分かりづらくなってきました。\nそこでaticlesディレクトリの直下の記事の一覧をファイルに書き出すプログラムを書いてみました。\n自分用ということで記事の一覧をタイトルでソートしたものをルートにartticle_list.mdという名称のマークダウンファイルに書き出しています。\n自分の場合は記事のリストを並べ替えるだけですが、ちょっと改造すれば抽出する記事をフィルタリン...",
          "link": "https://zenn.dev/hyperdb/articles/1ae6c6301de459",
          "publishedOn": "2023-02-04T14:41:47.000Z",
          "wordCount": 524,
          "title": "記事一覧を出力してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--f52Q_ALP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E8%25A8%2598%25E4%25BA%258B%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--f52Q_ALP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E8%25A8%2598%25E4%25BA%258B%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nosukey/articles/sort_queryset_by_query",
          "author": "Nosukey",
          "description": "書くこと\n\n並べ替えたい順番のid配列(pk等)を持っている状態で、QuerySetのソートする方法\npythonで処理せず、order byで実現する\n\n\n 利用する技術\n\nDjango\nMySQL\nSQlite\n\n\n 今日のゴール\n## 前提: 以下は変数として持つ\n# - queryset: 並び替えたい対象のQuerySet\n# - ids: 並び順を示すpk(等)の配列 \n\nfrom .common import sorter\n\n# 取得結果:\n# 第一引数のquerysetを第二引数で与えたidの順番に並べ替えたもの\nsorted_queryset = sorter.so...",
          "link": "https://zenn.dev/nosukey/articles/sort_queryset_by_query",
          "publishedOn": "2023-02-04T13:44:53.000Z",
          "wordCount": 592,
          "title": "order byを使って、QuerySetを任意の順番でソートする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gLy-Zx4---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Nosukey%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:order%2520by%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581QuerySet%25E3%2582%2592%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E9%25A0%2586%25E7%2595%25AA%25E3%2581%25A7%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1iUGRpOGhPeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5OGI2ZmFjZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gLy-Zx4---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Nosukey%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:order%2520by%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581QuerySet%25E3%2582%2592%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E9%25A0%2586%25E7%2595%25AA%25E3%2581%25A7%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1iUGRpOGhPeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5OGI2ZmFjZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nosukey/articles/use_costom_query_set",
          "author": "Nosukey",
          "description": "書くこと\n\nRuby on Railsのscope風、簡易機能をDjangoで書く方法\nQuerySetのメソッドチェーンで呼び出せる名前付けクエリを定義する方法\n\n\n 利用する技術\n\nDjango\nmodel.QuerySet\nmodel.Manager\n\n\n 今日のゴール\nこのようなArticleモデルが定義されていたとき\nclass Article(models.Model):\n    title = models.CharField(max_length=100)\n    # (省略)\n    is_active = models.BooleanField(default=T...",
          "link": "https://zenn.dev/nosukey/articles/use_costom_query_set",
          "publishedOn": "2023-02-04T13:06:26.000Z",
          "wordCount": 448,
          "title": "DjangoでCustom QuerySetを利用して、Railsのscope風クエリ名前付けを実現する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Mv0L7a0K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Nosukey%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Django%25E3%2581%25A7Custom%2520QuerySet%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581Rails%25E3%2581%25AEscope%25E9%25A2%25A8%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E5%2590%258D%25E5%2589%258D%25E4%25BB%2598%25E3%2581%2591%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1iUGRpOGhPeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5OGI2ZmFjZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Mv0L7a0K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Nosukey%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Django%25E3%2581%25A7Custom%2520QuerySet%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581Rails%25E3%2581%25AEscope%25E9%25A2%25A8%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E5%2590%258D%25E5%2589%258D%25E4%25BB%2598%25E3%2581%2591%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1iUGRpOGhPeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5OGI2ZmFjZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryo1443/articles/fe921917d91ea0",
          "author": "Ryo",
          "description": "概要\n今回は、GPTIndexを活用してパワーポイントの画像を読み込ませ、スライドの内容に関する応対が可能なChatbotを作ります。以下のような場面で役立つかも？\n\nスライドが長すぎて内容を読むのが面倒くさい時\nスライドを要約したり、整理したりする必要がある時\n\n今回の全コードはこちら：\nhttps://github.com/ryo1443/GPTIndex_powerpoint_sample\n\n 読み込ませるスライド\nネット上にはパワーポイントファイルが中々落ちていないので、ChatGPTを活用して自作しました。メタバースに関する適当なまとめです。ファイルが欲しい方はgithub...",
          "link": "https://zenn.dev/ryo1443/articles/fe921917d91ea0",
          "publishedOn": "2023-02-04T12:52:46.000Z",
          "wordCount": 498,
          "title": "【GPTIndex】パワポを読み込んだChatbotを作ろう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LfkmyycL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590GPTIndex%25E3%2580%2591%25E3%2583%2591%25E3%2583%25AF%25E3%2583%259D%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A0Chatbot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kbXBsTk0xNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkNmM0MjIwMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LfkmyycL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590GPTIndex%25E3%2580%2591%25E3%2583%2591%25E3%2583%25AF%25E3%2583%259D%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A0Chatbot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kbXBsTk0xNC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkNmM0MjIwMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b7d55619f81497",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-116 B - Collatz Problem\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef calc(n):\n    if n % 2 == 0:\n        return n // 2\n    return 3 * n + 1\n\n\ndef main():\n    s = getInt()\n\n    a = [s]\n    i = 1\n    while True:\n        x = calc(a[i - 1])\n        if x in a:\n            print(i...",
          "link": "https://zenn.dev/hyperdb/articles/b7d55619f81497",
          "publishedOn": "2023-02-04T10:00:32.000Z",
          "wordCount": 389,
          "title": "［AtCoder］ABC-116｜B - Collatz Probleme",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eFTTWAX6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-116%25EF%25BD%259CB%2520-%2520Collatz%2520Probleme%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eFTTWAX6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-116%25EF%25BD%259CB%2520-%2520Collatz%2520Probleme%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5bdd8dea1ec59d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-116 A - Right Triangle\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    print(a * b // 2)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5bdd8dea1ec59d",
          "publishedOn": "2023-02-04T10:00:32.000Z",
          "wordCount": 250,
          "title": "［AtCoder］ABC-116｜A - Right Triangle",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3bz-rwcJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-116%25EF%25BD%259CA%2520-%2520Right%2520Triangle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3bz-rwcJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-116%25EF%25BD%259CA%2520-%2520Right%2520Triangle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kuryu8/articles/8af37decb19e9f",
          "author": "kuryu",
          "description": "はじめに\n前回はLightsailを使ってメールを送信するシステムを構築しましたが、今回はAWS Lambdaを使ってサーバレスでメールを送信するシステムを構築しました。\n\n 構築環境\nサーバレスコンピューティングサービス：AWS Lambda\nメールシステム：Amazon SES\n言語：pythoon\n\n 前提条件\n下記で「1.SESの作成」と「2.Amazon SESにSMTP認証情報を作成する」を行う\nhttps://zenn.dev/kuryu8/articles/dd72150c33c856\n\n 構築手順\n\n 1.LambdaがAPIコールを実行するためのIAMポリシーとロ...",
          "link": "https://zenn.dev/kuryu8/articles/8af37decb19e9f",
          "publishedOn": "2023-02-04T09:22:41.000Z",
          "wordCount": 587,
          "title": "LambdaとSESを使ってサーバレスでEメール送信してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_aHhaLJ3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kuryu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Lambda%25E3%2581%25A8SES%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25A7E%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVlEZ3dnTi1YblJpVzRod1ZTTV8tNWF4dzhjZ01JZjNWTVpkZHE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_aHhaLJ3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kuryu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Lambda%25E3%2581%25A8SES%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25A7E%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVlEZ3dnTi1YblJpVzRod1ZTTV8tNWF4dzhjZ01JZjNWTVpkZHE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ingress/articles/daf3f055be20bf",
          "author": "クラウド職人J",
          "description": "Pythonでスクレイピング中にアラートのポップアップ(UnexpectedAlertPresentException)が出て先に進めなくなってしまった時の対応方法\n\n 【環境】\nOS: CentOS Stream release 8\nPython3バージョン:Python 3.6.8\nSeleniumバージョン（pip3 list）: selenium 3.141.0\n\n 【事象】\nPythonのSeleniumを使った、ブラウザの自動操作を行っている時、フォームのボタンをクリック操作した際に、UnexpectedAlertPresentException というエラーが発生。\nエ...",
          "link": "https://zenn.dev/ingress/articles/daf3f055be20bf",
          "publishedOn": "2023-02-04T07:00:18.000Z",
          "wordCount": 222,
          "title": "UnexpectedAlertPresentExceptionの対応",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b06rkBdM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E8%2581%25B7%25E4%25BA%25BAJ%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:UnexpectedAlertPresentException%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jaHJ4cGtNSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyODRmMzdlNzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b06rkBdM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E8%2581%25B7%25E4%25BA%25BAJ%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:UnexpectedAlertPresentException%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jaHJ4cGtNSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyODRmMzdlNzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kaeru39/articles/a60f6bed057f0c",
          "author": "kaeru39",
          "description": "以下の書籍を読んだ際にBERTの実装をコメントを付けながら読み進めていきましたので、まとめます。新卒で入社した会社で深層学習を勉強していたときに大変お世話になった書籍です。自信を持っておすすめします。\nhttps://www.amazon.co.jp/dp/4839970254/\n今回はモデルの説明だけでも説明量が多い関係から、optimizerやDatasetLoader、推論部の説明は割愛します。ご了承ください。\n\n BERTとは\nBidirectional Encoder Representations from Transformersの略です。Transformerからなる双方...",
          "link": "https://zenn.dev/kaeru39/articles/a60f6bed057f0c",
          "publishedOn": "2023-02-04T05:12:19.000Z",
          "wordCount": 9709,
          "title": "【PyTorch】BERTの実装を理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--O-DWjiA6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaeru39%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590PyTorch%25E3%2580%2591BERT%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1vQV90alE5Zi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--O-DWjiA6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaeru39%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590PyTorch%25E3%2580%2591BERT%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1vQV90alE5Zi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwMzhiYTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/ef55e55cfcb125",
          "author": "Web Life CH",
          "description": "【１７Update Post】\nYouTube: https://youtu.be/zn2_DeYLzFw\nhttps://youtu.be/zn2_DeYLzFw\n今回は「Post」のアップデートのビューを作成します。\n\nmyapp/posts/views.py\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\nfrom rest_framework import viewsets\nfrom .models import Post\nfrom .serializers import Pos...",
          "link": "https://zenn.dev/web_life_ch/articles/ef55e55cfcb125",
          "publishedOn": "2023-02-04T04:43:13.000Z",
          "wordCount": 1130,
          "title": "【Django】Pythonで作るRest API【１７Update Post】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WDo71EUR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2597Update%2520Post%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WDo71EUR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2597Update%2520Post%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hayata_yamamoto/articles/016b41781d9783",
          "author": "山本隼汰 | Hayata Yamamoto",
          "description": "はじめに\nこんにちは。@hayata-yamamotoです。\nDynamoDB のようなリソースを用いてプロダクトを開発する際、ローカル用にエミュレーターを起動し、そこにテスト用のデータを詰め込んで利用することがあると思います。よくあるのはテストのために docker-compose.yml を書いて、docker compose up -d しテストを実行するパターンです。しかしこれは、徐々にサービスが大きくなり関連するリソースが増えてきた時に docker-compose.yml 自体のメンテナンスがめんどくさくなってくる問題を抱えていました。\n弊社では、この問題を少しでも緩和で...",
          "link": "https://zenn.dev/hayata_yamamoto/articles/016b41781d9783",
          "publishedOn": "2023-02-04T03:45:06.000Z",
          "wordCount": 2010,
          "title": "Moto と PynamoDB で DynamoDB を用いたAPIのテストを書く方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eIbEwzUM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Moto%2520%25E3%2581%25A8%2520PynamoDB%2520%25E3%2581%25A7%2520DynamoDB%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FAPI%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eIbEwzUM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Moto%2520%25E3%2581%25A8%2520PynamoDB%2520%25E3%2581%25A7%2520DynamoDB%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FAPI%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hayata_yamamoto/articles/d475649cb0922e",
          "author": "山本隼汰 | Hayata Yamamoto",
          "description": "はじめに\nこんにちは。@hayata-yamamotoです。\n弊社では、バッチジョブやちょっとしたコマンドライン実行を行うためのツールとして、Typer を採用しています。FastAPI と親和性が高く、使用感も類似しておりシームレスな開発体験を提供してくれています。\nhttps://typer.tiangolo.com/\n今回は、Typer の使い方をどうしても忘れてしまう私のために備忘録として、Typer の使い方をまとめたコードを共有します。\nコメントに、該当するページが記載されておりますため、Typer を利用されている方々もどうぞご活用ください。\n\nmain.py\nimpo...",
          "link": "https://zenn.dev/hayata_yamamoto/articles/d475649cb0922e",
          "publishedOn": "2023-02-04T03:40:52.000Z",
          "wordCount": 1254,
          "title": "Typer の基本的な使い方まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Aej18SEa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Typer%2520%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Aej18SEa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Typer%2520%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hayata_yamamoto/articles/df0661e61d8c15",
          "author": "山本隼汰 | Hayata Yamamoto",
          "description": "はじめに\nこんにちは。@hayata-yamamotoです。\nFastAPI をベースにしたバックエンドを運用開発していくにあたり None の使用を伴う API 定義を行うと、None で指定した値が OpenAPI 定義上では Optional の扱いを受けてしまい、TypeScript 側で見ると undefined と見做されるという問題がありました。\n今回は、その OpenAPI 定義上の表記と、FastAPI の実際のレスポンスを整合させるために行った設定をご紹介します。\n\n 解決方法\nFastAPI で response_model_exclude_none を Tru...",
          "link": "https://zenn.dev/hayata_yamamoto/articles/df0661e61d8c15",
          "publishedOn": "2023-02-04T03:38:08.000Z",
          "wordCount": 1024,
          "title": "FastAPI で None の値を null から undefined に変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7Dh8S-GJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:FastAPI%2520%25E3%2581%25A7%2520None%2520%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%2520null%2520%25E3%2581%258B%25E3%2582%2589%2520undefined%2520%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7Dh8S-GJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:FastAPI%2520%25E3%2581%25A7%2520None%2520%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%2520null%2520%25E3%2581%258B%25E3%2582%2589%2520undefined%2520%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hayata_yamamoto/articles/4e68e8510f4e66",
          "author": "山本隼汰 | Hayata Yamamoto",
          "description": "こんにちは。@hayata-yamamotoです。\nこの記事は、トドケールのプロダクトや開発組織、メンバーにご興味を持ってくれた方に向けて、我々がどんな技術をどんな風に用いて、どんな組織でなんのために開発しているのかをまとめたものになります。なお、2021 年夏に公開した以下の記事の続編です。\nhttps://zenn.dev/todoker/articles/start-tech-blog\n!\n2021 年版からの違い（サマリ）\n\nオフショア中心の開発体制から、自社開発に開発体制が大きく変わりました\n開発組織を UX デザイン、エンジニアにわけ、プロトタイプドリブンで動けるようにしまし...",
          "link": "https://zenn.dev/hayata_yamamoto/articles/4e68e8510f4e66",
          "publishedOn": "2023-02-04T03:29:54.000Z",
          "wordCount": 957,
          "title": "[2022年版] トドケールの開発組織について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hIbVa03Q--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255B2022%25E5%25B9%25B4%25E7%2589%2588%255D%2520%25E3%2583%2588%25E3%2583%2589%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%25B5%2584%25E7%25B9%2594%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hIbVa03Q--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255B2022%25E5%25B9%25B4%25E7%2589%2588%255D%2520%25E3%2583%2588%25E3%2583%2589%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%25B5%2584%25E7%25B9%2594%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hayata_yamamoto/articles/781efca1687272",
          "author": "山本隼汰 | Hayata Yamamoto",
          "description": "はじめに\nこんにちは。hayata-yamamoto です。\n唐突ですが、皆さんは「サーバーレス」お好きでしょうか？AWS であれば、Lambda, Fargate, Aurora Serverless あたりを思い浮かべるかもしれません。GCP にも似たようなサーバーレスサービスがありますよね。サーバーを自分たちで用意せず、クラウドベンダーが”いい感じに”設定したサーバーを拝借できることで、エンジニアはアプリケーションの開発に集中できる、そんなサービスです。オートスケールの設定が容易にできたり、リソース使用にかかる費用が従量課金になっており、ワークロードに合わせてコスト最適化を行い...",
          "link": "https://zenn.dev/hayata_yamamoto/articles/781efca1687272",
          "publishedOn": "2023-02-04T03:26:56.000Z",
          "wordCount": 1404,
          "title": "FastAPI と Mangum で作るサーバーレスAPI",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VWy99DQC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:FastAPI%2520%25E3%2581%25A8%2520Mangum%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VWy99DQC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:FastAPI%2520%25E3%2581%25A8%2520Mangum%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hayata_yamamoto/articles/8634b93502a4c1",
          "author": "山本隼汰 | Hayata Yamamoto",
          "description": "はじめに\nこんにちは。@hayata-yamamoto です。\nPythonista の皆さんは、AWS 関連の開発をする際にこんなことを感じたことはありませんか？\n\nAWS のリソースを自分の環境に立てるのマジでだるい\n\nとはいえ、ローカル含む、自分の作業環境でアプリケーション開発するためには、AWS のモックサービスを使わざるを得ない状況も多いのではないでしょうか。そう言った場合、docker-compose.yml などを書き、seed データの追加用シェルなどを書く、 docker-compose up -d で起動して、開発時やテスト時に使う。そんな運用をされている方もいる...",
          "link": "https://zenn.dev/hayata_yamamoto/articles/8634b93502a4c1",
          "publishedOn": "2023-02-04T03:25:30.000Z",
          "wordCount": 1825,
          "title": "Python の単体テストで AWS のモックをサクッと導入したいなら moto を使え！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IV6pRqmk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%2520%25E3%2581%25AE%25E5%258D%2598%25E4%25BD%2593%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%2520AWS%2520%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2582%2589%2520moto%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IV6pRqmk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E6%259C%25AC%25E9%259A%25BC%25E6%25B1%25B0%2520%257C%2520Hayata%2520Y...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%2520%25E3%2581%25AE%25E5%258D%2598%25E4%25BD%2593%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%2520AWS%2520%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2582%2589%2520moto%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1UcGM1a0Nrcy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NzU4ZDVkOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mossan_hoshi/articles/20220404_fastapi",
          "author": "mossan_hoshi",
          "description": "はじめに\n本記事ではfastAPI本「Building Data Science Applications with FastAPI」を紹介します。この本はオライリーサブスクで読めます。本記事は以前にQiita投稿した記事の再構成です。\n\n\n\n\n\n\n\n\n\n原題\n「Building Data Science Applications with FastAPI」\n\n\nリリース年月\n2021/10 (🚨少し昔の本です)\n\n\nカテゴリ\nfastAPI入門\n\n\nおすすめ度(5段階)\n⭐⭐⭐⭐☆\n\n\n対象者\nfastAPI初心者\n\n\n\n\n fastAPI is 何？\n\npython向けのAPIサ...",
          "link": "https://zenn.dev/mossan_hoshi/articles/20220404_fastapi",
          "publishedOn": "2023-02-03T23:03:48.000Z",
          "wordCount": 499,
          "title": "fastAPI入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RziEXW0W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mossan_hoshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:fastAPI%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dfWU0zbjhpS2hvOGtURGlHdGNzYldTQ1lneVNqbHNSd1pRTlVFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RziEXW0W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mossan_hoshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:fastAPI%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dfWU0zbjhpS2hvOGtURGlHdGNzYldTQ1lneVNqbHNSd1pRTlVFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taro0079/articles/e4a2ba05a01e74",
          "author": "taro0079",
          "description": "最近アウトプットが足りていないな、と思ってひそかに作っていたものを公開します。\n昨今のコロナ禍で、その感染・拡大防止のためにオフィスの換気が重要であると言われています。\n弊社でも、CO2モニターを購入しましたが、結局アラームに誰も気づかず換気し忘れるといった事態が多発しています。\nそこでCO2濃度が基準値を超えたときにslackで換気を促す通知を送れば解決するのでは、と考えraspberry piとCO2濃度センサーを使って自作しました。\n\n 必要なもの\n\nraspberry pi\nCO2濃度センサー MH-Z19\n\n私はここで買いましたけど執筆当時は品切れ状態でした... https:...",
          "link": "https://zenn.dev/taro0079/articles/e4a2ba05a01e74",
          "publishedOn": "2023-02-03T14:02:07.000Z",
          "wordCount": 451,
          "title": "Raspberry piでCO2を計測してSlack通知する！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C3iLK0DP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taro0079%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520pi%25E3%2581%25A7CO2%25E3%2582%2592%25E8%25A8%2588%25E6%25B8%25AC%25E3%2581%2597%25E3%2581%25A6Slack%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dLR1FuR2JJU05fUVhNN0VBVUdzTFdGTkZ3Y3N1aWpYbTJORU5OUEtBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C3iLK0DP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taro0079%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Raspberry%2520pi%25E3%2581%25A7CO2%25E3%2582%2592%25E8%25A8%2588%25E6%25B8%25AC%25E3%2581%2597%25E3%2581%25A6Slack%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dLR1FuR2JJU05fUVhNN0VBVUdzTFdGTkZ3Y3N1aWpYbTJORU5OUEtBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ymicky/articles/cde7f78e3f8888",
          "author": "ymicky",
          "description": "Rayはメソッドをデコレータで囲んであげるだけで並列処理を簡単にかける便利なライブラリである。\nhttps://docs.ray.io/en/latest/ray-overview/index.html\n以下はサンプルコード。\nimport ray\nimport time\n\nray.init(num_cpus=4)\n# wait initailization ray\ntime.sleep(1)\n\ndef func1(self, x):\n    time.sleep(1)\n    return x * 2\n\n@ray.remote\ndef func2(self, x):\n    x = f...",
          "link": "https://zenn.dev/ymicky/articles/cde7f78e3f8888",
          "publishedOn": "2023-02-03T08:27:40.000Z",
          "wordCount": 711,
          "title": "Pythonの並列処理ライブラリRayでインスタンスメソッドを並列化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XX7XLUQD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymicky%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AE%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AARay%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E4%25B8%25A6%25E5%2588%2597%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeUZWRlY2MF92MldNS1dFNHZvYldLWDhpLUlUalpmaGpJanpxOVk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XX7XLUQD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymicky%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25AE%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AARay%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E4%25B8%25A6%25E5%2588%2597%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeUZWRlY2MF92MldNS1dFNHZvYldLWDhpLUlUalpmaGpJanpxOVk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8ef157fdaba3d0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-115 B - Christmas Eve Eve\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntRow(N):\n    return [int(input()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    p = getIntRow(n)\n\n    p.sort()\n    p.reverse()\n\n    p[0] = p[0] // 2\n\n    print(sum(p))\n\n\nif __name__ == \"__mai...",
          "link": "https://zenn.dev/hyperdb/articles/8ef157fdaba3d0",
          "publishedOn": "2023-02-03T05:53:19.000Z",
          "wordCount": 336,
          "title": "［AtCoder］ABC-115｜B - Christmas Eve Eve",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RhEMv-GA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-115%25EF%25BD%259CB%2520-%2520Christmas%2520Eve%2520Eve%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RhEMv-GA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-115%25EF%25BD%259CB%2520-%2520Christmas%2520Eve%2520Eve%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/30cc399f9e9d52",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-115 A - Christmas Eve Eve Eve\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    d = getInt()\n\n    w = ['Christmas']\n    for i in range(25 - d):\n        w.append('Eve')\n    print(' '.join(w))\n\n\nif __name__ == \"__main__\":\n    main()```",
          "link": "https://zenn.dev/hyperdb/articles/30cc399f9e9d52",
          "publishedOn": "2023-02-03T05:53:18.000Z",
          "wordCount": 288,
          "title": "［AtCoder］ABC-115｜A - Christmas Eve Eve Eve",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yb8Fd3ZA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-115%25EF%25BD%259CA%2520-%2520Christmas%2520Eve%2520Eve%2520Eve%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yb8Fd3ZA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-115%25EF%25BD%259CA%2520-%2520Christmas%2520Eve%2520Eve%2520Eve%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/40481d277a01fa",
          "author": "Web Life CH",
          "description": "【１６Delete Post】\nYouTube: https://youtu.be/beV7qrOWibA\nhttps://youtu.be/beV7qrOWibA\n今回は「Post」のデリートのビューを実装します。\nまず、前回作成した「urls.py」ですが、\n    path('<str:pk>/', getPostById, name='getPost'),\n    path('create/', createPost, name='createPost'),\n\n上の状態ですと\nブラウザに入力した際に「create」が「pk」として認識されて\nエラー画面が表示されて...",
          "link": "https://zenn.dev/web_life_ch/articles/40481d277a01fa",
          "publishedOn": "2023-02-03T04:59:21.000Z",
          "wordCount": 983,
          "title": "【Django】Pythonで作るRest API【１６Delete Post】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b9tvNPXG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2596Delete%2520Post%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b9tvNPXG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2596Delete%2520Post%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ivry/articles/4f92f736a8a853",
          "author": "kose_atsuya",
          "description": "モチベーション\nIVRyのエンジニアの小瀬です。IVRy ではRailsを中心にバックエンドのコードを書いています。\nhttps://twitter.com/ats312kose\nタイトルだけみてやりたいことが伝え切れてない可能性が高いので、やりたいことと、趣味でやっているプロジェクトについて説明させていただきます。\nIVRyでは主にRailsのコードを書いているのですが、趣味でPythonを使った音楽の自動演奏プログラムを作っています。音楽の自動演奏といってもやっていることはmidiを使った演奏指示であり、音はDAW(Abelton Liveなど)にある沢山の楽器の力を借りています...",
          "link": "https://zenn.dev/ivry/articles/4f92f736a8a853",
          "publishedOn": "2023-02-03T03:34:59.000Z",
          "wordCount": 1017,
          "title": "trioでサーバーを立ち上げながらバックグラウンド処理を並列で実行(Quart-Trio)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ccDlpez3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kose_atsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:trio%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2589%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E4%25B8%25A6%25E5%2588%2597%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%2528Quart-Trio%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15RVhfdGRoMC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyMDFiNzhiMzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ccDlpez3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kose_atsuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:trio%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2589%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E4%25B8%25A6%25E5%2588%2597%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%2528Quart-Trio%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15RVhfdGRoMC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyMDFiNzhiMzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/c10ne/articles/44f30802c8b05c",
          "author": "c10ne",
          "description": "動機\nLocustを使い、数千ユーザ分のテストをしたかった。\nただ、サービスにはログイン機構があり、かつ１つのユーザごとに複数回のログイン処理をサーバ側で止めてしまう。よって、Locustの仕様？である、１ユーザ複製だと機能しなかった。\n※Locustでpythonを数年ぶりに触りました、入門書ぶり。基本すべて脱noobくらい\n\n 解決法\nユーザを複数作成し、ユーザごとに１回ずつのログインにして負荷テストを行う。超力技。\n\n Python理解(分かる人はスキップ)\n\nsample.py\nf = open('userClass.txt', 'w')\nfor x in range(5):...",
          "link": "https://zenn.dev/c10ne/articles/44f30802c8b05c",
          "publishedOn": "2023-02-03T02:22:44.000Z",
          "wordCount": 408,
          "title": "PythonでLocustのUserClass生成を自動化してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VJkpJ_Pk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:c10ne%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7Locust%25E3%2581%25AEUserClass%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HbExmMVNDRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkZDNkNjE0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VJkpJ_Pk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:c10ne%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7Locust%25E3%2581%25AEUserClass%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1HbExmMVNDRy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkZDNkNjE0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/spacemarket/articles/012a2a524ec7b8",
          "author": "miotava",
          "description": "こんにちは、株式会社スペースマーケットのMiotavaです。\n最近地理情報を扱うフォーマットであるGeoJSONに触れる機会があったのですが、CSVなどに比べて知識も経験も少なくどう処理しようかと迷っていたところ、PythonライブラリのGeoPandasが便利だったので紹介したいと思います。\n\n 今回やりたいこと\n細かい単位で格納されている市区町村データの区域情報（POLYGONなどのgeometryデータ）を親地区単位でまとめたい、例えば、以下の市区町村の地理データ（POLYGON形式データ）を親市区町村の地理データとしてまとめたい、と言ったケースをここでは考えます。\n\n befor...",
          "link": "https://zenn.dev/spacemarket/articles/012a2a524ec7b8",
          "publishedOn": "2023-02-03T01:11:32.000Z",
          "wordCount": 740,
          "title": "GeoJSON上の複数区域のgeometryデータを一つにまとめる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5V0AzXz9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:miotava%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GeoJSON%25E4%25B8%258A%25E3%2581%25AE%25E8%25A4%2587%25E6%2595%25B0%25E5%258C%25BA%25E5%259F%259F%25E3%2581%25AEgeometry%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29ScUtGTHF0eGN3VUdwMzFTMnUyRWZPQWRsYUlsWmN2Nlc3U1ppTHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5V0AzXz9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:miotava%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GeoJSON%25E4%25B8%258A%25E3%2581%25AE%25E8%25A4%2587%25E6%2595%25B0%25E5%258C%25BA%25E5%259F%259F%25E3%2581%25AEgeometry%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29ScUtGTHF0eGN3VUdwMzFTMnUyRWZPQWRsYUlsWmN2Nlc3U1ppTHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/v3v/articles/4cfc39eded9a5e",
          "author": "v3v",
          "description": "INSTALLATION\n\n INSTALL Mini-Conda\ncd ~\nmkdir -p ~/miniconda3\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\nbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\nrm -rf ~/miniconda3/miniconda.sh\n~/miniconda3/bin/conda init bash\n~/miniconda...",
          "link": "https://zenn.dev/v3v/articles/4cfc39eded9a5e",
          "publishedOn": "2023-02-02T12:05:30.000Z",
          "wordCount": 405,
          "title": "Anaconda Code Snippet",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--srCIYOBj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:v3v%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Anaconda%2520Code%2520Snippet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXNYTk9HN0JtY1M5ejl1dVI2aWtMREkzUjZWTHZYMFBxOEE4VEw9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--srCIYOBj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:v3v%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Anaconda%2520Code%2520Snippet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXNYTk9HN0JtY1M5ejl1dVI2aWtMREkzUjZWTHZYMFBxOEE4VEw9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/konnyaku256/articles/mimamori-camera",
          "author": "konnyaku256",
          "description": "こんにちは、ソフトウェアエンジニア兼、一児のパパ @konnyaku256 です。\n先日、Raspberry Pi + Web カメラ + WebRTC Native Client Momo で赤ちゃん用の見守りカメラシステム「mimamori」を作ってみました。\n\n実際に我が家の育児支援ツールとして運用してみたところ、けっこう活躍してくれています。\nこの記事では、そんな mimamori を支えている技術スタックやそれらを用いた実装例を紹介したいと思います。\nソースコードやシステムの使い方などは GitHub で公開しています。\n気に入ったら Star いただけると嬉しいです。\nhtt...",
          "link": "https://zenn.dev/konnyaku256/articles/mimamori-camera",
          "publishedOn": "2023-02-02T08:16:05.000Z",
          "wordCount": 1191,
          "title": "Raspberry Pi + Webカメラ + WebRTC Native Client Momo で赤ちゃん用の見守りカメラ作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fFsLc3fC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:konnyaku256%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Raspberry%2520Pi%2520%252B%2520Web%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%2520%252B%2520WebRTC%2520Native%2520Client%2520Momo%2520%25E3%2581%25A7%25E8%25B5%25A4%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E7%2594%25A8%25E3%2581%25AE%25E8%25A6%258B%25E5%25AE%2588%25E3%2582%258A%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pSQTc1MzNyQ24yU2JQaTd1OU4wSzBNWmJUWUpiMFVTdGtUWXFZPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fFsLc3fC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:konnyaku256%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Raspberry%2520Pi%2520%252B%2520Web%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%2520%252B%2520WebRTC%2520Native%2520Client%2520Momo%2520%25E3%2581%25A7%25E8%25B5%25A4%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E7%2594%25A8%25E3%2581%25AE%25E8%25A6%258B%25E5%25AE%2588%25E3%2582%258A%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pSQTc1MzNyQ24yU2JQaTd1OU4wSzBNWmJUWUpiMFVTdGtUWXFZPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ymicky/articles/8cf7302bc30fdc",
          "author": "ymicky",
          "description": "pythonのloggingモジュールで単にerrorログを吐いてもトレースバックまで出力してくれない。\nサンプルコード\n# lowermodule.py\nimport traceback\nimport logging\n\nlogging.basicConfig(\n    level=logging.DEBUG, format=\"%(asctime)s %(name)s %(levelname)s:%(message)s\"\n)\nlogger = logging.getLogger(__name__)\n\ndef word_count(myfile):\n    try:\n        wit...",
          "link": "https://zenn.dev/ymicky/articles/8cf7302bc30fdc",
          "publishedOn": "2023-02-02T04:41:47.000Z",
          "wordCount": 1201,
          "title": "python loggingでトレースバックを出力する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oSDa2uLY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymicky%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520logging%25E3%2581%25A7%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeUZWRlY2MF92MldNS1dFNHZvYldLWDhpLUlUalpmaGpJanpxOVk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oSDa2uLY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymicky%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%2520logging%25E3%2581%25A7%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeUZWRlY2MF92MldNS1dFNHZvYldLWDhpLUlUalpmaGpJanpxOVk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/f9d85ffc6d7aa3",
          "author": "Web Life CH",
          "description": "【１５Get Post By Id】\nYouTube: https://youtu.be/fm08afmt9JA\nhttps://youtu.be/fm08afmt9JA\n今回は「Post」の個別データを取得するビュー作成を行います。\n「Post」の「id」がクエリーのパラムスとして「pk」に設定されます。\n\nmyapp/posts/views.py\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\nfrom rest_framework import viewsets\nfrom .mod...",
          "link": "https://zenn.dev/web_life_ch/articles/f9d85ffc6d7aa3",
          "publishedOn": "2023-02-02T03:29:56.000Z",
          "wordCount": 859,
          "title": "【Django】Pythonで作るRest API【１５Get Post By Id】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BKNzZfPi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2595Get%2520Post%2520By%2520Id%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BKNzZfPi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2595Get%2520Post%2520By%2520Id%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c5197523c697b3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-114 A - 753\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    print('YES' if x in [7, 5, 3] else 'NO')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c5197523c697b3",
          "publishedOn": "2023-02-02T03:04:08.000Z",
          "wordCount": 251,
          "title": "［AtCoder］ABC-114｜A - 753",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Lr_Wh7oc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-114%25EF%25BD%259CA%2520-%2520753%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Lr_Wh7oc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-114%25EF%25BD%259CA%2520-%2520753%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/34b9b3fe61aa2a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-114 B - 754\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    t = []\n    for i in range(len(s) - 2):\n        t.append(abs(int(s[i:i+3]) - 753))\n    t.sort()\n    print(t[0])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/34b9b3fe61aa2a",
          "publishedOn": "2023-02-02T03:04:08.000Z",
          "wordCount": 303,
          "title": "［AtCoder］ABC-114｜B - 754",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5em9b7Bb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-114%25EF%25BD%259CB%2520-%2520754%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5em9b7Bb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-114%25EF%25BD%259CB%2520-%2520754%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kentaroszk/articles/3421e27c061853",
          "author": "KENTAROSZK",
          "description": "概要\n\nこの画像にあるように、マイクで話しかけて、AIに回答を考えてもらい、その結果を音声として出力する、というものを作成しました。ロボットと対話できます。\n\n 環境\n全てGoogleColabの環境でできます。\n\n 利用するライブラリ\n主に4つ使ってます。\ngTTS # ← GoogleTextToSpeechという音声合成のためのライブラリです\nwhisper\nlangchain\nopenai\n\n ライブラリの入れ方\n全てpipで入れることができます。\npip install gTTS\npip install git+https://github.com/openai/whisp...",
          "link": "https://zenn.dev/kentaroszk/articles/3421e27c061853",
          "publishedOn": "2023-02-01T13:26:43.000Z",
          "wordCount": 1006,
          "title": "オープンソースAI【Whisper、GPT3、GoogleTextToSpeech】を用いた音声対話ロボットの作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZiGdbTWP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KENTAROSZK%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9AI%25E3%2580%2590Whisper%25E3%2580%2581GPT3%25E3%2580%2581GoogleTextToSpeech%25E3%2580%2591%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E9%259F%25B3%25E5%25A3%25B0%25E5%25AF%25BE%25E8%25A9%25B1%25E3%2583%25AD%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1GODdabGlFci0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNzBhZmRkMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZiGdbTWP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KENTAROSZK%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9AI%25E3%2580%2590Whisper%25E3%2580%2581GPT3%25E3%2580%2581GoogleTextToSpeech%25E3%2580%2591%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E9%259F%25B3%25E5%25A3%25B0%25E5%25AF%25BE%25E8%25A9%25B1%25E3%2583%25AD%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1GODdabGlFci0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNzBhZmRkMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/3acb45ec8356af",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-113 A - Discount Fare\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x, y = getIntMap()\n\n    print(x + y // 2)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/3acb45ec8356af",
          "publishedOn": "2023-02-01T07:10:30.000Z",
          "wordCount": 246,
          "title": "［AtCoder］ABC-113｜A - Discount Fare",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--F_-MVbhj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-113%25EF%25BD%259CA%2520-%2520Discount%2520Fare%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--F_-MVbhj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-113%25EF%25BD%259CA%2520-%2520Discount%2520Fare%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/28cb85811ed842",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-113 B - Palace\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    t, a = getIntMap()\n    h = getIntList()\n\n    x = []\n    for i in ra...",
          "link": "https://zenn.dev/hyperdb/articles/28cb85811ed842",
          "publishedOn": "2023-02-01T07:10:30.000Z",
          "wordCount": 455,
          "title": "［AtCoder］ABC-113｜B - Palace",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y8KnqX7P--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-113%25EF%25BD%259CB%2520-%2520Palace%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y8KnqX7P--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-113%25EF%25BD%259CB%2520-%2520Palace%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/e5a86941a9d110",
          "author": "Web Life CH",
          "description": "【１４Create Post】\nYouTube: https://youtu.be/0nXp4g-pwYs\nhttps://youtu.be/0nXp4g-pwYs\n今回は「Post」の作成用のビューを作成します。\nリクエストと一緒に送られてくるPostのデータは「request.data」に\nブラウザでログインしているユーザーのデータは\n「request.user」に格納されています。\n\nmyapp/posts/views.py\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\nfrom...",
          "link": "https://zenn.dev/web_life_ch/articles/e5a86941a9d110",
          "publishedOn": "2023-02-01T05:22:21.000Z",
          "wordCount": 737,
          "title": "【Django】Pythonで作るRest API【１４Create Post】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ylBY8unr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2594Create%2520Post%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ylBY8unr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2594Create%2520Post%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/karamawanu/articles/984be184f55a81",
          "author": "karamawanu",
          "description": "module file package ( on python )\npython3では、モジュール、パッケージ、ライブラリがそれぞれ用語として登場する。\n色々な人が色々なことを言ってるが、全体的にちょっと惜しい。\n\n モジュール\n用語集には次のように書いてある。\nhttps://docs.python.org/ja/3/glossary.html#term-module\n\nPython コードの組織単位としてはたらくオブジェクトです。モジュールは任意の Python オブジェクトを含む名前空間を持ちます。モジュールは importing の処理によって Python に読み込まれます。\n...",
          "link": "https://zenn.dev/karamawanu/articles/984be184f55a81",
          "publishedOn": "2023-02-01T00:01:47.000Z",
          "wordCount": 1147,
          "title": "module file package ( on python )",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--64Sr_QCC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:karamawanu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:module%2520file%2520package%2520%2528%2520on%2520python%2520%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--64Sr_QCC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:karamawanu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:module%2520file%2520package%2520%2528%2520on%2520python%2520%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laSzJJYTRGZWZqV2RySzJqdHFlWnBmaE5HZ3BHLWxid2NUX0NLWHF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/stevenlang/articles/0a94b0c687b7a8",
          "author": "stevenlang",
          "description": "概要\nメソッドのオーバーロードとメソッドのオーバーライドという用語は、オブジェクト指向プログラミング言語で非常に重要な 2 つの用語です。これにより、同じ名前でさまざまな種類の機能を処理できるメソッドを記述できます。 2 つ以上のメソッドの名前が同じで、パラメーターの数が異なるか、パラメーターの型が異なるか、またはその両方が異なる場合、それはメソッドのオーバーロードと呼ばれます。 同時に、サブクラスまたは子クラスが、親クラスまたはスーパークラスで既に定義されている特定の特性または提供されたデータの特定の実装プロセスをプログラムに提供できる場合、そのプロセスはメソッドのオーバーライド...",
          "link": "https://zenn.dev/stevenlang/articles/0a94b0c687b7a8",
          "publishedOn": "2023-01-31T14:01:59.000Z",
          "wordCount": 1204,
          "title": "Pythonでのメソッドオーバーロードとメソッドオーバーライドの違いは?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WTi4bP-W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:stevenlang%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A8%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AF%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RUGtKam5Zci0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmZGVjOGE4OGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WTi4bP-W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:stevenlang%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A8%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AF%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RUGtKam5Zci0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmZGVjOGE4OGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-finite-difference-method",
          "author": "derwind",
          "description": "目的\n例えば Quantum algorithm for non-homogeneous linear partial differential equations や High-precision quantum algorithms for partial differential equations のように、量子計算を活用して微分方程式を解いてみようという論文がある。ところでまったく数値解析をやったことがないこともあって、微分方程式を解くことはできても、あまり解の挙動については詳しくない。ということで、普通の数値解析、特に有限差分法で微分方程式を解いて解を可視化するということ...",
          "link": "https://zenn.dev/derwind/articles/dwd-finite-difference-method",
          "publishedOn": "2023-01-31T12:27:06.000Z",
          "wordCount": 5639,
          "title": "有限差分法で微分方程式の解を眺めてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nYgoepVQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%259C%2589%25E9%2599%2590%25E5%25B7%25AE%25E5%2588%2586%25E6%25B3%2595%25E3%2581%25A7%25E5%25BE%25AE%25E5%2588%2586%25E6%2596%25B9%25E7%25A8%258B%25E5%25BC%258F%25E3%2581%25AE%25E8%25A7%25A3%25E3%2582%2592%25E7%259C%25BA%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nYgoepVQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:derwind%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E6%259C%2589%25E9%2599%2590%25E5%25B7%25AE%25E5%2588%2586%25E6%25B3%2595%25E3%2581%25A7%25E5%25BE%25AE%25E5%2588%2586%25E6%2596%25B9%25E7%25A8%258B%25E5%25BC%258F%25E3%2581%25AE%25E8%25A7%25A3%25E3%2582%2592%25E7%259C%25BA%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PM2l6cGFYRC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ddpn08/articles/tensorrt-stable-diffusion",
          "author": "だだっこぱんだ",
          "description": "どうもだだっこぱんだです。今までずっとjs,tsとかを触ってましたが、最近はpythonかなり触ってます。\nAIなんも知らない人間ですがAIについて書いてみました。\n\n まずは結果を\n\n右は普通の生成方法。Diffusersにattention_slicingを有効にして生成した結果です。\n真ん中はxformersを有効にした場合。\n左は今から紹介するTensorRTを使用する方法です。\n\n はじめに\nこの記事では、技術関係なんも知らない！っという方向けのColabで試すだけの方法。\nある程度知識がある方向けのWindowsやLinuxで実際に動かす方法の二つを紹介します。\nそれいじょう...",
          "link": "https://zenn.dev/ddpn08/articles/tensorrt-stable-diffusion",
          "publishedOn": "2023-01-31T11:20:20.000Z",
          "wordCount": 738,
          "title": "TensorRTを使ってStableDiffusionを爆速にする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pKl93A_G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2593%25E3%2581%25B1%25E3%2582%2593%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TensorRT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6StableDiffusion%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHRTBySGZ6M3dVbjZqVndpRG1iVUxTVFluSTNLSFl4VmFjdXJzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pKl93A_G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2593%25E3%2581%25B1%25E3%2582%2593%25E3%2581%25A0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TensorRT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6StableDiffusion%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHRTBySGZ6M3dVbjZqVndpRG1iVUxTVFluSTNLSFl4VmFjdXJzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/syoyo/articles/7d22bc8c9ee9d7",
          "author": "syoyo",
          "description": "python-language-server 入れたがタイトルのエラーが出て動かずつらい..\n\n 原因\n古い jedi が入っているときに python-language-server で新しい jedi がインストールされるときに生じます.\nhttps://github.com/davidhalter/jedi/issues/1625\nファイル構成が変わったが,  pip install -U で upgrade install でも common の古いほうのファイル(フォルダ)が残っているため, 削除されずにおかしくなっています.\n\n 解決方法\n一度 jedi アップデートしてしま...",
          "link": "https://zenn.dev/syoyo/articles/7d22bc8c9ee9d7",
          "publishedOn": "2023-01-31T09:36:29.000Z",
          "wordCount": 224,
          "title": "Python jedi で ImportError: cannot import name 'traverse_parents' の解決",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uHg5awFF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:syoyo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Python%2520jedi%2520%25E3%2581%25A7%2520ImportError%253A%2520cannot%2520import%2520name%2520%2527traverse_parents%2527%2520%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jVGdteFFOSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uHg5awFF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:syoyo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Python%2520jedi%2520%25E3%2581%25A7%2520ImportError%253A%2520cannot%2520import%2520name%2520%2527traverse_parents%2527%2520%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jVGdteFFOSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kayanalyse/articles/47aa81ec314970",
          "author": "kayanalyse",
          "description": "はじめに\n画像処理について自分なりに学習したことのまとめです。\n画像についての情報は色々散らばっていて集め難いので基本的な画像処理の流れを一連の記事にまとめることを目標に作成します。\n筆者はPythonを用いて学習しています。\n\n 1.画像データとは\n画像処理の前提知識としてまず画像データがどういったデータであるかという内容を記します。\n画像データとは端的に換言すると\"それぞれが独自に色情報を持った同一サイズの点を縦横に並べた配列\"です。色情報についてはいくつか表記方法が存在するのでこの後に記載。\n一例として色情報が明るさのみ(最も暗いと黒、最も明るいと白)の1チャンネルで表されるグ...",
          "link": "https://zenn.dev/kayanalyse/articles/47aa81ec314970",
          "publishedOn": "2023-01-31T09:13:51.000Z",
          "wordCount": 212,
          "title": "画像処理前提知識(画像データとは何かについて)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ApZiRhTS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kayanalyse%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E5%2589%258D%25E6%258F%2590%25E7%259F%25A5%25E8%25AD%2598%2528%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%258B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xZHIxOG05ci0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0YzRiNjQ4MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ApZiRhTS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kayanalyse%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E5%2589%258D%25E6%258F%2590%25E7%259F%25A5%25E8%25AD%2598%2528%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%258B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1xZHIxOG05ci0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0YzRiNjQ4MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/ddc67c223876a1",
          "author": "たきろぐ",
          "description": "TL; DR\n\n\nシェープファイルから海岸線っぽいところを取ってきて距離を計算してみました\n\n\n 関連記事\nこれまでのシェープファイル関係のブログです。\nhttps://zenn.dev/takilog/articles/0d355bbb80f79848da8d\nhttps://zenn.dev/takilog/articles/e31570b1b29114\n\n やったこと\nやったことの一覧です。\n\n全国のポリゴンから海岸線っぽいものを取得する\nfor文を回してポリゴンに入っている地点を計算し、距離計算を行う候補とする\nHaversine formula を用いて各地点から最寄りの海...",
          "link": "https://zenn.dev/takilog/articles/ddc67c223876a1",
          "publishedOn": "2023-01-31T08:55:11.000Z",
          "wordCount": 306,
          "title": "シェープファイルを使って海より宇宙の方が近い場所を探す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GhYsKE6j--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%2597%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25B5%25B7%25E3%2582%2588%25E3%2582%258A%25E5%25AE%2587%25E5%25AE%2599%25E3%2581%25AE%25E6%2596%25B9%25E3%2581%258C%25E8%25BF%2591%25E3%2581%2584%25E5%25A0%25B4%25E6%2589%2580%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GhYsKE6j--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%2597%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25B5%25B7%25E3%2582%2588%25E3%2582%258A%25E5%25AE%2587%25E5%25AE%2599%25E3%2581%25AE%25E6%2596%25B9%25E3%2581%258C%25E8%25BF%2591%25E3%2581%2584%25E5%25A0%25B4%25E6%2589%2580%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sion_pn/articles/4418eeda7c62d0",
          "author": "SiON",
          "description": "複数のプロジェクトでPython開発を行う際、プロジェクト毎にPythonのバージョンや依存パッケージなどを使いわける必要があるかと思います。\n本記事ではWindowsで、pyenvとvenvを用いて作成した仮想環境にpipでパッケージをインストールし、Visual Studio Codeで扱うための設定手順について紹介します。\nMacで同じことをやりたい場合はこちら\nhttps://zenn.dev/sion_pn/articles/d0f9e45716cabb\n\n 環境構築\n\n pyenv-winをインストール\nPythonのバージョン管理ツールであるpyenvのWindows版を、...",
          "link": "https://zenn.dev/sion_pn/articles/4418eeda7c62d0",
          "publishedOn": "2023-01-31T06:16:12.000Z",
          "wordCount": 508,
          "title": "WindowsでVSCode+pyenv+venv+pipを使い、Pythonの開発環境を構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SgK8bsNf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiON%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Windows%25E3%2581%25A7VSCode%252Bpyenv%252Bvenv%252Bpip%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2580%2581Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SgK8bsNf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiON%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Windows%25E3%2581%25A7VSCode%252Bpyenv%252Bvenv%252Bpip%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2580%2581Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/b05b15f39a77ab",
          "author": "Web Life CH",
          "description": "【１３API View】\nYouTube: https://youtu.be/wCqCzR7Md7s\nhttps://youtu.be/wCqCzR7Md7s\n今回は「API View」を使用して、\n「Post」のビューを作成していくのですが、\nhttps://www.django-rest-framework.org/api-guide/views/\n「API View」にはクラスベースビューに継承して作成する方法と、\nファンクションベースビューにデコレーターを設定して作成する方法があります。\n今回は、ファンクションベースビューにデコレーターを設定して作成する方法で\n実装を行います...",
          "link": "https://zenn.dev/web_life_ch/articles/b05b15f39a77ab",
          "publishedOn": "2023-01-31T05:16:37.000Z",
          "wordCount": 592,
          "title": "【Django】Pythonで作るRest API【１３API View】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--t8uJPJZE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2593API%2520View%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--t8uJPJZE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2593API%2520View%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gon_kojiri/articles/ccf84d67f77fe9",
          "author": "GON",
          "description": "ChatGPTが良すぎる\n最近Twitterやらニュース記事やら、ChatGPTの話題を目にしない日はない。\nちょっと興味があり今回VSCode用プラグインがリリースされたということで使わせて頂きました。\n\n 感想\n神\n\n とりあえず\n色々試したいことはあるが、一旦落ち着いてその辺（デスクトップ）にあ\nるコードをレビューしてもらうことにした。\n（ChatGPTの開始方法についてはこちらを参照）\n通称「神の力」と呼ばれる機能（範囲選択 -> 右クリック）を使用し、コードレビューを依頼してみた\nChatGPT：Find bugsを選択\n\nけちょんけちょんにされました。。。\n他にもア...",
          "link": "https://zenn.dev/gon_kojiri/articles/ccf84d67f77fe9",
          "publishedOn": "2023-01-31T04:59:35.000Z",
          "wordCount": 99,
          "title": "ChatGPTにコードレビューしてもらったらサンドバッグにされた件",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SBfYdd7G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:GON%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ChatGPT%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jYW4wdlVFaS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0NGRiMzljMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SBfYdd7G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:GON%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ChatGPT%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1jYW4wdlVFaS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0NGRiMzljMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ddd6b727116385",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-112 B - Time Limit Exceeded\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n, t = getIntMap()\n    l = getIntListRow(n)\n\n    r = []\n    for a, b in l:\n        if b...",
          "link": "https://zenn.dev/hyperdb/articles/ddd6b727116385",
          "publishedOn": "2023-01-31T04:02:09.000Z",
          "wordCount": 428,
          "title": "［AtCoder］ABC-112｜B - Time Limit Exceeded",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pVLtwkbP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-112%25EF%25BD%259CB%2520-%2520Time%2520Limit%2520Exceeded%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pVLtwkbP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-112%25EF%25BD%259CB%2520-%2520Time%2520Limit%2520Exceeded%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a47e3852ce5b96",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-112 A - Programming Education\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntRow(N):\n    return [int(input()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n\n    print('Hello World' if n == 1 else sum(getIntRow(n)))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/a47e3852ce5b96",
          "publishedOn": "2023-01-31T04:02:09.000Z",
          "wordCount": 303,
          "title": "［AtCoder］ABC-112｜A - Programming Education",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kdBj2XKt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-112%25EF%25BD%259CA%2520-%2520Programming%2520Education%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kdBj2XKt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-112%25EF%25BD%259CA%2520-%2520Programming%2520Education%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryutaro_h/articles/8edfb37e043eab",
          "author": "Ryutaro",
          "description": "初めに\nコード設計について「良いコード/悪いコードで学ぶ設計入門 ―保守しやすい 成長し続けるコードの書き方」を手に取り、学んでいます。本記事はこちらを参考に書いています。\n今回はクラス設計について取り上げます。\n!\n書籍のコードはJavaで書かれていますが、本記事のコードは私がPythonに書き換えたものです。より良い書き方がありましたらご指摘いただけると泣いて喜びます\n\n\n\n\n 本題\n\n あるべきクラス設計の基本\nクラス設計をする際の大前提として、「クラス単体で動作するよう設計する」 ということが挙げられます。\n単体で動作させるために、クラスを構成する要素としては以下の二つになり...",
          "link": "https://zenn.dev/ryutaro_h/articles/8edfb37e043eab",
          "publishedOn": "2023-01-31T00:13:54.000Z",
          "wordCount": 801,
          "title": "クラス設計基本の基",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AWwPx5ET--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryutaro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E8%25A8%25AD%25E8%25A8%2588%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E5%259F%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RTGdza19qdi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AWwPx5ET--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryutaro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E8%25A8%25AD%25E8%25A8%2588%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E5%259F%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RTGdza19qdi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/b8f25b8869c0d0",
          "author": "nakamura196",
          "description": "概要\nIIIF Image API level 0は、事前に作成した静的なタイル画像を用いて画像配信を行います。これにより、GitHub PagesやAmazon S3といった静的ファイルのホスティングサービスのみでの画像公開が可能となります。一方、任意の範囲の画像切り出しができないといった欠点も挙げられます。\n本記事は、IIIF Image API level 0を用いた画像公開の一例について紹介します。\n\n ツール\n以下のノートブックでお試しいただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/b...",
          "link": "https://zenn.dev/nakamura196/articles/b8f25b8869c0d0",
          "publishedOn": "2023-01-30T12:18:14.000Z",
          "wordCount": 172,
          "title": "IIIF Image API level 0による画像公開方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3n53XbxJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:IIIF%2520Image%2520API%2520level%25200%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E5%2585%25AC%25E9%2596%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3n53XbxJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:IIIF%2520Image%2520API%2520level%25200%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E5%2585%25AC%25E9%2596%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/de3e1a50328995",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-111 B - AtCoder Beginner Contest 111\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef ns(n):\n    return n * 100 + n * 10 + n\n\n\ndef main():\n    n = getInt()\n\n    a = 0\n    for i in range(9):\n        m = ns(9 - i)\n        if n <= m:\n            a = m\n            continue\n      ...",
          "link": "https://zenn.dev/hyperdb/articles/de3e1a50328995",
          "publishedOn": "2023-01-30T07:02:11.000Z",
          "wordCount": 361,
          "title": "［AtCoder］ABC-111｜B - AtCoder Beginner Contest 111",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Wk15JYRA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-111%25EF%25BD%259CB%2520-%2520AtCoder%2520Beginner%2520Contest%2520111%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Wk15JYRA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-111%25EF%25BD%259CB%2520-%2520AtCoder%2520Beginner%2520Contest%2520111%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/60c3ac8a4aa47a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-111 A - AtCoder Beginner Contest 999\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    n = list(getString())\n\n    s = ''\n    for c in n:\n        s += '1' if c == '9' else '9'\n    print(s)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/60c3ac8a4aa47a",
          "publishedOn": "2023-01-30T07:02:11.000Z",
          "wordCount": 282,
          "title": "［AtCoder］ABC-111｜A - AtCoder Beginner Contest 999",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--78EW6Fyb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-111%25EF%25BD%259CA%2520-%2520AtCoder%2520Beginner%2520Contest%2520999%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--78EW6Fyb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-111%25EF%25BD%259CA%2520-%2520AtCoder%2520Beginner%2520Contest%2520999%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kawamottyan/articles/1bc294d8f33f09",
          "author": "kawamottyan",
          "description": "あらまし\n機械学習エンジニアに未経験から転職した。研修期間に学んだことを書きます。\n📌 文系にもわかりやすいように、わかりやすく書く。\n\n 🔗Outline\n1.データを分類する\n2.データの特徴を調べる\n\n 📘Instructions\n\n データを分類する\nデータにはその特徴別に種類があります。それらを識別することで、その特徴にあった記述や推測が可能になります。\n\nカテゴリー型（質的変数 or Categorical Variables）\n数値型（量的変数 or Numeric Variables）\n\n離散型（Discrete Variables）\n連続型（Continuous V...",
          "link": "https://zenn.dev/kawamottyan/articles/1bc294d8f33f09",
          "publishedOn": "2023-01-30T06:17:54.000Z",
          "wordCount": 2358,
          "title": "記述統計学",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FH0yCf93--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawamottyan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E8%25A8%2598%25E8%25BF%25B0%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1AycFE5VW9INnQ1N09DNDBTSjV1Wms5Nzg4RUV6SWM4RDNpWkc4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FH0yCf93--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawamottyan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E8%25A8%2598%25E8%25BF%25B0%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1AycFE5VW9INnQ1N09DNDBTSjV1Wms5Nzg4RUV6SWM4RDNpWkc4dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/182179ea91d56e",
          "author": "Web Life CH",
          "description": "【１２ViewSets 2】\nYouTube: https://youtu.be/1up4WF4xMr0\nhttps://youtu.be/1up4WF4xMr0\n今回は前回作成したビューの確認をブラウザを使用して行います。\nまずはこちらにアクセスして、\n「Post」の一覧ページを表示します。\nhttp://localhost:8000/posts/posts/\nそして、下の入力フォームから新しく「Post」のデータを作成します。\nこのURLで実行できるのは「GET, POST, HEAD, OPTIONS」のリクエストとなります。\n右上の「GET」のボタンをクリックすると再度「Po...",
          "link": "https://zenn.dev/web_life_ch/articles/182179ea91d56e",
          "publishedOn": "2023-01-30T04:01:06.000Z",
          "wordCount": 168,
          "title": "【Django】Pythonで作るRest API【１２ViewSets 2】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PUQmcePy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2592ViewSets%25202%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PUQmcePy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2592ViewSets%25202%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sosa/books/ce3eb17bc0dbf6",
          "author": "sosa",
          "description": "目的\n- PyTorchチュートリアルのクイックスタートのサンプルを変える。\n- 今回作った学習済みのモデルをStreamlitで作ったWEBアプリに入れ公開してみる。\n\nPyTorchは、Pythonで書かれたオープンソースの機械学習ライブラリです。ニューラルネットワークを実装するためのAPIを提供し、ニューラルネットワークを簡単に実装できるように設計されてます。そのPyTorchチュートリアルにクイックスタートのサンプルhttps://yutaroogawa.github.io/pytorch_tutorials_jp/があります。このサンプルプログラムは画像の分類プログラムです。これを機械学習のプログラムでよく利用される「あやめ」の種類分類に変更する方法です。プログラムの変更はクイックスタートに対応させていきますのでクイックスタートがより分かりやすくなると思います。\nクイックスタートと同じGoogle　Colaboratoryを使います。\n最終的にはGoogle　Colaboratoryで学習して完成したモデルを実用化としてScreamlitで運用してみます。そうすることでより全体像がつかめるのではないかと思います。\n完成品https://miyamiko-pytorch-ayame-ayame-pytorch-6t9av1.streamlit.app/",
          "link": "https://zenn.dev/sosa/books/ce3eb17bc0dbf6",
          "publishedOn": "2023-01-30T03:52:06.000Z",
          "wordCount": 91,
          "title": "【ディープラーニング入門】PyTorchのクイックスタートを「あやめ」でやる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--prgeWEv1--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lOTQ2OWFiZTIzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--prgeWEv1--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lOTQ2OWFiZTIzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/dokokade/articles/24d4531fc61288",
          "author": "Dokokade",
          "description": "全然わかってないですが、\nどうも機械学習は反転させたり...ほか何かしたりして素材を水増しするらしいです。これはいい情報です。どうやって数万枚も集めるんだよって思っていました。とはいえそこらも組み込まれたりするらしいですけど。でもとりあえず反転してみようと思いました。\n\n Googleドライブをマウントする\npip install Pillow\nimport os #ファイルやフォルダ操作\nfrom PIL import Image #PillowからImageをインポート\nimport cv2\nimport glob\nfrom google.colab import drive #...",
          "link": "https://zenn.dev/dokokade/articles/24d4531fc61288",
          "publishedOn": "2023-01-30T03:30:17.000Z",
          "wordCount": 531,
          "title": "ColabとGoogleドライブで画像を水増しするよ😇",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--omhmtWSx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Dokokade%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Colab%25E3%2581%25A8Google%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%25B0%25B4%25E5%25A2%2597%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fUzhjMC1GLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmOTJkNWI2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--omhmtWSx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Dokokade%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Colab%25E3%2581%25A8Google%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%25B0%25B4%25E5%25A2%2597%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fUzhjMC1GLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmOTJkNWI2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dokokade/articles/6ee7ee993645ea",
          "author": "Dokokade",
          "description": "学習データを整形したい\n機械学習用に集めたデータのサイズを合わせたり、顔認証で顔中心に切り抜いたりする際に、最初の関門はデータセットの作り方です。なかなか公開されているデータセットはコンプラに重点を置いており「すげーなー」ってなるけど、これを何に使うのか？となりがちです。で、初歩の初歩として、素材を整える必要があります。それがGoogleドライブの画像を整形して保存することになります。\n\n ColabでGoogleドライブをマウントして\n先人たちを参考にColabで以下を記述してポチポチしていきます。\npip install Pillow\nimport os #ファイルやフォルダ操作...",
          "link": "https://zenn.dev/dokokade/articles/6ee7ee993645ea",
          "publishedOn": "2023-01-30T03:17:19.000Z",
          "wordCount": 481,
          "title": "ColabとGoogleドライブで画像をリサイズするよ😇",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b_Qi6mfe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Dokokade%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Colab%25E3%2581%25A8Google%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fUzhjMC1GLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmOTJkNWI2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b_Qi6mfe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Dokokade%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Colab%25E3%2581%25A8Google%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fUzhjMC1GLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmOTJkNWI2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/peperoncicicino/articles/83273b0c78fd64",
          "author": "Doarakko",
          "description": "JCLdicとは\nTIS株式会社が公開した企業名の辞書で、国税庁に登録されている法人情報を元に生成されています。\n「TIS」「ティアイエス」「テイアイエス」などの表記揺れを考慮して認識できるようです。\n\n参照：TIS、自然言語処理で企業名認識を行うための辞書「JCLdic」を無償公開\nCSVとMeCabの辞書形式それぞれで以下3つの辞書が公開されています。\n\nJCL-slim\n\nふりがななし\n余分な英語なし\nデジタル名なし\n2文字以上30文字以下の社名\n\n\nJCL-medium\n\nデジタル名なし\n2文字以上30文字以下の社名\n\n\nJCL-full\n\nこちらが各辞書ごとのユニークな企業...",
          "link": "https://zenn.dev/peperoncicicino/articles/83273b0c78fd64",
          "publishedOn": "2023-01-30T02:30:01.000Z",
          "wordCount": 1396,
          "title": "企業名の辞書「JCLdic」を使ってテキストから企業名を抽出する API を作りました with Docker",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jk9o-Eq5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Doarakko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E4%25BC%2581%25E6%25A5%25AD%25E5%2590%258D%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E3%2580%258CJCLdic%25E3%2580%258D%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E4%25BC%2581%25E6%25A5%25AD%25E5%2590%258D%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%2520API%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520with%2520Docker%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZWGR3Wk1ITC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2YzBiMDRkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jk9o-Eq5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Doarakko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E4%25BC%2581%25E6%25A5%25AD%25E5%2590%258D%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E3%2580%258CJCLdic%25E3%2580%258D%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E4%25BC%2581%25E6%25A5%25AD%25E5%2590%258D%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%2520API%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520with%2520Docker%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZWGR3Wk1ITC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2YzBiMDRkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ainellc/articles/4b04fadecbefa0",
          "author": "Aine LLC.",
          "description": "pipでインストールしたものを全て消す。確認も省略しているので要注意。\npip freeze > freeze.txt; pip uninstall -y -r freeze.txt; rm freeze.txt",
          "link": "https://zenn.dev/ainellc/articles/4b04fadecbefa0",
          "publishedOn": "2023-01-30T01:45:23.000Z",
          "wordCount": 114,
          "title": "pip uninstall all",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YN6ZVTmB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Aine%2520LLC.%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:pip%2520uninstall%2520all%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0ydUZqTjNzXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkOTJiOWM2MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YN6ZVTmB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Aine%2520LLC.%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:pip%2520uninstall%2520all%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0ydUZqTjNzXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkOTJiOWM2MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokoroteen/articles/f2859a2c2a2766",
          "author": "Tokoroteen",
          "description": "いや、嘘です。嬉しいです。\nAIであっても褒められたいですよね？\nこの記事は「日々こんなに辛い思いをしているのになんで誰も褒めてくれなんだ💢」と、褒めが足りなくて困っている方々向けのソリューションです。\n完成品はこんな感じです↓\n\n\n 1. 概要\n友人に何か作って欲しいものはないかと聞いたら、ただただ無条件に褒めてくれるサービスが欲しいと言っていたので「それだっ！」と思い作ってみることにしました。\n他の友人も一人暮らしで寂しいから、「さっさとお風呂入りなよー」とか言ってくれるヴァーチャルオカンが欲しいと言っていたので、寂しさを埋めてくれるようなサービスの需要は結構あるのかもしれません。\n...",
          "link": "https://zenn.dev/tokoroteen/articles/f2859a2c2a2766",
          "publishedOn": "2023-01-30T00:00:01.000Z",
          "wordCount": 9603,
          "title": "べ、べつにAIに褒められたって嬉しくないんだからね///（褒めてくれるLINE Botをつくる）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--p6T_AU1W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2581%25B9%25E3%2580%2581%25E3%2581%25B9%25E3%2581%25A4%25E3%2581%25ABAI%25E3%2581%25AB%25E8%25A4%2592%25E3%2582%2581%25E3%2582%2589%25E3%2582%258C%25E3%2581%259F%25E3%2581%25A3%25E3%2581%25A6%25E5%25AC%2589%25E3%2581%2597%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2593%25E3%2581%25A0%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AD%252F%252F%252F%25EF%25BC%2588%25E8%25A4%2592%25E3%2582%2581%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BLINE%2520Bot%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--p6T_AU1W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tokoroteen%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2581%25B9%25E3%2580%2581%25E3%2581%25B9%25E3%2581%25A4%25E3%2581%25ABAI%25E3%2581%25AB%25E8%25A4%2592%25E3%2582%2581%25E3%2582%2589%25E3%2582%258C%25E3%2581%259F%25E3%2581%25A3%25E3%2581%25A6%25E5%25AC%2589%25E3%2581%2597%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2593%25E3%2581%25A0%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AD%252F%252F%252F%25EF%25BC%2588%25E8%25A4%2592%25E3%2582%2581%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BLINE%2520Bot%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS1pkSGdFYS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NzNmMDYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sion_pn/articles/d0f9e45716cabb",
          "author": "SiON",
          "description": "複数のプロジェクトでPython開発を行う際、プロジェクト毎にPythonのバージョンや依存パッケージなどを使いわける必要があるかと思います。\n本記事では、pyenvとvenvを用いて作成した仮想環境にpipでパッケージをインストールし、Visual Studio Codeで扱うための設定手順について紹介します。\n\n 環境構築\n\n Homebrewをインストール\nまずは、関連するパッケージをインストールする環境を整えるため、Homebrewをインストールします。\nhttps://brew.sh/index_ja\n上記ページに記載がある、インストール用のコマンドを実行します。\n\nzsh\n/...",
          "link": "https://zenn.dev/sion_pn/articles/d0f9e45716cabb",
          "publishedOn": "2023-01-29T14:17:37.000Z",
          "wordCount": 572,
          "title": "MacでVSCode+pyenv+venv+pipを使い、Pythonの開発環境を構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J1OgGKGq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiON%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Mac%25E3%2581%25A7VSCode%252Bpyenv%252Bvenv%252Bpip%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2580%2581Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J1OgGKGq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SiON%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Mac%25E3%2581%25A7VSCode%252Bpyenv%252Bvenv%252Bpip%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2580%2581Python%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXBpNXV1TDJvZUNVYlBqU2FPTUtYb0wwQzNFbXByeEZ0OGxIVnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tmori/articles/2fc3cd14d27582",
          "author": "tmori",
          "description": "https://atcoder.jp/contests/abc287\n\n A - Majority\nそれぞれの文字のカウントする。Forが大きかったらYes。\n\n 解法\nn = int(input())\ns_list = [input() for i in range(n)]  # 文字列S\n\nfor_count = 0\nagainst_count = 0\nfor i in s_list:\n    if i == \"For\":\n        for_count += 1\n    else:\n        against_count += 1\n\nif for_count >= a...",
          "link": "https://zenn.dev/tmori/articles/2fc3cd14d27582",
          "publishedOn": "2023-01-29T12:38:03.000Z",
          "wordCount": 1590,
          "title": "【ABC287】AtCoder Beginner Contest 287 A-D 振り返り【python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NnlyK673--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tmori%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590ABC287%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520287%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IT2VrME9VRS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NnlyK673--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tmori%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590ABC287%25E3%2580%2591AtCoder%2520Beginner%2520Contest%2520287%2520A-D%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%25E3%2580%2590python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IT2VrME9VRS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWQwYjU2OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/da_o_k/articles/36a8bbf636b796",
          "author": "da_o_k_",
          "description": "時系列分析\n時系列データは\n\nトレンド\n季節成分\n不規則成分\n\nの3要素が合成している、と考えるのが一般的です。\n合成の仕方は2通りが考えられ\n\n加法モデル\n乗法モデル\n\nです。\n\n モデルの定式化\nトレンドをT(t)、規則成分をS(t)、不規則（Irregular）成分をI(t)として、元データO(t)を表すことを考えてみます。\n加法モデルであれば、そりゃ\n\n\\begin{align*}\nO(t) = T(t) + S(t) + I(t)\n\\end{align*}\n\nとなりますね。乗法モデルであればもちろん\n\n\\begin{align*}\nO(t) = T(t) \\times S(...",
          "link": "https://zenn.dev/da_o_k/articles/36a8bbf636b796",
          "publishedOn": "2023-01-29T09:46:11.000Z",
          "wordCount": 1040,
          "title": "Pythonを使って時系列分析を丁寧に Part.1（時系列分析のモデル、周期成分、自己相関）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--I8Hi6tcy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:da_o_k_%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%2520Part.1%25EF%25BC%2588%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2580%2581%25E5%2591%25A8%25E6%259C%259F%25E6%2588%2590%25E5%2588%2586%25E3%2580%2581%25E8%2587%25AA%25E5%25B7%25B1%25E7%259B%25B8%25E9%2596%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1WUEltd3c2Si0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YjE3ZjQ2MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--I8Hi6tcy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:da_o_k_%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%2520Part.1%25EF%25BC%2588%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2580%2581%25E5%2591%25A8%25E6%259C%259F%25E6%2588%2590%25E5%2588%2586%25E3%2580%2581%25E8%2587%25AA%25E5%25B7%25B1%25E7%259B%25B8%25E9%2596%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1WUEltd3c2Si0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YjE3ZjQ2MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/goriratatsu/articles/08e9343ed1999a",
          "author": "Gorira-Tatsu",
          "description": "PythonでFlaskを触っていると、データベースを使いたくなることがあります。アクセスするためのドライバーには下記のようなものがありますが、今回最も基本的なmysql-connector-pythonを使うことにします。\n\nmysql-connector-python\nPyMySQL\n\n\n mysql-connector-pythonとはなにか？\nmysql-connector-pythonは、Oracle社などが提供しているドライバーで、PEP 249 – Python Database API Specification v2.0に準拠しています[1]。PEPは、PEP8 – S...",
          "link": "https://zenn.dev/goriratatsu/articles/08e9343ed1999a",
          "publishedOn": "2023-01-29T08:08:38.000Z",
          "wordCount": 933,
          "title": "PythonからMySQLにアクセスしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RSz7TBKZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Gorira-Tatsu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%258B%25E3%2582%2589MySQL%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1LdUhTVTZtVC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwZTE0ZTYxNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RSz7TBKZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Gorira-Tatsu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%258B%25E3%2582%2589MySQL%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1LdUhTVTZtVC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwZTE0ZTYxNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/33bc877e52209a",
          "author": "Web Life CH",
          "description": "【１１ViewSets】\nYouTube: https://youtu.be/mEcvCwJLC4g\nhttps://youtu.be/mEcvCwJLC4g\n今回は「ViewSets」を使用して、\n「Post」モデルのビューを作成します。\nhttps://www.django-rest-framework.org/api-guide/viewsets/\nrest_frameworkのビューはいくつか種類があるのですが、\nすべての機能を持っているのが「ViewSets」で\nそこから少しづつ機能を削っていって\n最終的にAPIとして必要最低限の機能を持ったものが\n「APIView」となり...",
          "link": "https://zenn.dev/web_life_ch/articles/33bc877e52209a",
          "publishedOn": "2023-01-29T05:28:46.000Z",
          "wordCount": 533,
          "title": "【Django】Pythonで作るRest API【１１ViewSets】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bgs1qM8c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2591ViewSets%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bgs1qM8c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2591ViewSets%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f8bedc9dc5a27f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-110 A - Maximize the Formula\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getIntList()\n\n    n.sort()\n    n[2] = n[2] * 10\n\n    print(sum(n))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f8bedc9dc5a27f",
          "publishedOn": "2023-01-29T04:08:38.000Z",
          "wordCount": 281,
          "title": "［AtCoder］ABC-110｜A - Maximize the Formula",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9JaKVLkk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-110%25EF%25BD%259CA%2520-%2520Maximize%2520the%2520Formula%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9JaKVLkk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-110%25EF%25BD%259CA%2520-%2520Maximize%2520the%2520Formula%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/716dab3eafb957",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-109 A - ABC333\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print('Yes' if (a * b) % 2 == 1 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/716dab3eafb957",
          "publishedOn": "2023-01-29T04:08:37.000Z",
          "wordCount": 269,
          "title": "［AtCoder］ABC-109｜A - ABC333",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--26_WIXWf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-109%25EF%25BD%259CA%2520-%2520ABC333%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--26_WIXWf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-109%25EF%25BD%259CA%2520-%2520ABC333%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/43a563e0463796",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-110 B - 1 Dimensional World's Tale\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m, x, y = getIntMap()\n    X = max(getIntList())\n    Y = min(getIntList())\n\n    r = False\n    for z in...",
          "link": "https://zenn.dev/hyperdb/articles/43a563e0463796",
          "publishedOn": "2023-01-29T04:08:37.000Z",
          "wordCount": 443,
          "title": "［AtCoder］ABC-110｜B - 1 Dimensional World's Tale",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dnMNHQRb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-110%25EF%25BD%259CB%2520-%25201%2520Dimensional%2520World%2527s%2520Tale%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dnMNHQRb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-110%25EF%25BD%259CB%2520-%25201%2520Dimensional%2520World%2527s%2520Tale%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/31ae70c4329076",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-109 B - Shiritori\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    w = getStringRow(n)\n\n    r = True\n    if len(w) != len(set(w)):\n        r = False\n    else:\n        for i in range(1, n):...",
          "link": "https://zenn.dev/hyperdb/articles/31ae70c4329076",
          "publishedOn": "2023-01-29T04:08:37.000Z",
          "wordCount": 424,
          "title": "［AtCoder］ABC-109｜B - Shiritori",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xaMxQQgY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-109%25EF%25BD%259CB%2520-%2520Shiritori%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xaMxQQgY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-109%25EF%25BD%259CB%2520-%2520Shiritori%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/f92fde515b2b60",
          "author": "Matsuzaki",
          "description": "s3とeventbridgeって同じじゃね？どっちがいいんだ？\n結局どちらもイベントの重複は発生するみたい・・・\nhttps://dev.classmethod.jp/articles/s3-event-notification-vs-eventbridge-event-processing-overflow-rate-2/\n\n そのほかでやったこと\n案件の調査系と軽い修正しかやっていないので特に技術的なことはなし",
          "link": "https://zenn.dev/zi_matsu/articles/f92fde515b2b60",
          "publishedOn": "2023-01-29T00:35:56.000Z",
          "wordCount": 85,
          "title": "1/22~1/27で技術的にやったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TAIL7OZ8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Matsuzaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:1%252F22%7E1%252F27%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16ZW9oU3UweC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TAIL7OZ8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Matsuzaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:1%252F22%7E1%252F27%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16ZW9oU3UweC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/maguro_alterna/articles/65848d6f96ed30",
          "author": "マグロ",
          "description": "挨拶\nこんにちは。マグロです。\n前回の続きとなります。\nhttps://zenn.dev/maguro_alterna/articles/f5a52f1cb8b1e7\n今回はLINEからDiscordへテキストメッセージを送れるようにします。\n\n 設計\nLINEBotはメッセージを受け取った場合、Developerサイトで設定したWebHookに内容が送信されます。\nそのためFastAPIでサーバーを立ち上げ、WebHookを設定します。\nしかしここで一つ問題があります。\nそこからどうやってDiscordに送る？？\nDiscord.pyやPycordを使って送ればいいと思いますが、...",
          "link": "https://zenn.dev/maguro_alterna/articles/65848d6f96ed30",
          "publishedOn": "2023-01-28T23:43:59.000Z",
          "wordCount": 9839,
          "title": "DiscordとLINEをPython+FastAPI+Dockerで連携させる【その2】LINEからDiscordへテキストメッセージ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3ViFwet3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%259E%25E3%2582%25B0%25E3%2583%25AD%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Discord%25E3%2581%25A8LINE%25E3%2582%2592Python%252BFastAPI%252BDocker%25E3%2581%25A7%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2580%2590%25E3%2581%259D%25E3%2581%25AE2%25E3%2580%2591LINE%25E3%2581%258B%25E3%2582%2589Discord%25E3%2581%25B8%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zVU5vLVltay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmYzliOWM1MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3ViFwet3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%259E%25E3%2582%25B0%25E3%2583%25AD%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Discord%25E3%2581%25A8LINE%25E3%2582%2592Python%252BFastAPI%252BDocker%25E3%2581%25A7%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2580%2590%25E3%2581%259D%25E3%2581%25AE2%25E3%2580%2591LINE%25E3%2581%258B%25E3%2582%2589Discord%25E3%2581%25B8%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zVU5vLVltay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmYzliOWM1MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mebiusbox/articles/99c21aed33b344",
          "author": "mebiusbox",
          "description": "Zulip はオープンソースのチャットツールです．\nhttps://zulip.com/\nZulipはSlackライクですが、 チャネル に相当する ストリーム の他に、Zulipには トピック があります．トピックがあるとディスカッションが明確になり、結論に辿りやすくなると思っています．Redditや2ちゃんねるのようにカテゴリ＋スレッドがストリーム＋トピックのようになっています．例えば、Rustの日本語コミュニティではZulipを使っていますが、閲覧するだけなら掲示板のように見ることができます．\nhttps://rust-lang-jp.zulipchat.com/\n今回はZulip...",
          "link": "https://zenn.dev/mebiusbox/articles/99c21aed33b344",
          "publishedOn": "2023-01-28T16:43:59.000Z",
          "wordCount": 3980,
          "title": "Zulipでデイリーログ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BPT9Bj2w--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mebiusbox%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Zulip%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS29IbHl1YS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzZjRiZTVmOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BPT9Bj2w--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mebiusbox%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Zulip%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1VS29IbHl1YS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzZjRiZTVmOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nishimoto/articles/dae925f50dde2a",
          "author": "nishimoto",
          "description": "サマリー\nLightGBMのcallbacksを使えWarningに対応した。\n今回はearly_stopping_roundsとverboseのみ。\n結論として、lgbの学習中に以下のoptionを与えてあげればOK\ncallbacks=[\n    lgb.early_stopping(stopping_rounds=50, verbose=True),\n    lgb.log_evaluation(100),\n],\n公式Docsは以下\nhttps://lightgbm.readthedocs.io/en/latest/pythonapi/lightgbm.early_stoppi...",
          "link": "https://zenn.dev/nishimoto/articles/dae925f50dde2a",
          "publishedOn": "2023-01-28T10:01:07.000Z",
          "wordCount": 1037,
          "title": "LightGBMのcallbacksを使う（early_stopping_roundsとverbose）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WTXrNlJE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nishimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:LightGBM%25E3%2581%25AEcallbacks%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25EF%25BC%2588early_stopping_rounds%25E3%2581%25A8verbose%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1wMVNrSThYMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WTXrNlJE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nishimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:LightGBM%25E3%2581%25AEcallbacks%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25EF%25BC%2588early_stopping_rounds%25E3%2581%25A8verbose%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1wMVNrSThYMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZWNmNDMwYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/pienthon/articles/e8390314595187",
          "author": "にゃーん(Pienthon)",
          "description": "1. 10進数に変換する計算を紙に書く\ni(for文で使うi)と式の対応は具体例を考えながら書きます。\n\n\n 完成\nN = input()\n\nAnswer = 0\nlen = int(len(N))\nfor i in range(len):\n    Answer += int(N[len-i-1]) * (2 ** i)\n\nprint(Answer)",
          "link": "https://zenn.dev/pienthon/articles/e8390314595187",
          "publishedOn": "2023-01-28T08:38:59.000Z",
          "wordCount": 192,
          "title": "競プロ備忘録：2進数を10進数に変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CHNyUyOi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AB%25E3%2582%2583%25E3%2583%25BC%25E3%2582%2593%2528Pienthon%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%259A2%25E9%2580%25B2%25E6%2595%25B0%25E3%2582%259210%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1aQlJZZEFSbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWJkYTIzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CHNyUyOi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AB%25E3%2582%2583%25E3%2583%25BC%25E3%2582%2593%2528Pienthon%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%259A2%25E9%2580%25B2%25E6%2595%25B0%25E3%2582%259210%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1aQlJZZEFSbi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMWJkYTIzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yosuke00/articles/9d9d405e164198",
          "author": "Yosuke00",
          "description": "1.はじめに\n前回は、Transformerのモデルアーキテクチャについて述べました。\n今回はそのTransformerの派生系である通称BERT(Biderectional Encoder Representations from Transformer)についてまとめていきます。\n今回もTransformerによる自然言語処理で学んだことを自分なりの言葉で書いていきます。\n\n 2.BERTとは\nまず初めに、BERTとは何者かについて軽く紹介します。\nBERTとは、先述した通りTransformerの派生系のモデルの一種です。\nその特徴は大きく以下の二点が挙げられます。\n\n名前にも...",
          "link": "https://zenn.dev/yosuke00/articles/9d9d405e164198",
          "publishedOn": "2023-01-28T05:20:17.000Z",
          "wordCount": 474,
          "title": "BERTモデルとファインチューニング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LzzUv_p0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yosuke00%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:BERT%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A8%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kU1JmR25OeS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmViMmNlZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LzzUv_p0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yosuke00%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:BERT%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A8%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kU1JmR25OeS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmViMmNlZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/e27b81c73d8ada",
          "author": "Web Life CH",
          "description": "【１０Serializer】\nYouTube: https://youtu.be/LmX0aBPw1jI\nhttps://youtu.be/LmX0aBPw1jI\n今回は「Serializer」を作成します。\nレスポンスで返すデータは「json」形式ある必要がありますので、\nデータベースから取得したデータをそのままレスポンスに設定するだけでは\nデータを返すことができません。\nSerializerはデータベースで取得したデータを\nレスポンスで返すことができるように変換してくれる機能があります。\n今回は「posts」のフォルダ内に「serializers.py」を作成します。\n\nmyap...",
          "link": "https://zenn.dev/web_life_ch/articles/e27b81c73d8ada",
          "publishedOn": "2023-01-28T05:12:36.000Z",
          "wordCount": 177,
          "title": "【Django】Pythonで作るRest API【１０Serializer】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2G89Cisu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2590Serializer%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2G89Cisu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2590Serializer%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9e65b1a6afb49b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-108 B - Ruined Square\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    x1, y1, x2, y2 = getIntMap()\n\n    x = x2 - x1\n    y = y2 - y1\n\n    x3 = x2 - y\n    y3 = y2 + x\n\n    x4 = x1 - y\n    y4 = y1 + x\n\n    print(\"%d %d %d %d\" % (x3, y3, x4, y4))\n\n\nif __...",
          "link": "https://zenn.dev/hyperdb/articles/9e65b1a6afb49b",
          "publishedOn": "2023-01-28T04:33:41.000Z",
          "wordCount": 354,
          "title": "［AtCoder］ABC-108｜B - Ruined Square",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kC_ENLlJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-108%25EF%25BD%259CB%2520-%2520Ruined%2520Square%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kC_ENLlJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-108%25EF%25BD%259CB%2520-%2520Ruined%2520Square%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8127aece43448f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-108 A - Pair\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    k = getInt()\n\n    x = k // 2\n    y = k % 2\n\n    print(x * (x + y))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/8127aece43448f",
          "publishedOn": "2023-01-28T04:33:41.000Z",
          "wordCount": 259,
          "title": "［AtCoder］ABC-108｜A - Pair",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--q-ACTDvt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-108%25EF%25BD%259CA%2520-%2520Pair%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--q-ACTDvt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-108%25EF%25BD%259CA%2520-%2520Pair%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tomokin/articles/156a194043e295",
          "author": "tomokin",
          "description": "はじめに\n遊戯王マスターデュエルがリリースされてからはや1年経ちました。\n公式からの競技イベントは少ないですが、有志の方が大会を開催してくださっています。\n一部の大会では、主催者様の定めた特殊なレギュレーションを用いており、参加者のデッキが正しくレギュレーションを守っているか人力でチェックする必要があります。\nデッキに含まれるカードリストのテキストデータがあればチェック作業が自動化できそうですが、公式アプリである遊戯王ニューロンはなんとカードのリストを jpeg 画像として出力します。\nそこで、この jpeg 画像を読み取り、テキストデータ化するアプリケーションを作成しました。\n\n上...",
          "link": "https://zenn.dev/tomokin/articles/156a194043e295",
          "publishedOn": "2023-01-28T02:15:37.000Z",
          "wordCount": 2130,
          "title": "遊戯王ニューロンOCR",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6c3xDhKJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomokin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E9%2581%258A%25E6%2588%25AF%25E7%258E%258B%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AD%25E3%2583%25B3OCR%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05QmlxZmFPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkNWYyOWNiMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6c3xDhKJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomokin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E9%2581%258A%25E6%2588%25AF%25E7%258E%258B%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AD%25E3%2583%25B3OCR%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS05QmlxZmFPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkNWYyOWNiMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/msrn_yossy/articles/0b234ac515c669",
          "author": "msrn",
          "description": "(Bell-)CHSH不等式を導出し、量子論ではそれが破れることを見ます。さらに、IBMの量子コンピュータを使って破れを実験的に観察します。\nリハビリです。\n\n CHSH不等式\n(Bell-)Clauser-Horne-Shimony-Holt不等式((Bell-)CHSH不等式)は、ふたつの粒子のスピンに関するある種の相関について成り立つ不等式です。この不等式は局所実在論を仮定する限り成立します。導出の前に、局所実在論とは何かを見ましょう。\n\n 局所実在論\n物理学的な意味での局所実在論は、以下の仮定を満たす理論の総称です：\n\n\n局所性: 超光速通信ができない。\n\n実在性: すべての物理...",
          "link": "https://zenn.dev/msrn_yossy/articles/0b234ac515c669",
          "publishedOn": "2023-01-27T16:42:15.000Z",
          "wordCount": 2434,
          "title": "CHSH不等式の導出、破れと破れの実験",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--78XXqgUw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:msrn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:CHSH%25E4%25B8%258D%25E7%25AD%2589%25E5%25BC%258F%25E3%2581%25AE%25E5%25B0%258E%25E5%2587%25BA%25E3%2580%2581%25E7%25A0%25B4%25E3%2582%258C%25E3%2581%25A8%25E7%25A0%25B4%25E3%2582%258C%25E3%2581%25AE%25E5%25AE%259F%25E9%25A8%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeGJGVjUtaGlvSFRJR3I0NzJ5ZnRtZlo5UWQ4LS1jVmdzT0VzUTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--78XXqgUw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:msrn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:CHSH%25E4%25B8%258D%25E7%25AD%2589%25E5%25BC%258F%25E3%2581%25AE%25E5%25B0%258E%25E5%2587%25BA%25E3%2580%2581%25E7%25A0%25B4%25E3%2582%258C%25E3%2581%25A8%25E7%25A0%25B4%25E3%2582%258C%25E3%2581%25AE%25E5%25AE%259F%25E9%25A8%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeGJGVjUtaGlvSFRJR3I0NzJ5ZnRtZlo5UWQ4LS1jVmdzT0VzUTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yuk6ra/articles/0874eac6336c40",
          "author": "yuk6ra",
          "description": "はじめてZennを利用します。どんな感じなのかなと思い、試しに書いている感じですので、何卒宜しくお願い致します。皆さんもそうだと思いますが、学びならやっておりますので、間違った情報もあるかと思います。その際は、遠慮なくご指摘していただけますと幸いです。\n\n はじめに\n弊社でWeb3関連のプロダクトを開発するにあたり、ウォレットアドレス（ユーザログインで利用）とTwitterのアカウントを連携させる必要性がでてきました。海外のWeb3プロダクトを見ていても、OAuth2.0が主流のようです。\nTwitterは昔Pythonで遊んでた頃にAPI使っていたものの、今回OAuth2.0は初めてで...",
          "link": "https://zenn.dev/yuk6ra/articles/0874eac6336c40",
          "publishedOn": "2023-01-27T16:27:33.000Z",
          "wordCount": 1837,
          "title": "【Python】OAuth2.0認証を利用してTwitter APIと連携し、認証されたTwitter IDを得る方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EOjY2sNA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuk6ra%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Python%25E3%2580%2591OAuth2.0%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Twitter%2520API%25E3%2581%25A8%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2597%25E3%2580%2581%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%2595%25E3%2582%258C%25E3%2581%259FTwitter%2520ID%25E3%2582%2592%25E5%25BE%2597%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XMTR6c3RMSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwNmViM2E2MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EOjY2sNA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuk6ra%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Python%25E3%2580%2591OAuth2.0%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Twitter%2520API%25E3%2581%25A8%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2597%25E3%2580%2581%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%2595%25E3%2582%258C%25E3%2581%259FTwitter%2520ID%25E3%2582%2592%25E5%25BE%2597%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XMTR6c3RMSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwNmViM2E2MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/c0d21b59bc5bb7",
          "author": "JboyHashimoto",
          "description": "ただの猫ですよ\nこんにちは、Jboyです~\n最近は、noteで自分の生活の情報を発信していたのですが、技術に関係した話題はZennがいいと思ってこちらに書くことにします。\n私の経歴なんですけど、仕事を転々としていて、ケーキ屋やったり、清掃員やったり、今はIT関係の仕事になったり、フリーランスになったりと、めちゃくちゃです。\n以前もこんな話題を出したので、今日は自分のスキルシートっていうですかね?、どんな技術が使えるか紹介したいなと思います。\n\n 現在\n現在はFlutterとFirebaseに注力してます。以前は、Swift勉強してましたけで、もう忘れました🤭\n最近使っていて、得意な技...",
          "link": "https://zenn.dev/joo_hashi/articles/c0d21b59bc5bb7",
          "publishedOn": "2023-01-27T14:24:36.000Z",
          "wordCount": 244,
          "title": "Jboyさんって何者?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WhQFIeHl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JboyHashimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Jboy%25E3%2581%2595%25E3%2582%2593%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25E8%2580%2585%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04WlBPUGF6Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZjRkNGVhMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WhQFIeHl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JboyHashimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Jboy%25E3%2581%2595%25E3%2582%2593%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25E8%2580%2585%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04WlBPUGF6Ty0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZjRkNGVhMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yishizu/articles/99fd8ae93b3a32",
          "author": "Yuko Ishizu",
          "description": "RhinoからFBXをLayerごとに書き出す方法を紹介します。\nUnityでアセットをつくる際にRhinoのレイヤーごとにMeshでモデルを作成し、それを自動で書き出しができると便利そうだということで書いてみました。\n\n\n\n\n参考：\nhttps://gist.github.com/jhorikawa/9401b4b826e8bf54257448ec024c80d5\nhttps://discourse.mcneel.com/t/batch-export-from-a-file/25849/2",
          "link": "https://zenn.dev/yishizu/articles/99fd8ae93b3a32",
          "publishedOn": "2023-01-27T12:17:05.000Z",
          "wordCount": 120,
          "title": "RhinoからFBXを書き出すバッチを書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M7_cQ2Kn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuko%2520Ishizu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Rhino%25E3%2581%258B%25E3%2582%2589FBX%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHdmtDb3VoeHJBalRGb0VSd05jT2pjcFEwRTBPNUk1ZFdzUlM4WDZzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M7_cQ2Kn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuko%2520Ishizu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Rhino%25E3%2581%258B%25E3%2582%2589FBX%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHdmtDb3VoeHJBalRGb0VSd05jT2pjcFEwRTBPNUk1ZFdzUlM4WDZzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/decline/articles/25affec97ea2a0",
          "author": "デクライン",
          "description": "事象\n\n普段と異なるディレクトリのpyファイルを開いて実行すると、「モジュールが見つからない」といったエラーが発生する。\npyファイルを開く場所によって、参照するpythonパスが異なる模様。\n様々な記事を見てトライしたが、VSCodeのpythonパスを固定できなかった。\nwhere python -> python と表示されるだけ。\n\n\n 原因\n\nvenv や conda など複数個所にpythonが存在していた。\n\n\n 解決法\n\npythonの毎回参照したいパスを取得する。\n\n\n一旦全ての python をアンインストール\npython をダウンロード・インストール\nV...",
          "link": "https://zenn.dev/decline/articles/25affec97ea2a0",
          "publishedOn": "2023-01-27T11:31:26.000Z",
          "wordCount": 165,
          "title": "VSCodeが参照するpythonパスを固定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dJivMf2v--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2587%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VSCode%25E3%2581%258C%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2599%25E3%2582%258Bpython%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E5%259B%25BA%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03WjNCRDJmRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExZjM0ZTlmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dJivMf2v--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%2587%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VSCode%25E3%2581%258C%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2599%25E3%2582%258Bpython%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E5%259B%25BA%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03WjNCRDJmRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExZjM0ZTlmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tatsui/articles/c4b4f796a85395",
          "author": "phishing-hunter",
          "description": "OSINTとは\nOSINT (Open-Source Intelligence) とは、インターネット上に公にアクセス可能な情報を収集・分析することを指します。サイバーセキュリティの分野では特に重要な役割を担い、情報収集から脅威の評価・対策までの業務をサポートします。特に、LinuxコマンドやGoogle検索を使った情報収集はOSINTにおいて重要な手法のひとつです。\n\n LangChainとは\nlangchainは自然言語処理の人工知能モデルであり、自然言語からコマンドや検索クエリを生成することができます。langchainを使うことで、OSINTにおいて人間が手作業で行うタスクを...",
          "link": "https://zenn.dev/tatsui/articles/c4b4f796a85395",
          "publishedOn": "2023-01-27T10:48:09.000Z",
          "wordCount": 2237,
          "title": "LangChainを使ってOSINTを自動化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Hi_SXZJB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:phishing-hunter%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6OSINT%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1sTTg2QVhteS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiN2M1ZGU4NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Hi_SXZJB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:phishing-hunter%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6OSINT%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1sTTg2QVhteS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiN2M1ZGU4NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/chakeochakeo/articles/d22bc2d785840d",
          "author": "CHAKEO",
          "description": "はじめに\n文章生成AIにPythonの組込み関数の一覧とその解説、具体例を書かせてみました。使用した文章生成AIは最近話題沸騰中のChatGPTです。\n学生ですので自身の勉強のために作成していたのですが、「あー、この関数どうやって使うんだっけ？？」となったときに使えるかもしれないと思い、記事にしました。（初めてのZenの投稿です。至らない点もあるかと思いますがご容赦ください。）\n非常に優秀な説明を出力してくれたため、文章生成AIの出力をそのまま記載しています。しかし、バグかどうかは分かりませんが、たまに支離滅裂の文章を返すことがありました。一応、チェックしたつもりではあるのですが、間...",
          "link": "https://zenn.dev/chakeochakeo/articles/d22bc2d785840d",
          "publishedOn": "2023-01-27T08:33:54.000Z",
          "wordCount": 764,
          "title": "文章生成AIのPython関数説明が分かりやすい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2IbZM1GU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:CHAKEO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25AEPython%25E9%2596%25A2%25E6%2595%25B0%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%258C%25E5%2588%2586%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SekZ0eS1oUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ODYyZjEwMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2IbZM1GU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:CHAKEO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25AEPython%25E9%2596%25A2%25E6%2595%25B0%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%258C%25E5%2588%2586%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SekZ0eS1oUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ODYyZjEwMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/datahaikuninja/articles/cloudwatch-logs-exporter",
          "author": "datahaikuninja",
          "description": "概要\nコスト削減のためにCloudWatchログのログデータをS3へエクスポートするスクリプトを書いたので、書いた経緯やスクリプトを実行してみて分かった豆知識を書き残したものです。\n\n 意外と高いCloudWatch\n円安により、システムそのものやリクエスト数に大きな変化はないにも関わらずAWS料金が高くなってしまって困るので、コスト削減をやることになりました。\nコスト削減をやるときは料金が高いところから手をつけていくのでCostExplorerや料金明細を見るわけですが、CloudWatchは意外と利用料金の上位にいます。\nCloudWatchの費用が高くなる理由と解決方法について...",
          "link": "https://zenn.dev/datahaikuninja/articles/cloudwatch-logs-exporter",
          "publishedOn": "2023-01-27T07:16:00.000Z",
          "wordCount": 372,
          "title": "コスト削減のためにCloudWatchログに長年溜まったログデータをS3にエクスポートするスクリプトを書いた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gqqNfFYh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:datahaikuninja%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E5%2589%258A%25E6%25B8%259B%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABCloudWatch%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25AB%25E9%2595%25B7%25E5%25B9%25B4%25E6%25BA%259C%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592S3%25E3%2581%25AB%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0zeTFMaERDSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gqqNfFYh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:datahaikuninja%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E5%2589%258A%25E6%25B8%259B%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABCloudWatch%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25AB%25E9%2595%25B7%25E5%25B9%25B4%25E6%25BA%259C%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592S3%25E3%2581%25AB%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0zeTFMaERDSy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYzNlOTRlNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hashiba/articles/ecr-credential-register-operator",
          "author": "Shinichi Hashiba",
          "description": "概要\nAirflowのDockerOperatorでAWS ECRをソースリポジトリとした際は単純にリポジトリを指定するだけではうまく行かなかったので、その解決策を記載しました。\n\n 検討事項\nAWS ECRを利用する際には認証情報を渡しますが、以下の制約があり渡し方に苦労しました。\n\nECRの認証情報は12時間で認証情報が変更されるので、事前にAirflowのConnectionsに保存しても、12時間が経過すると認証できなくなる\nDockerOperatorは引数にユーザ・パスワードを取っていない\n\n\n 解決方法\n私が探した限りでは既存のOperatorやHookではAirflo...",
          "link": "https://zenn.dev/hashiba/articles/ecr-credential-register-operator",
          "publishedOn": "2023-01-27T06:23:12.000Z",
          "wordCount": 1053,
          "title": "Amazon ECRに保存されたイメージでDockerOperatorを動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TVBHFyRI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shinichi%2520Hashiba%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amazon%2520ECR%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7DockerOperator%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqUGxmME5PSUREUHNlRXVodU1ZYm5JeTlhcUluaVRuV3plbThYZlE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TVBHFyRI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shinichi%2520Hashiba%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amazon%2520ECR%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7DockerOperator%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqUGxmME5PSUREUHNlRXVodU1ZYm5JeTlhcUluaVRuV3plbThYZlE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/47247eec98f39a",
          "author": "Web Life CH",
          "description": "【９REST framework】\nYouTube: https://youtu.be/L8fvMnohrBY\nhttps://youtu.be/L8fvMnohrBY\n今回は「Django REST framework」のインストールと初期設定を行います。\nhttps://www.django-rest-framework.org/\nインストールコマンド\npip install djangorestframework\nインストールができましたら、\n「myapp」-> 「myapp」の「settings.py」の30行目付近、\n「INSTALLED_APPS」に「rest_fr...",
          "link": "https://zenn.dev/web_life_ch/articles/47247eec98f39a",
          "publishedOn": "2023-01-27T04:57:09.000Z",
          "wordCount": 896,
          "title": "【Django】Pythonで作るRest API【９REST framework】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jGsrpf3x--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2599REST%2520framework%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jGsrpf3x--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2599REST%2520framework%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/41bd4090faa46c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-107 B - Grid Compression\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getStringListRow(N):\n    return [list(input()) for _ in range(N)]\n\n\ndef transpose(l):\n    s = []\n    for i in range(len(l[0])):\n        r = []\n        for j in range(len(l)):\n            r....",
          "link": "https://zenn.dev/hyperdb/articles/41bd4090faa46c",
          "publishedOn": "2023-01-27T04:51:39.000Z",
          "wordCount": 730,
          "title": "［AtCoder］ABC-107｜B - Grid Compression",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WqAPl4v1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-107%25EF%25BD%259CB%2520-%2520Grid%2520Compression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WqAPl4v1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-107%25EF%25BD%259CB%2520-%2520Grid%2520Compression%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1c9d117fffa96d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-107 A - Train\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, i = getIntMap()\n\n    print(n - i + 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1c9d117fffa96d",
          "publishedOn": "2023-01-27T04:51:39.000Z",
          "wordCount": 241,
          "title": "［AtCoder］ABC-107｜A - Train",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6YGkTayT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-107%25EF%25BD%259CA%2520-%2520Train%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6YGkTayT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-107%25EF%25BD%259CA%2520-%2520Train%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tk_resilie/articles/fastapi_async_sync",
          "author": "米谷 昂(Python/FastAPIプロフェッショナル)",
          "description": "asyncの安易な選択はNG\nFastAPIのrouter定義(path関数)では、def/async def のいずれも使用できるため、サンプルなどを見てなんとなくasync defにしている方もいるのではないでしょうか？\n以下にasyncとsyncの実装例を記述します。\n# sync\n@router.get(\"/sync\")\ndef get_develop_sync(i: int) -> None:\n    import time\n    print(f\"start: {i}\")\n    time.sleep(30)\n    print(f\"end: {i}\")\n\n\n# a...",
          "link": "https://zenn.dev/tk_resilie/articles/fastapi_async_sync",
          "publishedOn": "2023-01-26T21:48:47.000Z",
          "wordCount": 173,
          "title": "FastAPIで、なんとなくasync(非同期)を使用してはいけない、という話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R_pOvMyA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFas...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:FastAPI%25E3%2581%25A7%25E3%2580%2581%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%258Fasync%2528%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%2529%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2581%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IOXk2NFhIWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R_pOvMyA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFas...%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:FastAPI%25E3%2581%25A7%25E3%2580%2581%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%258Fasync%2528%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%2529%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2581%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IOXk2NFhIWC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/neka_nat/articles/f2f5b6ebeb049a",
          "author": "neka-nat",
          "description": "概要\n最近、pythonでUI部分も含めたWebアプリ作成ツールがいろいろ出てきているので、知っている限りでまとめてみようと思います。\n\nPynecone\nFlet\nStreamlit\nDash\nPanel\nNiceGUI\nGradio\n\n\n 各ツールの紹介\n\n Pynecone\nhttps://github.com/pynecone-io/pynecone\n\n2022年12月にリリースされた比較的新しめのツール\n先発のStreamlitやDashと異なり、汎用的なアプリが作れることを目指している\nUIの作り方がReactっぽい、コンポーネント指向、propsやstateという概念が...",
          "link": "https://zenn.dev/neka_nat/articles/f2f5b6ebeb049a",
          "publishedOn": "2023-01-26T14:23:34.000Z",
          "wordCount": 407,
          "title": "PythonでWebアプリ作れるやつのまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CGn7if_h--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:neka-nat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258B%25E3%2582%2584%25E3%2581%25A4%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1JMDhGTFR0Zi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0NjU3ODEwYjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CGn7if_h--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:neka-nat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258B%25E3%2582%2584%25E3%2581%25A4%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1JMDhGTFR0Zi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0NjU3ODEwYjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kaorumori/articles/c1c2729af9e6cd",
          "author": "kaorumori",
          "description": "年齢の計算\nデータ記録時刻と生年月日から年齢を計算することがよくありました。いろいろな方法があると思いますし、ライブラリでサポートされているケースもあると思うのですが、実行環境によっては意外と面倒だったりします。\n\n PandasのDataFrameで年齢を計算\nPandasのDataFrameでデータ処理をしていて、年齢を計算することがありました。以下のようにして年齢を計算することができました。\ndf['recorded_at'] = pd.to_datetime(df['recorded_at'])\ndf['birthday'] = pd.to_datetime(df['birt...",
          "link": "https://zenn.dev/kaorumori/articles/c1c2729af9e6cd",
          "publishedOn": "2023-01-26T12:07:32.000Z",
          "wordCount": 202,
          "title": "PandasのDataFrameでデータ記録時刻と生年月日から年齢を計算",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---boScPbG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaorumori%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Pandas%25E3%2581%25AEDataFrame%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A8%2598%25E9%258C%25B2%25E6%2599%2582%25E5%2588%25BB%25E3%2581%25A8%25E7%2594%259F%25E5%25B9%25B4%25E6%259C%2588%25E6%2597%25A5%25E3%2581%258B%25E3%2582%2589%25E5%25B9%25B4%25E9%25BD%25A2%25E3%2582%2592%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lBYWtFaEJmY1paNnlPckRmbUFWSGJ5aWNYWFpyV19qdmxjOUJraUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---boScPbG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kaorumori%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Pandas%25E3%2581%25AEDataFrame%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A8%2598%25E9%258C%25B2%25E6%2599%2582%25E5%2588%25BB%25E3%2581%25A8%25E7%2594%259F%25E5%25B9%25B4%25E6%259C%2588%25E6%2597%25A5%25E3%2581%258B%25E3%2582%2589%25E5%25B9%25B4%25E9%25BD%25A2%25E3%2582%2592%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lBYWtFaEJmY1paNnlPckRmbUFWSGJ5aWNYWFpyV19qdmxjOUJraUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7792364d02aae9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-106 A - Garden\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print((a - 1) * (b - 1))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7792364d02aae9",
          "publishedOn": "2023-01-26T05:38:34.000Z",
          "wordCount": 257,
          "title": "［AtCoder］ABC-106｜A - Garden",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mBHeKp5Y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-106%25EF%25BD%259CA%2520-%2520Garden%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mBHeKp5Y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-106%25EF%25BD%259CA%2520-%2520Garden%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1e83d790018d4a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-106 B - 105\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef countDiv(n):\n    a = []\n    for i in range(1, n + 1):\n        if i > n // i:\n            break\n\n        if n % i == 0:\n            a.append(i)\n            a.append(n // i)\n\n    return len(set(a))\n\n\ndef main():\n    n...",
          "link": "https://zenn.dev/hyperdb/articles/1e83d790018d4a",
          "publishedOn": "2023-01-26T05:38:33.000Z",
          "wordCount": 458,
          "title": "［AtCoder］ABC-106｜B - 105",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JGW7MgYo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-106%25EF%25BD%259CB%2520-%2520105%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JGW7MgYo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-106%25EF%25BD%259CB%2520-%2520105%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shin1007/articles/bfc8a934bb3d63",
          "author": "shin1007",
          "description": "本家は全然更新されていない\n本家のPRを見ていると、結構いいなーというものが多いのです。\n有用そうなPRとしては\n\n東アジアフォントの追加\n高速化\nベクター画像対応\n等があり、導入されたらうれしいなーと思う所存です。\n\nしかしながら、基本的に作者はPRを採用しないみたいです。\n要約すると「整合性の確認とか多すぎて余裕ないっす」なので、忙しい模様。\nなので、フォークプロジェクトがないかなーと探してみると、以下のようなものがあります。\n\n python-docx-oss（GitHubあり）\n本家のPRから借用したPRを送ってみているのですが、まだアクセプトされていません。\nhttps:/...",
          "link": "https://zenn.dev/shin1007/articles/bfc8a934bb3d63",
          "publishedOn": "2023-01-26T05:16:51.000Z",
          "wordCount": 134,
          "title": "python-docxを更新したい！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ee_UfyR2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin1007%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python-docx%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUg4dkpGZlgxTi1pQXh2VHRsbUhRZ2g5ekt0ZWRmLWF0NzNXcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ee_UfyR2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin1007%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:python-docx%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUg4dkpGZlgxTi1pQXh2VHRsbUhRZ2g5ekt0ZWRmLWF0NzNXcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/e09f06040ba8f0",
          "author": "Web Life CH",
          "description": "【８templateの設定】\nYouTube: https://youtu.be/8CKCkcJFb9c\nhttps://youtu.be/8CKCkcJFb9c\n今回は「template」を作成して、\nHTMLファイルを表示します。\nテンプレートを使用するのはこの動画だけですので、\n自分の画面で表示してみたいという方だけ実践してください。\nまずは「myapp」-> 「posts」の中に「templates」のフォルダを作成します。\nそして「templates」の中に「posts」のフォルダを作成して、\n「posts」に「index.html」を作成します。\n\nmyapp/po...",
          "link": "https://zenn.dev/web_life_ch/articles/e09f06040ba8f0",
          "publishedOn": "2023-01-26T04:25:48.000Z",
          "wordCount": 434,
          "title": "【Django】Pythonで作るRest API【８templateの設定】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oY1-_wW4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2598template%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oY1-_wW4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2598template%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fikastudio/articles/73c226000f9a0a",
          "author": "FikaStudio",
          "description": "pre-commit とは\npre-commit は、Git　の　pre-commit　フックスクリプトを管理・メンテナンスするためのツールです。簡単に言うと、git コマンドでコミットする前に、文法や体裁をチェックしてくれるものになります。\n\n pre-commit インストール\nshuma@fika subprocess % pipenv install --dev pre-commit\n\n 設定ファイルの作成\npre-commit の設定ファイルを作成します。pipenv でインストールしたコマンドは pipenv run <command> のように使います。\nf...",
          "link": "https://zenn.dev/fikastudio/articles/73c226000f9a0a",
          "publishedOn": "2023-01-25T11:42:38.000Z",
          "wordCount": 1580,
          "title": "pre-commit で Python コードをキレイに管理してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--huuPqMhv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:FikaStudio%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pre-commit%2520%25E3%2581%25A7%2520Python%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2582%25AD%25E3%2583%25AC%25E3%2582%25A4%25E3%2581%25AB%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zRGlxSENmcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--huuPqMhv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:FikaStudio%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pre-commit%2520%25E3%2581%25A7%2520Python%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2582%25AD%25E3%2583%25AC%25E3%2582%25A4%25E3%2581%25AB%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zRGlxSENmcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MDVjZjEwZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/2eb75de099653f",
          "author": "オライリーヨッシー",
          "description": "背景\nとある食品メーカーとその商品（例：お菓子等）の型番について、「誤りがあるかも」と伺ったので、それらをチェックするプログラムを組んだ。プログラムを実行したところ、データ量が膨大すぎて、チェック結果を記載しているファイル作成時にタイムアウトエラーを起こしてしまった。\nやむを得ず、メーカーごとのidと商品ごとのidで一つずつファイルを作成するプログラムに書き換えた。ただ、このプログラムだと、いちいちidを変えてURLにアクセスしなければいけないので、膨大な時間がかかってしまう。そこで、pythonで自動的にファイルダウンロードできるURLへアクセスし、ファイルを保存できるプログラムを...",
          "link": "https://zenn.dev/oreilly_ota/articles/2eb75de099653f",
          "publishedOn": "2023-01-25T11:20:11.000Z",
          "wordCount": 172,
          "title": "PythonでURLによるファイルダウンロードを行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C5FDBnS7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7URL%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--C5FDBnS7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7URL%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/stktu/articles/f643d781f8fa5c",
          "author": "stktu",
          "description": "概要\nDockerで構築した環境にてTimes New Romanのフォントを使えないときの対処法\n\n 使用した環境\npython:3.9.14\n\n 解決策\n以下のコマンドで必要なパッケージをインストール。\napt update\napt install -y cabextract libfontenc1 libmspack0 xfonts-encodings xfonts-utils\nwget http://ftp.de.debian.org/debian/pool/contrib/m/msttcorefonts/ttf-mscorefonts-installer_3.6_all.d...",
          "link": "https://zenn.dev/stktu/articles/f643d781f8fa5c",
          "publishedOn": "2023-01-25T11:07:06.000Z",
          "wordCount": 330,
          "title": "matplotlibでフォントが見つからないときの対処（Docker）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tquIoPGG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:stktu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:matplotlib%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25EF%25BC%2588Docker%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MTWlRNFE0Ry0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MzZmMTc4NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tquIoPGG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:stktu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:matplotlib%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25EF%25BC%2588Docker%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1MTWlRNFE0Ry0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MzZmMTc4NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/59fe1c9e76de65",
          "author": "nakamura196",
          "description": "概要\nGoogle Colabを用いたNDL\"古典籍\"OCRアプリを作成しました。以下のURLからお試しいただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/NDL古典籍OCRの実行例.ipynb\nNDL古典籍OCRの説明は以下です。\nhttps://github.com/ndl-lab/ndlkotenocr_cli\nまた、ノートブックの作成にあたっては、@blue0620さんのノートブックを参考にしています。ありがとうございます！\nhttps://twitter.com/blu...",
          "link": "https://zenn.dev/nakamura196/articles/59fe1c9e76de65",
          "publishedOn": "2023-01-25T09:45:34.000Z",
          "wordCount": 177,
          "title": "Google Colabを用いたNDL\"古典籍\"OCRアプリのチュートリアルを作成しました。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8jEUvxdp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Colab%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FNDL%2522%25E5%258F%25A4%25E5%2585%25B8%25E7%25B1%258D%2522OCR%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8jEUvxdp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520Colab%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FNDL%2522%25E5%258F%25A4%25E5%2585%25B8%25E7%25B1%258D%2522OCR%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c62d9bc30b72c7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-105 B - Cakes and Donuts\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    r = 'No'\n    for i in range(n // 7 + 1):\n        if (n - (7 * i)) % 4 == 0:\n            r = 'Yes'\n            break\n    print(r)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c62d9bc30b72c7",
          "publishedOn": "2023-01-25T05:59:15.000Z",
          "wordCount": 327,
          "title": "［AtCoder］ABC-105｜B - Cakes and Donuts",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bMEssZeh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-105%25EF%25BD%259CB%2520-%2520Cakes%2520and%2520Donuts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bMEssZeh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-105%25EF%25BD%259CB%2520-%2520Cakes%2520and%2520Donuts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/699758470a3852",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-105 A - AtCoder Crackers\n\n\n\n 提出結果\nimport math\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, k = getIntMap()\n\n    print(math.ceil((n % k) / k))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/699758470a3852",
          "publishedOn": "2023-01-25T05:59:14.000Z",
          "wordCount": 259,
          "title": "［AtCoder］ABC-105｜A - AtCoder Crackers",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WtnAeI20--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-105%25EF%25BD%259CA%2520-%2520AtCoder%2520Crackers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WtnAeI20--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-105%25EF%25BD%259CA%2520-%2520AtCoder%2520Crackers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/c6b56c1425c50e",
          "author": "Web Life CH",
          "description": "【７Viewの設定】\nYouTube: https://youtu.be/JAOdymb6yNU\nhttps://youtu.be/JAOdymb6yNU\n今回は「View」の設定を行います。\nViewの設定方法にはいくつかやり方がありまして、\nクラスを使用する方法、\nhttps://docs.djangoproject.com/ja/4.1/topics/class-based-views/\n関数を使用する方法等があるのですが、\n今回は関数を使用する方法で実践していきます。\n今回はサンプルとして、\nhttp://localhost:8000/posts/hello/\nこちらにブラウ...",
          "link": "https://zenn.dev/web_life_ch/articles/c6b56c1425c50e",
          "publishedOn": "2023-01-25T05:15:00.000Z",
          "wordCount": 537,
          "title": "【Django】Pythonで作るRest API【７Viewの設定】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--e4VLy6Ce--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2597View%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--e4VLy6Ce--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2597View%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/rururu/articles/97b060f56d0a32",
          "author": "Runa",
          "description": "説明\n\n 問題\n\nhttps://leetcode.com/problems/print-in-order/\n\n全てが間違っているかもしれない説明です。\nざっくり回答コード\nhttps://github.com/Runacy/public-anything/blob/main/algorythm/print_in_order.py\nデバッグしたかったのでprintしています。\n参考にする時は、printをぬいてね。\nさて、これを実行すると、次のような順序で実行されます。\n1\n2\n3\n4\n5\n8\n11\n6\n7\n8\n9\n10\n12\n13\n\n 1~4\ndef __init__(self):...",
          "link": "https://zenn.dev/rururu/articles/97b060f56d0a32",
          "publishedOn": "2023-01-24T15:08:06.000Z",
          "wordCount": 170,
          "title": "1114. Print in Order",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1i7BFi_R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Runa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:1114.%2520Print%2520in%2520Order%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tNGhkYVNvWi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlY2E4N2JhNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1i7BFi_R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Runa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:1114.%2520Print%2520in%2520Order%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tNGhkYVNvWi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlY2E4N2JhNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/masaru21/articles/1e4bd9d6998b8f",
          "author": "lonely_creator_m",
          "description": "pythonとflaskで書いたウェブアプリでエラーが出たので、修正作業を続けています。\nその中で、複数のページに設定したフォームからPOSTで送ってきたデータを受け取ることが思うようにできなかったのです。\nChatGPTに、コードの確認をしてもらったことで、意図した通りにデータの受け取りが出来るようになりました。\n私のようにFlaskで複数のフォームからのデータの受け取りに悩んでいる人が居たら、役立てて頂けたらと思い記事に書きました。\n以下ChatGPTの回答を原文のまま掲載します。\nThis code is a Flask application that has three rou...",
          "link": "https://zenn.dev/masaru21/articles/1e4bd9d6998b8f",
          "publishedOn": "2023-01-24T14:40:59.000Z",
          "wordCount": 491,
          "title": "Flaskで複数のフォームからPOSTで受けたいとき",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q57NX-wm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Flask%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%258B%25E3%2582%2589POST%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q57NX-wm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Flask%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%258B%25E3%2582%2589POST%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/masaru21/articles/4c9004202f7c80",
          "author": "lonely_creator_m",
          "description": "恥ずかしい話なのですが、コードをよく考えずに書いてしまっていました。\npythonでflaskを使って書いたコードですが、ChatGPTに冗長なコードと言われてしまいました。\nこちらが、元のコードです。\n{% extends 'base.html' %} {% block head %}\n<title>画数調べ</title>\n<script type=\"text/javascript\" src=\"/static/js/hantei.js\"></script>\n{% endblock %} \n{% block content %}\n<...",
          "link": "https://zenn.dev/masaru21/articles/4c9004202f7c80",
          "publishedOn": "2023-01-24T14:24:43.000Z",
          "wordCount": 456,
          "title": "冗長な書き方のコードをChatGPTが修正してくれた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cxRX4L2W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2586%2597%25E9%2595%25B7%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592ChatGPT%25E3%2581%258C%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cxRX4L2W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2586%2597%25E9%2595%25B7%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592ChatGPT%25E3%2581%258C%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/toyoshimorioka/articles/761fe45ebe4802",
          "author": "moriokatoyoshi",
          "description": "前回書いた「mocopiの通信内容を分析してみた Vol.01」の続きです。\n前回の内容でクォータニオン（XYZW）とポジションのXYZの7つの情報をボーンの数、27個分メッセージからパースしてシリアライズするところまでできました。\n\n ボーンの親子関係\nmocopiの開発サイトによると、各IDのボーンの位置は以下のようになっています。\n\n一方、mocopiからのデータは見ている限り、いくら動いてもroot以外のポジションのXYZは殆ど変化しません。恐らく各ボーンに親子関係が作られており、親との差分が主に回転情報に入っていると考えられます。\n色々解析した結果、mocopiのボーンの親子関...",
          "link": "https://zenn.dev/toyoshimorioka/articles/761fe45ebe4802",
          "publishedOn": "2023-01-24T13:13:41.000Z",
          "wordCount": 92,
          "title": "mocopiの通信内容を解析してみた Vol.02",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VTBJovPe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:moriokatoyoshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:mocopi%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520Vol.02%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEpacW5lWExERUp1SmJNcUtvZnVhVmRGbDltcFZyZDE1LTVNaGU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VTBJovPe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:moriokatoyoshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:mocopi%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520Vol.02%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEpacW5lWExERUp1SmJNcUtvZnVhVmRGbDltcFZyZDE1LTVNaGU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/taksnr/articles/67fd6f4c7a260e",
          "author": "taksnr",
          "description": "はじめに\nDjangoで本番環境に移行する際、mediaファイルにエラーが出た同志はたくさんいるのではないだろうか。ここではpythonanywhereでdjangoを使う際に私が活用した外部ツールを紹介する。\n\n Debug=Falseではmediaファイルが表示されない\nDEBUG=True と設定すると、本来Webサーバーを経由してstaticやmediaのファイルを読み込むところをdjangoアプリ内のstaticとmediaを見に行くようになっている。しかし、Debug=Falseになるとこの設定は無効になるためパスを繋げてあげないといけない。\n公式ドキュメント\nそこで簡単...",
          "link": "https://zenn.dev/taksnr/articles/67fd6f4c7a260e",
          "publishedOn": "2023-01-24T10:54:05.000Z",
          "wordCount": 199,
          "title": "Django Pythonanywhereでmediaファイルを表示する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vjTsCnpG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taksnr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%2520Pythonanywhere%25E3%2581%25A7media%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWhCNjRveEtkQmx3enQ4dUJRLTdCZW9zN1owRjdoU09sWFA4SVlJdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vjTsCnpG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:taksnr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%2520Pythonanywhere%25E3%2581%25A7media%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWhCNjRveEtkQmx3enQ4dUJRLTdCZW9zN1owRjdoU09sWFA4SVlJdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/masaru21/articles/1b587787067f61",
          "author": "lonely_creator_m",
          "description": "先日この記事を知りました。\nhttps://gigazine.net/news/20230123-chatrwkv-chatgpt/\nそしてGoogle Colab（Colaboratory）で、試してみました。\nこちらをフォークして試してほしいと書いてあったので、試してみました。\nhttps://github.com/harrisonvanderbyl/rwkv_chatbot\n私のフォークは、こちらです。\nhttps://github.com/miracle777/rwkv_chatbot\n\n クローンを作りました。\n!git clone https://github.com/mir...",
          "link": "https://zenn.dev/masaru21/articles/1b587787067f61",
          "publishedOn": "2023-01-24T06:16:21.000Z",
          "wordCount": 330,
          "title": "オープンソースのChatRWKVを試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WDUHNvwS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AEChatRWKV%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WDUHNvwS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lonely_creator_m%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AEChatRWKV%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5751e89a0d54de",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-104 B - AcCepted\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    r = True\n    if s[0] != 'A':\n        r = False\n    elif s[2:-1].count('C') != 1:\n        r = False\n    elif not (s.replace('A', '').replace('C', '')).islower():\n        r = False\n   ...",
          "link": "https://zenn.dev/hyperdb/articles/5751e89a0d54de",
          "publishedOn": "2023-01-24T04:56:01.000Z",
          "wordCount": 369,
          "title": "［AtCoder］ABC-104｜B - AcCepted",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--o_Lcylq5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-104%25EF%25BD%259CB%2520-%2520AcCepted%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--o_Lcylq5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-104%25EF%25BD%259CB%2520-%2520AcCepted%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/0c3e760b38039e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-104 A - Rated for Me\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    r = getInt()\n\n    print('ABC' if r < 1200 else 'ARC' if r < 2800 else 'AGC')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/0c3e760b38039e",
          "publishedOn": "2023-01-24T04:56:01.000Z",
          "wordCount": 267,
          "title": "［AtCoder］ABC-104｜A - Rated for Me",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0kaEwQ4F--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-104%25EF%25BD%259CA%2520-%2520Rated%2520for%2520Me%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0kaEwQ4F--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-104%25EF%25BD%259CA%2520-%2520Rated%2520for%2520Me%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/4a301b77bdd824",
          "author": "Web Life CH",
          "description": "【６ダッシュボードデータ表示】\nYouTube: hhttps://youtu.be/fNVAZMDJq7I\nhttps://youtu.be/fNVAZMDJq7I\n今回は作成した「Post」のモデルをダッシュボードで\n表示できるように設定を行います。\nまずは「posts」-> 「admin.py」の設定を行います。\n\nmyapp/posts/admin.py\nfrom django.contrib import admin\nfrom .models import Post\n\n# Register your models here.\nadmin.site.register(P...",
          "link": "https://zenn.dev/web_life_ch/articles/4a301b77bdd824",
          "publishedOn": "2023-01-24T04:55:51.000Z",
          "wordCount": 364,
          "title": "【Django】Pythonで作るRest API【６ダッシュボードデータ表示】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--obQuoCDO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2596%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--obQuoCDO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2596%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/omusan/articles/cf4b3a320bdc30",
          "author": "Sota Omura",
          "description": "A06 - How Many Guests?\nimport itertools \n \nN, Q = map(int, input().split())\nA = list(map(int, input().split()))\n \nL = []\nR = []\n \nfor i in range(Q):\n    x, y = map(int, input().split())\n    L.append(x)\n    R.append(y)\n\n# 累積和を求めるitertoolライブラリのaccumulate関数\naccumulation = list(itertools.accumulate...",
          "link": "https://zenn.dev/omusan/articles/cf4b3a320bdc30",
          "publishedOn": "2023-01-23T16:19:05.000Z",
          "wordCount": 822,
          "title": "競技プログラミングの鉄則　アルゴリズムと思考力を高める77の技術をpythonで解いていく 第2章",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Gg3KA8AL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Sota%2520Omura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AB%25B6%25E6%258A%2580%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E9%2589%2584%25E5%2589%2587%25E3%2580%2580%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A8%25E6%2580%259D%25E8%2580%2583%25E5%258A%259B%25E3%2582%2592%25E9%25AB%2598%25E3%2582%2581%25E3%2582%258B77%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%2520%25E7%25AC%25AC2%25E7%25AB%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEhGSEZLb1hDVTlRUHpWdGlVeGthSlB4U2hCY3ROZ045aGk4YTQxdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Gg3KA8AL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Sota%2520Omura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E7%25AB%25B6%25E6%258A%2580%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E9%2589%2584%25E5%2589%2587%25E3%2580%2580%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A8%25E6%2580%259D%25E8%2580%2583%25E5%258A%259B%25E3%2582%2592%25E9%25AB%2598%25E3%2582%2581%25E3%2582%258B77%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%2520%25E7%25AC%25AC2%25E7%25AB%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEhGSEZLb1hDVTlRUHpWdGlVeGthSlB4U2hCY3ROZ045aGk4YTQxdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tminamiii/articles/chat-gpt-dig-deeper",
          "author": "tMinamiii",
          "description": "ChatGPTがPythonから呼び出せるようになりました。\nというわけで、ChatGPTの返答を質問にかえて深堀り問答して遊んでみましょう。\n最初の質問では、「XXX についてどう思いますか？」という質問を投げかけ、最初の回答に対して別の問い投げかけることで深堀していきます。\n\nXXX について他の意見はありますか？\"\nXXX について詳細に述べてください。。\nXXX を要約してください。\n\nhttps://github.com/tMinamiii/chat-gpt-dig-deeper\n\n 注意点\nChatGPTは同じ問いかけばかりすると、答えがなくなり空文字を返すようです。\n長続き...",
          "link": "https://zenn.dev/tminamiii/articles/chat-gpt-dig-deeper",
          "publishedOn": "2023-01-23T14:35:08.000Z",
          "wordCount": 880,
          "title": "ChatGPTで人生について深堀りさせてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ku_LEo_0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tMinamiii%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ChatGPT%25E3%2581%25A7%25E4%25BA%25BA%25E7%2594%259F%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%25B7%25B1%25E5%25A0%2580%25E3%2582%258A%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15MTk0WEpXXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxZWYxMmZhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ku_LEo_0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tMinamiii%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ChatGPT%25E3%2581%25A7%25E4%25BA%25BA%25E7%2594%259F%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%25B7%25B1%25E5%25A0%2580%25E3%2582%258A%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS15MTk0WEpXXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxZWYxMmZhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/arika_technavi/articles/d3be8c00068412",
          "author": "arika｜Pythonエンジニア",
          "description": "Python3エンジニア認定基礎試験に合格したので私なりの勉強方法や難易度について解説します。\n\n はじめに\nこちらの試験は一般社団法人Pythonエンジニア育成推進協会による認定資格です。\n2019年に日経 xTECHが実施した「これから取りたいと思うIT資格」のアンケートで3位となり、Pythonの盛り上がりと共に試験自体も注目されています。\n試験内容はPython3の文法基礎が問われるため、取得するとPython3の文法基礎を理解していることが証明できます。\n\n試験概要\n試験名：Python3 エンジニア認定基礎試験\n（英名：Python 3 Certified Engineer ...",
          "link": "https://zenn.dev/arika_technavi/articles/d3be8c00068412",
          "publishedOn": "2023-01-23T13:15:02.000Z",
          "wordCount": 399,
          "title": "【Python3エンジニア認定基礎試験】合格したので勉強方法や難易度について解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qOyATYlr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:arika%25EF%25BD%259CPython%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E5%259F%25BA%25E7%25A4%258E%25E8%25A9%25A6%25E9%25A8%2593%25E3%2580%2591%25E5%2590%2588%25E6%25A0%25BC%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%258B%2589%25E5%25BC%25B7%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2584%25E9%259B%25A3%25E6%2598%2593%25E5%25BA%25A6%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNHdaLW5jNnozeURfZFpCdzdpa0lYU0lvQkFYQWhBa1JUZHhXblU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qOyATYlr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:arika%25EF%25BD%259CPython%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E5%259F%25BA%25E7%25A4%258E%25E8%25A9%25A6%25E9%25A8%2593%25E3%2580%2591%25E5%2590%2588%25E6%25A0%25BC%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%258B%2589%25E5%25BC%25B7%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2584%25E9%259B%25A3%25E6%2598%2593%25E5%25BA%25A6%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNHdaLW5jNnozeURfZFpCdzdpa0lYU0lvQkFYQWhBa1JUZHhXblU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/awtnb/articles/d64e563927f97e",
          "author": "AWtnb",
          "description": "毎回忘れて Gimp と格闘しているのでツール化。せっかくなので最近話題の Flet を使ってみます。\n\n できたもの\nhttps://github.com/AWtnb/flet_4up_idphoto\n\nPython しか書いていないのに GUI が！\n\nL判に4枚割り付けます\n\n 手順の振り返り\n\n 割り付け処理\n画像処理には Pillow を使います。事前に pip install しておきましょう。\n処理の該当部分 にコメントで加筆するとこんな感じです。\n# 保存時の名前を作るための関数\ndef with_stem_tail(path:str, tail:str) -> s...",
          "link": "https://zenn.dev/awtnb/articles/d64e563927f97e",
          "publishedOn": "2023-01-23T12:14:10.000Z",
          "wordCount": 900,
          "title": "Flet で証明写真をL判に割り付けるアプリを作ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JTgM7gF1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:AWtnb%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Flet%2520%25E3%2581%25A7%25E8%25A8%25BC%25E6%2598%258E%25E5%2586%2599%25E7%259C%259F%25E3%2582%2592L%25E5%2588%25A4%25E3%2581%25AB%25E5%2589%25B2%25E3%2582%258A%25E4%25BB%2598%25E3%2581%2591%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mSU9BRWdJQi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MTdhZTAxZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JTgM7gF1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:AWtnb%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Flet%2520%25E3%2581%25A7%25E8%25A8%25BC%25E6%2598%258E%25E5%2586%2599%25E7%259C%259F%25E3%2582%2592L%25E5%2588%25A4%25E3%2581%25AB%25E5%2589%25B2%25E3%2582%258A%25E4%25BB%2598%25E3%2581%2591%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mSU9BRWdJQi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MTdhZTAxZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/toyoshimorioka/articles/96dbe00b87601f",
          "author": "moriokatoyoshi",
          "description": "1月20日（金）に慣性式のモーションキャプチャデバイス（とアプリ）mocopiが発売されました。\nSONYという大手メーカが販売しており、流通もしっかりしていそうなこと、デバイスが全部で6つと装着の手間が少ないこと、価格が5万円とモーションキャプチャデバイスとしては低価格であること、単体で完結せずVRChatやUnityなどとの連携も想定していることなどからある程度のマーケットを構築しそうです。\n\n 開発関連ドキュメントやSDK・プラグインの状況\nmocopiは低価格のモーションキャプチャであり、色んなソフトで使えそうですが、1月23日現在連携可能な環境は限られています。\n\nVRChat...",
          "link": "https://zenn.dev/toyoshimorioka/articles/96dbe00b87601f",
          "publishedOn": "2023-01-23T08:20:33.000Z",
          "wordCount": 1202,
          "title": "mocopiの通信内容を解析してみた Vol.01",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yFgKvY83--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:moriokatoyoshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:mocopi%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520Vol.01%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEpacW5lWExERUp1SmJNcUtvZnVhVmRGbDltcFZyZDE1LTVNaGU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yFgKvY83--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:moriokatoyoshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:mocopi%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520Vol.01%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEpacW5lWExERUp1SmJNcUtvZnVhVmRGbDltcFZyZDE1LTVNaGU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ccf02faf483af0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-103 B - String Rotation\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n    t = getString()\n\n    r = 'No'\n    for i in range(len(s)):\n        if t == (s[i:] + s[:i]):\n            r = 'Yes'\n            break\n    print(r)\n\n\nif __name__ == \"__main__\":\n   ...",
          "link": "https://zenn.dev/hyperdb/articles/ccf02faf483af0",
          "publishedOn": "2023-01-23T07:01:01.000Z",
          "wordCount": 308,
          "title": "［AtCoder］ABC-103｜B - String Rotation",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_6LJlykG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-103%25EF%25BD%259CB%2520-%2520String%2520Rotation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_6LJlykG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-103%25EF%25BD%259CB%2520-%2520String%2520Rotation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6b226aa9633fe7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-103 A - Task Scheduling Problem\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    a = getIntList()\n\n    a.sort()\n\n    print(a[2] - a[0])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/6b226aa9633fe7",
          "publishedOn": "2023-01-23T07:01:01.000Z",
          "wordCount": 265,
          "title": "［AtCoder］ABC-103｜A - Task Scheduling Problem",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Pfy8vx3o--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-103%25EF%25BD%259CA%2520-%2520Task%2520Scheduling%2520Problem%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Pfy8vx3o--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-103%25EF%25BD%259CA%2520-%2520Task%2520Scheduling%2520Problem%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/26a6f5642fdaab",
          "author": "Web Life CH",
          "description": "【５Post Model】\nYouTube: https://youtu.be/lrxAew19wLY\nhttps://youtu.be/lrxAew19wLY\n今回は「Postのモデル」を作成します。\n\nmyapp/posts/models.py\nfrom django.db import models\nfrom django.contrib.auth.models import User\n\n# Create your models here.\n\nclass Post(models.Model):\n  title = models.CharField(max_length=50)\n...",
          "link": "https://zenn.dev/web_life_ch/articles/26a6f5642fdaab",
          "publishedOn": "2023-01-23T06:12:02.000Z",
          "wordCount": 312,
          "title": "【Django】Pythonで作るRest API【５Post Model】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nuWQV9xn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2595Post%2520Model%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nuWQV9xn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2595Post%2520Model%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shunse1/articles/863f2ede1ca18d",
          "author": "Shunsei",
          "description": "Djangoを操作するにあたり、基本となる「権限」について簡単にまとめる。\n３つの種類がある。\n\n スーパーユーザー\nこのユーザーは基本的に全ての権限が付与される。\n\n スタッフユーザー\nDjango Adminにアクセスできるユーザー。サイトのスタッフに与えられることが多い。\n\n アクティブユーザ\n一般ユーザーに与えられる。",
          "link": "https://zenn.dev/shunse1/articles/863f2ede1ca18d",
          "publishedOn": "2023-01-22T12:32:16.000Z",
          "wordCount": 83,
          "title": "Django 基本知識 権限編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JBKBfa0r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shunsei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Django%2520%25E5%259F%25BA%25E6%259C%25AC%25E7%259F%25A5%25E8%25AD%2598%2520%25E6%25A8%25A9%25E9%2599%2590%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNndwdk1TRkxjVFo3X3lGeWlmNjFWMjRpako4Z0lxZzFOczRrWHI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JBKBfa0r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shunsei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Django%2520%25E5%259F%25BA%25E6%259C%25AC%25E7%259F%25A5%25E8%25AD%2598%2520%25E6%25A8%25A9%25E9%2599%2590%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNndwdk1TRkxjVFo3X3lGeWlmNjFWMjRpako4Z0lxZzFOczRrWHI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kazuu/articles/4efb2aac76fd7a",
          "author": "kazuu",
          "description": "概要\n今まで家族内の連絡その他にSlackを使っていたけど、無料だと90日分しか過去ログが参照できなくなったことを期に、Discordへ移行を検討することに。\nシンプルに済ますなら、IFFFTでもカレンダーのアップデートをDiscordへ通知することはできた。\nでも既存のレシピじゃないので枠を消費するし、複数人のカレンダーを読むには人数分の枠が必要・・・\nIFFFTの枠はIoTとかのために残しておきたい。\n調べたら、ただメッセージ送るだけなら、Bot作るまでもなく、Incoming Webhook使えばいいじゃんということみたい。\nというわけで、自宅サーバで動くようにしてみる。\nまた...",
          "link": "https://zenn.dev/kazuu/articles/4efb2aac76fd7a",
          "publishedOn": "2023-01-22T09:33:38.000Z",
          "wordCount": 1695,
          "title": "SlackからDiscordに移行するので、Googleカレンダーの予定のアップデートをDiscordへ通知する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b0Eaj4Zf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Slack%25E3%2581%258B%25E3%2582%2589Discord%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581Google%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25AE%25E4%25BA%2588%25E5%25AE%259A%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592Discord%25E3%2581%25B8%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14ZElLTXJqSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwZTRmZTVlZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b0Eaj4Zf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Slack%25E3%2581%258B%25E3%2582%2589Discord%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581Google%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25AE%25E4%25BA%2588%25E5%25AE%259A%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592Discord%25E3%2581%25B8%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14ZElLTXJqSC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwZTRmZTVlZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ishiyeahman/articles/8c3126ca6b4ee8",
          "author": "ishiyeahman",
          "description": "はじめに\nデータサイエンスやAIで多用されるPandasライブラリですが，最適なデータの代入方法ができていますか?\nこの記事はRod Mulla氏のMake Your Pandas Code Lightning Fastを日本語でまとめたものになります．1次情報はリンクを参照してください． ハンズオンでの説明なので，実際にデータフレームを触りながら高速化について学ぶことが出来ます．\ngoogle colaboratoryにRod Mulla氏のテストコードをまとめましたので，ハンズオンで試したい方はご活用ください．\nhttps://colab.research.google.com/...",
          "link": "https://zenn.dev/ishiyeahman/articles/8c3126ca6b4ee8",
          "publishedOn": "2023-01-22T08:22:28.000Z",
          "wordCount": 730,
          "title": "Pandas のコードを高速化する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XNZJw6rC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ishiyeahman%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Pandas%2520%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01djFnZ2NoeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0ODYwODE2YzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XNZJw6rC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ishiyeahman%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Pandas%2520%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01djFnZ2NoeC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0ODYwODE2YzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/d8cef1c1e8ea8d",
          "author": "osn_Lofi",
          "description": "E資格では、numpyだけで実装したk-means法のコードが出題されます。\nk-means法の理解のために、それぞれのコードが何を計算しているのか、をまとめてみました。\n \n\n k-means法の実装（全体）\nまず、全体感から眺めていきます。\nk-means法は、大きく三つの関数で構成されます。\n\n重心の初期化\n重心からの距離の計算\nクラスタリング(k-means)の実行\n\nimport numpy as np\n\n#1 重心の初期化\ndef init_centroid(X, n_data, k):\n    idx = np.random.permutation(n_data)[:k]\n...",
          "link": "https://zenn.dev/robes/articles/d8cef1c1e8ea8d",
          "publishedOn": "2023-01-22T08:18:52.000Z",
          "wordCount": 2692,
          "title": "【E資格対策】k-meansの実装方法について詳しく見る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SruOntln--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590E%25E8%25B3%2587%25E6%25A0%25BC%25E5%25AF%25BE%25E7%25AD%2596%25E3%2580%2591k-means%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A9%25B3%25E3%2581%2597%25E3%2581%258F%25E8%25A6%258B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SruOntln--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590E%25E8%25B3%2587%25E6%25A0%25BC%25E5%25AF%25BE%25E7%25AD%2596%25E3%2580%2591k-means%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A9%25B3%25E3%2581%2597%25E3%2581%258F%25E8%25A6%258B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/haruakubi/articles/31d3770d6b992f",
          "author": "春眠亭あくび",
          "description": "workflowyが好きすぎて\nどうも。コスパや効率化が大好物な春眠亭あくびと申します。\nノートアプリマニアでして、それなりに知名度のあるアプリは大抵触ってます。\nその中でもボクが愛してやまないのが、「workflowy」です。\nhttps://workflowy.com/features/\nアウトライナーアプリでして、自由度の高さとUIの緻密さがほんと最高なのです。\n特にお気に入りなのが、ディレクトリという概念がないところで、全てのコンテンツをひとつのページで管理します。\nメチャクチャ大きな白紙にガンガンアイデアやメモを書いていくような感覚が他にはなく、本当に手放せません。\n様々な...",
          "link": "https://zenn.dev/haruakubi/articles/31d3770d6b992f",
          "publishedOn": "2023-01-22T07:27:16.000Z",
          "wordCount": 1919,
          "title": "python×seleniumで、Twitterのいいねと自分のツイートをworkflowyっていうメモツールに自動転記する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nsDv5zxc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%2598%25A5%25E7%259C%25A0%25E4%25BA%25AD%25E3%2581%2582%25E3%2581%258F%25E3%2581%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:python%25C3%2597selenium%25E3%2581%25A7%25E3%2580%2581Twitter%25E3%2581%25AE%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%25E3%2581%25A8%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592workflowy%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%2586%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E8%25BB%25A2%25E8%25A8%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04TVotMHlLMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMDVkODJhMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nsDv5zxc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%2598%25A5%25E7%259C%25A0%25E4%25BA%25AD%25E3%2581%2582%25E3%2581%258F%25E3%2581%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:python%25C3%2597selenium%25E3%2581%25A7%25E3%2580%2581Twitter%25E3%2581%25AE%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%25E3%2581%25A8%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592workflowy%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%2586%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E8%25BB%25A2%25E8%25A8%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS04TVotMHlLMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMDVkODJhMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/0c6f1c1a0061c5",
          "author": "Web Life CH",
          "description": "【４Create SuperUser】\nYouTube: https://youtu.be/uSykuvP5XQE\nhttps://youtu.be/uSykuvP5XQE\n今回は「管理者ユーザー」の作成を行います。\n管理者ユーザーを作成するためには\nユーザーのモデルを定義する必要があるのですが、\ndjangoではプロジェクト作成時にユーザーのモデルが準備されています。\nただし、マイグレートがされていないので、\nまずはマイグレートを実行する必要があります。\nマイグレートコマンド\npython manage.py migrate\nマイグレートが完了しましたら、\n次は管理者ユーザーの作成...",
          "link": "https://zenn.dev/web_life_ch/articles/0c6f1c1a0061c5",
          "publishedOn": "2023-01-22T06:41:10.000Z",
          "wordCount": 146,
          "title": "【Django】Pythonで作るRest API【４Create SuperUser】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ddTRQbLI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2594Create%2520SuperUser%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ddTRQbLI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2594Create%2520SuperUser%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/639319cdd479c0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-101 A - Eating Symbols Easy\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    c = sum([1 if t == '+' else -1 for t in s])\n\n    print(c)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/639319cdd479c0",
          "publishedOn": "2023-01-22T06:34:24.000Z",
          "wordCount": 277,
          "title": "［AtCoder］ABC-101｜A - Eating Symbols Easy",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8yxw0PVe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-101%25EF%25BD%259CA%2520-%2520Eating%2520Symbols%2520Easy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8yxw0PVe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-101%25EF%25BD%259CA%2520-%2520Eating%2520Symbols%2520Easy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/3423e0d8ad1f5a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-102 B - Maximum Difference\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = getInt()\n    a = getIntList()\n\n    print(max(a) - min(a))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/3423e0d8ad1f5a",
          "publishedOn": "2023-01-22T06:34:24.000Z",
          "wordCount": 295,
          "title": "［AtCoder］ABC-102｜B - Maximum Difference",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JLiI9XaL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-102%25EF%25BD%259CB%2520-%2520Maximum%2520Difference%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JLiI9XaL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-102%25EF%25BD%259CB%2520-%2520Maximum%2520Difference%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2fe5c6bc1d3e95",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-101 B - Digit Sums\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n    s = sum(map(int, list(str(n))))\n\n    print('Yes' if n % s == 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2fe5c6bc1d3e95",
          "publishedOn": "2023-01-22T06:34:24.000Z",
          "wordCount": 284,
          "title": "［AtCoder］ABC-101｜B - Digit Sums",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l9VH3KH---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-101%25EF%25BD%259CB%2520-%2520Digit%2520Sums%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l9VH3KH---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-101%25EF%25BD%259CB%2520-%2520Digit%2520Sums%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/225e414f5e5d80",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-102 A - Multiple of 2 and N\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(n if n % 2 == 0 else n * 2)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/225e414f5e5d80",
          "publishedOn": "2023-01-22T06:34:23.000Z",
          "wordCount": 267,
          "title": "［AtCoder］ABC-102｜A - Multiple of 2 and N",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mjhSOzba--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-102%25EF%25BD%259CA%2520-%2520Multiple%2520of%25202%2520and%2520N%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mjhSOzba--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-102%25EF%25BD%259CA%2520-%2520Multiple%2520of%25202%2520and%2520N%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nyatlan/articles/f5aef63b83e1d6",
          "author": "nyatlan",
          "description": "音響信号でデジタルデータを送受信するライブラリを作ったので紹介します。Wifi等の電波接続、有線接続無しに、オーディオデバイスのみで50bps～1kbps程度の低速なワイヤレスデジタル通信をすることができます。通信範囲は概ね60cmです。\nhttps://www.youtube.com/watch?v=4cB3hWATDUQ\n\n 音響モデム\n音響モデムは、音声アナログ回線でデジタルデータ通信をする装置です。代表的な物に、音響カプラがあります。ソフトウェア音響モデムは、これらの装置で処理していた変調・復調機能をソフトウェアのみで提供します。\n\n ライブデモ\nパソコンやスマートフォンのブラウ...",
          "link": "https://zenn.dev/nyatlan/articles/f5aef63b83e1d6",
          "publishedOn": "2023-01-22T05:20:30.000Z",
          "wordCount": 169,
          "title": "ソフトウェア音響モデムのライブラリ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UeNsXK60--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nyatlan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E9%259F%25B3%25E9%259F%25BF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25A0%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zMmZDQlJ3VC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1NTNmNGM4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UeNsXK60--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nyatlan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E9%259F%25B3%25E9%259F%25BF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25A0%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zMmZDQlJ3VC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1NTNmNGM4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/24ee45dd81636a",
          "author": "osn_Lofi",
          "description": "はじめに\n2022年11月にOpenAIが公開したchatGPTの反響が凄いですね。\n公開6日目にして100万人がユーザー登録したとか。\n今のところは、無料で使うことができますが、いずれは利用が制限されるかもしれませんね。\nここでは、chatGPTよりは精度が落ちますが、無料で使うことができて、日本語に特化した事前学習済みモデルもあるGPT-2を採り上げ、文章生成にチャレンジしたいと思います。\n具体的にはrinna社が開発したGPT-2モデルを使用します。\n事前学習済みモデルだけでもそれなりの文章を生成できますが、せっかくなので、特定のドメインでファインチューニングさせてみて、文章生...",
          "link": "https://zenn.dev/robes/articles/24ee45dd81636a",
          "publishedOn": "2023-01-22T05:07:06.000Z",
          "wordCount": 1219,
          "title": "【自然言語処理】日本語GPT-2モデルをファインチューニングして文章生成をやってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6e5oXkGS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259EGPT-2%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6e5oXkGS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2591%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259EGPT-2%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E6%2596%2587%25E7%25AB%25A0%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/zi_matsu/articles/f913ac021dad59",
          "author": "Matsuzaki",
          "description": "gunicornのresponse headerを変更する\nfrom uvicorn.workers import UvicornWorker\n\n\nclass HeadlessUvicornWorker(UvicornWorker):\n    CONFIG_KWARGS = {\"loop\": \"auto\", \"http\": \"auto\", \"server_header\": False}\n\nこれでgunicornを呼ぶときにこのHeadlessUvicornWorkerを呼ぶようにするとヘッダーは消せる\n以下のような感じ\ngunicorn -k app.worker.HeadlessU...",
          "link": "https://zenn.dev/zi_matsu/articles/f913ac021dad59",
          "publishedOn": "2023-01-22T04:42:00.000Z",
          "wordCount": 151,
          "title": "1/16~1/20で技術的にやったこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RwCSQu09--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Matsuzaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:1%252F16%7E1%252F20%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16ZW9oU3UweC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RwCSQu09--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Matsuzaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:1%252F16%7E1%252F20%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS16ZW9oU3UweC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzNkNzczYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sunbluesome/articles/0eaa8eea8375dd",
          "author": "sunbluesome",
          "description": "CPCV (Combinatorial Purged Cross-Validation) を理解したい実装する記事です。\n CPCVは時系列データに用いられる交差検証法のひとつです。良く用いられる交差検証法としてK-Fold CVやWalk Forward法等複数種類挙げられますが、これらと異なり疑似的に複数のバックテストパスを生成・評価できることが特徴です。\n CPCVの理論の詳細は既にまとめている方が居るのでそちらを参考にするとよいでしょう。\nhttps://zenn.dev/ymd/articles/fd08fb46bc868c\nまた、ファイナンス機械学習[1]にも同様の解説があ...",
          "link": "https://zenn.dev/sunbluesome/articles/0eaa8eea8375dd",
          "publishedOn": "2023-01-21T17:47:23.000Z",
          "wordCount": 6367,
          "title": "CPCV (Combinatorial Purged Cross-Validation) を理解したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SU8R9toK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sunbluesome%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:CPCV%2520%2528Combinatorial%2520Purged%2520Cross-Validation%2529%2520%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MWRDbDU0eFNmUVhIYXZqMmF3Rm5NZzFGMUVNaEs1dmYwVDhPNlk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SU8R9toK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sunbluesome%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:CPCV%2520%2528Combinatorial%2520Purged%2520Cross-Validation%2529%2520%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MWRDbDU0eFNmUVhIYXZqMmF3Rm5NZzFGMUVNaEs1dmYwVDhPNlk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tomo25/articles/899f192724711b",
          "author": "tomo25",
          "description": "M2 Mac（Ventura）でmecabの環境構築にちょい詰まった＆良さげの文献がなさげだったのでメモ置いておきます。\n形態素解析デビューしようと思って、mecabインスコできず挫折するのはちょっと切ないので本記事が参考になれば幸いです。\n（ARM64チップ起因なのでM1 Macでも発生しそうですがググった感じあんまり直面してる人いなかったのでもしかしたらOSも関係あるのかもしれない）\nまずはこちらのqitaの記事を参考に無邪気に環境構築していきます。\nhttps://qiita.com/paulxll/items/72a2bea9b1d1486ca751\n$ brew install...",
          "link": "https://zenn.dev/tomo25/articles/899f192724711b",
          "publishedOn": "2023-01-21T14:43:03.000Z",
          "wordCount": 270,
          "title": "M2 Macでmecabの環境構築でsymbol not found in flat namespaceエラーの対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AEoTFUWW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomo25%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:M2%2520Mac%25E3%2581%25A7mecab%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A7symbol%2520not%2520found%2520in%2520flat%2520namespace%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mRktxZG1xcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzNWYxYzQ1NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AEoTFUWW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tomo25%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:M2%2520Mac%25E3%2581%25A7mecab%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A7symbol%2520not%2520found%2520in%2520flat%2520namespace%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mRktxZG1xcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzNWYxYzQ1NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mi0256/articles/4e388146f480f3",
          "author": null,
          "description": "はじめに\nzk-rollupを用いたEthereum Layer2であるzkSyncのPython SDKを触ってみようという日本語記事です。\nhttps://zksync.io/\n初学者のため、指摘・補足あれば遠慮なくTwitterなどにて連絡をください。\n答えられるかどうかわかりませんが、質問も歓迎です。一緒に勉強していきましょう。\nhttps://v2-docs.zksync.io/api/python/getting-started.html\n\n インストール\n下記で普通にインストールできる方は普通にインストールして頂いて構いません。\n$ pip install zksync...",
          "link": "https://zenn.dev/mi0256/articles/4e388146f480f3",
          "publishedOn": "2023-01-21T12:59:18.000Z",
          "wordCount": 932,
          "title": "zkSync Python SDKを触ってみよう！",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/astrologian/articles/862d50d4ceacdd",
          "author": "zoniha",
          "description": "こんにちは 👋\n仕事で AWS Lambda（以下、Lambda） を使うことになったので Lambda の概要理解から API Gateway をトリガーに Python で書かれた簡単な関数を実行するところまでをやってみたいと思います。\n\n Lambda とは？\n何はともあれ、まずは公式サイトを見てみましょう。\nhttps://aws.amazon.com/jp/lambda/\nなるほど、どうやら Lambda を使うと自前でサーバーを用意することなく何らかのイベントをトリガーに、自分があらかじめ Lambda に設定しておいた処理を実行できるようです。これは世に言う「サーバーレス」...",
          "link": "https://zenn.dev/astrologian/articles/862d50d4ceacdd",
          "publishedOn": "2023-01-21T11:20:26.000Z",
          "wordCount": 1154,
          "title": "API Gateway をトリガーに AWS Lambda を動かしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NuISYNHj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zoniha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:API%2520Gateway%2520%25E3%2582%2592%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25AC%25E3%2583%25BC%25E3%2581%25AB%2520AWS%2520Lambda%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS02b3lhUGxaLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYjRlYjlhN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NuISYNHj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:zoniha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:API%2520Gateway%2520%25E3%2582%2592%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25AC%25E3%2583%25BC%25E3%2581%25AB%2520AWS%2520Lambda%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS02b3lhUGxaLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYjRlYjlhN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/casl0/articles/7b566422e8960b",
          "author": "CASL0",
          "description": "はじめに\nポケモンの外国語名一覧から、ポケモンの外国語名の対応一覧のCSVを作成します。\nソースコードは次のリンクから確認できます。\nCASL0/pokemon_translation\n\n 動かし方\nDev Containersの使用を推奨。\nDevContainerを起動し、以下のコマンドを実行します（またはF5キーを押してください）。実行後pokemon_translation.csvというファイルが出力されます。\npython app.py\n※DevContainer以外で動かす場合はpython 3.11をインストールし、以下を実行してください。\npip3 install -...",
          "link": "https://zenn.dev/casl0/articles/7b566422e8960b",
          "publishedOn": "2023-01-21T11:04:14.000Z",
          "wordCount": 150,
          "title": "Pythonでポケモン名翻訳ファイルを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bJGep-Wr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:CASL0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2583%259D%25E3%2582%25B1%25E3%2583%25A2%25E3%2583%25B3%25E5%2590%258D%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNmRXNEswYjJ6Q0sxNGpWTXFkbHRyQ0Y3RXp3d3kybVJFeHRySDc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bJGep-Wr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:CASL0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7%25E3%2583%259D%25E3%2582%25B1%25E3%2583%25A2%25E3%2583%25B3%25E5%2590%258D%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNmRXNEswYjJ6Q0sxNGpWTXFkbHRyQ0Y3RXp3d3kybVJFeHRySDc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shuheisaw/articles/49a0ee7a2fceaa",
          "author": "みじんこ",
          "description": "記事について\nMatplotlibの使い方を毎回ググるのがメンドクサかったので、コードを目的別にメモします。\n\n 動作環境\nPython 3.9.7\nJupyterLab 3.2.1\n\n 関数のプロット\n関数を可視化したい時のコードです。\n\nimport.py\nimport matplotlib.pyplot as plt\nimport japanize_matplotlib\nimport numpy as np\n\nx = np.linspace(0, 10,  1001)\ny = x**2\n\nplt.rcParams[\"font.size\"] = 18 #文字サイズを大きく\n\npl...",
          "link": "https://zenn.dev/shuheisaw/articles/49a0ee7a2fceaa",
          "publishedOn": "2023-01-21T07:54:34.000Z",
          "wordCount": 560,
          "title": "【Python】Matplotlibの使い方めも",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8Yqojk3J--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BF%25E3%2581%2598%25E3%2582%2593%25E3%2581%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Matplotlib%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2582%2581%25E3%2582%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FWFFwaUxNVS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3NmM5ZjRkOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8Yqojk3J--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BF%25E3%2581%2598%25E3%2582%2593%25E3%2581%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Matplotlib%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2582%2581%25E3%2582%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1FWFFwaUxNVS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3NmM5ZjRkOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f8b02b65d8ce09",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-099 B - Stone Monument\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    c = b - a - 1\n    x = (1 + c) * c // 2\n\n    print(x - a)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f8b02b65d8ce09",
          "publishedOn": "2023-01-21T07:43:06.000Z",
          "wordCount": 294,
          "title": "［AtCoder］ABC-099｜B - Stone Monument",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6R8F-hp7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-099%25EF%25BD%259CB%2520-%2520Stone%2520Monument%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6R8F-hp7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-099%25EF%25BD%259CB%2520-%2520Stone%2520Monument%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7c19e83946c3f9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-099 A - ABD\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print('ABD' if n // 1000 == 1 else 'ABC')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7c19e83946c3f9",
          "publishedOn": "2023-01-21T07:43:06.000Z",
          "wordCount": 243,
          "title": "［AtCoder］ABC-099｜A - ABD",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yfArowwW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-099%25EF%25BD%259CA%2520-%2520ABD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yfArowwW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-099%25EF%25BD%259CA%2520-%2520ABD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5de44beaafef18",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-100 A - Happy Birthday!\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print('Yay!' if a <= 8 and b <= 8 else ':(')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5de44beaafef18",
          "publishedOn": "2023-01-21T07:43:06.000Z",
          "wordCount": 270,
          "title": "［AtCoder］ABC-100｜A - Happy Birthday!",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q9gJrQMP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-100%25EF%25BD%259CA%2520-%2520Happy%2520Birthday%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Q9gJrQMP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-100%25EF%25BD%259CA%2520-%2520Happy%2520Birthday%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/37e49515862320",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-100 B - Ringo's Favorite Numbers\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    d, n = getIntMap()\n\n    print(100 ** d * (n if n < 100 else 101))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/37e49515862320",
          "publishedOn": "2023-01-21T07:43:05.000Z",
          "wordCount": 277,
          "title": "［AtCoder］ABC-100｜B - Ringo's Favorite Numbers",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w051Aevv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-100%25EF%25BD%259CB%2520-%2520Ringo%2527s%2520Favorite%2520Numbers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--w051Aevv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-100%25EF%25BD%259CB%2520-%2520Ringo%2527s%2520Favorite%2520Numbers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/ae9e4ed2778663",
          "author": "Web Life CH",
          "description": "【３Start App】\nYouTube: https://youtu.be/TkgnA-reQLc\nhttps://youtu.be/TkgnA-reQLc\n今回は「アプリケーション」の作成を行います。\nhttps://docs.djangoproject.com/ja/4.1/intro/tutorial01/#creating-the-polls-app\ndjangoもバックエンドを取り扱うものですので、\nJSのexpressのように\n・モデル\n・ビュー\n・コントローラー\nのような機能を持っています。\nアプリケーションの作成は、\n上記の3点をモデルごとにフォルダ分けするようなイ...",
          "link": "https://zenn.dev/web_life_ch/articles/ae9e4ed2778663",
          "publishedOn": "2023-01-21T06:00:38.000Z",
          "wordCount": 902,
          "title": "【Django】Pythonで作るRest API【３Start App】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vEZukAqe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2593Start%2520App%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vEZukAqe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2593Start%2520App%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/waruby/articles/a6d831cbe7f8af",
          "author": "waruby",
          "description": "基本\nOpenCVの描画系関数の仕様はここ。文字を描画するときはcv::putText()を使う。\n\n\n\nimg: 描画対象の画像\n\ntext: 文字列\n\norg: 描画位置\n\nfontFace: フォントの種類\n\nfontScale: フォントのサイズ\n\ncolor: 色\n\nthickness: 太さ\n\nlineType: 線の種類\n\nbottomLeftOrigin: 画像の原点が左下か。Falseなら左上\n\nPythonでの使い方はこんな感じ。\n# 縦300, 横100, 3チャンネル画像バッファを作る\nimg = np.zeros((100, 300, 3), dtype=n...",
          "link": "https://zenn.dev/waruby/articles/a6d831cbe7f8af",
          "publishedOn": "2023-01-20T19:40:56.000Z",
          "wordCount": 1279,
          "title": "OpenCVの文字描画とサイズ指定",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Cc1EBwTr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:waruby%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:OpenCV%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E6%258F%258F%25E7%2594%25BB%25E3%2581%25A8%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E6%258C%2587%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1yeUxtZld2cy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmODA1YjJmOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Cc1EBwTr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:waruby%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:OpenCV%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E6%258F%258F%25E7%2594%25BB%25E3%2581%25A8%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E6%258C%2587%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1yeUxtZld2cy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmODA1YjJmOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tick/articles/b3f704194cfa9f",
          "author": "Tick",
          "description": "概要\nLogicoolのマウスの設定アプリとしてLogiOptions+を使っており、おかしな挙動に悩まされていたが、とりあえずの回避策が見つかりました。\n\n 環境\nWindows11, LogiOptions+1.30.7349\n1つのPCを2人でユーザ切り替えで使用し、各ユーザ共LogiOptioins+でマウスの設定済み。\n\n おかしな挙動\n使用中にWindowsのログアウトをせず、他のユーザに切り替えて使用すると、切り替え先のユーザでマウスの設定が無効になる挙動が発生。具体的には、マウスポインタの速度が遅くなり、マウスのボタン割り当てが解除される。\n\n 回避策\nLogiOpt...",
          "link": "https://zenn.dev/tick/articles/b3f704194cfa9f",
          "publishedOn": "2023-01-20T14:48:35.000Z",
          "wordCount": 145,
          "title": "LogicoolのLogiOptions+がマルチユーザ環境で動作がおかしい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UAUOluPz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tick%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Logicool%25E3%2581%25AELogiOptions%252B%25E3%2581%258C%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%258C%25E3%2581%258A%25E3%2581%258B%25E3%2581%2597%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1rN0VfaFZkRS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiYTYxMDE4ZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UAUOluPz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tick%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Logicool%25E3%2581%25AELogiOptions%252B%25E3%2581%258C%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%258C%25E3%2581%258A%25E3%2581%258B%25E3%2581%2597%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1rN0VfaFZkRS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiYTYxMDE4ZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ymd_h/articles/dd3bce4199e2ba",
          "author": "山田(ymd)",
          "description": "前提\n強化学習で利用する環境Env（を集めたライブラリ）では、OpenAI Gymが有名でよく使われてきました。\n私もいくつか記事を書いたり、スクラップにまとめたりしてきました。\nhttps://zenn.dev/ymd_h/articles/80a34180b29a58\nhttps://zenn.dev/ymd_h/articles/33c02c84bbd6f6\nhttps://zenn.dev/ymd_h/articles/36eff0de1ee5ed\nhttps://zenn.dev/ymd_h/scraps/6e6b03b4ebd5ce\n上の記事でも取り上げたように、2021...",
          "link": "https://zenn.dev/ymd_h/articles/dd3bce4199e2ba",
          "publishedOn": "2023-01-20T13:50:27.000Z",
          "wordCount": 268,
          "title": "[強化学習] いつの間にか OpenAI Gym が終焉していた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mNHt2QJX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E7%2594%25B0%2528ymd%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255B%25E5%25BC%25B7%25E5%258C%2596%25E5%25AD%25A6%25E7%25BF%2592%255D%2520%25E3%2581%2584%25E3%2581%25A4%25E3%2581%25AE%25E9%2596%2593%25E3%2581%25AB%25E3%2581%258B%2520OpenAI%2520Gym%2520%25E3%2581%258C%25E7%25B5%2582%25E7%2584%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XTmt4MXNhQi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJhN2RkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mNHt2QJX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E7%2594%25B0%2528ymd%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255B%25E5%25BC%25B7%25E5%258C%2596%25E5%25AD%25A6%25E7%25BF%2592%255D%2520%25E3%2581%2584%25E3%2581%25A4%25E3%2581%25AE%25E9%2596%2593%25E3%2581%25AB%25E3%2581%258B%2520OpenAI%2520Gym%2520%25E3%2581%258C%25E7%25B5%2582%25E7%2584%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XTmt4MXNhQi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJhN2RkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yusukekato/articles/7b0ae67db03fbf",
          "author": "Yusuke Kato",
          "description": "はじめに\nこの記事では、書籍『シェル・ワンライナー160本ノック』の問題をPythonワンライナーで解いていきます。今回は第2章の問題を解きます。Pythonワンライナー以外に縛りはしないので、execやopyも使わせていただこうと思います。何卒よろしくお願いいたします。\n\n 対象読者\nシェル芸とPythonを愛する人々に読んでいただけますと幸いです。\n\n 注意\n私のPythonワンライナーが正しい保証はありませんので、ご注意くださいませ。また、外部コマンドを使わずに解く問題でも、Pythonワンライナーを使いますので、ご了承くださいませ。\n\n 書籍情報\n書籍『シェル・ワンライナー1...",
          "link": "https://zenn.dev/yusukekato/articles/7b0ae67db03fbf",
          "publishedOn": "2023-01-20T12:48:05.000Z",
          "wordCount": 1122,
          "title": "Pythonワンライナーで解く『シェル・ワンライナー160本ノック』第2章（問題12から問題30まで）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_TNplIRe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yusuke%2520Kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Python%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E3%2580%258E%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC160%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2580%258F%25E7%25AC%25AC2%25E7%25AB%25A0%25EF%25BC%2588%25E5%2595%258F%25E9%25A1%258C12%25E3%2581%258B%25E3%2582%2589%25E5%2595%258F%25E9%25A1%258C30%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS13UmF1LVpLNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwNGY3MGUxMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_TNplIRe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yusuke%2520Kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Python%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E3%2580%258E%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC160%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2580%258F%25E7%25AC%25AC2%25E7%25AB%25A0%25EF%25BC%2588%25E5%2595%258F%25E9%25A1%258C12%25E3%2581%258B%25E3%2582%2589%25E5%2595%258F%25E9%25A1%258C30%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS13UmF1LVpLNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwNGY3MGUxMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/botamotch/articles/1a27d90380e4b4",
          "author": "botamotch",
          "description": "https://github.com/AUTOMATIC1111/stable-diffusion-webui\nこんな感じの画面で操作できるようになります。txt2imgはもちろん、img2img, Trainなどもタブから切り替えて使用できます。かなり活発に開発されているので今後も機能が増えていくと思います。\n\n記事執筆時点（2023.1.20）では 20a59ab3b171f398abd09087108c1ed087dbea9b commitを使用しました。\n\n インストール環境\n\nOS : Arch Linux\npython 3.10.9 (pyenv)\nHardware\n\nMin...",
          "link": "https://zenn.dev/botamotch/articles/1a27d90380e4b4",
          "publishedOn": "2023-01-20T09:22:10.000Z",
          "wordCount": 1067,
          "title": "stable-diffusion-webuiをインストールする (Arch Linux, AMD ROCm)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--033Y8ICX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:botamotch%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:stable-diffusion-webui%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2520%2528Arch%2520Linux%252C%2520AMD%2520ROCm%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JMd1JLVk02Q194MVNrSUhXTU02Tk9BV2RQTmQ1VS1CeXNndTc5PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--033Y8ICX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:botamotch%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:stable-diffusion-webui%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2520%2528Arch%2520Linux%252C%2520AMD%2520ROCm%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JMd1JLVk02Q194MVNrSUhXTU02Tk9BV2RQTmQ1VS1CeXNndTc5PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/84dfe7d286c7af",
          "author": "Web Life CH",
          "description": "【２Start Project】\nYouTube: https://youtu.be/LUzcyu1xwsM\nhttps://youtu.be/LUzcyu1xwsM\n今回は前回インストールした「django」のライブラリを使用して、\nプロジェクトの作成を行います。\nhttps://docs.djangoproject.com/ja/4.1/intro/tutorial01/\nライブラリにつきましては、「npm install」と異なり、\n「pip install」の場合はプロジェクトごとではなく\n仮想環境そのものにライブラリをインストールしています。\n同じ仮想環境を使用していれば、...",
          "link": "https://zenn.dev/web_life_ch/articles/84dfe7d286c7af",
          "publishedOn": "2023-01-20T06:17:22.000Z",
          "wordCount": 157,
          "title": "【Django】Pythonで作るRest API【２Start Project】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--D8EFbJRk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2592Start%2520Project%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--D8EFbJRk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2592Start%2520Project%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e28be9a096da2f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-098 A - Add Sub Mul\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(max([a + b, a - b, a * b]))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e28be9a096da2f",
          "publishedOn": "2023-01-20T05:01:22.000Z",
          "wordCount": 273,
          "title": "［AtCoder］ABC-098｜A - Add Sub Mul",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pQNZrplm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-098%25EF%25BD%259CA%2520-%2520Add%2520Sub%2520Mul%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pQNZrplm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-098%25EF%25BD%259CA%2520-%2520Add%2520Sub%2520Mul%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/bba69e4ac2d210",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-098 B - Cut and Count\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = list(getString())\n\n    r = 0\n    for i in range(1, len(s)):\n        a = set(s[0:i])\n        b = set(s[i:])\n\n        c = 0\n        for j i...",
          "link": "https://zenn.dev/hyperdb/articles/bba69e4ac2d210",
          "publishedOn": "2023-01-20T05:01:22.000Z",
          "wordCount": 422,
          "title": "［AtCoder］ABC-098｜B - Cut and Count",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--G6wBHw09--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-098%25EF%25BD%259CB%2520-%2520Cut%2520and%2520Count%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--G6wBHw09--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-098%25EF%25BD%259CB%2520-%2520Cut%2520and%2520Count%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sql_geinin/articles/4c9821b97daac5",
          "author": "SQL芸人",
          "description": "SQL\n【本】\n■ スッキリわかるSQL入門（対象：初級者）\nオレンジ本。SQLの第1歩にはコレ。説明がやさしく書かれていてわかりやすい。\nhttps://www.amazon.co.jp/スッキリわかるSQL入門-第3版-ドリル256問付き！-スッキリわかるシリーズ-中山清喬-ebook/dp/B09WTJ4DKR\n■ 集中演習 SQL入門 Google BigQueryではじめるビジネスデータ分析（対象：初～中級者）\n木田本。BigQueryやGA4を想定しており、UNNESTやWindow関数も紹介されていて実践的。\nhttps://www.amazon.co.jp/集中演習-...",
          "link": "https://zenn.dev/sql_geinin/articles/4c9821b97daac5",
          "publishedOn": "2023-01-20T04:58:49.000Z",
          "wordCount": 320,
          "title": "SQL・データを勉強するための本・ツール紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Dmhg1eMC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SQL%25E8%258A%25B8%25E4%25BA%25BA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SQL%25E3%2583%25BB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%259C%25AC%25E3%2583%25BB%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1lN01JMEUwbC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5ZTM2NTY5YzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Dmhg1eMC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SQL%25E8%258A%25B8%25E4%25BA%25BA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SQL%25E3%2583%25BB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%259C%25AC%25E3%2583%25BB%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1lN01JMEUwbC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5ZTM2NTY5YzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/perlain/articles/d2451aa75819ab",
          "author": "lain",
          "description": "よくある方法\nまずは処理時間を計測するよく見る方法は以下のような感じでしょうか\nimport time\nstart = time.time()\ntime.sleep(5) # 何らかの処理(関数)\nend = time.time()\n\nprint(f\"経過時間: {end - start:.2f} seconds\")\nこの方法だと、計測したい箇所が出るたびに開始の時間start = time.time()準備して\n終了の時間を減算――って面倒ですよね。見栄えもあまりよくないはずです。\n\n @contextmanagerを使う\nしかし、これをもっとスッキリかけて汎用的に書ける方法があり...",
          "link": "https://zenn.dev/perlain/articles/d2451aa75819ab",
          "publishedOn": "2023-01-20T01:14:05.000Z",
          "wordCount": 396,
          "title": "[Python]with構文でスッキリしたある範囲の処理時間を計測する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2VOD5v_G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lain%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BPython%255Dwith%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25AA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2582%25E3%2582%258B%25E7%25AF%2584%25E5%259B%25B2%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E8%25A8%2588%25E6%25B8%25AC%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwX1JOOHJTY0RJMUg4MW9nT0RxZDdaSXI3OG05RGdJS19FelE0R1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2VOD5v_G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lain%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BPython%255Dwith%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25AA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2582%25E3%2582%258B%25E7%25AF%2584%25E5%259B%25B2%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E8%25A8%2588%25E6%25B8%25AC%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwX1JOOHJTY0RJMUg4MW9nT0RxZDdaSXI3OG05RGdJS19FelE0R1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fukazaemon/articles/1eef820cfebad6",
          "author": "Fukahire",
          "description": "概要\n本記事ではキャラクターアニメーションにおいて重要なInverse Kinematics(IK)について紹介します。自分の学習用に執筆したため、一部間違い等が存在する可能性がございます。何かございましたらご一報いただけると幸いです。\n\nDeep Learningでキャラクターアニメーションを扱う際に、前処理・後処理用のPythonスクリプトを書いているので、foot skatingの修正用などに簡単なInverse Kinematicsアルゴリズムを書きました。この記事の3D Plotはこちらで実装しています。今後Jacobianを用いたFullbody IKなども実装予定です。...",
          "link": "https://zenn.dev/fukazaemon/articles/1eef820cfebad6",
          "publishedOn": "2023-01-19T14:51:44.000Z",
          "wordCount": 730,
          "title": "Inverse Kinematicsを用いたキャラクターの姿勢操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JowTxGnd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Fukahire%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Inverse%2520Kinematics%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E5%25A7%25BF%25E5%258B%25A2%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NeEVxVmZvXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4MTg0ZDEzNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JowTxGnd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Fukahire%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Inverse%2520Kinematics%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E5%25A7%25BF%25E5%258B%25A2%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NeEVxVmZvXy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4MTg0ZDEzNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takilog/articles/5f9163b293133f",
          "author": "たきろぐ",
          "description": "TL; DR\n\nyfinanceを使ってS&P500の毎月の評価額と日本円⇔ドルの為替情報を取得した\n理想状況（手数料・税金なし）で毎月一定の日本円をS&P500に積み上げたときの評価額をプロットした\n自分で最強の資産運用バックテストを書こう\n\n\n 背景\nKindle版でSoft Skillsの第1版を昔読んだのですが、第2版を最近紙で入手しました。心穏やかに生活するには投資も大事だな、と思って記事と書き捨てのスクリプトを書きました。\nhttps://amzn.to/3CVAJAk\n資産運用の真面目な話はこちらの記事を読んでください。\nhttps://hayatoit...",
          "link": "https://zenn.dev/takilog/articles/5f9163b293133f",
          "publishedOn": "2023-01-19T13:29:55.000Z",
          "wordCount": 440,
          "title": "[Package] yfinanceを使ったS&P500の簡単なバックテスト（つみたて投資）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5mDSxlXI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BPackage%255D%2520yfinance%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FS%2526P500%25E3%2581%25AE%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25EF%25BC%2588%25E3%2581%25A4%25E3%2581%25BF%25E3%2581%259F%25E3%2581%25A6%25E6%258A%2595%25E8%25B3%2587%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5mDSxlXI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BPackage%255D%2520yfinance%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FS%2526P500%25E3%2581%25AE%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25EF%25BC%2588%25E3%2581%25A4%25E3%2581%25BF%25E3%2581%259F%25E3%2581%25A6%25E6%258A%2595%25E8%25B3%2587%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zYkVBM3EtLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzY2JlMWNiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/21f0d613b7c441",
          "author": "osn_Lofi",
          "description": "金融庁の電子閲覧サイトEDINETからAPIを使って、複数のJSONファイルを取得しようとした際に、次のエラーがでました。この解決方法について、記事に残します。\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\nちなみにEDINETからJSONファイルを取得するコードはこんな感じ。\nこのコードを回しているときにエラーが出たのです。\nfor day in day_list:\n    url = \"https://disclosure.edinet-fsa.go.jp/api/v1/documents.json\"\n    p...",
          "link": "https://zenn.dev/robes/articles/21f0d613b7c441",
          "publishedOn": "2023-01-19T13:15:36.000Z",
          "wordCount": 326,
          "title": "JSONDecodeError: Expecting value: line 1 column 1 (char 0)の解決方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TAD3n-Fz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:JSONDecodeError%253A%2520Expecting%2520value%253A%2520line%25201%2520column%25201%2520%2528char%25200%2529%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TAD3n-Fz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:osn_Lofi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:JSONDecodeError%253A%2520Expecting%2520value%253A%2520line%25201%2520column%25201%2520%2528char%25200%2529%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1kTFVlMFdPNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryuuuuuu/articles/ae6ed94118c665",
          "author": "りゅう",
          "description": "Escape from tarkovというゲームをやっているときにEFT marketというサイトにアイテム名を入れて自動的に検索させる機能を作ってみたくなったので作ってみました。\n\n 1. Web Driverのインストール\nseleniumを使うにはchromedriver.exeをファイルになければならないのでChromeDriverにアクセスし、Chromeと同じバージョンのファイルをインストールします。\n※Chromeバージョンの確認方法は「設定」→「Chromeについて」から確認できます。\n\n 2. Seleniumのインストール\n以下を実行しSeleniumをインストールし...",
          "link": "https://zenn.dev/ryuuuuuu/articles/ae6ed94118c665",
          "publishedOn": "2023-01-19T12:32:38.000Z",
          "wordCount": 339,
          "title": "Seleniumを使ってWeb操作を自動化してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wJ4qCUi9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258A%25E3%2582%2585%25E3%2581%2586%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Selenium%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Web%25E6%2593%258D%25E4%25BD%259C%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yaFVoU0s1cS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxZGM2ZTI3NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wJ4qCUi9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%258A%25E3%2582%2585%25E3%2581%2586%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Selenium%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Web%25E6%2593%258D%25E4%25BD%259C%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0yaFVoU0s1cS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxZGM2ZTI3NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shin1007/articles/dee323f5f2d053",
          "author": "shin1007",
          "description": "Winotifyを利用しよう！\nhttps://github.com/versa-syahptr/winotify\n以下のような感じで、通知センターに登録されるタイプの通知を出すことができます。\n\n\n インストール\npip install winotify\n\n 利用法\n\nimport pathlib\n\nimport winotify\n\ntoast = winotify.Notification(app_id=\"<YOUR_APP_NAME>\",\n                              icon=pathlib.Path(\"icon.png\").reso...",
          "link": "https://zenn.dev/shin1007/articles/dee323f5f2d053",
          "publishedOn": "2023-01-19T08:34:25.000Z",
          "wordCount": 211,
          "title": "PythonでWindowsの通知を出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bhXotsDk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin1007%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7Windows%25E3%2581%25AE%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUg4dkpGZlgxTi1pQXh2VHRsbUhRZ2g5ekt0ZWRmLWF0NzNXcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bhXotsDk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin1007%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%25E3%2581%25A7Windows%25E3%2581%25AE%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUg4dkpGZlgxTi1pQXh2VHRsbUhRZ2g5ekt0ZWRmLWF0NzNXcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/a455e5ae68853f",
          "author": "Web Life CH",
          "description": "【１Django インストール】\nYouTube: https://youtu.be/SXXtbxF6WDg\nhttps://youtu.be/SXXtbxF6WDg\n今回から「Django」を使ってRest APIを作成してきます。\n前回の基礎編で「venv」で仮想環境を作成した方は、\nそのまま同じ仮想環境を使用しても大丈夫です。\nまたは同じ方法で新しくプロジェクトを作成しても問題ありません。\n「Anaconda Navigator」で仮想環境を作成していて、\n「base」の環境を使用している方は、\n左下の「create」から新しく仮想環境の作成をお願いします。\n仮想環境の作成がで...",
          "link": "https://zenn.dev/web_life_ch/articles/a455e5ae68853f",
          "publishedOn": "2023-01-19T05:04:01.000Z",
          "wordCount": 125,
          "title": "【Django】Pythonで作るRest API【１Django インストール】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5Ls9cv-e--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591Django%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5Ls9cv-e--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Django%25E3%2580%2591Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BRest%2520API%25E3%2580%2590%25EF%25BC%2591Django%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ced10959010e17",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-097 A - Colorful Transceivers\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c, d = getIntMap()\n\n    print('Yes' if abs(a - c) <= d or (abs(a - b)\n          <= d and abs(c - b) <= d) else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ced10959010e17",
          "publishedOn": "2023-01-19T04:48:53.000Z",
          "wordCount": 326,
          "title": "［AtCoder］ABC-097｜A - Colorful Transceivers",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j95uz5zl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-097%25EF%25BD%259CA%2520-%2520Colorful%2520Transceivers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j95uz5zl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-097%25EF%25BD%259CA%2520-%2520Colorful%2520Transceivers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a7db6dec39811e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-097 B - Exponential\n\n\n\n 提出結果\nimport math\n\n\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    r = 0\n    if x == 1:\n        r = 1\n    else:\n        for i in range(2, int(math.pow(x, 1 / 2)) + 1):\n            y = i ** 2\n            r = y if y > r else r\n     ...",
          "link": "https://zenn.dev/hyperdb/articles/a7db6dec39811e",
          "publishedOn": "2023-01-19T04:48:53.000Z",
          "wordCount": 428,
          "title": "［AtCoder］ABC-097｜B - Exponential",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9dmfn_Vd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-097%25EF%25BD%259CB%2520-%2520Exponential%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9dmfn_Vd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-097%25EF%25BD%259CB%2520-%2520Exponential%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kimurayut/articles/5d270dcfcd9053",
          "author": "きむら",
          "description": "要約\n\nエンジニア向けのニュースアプリをFlutterで作った。\n毎日Zenn、Qiita、noteやそのほか海外のテックメディアを開くのが面倒。\nRSSフィードで登録していくのもいいが面倒だし、時に不要な情報もある。\n個人に最適化されたニュースを提供し、エンジニアの日々の情報収集を効率化させることを目的とした個人開発アプリを作ることにした。\nスマホアプリ開発言語はFlutter,バックエンド言語はPython、インフラはGCPのCloud FunctionsとFirebaseを利用。\n\n\n 背景と課題\nわたしたちエンジニアは毎日チェックすべき情報が多すぎる。毎日Zenn、Qiita...",
          "link": "https://zenn.dev/kimurayut/articles/5d270dcfcd9053",
          "publishedOn": "2023-01-19T03:45:12.000Z",
          "wordCount": 400,
          "title": "エンジニア向けのニュースアプリを作った【個人開発】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---ToTOqvA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2582%2580%25E3%2582%2589%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01ZUFpMW1GZi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkzYzUzZjUxYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---ToTOqvA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2582%2580%25E3%2582%2589%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01ZUFpMW1GZi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkzYzUzZjUxYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/maguro_alterna/articles/f5a52f1cb8b1e7",
          "author": "マグロ",
          "description": "挨拶\nqiitaにも同様の投稿をしています。\nhttps://qiita.com/maguro-alternative/items/6f57d4cc6c9923ba6a1d\nこんにちは。マグロです。\n以前記事にしたものの続編です。\nhttps://qiita.com/maguro-alternative/items/4a47de7725b5ee84b230\nLINE Notify対応版が完成したので、記事にします。\nhttps://github.com/maguro-alternative/discordfast\n順を追って解説できるように、記事をいくつか分割して解説します。\n今回は...",
          "link": "https://zenn.dev/maguro_alterna/articles/f5a52f1cb8b1e7",
          "publishedOn": "2023-01-19T01:48:03.000Z",
          "wordCount": 4690,
          "title": "DiscordとLINEをPython+FastAPI+Dockerで連携させる【その1】DiscordからLINEへテキストメッセージ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uiCYWVwh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%259E%25E3%2582%25B0%25E3%2583%25AD%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Discord%25E3%2581%25A8LINE%25E3%2582%2592Python%252BFastAPI%252BDocker%25E3%2581%25A7%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2580%2590%25E3%2581%259D%25E3%2581%25AE1%25E3%2580%2591Discord%25E3%2581%258B%25E3%2582%2589LINE%25E3%2581%25B8%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zVU5vLVltay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmYzliOWM1MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uiCYWVwh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%259E%25E3%2582%25B0%25E3%2583%25AD%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Discord%25E3%2581%25A8LINE%25E3%2582%2592Python%252BFastAPI%252BDocker%25E3%2581%25A7%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2580%2590%25E3%2581%259D%25E3%2581%25AE1%25E3%2580%2591Discord%25E3%2581%258B%25E3%2582%2589LINE%25E3%2581%25B8%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zVU5vLVltay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmYzliOWM1MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/3c91cd443e084c",
          "author": "nakamura196",
          "description": "概要\nJPCOARスキーマでは、XMLスキーマ定義を以下のリポジトリで公開してくださっています。スキーマの作成およびデータの公開を行っていただき、ありがとうございます。\nhttps://github.com/JPCOAR/schema\n本記事では、上記のスキーマを使ったxmlファイルのバリデーションを試してみたので、その備忘録です。（今回のようなバリデーションは初めてのため、不正確な用語や情報を含む可能性があります。申し訳ありません。）\nGoogle Colabのノートブックも用意しました。\nhttps://colab.research.google.com/github/nakam...",
          "link": "https://zenn.dev/nakamura196/articles/3c91cd443e084c",
          "publishedOn": "2023-01-18T16:37:10.000Z",
          "wordCount": 994,
          "title": "JPCOARスキーマを用いたxmlファイルのバリデーション",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--a2JgCZBh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JPCOAR%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fxml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--a2JgCZBh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JPCOAR%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259Fxml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/d60a989b1a3d6e",
          "author": "nakamura196",
          "description": "概要\n以下の記事で、jingtrangおよびrngファイルを用いたxmlファイルの検証を行いました。\nhttps://zenn.dev/nakamura196/articles/6d156ca1b0c09e\nこのjingtrangライブラリでは、xmlファイルからrngファイルを作成できるということで、試してみます。\nGoogle Colabのノートブックも用意しました。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/jingtrangを試す：作成編.ipynb\n\n rngファイルを作成す...",
          "link": "https://zenn.dev/nakamura196/articles/d60a989b1a3d6e",
          "publishedOn": "2023-01-18T12:16:35.000Z",
          "wordCount": 585,
          "title": "RELAX NGスキーマを操作するライブラリjingtrangを試す:rngファイルの作成編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CSxNnlEU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:RELAX%2520NG%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAjingtrang%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%253Arng%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CSxNnlEU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:RELAX%2520NG%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAjingtrang%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%253Arng%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/6d156ca1b0c09e",
          "author": "nakamura196",
          "description": "概要\nあるスキーマに従ったXMLファイルを作成する機会があったのですが、そのスキーマに合致したXMLファイルを作成できているか、確認する必要がありました。\n上記の要件に対して、RELAX NGスキーマを操作するライブラリjingtrangを使ってみましたので、その備忘録です。\nhttps://pypi.org/project/jingtrang/\nGoogle Colabのノートブックも用意しました。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/jingtrangを試す.ipynb\n\n ...",
          "link": "https://zenn.dev/nakamura196/articles/6d156ca1b0c09e",
          "publishedOn": "2023-01-18T12:01:17.000Z",
          "wordCount": 250,
          "title": "RELAX NGスキーマを操作するライブラリjingtrangを試す:検証編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oTCOEehC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:RELAX%2520NG%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAjingtrang%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%253A%25E6%25A4%259C%25E8%25A8%25BC%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oTCOEehC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:RELAX%2520NG%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAjingtrang%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%253A%25E6%25A4%259C%25E8%25A8%25BC%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/95f1f793bf2bb3",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-096 A - Day of Takahashi\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(a if b >= a else a - 1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/95f1f793bf2bb3",
          "publishedOn": "2023-01-18T08:04:32.000Z",
          "wordCount": 263,
          "title": "［AtCoder］ABC-096｜A - Day of Takahashi",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_NkU7aIl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-096%25EF%25BD%259CA%2520-%2520Day%2520of%2520Takahashi%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_NkU7aIl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-096%25EF%25BD%259CA%2520-%2520Day%2520of%2520Takahashi%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/37ef9e9d6f1b67",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-096 B - Maximum Sum\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getIntList()\n    k = getInt()\n\n    n.sort()\n    n.reverse()\n\n    for i in range(k):\n        n[0] = n[0] * 2\n\n    print(sum(n))\n\n\nif...",
          "link": "https://zenn.dev/hyperdb/articles/37ef9e9d6f1b67",
          "publishedOn": "2023-01-18T08:04:32.000Z",
          "wordCount": 347,
          "title": "［AtCoder］ABC-096｜B - Maximum Sum",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5acAqdcu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-096%25EF%25BD%259CB%2520-%2520Maximum%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5acAqdcu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-096%25EF%25BD%259CB%2520-%2520Maximum%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/673293374adf30",
          "author": "Web Life CH",
          "description": "【１０Class 継承】\nYouTube: https://youtu.be/QnnTucwIFt8\nhttps://youtu.be/QnnTucwIFt8\n今回はクラスの「継承」について解説します。\n\nmain.py\nclass Animal:\n  def __init__(self, animal):\n    self.animal = animal\n\n  def print_animal(self):\n    print(f'I am {self.animal}')\n\n# tama = Animal('cat')\n# tama.print_animal()\n\n# pochi ...",
          "link": "https://zenn.dev/web_life_ch/articles/673293374adf30",
          "publishedOn": "2023-01-18T06:25:11.000Z",
          "wordCount": 403,
          "title": "【Python】Webで使えるPython 基礎編【１０Class 継承】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---aYkJWFn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2590Class%2520%25E7%25B6%2599%25E6%2589%25BF%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---aYkJWFn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2591%25EF%25BC%2590Class%2520%25E7%25B6%2599%25E6%2589%25BF%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/72806b2c3bc82e",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回はLUKEをファインチューニングして、固有表現抽出タスク（Named Entity Recognition, NER）を解くモデルを作成していきたいと思います。\n作成したモデルはこちらのサイトで公開していますので、もしよろしければ使ってみてください。\n今回も初心者でもたった２ステップ（ステップ１：必要なライブラリのダウンロード、ステップ２：コードのコピペ）で簡単に使えるようにしてあります。\nhttps://huggingface.co/Mizuiro-sakura/luke-japanese-base-finetuned-ner\n...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/72806b2c3bc82e",
          "publishedOn": "2023-01-18T00:51:03.000Z",
          "wordCount": 2205,
          "title": "最強の言語モデルLUKEを固有表現抽出（NER）用にファインチューニングして公開してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MePDQRud--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABLUKE%25E3%2582%2592%25E5%259B%25BA%25E6%259C%2589%25E8%25A1%25A8%25E7%258F%25BE%25E6%258A%25BD%25E5%2587%25BA%25EF%25BC%2588NER%25EF%25BC%2589%25E7%2594%25A8%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MePDQRud--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABLUKE%25E3%2582%2592%25E5%259B%25BA%25E6%259C%2589%25E8%25A1%25A8%25E7%258F%25BE%25E6%258A%25BD%25E5%2587%25BA%25EF%25BC%2588NER%25EF%25BC%2589%25E7%2594%25A8%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/dai7/articles/04210d413e9f95",
          "author": "dai7",
          "description": "webフレームワークのソースコードリーディングの記録です。\nDjangoは量が多いのでまずは軽量フレームワークのbottleのソースコードを読んでみました。\nhttps://bottlepy.org/docs/dev/\n\n サンプルコード\nfrom bottle import route, run, template\n\n@route('/hello/<name>')\ndef index(name):\n    return template('<b>Hello {{name}}</b>!', name=name)\n\nrun(host='localhost...",
          "link": "https://zenn.dev/dai7/articles/04210d413e9f95",
          "publishedOn": "2023-01-17T17:57:58.000Z",
          "wordCount": 536,
          "title": "bottleソースコードリーディング　その１",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LRGQYtmV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dai7%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:bottle%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LRGQYtmV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dai7%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:bottle%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%2580%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nakamura196/articles/044b0ecacfaa63",
          "author": "nakamura196",
          "description": "概要\nWordをTEI/XMLファイルに変換する機会がありました。調べてみたところ、TEIGarage ConversionなどのTEI公式のツールに加えて、以下のTEI Publisherでの変換例が見つかりました。\nhttps://teipublisher.com/exist/apps/tei-publisher/test/test.docx.xml\n上記の例では、Wordのスタイル情報を中心に、TEIのタグに変換しているようだったので、この方法を試してみました。なお今回は、TEI Publisherとは独立して使用することを目的として、python-docxライブラリを使用しま...",
          "link": "https://zenn.dev/nakamura196/articles/044b0ecacfaa63",
          "publishedOn": "2023-01-17T14:21:36.000Z",
          "wordCount": 907,
          "title": "WordをTEI/XMLに変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--38ZA_39O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Word%25E3%2582%2592TEI%252FXML%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--38ZA_39O--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nakamura196%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Word%25E3%2582%2592TEI%252FXML%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/todoker/articles/2023-pynamodb-moto-testing-environment",
          "author": "株式会社トドケール",
          "description": "はじめに\nこんにちは。@hayata-yamamotoです。\nDynamoDB のようなリソースを用いてプロダクトを開発する際、ローカル用にエミュレーターを起動し、そこにテスト用のデータを詰め込んで利用することがあると思います。よくあるのはテストのために docker-compose.yml を書いて、docker compose up -d しテストを実行するパターンです。しかしこれは、徐々にサービスが大きくなり関連するリソースが増えてきた時に docker-compose.yml 自体のメンテナンスがめんどくさくなってくる問題を抱えていました。\n弊社では、この問題を少しでも緩和で...",
          "link": "https://zenn.dev/todoker/articles/2023-pynamodb-moto-testing-environment",
          "publishedOn": "2023-01-17T14:08:27.000Z",
          "wordCount": 1943,
          "title": "Moto と PynamoDB で DynamoDB を用いたAPIのテストを書く方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8oklLgH1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2588%25E3%2583%2589%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Moto%2520%25E3%2581%25A8%2520PynamoDB%2520%25E3%2581%25A7%2520DynamoDB%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FAPI%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zSllUMXA0Uy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5NDRlOWY2MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8oklLgH1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2588%25E3%2583%2589%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Moto%2520%25E3%2581%25A8%2520PynamoDB%2520%25E3%2581%25A7%2520DynamoDB%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FAPI%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1zSllUMXA0Uy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5NDRlOWY2MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/teasy/articles/django-csp-sample",
          "author": "teasy",
          "description": "はじめに\n年末年始の休暇に 体系的に学ぶ 安全なWebアプリケーションの作り方 という本を読みました。\nその中で OWASP ZAP という脆弱性診断ツールの使い方が紹介されていました。\nそこで、以前開発したサービスに対してOWASP ZAPでの脆弱性診断を行ったところ、Medium以上のリスクが一つ見つかり、それはContent-Security-Policy(CSP)のヘッダが未設定というものでした。\nそのサービスはDjangoを使って開発したので、それ向けのCSP設定ツールであるDjango-CSPを導入し、見つけたリスクに対処しました。\n以前開発したものは TCP Expos...",
          "link": "https://zenn.dev/teasy/articles/django-csp-sample",
          "publishedOn": "2023-01-17T11:31:26.000Z",
          "wordCount": 409,
          "title": "DjangoでのContent-Security-Policy設定方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YkQTn3BI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:teasy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%25E3%2581%25A7%25E3%2581%25AEContent-Security-Policy%25E8%25A8%25AD%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PUFd3Yk9mcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjMGVlZDQ5MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YkQTn3BI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:teasy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%25E3%2581%25A7%25E3%2581%25AEContent-Security-Policy%25E8%25A8%25AD%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1PUFd3Yk9mcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjMGVlZDQ5MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/1ad38df0348f67",
          "author": "Web Life CH",
          "description": "【９Class 作成】\nYouTube: https://youtu.be/FutAegjvK_k\nhttps://youtu.be/FutAegjvK_k\n今回は前回の概要を踏まえて「クラス」の作成を行います。\nクラス名の頭文字は大文字で設定します。\n下記コードの「tama」のようにクラスを使用して作成されたものは\n「クラスのインスタンス」と呼ばれたりします。\n「Animal」のクラスを実行する際には「()」内に引数を設定することができます。\nこちらを設定する際には、クラスに「init」を設定する必要があります。\n「init」の引数には「self」とインスタンス作成時に設定された引...",
          "link": "https://zenn.dev/web_life_ch/articles/1ad38df0348f67",
          "publishedOn": "2023-01-17T07:09:14.000Z",
          "wordCount": 239,
          "title": "【Python】Webで使えるPython 基礎編【９Class 作成】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hRuCT5Qg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2599Class%2520%25E4%25BD%259C%25E6%2588%2590%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hRuCT5Qg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2599Class%2520%25E4%25BD%259C%25E6%2588%2590%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e0c49690d9cc79",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-095 A - Something on It\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n\n    r = 700\n    for t in s:\n        if t == 'o':\n            r += 100\n    print(r)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e0c49690d9cc79",
          "publishedOn": "2023-01-17T04:44:09.000Z",
          "wordCount": 271,
          "title": "［AtCoder］ABC-095｜A - Something on It",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BRgBtNmi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-095%25EF%25BD%259CA%2520-%2520Something%2520on%2520It%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BRgBtNmi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-095%25EF%25BD%259CA%2520-%2520Something%2520on%2520It%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9d67d88392ddde",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-095 B - Bitter Alchemy\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntRow(N):\n    return [int(input()) for _ in range(N)]\n\n\ndef main():\n    n, x = getIntMap()\n    m = getIntRow(n)\n\n    m.sort()\n\n    c = len(m)\n    x -= sum(m)\n    c += x // m[0]\n\n    print...",
          "link": "https://zenn.dev/hyperdb/articles/9d67d88392ddde",
          "publishedOn": "2023-01-17T04:44:09.000Z",
          "wordCount": 353,
          "title": "［AtCoder］ABC-095｜B - Bitter Alchemy",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dDxatyra--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-095%25EF%25BD%259CB%2520-%2520Bitter%2520Alchemy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dDxatyra--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-095%25EF%25BD%259CB%2520-%2520Bitter%2520Alchemy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/skwbc/articles/rust_python_kmeans",
          "author": "skwbc",
          "description": "概要\n最近Rustの勉強を始めたのですが、以下の2点について実際どうなんだろうと思ったので、Rustを使って機械学習アルゴリズムを実装してPythonから呼び出すということを試してみました。\n\nPythonで実装すると遅い処理をRustで高速化できるか\n実装したアルゴリズムを簡単に並列化することが出来るか\n\nこの記事では、どのように実装したかについて説明した後、Python実装とRust実装の速度を実験により比較します。\nちなみに、前の記事の続きになりますが、この記事だけで完結するように書いてはいます。\n興味がありましたら前の記事も読んでみてください。\n\n 記事を読むにあたり注意して...",
          "link": "https://zenn.dev/skwbc/articles/rust_python_kmeans",
          "publishedOn": "2023-01-17T04:33:25.000Z",
          "wordCount": 9141,
          "title": "Rustを使って機械学習アルゴリズムを実装しPythonから呼び出す: k-meansクラスタリング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ics8rC8x--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:skwbc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Rust%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597Python%25E3%2581%258B%25E3%2582%2589%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%253A%2520k-means%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ics8rC8x--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:skwbc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Rust%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597Python%25E3%2581%258B%25E3%2582%2589%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%253A%2520k-means%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/negineko/articles/837c00debde591",
          "author": "negineko",
          "description": "!\nこの記事は書き途中です！\n\n\n 🍀 Django REST framework\nDjango REST frameworkはPythonで動作するREST APIの作成ツールです\n大元のWebアプリケーションフレームワークのDjangoを拡張したものになっています\n// TODO : REST APIについての説明\n\n 🖥 開発環境\n\nMacbook Pro (intel)\n\nOSX 13.1\n\n\nVS Code\n\n\n 📚 インストール\nPythonの仮想環境を作ってそこに、Djangoのアプリケーションを作成していきます\n$ python -m venv env\n$ source ...",
          "link": "https://zenn.dev/negineko/articles/837c00debde591",
          "publishedOn": "2023-01-17T04:11:52.000Z",
          "wordCount": 975,
          "title": "Django REST frameworkを使ってAPIを作成してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fciLu4bc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:negineko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%2520REST%2520framework%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6API%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN1JNNzlZanZ5eTVnemdUVGdSaHNQazQ1LVhsaWZCTUFES1FQTkdhUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fciLu4bc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:negineko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Django%2520REST%2520framework%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6API%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN1JNNzlZanZ5eTVnemdUVGdSaHNQazQ1LVhsaWZCTUFES1FQTkdhUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/n12dsk/articles/9e329f847755ec",
          "author": "だいすけ",
          "description": "matplotlib\npythonでグラフを描画するときに利用するライブラリがmatplotlibです。pythonは様々なデータ処理が得意なので、同じプログラムでグラフなど見える形でアウトプットできるのはありがたいです。GMTのような描画専用ソフトだと、プログラムで処理した結果を出力して、それを読み込んで描画するので、その手間がなくなるのがメリットかなと思います。\n\nとはいえ、見た目だけの調整が多いケースなどでは、描画部分だけをくり返し実行したいので、GMTも便利です。それぞれ使いどころを分けるのは大事ですね。\npythonでもjupyterlabを使えば、描画部分だけを繰り返し処...",
          "link": "https://zenn.dev/n12dsk/articles/9e329f847755ec",
          "publishedOn": "2023-01-16T16:23:44.000Z",
          "wordCount": 238,
          "title": "matplotlibでの日本語表示 on AWS Lambda",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zMnvtnpT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2581%2584%25E3%2581%2599%25E3%2581%2591%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:matplotlib%25E3%2581%25A7%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E8%25A1%25A8%25E7%25A4%25BA%2520on%2520AWS%2520Lambda%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1qNkZNbk41ZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliNzAxYzNiZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zMnvtnpT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2581%2584%25E3%2581%2599%25E3%2581%2591%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:matplotlib%25E3%2581%25A7%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E8%25A1%25A8%25E7%25A4%25BA%2520on%2520AWS%2520Lambda%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1qNkZNbk41ZC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliNzAxYzNiZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/401e35d7a12b24",
          "author": "Tanny",
          "description": "ブランドサイト等に掲載されている「取扱店舗」の情報をWEBスクレイピングで取得して、Googleマイマップで可視化したお話です。\n\n はじめに\nネット通販の普及により、何かお決まりのモノが必要なときは通販で購入することが多くなってきました。しかし、商品の実物を見たい時や、商品をネットで販売していない場合もありますよね。そんな時はメーカーのWEBサイトから「取扱店舗」とか「販売特約店」の一覧を探したりします。\nただ、店舗の位置が地図上にマッピングされていると便利なのですが、店名や住所の情報がずらっと並んでいるだけのことも多いですよね。この場合は住所を見て自宅近くのお店を探す必要があるので、...",
          "link": "https://zenn.dev/tanny/articles/401e35d7a12b24",
          "publishedOn": "2023-01-16T14:04:35.000Z",
          "wordCount": 1257,
          "title": "Beautiful Soupで店舗情報を取得してGoogleマップに表示する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VQj54GdM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tanny%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Beautiful%2520Soup%25E3%2581%25A7%25E5%25BA%2597%25E8%2588%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6Google%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fVUE0cUxGTC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VQj54GdM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tanny%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Beautiful%2520Soup%25E3%2581%25A7%25E5%25BA%2597%25E8%2588%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6Google%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fVUE0cUxGTC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/nskydiving/articles/2c3c0b78228c45",
          "author": "nskydiving",
          "description": "サーバーレスフレームワークとは、サーバーレスアプリケーションの開発、デプロイ、トラブルシューティング、セキュリティーを実現させるためのフレームワークです。\nサーバーレスフレームワークの選定で迷っている人のために、各フレームワークを比較しながらご紹介します。\n\n サーバーレスフレームワーク比較表\n\n\n\n\nServerless Framework\nChalice\nZappa\n\n\n\n\n公式サイト\n公式サイト\n公式サイト\n-\n\n\n言語\nNode.js, Python, Java, Ruby, Go, .NET\nPython\nPython\n\n\nGitHub スター数\n44.1k\n9.4k\n2.2k...",
          "link": "https://zenn.dev/nskydiving/articles/2c3c0b78228c45",
          "publishedOn": "2023-01-16T13:51:36.000Z",
          "wordCount": 260,
          "title": "サーバーレスフレームワーク比較（Serverless Framework, Chalice, Zappa）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s5X2MxgA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nskydiving%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%2588Serverless%2520Framework%252C%2520Chalice%252C%2520Zappa%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ybWIwd3N1Vy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1NGM2MzczYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--s5X2MxgA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nskydiving%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%2588Serverless%2520Framework%252C%2520Chalice%252C%2520Zappa%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ybWIwd3N1Vy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1NGM2MzczYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shin_t_o_/articles/small-talker-setup",
          "author": "shin_t_o_",
          "description": "今まで実装中に詰まった部分をまさにつぶやきとしてTwitterに垂れ流していたが、ここ最近その内容をChatGPTに対して打ち込みつつある。\nそれで作業が以前より捗るようになったので、これを手入力ではなくマイクで入力したら面白いのでは？と思い着手してみた。SF映画のサポートAIみたいなイメージ。\n!\nただ、雑談を行うための情報をもっと与える必要がありそうという結論に至ったためこの記事は構成メモ的なものになります。この辺はまとめでも言及します。\n\n\n 前提\n\n 実行環境\n\nOS: Windows 10 Home 22H2\nwin ver: 10.0.19045.2486\nWSL ver: ...",
          "link": "https://zenn.dev/shin_t_o_/articles/small-talker-setup",
          "publishedOn": "2023-01-16T13:05:17.000Z",
          "wordCount": 655,
          "title": "Whisper+OpenAIで雑談AI的なものを作ろうとしたメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WyVb3jNi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin_t_o_%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Whisper%252BOpenAI%25E3%2581%25A7%25E9%259B%2591%25E8%25AB%2587AI%25E7%259A%2584%25E3%2581%25AA%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tNTJ4RTdCRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZjNmM2FlNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WyVb3jNi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin_t_o_%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Whisper%252BOpenAI%25E3%2581%25A7%25E9%259B%2591%25E8%25AB%2587AI%25E7%259A%2584%25E3%2581%25AA%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0tNTJ4RTdCRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZjNmM2FlNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/alcnaka/articles/1eca6622f121ed",
          "author": "alcnaka",
          "description": "Pythonを使ってDBを操作するときにSQLAlchmeyを使用することは多くあると思います。今回、既存のDBのテーブル定義をAutomapを利用して自動で引っ張って来たところ、電話番号（市外局番）という名前のカラムにPythonからアクセスできませんでした。\n情報が見つけられず数時間ほどハマっていたのですが、テーブルの列名→クラスの属性名のマッピング時のイベントを補足し、列名を置換することでいい感じにマッピングできるようです。\n結局公式ドキュメントに書いてある内容だったので、困ったときに公式ドキュメントを読む事の大事さを再認識しました。\n\n\n 想定読者\n\nSQLAlchemyの基礎的...",
          "link": "https://zenn.dev/alcnaka/articles/1eca6622f121ed",
          "publishedOn": "2023-01-16T12:40:00.000Z",
          "wordCount": 431,
          "title": "SQLAlchemyのAutomapで日本語の列名を使う【Python3】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GfVaxlb0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:alcnaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SQLAlchemy%25E3%2581%25AEAutomap%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E5%2588%2597%25E5%2590%258D%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%2590Python3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14LVlwc1JoMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmVjODEwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--GfVaxlb0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:alcnaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SQLAlchemy%25E3%2581%25AEAutomap%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E5%2588%2597%25E5%2590%258D%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%2590Python3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS14LVlwc1JoMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmVjODEwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mom/articles/519466e9c7a22d",
          "author": "TechStar",
          "description": "Dockerファイルとdocker-compose.ymlの違い\nDockerfileは、Dockerイメージを構築するために使用される設定ファイルです。Dockerfileには、イメージに含まれるファイルやアプリケーションの設定などが記述されます。\nDocker Composeは、複数のDockerコンテナを組み合わせてアプリケーションを実行するためのツールです。docker-compose.ymlは、Docker Composeを使用するための設定ファイルで、複数のコンテナ間の関係や環境変数などが記述されます。\nつまり、Dockerfileは単独のDockerイメージを作るための...",
          "link": "https://zenn.dev/mom/articles/519466e9c7a22d",
          "publishedOn": "2023-01-16T11:41:59.000Z",
          "wordCount": 354,
          "title": "[Django] Dockerファイルとdocker-compose.ymlの違い",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0XiZsvQd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TechStar%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BDjango%255D%2520Docker%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A8docker-compose.yml%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd3VqeWpoTWdoSFNNRlZjRTd4QlNxZ2owdEd1MGtIellERHA2cVc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0XiZsvQd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TechStar%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BDjango%255D%2520Docker%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A8docker-compose.yml%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd3VqeWpoTWdoSFNNRlZjRTd4QlNxZ2owdEd1MGtIellERHA2cVc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryuhat/articles/1c5b9a50bdf669",
          "author": "ryuhat",
          "description": "物体検出で得た座標をアニメーションした。\n\n データの準備\n物体id, (x, y, z)の各座標のデータフレームを用意\n(randam生成でもOK)\n\n 画像でplot\n各idごとにx, y, zの座標をプロットし、最後にshow()でグラフを表示することで、各idごとの軌跡を3Dプロットする。\nimport matplotlib.pyplot as plt\n\nfor id in data[\"id\"].unique():\n    x = data[data[\"id\"] == id][\"x\"]\n    y = data[data[\"id\"] == id][\"y\"]\n    z = dat...",
          "link": "https://zenn.dev/ryuhat/articles/1c5b9a50bdf669",
          "publishedOn": "2023-01-16T10:02:59.000Z",
          "wordCount": 893,
          "title": "matplotlibで複数の物体の軌跡を3Dアニメーション",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZxcqxCwr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuhat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:matplotlib%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E7%2589%25A9%25E4%25BD%2593%25E3%2581%25AE%25E8%25BB%258C%25E8%25B7%25A1%25E3%2582%25923D%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03cVVLcGhQMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4MTAxN2UzOTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ZxcqxCwr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuhat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:matplotlib%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E7%2589%25A9%25E4%25BD%2593%25E3%2581%25AE%25E8%25BB%258C%25E8%25B7%25A1%25E3%2582%25923D%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03cVVLcGhQMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4MTAxN2UzOTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shiro46/articles/ab5b0734e0cda8",
          "author": "SHIRO",
          "description": "概要\npythonでグラフを描くとき、私はよくseabornを使っています。\nseabornの文法では見た目の整ったグラフを簡単に作ることができるので、この書き方に慣れるとmatplotlibをそのまま使うのが億劫になります。\n公式サイトの使用例を見るとたくさん種類があり、これだけでも充分なのですが、たまにマイナーな図を描きたくなったときに実装されていないことがあります。\n今回は、2種類のグラフ (スロープチャート、ダンベルチャート) をseabornと同様の文法で書けるライブラリを作成しました。\nなお、このライブラリは↓で紹介しているのと同じライブラリの中にまとめて実装しています。...",
          "link": "https://zenn.dev/shiro46/articles/ab5b0734e0cda8",
          "publishedOn": "2023-01-16T09:00:00.000Z",
          "wordCount": 444,
          "title": "【python】seabornにないグラフをseabornっぽく描けるライブラリを作りました (スロープチャート/ダンベルチャート)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BqcI0Awy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SHIRO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590python%25E3%2580%2591seaborn%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%2584%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592seaborn%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E6%258F%258F%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2528%25E3%2582%25B9%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2597%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2588%252F%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2599%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NUFpOOFNMOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BqcI0Awy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SHIRO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590python%25E3%2580%2591seaborn%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%2584%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592seaborn%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E6%258F%258F%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2528%25E3%2582%25B9%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2597%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2588%252F%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2599%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NUFpOOFNMOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/a8db06a1fc76bd",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回は現在（２０２３年１月）、世界最高精度を有している言語モデルであるLUKEをファインチューニングして、Question-Answeringタスク（SQuAD、狭義の質問応答）を行ってみようと思います。\n作成したモデルはこちらのサイトで公開していますので、もしよろしければ使ってみてください。\n今回も初心者でもたった２ステップ（ステップ１：必要なライブラリのダウンロード、ステップ２：コードのコピペ）で簡単に使えるようにしてあります。\nこのモデルを使えばチャットボットなども作成することが可能です。\nhttps://huggingface...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/a8db06a1fc76bd",
          "publishedOn": "2023-01-16T06:59:48.000Z",
          "wordCount": 3062,
          "title": "最強の言語モデル(LUKE)をQAタスク用にファインチューニングして公開してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--T61OaYkf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2528LUKE%2529%25E3%2582%2592QA%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E7%2594%25A8%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--T61OaYkf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2528LUKE%2529%25E3%2582%2592QA%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E7%2594%25A8%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e80063c0a3b75b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-094 A - Cats and Dogs\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, x = getIntMap()\n\n    print('YES' if x >= a and x - a <= b else 'NO')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e80063c0a3b75b",
          "publishedOn": "2023-01-16T05:40:40.000Z",
          "wordCount": 281,
          "title": "［AtCoder］ABC-094｜A - Cats and Dogs",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ylPDjt-N--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-094%25EF%25BD%259CA%2520-%2520Cats%2520and%2520Dogs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ylPDjt-N--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-094%25EF%25BD%259CA%2520-%2520Cats%2520and%2520Dogs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8f0c863bab4806",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-094 B - Toll Gates\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m, x = getIntMap()\n    a = getIntList()\n\n    l = len([i for i in a if i < x])\n    r = len([i for i in a if i > ...",
          "link": "https://zenn.dev/hyperdb/articles/8f0c863bab4806",
          "publishedOn": "2023-01-16T05:40:39.000Z",
          "wordCount": 399,
          "title": "［AtCoder］ABC-094｜B - Toll Gates",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hXuFktCS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-094%25EF%25BD%259CB%2520-%2520Toll%2520Gates%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hXuFktCS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-094%25EF%25BD%259CB%2520-%2520Toll%2520Gates%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sosa/books/fc158cb8eb6bc8",
          "author": "sosa",
          "description": "Google Search Consoleの検査順位のデータ（EXCELファイル）をダウンロードし独自に集計するアプリの作り方です。\n対象\nブログをGoogle Search Consoleに登録してる人が基本的に対象ですが。ExcelファイルをPythonで処理して公開するアプリの参考になると思います。\n\n今回作ったもの\nイチゲブログのGoogle Search Console検索データ分析\nhttps://miyamiko-ichige-console2-ichige-sconsole-7jz29a.streamlit.app/\n必要な知識\nPythonの基本、ライブラリpandas、公開する場合Git、GitHubの基本\n\n必要な環境\nPythonが動く環境、エディタ（VSCodeなど）\n私の場合Windows11、PythonはAnacondaをインストールしてJupiterNotebookで開発。エディタとしてVSCodeも併用。\nExcelがパソコンに入ってなくても大丈夫です。Excelの中身を見るのは無料の Web 版 Officeで見られます。",
          "link": "https://zenn.dev/sosa/books/fc158cb8eb6bc8",
          "publishedOn": "2023-01-16T05:09:26.000Z",
          "wordCount": 116,
          "title": "【Python】Google Search ConsoleのエクセルデータをStreamlitで表示する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uxYq2RXV--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xZGRlYTUyZWIyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uxYq2RXV--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xZGRlYTUyZWIyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/5a9f50121ae272",
          "author": "Web Life CH",
          "description": "【８Class 概要】\nYouTube: https://youtu.be/5YzL3rBvbFU\nhttps://youtu.be/5YzL3rBvbFU\n今回はPythonの「クラス」の概要について解説します。\nこちらはJSにもあるのですが、\nクラスを使用すると似たような機能を持っている\n変数や関数・引数を1つのグループにまとめることが可能です。\n\nmain.py\ntama = 'cat'\npochi = 'dog'\npiyo = 'bird'\n\ndef print_tama():\n  print(tama)\n\ndef print_pochi():\n  print(pochi)\n...",
          "link": "https://zenn.dev/web_life_ch/articles/5a9f50121ae272",
          "publishedOn": "2023-01-16T03:49:38.000Z",
          "wordCount": 295,
          "title": "【Python】Webで使えるPython 基礎編【８Class 概要】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rscOLv9g--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2598Class%2520%25E6%25A6%2582%25E8%25A6%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rscOLv9g--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2598Class%2520%25E6%25A6%2582%25E8%25A6%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/dataclasses_pydanic_attrs",
          "author": "Tamtam",
          "description": "FastAPIを用いた開発を最近始めましたが、PythonでDDDでいうValueObjectなどを定義するときに人によってDataclassesのdataclassであったりpydantic.dataclassesのdataclassやBaseModelを使っているのを目にしました。\nここで、自分の開発では何が一番適切なのかが不明確だったので調べることにしました。\n具体的なそれぞれのライブラリの説明は割愛しますが各ドキュメントのURLは以下の通りです。\n\nAttrs\nDataclasses\nPydantic\n\n\n 結論\n前提として筆者はFastAPIを用いた開発をしていますが、基本的に...",
          "link": "https://zenn.dev/fitness_densuke/articles/dataclasses_pydanic_attrs",
          "publishedOn": "2023-01-15T16:44:41.000Z",
          "wordCount": 494,
          "title": "Attrs と Dataclasses と Pydantic の使いわけを調べてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SE2xYxYs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tamtam%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Attrs%2520%25E3%2581%25A8%2520Dataclasses%2520%25E3%2581%25A8%2520Pydantic%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%258F%25E3%2581%2591%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1DemQ4bmdKSS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SE2xYxYs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tamtam%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Attrs%2520%25E3%2581%25A8%2520Dataclasses%2520%25E3%2581%25A8%2520Pydantic%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%258F%25E3%2581%2591%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1DemQ4bmdKSS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kyasbal/articles/281cc7b5ce2f82",
          "author": "kyasbal",
          "description": "https://atcoder.jp/contests/abc285/tasks/abc285_e\n解説のDPは少し自分にはわかりにくかったので、自分が解いた方法をまとめておきます。\n\n サイクルを考える\n次の曜日を考えなくてはならない可能性があるので、簡単にするため、週の最初は休日であると仮定します。\nこの仮定があっても、求められる最大値は変化しません。\nこれは、ある並びの休日、平日(D)をそのまま横にスライドしていって(E)も、得られる生産量が変化しないからです。\nD_i=\\{Rest,Work\\}\\\\\nE=\\{D_p,D_{p+1},\\cdots,D_{N-1},D_N,D_1,D...",
          "link": "https://zenn.dev/kyasbal/articles/281cc7b5ce2f82",
          "publishedOn": "2023-01-15T15:38:00.000Z",
          "wordCount": 1210,
          "title": "ABC 285 E Work or Rest 解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oR_7Srkb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kyasbal%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC%2520285%2520E%2520Work%2520or%2520Rest%2520%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03QjlWTldyRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZDMxZmE4ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oR_7Srkb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kyasbal%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ABC%2520285%2520E%2520Work%2520or%2520Rest%2520%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS03QjlWTldyRi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZDMxZmE4ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ymd_h/articles/38315860607c53",
          "author": "山田(ymd)",
          "description": "1. はじめに\n量子回路学習(QCL: Quantum Circuit Learning)は、K. Mitarai等によって提案[1]された量子機械学習の手法で、以下のようにパラメータ \\theta、入力データ x に基づくユニタリーゲートを適用した量子状態 |\\psi(\\theta, x)\\rangle を観測して得られた値を（古典）機械学習の回帰や分類に用いる手法です。\n |\\psi(\\theta, x)\\rangle = \\rm{U}(\\theta)\\rm{U}(x)| 0\\rangle ^{\\otimes N} \n\\rm{U}(x) はユニタリーな入力ゲート、\\rm{U}(\\...",
          "link": "https://zenn.dev/ymd_h/articles/38315860607c53",
          "publishedOn": "2023-01-15T14:07:02.000Z",
          "wordCount": 2232,
          "title": "量子回路学習(QCL)の回路実装を読み解く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--acrKU3ra--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E7%2594%25B0%2528ymd%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2587%258F%25E5%25AD%2590%25E5%259B%259E%25E8%25B7%25AF%25E5%25AD%25A6%25E7%25BF%2592%2528QCL%2529%25E3%2581%25AE%25E5%259B%259E%25E8%25B7%25AF%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XTmt4MXNhQi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJhN2RkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--acrKU3ra--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E7%2594%25B0%2528ymd%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E9%2587%258F%25E5%25AD%2590%25E5%259B%259E%25E8%25B7%25AF%25E5%25AD%25A6%25E7%25BF%2592%2528QCL%2529%25E3%2581%25AE%25E5%259B%259E%25E8%25B7%25AF%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XTmt4MXNhQi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJhN2RkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hisasy/articles/10a96facdf61f5",
          "author": "hisasy",
          "description": "実装内容\nローカルで作成したAPIをGitlabにプッシュ・マージされたらCI/CDが走り、自動デプロイされる。\nGCPのCloud Buildを経由してCloud Runにデプロイします。\n※次回の記事でCloud RunとCloud SQL(PostgreSQL)の接続を行います。\n\n 前提条件\n\nFastAPI(Python)でAPIを実装している。\nGitlabを使用している。\nGCPに登録している。\n\n\n 全体の流れ\n\nDockerfileを作成する。\ncloudbuild.yamlを作成する。\n.gitlab-ci.ymlを作成する。\n\n\n 1. Dockerfileを作...",
          "link": "https://zenn.dev/hisasy/articles/10a96facdf61f5",
          "publishedOn": "2023-01-15T14:06:34.000Z",
          "wordCount": 712,
          "title": "FastAPI × GitLab × GCPで自動デプロイ(CI/CD)を構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nUCtarDX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hisasy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:FastAPI%2520%25C3%2597%2520GitLab%2520%25C3%2597%2520GCP%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%2528CI%252FCD%2529%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IT2ZfNmhhby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkNDZkYmIwZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nUCtarDX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hisasy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:FastAPI%2520%25C3%2597%2520GitLab%2520%25C3%2597%2520GCP%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%2528CI%252FCD%2529%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1IT2ZfNmhhby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkNDZkYmIwZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shiro46/articles/0b1df96a1bab7a",
          "author": "SHIRO",
          "description": "概要\npythonでグラフを描くとき、私はよくseabornを使っています。\nseabornではhueを指定するだけでプロットの色を系列ごとに変えられて、簡単に見た目の整ったグラフを作ることができます🙌\nただし、系列が増えすぎると次のような課題が出てきます。\n\n同じ色/近い色 の区別ができない\n注目したい系列が目立たない\n\n\n色が多くなり、パッと見て注目ポイントがわからない図\n今回は、系列が多いときに一部の系列のみカラー表示とすることで、注目したい系列をハイライトさせるライブラリを作成しました。\n\n2色(+灰色)にすることで、注目したいポイントが目立つようになった図\n\n 使い方\nイン...",
          "link": "https://zenn.dev/shiro46/articles/0b1df96a1bab7a",
          "publishedOn": "2023-01-15T13:10:40.000Z",
          "wordCount": 358,
          "title": "【python】seabornで系列数が多い時にハイライト表示したグラフが描けるライブラリを作りました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TG0EsHm8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SHIRO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590python%25E3%2580%2591seabornw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NUFpOOFNMOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TG0EsHm8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SHIRO%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590python%25E3%2580%2591seabornw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NUFpOOFNMOS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/marusho/articles/6001363d758f2a",
          "author": "marusho",
          "description": "!\n本記事は 2021/07/07 に自ブログに作成された記事のクロスポストです\n\n\n はじめに\n定期的にAPIからデータを取得して、保存したい。\nよくあるケースですが、意外と環境を用意したりcronを組んだりと大変ですよね。\n扱うデータが少なかったり、SpreadSheetで管理する場合はGASで実装するのが一番楽な印象です。\n拡張性も考えると、Cloud Functionsで取得してStorageに溜め込むのが良さそうです。定期実行はCloud Schedulerで手軽に行えます。\n以下の記事のソースコードはGithubで公開してますので、参考にして頂けたら幸いです。\n\n Cloud...",
          "link": "https://zenn.dev/marusho/articles/6001363d758f2a",
          "publishedOn": "2023-01-15T12:30:00.000Z",
          "wordCount": 1042,
          "title": "Cloud Functionsで外部APIからデータを定期取得しCloud Storageに保存する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cogFoM2---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:marusho%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Cloud%2520Functions%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8API%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%25AE%259A%25E6%259C%259F%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597Cloud%2520Storage%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hhRlhRZTBFaEhsYlVpcmFrWlF3Smc1Y3FXbW5teHRNdDQ4bklKPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--cogFoM2---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:marusho%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Cloud%2520Functions%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8API%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%25AE%259A%25E6%259C%259F%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597Cloud%2520Storage%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hhRlhRZTBFaEhsYlVpcmFrWlF3Smc1Y3FXbW5teHRNdDQ4bklKPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/asumalab/articles/dae31d7ccfd3e9",
          "author": "あすま自動化研究所",
          "description": "見つけたサンプルでは動画再生速度が定速にならない。\n動画のオブジェクトの中にfpsがあったのでこれを使ってwait時間を調整。\nimport cv2\nimport pafy\n\n\n# Choose a YouTube URL (paste from viewing a video on the web)\nurl=[\"https://www.youtube.com/watch?v=jzbG__vsD2w\",\n     \"https://www.youtube.com/watch?v=tWoo8i_VkvI\"\n    ]\n# Use pafy to get the video stream u...",
          "link": "https://zenn.dev/asumalab/articles/dae31d7ccfd3e9",
          "publishedOn": "2023-01-15T11:07:12.000Z",
          "wordCount": 511,
          "title": "pafy と youtube_dl で動画再生",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xSQRYXNs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2582%25E3%2581%2599%25E3%2581%25BE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E7%25A0%2594%25E7%25A9%25B6%25E6%2589%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pafy%2520%25E3%2581%25A8%2520youtube_dl%2520%25E3%2581%25A7%25E5%258B%2595%25E7%2594%25BB%25E5%2586%258D%25E7%2594%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkRNTUlQUWpNb2VHUXFmQ25faFhTS2sxWUFHRW9DODJ4eHlITUdydz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xSQRYXNs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2582%25E3%2581%2599%25E3%2581%25BE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E7%25A0%2594%25E7%25A9%25B6%25E6%2589%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pafy%2520%25E3%2581%25A8%2520youtube_dl%2520%25E3%2581%25A7%25E5%258B%2595%25E7%2594%25BB%25E5%2586%258D%25E7%2594%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkRNTUlQUWpNb2VHUXFmQ25faFhTS2sxWUFHRW9DODJ4eHlITUdydz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shundeveloper/articles/059ff1543946c5",
          "author": "ShunDev",
          "description": "GPT Indexとは\nGPT Indexは、LLMを使用して作成されたデータ構造のセットから成り立っているものです。このLLMを使用してトラバースすることでクエリに答えることができます。\n私が所信表明データを学習させ質問したところ以下のようなやりとりが出来ました。\nindex.query(\"<構造改革を主張した人物>?\")\n# response='\\n小泉内閣'\n人物ではないですがどの情報か的確に判断しています.\n\n 使い方\nworking dirにdata/を作成してください. その中に適当な文章データを入れます. データの区切りがわかるようにすると精度が良くなったの...",
          "link": "https://zenn.dev/shundeveloper/articles/059ff1543946c5",
          "publishedOn": "2023-01-15T08:53:05.000Z",
          "wordCount": 457,
          "title": "[AI・機械学習] GPT Indexを体験してきたので感想やかかった費用を書いていく",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B268yAdI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BAI%25E3%2583%25BB%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%255D%2520GPT%2520Index%25E3%2582%2592%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2584%259F%25E6%2583%25B3%25E3%2582%2584%25E3%2581%258B%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E8%25B2%25BB%25E7%2594%25A8%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B268yAdI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ShunDev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255BAI%25E3%2583%25BB%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%255D%2520GPT%2520Index%25E3%2582%2592%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2584%259F%25E6%2583%25B3%25E3%2582%2584%25E3%2581%258B%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E8%25B2%25BB%25E7%2594%25A8%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1OUUZBdUZNUy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yusukekato/articles/d5a389f7dbdad3",
          "author": "Yusuke Kato",
          "description": "はじめに\nこの記事では、書籍『シェル・ワンライナー160本ノック』の問題をPythonワンライナーで解いてみます。シェル芸もPythonも素人ではありますが、精一杯取り組んでいきますので、何卒よろしくお願いいたします。今回は第1章の問題を解きます。\n\n 対象読者\nシェル芸とPythonを愛する人々に読んでいただけますと幸いです。\n\n 注意\n私のPythonワンライナーが正しい保証はありませんので、ご注意くださいませ。\n\n 書籍情報\n書籍『シェル・ワンライナー160本ノック』のページです。\nhttps://gihyo.jp/book/2021/978-4-297-12267-6\n書籍『...",
          "link": "https://zenn.dev/yusukekato/articles/d5a389f7dbdad3",
          "publishedOn": "2023-01-15T07:34:09.000Z",
          "wordCount": 992,
          "title": "Pythonワンライナーで解く『シェル・ワンライナー160本ノック』第1章（問題1から問題11まで）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kCpjlmem--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yusuke%2520Kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E3%2580%258E%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC160%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2580%258F%25E7%25AC%25AC1%25E7%25AB%25A0%25EF%25BC%2588%25E5%2595%258F%25E9%25A1%258C1%25E3%2581%258B%25E3%2582%2589%25E5%2595%258F%25E9%25A1%258C11%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS13UmF1LVpLNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwNGY3MGUxMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kCpjlmem--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yusuke%2520Kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Python%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E3%2580%258E%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC160%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2580%258F%25E7%25AC%25AC1%25E7%25AB%25A0%25EF%25BC%2588%25E5%2595%258F%25E9%25A1%258C1%25E3%2581%258B%25E3%2582%2589%25E5%2595%258F%25E9%25A1%258C11%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS13UmF1LVpLNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwNGY3MGUxMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/7d5323318106de",
          "author": "Web Life CH",
          "description": "【７関数】\nYouTube: https://youtu.be/TTKz3i-hy8k\nhttps://youtu.be/TTKz3i-hy8k\n今回はPythonの「関数」の作り方について解説します。\n基本的にはJSと同じなのですが、\n「function」の代わりに「def」を使用します。\n\nmain.py\ndef print_msg(msg):\n  print(msg)\n\n# print_msg('hello')\n\ndef calc(a, b):\n  return a + b\n\nprint_msg(calc(2, 4))",
          "link": "https://zenn.dev/web_life_ch/articles/7d5323318106de",
          "publishedOn": "2023-01-15T07:24:59.000Z",
          "wordCount": 178,
          "title": "【Python】Webで使えるPython 基礎編【７関数】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--acmvgjWj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2597%25E9%2596%25A2%25E6%2595%25B0%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--acmvgjWj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2597%25E9%2596%25A2%25E6%2595%25B0%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e0521ad8b02d4b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-091 A - Two Coins\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    print('Yes' if a + b >= c else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e0521ad8b02d4b",
          "publishedOn": "2023-01-15T05:16:59.000Z",
          "wordCount": 264,
          "title": "［AtCoder］ABC-091｜A - Two Coins",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rD-XxiNk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-091%25EF%25BD%259CA%2520-%2520Two%2520Coins%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rD-XxiNk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-091%25EF%25BD%259CA%2520-%2520Two%2520Coins%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d94f58f3204935",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-092 A - Traveling Budget\n\n\n\n 提出結果\ndef getIntRow(N):\n    return [int(input()) for _ in range(N)]\n\n\ndef main():\n    a, b, c, d = getIntRow(4)\n\n    print((a if a < b else b) + (c if c < d else d))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d94f58f3204935",
          "publishedOn": "2023-01-15T05:16:58.000Z",
          "wordCount": 302,
          "title": "［AtCoder］ABC-092｜A - Traveling Budget",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EaSCqurD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-092%25EF%25BD%259CA%2520-%2520Traveling%2520Budget%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--EaSCqurD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-092%25EF%25BD%259CA%2520-%2520Traveling%2520Budget%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c5a4549da87fb7",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-092 B - Chocolate\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntRow(N):\n    return [int(input()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    d, x = getIntMap()\n    a = getIntRow(n)\n\n    c = 0\n    for i in...",
          "link": "https://zenn.dev/hyperdb/articles/c5a4549da87fb7",
          "publishedOn": "2023-01-15T05:16:58.000Z",
          "wordCount": 441,
          "title": "［AtCoder］ABC-092｜B - Chocolate",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tQYYMolV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-092%25EF%25BD%259CB%2520-%2520Chocolate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tQYYMolV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-092%25EF%25BD%259CB%2520-%2520Chocolate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a5ab5160ba27ad",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-093 A - abc of ABC\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n    s.sort()\n\n    print('Yes' if ''.join(s) == 'abc' else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/a5ab5160ba27ad",
          "publishedOn": "2023-01-15T05:16:57.000Z",
          "wordCount": 261,
          "title": "［AtCoder］ABC-093｜A - abc of ABC",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UW4kOwtn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-093%25EF%25BD%259CA%2520-%2520abc%2520of%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UW4kOwtn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-093%25EF%25BD%259CA%2520-%2520abc%2520of%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7e2529444bfe1f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-091 B - Two Colors Card Game\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef count(w, l):\n    c = 0\n    for s in l:\n        if s == w:\n            c += 1\n    return c\n\n\ndef main():\n    n = getInt()\n    s = getStringR...",
          "link": "https://zenn.dev/hyperdb/articles/7e2529444bfe1f",
          "publishedOn": "2023-01-15T05:16:57.000Z",
          "wordCount": 498,
          "title": "［AtCoder］ABC-091｜B - Two Colors Card Game",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---T9ZZH22--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-091%25EF%25BD%259CB%2520-%2520Two%2520Colors%2520Card%2520Game%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---T9ZZH22--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-091%25EF%25BD%259CB%2520-%2520Two%2520Colors%2520Card%2520Game%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/33fcec59713f2a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-093 B - Small and Large Integers\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, x = getIntMap()\n\n    if x >= (b - a) + 1:\n        for i in range(a, b + 1):\n            print(i)\n    else:\n        for i in range(a, a + x):\n            print(i...",
          "link": "https://zenn.dev/hyperdb/articles/33fcec59713f2a",
          "publishedOn": "2023-01-15T05:16:57.000Z",
          "wordCount": 432,
          "title": "［AtCoder］ABC-093｜B - Small and Large Integers",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vnecqzXf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-093%25EF%25BD%259CB%2520-%2520Small%2520and%2520Large%2520Integers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vnecqzXf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-093%25EF%25BD%259CB%2520-%2520Small%2520and%2520Large%2520Integers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/1478e3adca24cc",
          "author": "kurokawa5",
          "description": "問題\n\n 58. 正則化パラメータの変更\nロジスティック回帰モデルを学習するとき，正則化パラメータを調整することで，学習時の過学習（overfitting）の度合いを制御できる．異なる正則化パラメータでロジスティック回帰モデルを学習し，学習データ，検証データ，および評価データ上の正解率を求めよ．実験の結果は，正則化パラメータを横軸，正解率を縦軸としたグラフにまとめよ．\n\n solution58.py\nimport pandas as pd\nimport numpy as np\nimport re\nimport seaborn as sns\nimport matplotlib.pypl...",
          "link": "https://zenn.dev/kurokawa/articles/1478e3adca24cc",
          "publishedOn": "2023-01-15T03:47:32.000Z",
          "wordCount": 2105,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 58. 正則化パラメータの変更",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mm67-ykT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252058.%2520%25E6%25AD%25A3%25E5%2589%2587%25E5%258C%2596%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mm67-ykT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252058.%2520%25E6%25AD%25A3%25E5%2589%2587%25E5%258C%2596%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/34de38cafe510e",
          "author": "kurokawa5",
          "description": "問題\n\n 57. 特徴量の重みの確認\n52で学習したロジスティック回帰モデルの中で，重みの高い特徴量トップ10と，重みの低い特徴量トップ10を確認せよ．\n\n solution57.py\nimport pandas as pd\nimport numpy as np\nimport re\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import Tf...",
          "link": "https://zenn.dev/kurokawa/articles/34de38cafe510e",
          "publishedOn": "2023-01-14T16:17:09.000Z",
          "wordCount": 1905,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 57. 特徴量の重みの確認",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JTwcppT9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252057.%2520%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E3%2581%25AE%25E9%2587%258D%25E3%2581%25BF%25E3%2581%25AE%25E7%25A2%25BA%25E8%25AA%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JTwcppT9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252057.%2520%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E3%2581%25AE%25E9%2587%258D%25E3%2581%25BF%25E3%2581%25AE%25E7%25A2%25BA%25E8%25AA%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kyaon/articles/87d59dbcb8b88c",
          "author": "kyaon",
          "description": "JGLUEのSTSとNLIにおける文ペア数を調べてみた\n\n 概要\n自然言語処理モデルの評価用データセットJGLUEのSTSとNLIのラベルの各組み合わせで文ペア数を調べた．\n\n 目次\n\n概要\nJGLUE\nSTS\nNLI\n環境\n\nコード\n\nNLIとSTSをマージ\nヒートマップで各組み合わせの文ペア数を出力\n各組み合わせの文ペア数の結果\n\n\nおまけ\n\n\n JGLUE\n2022年に言語処理学会で『JGLUE: 日本語言語理解ベンチマーク』という論文が紹介された．\nJGLUEのSTSとNLIの文ペアはYahoo Japan Captions Datasetを用いている．\n次に公開されているデ...",
          "link": "https://zenn.dev/kyaon/articles/87d59dbcb8b88c",
          "publishedOn": "2023-01-14T14:01:02.000Z",
          "wordCount": 1722,
          "title": "JGLUEのSTSとNLIにおける文ペア数を調べてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HCkTIQSL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kyaon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JGLUE%25E3%2581%25AESTS%25E3%2581%25A8NLI%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%2596%2587%25E3%2583%259A%25E3%2582%25A2%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1WaG9nM3QzNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiMDdiYmEyMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HCkTIQSL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kyaon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JGLUE%25E3%2581%25AESTS%25E3%2581%25A8NLI%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%2596%2587%25E3%2583%259A%25E3%2582%25A2%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1WaG9nM3QzNi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiMDdiYmEyMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/771f6b5edc2d00",
          "author": "kurokawa5",
          "description": "問題\n\n 56. 適合率，再現率，F1スコアの計測\n52で学習したロジスティック回帰モデルの適合率，再現率，F1スコアを，評価データ上で計測せよ．カテゴリごとに適合率，再現率，F1スコアを求め，カテゴリごとの性能をマイクロ平均（micro-average）とマクロ平均（macro-average）で統合せよ．\n\n solution56.py\nimport pandas as pd\nimport numpy as np\nimport re\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_s...",
          "link": "https://zenn.dev/kurokawa/articles/771f6b5edc2d00",
          "publishedOn": "2023-01-14T10:59:54.000Z",
          "wordCount": 1626,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 56. 適合率，再現率，F1スコアの計測",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nYVwD9Fm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252056.%2520%25E9%2581%25A9%25E5%2590%2588%25E7%258E%2587%25EF%25BC%258C%25E5%2586%258D%25E7%258F%25BE%25E7%258E%2587%25EF%25BC%258CF1%25E3%2582%25B9%25E3%2582%25B3%25E3%2582%25A2%25E3%2581%25AE%25E8%25A8%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nYVwD9Fm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252056.%2520%25E9%2581%25A9%25E5%2590%2588%25E7%258E%2587%25EF%25BC%258C%25E5%2586%258D%25E7%258F%25BE%25E7%258E%2587%25EF%25BC%258CF1%25E3%2582%25B9%25E3%2582%25B3%25E3%2582%25A2%25E3%2581%25AE%25E8%25A8%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/b31bf4ac40ff0e",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回はLUKEをファインチューニングして、Hugging Faceにアップしたので、そのモデルのデモの様子などについて書いていこうと思います。\n作成したモデルはこちらのサイト（Hugging Face）にアップしてあります。\nコピペして使えるコード（ディレクトリ名は適宜変更してください）も添えてあるのでぜひ使ってみてください。\n本記事を使えば、環境構築（pythonなどのインストール）を除けば、たった2ステップでLUKEで感情分析が行えるようになります。\n\n 環境\ntorch 1.12.1\ntransformers 4.24.0\nPy...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/b31bf4ac40ff0e",
          "publishedOn": "2023-01-14T08:53:02.000Z",
          "wordCount": 554,
          "title": "ファインチューニング（感情分析）したLUKEを公開しました（たった２ステップで完結！LUKEでの感情分析）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5aY9cKsf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25EF%25BC%2589%25E3%2581%2597%25E3%2581%259FLUKE%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2592%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2583%2597%25E3%2581%25A7%25E5%25AE%258C%25E7%25B5%2590%25EF%25BC%2581LUKE%25E3%2581%25A7%25E3%2581%25AE%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5aY9cKsf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25EF%25BC%2589%25E3%2581%2597%25E3%2581%259FLUKE%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2592%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2583%2597%25E3%2581%25A7%25E5%25AE%258C%25E7%25B5%2590%25EF%25BC%2581LUKE%25E3%2581%25A7%25E3%2581%25AE%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/b011c2c90bdada",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回は現状日本語モデルで最大規模を誇る言語モデルdeberta-v2-base-japaneseをファインチューニングして、Question-Answeringタスクを解いてみようと思います。\n作成したモデルはこちらのサイト（Hugging Face）で配布しています。\n初心者でも簡単に使えるようにしているのでぜひ使ってみてください。\nhttps://huggingface.co/Mizuiro-sakura/deberta-v2-base-japanese-finetuned-QA\n\n 環境\ntorch 1.12.1\ntransfo...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/b011c2c90bdada",
          "publishedOn": "2023-01-14T08:41:56.000Z",
          "wordCount": 406,
          "title": "日本語言語モデルで現状最大規模を誇るdeberta-v2をQAタスク用にファインチューニングして公開してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--31wKdnBh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E7%258F%25BE%25E7%258A%25B6%25E6%259C%2580%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2582%2592%25E8%25AA%2587%25E3%2582%258Bdeberta-v2%25E3%2582%2592QA%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E7%2594%25A8%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--31wKdnBh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E7%258F%25BE%25E7%258A%25B6%25E6%259C%2580%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2582%2592%25E8%25AA%2587%25E3%2582%258Bdeberta-v2%25E3%2582%2592QA%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E7%2594%25A8%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/1d712d7e849b60",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回は現在（２０２３年１月）、世界最高精度を有している言語モデルであるLUKEをファインチューニングして、Question-Answeringタスク（SQuAD、狭義の質問応答）を行ってみようと思います。\n作成したモデルはこちらのサイトで公開していますので、もしよろしければ使ってみてください。\n今回も初心者でもたった２ステップ（ステップ１：必要なライブラリのダウンロード、ステップ２：コードのコピペ）で簡単に使えるようにしてあります。\nこのモデルを使えばチャットボットなども作成することが可能です。\nhttps://huggingface...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/1d712d7e849b60",
          "publishedOn": "2023-01-14T08:39:50.000Z",
          "wordCount": 3089,
          "title": "世界最高精度の言語モデルLUKEをファインチューニングして公開してみた（Question-Answering, SQuAD）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uWUFLdRu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E4%25B8%2596%25E7%2595%258C%25E6%259C%2580%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABLUKE%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588Question-Answering%252C%2520SQuAD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uWUFLdRu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E4%25B8%2596%25E7%2595%258C%25E6%259C%2580%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABLUKE%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588Question-Answering%252C%2520SQuAD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/a04f6bcc21c612",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回は2020年4月当時、5つのタスクで世界最高精度を達成した新しい言語モデルLUKEの論文について、新規性は何なのかなどについて書いていきたいと思います。\n日本語バージョンのLUKEは執筆現在（2022年11月）も4つのタスクで最高スコアを有しています。\nもし記事中で何かご不明な点、間違いなどがありましたら、教えていただけると嬉しいです。\n2022年12月27日追記：LUKEをファインチューニングして感情分析に用いれるモデルを作成してみました。下記の記事に載せたリンクからモデルをダウンロードできます。LUKEを試してみたいという方...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/a04f6bcc21c612",
          "publishedOn": "2023-01-14T08:36:05.000Z",
          "wordCount": 592,
          "title": "世界最高精度を達成した言語モデルLUKEの論文を徹底解説（試しに使えるソースコードも記載）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j2Ws-do0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E4%25B8%2596%25E7%2595%258C%25E6%259C%2580%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2582%2592%25E9%2581%2594%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABLUKE%25E3%2581%25AE%25E8%25AB%2596%25E6%2596%2587%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2588%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2582%25E8%25A8%2598%25E8%25BC%2589%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j2Ws-do0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E4%25B8%2596%25E7%2595%258C%25E6%259C%2580%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2582%2592%25E9%2581%2594%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABLUKE%25E3%2581%25AE%25E8%25AB%2596%25E6%2596%2587%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2588%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2582%25E8%25A8%2598%25E8%25BC%2589%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/48ae05d3a23061",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回はBERTを用いたチャットボットについて説明していこうと思います。\nそもそもBERTって何って感じの方にもわかりやすいように書いていくつもりです。\nまず今回の目標を先に示そうと思います。\n下の画像のように、背景となる文章を与えたときに、質問に答えてくれるプログラムを作成します。\n（ぐへへ…これを使えば宿題も自動でやってくれ…ちょっ先生に言うのだけは！）\nまずBERTの基礎となっているtransformersというものについて説明し、その後、BERTについて説明します。最後に実際にプログラムの説明をしていきます。\n本記事では簡略化の...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/48ae05d3a23061",
          "publishedOn": "2023-01-14T08:33:01.000Z",
          "wordCount": 726,
          "title": "（初心者向け）BERTを用いたチャットボット（質疑応答）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1Y8Lr7O1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%2588%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589BERT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25EF%25BC%2588%25E8%25B3%25AA%25E7%2596%2591%25E5%25BF%259C%25E7%25AD%2594%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1Y8Lr7O1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%2588%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589BERT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25EF%25BC%2588%25E8%25B3%25AA%25E7%2596%2591%25E5%25BF%259C%25E7%25AD%2594%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/3ae3ab29625986",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回は波の伝搬と干渉の３次元シミュレーションについて書いていこうと思います。\n実行結果は下のgifみたいな感じになります。\n\nまず背景について説明いたします。\n波の挙動は波動方程式によって記述されます。\n\n波動方程式はスライドに示すような定数係数二階線形偏微分方程式です。そのままでは機械で分析ができないため、スライドに示すように数値的に微分を行います。\n結果として一番下のような形になります。\nこの式を元にしてプログラムを書いていきます。\n境界条件はディレクレ境界条件（端の値を常に０とする）とします。\nプログラムは次の通りです。\n\nwa...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/3ae3ab29625986",
          "publishedOn": "2023-01-14T08:30:05.000Z",
          "wordCount": 3420,
          "title": "波の伝搬と干渉の３次元シミュレーションをしてみた（波動方程式、ダブルスリット、python）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mro8rz45--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E6%25B3%25A2%25E3%2581%25AE%25E4%25BC%259D%25E6%2590%25AC%25E3%2581%25A8%25E5%25B9%25B2%25E6%25B8%2589%25E3%2581%25AE%25EF%25BC%2593%25E6%25AC%25A1%25E5%2585%2583%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588%25E6%25B3%25A2%25E5%258B%2595%25E6%2596%25B9%25E7%25A8%258B%25E5%25BC%258F%25E3%2580%2581%25E3%2583%2580%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2580%2581python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mro8rz45--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E6%25B3%25A2%25E3%2581%25AE%25E4%25BC%259D%25E6%2590%25AC%25E3%2581%25A8%25E5%25B9%25B2%25E6%25B8%2589%25E3%2581%25AE%25EF%25BC%2593%25E6%25AC%25A1%25E5%2585%2583%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588%25E6%25B3%25A2%25E5%258B%2595%25E6%2596%25B9%25E7%25A8%258B%25E5%25BC%258F%25E3%2580%2581%25E3%2583%2580%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2580%2581python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/b03143114261c8",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回はVOSKというライブラリを用いて声を文字起こしし、それに対して自然な返答を行うようなAIを作っていきたいと思います。\nまず、それぞれのライブラリについて説明します。\nVOSKはalphacepheiさんが開発した２０言語以上に対応した音声認識ツールキットです。言語モデルが約50MBと軽く、組み込みを容易に行うことが可能です。\nVOSK Offline Speech Recognition API\nhttps://alphacephei.com/vosk/\n\nVOSKのインストールは\npip install vosk\nで行うことが...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/b03143114261c8",
          "publishedOn": "2023-01-14T08:24:25.000Z",
          "wordCount": 2565,
          "title": "音声認識可能な対話型AIを作成してみた(VOSK, GiNZA, python,チャットボット)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hXN9m5Jy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E5%25AF%25BE%25E8%25A9%25B1%25E5%259E%258BAI%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528VOSK%252C%2520GiNZA%252C%2520python%252C%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hXN9m5Jy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E5%25AF%25BE%25E8%25A9%25B1%25E5%259E%258BAI%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528VOSK%252C%2520GiNZA%252C%2520python%252C%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/7e8373a759ef1b",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\n今回は言語商会・長岡技術科学大学、山本先生の日本語感情表現辞書( https://www.jnlp.org/GengoHouse/snow/d18 )を用いて夏目漱石さんの「こころ」（青空文庫（　https://www.aozora.gr.jp/　　　　\n））の感情分析を行っていきたいと思います。\n山本先生のコーパスは単語に対して被験者の３人が48の感情のうちどの感情を感じたかが記されています。このコーパスを用いることで、文章に含まれている最も強い感情を特定することが可能です。\n解析結果は次のような感じです。\n\n内訳を見ると、好きとい...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/7e8373a759ef1b",
          "publishedOn": "2023-01-14T08:20:16.000Z",
          "wordCount": 5616,
          "title": "夏目漱石さんの「こころ」の心を感情分析プログラムで解析してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LuLuHS2u--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%25A4%258F%25E7%259B%25AE%25E6%25BC%25B1%25E7%259F%25B3%25E3%2581%2595%25E3%2582%2593%25E3%2581%25AE%25E3%2580%258C%25E3%2581%2593%25E3%2581%2593%25E3%2582%258D%25E3%2580%258D%25E3%2581%25AE%25E5%25BF%2583%25E3%2582%2592%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25A7%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LuLuHS2u--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%25A4%258F%25E7%259B%25AE%25E6%25BC%25B1%25E7%259F%25B3%25E3%2581%2595%25E3%2582%2593%25E3%2581%25AE%25E3%2580%258C%25E3%2581%2593%25E3%2581%2593%25E3%2582%258D%25E3%2580%258D%25E3%2581%25AE%25E5%25BF%2583%25E3%2582%2592%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25A7%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/4226070bdd6309",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\n水色桜（みずいろさくら）です。\nGiNZAに関する記事4本目です。\nこの記事では感情分析について書いていきます。\nまず感情分析とは何かということから説明していきます。\n感情分析は、AIがテキストや音声から人間の気持ちや意図を読み取ることを言います。\nたとえば、「やったー。テストでいい点が取れた！」という文があったときに、プラスの感情もしくは喜びの感情を出力するような感じです。\n感情分析の手法は大きく分けて２つあります。\n1つ目はルールベースのアプローチです。\nルールベースのアプローチは前持って定義されたルールを用いて感情分析をする手法です。例えば、あらかじめ単語ごと...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/4226070bdd6309",
          "publishedOn": "2023-01-14T08:13:52.000Z",
          "wordCount": 2096,
          "title": "感情分析のやり方が7割わかるようになる記事（初心者向け）（ソースコードあり）（GiNZA）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vPCKXCMk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_boldiNZA%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vPCKXCMk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_boldiNZA%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/f55ffda3d98147",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです。\nGiNZAに関する記事3本目です。\nこの記事では固有表現抽出と類似度計算、簡単なチャットボット作成について書いていこうと思います。\n\nGiNZAで出来ること４つ目は固有表現抽出です。固有表現は固有名詞や人名のことです。\n\nent.py\n#④固有表現抽出\ndoc=nlp('今日は銀座で花さんと買い物をした。')\nfor ent in doc.ents:  #固有表現（エンティティ）群から固有表現を一つずつ抽出\n    print(\n        ent.text+', '+   #固有表現\n        ent.label_+', '+  #固有表現の種類\n   ...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/f55ffda3d98147",
          "publishedOn": "2023-01-14T08:10:56.000Z",
          "wordCount": 1157,
          "title": "GiNZA入門3（基本操作編2、チャットボット作成編）（基本的な使い方マスターを目指す方向け）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bhfkGooS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:GiNZA%25E5%2585%25A5%25E9%2596%25803%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%25E7%25B7%25A82%25E3%2580%2581%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E7%25B7%25A8%25EF%25BC%2589%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%25E6%2596%25B9%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bhfkGooS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:GiNZA%25E5%2585%25A5%25E9%2596%25803%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%25E7%25B7%25A82%25E3%2580%2581%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E7%25B7%25A8%25EF%25BC%2589%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%25E6%2596%25B9%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/b9de1291fb816d",
          "author": "Mizuiro__sakura",
          "description": "こんにちにゃんです❕\nGiNZA入門に関する記事２本目です。\nこの記事ではGiNZAの基本的な操作方法について書いていきます。\nまず主にGiNZAで出来ることは次の通りです。\n\n一つ一つ説明していきます。\nまずGiNZAを用いるために、spaCyをインポートします。\nそうしたらそのあとGiNZAのロードを行い、nlpという変数に渡します。\nGiNZAではdocクラスというものがあります。\ndocクラスはこの後説明する解析の結果を保持するクラスで、doc=nlp(文章（str型）)で解析が完了します。\n簡単に言うと文章とそれに関する情報をまとめて持っているというイメージです（どこからどこま...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/b9de1291fb816d",
          "publishedOn": "2023-01-14T08:07:35.000Z",
          "wordCount": 472,
          "title": "GiNZA入門２（基本操作編１）（基本的な使い方マスターを目指す方向け）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---rxV4kGc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GiNZA%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2592%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%25E7%25B7%25A8%25EF%25BC%2591%25EF%25BC%2589%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%25E6%2596%25B9%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---rxV4kGc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GiNZA%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2592%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%25E7%25B7%25A8%25EF%25BC%2591%25EF%25BC%2589%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%25E6%2596%25B9%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mizuiro__sakura/articles/d557ed7b766caa",
          "author": "Mizuiro__sakura",
          "description": "初めまして。\n水色桜（みずいろさくら）と申します。\nこの記事群では自然言語処理ライブラリGiNZAの使い方について簡単に説明していこうと思います。\n最終的には感情分析プログラムの作成まで書いていきたいと考えています。\nこの記事はGiNZAの簡単な説明と、導入方法についてです。\nまず、そもそも自然言語とは何？とお思いの方もいらっしゃるかと思います。\n「自然言語」とは「日本語」や「英語」のような普段人間が使っている言葉です。\n単に「言語」と言ってしまうとプログラミング言語を含んでいるみたいになってしまうので、対比の意味もあって、「自然言語」と言います。\n自然言語処理というのは普段人間が使う言...",
          "link": "https://zenn.dev/mizuiro__sakura/articles/d557ed7b766caa",
          "publishedOn": "2023-01-14T08:02:54.000Z",
          "wordCount": 124,
          "title": "GiNZA入門１（導入）（基本的な使い方マスターを目指す方向け）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wz6vDoN_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GiNZA%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2591%25EF%25BC%2588%25E5%25B0%258E%25E5%2585%25A5%25EF%25BC%2589%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%25E6%2596%25B9%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wz6vDoN_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mizuiro__sakura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GiNZA%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2591%25EF%25BC%2588%25E5%25B0%258E%25E5%2585%25A5%25EF%25BC%2589%25EF%25BC%2588%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%25E6%2596%25B9%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1mcjlDdWkyaC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NTQ0ZjZhNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/3c2f00872b4292",
          "author": "kurokawa5",
          "description": "問題\n\n 55. 混同行列の作成\n52で学習したロジスティック回帰モデルの混同行列（confusion matrix）を，学習データおよび評価データ上で作成せよ．\n\n solution55.py\nimport pandas as pd\nimport numpy as np\nimport re\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text impo...",
          "link": "https://zenn.dev/kurokawa/articles/3c2f00872b4292",
          "publishedOn": "2023-01-14T07:09:38.000Z",
          "wordCount": 1164,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 55. 混同行列の作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RQfdpsKx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252055.%2520%25E6%25B7%25B7%25E5%2590%258C%25E8%25A1%258C%25E5%2588%2597%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RQfdpsKx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252055.%2520%25E6%25B7%25B7%25E5%2590%258C%25E8%25A1%258C%25E5%2588%2597%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/b75e40809d6ea1",
          "author": "kurokawa5",
          "description": "問題\n\n 54. 正解率の計測\n52で学習したロジスティック回帰モデルの正解率を，学習データおよび評価データ上で計測せよ．\n\n solution54.py\nimport pandas as pd\nimport numpy as np\nimport re\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import LogisticRegression\nfro...",
          "link": "https://zenn.dev/kurokawa/articles/b75e40809d6ea1",
          "publishedOn": "2023-01-14T06:47:04.000Z",
          "wordCount": 1084,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 54. 正解率の計測",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hrrwTfb2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252054.%2520%25E6%25AD%25A3%25E8%25A7%25A3%25E7%258E%2587%25E3%2581%25AE%25E8%25A8%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hrrwTfb2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252054.%2520%25E6%25AD%25A3%25E8%25A7%25A3%25E7%258E%2587%25E3%2581%25AE%25E8%25A8%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/2718ea47072f4e",
          "author": "kurokawa5",
          "description": "問題\n\n 53. 予測\n52で学習したロジスティック回帰モデルを用い，与えられた記事見出しからカテゴリとその予測確率を計算するプログラムを実装せよ．\n\n solution53.py\nimport pandas as pd\nimport numpy as np\nimport re\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import LogisticR...",
          "link": "https://zenn.dev/kurokawa/articles/2718ea47072f4e",
          "publishedOn": "2023-01-14T05:47:53.000Z",
          "wordCount": 968,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 53. 予測",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5qvk7BEc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252053.%2520%25E4%25BA%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5qvk7BEc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252053.%2520%25E4%25BA%2588%25E6%25B8%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/c5ee19ba9195ba",
          "author": "Web Life CH",
          "description": "【６条件分岐】\nYouTube: https://youtu.be/inU4rLpBn-k\nhttps://youtu.be/inU4rLpBn-k\n今回はPythonの「条件分岐」について解説します。\nさっくりとした内容ですがJSと異なる点は以下になります。\n・「else if」がPythonだと「elif」になる\n・真偽値等は「True」「False」「None」のように頭文字が大文字になる\n・「&&」「||」は「and」「or」を使用する\n\nmain.py\n# animal = 'bird'\n\n# if animal == 'cat':\n#   print('n...",
          "link": "https://zenn.dev/web_life_ch/articles/c5ee19ba9195ba",
          "publishedOn": "2023-01-14T05:45:00.000Z",
          "wordCount": 320,
          "title": "【Python】Webで使えるPython 基礎編【６条件分岐】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wZ3JOz-D--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2596%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%2590%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wZ3JOz-D--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2596%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%2590%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/4a78f7356a1465",
          "author": "kurokawa5",
          "description": "問題\n\n 52. 学習\n51で構築した学習データを用いて，ロジスティック回帰モデルを学習せよ．\n\n solution52.py\nimport pandas as pd\nimport numpy as np\nimport re\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import LogisticRegression\n\ndef preprocessin...",
          "link": "https://zenn.dev/kurokawa/articles/4a78f7356a1465",
          "publishedOn": "2023-01-14T05:35:55.000Z",
          "wordCount": 821,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 52. 学習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Z--321zB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252052.%2520%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Z--321zB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252052.%2520%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/momiji777/articles/2d40bb20d2cef9",
          "author": "momiji777",
          "description": "ライブラリをインストール\npip install folium\n\n 地図を表示\nfolium.Map()を使って地図のインスタンスを作成します。引数に地図の中心の位置(latitude, longitude)を指定します。日本の中心位置は、緯度35度、経度139度です。\nimport folium\nm = folium.Map(location=[35, 139], zoom_start=5)\nm\n\n\n マーキングする\n地図にマーカーを追加します。 add_child()メソッドを使って、Markerクラスのインスタンスを地図に追加します。\nfolium.Marker(locatio...",
          "link": "https://zenn.dev/momiji777/articles/2d40bb20d2cef9",
          "publishedOn": "2023-01-13T16:44:49.000Z",
          "wordCount": 250,
          "title": "foliumを利用して、地図を可視化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sKpDFu2J--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:folium%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%259C%25B0%25E5%259B%25B3%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sKpDFu2J--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:folium%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%259C%25B0%25E5%259B%25B3%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/bf2ad0754c1133",
          "author": "kurokawa5",
          "description": "問題\n\n 51. 特徴量抽出\n学習データ，検証データ，評価データから特徴量を抽出し，それぞれtrain.feature.txt，valid.feature.txt，test.feature.txtというファイル名で保存せよ． なお，カテゴリ分類に有用そうな特徴量は各自で自由に設計せよ．記事の見出しを単語列に変換したものが最低限のベースラインとなるであろう．\n\n solution51.py\nimport pandas as pd\nimport numpy as np\nimport re\nfrom sklearn.model_selection import train_test_spl...",
          "link": "https://zenn.dev/kurokawa/articles/bf2ad0754c1133",
          "publishedOn": "2023-01-13T16:29:05.000Z",
          "wordCount": 951,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 51. 特徴量抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PE3lPmO_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252051.%2520%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PE3lPmO_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252051.%2520%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/219166ab8af07c",
          "author": "kurokawa5",
          "description": "問題\n\n 50. データの入手・整形\nNews Aggregator DataSetをダウンロードし、以下の要領で学習データ（train.txt），検証データ（valid.txt），評価データ（test.txt）を作成せよ．\n\nダウンロードしたzipファイルを解凍し，readme.txtの説明を読む．\n情報源（publisher）が”Reuters”, “Huffington Post”, “Businessweek”, “Contactmusic.com”, “Daily Mail”の事例（記事）のみを抽出する．\n抽出された事例をランダムに並び替える．\n抽出された事例の80%を学習...",
          "link": "https://zenn.dev/kurokawa/articles/219166ab8af07c",
          "publishedOn": "2023-01-13T14:58:42.000Z",
          "wordCount": 637,
          "title": "言語処理100本ノック 2020 (Rev 2) 第6章: 機械学習 50. データの入手・整形",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xSfx7urT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252050.%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2585%25A5%25E6%2589%258B%25E3%2583%25BB%25E6%2595%25B4%25E5%25BD%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xSfx7urT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC6%25E7%25AB%25A0%253A%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%252050.%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2585%25A5%25E6%2589%258B%25E3%2583%25BB%25E6%2595%25B4%25E5%25BD%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/python3654/articles/419380d157f47f",
          "author": "とりごん",
          "description": "はじめに\nAtCoderの常設中コンテストの中に「アルゴリズムと数学  演習問題集」というものがあります。この記事では、そのコンテストの問題の解説を書いていきます！コードはPythonで書きます。全部で104問とかなりボリューミーなので、気合い入れてやっていきます!!\nコンテストのURLはこちらです。https://atcoder.jp/contests/math-and-algorithm\nなお、各問題の番号をクリックすると、問題のURLに飛びます！\n\n 001 - Print 5+N\n\n問題文\nりんごが5個あり、みかんがN個あります。\n整数Nが与えられるので、りんごとみかんを合わ...",
          "link": "https://zenn.dev/python3654/articles/419380d157f47f",
          "publishedOn": "2023-01-13T14:18:46.000Z",
          "wordCount": 2169,
          "title": "AtCoder「アルゴリズムと数学  演習問題集」を全部解く!!!",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MN7U6zBH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E3%2580%258C%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A8%25E6%2595%25B0%25E5%25AD%25A6%2520%2520%25E6%25BC%2594%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E9%259B%2586%25E3%2580%258D%25E3%2582%2592%25E5%2585%25A8%25E9%2583%25A8%25E8%25A7%25A3%25E3%2581%258F%2521%2521%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MN7U6zBH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2594%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:AtCoder%25E3%2580%258C%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A8%25E6%2595%25B0%25E5%25AD%25A6%2520%2520%25E6%25BC%2594%25E7%25BF%2592%25E5%2595%258F%25E9%25A1%258C%25E9%259B%2586%25E3%2580%258D%25E3%2582%2592%25E5%2585%25A8%25E9%2583%25A8%25E8%25A7%25A3%25E3%2581%258F%2521%2521%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1tcV9KekNjby0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNWE1MDFjNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a0d878e6585e59",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-087 B - Coins\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    a = getInt()\n    b = getInt()\n    c = getInt()\n    x = getInt()\n\n    a = a if x // 500 >= a else x // 500\n    b = b if x // 100 >= b else x // 100\n    c = c if x // 50 >= c else x // 50\n\n    r = ...",
          "link": "https://zenn.dev/hyperdb/articles/a0d878e6585e59",
          "publishedOn": "2023-01-13T09:28:12.000Z",
          "wordCount": 613,
          "title": "［AtCoder］ABC-087｜B - Coins",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5hidoNuJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-087%25EF%25BD%259CB%2520-%2520Coins%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5hidoNuJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-087%25EF%25BD%259CB%2520-%2520Coins%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/39cf9e86d4c937",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-087 A - Buying Sweets\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n    a = getInt()\n    b = getInt()\n\n    print((x - a) % b)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/39cf9e86d4c937",
          "publishedOn": "2023-01-13T09:28:12.000Z",
          "wordCount": 256,
          "title": "［AtCoder］ABC-087｜A - Buying Sweets",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7RJLUWl9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-087%25EF%25BD%259CA%2520-%2520Buying%2520Sweets%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7RJLUWl9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-087%25EF%25BD%259CA%2520-%2520Buying%2520Sweets%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/skwbc/articles/rust_python_data_sharing",
          "author": "skwbc",
          "description": "概要\nRustを使って機械学習アルゴリズムを実装してPythonから呼び出せるようにしたいのですが、言語間でのデータの受け渡しをどうすれば良いかが分からなかったので、幾つかの方法を実装して比較してみました。\nPythonで機械学習の実装を呼び出すということは、多くの場合NumPyの配列の受け渡しが出来なければいけないと思うので、今回は特にNumPyの配列の受け渡しの方法について考えます。\nこの記事で試した方法は以下の3つです。\n\nctypesを使って、配列をシリアライズして文字列として渡す\nctypesを使って、配列をdoubleのポインタとして渡す\nPyO3とmaturinを使って...",
          "link": "https://zenn.dev/skwbc/articles/rust_python_data_sharing",
          "publishedOn": "2023-01-13T09:07:24.000Z",
          "wordCount": 4637,
          "title": "Rust・Python間でNumPyの配列を受け渡したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oaUnWE6p--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:skwbc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Rust%25E3%2583%25BBPython%25E9%2596%2593%25E3%2581%25A7NumPy%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--oaUnWE6p--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:skwbc%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Rust%25E3%2583%25BBPython%25E9%2596%2593%25E3%2581%25A7NumPy%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/6c5a1c0cadfaa7",
          "author": "Web Life CH",
          "description": "【５辞書】\nYouTube: https://youtu.be/5Z7uadgEHNg\nhttps://youtu.be/5Z7uadgEHNg\n今回はPythonの「辞書」について解説します。\n辞書はjavascriptのオブジェクトと同じような使い方ができます。\n\nmain.py\nperson = {'name': 'taro', 'age': 25}\n# print(person)\n# print(person['name'])\n\n# for k in person.keys():\n#   print(k)\n\n# for v in person.values():\n#   pr...",
          "link": "https://zenn.dev/web_life_ch/articles/6c5a1c0cadfaa7",
          "publishedOn": "2023-01-13T07:07:03.000Z",
          "wordCount": 198,
          "title": "【Python】Webで使えるPython 基礎編【５辞書】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L9DgYIqG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2595%25E8%25BE%259E%25E6%259B%25B8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--L9DgYIqG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2595%25E8%25BE%259E%25E6%259B%25B8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/river_terrace/articles/22457e5095b51d",
          "author": "段丘",
          "description": "概要\nプロセスをkillする際、その子プロセスや更にその子プロセスなど、子孫にあたるプロセス全て一括でkillする方法について。Pythonのpsutilを使う。\n\n 方法\nimport psutil\n\ndef kill_recursively(pid):\n    for p in psutil.Process(pid).children(recursive=True):\n        p.kill()\n    psutil.Process(pid).kill()\n上記の関数に祖先のプロセスIDを渡すと、子孫末代まで殺してくれる。\n\n もうちょっとだけ詳しく\n\n\npsutil.Pr...",
          "link": "https://zenn.dev/river_terrace/articles/22457e5095b51d",
          "publishedOn": "2023-01-12T17:30:35.000Z",
          "wordCount": 188,
          "title": "子孫末代まで殺したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FyXyZajO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%25AE%25B5%25E4%25B8%2598%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E5%25AD%2590%25E5%25AD%25AB%25E6%259C%25AB%25E4%25BB%25A3%25E3%2581%25BE%25E3%2581%25A7%25E6%25AE%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1CZjZpdWFURy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1ZGZkNzBiY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FyXyZajO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%25AE%25B5%25E4%25B8%2598%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E5%25AD%2590%25E5%25AD%25AB%25E6%259C%25AB%25E4%25BB%25A3%25E3%2581%25BE%25E3%2581%25A7%25E6%25AE%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1CZjZpdWFURy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1ZGZkNzBiY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/anozon/articles/python-flag-state",
          "author": "anozon",
          "description": "Python の enum には Flag という機能があることを知りました。入れ子の状態(直和集合にあたるもの)を表現するのに便利そうだと思い使ってみました。\n今回はエアコンの状態を例に説明します。\nfrom enum import Flag, IntEnum, auto\n\nclass State(Flag):\n    Off = auto()\n    Cooling = auto()\n    Heating = auto()\n    Dry = auto()\n    Running = Cooling | Heating | Dry\nまず enum 同様以下のように使用できます。\n#...",
          "link": "https://zenn.dev/anozon/articles/python-flag-state",
          "publishedOn": "2023-01-12T11:38:04.000Z",
          "wordCount": 813,
          "title": "Python の Flag と状態モデルの相性がいい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y8mzONkG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:anozon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E3%2581%25AE%2520Flag%2520%25E3%2581%25A8%25E7%258A%25B6%25E6%2585%258B%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E7%259B%25B8%25E6%2580%25A7%25E3%2581%258C%25E3%2581%2584%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1wemVHdUh0Ny0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYmY3ZTdiMGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y8mzONkG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:anozon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Python%2520%25E3%2581%25AE%2520Flag%2520%25E3%2581%25A8%25E7%258A%25B6%25E6%2585%258B%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E7%259B%25B8%25E6%2580%25A7%25E3%2581%258C%25E3%2581%2584%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1wemVHdUh0Ny0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYmY3ZTdiMGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sosa/books/5108156a051f5c",
          "author": "sosa",
          "description": "WordPressでテーマCocoonを使用している場合、管理画面で記事ごとのアクセス数が表示されています。この値をスクレーピングして取得。Pythonのpandasで処理し結果をcsvファイルで出力。そのcsvファイルをStreamlitでパラメータ操作できる表やグラフで公開する手順とソースコードです。\n\n今回作ったもの\nイチゲブログのアクセス集計\nhttps://miyamiko-ichige-count-ichige-vxlcfl.streamlit.app/\n\n必要な知識\nPythonの基本、ライブラリSelenium、BeatifulSoup、pandasの基本、Git、GitHubの基本\n\n必要な環境\nPython、エディタ（VSCodeなど）\n私の場合Windows11、PythonはAnacondaをインストールしてJupiterNotebookで開発。エディタはVSCode。\n\nGitHub、Streamlitの登録や基本的な操作方法の説明はありません。\n\nコードは、そのままでは動きません。あくまでこのコードを参考にして、ご自分でカスタマイズしてください。",
          "link": "https://zenn.dev/sosa/books/5108156a051f5c",
          "publishedOn": "2023-01-12T09:18:21.000Z",
          "wordCount": 84,
          "title": "【Python】WordPress管理画面を スクレーピングして集計、Streamlitで公開する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--g_VrwswM--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wNTcwYzNlYmUxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--g_VrwswM--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wNTcwYzNlYmUxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/a42a77308c3847",
          "author": "Web Life CH",
          "description": "【４タプル】\nYouTube: https://youtu.be/0sfZwprcg3o\nhttps://youtu.be/0sfZwprcg3o\n今回は「タプル」について解説します。\nタプルは基本的にリストと同じように扱うことができるのですが、\n・一度定義したタプルの要素の変更が基本的には難しい。\n・タプルの要素が1つの時は1つ目の要素の後に「,」（カンマ）をつける必要がある。\nこちらの2点に注意が必要です。\n\nmain.py\npersons = ('taro', 'jiro', 'saburo')\n# persons[1] = 'hanako'\nprint(persons[1])...",
          "link": "https://zenn.dev/web_life_ch/articles/a42a77308c3847",
          "publishedOn": "2023-01-12T07:05:47.000Z",
          "wordCount": 170,
          "title": "【Python】Webで使えるPython 基礎編【４タプル】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8RC_pEkI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2594%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AB%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8RC_pEkI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2594%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AB%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/b2e959b79b6043",
          "author": "kurokawa5",
          "description": "問題\n\n 40. 係り受け解析結果の読み込み（形態素）\n形態素を表すクラスMorphを実装せよ．このクラスは表層形（surface），基本形（base），品詞（pos），品詞細分類1（pos1）をメンバ変数に持つこととする．さらに，係り受け解析の結果（ai.ja.txt.parsed）を読み込み，各文をMorphオブジェクトのリストとして表現し，冒頭の説明文の形態素列を表示せよ．\n\n solution40.py\nclass Morph:\n    def __init__(self, dc):\n        self.surface = dc['surface']\n        s...",
          "link": "https://zenn.dev/kurokawa/articles/b2e959b79b6043",
          "publishedOn": "2023-01-12T06:18:19.000Z",
          "wordCount": 719,
          "title": "言語処理100本ノック 2020 (Rev 2) 第5章: 係り受け解析 40. 係り受け解析結果の読み込み（形態素）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VZTtgh-S--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC5%25E7%25AB%25A0%253A%2520%25E4%25BF%2582%25E3%2582%258A%25E5%258F%2597%25E3%2581%2591%25E8%25A7%25A3%25E6%259E%2590%252040.%2520%25E4%25BF%2582%25E3%2582%258A%25E5%258F%2597%25E3%2581%2591%25E8%25A7%25A3%25E6%259E%2590%25E7%25B5%2590%25E6%259E%259C%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25EF%25BC%2588%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VZTtgh-S--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC5%25E7%25AB%25A0%253A%2520%25E4%25BF%2582%25E3%2582%258A%25E5%258F%2597%25E3%2581%2591%25E8%25A7%25A3%25E6%259E%2590%252040.%2520%25E4%25BF%2582%25E3%2582%258A%25E5%258F%2597%25E3%2581%2591%25E8%25A7%25A3%25E6%259E%2590%25E7%25B5%2590%25E6%259E%259C%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25EF%25BC%2588%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f6764ef9e00057",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-086 B - 1 21\n\n\n\n 提出結果\nimport math\n\n\ndef getStringMap():\n    return input().split()\n\n\ndef main():\n    a, b = getStringMap()\n\n    n = int(a + b)\n\n    print('Yes' if (math.sqrt(n)).is_integer() else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f6764ef9e00057",
          "publishedOn": "2023-01-12T06:00:01.000Z",
          "wordCount": 277,
          "title": "［AtCoder］ABC-086｜B - 1 21",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yM8o87jY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-086%25EF%25BD%259CB%2520-%25201%252021%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yM8o87jY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-086%25EF%25BD%259CB%2520-%25201%252021%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/dd73a1ea27c3f0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-085 A - Already 2018\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print(s.replace('2017', '2018'))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/dd73a1ea27c3f0",
          "publishedOn": "2023-01-12T06:00:01.000Z",
          "wordCount": 224,
          "title": "［AtCoder］ABC-085｜A - Already 2018",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DTfwxkRg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-085%25EF%25BD%259CA%2520-%2520Already%25202018%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DTfwxkRg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-085%25EF%25BD%259CA%2520-%2520Already%25202018%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b88cd0d8920faa",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-086 A - Product\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print('Even' if a % 2 == 0 or b % 2 == 0 else 'Odd')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b88cd0d8920faa",
          "publishedOn": "2023-01-12T06:00:00.000Z",
          "wordCount": 281,
          "title": "［AtCoder］ABC-086｜A - Product",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--an3BarOg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-086%25EF%25BD%259CA%2520-%2520Product%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--an3BarOg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-086%25EF%25BD%259CA%2520-%2520Product%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9f420c41e56e37",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-085 B - Kagami Mochi\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntRow(N):\n    return [int(input()) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    d = getIntRow(n)\n\n    r = set(d)\n\n    print(len(r))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9f420c41e56e37",
          "publishedOn": "2023-01-12T06:00:00.000Z",
          "wordCount": 301,
          "title": "［AtCoder］ABC-085｜B - Kagami Mochi",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_LpIpsg6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-085%25EF%25BD%259CB%2520-%2520Kagami%2520Mochi%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_LpIpsg6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-085%25EF%25BD%259CB%2520-%2520Kagami%2520Mochi%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/opamp/articles/b2d673bbccb9d4",
          "author": "OPamp",
          "description": "宣伝\nこんなコミュニティもやっているので良ければご参加ください！\nhttps://kobe-sannomiya-ai-tech.vercel.app/\nconnpassはこちらから！\nhttps://ai-tech.connpass.com/\n\n はじめに\nこんにちはToshikiHaraguchです。今回は勉強会【DAMO-YOLO + ONNX】物体検出AIをノートPCで動かそう！に合わせて、いろいろしたことをつらつらと書き連ねていこうと思います。\nまずはDAMO-YOLOの元のリポジトリからクローンしたものを実行＆リアルタイム推論できるように改造していきます！\n\n 実験環境\n今...",
          "link": "https://zenn.dev/opamp/articles/b2d673bbccb9d4",
          "publishedOn": "2023-01-11T17:43:42.000Z",
          "wordCount": 1992,
          "title": "【DAMO-YOLO】PyTorch＋Webカメラでリアルタイム推論してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NWcDfx_k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:OPamp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590DAMO-YOLO%25E3%2580%2591PyTorch%25EF%25BC%258BWeb%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1GbFo2NThETi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiNTY2YTVkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NWcDfx_k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:OPamp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590DAMO-YOLO%25E3%2580%2591PyTorch%25EF%25BC%258BWeb%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1GbFo2NThETi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiNTY2YTVkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/waml/articles/atcoder-study-1",
          "author": "waml",
          "description": "はじめに\nE869120さんがレッドコーダーが教える、競プロ・AtCoder上達のガイドライン【中級編：目指せ水色コーダー！】にまとめている「分野別　初中級者が解くべき過去問精選 100 問」をPythonで解いてみた。Pythonの記事は少なそうなのでアウトプットが参考になれば幸いです。\n\n 1.ITP1_7_B - How Many Ways?\n問題のリンクは、こちら\n1問目ということで、愚直に全探索すればよさそうです。\n3重ループでO(n^3)でもn=100なので間に合いそう。(n, xが0になるまでループだから本当は怪しい気もする)\n\nanswer1\nwhile True:\n...",
          "link": "https://zenn.dev/waml/articles/atcoder-study-1",
          "publishedOn": "2023-01-11T17:20:09.000Z",
          "wordCount": 1415,
          "title": "【Atcoder】【Python】分野別　初中級者が解くべき過去問精選 100 問を解いてみた（全探索：全列挙）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uDF0FGnJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:waml%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Atcoder%25E3%2580%2591%25E3%2580%2590Pythonw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nb2N6OWpPYy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDEyMDc1NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uDF0FGnJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:waml%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Atcoder%25E3%2580%2591%25E3%2580%2590Python%25E3%2580%2591%25E5%2588%2586%25E9%2587%258E%25E5%2588%25A5%25E3%2580%2580%25E5%2588%259D%25E4%25B8%25AD%25E7%25B4%259A%25E8%2580%2585%25E3%2581%258C%25E8%25A7%25A3%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E9%2581%258E%25E5%258E%25BB%25E5%2595%258F%25E7%25B2%25BE%25E9%2581%25B8%2520100%2520%25E5%2595%258F%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588%25E5%2585%25A8%25E6%258E%25A2%25E7%25B4%25A2%25EF%25BC%259A%25E5%2585%25A8%25E5%2588%2597%25E6%258C%2599%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1nb2N6OWpPYy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDEyMDc1NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/8f5eb8b4020d27",
          "author": "kurokawa5",
          "description": "問題\n\n 39. Zipfの法則\n単語の出現頻度順位を横軸，その出現頻度を縦軸として，両対数グラフをプロットせよ．\n\n solution39.py\n# Plot a log-log graph with the x-axis being rank order and the y-axis being frequency.\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nimport matplotlib.pyplot as plt\nimport japanize_...",
          "link": "https://zenn.dev/kurokawa/articles/8f5eb8b4020d27",
          "publishedOn": "2023-01-11T15:45:42.000Z",
          "wordCount": 747,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 39. Zipfの法則",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--InmAOQIm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252039.%2520Zipf%25E3%2581%25AE%25E6%25B3%2595%25E5%2589%2587%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--InmAOQIm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252039.%2520Zipf%25E3%2581%25AE%25E6%25B3%2595%25E5%2589%2587%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/blancpanda/articles/alexa-skill-carta",
          "author": "blancpanda",
          "description": "幼稚園のかるたを読んでほしい\n娘の通っている幼稚園では年明けに「かるた会」があるため、冬休み中にその年の指定かるたで練習します。\nちょうど自宅リビング用の Echo Dot を新調したところだったので、「あ、かるた読んでもらおうかな」と思い立ってスキルを作った備忘録です。\nNode.js の方が情報量は多そうですが、Python でもできるので今回はなんとなく Python で。\n\n 会話の組み立て\n\n 幼稚園ルール\n\n読み手（先生）が「読みます」と言う\n取り手（子どもたち）が「はい」と言って手をひざにつく\n読み手が読み札を読み上げる\n取り手は「はい」と言って札を取る\n\n「読みます」...",
          "link": "https://zenn.dev/blancpanda/articles/alexa-skill-carta",
          "publishedOn": "2023-01-11T15:01:47.000Z",
          "wordCount": 2392,
          "title": "Alexa スキル: かるたを読んでもらう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mTnRLGIa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:blancpanda%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Alexa%2520%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25AB%253A%2520%25E3%2581%258B%25E3%2582%258B%25E3%2581%259F%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wRTJSSnNoMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMzQ0MmE5MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mTnRLGIa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:blancpanda%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Alexa%2520%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25AB%253A%2520%25E3%2581%258B%25E3%2582%258B%25E3%2581%259F%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS0wRTJSSnNoMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMzQ0MmE5MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hmatsu47/articles/sendgrid-bounce",
          "author": "hmatsu47",
          "description": "AWS Lambda（Python）で SendGrid を使ってメールを送信し、その Bounce Event（BouncedおよびDropped）を取得するサンプルです。\n\n サンプルの内容\n「メール送信時に送信履歴用の DynamoDB テーブルに記録した情報」と「SendGrid の Event Webhook で取得した情報」を突合し、Bounce Event に関する情報を取得するサンプルです。\n!\n今回のサンプルでは、メール送信部分を\n\nメール送信用の DynamoDB テーブルに送信するメールの情報をレコード登録\nDynamoDB Streams 経由でメール送信用の L...",
          "link": "https://zenn.dev/hmatsu47/articles/sendgrid-bounce",
          "publishedOn": "2023-01-11T14:53:03.000Z",
          "wordCount": 2231,
          "title": "SendGrid で送信したメールの Bounce Event を取得するサンプル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nN90jLnM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hmatsu47%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:SendGrid%2520%25E3%2581%25A7%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%2520Bounce%2520Event%2520%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hoTVFwNVh6NGpVc2wyeEFJcEJfeUtydG5kSEhqTHl3UUdGUXBMWnJZPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nN90jLnM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hmatsu47%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:SendGrid%2520%25E3%2581%25A7%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%2520Bounce%2520Event%2520%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hoTVFwNVh6NGpVc2wyeEFJcEJfeUtydG5kSEhqTHl3UUdGUXBMWnJZPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/m1kan1/articles/e9804debe9e920",
          "author": "m1kan1",
          "description": "Severless Frameworkで構築するLambda関数にSentryを導入する方法について記載します。\nLambda関数はPythonを使用しています。\n導入したソースコードはgithubに載せています。\n\n Sentryとは\nSentryとは、フロントからバックエンドまで、アプリケーションで発生したエラーを監視できるツールです。\nhttps://sentry.io/welcome/\n\n 事前準備\n\nSentryアカウントを作成します\nプロジェクトを作成します\nサインアップしてログインすると、初めにこのような画面が表示されました。\n\n\n今回はServerlessのLambda(...",
          "link": "https://zenn.dev/m1kan1/articles/e9804debe9e920",
          "publishedOn": "2023-01-11T12:29:08.000Z",
          "wordCount": 367,
          "title": "Severless Frameworkで構築するLambda関数にエラー監視ツールSentryを導入する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M5DxE2q6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:m1kan1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Severless%2520Framework%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258BLambda%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E7%259B%25A3%25E8%25A6%2596%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABSentry%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01azBlUmJaNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OTczNGYwNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M5DxE2q6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:m1kan1%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Severless%2520Framework%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258BLambda%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E7%259B%25A3%25E8%25A6%2596%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABSentry%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS01azBlUmJaNy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OTczNGYwNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/7162ee3bb96a95",
          "author": "kurokawa5",
          "description": "問題\n\n 38. ヒストグラム\n単語の出現頻度のヒストグラムを描け．ただし，横軸は出現頻度を表し，1から単語の出現頻度の最大値までの線形目盛とする．縦軸はx軸で示される出現頻度となった単語の異なり数（種類数）である．\n\n solution38.py\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nimport matplotlib.pyplot as plt\nimport japanize_matplotlib\n\ndef parse_mecab(block):\n ...",
          "link": "https://zenn.dev/kurokawa/articles/7162ee3bb96a95",
          "publishedOn": "2023-01-11T11:11:33.000Z",
          "wordCount": 674,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 38. ヒストグラム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3rbGMA8c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252038.%2520%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3rbGMA8c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252038.%2520%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/0534aa32189a5f",
          "author": "kurokawa5",
          "description": "問題\n\n 37. 「猫」と共起頻度の高い上位10語\n「猫」とよく共起する（共起頻度が高い）10語とその出現頻度をグラフ（例えば棒グラフなど）で表示せよ．\n\n solution37.py\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nimport matplotlib.pyplot as plt\nimport japanize_matplotlib\n\ndef parse_mecab(block):\n    res = []\n    for line in bloc...",
          "link": "https://zenn.dev/kurokawa/articles/0534aa32189a5f",
          "publishedOn": "2023-01-11T10:54:31.000Z",
          "wordCount": 682,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 37. 「猫」と共起頻度の高い上位10語",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CLLrM1js--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252037.%2520%25E3%2580%258C%25E7%258C%25AB%25E3%2580%258D%25E3%2581%25A8%25E5%2585%25B1%25E8%25B5%25B7%25E9%25A0%25BB%25E5%25BA%25A6%25E3%2581%25AE%25E9%25AB%2598%25E3%2581%2584%25E4%25B8%258A%25E4%25BD%258D10%25E8%25AA%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CLLrM1js--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252037.%2520%25E3%2580%258C%25E7%258C%25AB%25E3%2580%258D%25E3%2581%25A8%25E5%2585%25B1%25E8%25B5%25B7%25E9%25A0%25BB%25E5%25BA%25A6%25E3%2581%25AE%25E9%25AB%2598%25E3%2581%2584%25E4%25B8%258A%25E4%25BD%258D10%25E8%25AA%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/gai_ds/articles/06d3a8354ebe1b",
          "author": "ガイ",
          "description": "概要\n\n「最近ダンダダンていう居酒屋よく見るな〜」と思い、試しに地図上に可視化してみました。\n肉汁餃子のダンダダンは餃子が美味しい居酒屋です。\n餃子アイスも美味しいです。\n\nhttps://www.dandadan.jp/\n\n 手順\n1. ダンダダンのサイトから店舗情報をスクレイピング\n2. 住所から緯度経度を取得(ジオコーディング)\n3. kepler.glで可視化\n\n 1. ダンダダンのサイトから店舗情報をスクレイピング\nまずはダンダダンのホームページの店舗情報から店舗名と住所をスクレイピングしたいと思います。\nGoogleCoraboratoryを用いてスクレイピングをします。...",
          "link": "https://zenn.dev/gai_ds/articles/06d3a8354ebe1b",
          "publishedOn": "2023-01-11T09:41:44.000Z",
          "wordCount": 578,
          "title": "「肉汁餃子のダンダダン」の店舗情報をWebスクレイピングして地図上に可視化してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--V5dQAFYh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AC%25E3%2582%25A4%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%258C%25E8%2582%2589%25E6%25B1%2581%25E9%25A4%2583%25E5%25AD%2590%25E3%2581%25AE%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2580%25E3%2583%2580%25E3%2583%25B3%25E3%2580%258D%25E3%2581%25AE%25E5%25BA%2597%25E8%2588%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592Web%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25AB%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN3VoYzRoS09LTWRPODdWcHJzYklxeWREZW1yRGVfbDAwTTlta1JLMHM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--V5dQAFYh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AC%25E3%2582%25A4%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%258C%25E8%2582%2589%25E6%25B1%2581%25E9%25A4%2583%25E5%25AD%2590%25E3%2581%25AE%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2580%25E3%2583%2580%25E3%2583%25B3%25E3%2580%258D%25E3%2581%25AE%25E5%25BA%2597%25E8%2588%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592Web%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25AB%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN3VoYzRoS09LTWRPODdWcHJzYklxeWREZW1yRGVfbDAwTTlta1JLMHM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7bef95325ad968",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-084 A - New Year\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    m = getInt()\n\n    print(48 - m)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7bef95325ad968",
          "publishedOn": "2023-01-11T08:27:15.000Z",
          "wordCount": 224,
          "title": "［AtCoder］ABC-084｜A - New Year",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dxmCwUYa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-084%25EF%25BD%259CA%2520-%2520New%2520Year%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dxmCwUYa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-084%25EF%25BD%259CA%2520-%2520New%2520Year%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/3a06137ed53c36",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-084 B - Postal Code\n\n\n\n 提出結果\nimport re\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    a, b = getIntMap()\n    s = getString()\n\n    c = r'[0-9]{' + str(a) + '}-[0-9]{' + str(b) + '}'\n    m = re.match(c, s)\n\n    print('Ye...",
          "link": "https://zenn.dev/hyperdb/articles/3a06137ed53c36",
          "publishedOn": "2023-01-11T08:27:14.000Z",
          "wordCount": 372,
          "title": "［AtCoder］ABC-084｜B - Postal Code",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bZ4D15H2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-084%25EF%25BD%259CB%2520-%2520Postal%2520Code%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bZ4D15H2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-084%25EF%25BD%259CB%2520-%2520Postal%2520Code%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/6915c80bfe73b7",
          "author": "kurokawa5",
          "description": "問題\n\n 36. 頻度上位10語\n出現頻度が高い10語とその出現頻度をグラフ（例えば棒グラフなど）で表示せよ．\n\n solution36.py\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nimport matplotlib.pyplot as plt\nimport japanize_matplotlib\n\ndef parse_mecab(block):\n    res = []\n    for line in block.split('\\n'):\n      ...",
          "link": "https://zenn.dev/kurokawa/articles/6915c80bfe73b7",
          "publishedOn": "2023-01-11T08:26:30.000Z",
          "wordCount": 685,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 36. 頻度上位10語",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--54Txehm5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252036.%2520%25E9%25A0%25BB%25E5%25BA%25A6%25E4%25B8%258A%25E4%25BD%258D10%25E8%25AA%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--54Txehm5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252036.%2520%25E9%25A0%25BB%25E5%25BA%25A6%25E4%25B8%258A%25E4%25BD%258D10%25E8%25AA%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/takeguchi/articles/8e93b2dee6381d",
          "author": "tttakeh",
          "description": "最新のYOLOv8がUltralyticsより公開されました。まだ論文がarxivに公開されていないらしく情報が少ないですが、とりあえず試してみることにします。\nhttps://github.com/ultralytics/ultralytics\nドキュメントをパッと見てまず思ったのがYOLOv8がPythonのパッケージとして配布されていることですかね。https://docs.ultralytics.com によると,YOLOv8では以前のYOLOを切り替えることができるみたいです。これは拡張性とかかなり期待できそうです！\n早速bus.jpgでテスト。\n$ pip install u...",
          "link": "https://zenn.dev/takeguchi/articles/8e93b2dee6381d",
          "publishedOn": "2023-01-11T08:26:11.000Z",
          "wordCount": 8125,
          "title": "最新のYOLOv8 が公開されたので試してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ftF87Rdn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tttakeh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AEYOLOv8%2520%25E3%2581%258C%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1INUtKbWZNMC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZTI3YWE0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ftF87Rdn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tttakeh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AEYOLOv8%2520%25E3%2581%258C%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1INUtKbWZNMC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZTI3YWE0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sql_geinin/articles/29f2b0a5c55db2",
          "author": "SQL芸人",
          "description": "概要\nWindowsで、複数バージョンのPython扱う「pyenv」と\nフォルダごとに仮想環境を立ててライブラリ等を管理する「pipenv」を導入し\n快適なPython生活を手に入れることが目標です。\n\n 背景\nこれまで、Pythonのインストールといえば「Anaconda」をインストールすることが定石でした。\nAnacondaには、numpyやpandasといった主要なライブラリや\nJupyter Notebook（今はJupyter Labですね）といったツールがデフォルトで入っており\nさらには、フォルダごとに環境を作ったりということもやってくれて便利でした。\nしかし、Anac...",
          "link": "https://zenn.dev/sql_geinin/articles/29f2b0a5c55db2",
          "publishedOn": "2023-01-11T07:38:11.000Z",
          "wordCount": 957,
          "title": "pyenvとpipenvで、快適Python生活（Windows向け）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zti2Pnz_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SQL%25E8%258A%25B8%25E4%25BA%25BA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pyenv%25E3%2581%25A8pipenv%25E3%2581%25A7%25E3%2580%2581%25E5%25BF%25AB%25E9%2581%25A9Python%25E7%2594%259F%25E6%25B4%25BB%25EF%25BC%2588Windows%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1lN01JMEUwbC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5ZTM2NTY5YzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zti2Pnz_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:SQL%25E8%258A%25B8%25E4%25BA%25BA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:pyenv%25E3%2581%25A8pipenv%25E3%2581%25A7%25E3%2580%2581%25E5%25BF%25AB%25E9%2581%25A9Python%25E7%2594%259F%25E6%25B4%25BB%25EF%25BC%2588Windows%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1lN01JMEUwbC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5ZTM2NTY5YzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/4019a27e79381b",
          "author": "kurokawa5",
          "description": "問題\n\n 35. 単語の出現頻度\n文章中に出現する単語とその出現頻度を求め，出現頻度の高い順に並べよ．\n\n solution35.py\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\n\ndef parse_mecab(block):\n    res = []\n    for line in block.split('\\n'):\n        if line == '':\n            return res\n        (surface, attr)...",
          "link": "https://zenn.dev/kurokawa/articles/4019a27e79381b",
          "publishedOn": "2023-01-11T07:30:53.000Z",
          "wordCount": 730,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 35. 単語の出現頻度",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Z393AwHP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252035.%2520%25E5%258D%2598%25E8%25AA%259E%25E3%2581%25AE%25E5%2587%25BA%25E7%258F%25BE%25E9%25A0%25BB%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Z393AwHP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252035.%2520%25E5%258D%2598%25E8%25AA%259E%25E3%2581%25AE%25E5%2587%25BA%25E7%258F%25BE%25E9%25A0%25BB%25E5%25BA%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/2456c7851bc910",
          "author": "Web Life CH",
          "description": "【３リスト】\nYouTube: https://youtu.be/GRV2AqziZso\nhttps://youtu.be/GRV2AqziZso\n今回はPythonの「リスト」について解説します。\nこちらはjavascriptの配列のようなものになります。\n\nmain.py\npersons = [\"taro\", \"jiro\", \"saburo\", \"shiro\"]\n\n# print(persons)\n# print(persons[1])\n\n# for v in persons:\n#   print(v)\n\n# persons[2] = \"hanako\"\n# persons.app...",
          "link": "https://zenn.dev/web_life_ch/articles/2456c7851bc910",
          "publishedOn": "2023-01-11T05:59:20.000Z",
          "wordCount": 213,
          "title": "【Python】Webで使えるPython 基礎編【３リスト】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--37e6xjil--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2593%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--37e6xjil--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2593%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/d6ec1df77b95df",
          "author": "kurokawa5",
          "description": "問題\n\n 34. 名詞の連接\n名詞の連接（連続して出現する名詞）を最長一致で抽出せよ．\n\n solution34.py\ndef parse_mecab(block):\n    res = []\n    for line in block.split('\\n'):\n        if line == '':\n            return res\n        (surface, attr) = line.split('\\t')\n        attr = attr.split(',')\n        lineDict = {\n            'surface':...",
          "link": "https://zenn.dev/kurokawa/articles/d6ec1df77b95df",
          "publishedOn": "2023-01-11T04:21:51.000Z",
          "wordCount": 779,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 34. 名詞の連接",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1BMz0Ig7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252034.%2520%25E5%2590%258D%25E8%25A9%259E%25E3%2581%25AE%25E9%2580%25A3%25E6%258E%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1BMz0Ig7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252034.%2520%25E5%2590%258D%25E8%25A9%259E%25E3%2581%25AE%25E9%2580%25A3%25E6%258E%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/f12654deb756bf",
          "author": "kurokawa5",
          "description": "問題\n\n 33. 「AのB」\n2つの名詞が「の」で連結されている名詞句を抽出せよ．\n\n solution33.py\ndef parse_mecab(block):\n    res = []\n    for line in block.split('\\n'):\n        if line == '':\n            return res\n        (surface, attr) = line.split('\\t')\n        attr = attr.split(',')\n        lineDict = {\n            'surface': s...",
          "link": "https://zenn.dev/kurokawa/articles/f12654deb756bf",
          "publishedOn": "2023-01-11T02:53:41.000Z",
          "wordCount": 763,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 33. 「AのB」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5L2-wyWT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252033.%2520%25E3%2580%258CA%25E3%2581%25AEB%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5L2-wyWT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252033.%2520%25E3%2580%258CA%25E3%2581%25AEB%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/f31a533c9e1b52",
          "author": "kurokawa5",
          "description": "問題\n\n 32. 動詞の基本形\n動詞の基本形をすべて抽出せよ．\n\n solution32.py\ndef parse_mecab(block):\n    res = []\n    for line in block.split('\\n'):\n        if line == '':\n            return res\n        (surface, attr) = line.split('\\t')\n        attr = attr.split(',')\n        lineDict = {\n            'surface': surface,\n  ...",
          "link": "https://zenn.dev/kurokawa/articles/f31a533c9e1b52",
          "publishedOn": "2023-01-10T16:32:28.000Z",
          "wordCount": 599,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 32. 動詞の基本形",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--elOYK6Hs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252032.%2520%25E5%258B%2595%25E8%25A9%259E%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E5%25BD%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--elOYK6Hs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252032.%2520%25E5%258B%2595%25E8%25A9%259E%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E5%25BD%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/17b36db9712a26",
          "author": "kurokawa5",
          "description": "問題\n\n 31. 動詞\n動詞の表層形をすべて抽出せよ．\n\n solution31.py\ndef parse_mecab(block):\n    res = []\n    for line in block.split('\\n'):\n        if line == '':\n            return res\n        (surface, attr) = line.split('\\t')\n        attr = attr.split(',')\n        lineDict = {\n            'surface': surface,\n      ...",
          "link": "https://zenn.dev/kurokawa/articles/17b36db9712a26",
          "publishedOn": "2023-01-10T14:51:59.000Z",
          "wordCount": 599,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 31. 動詞",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ldWV6jAh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252031.%2520%25E5%258B%2595%25E8%25A9%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ldWV6jAh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252031.%2520%25E5%258B%2595%25E8%25A9%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e94bc479080d64",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-083 A - Libra\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c, d = getIntMap()\n    e = a + b\n    f = c + d\n\n    print('Balanced' if e == f else 'Left' if e > f else 'Right')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e94bc479080d64",
          "publishedOn": "2023-01-10T10:38:34.000Z",
          "wordCount": 305,
          "title": "［AtCoder］ABC-083｜A - Libra",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jCgiKHEj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-083%25EF%25BD%259CA%2520-%2520Libra%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jCgiKHEj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-083%25EF%25BD%259CA%2520-%2520Libra%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/28ea79f1283c67",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-083 B - Some Sums\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, a, b = getIntMap()\n\n    r = 0\n    for i in range(1, n + 1):\n        s = sum(map(int, list(str(i))))\n        if s >= a and s <= b:\n            r += i\n    print(r)\n\n\nif __name__...",
          "link": "https://zenn.dev/hyperdb/articles/28ea79f1283c67",
          "publishedOn": "2023-01-10T10:38:34.000Z",
          "wordCount": 352,
          "title": "［AtCoder］ABC-083｜B - Some Sums",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WoWxJui2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-083%25EF%25BD%259CB%2520-%2520Some%2520Sums%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WoWxJui2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-083%25EF%25BD%259CB%2520-%2520Some%2520Sums%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/36e8176afd248c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-082 B - Two Anagrams\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n    t = list(getString())\n\n    s.sort()\n    t.sort()\n    t.reverse()\n\n    print('Yes' if s < t else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/36e8176afd248c",
          "publishedOn": "2023-01-10T10:38:18.000Z",
          "wordCount": 280,
          "title": "［AtCoder］ABC-082｜B - Two Anagrams",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rTzzPjfm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-082%25EF%25BD%259CB%2520-%2520Two%2520Anagrams%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rTzzPjfm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-082%25EF%25BD%259CB%2520-%2520Two%2520Anagrams%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2277f16d6b8c5a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-082 A - Round Up the Mean\n\n\n\n 提出結果\nimport math\n\n\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(math.ceil((a + b) / 2))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2277f16d6b8c5a",
          "publishedOn": "2023-01-10T10:38:18.000Z",
          "wordCount": 271,
          "title": "［AtCoder］ABC-082｜A - Round Up the Mean",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qSwd35Le--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-082%25EF%25BD%259CA%2520-%2520Round%2520Up%2520the%2520Mean%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qSwd35Le--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-082%25EF%25BD%259CA%2520-%2520Round%2520Up%2520the%2520Mean%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/85ba0a5b10594d",
          "author": "kurokawa5",
          "description": "問題\n\n 30. 形態素解析結果の読み込み\n形態素解析結果（neko.txt.mecab）を読み込むプログラムを実装せよ．ただし，各形態素は表層形（surface），基本形（base），品詞（pos），品詞細分類1（pos1）をキーとするマッピング型に格納し，1文を形態素（マッピング型）のリストとして表現せよ．第4章の残りの問題では，ここで作ったプログラムを活用せよ．\n\n solution30.py\ndef parse_mecab(block):\n    res = []\n    for line in block.split('\\n'):\n        if line == ''...",
          "link": "https://zenn.dev/kurokawa/articles/85ba0a5b10594d",
          "publishedOn": "2023-01-10T08:54:33.000Z",
          "wordCount": 604,
          "title": "言語処理100本ノック 2020 (Rev 2) 第4章: 形態素解析 30. 形態素解析結果の読み込み",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XYfgX8WY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252030.%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%25E7%25B5%2590%25E6%259E%259C%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XYfgX8WY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC4%25E7%25AB%25A0%253A%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%252030.%2520%25E5%25BD%25A2%25E6%2585%258B%25E7%25B4%25A0%25E8%25A7%25A3%25E6%259E%2590%25E7%25B5%2590%25E6%259E%259C%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/86aa9386b40509",
          "author": "Web Life CH",
          "description": "【２変数】\nYouTube: https://youtu.be/XekurJvEkKM\nhttps://youtu.be/XekurJvEkKM\n今回はPythonの変数について解説します。\n最初に「Hello World」をターミナルに表示するのですが、\nJSと同様に文字列には\nダブルクォーテーションかシングルクォーテーションを使用します。\nPythonファイルの実行方法は、\nVSコードの右上の再生ボタンをクリックするか、\nターミナルに「python main.py」を入力して実行します。\n変数につきましては、JSの「const」のようなものをつける必要はなく、\nそのまま変数名を入...",
          "link": "https://zenn.dev/web_life_ch/articles/86aa9386b40509",
          "publishedOn": "2023-01-10T07:43:33.000Z",
          "wordCount": 207,
          "title": "【Python】Webで使えるPython 基礎編【２変数】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jxm6Emwu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2592%25E5%25A4%2589%25E6%2595%25B0%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jxm6Emwu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2590%25EF%25BC%2592%25E5%25A4%2589%25E6%2595%25B0%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/43f2a7dd00b025",
          "author": "kurokawa5",
          "description": "問題\n\n 29. 国旗画像のURLを取得する\nテンプレートの内容を利用し，国旗画像のURLを取得せよ．（ヒント: [1]MediaWiki APIの[2]imageinfoを呼び出して，ファイル参照をURLに変換すればよい）．\n\n solution29.py\nimport pandas as pd\nimport re\nimport requests\n\ndf_j = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df_j.query('title==...",
          "link": "https://zenn.dev/kurokawa/articles/43f2a7dd00b025",
          "publishedOn": "2023-01-10T06:42:57.000Z",
          "wordCount": 789,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 29. 国旗画像のURLを取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kbA0GluR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252029.%2520%25E5%259B%25BD%25E6%2597%2597%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AEURL%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kbA0GluR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252029.%2520%25E5%259B%25BD%25E6%2597%2597%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AEURL%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/7b0a0fc3c37f37",
          "author": "kurokawa5",
          "description": "問題\n\n 28. MediaWikiマークアップの除去\n27の処理に加えて，テンプレートの値からMediaWikiマークアップを可能な限り除去し，国の基本情報を整形せよ．\n\n solution28.py\nimport pandas as pd\nimport re\n\ndf_j = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df_j.query('title==\"イギリス\"')['text'].values[0]\n\ntemplate_text = ...",
          "link": "https://zenn.dev/kurokawa/articles/7b0a0fc3c37f37",
          "publishedOn": "2023-01-10T05:08:13.000Z",
          "wordCount": 601,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 28. MediaWikiマークアップの除去",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--e791nC1T--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252028.%2520MediaWiki%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AE%25E9%2599%25A4%25E5%258E%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--e791nC1T--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252028.%2520MediaWiki%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AE%25E9%2599%25A4%25E5%258E%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/955a8ea3a255ce",
          "author": "kurokawa5",
          "description": "問題\n\n 27. 内部リンクの除去\n26の処理に加えて，テンプレートの値からMediaWikiの内部リンクマークアップを除去し，テキストに変換せよ（参考: [1]マークアップ早見表）．\n\n solution27.py\nimport pandas as pd\nimport re\n\ndf_j = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df_j.query('title==\"イギリス\"')['text'].values[0]\n\ntemplate_...",
          "link": "https://zenn.dev/kurokawa/articles/955a8ea3a255ce",
          "publishedOn": "2023-01-10T04:00:43.000Z",
          "wordCount": 546,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 27. 内部リンクの除去",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lBuzW_im--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252027.%2520%25E5%2586%2585%25E9%2583%25A8%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AE%25E9%2599%25A4%25E5%258E%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lBuzW_im--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252027.%2520%25E5%2586%2585%25E9%2583%25A8%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AE%25E9%2599%25A4%25E5%258E%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/saru_da_mon/articles/df34772a14d73e",
          "author": "saru_da_mon",
          "description": "https://comp.probspace.com/competitions/pollen_counts\n\n PobSpace 花粉飛散予測_MODEL_STACK\n作成者：saru_da_mon（AI-FOX）\n\n 本コードの使用権利\nMIT License に準拠する。\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in ...",
          "link": "https://zenn.dev/saru_da_mon/articles/df34772a14d73e",
          "publishedOn": "2023-01-10T02:44:18.000Z",
          "wordCount": 25464,
          "title": "ProbSpace pollen counts （PVS 2nd-Code）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--F8bUX-9E--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:saru_da_mon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ProbSpace%2520pollen%2520counts%2520%25EF%25BC%2588PVS%25202nd-Code%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SZEsxZlJ0TS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwNDU5NmRlMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--F8bUX-9E--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:saru_da_mon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ProbSpace%2520pollen%2520counts%2520%25EF%25BC%2588PVS%25202nd-Code%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1SZEsxZlJ0TS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwNDU5NmRlMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ryutaro_h/articles/ed58ee31dcd2b4",
          "author": "Ryutaro",
          "description": "初めに\nコード設計について「良いコード/悪いコードで学ぶ設計入門 ―保守しやすい 成長し続けるコードの書き方」を手に取り、学んでいます。本記事はこちらを参考に書いています。\n今回は前回に引き続き、条件分岐について取り上げます。\n!\n書籍のコードはJavaで書かれていますが、本記事のコードは私がPythonに書き換えたものです。より良い書き方がありましたらご指摘いただけると泣いて喜びます\n\n\n\n 本題\n\n 条件の重複(アンチパターン)\n条件の重複はコードを書いているとよくあることではないでしょうか。本書ではECサイトアプリを想定し、優良会員の判定ロジックが一部重複されている例が取り上げ...",
          "link": "https://zenn.dev/ryutaro_h/articles/ed58ee31dcd2b4",
          "publishedOn": "2023-01-10T00:51:29.000Z",
          "wordCount": 1186,
          "title": "[コード設計]条件分岐2/ポリシーパターン",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--V9HTQF1t--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryutaro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A8%25AD%25E8%25A8%2588%255D%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%25902%252F%25E3%2583%259D%25E3%2583%25AA%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RTGdza19qdi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--V9HTQF1t--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ryutaro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A8%25AD%25E8%25A8%2588%255D%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%25902%252F%25E3%2583%259D%25E3%2583%25AA%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1RTGdza19qdi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/shimat/articles/149779377ee34b",
          "author": "shimat",
          "description": "ネタ\n日本の陸地で、鉄道駅から一番遠い地点はどこか？\n普通に考えれば南鳥島[1]になってしまいますが、これを鉄道がある主要5島（本州・北海道・九州・四国・沖縄本島）の中において考えてみます。[2]\n道のりで判定できると最高ですが、難しいので[3]直線距離とします。厳密な解ではなく、ある程度この辺、と分かれば満足です。\n地図情報もPython数値計算も不得手なので、諸々うまい実装ではないと思います。\n\n 成果物\nStreamlit\nhttps://shimat-station-voronoi-main-czmu73.streamlit.app/\n東京23区の例です。駅から遠いほど赤・白...",
          "link": "https://zenn.dev/shimat/articles/149779377ee34b",
          "publishedOn": "2023-01-09T23:26:48.000Z",
          "wordCount": 3737,
          "title": "駅から一番遠い地点を探る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OuwA-fNK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E9%25A7%2585%25E3%2581%258B%25E3%2582%2589%25E4%25B8%2580%25E7%2595%25AA%25E9%2581%25A0%25E3%2581%2584%25E5%259C%25B0%25E7%2582%25B9%25E3%2582%2592%25E6%258E%25A2%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11cmZ5M2RXcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOTgyYTAyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OuwA-fNK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimat%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E9%25A7%2585%25E3%2581%258B%25E3%2582%2589%25E4%25B8%2580%25E7%2595%25AA%25E9%2581%25A0%25E3%2581%2584%25E5%259C%25B0%25E7%2582%25B9%25E3%2582%2592%25E6%258E%25A2%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11cmZ5M2RXcS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOTgyYTAyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/3f730ca3ca5272",
          "author": "kurokawa5",
          "description": "問題\n\n 26. 強調マークアップの除去\n25の処理時に，テンプレートの値からMediaWikiの強調マークアップ（弱い強調，強調，強い強調のすべて）を除去してテキストに変換せよ（参考: [1]マークアップ早見表）．\n\n solution26.py\nimport pandas as pd\nimport re\n\ndf_j = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df_j.query('title==\"イギリス\"')['text'].valu...",
          "link": "https://zenn.dev/kurokawa/articles/3f730ca3ca5272",
          "publishedOn": "2023-01-09T17:37:28.000Z",
          "wordCount": 487,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 26. 強調マークアップの除去",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1b1mDp2T--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252026.%2520%25E5%25BC%25B7%25E8%25AA%25BF%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AE%25E9%2599%25A4%25E5%258E%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1b1mDp2T--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252026.%2520%25E5%25BC%25B7%25E8%25AA%25BF%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AE%25E9%2599%25A4%25E5%258E%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/tokku5552/articles/glue-verifacation",
          "author": "tokku5552",
          "description": "以下の記事を参考にしながら少し改良して動かすようにしました。\nhttps://docs.aws.amazon.com/ja_jp/glue/latest/dg/aws-glue-programming-etl-libraries.html\nhttps://future-architect.github.io/articles/20220428a/\nversion: '3.5'\nservices:\n  localstack:\n    container_name: glue-docker-sample-localstack\n    image: localstack/localstack:...",
          "link": "https://zenn.dev/tokku5552/articles/glue-verifacation",
          "publishedOn": "2023-01-09T15:09:58.000Z",
          "wordCount": 1369,
          "title": "AWS Glueの開発環境を整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--E9KkFbbN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tokku5552%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:AWS%2520Glue%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZOEtCcHJEbC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2YmI5OWJjYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--E9KkFbbN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tokku5552%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:AWS%2520Glue%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZOEtCcHJEbC0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2YmI5OWJjYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/eeeb3c71c18446",
          "author": "kurokawa5",
          "description": "問題\n\n 25. テンプレートの抽出\n記事中に含まれる「基礎情報」テンプレートのフィールド名と値を抽出し，辞書オブジェクトとして格納せよ．\n\n solution25.py\nimport pandas as pd\nimport re\n\ndf_j = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df_j.query('title==\"イギリス\"')['text'].values[0]\n\ntemplate_text = re.findall(r'\\{\\...",
          "link": "https://zenn.dev/kurokawa/articles/eeeb3c71c18446",
          "publishedOn": "2023-01-09T14:17:39.000Z",
          "wordCount": 547,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 25. テンプレートの抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DxarbkoK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252025.%2520%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DxarbkoK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252025.%2520%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/ymd_h/articles/ea7f714dddd5af",
          "author": "山田(ymd)",
          "description": "1. はじめに\n（最近全然Zennの記事を書けていなかったので、今年こそは早い段階で記事にしていこうと思います。）\nお正月の休暇中に趣味で、微分可能な量子回路シミュレータ diffq の開発をはじめました。\nhttps://github.com/ymd-h/diffq\n\n 2. ポイント\n\n主ターゲットは、量子回路計算と古典計算を組み合わせる量子機械学習\n\nJAX を採用\n\nGPUフレンドリー\nベクトル化が容易 (jax.vmap() etc.)\n微分可能 (jax.grad() etc.)\n(現時点では) 非Windowsはサポート\n\n\n開発の動機は、量子機械学習や量子回路シミュレ...",
          "link": "https://zenn.dev/ymd_h/articles/ea7f714dddd5af",
          "publishedOn": "2023-01-09T11:46:16.000Z",
          "wordCount": 592,
          "title": "[Python/JAX] 微分可能な量子回路シミュレーターの開発を始めた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wl9qmZBy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E7%2594%25B0%2528ymd%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BPython%252FJAX%255D%2520%25E5%25BE%25AE%25E5%2588%2586%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E9%2587%258F%25E5%25AD%2590%25E5%259B%259E%25E8%25B7%25AF%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XTmt4MXNhQi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJhN2RkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wl9qmZBy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25B1%25B1%25E7%2594%25B0%2528ymd%2529%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BPython%252FJAX%255D%2520%25E5%25BE%25AE%25E5%2588%2586%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E9%2587%258F%25E5%25AD%2590%25E5%259B%259E%25E8%25B7%25AF%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1XTmt4MXNhQi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJhN2RkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/makunugi/articles/ebecbb5de562d6",
          "author": "maKunugi",
          "description": "概要\nこんにちは、maKunugiです\n今回は表題の通り、会話型AI(= 会話ができるAI)のキャラクターを簡単に生成できるサービスを作ってみた話について、紹介させていただきます。会話ができるAIに興味がある方、ぜひ読んでみていただけると嬉しいです！\n\n 作ったもの\n作ったもの: Chara.AI Generator\n読み方: キャラエーアイ　ジェネレーター\nhttps://mebo.work/generator\n私はmebo(ミーボ)という会話型AI構築サービスを2年ほど運営しており、そのサービスの１つの機能として開発しました。\nChara.AI Generatorは、下記のような...",
          "link": "https://zenn.dev/makunugi/articles/ebecbb5de562d6",
          "publishedOn": "2023-01-09T09:52:31.000Z",
          "wordCount": 580,
          "title": "10個の質問に答えるだけで会話型AIキャラを生成できるサービス「Chara.AI Generator」を作った！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qixiF4Ei--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:maKunugi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:10%25E5%2580%258B%25E3%2581%25AE%25E8%25B3%25AA%25E5%2595%258F%25E3%2581%25AB%25E7%25AD%2594%25E3%2581%2588%25E3%2582%258B%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E4%25BC%259A%25E8%25A9%25B1%25E5%259E%258BAI%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2580%258CChara.AI%2520Generator%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pxMVdxcU5TRDdlTGpnREFVdXdnYlowcE1JcXZFVDBlR0lDMXNRaHp3PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qixiF4Ei--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:maKunugi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:10%25E5%2580%258B%25E3%2581%25AE%25E8%25B3%25AA%25E5%2595%258F%25E3%2581%25AB%25E7%25AD%2594%25E3%2581%2588%25E3%2582%258B%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E4%25BC%259A%25E8%25A9%25B1%25E5%259E%258BAI%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2580%258CChara.AI%2520Generator%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pxMVdxcU5TRDdlTGpnREFVdXdnYlowcE1JcXZFVDBlR0lDMXNRaHp3PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d5e9cbf0375e40",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-081 A - Placing Marbles\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(map(int, list(getString())))\n\n    print(sum(s))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d5e9cbf0375e40",
          "publishedOn": "2023-01-09T08:54:08.000Z",
          "wordCount": 240,
          "title": "［AtCoder］ABC-081｜A - Placing Marbles",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B3PwBcde--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-081%25EF%25BD%259CA%2520-%2520Placing%2520Marbles%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B3PwBcde--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-081%25EF%25BD%259CA%2520-%2520Placing%2520Marbles%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/6ba45884c5b045",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-081 B - Shift only\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef mod(l):\n    return sum(list(map(lambda x: x % 2, l)))\n\n\ndef div(l):\n    return list(map(lambda x: x // 2, l))\n\n\ndef main():\n    n = getInt()\n    a =...",
          "link": "https://zenn.dev/hyperdb/articles/6ba45884c5b045",
          "publishedOn": "2023-01-09T08:52:18.000Z",
          "wordCount": 451,
          "title": "［AtCoder］ABC-081｜B - Shift only",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--21MSP1kQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-081%25EF%25BD%259CB%2520-%2520Shift%2520only%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--21MSP1kQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-081%25EF%25BD%259CB%2520-%2520Shift%2520only%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/omusan/articles/90ff71f300c2c8",
          "author": "Sota Omura",
          "description": "久方ぶりにpythonで競プロに挑戦しようと思い、思い出しがてらメモ。\n\n １行での入力\nn = input() # 1つの文字列を受け取る\nn = int(input()) # 1つの整数を受け取る\nn = float(input())　# 1つの小数を受け取る\n\nn = input().split(sep) # 複数の文字列をリストとして受け取る\nn = list(map(int, input().split(sep))) # 複数の整数をリストとして受け取る\n\n 複数行での入力\nS = []\nfor _ in range (X)\nS.append(input()) # X回入力があ...",
          "link": "https://zenn.dev/omusan/articles/90ff71f300c2c8",
          "publishedOn": "2023-01-09T07:42:47.000Z",
          "wordCount": 563,
          "title": "競プロ python 入力チートシート",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kREnUgqD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Sota%2520Omura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%2520python%2520%25E5%2585%25A5%25E5%258A%259B%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEhGSEZLb1hDVTlRUHpWdGlVeGthSlB4U2hCY3ROZ045aGk4YTQxdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kREnUgqD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Sota%2520Omura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%2520python%2520%25E5%2585%25A5%25E5%258A%259B%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEhGSEZLb1hDVTlRUHpWdGlVeGthSlB4U2hCY3ROZ045aGk4YTQxdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/eefbdbf3c1026e",
          "author": "kurokawa5",
          "description": "問題\n\n 24. ファイル参照の抽出\n記事から参照されているメディアファイルをすべて抜き出せ．\n\n solution24.py\nimport pandas as pd\nimport re\n\ndf_j = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df_j.query('title==\"イギリス\"')['text'].values[0]\n\nmedia = re.findall(r'\\[\\[ファイル:(.+?)(?:\\|.+)*\\]\\]', tex...",
          "link": "https://zenn.dev/kurokawa/articles/eefbdbf3c1026e",
          "publishedOn": "2023-01-09T06:30:08.000Z",
          "wordCount": 332,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 24. ファイル参照の抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8IEh76p6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252024.%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%258F%2582%25E7%2585%25A7%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8IEh76p6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252024.%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%258F%2582%25E7%2585%25A7%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/web_life_ch/articles/49e39f16a07691",
          "author": "Web Life CH",
          "description": "【１環境説明】\nYouTube: https://youtu.be/iwVYTpC5iZM\nhttps://youtu.be/iwVYTpC5iZM\n今回からPythonの基本操作について解説します。\n動作環境につきましては、\n自分の方では\nhttps://docs.anaconda.com/navigator/index.html\nこちらの「Anaconda Navigator」というツールを使用して、\n・Python本体\n・ライブラリの管理\n・仮想環境の構築\nこれらをまとめて設定しています。\n!\nこちらのツールですが、いくつか注意が必要です。\n・容量が３G程度必要\n・PCのユーザ...",
          "link": "https://zenn.dev/web_life_ch/articles/49e39f16a07691",
          "publishedOn": "2023-01-09T06:29:43.000Z",
          "wordCount": 186,
          "title": "【Python】Webで使えるPython 基礎編 【１環境説明】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KmvK1N0v--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%2520%25E3%2580%2590%25EF%25BC%2591%25E7%2592%25B0%25E5%25A2%2583%25E8%25AA%25AC%25E6%2598%258E%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KmvK1N0v--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Web%2520Life%2520CH%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Python%25E3%2580%2591Web%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BPython%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%2520%25E3%2580%2590%25EF%25BC%2591%25E7%2592%25B0%25E5%25A2%2583%25E8%25AA%25AC%25E6%2598%258E%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/momiji777/articles/65d0167a39b9c9",
          "author": "momiji777",
          "description": "https://www.youtube.com/watch?v=dTe2_j1qIYc\npythonファイルを共有するときに見られたくない部分があるかと思います。\n「pyarmor」を利用することで、それを可能にすることができます。\npython -m venv test\n.\\test\\Scripts\\Activate\npip install pyarmor\n今回暗号化するのはこのarmor.pyファイル\nimport tkinter\nimport tkinter.ttk as ttk\n\nclass Application(tkinter.Frame):\n    def __init__...",
          "link": "https://zenn.dev/momiji777/articles/65d0167a39b9c9",
          "publishedOn": "2023-01-09T06:15:20.000Z",
          "wordCount": 789,
          "title": "pythonコードを暗号化(難読化)【pyarmor】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bY72m6tJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%2528%25E9%259B%25A3%25E8%25AA%25AD%25E5%258C%2596%2529%25E3%2580%2590pyarmor%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bY72m6tJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%2528%25E9%259B%25A3%25E8%25AA%25AD%25E5%258C%2596%2529%25E3%2580%2590pyarmor%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/7c09df652cd1e1",
          "author": "kurokawa5",
          "description": "問題\n\n 23. セクション構造\n記事中に含まれるセクション名とそのレベル（例えば”== セクション名 ==”なら1）を表示せよ.\n\n solution23.py\nimport re\nimport pandas as pd\n\ndf = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df.query('title==\"イギリス\"')['text'].values[0]\n\nsection_pattern = r'(={2,})(.+?)={2,}'\ns...",
          "link": "https://zenn.dev/kurokawa/articles/7c09df652cd1e1",
          "publishedOn": "2023-01-09T05:43:34.000Z",
          "wordCount": 445,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 23. セクション構造",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FBgVoLrH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252023.%2520%25E3%2582%25BB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E6%25A7%258B%25E9%2580%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FBgVoLrH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa5%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252023.%2520%25E3%2582%25BB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E6%25A7%258B%25E9%2580%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/toranoko114/books/c087933ac982a3",
          "author": "toranoko114",
          "description": "野村証券のIPOブックビルディング申込を自動化するプログラムを公開します。",
          "link": "https://zenn.dev/toranoko114/books/c087933ac982a3",
          "publishedOn": "2023-01-09T05:23:32.000Z",
          "wordCount": 57,
          "title": "Pythonプログラムで野村証券のIPOブックビルディング申込を自動化しよう！",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/naa0yama/books/python-boilerplate",
          "author": "naa0yama",
          "description": "Windows 環境に Linux をお手軽構築し新規参入とチーム開発に使えるハンドブックとして整理しました。\n\nWindows / WSL2 / VSCode / Python / Docker\nasdf / fish / pre-commit / black / flake8 / isort / mypy / pytest / tox",
          "link": "https://zenn.dev/naa0yama/books/python-boilerplate",
          "publishedOn": "2023-01-09T04:58:32.000Z",
          "wordCount": 192,
          "title": "VSCode で極力手を抜いて開発するハンドブック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kXSL5Cn5--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kZDJkZTRmYmEyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kXSL5Cn5--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kZDJkZTRmYmEyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/oreilly_ota/articles/ad54f3478a832e",
          "author": "オライリーヨッシー",
          "description": "レインボー攻撃とは\nレインボー攻撃とは、レインボーテーブルを使ってハッシュ化されたデータを解読する攻撃である。アカウントを乗っ取る目的として、パスワード解読に使われるパスワードクラックの一つとして知られる。\n\n ハッシュ化\nまずハッシュ化とは、「ハッシュ関数」というアルゴリズムによって、平文をハッシュ値に書き換えることである。（例：Password123という平文から、43nfneo43jofde31sdwというハッシュ値へ書き換える）\n\n ハッシュ化と暗号化の違い\nハッシュ化されたパスワードは、暗号化されたパスワードとは異なり、データを元に戻すことができない。一方で、暗号化されたパ...",
          "link": "https://zenn.dev/oreilly_ota/articles/ad54f3478a832e",
          "publishedOn": "2023-01-09T04:50:09.000Z",
          "wordCount": 608,
          "title": "レインボーテーブル攻撃とは（＊コードによる実演あり）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qje8Il31--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E6%2594%25BB%25E6%2592%2583%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%2588%25EF%25BC%258A%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25AE%259F%25E6%25BC%2594%25E3%2581%2582%25E3%2582%258A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qje8Il31--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A8%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E6%2594%25BB%25E6%2592%2583%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%2588%25EF%25BC%258A%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25AE%259F%25E6%25BC%2594%25E3%2581%2582%25E3%2582%258A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/toranoko114/books/553d557cb2c12f",
          "author": "toranoko114",
          "description": "SBI証券のIPOブックビルディング申込を自動化するプログラムを公開します。",
          "link": "https://zenn.dev/toranoko114/books/553d557cb2c12f",
          "publishedOn": "2023-01-09T03:30:12.000Z",
          "wordCount": 57,
          "title": "PythonプログラムでSBI証券のIPOブックビルディング申込を自動化しよう！",
          "imageUrl": "https://zenn.dev/images/logo-only-dark.png"
        },
        {
          "id": "https://zenn.dev/momiji777/articles/30961baceb9897",
          "author": "momiji777",
          "description": "はじめに\n以前、「pyinstaller」でexe化する方法をご紹介しました。\nhttps://zenn.dev/momiji777/articles/2e733826b32fa6\nhttps://www.youtube.com/watch?v=4IbA14BPQTI\n今回は、「Nuitka」というライブラリを用いて作成します。\n\n 仮想環境を作成し、ライブラリをインストール\npython -m venv exe\n.\\exe\\Scripts\\activate\npip install nuitka\n\n exe化するプログラムを作成\n実際にexe化していくために、簡単なアプリを作成します...",
          "link": "https://zenn.dev/momiji777/articles/30961baceb9897",
          "publishedOn": "2023-01-08T22:22:51.000Z",
          "wordCount": 322,
          "title": "python軽量exeライブラリNuitkaが本当か検証してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4CxV8B-m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E8%25BB%25BD%25E9%2587%258Fexe%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AANuitka%25E3%2581%258C%25E6%259C%25AC%25E5%25BD%2593%25E3%2581%258B%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4CxV8B-m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:momiji777%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:python%25E8%25BB%25BD%25E9%2587%258Fexe%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AANuitka%25E3%2581%258C%25E6%259C%25AC%25E5%25BD%2593%25E3%2581%258B%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1ZUzZGSkJSSi0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZjA4ODEzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/b4b017a929039e",
          "author": "kurokawa",
          "description": "問題\n\n 22. カテゴリ名の抽出\n記事のカテゴリ名を（行単位ではなく名前で）抽出せよ．\n\n solution22.py\nimport pandas as pd\n\ndf = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df.query('title==\"イギリス\"')['text'].values[0]\nsplited_text_uk = text_uk.split('\\n')\nans = list(filter(lambda x: '[Cate...",
          "link": "https://zenn.dev/kurokawa/articles/b4b017a929039e",
          "publishedOn": "2023-01-08T14:49:53.000Z",
          "wordCount": 398,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 22. カテゴリ名の抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lBe-y56o--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252022.%2520%25E3%2582%25AB%25E3%2583%2586%25E3%2582%25B4%25E3%2583%25AA%25E5%2590%258D%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lBe-y56o--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252022.%2520%25E3%2582%25AB%25E3%2583%2586%25E3%2582%25B4%25E3%2583%25AA%25E5%2590%258D%25E3%2581%25AE%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/53e0c4f61d8801",
          "author": "kurokawa",
          "description": "問題\n\n 21. カテゴリ名を含む行を抽出\n記事中でカテゴリ名を宣言している行を抽出せよ\n\n solution21.py\nimport pandas as pd\n\ndf = pd.read_json('chapter03/jawiki-country.json.gz', lines=True, compression='infer')\ntext_uk = df.query('title==\"イギリス\"')['text'].values[0]\n\nsplited_text_uk = text_uk.split('\\n')\nans = list(filter(lambda x: '[Cat...",
          "link": "https://zenn.dev/kurokawa/articles/53e0c4f61d8801",
          "publishedOn": "2023-01-08T13:28:45.000Z",
          "wordCount": 293,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 21. カテゴリ名を含む行を抽出",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--T74HJsya--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252021.%2520%25E3%2582%25AB%25E3%2583%2586%25E3%2582%25B4%25E3%2583%25AA%25E5%2590%258D%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2580%25E8%25A1%258C%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--T74HJsya--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252021.%2520%25E3%2582%25AB%25E3%2583%2586%25E3%2582%25B4%25E3%2583%25AA%25E5%2590%258D%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2580%25E8%25A1%258C%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/quiver/articles/304e1833b14ce9",
          "author": "quiver",
          "description": "キプチョゲやキリアンが愛用しているスポーツウォッチCOROS(カロス)は、計測したデータをダッシュボードTraining Hubから閲覧できます。\n生成されたデータをシステマティックな取得したいことがありますが、残念ながら、Training Hubは公式なAPIが存在しません。\nそのため、ブラウザ(アプリ)閲覧時と同じ仕組みを使い、COROS Training HubからAPIでデータをcURL/Python経由で取得する方法を紹介します。\n\n 前提\n\nCOROS Training Hubのアカウントを所持している\n2023/01/09時点の情報\n\n\n APIの流れ\nCOROS Trai...",
          "link": "https://zenn.dev/quiver/articles/304e1833b14ce9",
          "publishedOn": "2023-01-08T12:01:13.000Z",
          "wordCount": 543,
          "title": "COROS(カロス)トレーニングハブのデータをAPI経由で取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--04VGEGTa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:quiver%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:COROS%2528%25E3%2582%25AB%25E3%2583%25AD%25E3%2582%25B9%2529%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%258F%25E3%2583%2596%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592API%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oQ0FMSXMyMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZTA5M2I2ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--04VGEGTa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:quiver%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:COROS%2528%25E3%2582%25AB%25E3%2583%25AD%25E3%2582%25B9%2529%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%258F%25E3%2583%2596%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592API%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1oQ0FMSXMyMy0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZTA5M2I2ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/sobaotto/articles/2648e20d3ad41f",
          "author": "sobaotto",
          "description": "注釈\n自分が競プロを始めたばかりなので、問題を解く上で必要だと思ったことや気づきなどを随時まとめていこうと思います。\n\n 入力を受け取る方法\n\n入力\n\n\nN\nx1\nx2\n:\nxN\n\n\n入力例\n\n\n3\n2\n5\n4\n\nn = int(input())\nlist=[input() for i in range(n)]\n\nprint(list) # [2, 5, 4]\n\n 参考\nhttps://qiita.com/jamjamjam/items/e066b8c7bc85487c0785",
          "link": "https://zenn.dev/sobaotto/articles/2648e20d3ad41f",
          "publishedOn": "2023-01-08T10:39:55.000Z",
          "wordCount": 173,
          "title": "【たった1分】AtCoder初心者が初めて正解するため知っておくべきこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WsOg8P5G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sobaotto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F1%25E5%2588%2586%25E3%2580%2591AtCoder%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E6%25AD%25A3%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djODJLZlJXUzE4dUZnYWFxZkYyRTBMeHlnbjVoX3RVYWxEQlZNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WsOg8P5G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sobaotto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F1%25E5%2588%2586%25E3%2580%2591AtCoder%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E6%25AD%25A3%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djODJLZlJXUzE4dUZnYWFxZkYyRTBMeHlnbjVoX3RVYWxEQlZNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/mom/articles/4fd7c02bcc9087",
          "author": "TechStar",
          "description": "Python開発では、Visual Studioではなく、Visual Studio Codeを使用することが一般的ですが、C++などの開発経験が豊富で、Visual Studioに使い慣れた方がPythonを使いたい場合は、Visual Studioを選択したいかもしれません。\nそんな方のために、Visual StudioでPythonを実行するにあたり、最低限知っておくと、スムーズにPython実行までできる知識を以下にまとめています。\n\n 前提\nVisual Studioをインストール済みであること\n\n 準備\nVisual Studioは起動していない状態で、以下の手順に沿って、...",
          "link": "https://zenn.dev/mom/articles/4fd7c02bcc9087",
          "publishedOn": "2023-01-08T09:45:36.000Z",
          "wordCount": 290,
          "title": "Visual StudioでPythonを使用する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--v9TCgdXl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TechStar%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Visual%2520Studio%25E3%2581%25A7Python%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd3VqeWpoTWdoSFNNRlZjRTd4QlNxZ2owdEd1MGtIellERHA2cVc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--v9TCgdXl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:TechStar%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Visual%2520Studio%25E3%2581%25A7Python%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd3VqeWpoTWdoSFNNRlZjRTd4QlNxZ2owdEd1MGtIellERHA2cVc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f1b425cb431524",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-080 A - Parking\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    n, a, b = getIntMap()\n    c = n * a\n\n    print(c if c < b else b)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f1b425cb431524",
          "publishedOn": "2023-01-08T09:33:31.000Z",
          "wordCount": 263,
          "title": "［AtCoder］ABC-080｜A - Parking",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2JcVqi69--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-080%25EF%25BD%259CA%2520-%2520Parking%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2JcVqi69--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-080%25EF%25BD%259CA%2520-%2520Parking%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9365eef7818dde",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-078 A - Good Integer\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    n = list(getString())\n    n.sort()\n\n    print('Yes' if n[0] == n[1] and n[0] == n[2] else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9365eef7818dde",
          "publishedOn": "2023-01-08T09:33:31.000Z",
          "wordCount": 282,
          "title": "［AtCoder］ABC-079｜A - Good Integer",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--q_-wQGpD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-079%25EF%25BD%259CA%2520-%2520Good%2520Integer%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--q_-wQGpD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-079%25EF%25BD%259CA%2520-%2520Good%2520Integer%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/8e577692cde16a",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-080 B - Harshad Number\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n    l = map(int, list(str(x)))\n\n    print('Yes' if x % sum(l) == 0 else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/8e577692cde16a",
          "publishedOn": "2023-01-08T09:33:30.000Z",
          "wordCount": 284,
          "title": "［AtCoder］ABC-080｜B - Harshad Number",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DzWPlxFd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-080%25EF%25BD%259CB%2520-%2520Harshad%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DzWPlxFd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-080%25EF%25BD%259CB%2520-%2520Harshad%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5fc1c75bbb986b",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-079 B - Lucas Number\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n    l = [0] * (n + 1)\n\n    l[0] = 2\n    l[1] = 1\n    for i in range(2, n + 1):\n        l[i] = l[i - 1] + l[i - 2]\n    print(l[n])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/5fc1c75bbb986b",
          "publishedOn": "2023-01-08T09:33:30.000Z",
          "wordCount": 360,
          "title": "［AtCoder］ABC-079｜B - Lucas Number",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6v8KKFKG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-079%25EF%25BD%259CB%2520-%2520Lucas%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6v8KKFKG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-079%25EF%25BD%259CB%2520-%2520Lucas%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1NSmI5QUFEUS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/yuta_enginner/articles/2886f2b41a048f",
          "author": "Yuta",
          "description": "「esp32 UDP 方法」でググると、色々な記事がヒットしますが、断片的な情報しか書かれていない記事が多すぎます。\nまた、ホストやポートなどで、いきなり「127.0.0.1」と書かれても、それが任意の数値なのか何か意味のある数値なのか解説されていないので、初心者にはあまりにも不親切です。\nそこで、この記事では工作をするために必要な情報を解説しつつ、読んだ人が誰でも作れることを目的に解説します。\n※ ぶっちゃけ、レイヤーとかプロトコルなんて工作する上ではどうでもいいので、その辺の解説はしません\n\n UDPとTCP どちらを選ぶか\n前提として、この記事に辿り着いた時点で、読者は「ESP32...",
          "link": "https://zenn.dev/yuta_enginner/articles/2886f2b41a048f",
          "publishedOn": "2023-01-08T09:18:32.000Z",
          "wordCount": 1152,
          "title": "ESP32でUDP通信する方法を誰よりもわかりやすく解説　お試し編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eND6-sJv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuta%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ESP32%25E3%2581%25A7UDP%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25AA%25B0%25E3%2582%2588%25E3%2582%258A%25E3%2582%2582%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2580%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pSNWN1eWVkem1YMEtUUi1tRUg2VklaU0NtMmkwREp1SU1Ra3lpVnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eND6-sJv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuta%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:ESP32%25E3%2581%25A7UDP%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25AA%25B0%25E3%2582%2588%25E3%2582%258A%25E3%2582%2582%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2580%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pSNWN1eWVkem1YMEtUUi1tRUg2VklaU0NtMmkwREp1SU1Ra3lpVnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/2865e205684475",
          "author": "kurokawa",
          "description": "問題\n\nWikipediaの記事を以下のフォーマットで書き出したファイルjawiki-country.json.gzがある．\n\n1行に1記事の情報がJSON形式で格納される\n各行には記事名が”title”キーに，記事本文が”text”キーの辞書オブジェクトに格納され，そのオブジェクトがJSON形式で書き出される\nファイル全体はgzipで圧縮される\n\n以下の処理を行うプログラムを作成せよ．\n\n\n 20. JSONデータの読み込み\nWikipedia記事のJSONファイルを読み込み，「イギリス」に関する記事本文を表示せよ．問題21-29では，ここで抽出した記事本文に対して実行せよ．\n\n ...",
          "link": "https://zenn.dev/kurokawa/articles/2865e205684475",
          "publishedOn": "2023-01-08T08:55:19.000Z",
          "wordCount": 288,
          "title": "言語処理100本ノック 2020 (Rev 2) 第3章: 正規表現 20. JSONデータの読み込み",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pOSIzZaW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252020.%2520JSON%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pOSIzZaW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC3%25E7%25AB%25A0%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%252020.%2520JSON%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/eito_blog/articles/cf6fbfdc9314b1",
          "author": "エイト",
          "description": "このページではbatファイルを定期的（毎日15:00）に実行することを例に、設定方法を解説します。\n\n タスクスケジューラを開く\nCortanaの検索窓に「タスクスケジューラ」と入力し、表示されたタスクスケジューラをクリックして開きます。\n\n\n タスクを作成する\n基本タスクの作成をクリックします。\n\n\n 基本タスクの作成\n任意の名前と説明を入力して次へをクリックします。\n\n\n トリガー\n任意の頻度を選択（本ページでは毎日を選択）し、次へをクリックします。\n\n任意の時間を設定（本ページでは15:00:00）し、次へをクリックします。\n\nプログラムの開始を選択し、次へをクリックします。\n\n...",
          "link": "https://zenn.dev/eito_blog/articles/cf6fbfdc9314b1",
          "publishedOn": "2023-01-08T08:49:29.000Z",
          "wordCount": 152,
          "title": "【Windows 10】タスクスケジューラで定期的にプログラムを実行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uNMPEOTq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Windows%252010%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25B1%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2581%25A7%25E5%25AE%259A%25E6%259C%259F%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fZG9XSFdDLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uNMPEOTq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Windows%252010%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25B1%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2581%25A7%25E5%25AE%259A%25E6%259C%259F%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS1fZG9XSFdDLS0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg3MmJkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/54b2c1f7b97963",
          "author": "kurokawa",
          "description": "問題\n\n 19. 各行の1コラム目の文字列の出現頻度を求め，出現頻度の高い順に並べる\n各行の1列目の文字列の出現頻度を求め，その高い順に並べて表示せよ．確認にはcut, uniq, sortコマンドを用いよ．\n\n solution19.py\nimport pandas as pd\n\ndf = pd.read_csv('chapter02/popular-names.txt', sep='\\t', header=None)\nprint(df.iloc[:,0].value_counts())\n#print(df[0].value_counts())\n\n\n output\nJames   ...",
          "link": "https://zenn.dev/kurokawa/articles/54b2c1f7b97963",
          "publishedOn": "2023-01-08T05:33:22.000Z",
          "wordCount": 355,
          "title": "言語処理100本ノック 2020 (Rev 2) 第2章: UNIXコマンド 19. 各行の1コラム目の文字列の出現頻度を求め，〜",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ytVZr_Nl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC2%25E7%25AB%25A0%253A%2520UNIX%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%252019.%2520%25E5%2590%2584%25E8%25A1%258C%25E3%2581%25AE1%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%25A0%25E7%259B%25AE%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E5%2587%25BA%25E7%258F%25BE%25E9%25A0%25BB%25E5%25BA%25A6%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25EF%25BC%258C%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ytVZr_Nl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC2%25E7%25AB%25A0%253A%2520UNIX%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%252019.%2520%25E5%2590%2584%25E8%25A1%258C%25E3%2581%25AE1%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%25A0%25E7%259B%25AE%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E5%2587%25BA%25E7%258F%25BE%25E9%25A0%25BB%25E5%25BA%25A6%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25EF%25BC%258C%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/8eb084693fa70d",
          "author": "kurokawa",
          "description": "問題\n\n 18. 各行を3コラム目の数値の降順にソート\n各行を3コラム目の数値の逆順で整列せよ（注意: 各行の内容は変更せずに並び替えよ）．確認にはsortコマンドを用いよ（この問題はコマンドで実行した時の結果と合わなくてもよい）．\n\n solution18.py\nimport pandas as pd\n\ndf = pd.read_csv('chapter02/popular-names.txt', sep='\\t', header=None)\nprint(df.sort_values(2 ,ascending=False))\n\n\n output\n            0  1  ...",
          "link": "https://zenn.dev/kurokawa/articles/8eb084693fa70d",
          "publishedOn": "2023-01-08T04:57:30.000Z",
          "wordCount": 358,
          "title": "言語処理100本ノック 2020 (Rev 2) 第2章: UNIXコマンド 18. 各行を3コラム目の数値の降順にソート",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SUz3eLYS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC2%25E7%25AB%25A0%253A%2520UNIX%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%252018.%2520%25E5%2590%2584%25E8%25A1%258C%25E3%2582%25923%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%25A0%25E7%259B%25AE%25E3%2581%25AE%25E6%2595%25B0%25E5%2580%25A4%25E3%2581%25AE%25E9%2599%258D%25E9%25A0%2586%25E3%2581%25AB%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SUz3eLYS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC2%25E7%25AB%25A0%253A%2520UNIX%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%252018.%2520%25E5%2590%2584%25E8%25A1%258C%25E3%2582%25923%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%25A0%25E7%259B%25AE%25E3%2581%25AE%25E6%2595%25B0%25E5%2580%25A4%25E3%2581%25AE%25E9%2599%258D%25E9%25A0%2586%25E3%2581%25AB%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        },
        {
          "id": "https://zenn.dev/kurokawa/articles/ada4ad1ef9b260",
          "author": "kurokawa",
          "description": "問題\n\n 17. １列目の文字列の異なり\n1列目の文字列の種類（異なる文字列の集合）を求めよ．確認にはcut, sort, uniqコマンドを用いよ．\n\n solution17.py\nimport pandas as pd\n\ndf = pd.read_csv('chapter02/popular-names.txt', sep='\\t', header=None)\nans = list(set(df.iloc[:,0]))\nprint(sorted(ans))\n\n\n output\n['Abigail', 'Aiden', 'Alexander', 'Alexis', 'Alice',...",
          "link": "https://zenn.dev/kurokawa/articles/ada4ad1ef9b260",
          "publishedOn": "2023-01-08T04:05:19.000Z",
          "wordCount": 301,
          "title": "言語処理100本ノック 2020 (Rev 2) 第2章: UNIXコマンド 17. １列目の文字列の異なり",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fHYTrsWD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC2%25E7%25AB%25A0%253A%2520UNIX%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%252017.%2520%25EF%25BC%2591%25E5%2588%2597%25E7%259B%25AE%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E7%2595%25B0%25E3%2581%25AA%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fHYTrsWD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kurokawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25202020%2520%2528Rev%25202%2529%2520%25E7%25AC%25AC2%25E7%25AB%25A0%253A%2520UNIX%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%252017.%2520%25EF%25BC%2591%25E5%2588%2597%25E7%259B%25AE%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E7%2595%25B0%25E3%2581%25AA%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vemVubi9pbWFnZS9mZXRjaC9zLS11RkZhNjdHay0tL2NfbGltaXQlMkNmX2F1dG8lMkNmbF9wcm9ncmVzc2l2ZSUyQ3FfYXV0byUyQ3dfNzAvaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDA0Mjc5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}