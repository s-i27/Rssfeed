{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "Zennの「Python」のフィード",
      "feedUrl": "https://zenn.dev/topics/python/feed/",
      "siteUrl": "https://zenn.dev/topics/python",
      "articles": [
        {
          "id": "https://zenn.dev/nakamura196/articles/e940e062908b6b",
          "author": "nakamura196",
          "description": "概要\nIIIFマニフェストファイルからPDFファイルを作成する機会がありました。このソリューションとして、以下のリポジトリが見つかりましたが、うまく動かすことができませんでした。\nhttps://github.com/jbaiter/pdiiif\nそこで、上記リポジトリはJavaScriptを使用していますが、今回はPythonを用いた変換ツールを作成しました。\n\n 使い方\n以下のノートブックからお試しいただけます。\nhttps://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/iiif2pdf.ipyn...",
          "link": "https://zenn.dev/nakamura196/articles/e940e062908b6b",
          "publishedOn": "2023-05-25T20:32:44.000Z",
          "wordCount": 118,
          "title": "IIIFマニフェストファイルからPDFファイルを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OA9LMK9k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IIIF%25E3%2583%259E%25E3%2583%258B%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589PDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OA9LMK9k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IIIF%25E3%2583%259E%25E3%2583%258B%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589PDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsuromurata/articles/30e2dcd1cd5412",
          "author": "しば🐕AI",
          "description": "QLoRAとは\nQLoRAとは4bitでquantizeすることにより、大幅にLLMモデルのメモリを減らして動かせるようにしたプロジェクトです。\nhuggingfaceで4bitが利用できるようになりました。\nhttps://huggingface.co/blog/4bit-transformers-bitsandbytes\n\n リンク\nColab\ngithub\n\n 準備\nGoogle Colabを開き、メニューから「ランタイム→ランタイムのタイプを変更」でランタイムを「GPU」に変更します。\n\n 環境構築\nインストール手順です。\n!pip install -q -U bitsand...",
          "link": "https://zenn.dev/tatsuromurata/articles/30e2dcd1cd5412",
          "publishedOn": "2023-05-25T12:18:59.000Z",
          "wordCount": 1710,
          "title": "QLORAをgoogle colabで試してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2d-UQFv7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:QLORA%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2d-UQFv7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:QLORA%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/asopitech/articles/20230518-100535_1",
          "author": "あそぴテック",
          "description": "!\n個人ブログでも記事をあげています。こちらもあわせてご覧ください！\n\n\n前回はRedisの基本機能と\"Redis Stack\"についての紹介でした。\n今回は Python でのクライアント実装のサンプルを…と思いまして。クライアントのリストページを参照してみました。\n\nhttps://redis.io/docs/clients/\nhttps://redis.io/docs/stack/get-started/clients/\n\nで、今回は Python OMに挑戦したいと思います。\n\n Python OM\nPython OM のリポジトリは以下です。\nhttps://github.co...",
          "link": "https://zenn.dev/asopitech/articles/20230518-100535_1",
          "publishedOn": "2023-05-25T12:07:14.000Z",
          "wordCount": 1194,
          "title": "[2023年5月版]Redis 再入門 その②: Redis Stackお試し",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vM_b7v-6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B45%25E6%259C%2588%25E7%2589%2588%255DRedis%2520%25E5%2586%258D%25E5%2585%25A5%25E9%2596%2580%2520%25E3%2581%259D%25E3%2581%25AE%25E2%2591%25A1%253A%2520Redis%2520Stack%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%259D%25E3%2581%25B4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzYWRiZGU0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vM_b7v-6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B45%25E6%259C%2588%25E7%2589%2588%255DRedis%2520%25E5%2586%258D%25E5%2585%25A5%25E9%2596%2580%2520%25E3%2581%259D%25E3%2581%25AE%25E2%2591%25A1%253A%2520Redis%2520Stack%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%259D%25E3%2581%25B4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzYWRiZGU0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hagino3000/articles/ffe7ab391edc12",
          "author": "Takashi Nishibayashi",
          "description": "概要\nGoogle Colaboratory(以下 Colab)ではBigQueryのクエリ結果を直にPandas DataFrameに変換できる。ちょっとした調査でColabを使う事が多いのだが、過去に作成した調査用Colabノートが軒並エラーが出て動かなくなったので対応内容をメモしておく。\n具体的にはPandas DataFrameの query メソッドがそのままでは動作しなくなったのでdtypeを変換する処理を挟んで回避した。\n\n 再現コード\n%%bigquery df_sample --project xxx\n\nselect\n  `DATE` as pub_date,\n  ...",
          "link": "https://zenn.dev/hagino3000/articles/ffe7ab391edc12",
          "publishedOn": "2023-05-25T09:53:08.000Z",
          "wordCount": 607,
          "title": "ColaboratoryでBigQueryのクエリ結果をDataFrameにしてqueryメソッドを実行したときのエラー対応",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fZ-MusLX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Colaboratory%25E3%2581%25A7BigQuery%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592DataFrame%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6query%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takashi%2520Nishiba...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lKSEZnVFNDVU9mSnA2Q0ctYXRaTEZkenB1Q0tBT05oZlFfbHdxPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fZ-MusLX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Colaboratory%25E3%2581%25A7BigQuery%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592DataFrame%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6query%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takashi%2520Nishiba...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lKSEZnVFNDVU9mSnA2Q0ctYXRaTEZkenB1Q0tBT05oZlFfbHdxPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/renn/articles/ab0fefcb50491d",
          "author": "れん",
          "description": "ゴール：さくらVPS上のapp.pyを起動し、It Works!と表示させる\nHerokuなどのPaasサービスはいくつも記事がありましたが、VPSサーバーの記事はあまりなかったのでここに書き留めておきます。\n\n 開発環境\n\nM1Mac(Ventura 13.3.1)\nさくらVPS\nVScode\n既にSSH接続できる\nさくらVPS内にApacheはインストール済\n\n\n やったこと\n実際にやったことを書いていきます。\n\n app.pyの中身\nまず今回起動させるFlaskのコードはこちらです。\n\napp.py\nfrom flask import Flask\n\n# おまじない\napp = ...",
          "link": "https://zenn.dev/renn/articles/ab0fefcb50491d",
          "publishedOn": "2023-05-25T08:59:13.000Z",
          "wordCount": 481,
          "title": "FlaskアプリをさくらVPSでデプロイしてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3dsYe2Om--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%2595%25E3%2581%258F%25E3%2582%2589VPS%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2OWJiN2U1MTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3dsYe2Om--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%2595%25E3%2581%258F%25E3%2582%2589VPS%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2OWJiN2U1MTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/singularity/articles/deploy_firebase_functions_in_different_resion",
          "author": "Mai Nakagawa",
          "description": "これは何？\nPythonのFirebase Functionsはbetaということもあり、Regionを指定する方法が2023年5月25日時点では公式ドキュメントに記載されていない。Pythonのfirebase_functionsのソースコードを見て調べる必要があった。\n\n 方法\n以下のようにして指定できることが分かった。\noptions.set_global_options(region=options.SupportedRegion.ASIA_NORTHEAST1)\n以下のようなpythonファイルを作ってデプロイすれば良い:\nfrom firebase_admin impor...",
          "link": "https://zenn.dev/singularity/articles/deploy_firebase_functions_in_different_resion",
          "publishedOn": "2023-05-25T08:46:17.000Z",
          "wordCount": 223,
          "title": "PythonのFirebase FunctionsでRegionを指定する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WtuzDsbf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEFirebase%2520Functions%25E3%2581%25A7Region%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25BD%25E3%2582%25B5%25E3%2582%25A8%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Mai%2520Nakagawa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNjM5MTg4YzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWpFaURybzNSZHF6QkxhMU9GcHhfOU1DUVZaeDg3bWJFSkctS3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WtuzDsbf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEFirebase%2520Functions%25E3%2581%25A7Region%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25BD%25E3%2582%25B5%25E3%2582%25A8%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Mai%2520Nakagawa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNjM5MTg4YzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWpFaURybzNSZHF6QkxhMU9GcHhfOU1DUVZaeDg3bWJFSkctS3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/45a48b94e704af",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-232 B - Caesar Cipher\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef diff(x, y):\n    a = ord(y) - ord(x)\n    return a if a >= 0 else a + 26\n\n\ndef main():\n    s = list(getString())\n    t = list(getString())\n\n    u = [diff(s[i], t[i]) for i in range(len(s))]\n\n    print('Yes' if...",
          "link": "https://zenn.dev/hyperdb/articles/45a48b94e704af",
          "publishedOn": "2023-05-25T04:49:51.000Z",
          "wordCount": 385,
          "title": "［AtCoder］ABC-232｜B - Caesar Cipher",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hFSWI71A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-232%25EF%25BD%259CB%2520-%2520Caesar%2520Cipher%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hFSWI71A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-232%25EF%25BD%259CB%2520-%2520Caesar%2520Cipher%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/2944556eba10c9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-232 A - QQ solver\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n    n = s.split('x')\n\n    print(int(n[0]) * int(n[1]))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/2944556eba10c9",
          "publishedOn": "2023-05-25T04:49:50.000Z",
          "wordCount": 242,
          "title": "［AtCoder］ABC-232｜A - QQ solver",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yGgqlvag--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-232%25EF%25BD%259CA%2520-%2520QQ%2520solver%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yGgqlvag--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-232%25EF%25BD%259CA%2520-%2520QQ%2520solver%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/0xyusuke/articles/2be799dff07ffd",
          "author": "0xYusuke",
          "description": "前置き\nWhisperを使ったYouTubeの文字起こしのスクリプトを書いてみました。\n理由は、CrowdWorksでYouTubeの文字起こしの案件を請け負って小遣い銭稼ぎをしたくなったからです。\nそこで目を付けたのが、今流行りのOpenAIのWhisperを活用して、効率化することでした。\nライブラリのインストールのコマンドと、文字起こしのコードを載せます。\n言語はPython、実行環境はGoogle Colaboratoryです。\n\n ライブラリをインストールするコマンド\n!pip install yt-dlp\n!pip install openai\n!pip install ...",
          "link": "https://zenn.dev/0xyusuke/articles/2be799dff07ffd",
          "publishedOn": "2023-05-24T21:39:48.000Z",
          "wordCount": 558,
          "title": "Whisperを使ったYouTubeの文字起こしのスクリプトを書いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2vr5eH_5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Whisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FYouTube%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0xYusuke%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnZ0WmRlX2xEd1R3bmxpekFYVkhXRl82VHJ5NVQ1VDZSYmNwSW9RUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2vr5eH_5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Whisper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FYouTube%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0xYusuke%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnZ0WmRlX2xEd1R3bmxpekFYVkhXRl82VHJ5NVQ1VDZSYmNwSW9RUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryoutaros/articles/20a8f6279171e8",
          "author": "unochanel",
          "description": "はじめに\n現在、POCである商品の取り扱い説明書のPDFをEmbeddingしChatGPTのAPIを経由して、ユーザーからの質問を回答するLINE Botを作成しています。\nPDFをEmbeddingする際に、Langchainのドキュメントを読むとPDFからテキストを特定の文字ごとに分割してEmbeddingを行うやり方が記載されています。\nしかし、それでは章が分割され章の後半に記載されていたユーザーからの質問に正しく答えられないケースが発生していました。\n# 実装は以下で記載しているのですが、一部抜粋します。\n# このコードでは、1000文字ずつにPDFを分割しています。\nlo...",
          "link": "https://zenn.dev/ryoutaros/articles/20a8f6279171e8",
          "publishedOn": "2023-05-24T12:29:10.000Z",
          "wordCount": 1132,
          "title": "PDFを章ごとに分けてより効果的なEmbeddingを",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J9-p6K-4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PDF%25E3%2582%2592%25E7%25AB%25A0%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AB%25E5%2588%2586%25E3%2581%2591%25E3%2581%25A6%25E3%2582%2588%25E3%2582%258A%25E5%258A%25B9%25E6%259E%259C%25E7%259A%2584%25E3%2581%25AAEmbedding%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unochanel%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhYTA4Yzg4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J9-p6K-4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PDF%25E3%2582%2592%25E7%25AB%25A0%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AB%25E5%2588%2586%25E3%2581%2591%25E3%2581%25A6%25E3%2582%2588%25E3%2582%258A%25E5%258A%25B9%25E6%259E%259C%25E7%259A%2584%25E3%2581%25AAEmbedding%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unochanel%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhYTA4Yzg4NmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/jcc/articles/6fd049d98467bd",
          "author": "jc",
          "description": "先日GCPのDataformがGAリリースされました。\nせっかくなので、まずAirflowにある既存ワークフローの一部をDataformで書き換えようと思いました。\n\n AirflowからDataformをトリッガーする\nドキュメントを調べると、AirflowからDataformをトリッガーするoperatorはすでに存在しています。\nhttps://cloud.google.com/dataform/docs/schedule-executions-composer#create_an_airflow_dag_that_schedules_workflow_invocations\n簡単...",
          "link": "https://zenn.dev/jcc/articles/6fd049d98467bd",
          "publishedOn": "2023-05-24T12:02:25.000Z",
          "wordCount": 1162,
          "title": "AirflowからDataformにdata_interval_endなどのcontext変数を渡す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tb2VF2oJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Airflow%25E3%2581%258B%25E3%2582%2589Dataform%25E3%2581%25ABdata_interval_end%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AEcontext%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E6%25B8%25A1%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tb2VF2oJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Airflow%25E3%2581%258B%25E3%2582%2589Dataform%25E3%2581%25ABdata_interval_end%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AEcontext%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E6%25B8%25A1%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsuromurata/articles/b090440b87812a",
          "author": "しば🐕AI",
          "description": "OpenAssistantとは\nOpenAssistantは誰でも容易に大規模言語モデルにアクセスし、利用できるようにと開始されたProjectです。\nOpenAssistantの目指しているVisionは誰でも容易に拡張することが可能かつPersonalにカスタマイズされたAI Assistantを構築したいというもののようです。\nOpenAssistantの計画としては以下の３点があります。\n\n高品質な指示-達成サンプルを収集するためのクラウドソーシングプロセスを設計する。\n収集されたデータをランキング化して報酬モデルをトレーニングする。\nトップ貢献者にSwagを贈呈し、コミュニ...",
          "link": "https://zenn.dev/tatsuromurata/articles/b090440b87812a",
          "publishedOn": "2023-05-24T11:55:52.000Z",
          "wordCount": 1796,
          "title": "OpenAssistant Llama 13Bをgoogle colabで試してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jokzxpGl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAssistant%2520Llama%252013B%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jokzxpGl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAssistant%2520Llama%252013B%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/eb106af67e8b3c",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-231 B - Election\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    s = getStringRow(n)\n    t = list(set(s))\n\n    if len(t) == 1:\n        print(t[0])\n    else:\n        r = {}\n        for p i...",
          "link": "https://zenn.dev/hyperdb/articles/eb106af67e8b3c",
          "publishedOn": "2023-05-24T08:20:48.000Z",
          "wordCount": 422,
          "title": "［AtCoder］ABC-231｜B - Election",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YAo73edG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-231%25EF%25BD%259CB%2520-%2520Election%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YAo73edG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-231%25EF%25BD%259CB%2520-%2520Election%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7e70684d5462ea",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-231 A - Water Pressure\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    m = x / 100\n\n    print(\"%d\" % m if m.is_integer() else m)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/7e70684d5462ea",
          "publishedOn": "2023-05-24T08:20:47.000Z",
          "wordCount": 244,
          "title": "［AtCoder］ABC-231｜A - Water Pressure",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Naxm2K-u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-231%25EF%25BD%259CA%2520-%2520Water%2520Pressure%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Naxm2K-u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-231%25EF%25BD%259CA%2520-%2520Water%2520Pressure%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dshekhar17/articles/171fc6da3ca73d",
          "author": "Divyanshu Shekhar",
          "description": "Are you tired of writing endless lines of code to define classes and manage data in Python? Well, worry no more! In this blog, we’ll dive into the exciting world of Python dataclass, where we’ll explore how these nifty tools can simplify your coding life and boost your productivity. So, fasten yo...",
          "link": "https://zenn.dev/dshekhar17/articles/171fc6da3ca73d",
          "publishedOn": "2023-05-24T07:47:38.000Z",
          "wordCount": 1335,
          "title": "Python Dataclass: A Paradigm Shift in Class Definitions",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8uVcWb3X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Dataclass%253A%2520A%2520Paradigm%2520Shift%2520in%2520Class%2520Definitions%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Divyanshu%2520Shekhar%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpFOFdQVEI5RkJWSlhhaG5nem1lTVloSHBFMC1MUk5ObHpITVpESEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8uVcWb3X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Dataclass%253A%2520A%2520Paradigm%2520Shift%2520in%2520Class%2520Definitions%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Divyanshu%2520Shekhar%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpFOFdQVEI5RkJWSlhhaG5nem1lTVloSHBFMC1MUk5ObHpITVpESEk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/akgcog/articles/082ea94fe00d99",
          "author": "akgcog",
          "description": "はじめに\n最近PCを変えて開発環境のセットアップをしたのでその時のメモです。\n本環境はWindows10ですので、MacやUbuntuの人は参考程度に。\n\n セットアップ一覧\n\nVisual Studio Code(VScode)\nDocker\nGit\n\n\n 1.Visual Studio Code(以下VScode)のセットアップ\nプログラミングのエディターとして一般的に使用されてるソフトになります。\n他にも使い勝手が良いエディターはあるので、自分に合ったものを見つけてみてください。\n下記のリンクからダウンロード\nhttps://azure.microsoft.com/ja-jp/...",
          "link": "https://zenn.dev/akgcog/articles/082ea94fe00d99",
          "publishedOn": "2023-05-24T07:31:08.000Z",
          "wordCount": 206,
          "title": "開発環境のセットアップ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fbdFM4LS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akgcog%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1NWNhNzExMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--fbdFM4LS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akgcog%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1NWNhNzExMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/singularity/articles/firebase-functions-python-functions",
          "author": "Isamu",
          "description": "Google I/O 2023でFirebaseの新機能としてFunctionsのPythonのサポートが発表されました。\nhttps://www.youtube.com/watch?v=emIxn-f9bK0\n早速、試してみたいと思います。\nまず、Pythonを含むFunctionsをデプロイするにはfirebase-toolsのバージョンを上げる必要があります (ChangeLogを追ったが、どのバージョンからPythonをサポートしているかは不明でした。)\nnpm install -g firebase-tools\nで最新にupdate.\n続いて、firebaseの初期をします。\n...",
          "link": "https://zenn.dev/singularity/articles/firebase-functions-python-functions",
          "publishedOn": "2023-05-24T07:15:02.000Z",
          "wordCount": 733,
          "title": "Firebase Functionsで新たにサポートされたPythonをSetupし、更にTypeScriptと共存させる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BbWGVOtt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firebase%2520Functions%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AB%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259FPython%25E3%2582%2592Setup%25E3%2581%2597%25E3%2580%2581%25E6%259B%25B4%25E3%2581%25ABTypeScript%25E3%2581%25A8%25E5%2585%25B1...%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25BD%25E3%2582%25B5%25E3%2582%25A8%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Isamu%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNjM5MTg4YzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g3ODg4Mk5lcU4xYUxYZWxhbjZ5TDYzUVBVdGs3MjQ0aGs0QjdBdWc9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BbWGVOtt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firebase%2520Functions%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AB%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259FPython%25E3%2582%2592Setup%25E3%2581%2597%25E3%2580%2581%25E6%259B%25B4%25E3%2581%25ABTypeScript%25E3%2581%25A8%25E5%2585%25B1...%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25BD%25E3%2582%25B5%25E3%2582%25A8%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Isamu%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNjM5MTg4YzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g3ODg4Mk5lcU4xYUxYZWxhbjZ5TDYzUVBVdGs3MjQ0aGs0QjdBdWc9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/skwbc/articles/pyo3_toml_parser",
          "author": "skwbc",
          "description": "!\n前の記事の続きになりますが、この記事だけで完結するように書いているので前の記事を読んでいる必要はありません。興味がある方は前の記事も読んでみて下さい。\n\n\n 概要\n最近、RustでTOMLパーサーを実装してみるという記事を書きました。\nこの記事では、自作したTOMLパーサーをPythonから呼び出せるようにしてみたいと思います。\n(パーサーに限らず、重い処理やバグを起こしやすそうな処理をRustで実装してPythonから呼び出すというケース[1]を最近よく目にするので個人的に気になっていました。)\nRustとPythonの連携にはPyO3というRustのライブラリを使います。\nこのラ...",
          "link": "https://zenn.dev/skwbc/articles/pyo3_toml_parser",
          "publishedOn": "2023-05-24T03:08:37.000Z",
          "wordCount": 9760,
          "title": "[PyO3]Rustで自作したTOMLパーサーをPythonから呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lMCAVkmh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPyO3%255DRust%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%259FTOML%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%2592Python%25E3%2581%258B%25E3%2582%2589%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skwbc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lMCAVkmh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPyO3%255DRust%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%259FTOML%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%2592Python%25E3%2581%258B%25E3%2582%2589%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skwbc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/knowhere_imai/articles/ba850780152b01",
          "author": "今井@Knowhere",
          "description": "1.はじめに\nPythonのasyncioは、async・await構文を利用して並行処理を行うため公式ライブラリです。\n筆者はFastAPIやuvicornのドキュメントでasync・awaitまたはasyncioなるキーワードをちらほらと目にしてはいたのですが、FastAPI製のWebアプリを公開するにあたって理解を避けて通れないと考えたため、キャッチアップしてこの記事に情報をまとめました。\n\nまず、asyncioの基本的な使い方を改めて整理しました。\n特に、並行処理のタスク遷移と例外周りについて、パッと検索した範囲ではあまり情報が見つからなかったため、深掘りしてまとめました。\n...",
          "link": "https://zenn.dev/knowhere_imai/articles/ba850780152b01",
          "publishedOn": "2023-05-24T02:18:11.000Z",
          "wordCount": 4592,
          "title": "Pythonにasyncioってあるけどよく知らなかったので調べた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---ZlNX7Vp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25ABasyncio%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2582%25E3%2582%258B%25E3%2581%2591%25E3%2581%25A9%25E3%2582%2588%25E3%2581%258F%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BB%258A%25E4%25BA%2595%2540Knowhere%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxNDY0MzA5MWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---ZlNX7Vp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25ABasyncio%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2582%25E3%2582%258B%25E3%2581%2591%25E3%2581%25A9%25E3%2582%2588%25E3%2581%258F%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BB%258A%25E4%25BA%2595%2540Knowhere%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxNDY0MzA5MWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tigrebiz/articles/2822fb4de256d8",
          "author": "taiga",
          "description": "マスターするとは何か\n完全に理解して、人に説明できることである。\nとりあえずできればいい、ではなく、ちゃんと応用の効く形で理解することである。\nでなければ、忘れてしまうからね。\n\n 一次情報\n一次情報が一番正確。\n\n Python環境構築ガイド\nhttps://www.python.jp/install/install.html\n\n pyenv\nhttps://github.com/pyenv/pyenv\n\n venv\nhttps://docs.python.org/ja/3/library/venv.html\nあとは構造を理解するためにChatGPTに質問攻めをする。\n\n Pyth...",
          "link": "https://zenn.dev/tigrebiz/articles/2822fb4de256d8",
          "publishedOn": "2023-05-24T02:13:01.000Z",
          "wordCount": 1445,
          "title": "Pythonの環境構築をマスターする（pyenv,venv版）（WSL2,Ubuntu利用）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ptNimpiu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588pyenv%252Cvenv%25E7%2589%2588%25EF%25BC%2589%25EF%25BC%2588WSL2%252CUbuntu%25E5%2588%25A9%25E7%2594%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ptNimpiu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588pyenv%252Cvenv%25E7%2589%2588%25EF%25BC%2589%25EF%25BC%2588WSL2%252CUbuntu%25E5%2588%25A9%25E7%2594%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN0x5bGp5NElXR0FGQ2ctZ3BJRU9TQm51UVJOSk5VWWgzcVY5ak49czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/pypypymi/articles/184e60126fc254",
          "author": "tac-tac-go@rm -rf /",
          "description": "CodeWars などのプログラミング学習サイトで複数言語で問題を解く際に、\n言語間で実装の引き出しを覚えていたら便利だと感じています。\n本記事では、PythonとJavaScriptの両方で利用できるmap、filter、reduce関数\nについて紹介します。これらの関数は、配列やリストなどのシーケンスの要素に対して、\n効率的に操作を行うことができます。\nmap関数\nmap 関数は、配列やリストの要素に対して、指定した関数を適用した新しい配列を作成します。\nPython\n# 1から5までの数字を2倍したリストを作成する\nnumbers = [1, 2, 3, 4, 5]\ndoubled...",
          "link": "https://zenn.dev/pypypymi/articles/184e60126fc254",
          "publishedOn": "2023-05-23T17:45:31.000Z",
          "wordCount": 897,
          "title": "Javascriptとpythonで共通する配列操作関数に関する実装の違い",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iKDWmb5P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%25E3%2581%25A8python%25E3%2581%25A7%25E5%2585%25B1%25E9%2580%259A%25E3%2581%2599%25E3%2582%258B%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2540rm%2520-...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iKDWmb5P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%25E3%2581%25A8python%25E3%2581%25A7%25E5%2585%25B1%25E9%2580%259A%25E3%2581%2599%25E3%2582%258B%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2540rm%2520-...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kthrlab_blog/articles/1686fd19dab5b9",
          "author": "ssk",
          "description": "はじめに\n本記事では、music21というライブラリを用いてPythonを使用した楽譜制作の基礎を簡単に解説していきたいと思います。\n筆者は以下の環境で実行しています。\n\nWindows10 home\nPython3.9.12\nvscode 1.78.2\nMuseScore version (64-bit): 3.6.2.548021803\n\nなお、この記事は大学の授業の一環で作成された簡易的な説明のため、詳細な情報は公式ドキュメントなどを参考にして頂きたいと思います。\nhttps://web.mit.edu/music21/doc/moduleReference/index.htm...",
          "link": "https://zenn.dev/kthrlab_blog/articles/1686fd19dab5b9",
          "publishedOn": "2023-05-23T12:25:08.000Z",
          "wordCount": 1207,
          "title": "music21で遊ぼう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--h_y5TssX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:music21%25E3%2581%25A7%25E9%2581%258A%25E3%2581%25BC%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ssk%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYTlhN2M4YmYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--h_y5TssX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:music21%25E3%2581%25A7%25E9%2581%258A%25E3%2581%25BC%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ssk%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYTlhN2M4YmYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsuromurata/articles/4308f18ef1d9de",
          "author": "しば🐕AI",
          "description": "RedPajama-INCITEとは\n「RedPajama」は、オープンソースモデルを作成するプロジェクトで、12兆トークン以上のLLaMAトレーニングデータセットを再現するを基点としています。\nhttps://github.com/togethercomputer/RedPajama-Data\n高品質なLLMのためのデータセットが揃っています。\n今回試すものはRedPajamaがこれらのデータセットを利用してinstruction finetuning等を行い、公開しているモデルです。以下のサイトで説明されています。\nhttps://www.together.xyz/blog/re...",
          "link": "https://zenn.dev/tatsuromurata/articles/4308f18ef1d9de",
          "publishedOn": "2023-05-23T10:50:36.000Z",
          "wordCount": 2710,
          "title": "RedPajama-INCITEをgoogle colabで試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---iri8EQz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RedPajama-INCITE%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---iri8EQz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RedPajama-INCITE%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/jyouhou_info/articles/2bccaa11848fbf",
          "author": "サルでもわかる大学受験の情報Ⅰ.Ⅱ",
          "description": "Whisper\nWhisperとは、OpenAIが開発している汎用的な音声認識モデルです。\nhttps://github.com/openai/whisper\nWeb上から収集した68万時間におよぶ音声データで学習され、音声翻訳や言語識別だけでなく、多言語音声認識を行うことができるマルチタスクモデルでもあるモデルになります。\nWhisperを用いることで、音声からの文字起こしと音声からの翻訳処理を行えます。\n日本語の単語誤り率（WER/Word Error Rate）は6.4%とグラフに記載があります。\nこの数値は、Whisperが対応している他の言語と比較しても、上位に位置しており...",
          "link": "https://zenn.dev/jyouhou_info/articles/2bccaa11848fbf",
          "publishedOn": "2023-05-23T10:29:06.000Z",
          "wordCount": 179,
          "title": "【Whisper】Pythonで音声を文字に書きだしてみよう！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l-LVQTjm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Whisper%25E3%2580%2591Python%25E3%2581%25A7%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E3%2581%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%25AB%25E3%2581%25A7%25E3%2582%2582%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E5%25A4%25A7%25E5%25AD%25A6%25E5%258F%2597%25E9%25A8%2593%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E2%2585%25A0.%25E2%2585%25A1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjZjE5YjIyODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--l-LVQTjm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Whisper%25E3%2580%2591Python%25E3%2581%25A7%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E3%2581%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%25AB%25E3%2581%25A7%25E3%2582%2582%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E5%25A4%25A7%25E5%25AD%25A6%25E5%258F%2597%25E9%25A8%2593%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E2%2585%25A0.%25E2%2585%25A1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjZjE5YjIyODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/herumi/articles/float32-in-python",
          "author": "herumi",
          "description": "初めに\n先日、fmathのlog(x)関数をXbyak(C++)からs_xbyak(Python)で書き直しているときに、少し不思議な現象に出会いました。s_xbyakで書き直すと演算精度が少し悪くなってしまったのです。\nもちろん最初は移植ミスを疑ったのですが、調べても生成コードに問題はありません。よく調べると関数が参照するテーブルがC++とPythonとで少し異なる値になっていたためでした。\nその解決方法は、途中であえて精度を落として計算するという珍しいパターンだったので紹介します。\n\n 原因となったコード\n実装したlog(x)は次のtbl1, tbl2を参照します。\n#inclu...",
          "link": "https://zenn.dev/herumi/articles/float32-in-python",
          "publishedOn": "2023-05-23T07:28:20.000Z",
          "wordCount": 1081,
          "title": "Pythonでfloatの値をfloat32の値に変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2W2z4A3X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7float%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592float32%25E3%2581%25AE%25E5%2580%25A4%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2W2z4A3X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7float%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592float32%25E3%2581%25AE%25E5%2580%25A4%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/waiwawaiwai/articles/77a02c71e4d5bd",
          "author": "わいわわ",
          "description": "pythonで基礎的なプログラムを作る\nこんにちは！pythonの勉強をしております、わいわわです\nprogateさんのカリキュラムを学習中、\n課題のプログラム作りがありましたのでアウトプットとしてまとめます。\n\n ３種の果物のお会計を、残金と比べながら実行するプログラム\nmoney = 1000\nitems = {'apple': 100, 'banana': 200, 'orange': 400}\nfor item_name in items:\n    print('--------------------------------------------------')\n    ...",
          "link": "https://zenn.dev/waiwawaiwai/articles/77a02c71e4d5bd",
          "publishedOn": "2023-05-23T06:44:05.000Z",
          "wordCount": 381,
          "title": "pythonで基礎的なプログラムを作る（会計）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rZjpnjuF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E5%259F%25BA%25E7%25A4%258E%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2588%25E4%25BC%259A%25E8%25A8%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%2584%25E3%2582%258F%25E3%2582%258F%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlYzc2NzgwMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rZjpnjuF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E5%259F%25BA%25E7%25A4%258E%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2588%25E4%25BC%259A%25E8%25A8%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%2584%25E3%2582%258F%25E3%2582%258F%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlYzc2NzgwMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b5ca85154765ff",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-230 B - Triple Metre\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n    t = \"oxx\" * 5\n\n    print('Yes' if s in t else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b5ca85154765ff",
          "publishedOn": "2023-05-23T04:59:15.000Z",
          "wordCount": 236,
          "title": "［AtCoder］ABC-230｜B - Triple Metre",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N7-P0bJU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-230%25EF%25BD%259CB%2520-%2520Triple%2520Metre%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--N7-P0bJU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-230%25EF%25BD%259CB%2520-%2520Triple%2520Metre%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a476675e59d17e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-230 A - AtCoder Quiz 3\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(\"AGC%03d\" % (n if n < 42 else n + 1))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/a476675e59d17e",
          "publishedOn": "2023-05-23T04:59:14.000Z",
          "wordCount": 247,
          "title": "［AtCoder］ABC-230｜A - AtCoder Quiz 3",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VpQIeIs3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-230%25EF%25BD%259CA%2520-%2520AtCoder%2520Quiz%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VpQIeIs3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-230%25EF%25BD%259CA%2520-%2520AtCoder%2520Quiz%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yukitezuka/articles/d37cc26a3f89f6",
          "author": "手塚裕貴",
          "description": "【OpenCV + Python】LINE Notifyで動体検知を知らせる\n\n 動作環境\n\nOS: macOS Ventura Version13.3.1\nPython 3.9.13\nOpenCV 4.7.0\n\nOpenCVはpip install opencv-pythonを使ってインストールできます。\n\n ソースコード\nimport cv2\nimport time\nimport requests\nimport json\n\n# LINE Notify token (replace with your own)\nLINE_NOTIFY_TOKEN = \"YOUR_LINE_NOTI...",
          "link": "https://zenn.dev/yukitezuka/articles/d37cc26a3f89f6",
          "publishedOn": "2023-05-23T00:38:09.000Z",
          "wordCount": 844,
          "title": "【OpenCV + Python】LINE Notifyで動体検知を知らせる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uduZHKh0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590OpenCV%2520%252B%2520Python%25E3%2580%2591LINE%2520Notify%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%2593%25E6%25A4%259C%25E7%259F%25A5%25E3%2582%2592%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E5%25A1%259A%25E8%25A3%2595%25E8%25B2%25B4%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkJhTUUwalNXVUJXOE5aU0hBM3pTTVdxbmZUbjRsZWQxMEdqVXkzQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--uduZHKh0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590OpenCV%2520%252B%2520Python%25E3%2580%2591LINE%2520Notify%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%2593%25E6%25A4%259C%25E7%259F%25A5%25E3%2582%2592%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E5%25A1%259A%25E8%25A3%2595%25E8%25B2%25B4%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkJhTUUwalNXVUJXOE5aU0hBM3pTTVdxbmZUbjRsZWQxMEdqVXkzQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kojisaito/articles/6cd03c4a086ef3",
          "author": "Koji Saito",
          "description": "This is the English version of an article I wrote in Japanese. Though I wrote it while checking the output of AI translation, Please point out any strange expressions.\n\n Introduction\n  I was thinking whether \"note\" (Japanese text-based SNS) or Zenn (this site) would be a good place to move from Q...",
          "link": "https://zenn.dev/kojisaito/articles/6cd03c4a086ef3",
          "publishedOn": "2023-05-22T12:46:06.000Z",
          "wordCount": 8973,
          "title": "Made with 120 lines of Python program MOD extensible fullscreen editor",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--J6fcT6-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Made%2520with%2520120%2520lines%2520of%2520Python%2520program%2520MOD%2520extensible%2520full...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koji%2520Saito%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlOTU0NmEzY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--J6fcT6-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Made%2520with%2520120%2520lines%2520of%2520Python%2520program%2520MOD%2520extensible%2520full...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koji%2520Saito%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlOTU0NmEzY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/66c11b5bac41cc",
          "author": "JboyHashimoto",
          "description": "独特の記述に悩まされた\nPythonで例外処理を書くと、他の言語と違って、try, catchと書かずに、try: exceptと書き、インデントの設定も必要なお作法があります。\n今回は、リストの数が１０を超えたら例外処理が発生するプログラムを書いてビジネスロジックを作ってみました。\n以下に、Python 3を使用して例外処理を行うプログラムの例を示します。指定された要件に基づいて、print文でログを出力し、try-exceptブロックとExceptionクラスを使用します。また、必要に応じてif文やforループ、メソッドを活用します。\ndef divide_numbers(a, ...",
          "link": "https://zenn.dev/joo_hashi/articles/66c11b5bac41cc",
          "publishedOn": "2023-05-22T11:19:57.000Z",
          "wordCount": 891,
          "title": "Pythonで例外処理を書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kZCN9sJo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kZCN9sJo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kojisaito/articles/fd1b828b1005f9",
          "author": "Koji Saito",
          "description": "はじめに\n  Qiita からの引越し先として note が良いか Zenn が良いか…と考えていたら Zenn を押す声があり、練習がてら書いてみる。\n  取り扱う題材はタイトルにもあるように、120 行の Python コードで記述された Mod　で拡張可能なフルスクリーンエディタである。120 行はエディタ本体部分のコードサイズであり、Mod のプログラムは含んでいない。curses ライブラリを使い、開発は MacOS で行っている（なので、動作確認は MacOS のターミナル上で行っている）。\n本文書の構成は以下のとおり：\n\nエディタ本体のソースコード\nエディタ本体のプログ...",
          "link": "https://zenn.dev/kojisaito/articles/fd1b828b1005f9",
          "publishedOn": "2023-05-22T10:58:19.000Z",
          "wordCount": 5426,
          "title": "120 行の Python プログラムで作る Mod 拡張可能なフルスクリーンエディタ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--murtiYJZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:120%2520%25E8%25A1%258C%25E3%2581%25AE%2520Python%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2520Mod%2520%25E6%258B%25A1%25E5%25BC%25B5%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koji%2520Saito%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlOTU0NmEzY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--murtiYJZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:120%2520%25E8%25A1%258C%25E3%2581%25AE%2520Python%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2520Mod%2520%25E6%258B%25A1%25E5%25BC%25B5%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koji%2520Saito%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlOTU0NmEzY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsuromurata/articles/05872226747f5f",
          "author": "しば🐕AI",
          "description": "Inpainting Anythingとは\nInpainting AnythingとはMetaAIから発表されたSemantic Anything ModelとStable diffusionを組み合わせて色々な物体を消去したり、入れ替えたりすることができるツールです。\nhttps://github.com/geekyutao/Inpaint-Anything\n\n リンク\nColab\ngithub\n\n 準備\nGoogle Colabを開き、メニューから「ランタイム→ランタイムのタイプを変更」でランタイムを「GPU」に変更します。\n\n 環境構築\nインストールの手順です。公式の通りにやる...",
          "link": "https://zenn.dev/tatsuromurata/articles/05872226747f5f",
          "publishedOn": "2023-05-22T10:04:37.000Z",
          "wordCount": 661,
          "title": "Inpainting Anythingをgoogle colabで試してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--17wbtD_z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Inpainting%2520Anything%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--17wbtD_z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Inpainting%2520Anything%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/9b93d1d2b08cc5",
          "author": "JboyHashimoto",
          "description": "辞書型とは？\n他のプログラミング言語では、配列、リストと呼ばれているものですね。\n以下に、Python 3を使用して辞書型の操作を行うプログラムの例を示します。指定された要件に基づいて、print文でログを出力し、辞書を操作するメソッドの例を提供します。また、メソッドのテーブル形式での解説も行います。\n# 辞書の作成\nperson_info = {'Alice': 25, 'Bob': 30, 'Charlie': 35}\n\n# 辞書の要素を表示\nprint(f\"Initial dictionary: {person_info}\")  # 出力: Initial dictionary...",
          "link": "https://zenn.dev/joo_hashi/articles/9b93d1d2b08cc5",
          "publishedOn": "2023-05-22T09:39:47.000Z",
          "wordCount": 593,
          "title": "Pythonで辞書型を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3jhgoNCq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3jhgoNCq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zenzenr_2/articles/3bed1898bccc62",
          "author": "zenzen@R-2",
          "description": "こんにちは。zenzen@R-2です。\nPythonで環境構築に手間取ったので、簡単に仮想環境を構築する方法のメモを書きました。\nOS：windows11\n\n やりたいこと\n任意のPythonバージョンで仮想環境を作りたい。\n\n やったことの流れ\n\n\nAnaconda promptを立ち上げる。\n\n\nconda createで仮想環境を作る。\n\n\n#これで名前が付いた任意のpythonのバージョンができる。\nconda create -n [name] python=[version]\n#(例)\nconda create -n test python=3.0\n仮想環境の作成完了!!\n\n仮...",
          "link": "https://zenn.dev/zenzenr_2/articles/3bed1898bccc62",
          "publishedOn": "2023-05-22T09:25:32.000Z",
          "wordCount": 210,
          "title": "PythonのCondaで環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Le-p99_V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEConda%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenzen%2540R-2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTlRbElWRXBzakVXSGptSzVBZ0RQblRiYnZ2RDBMUExGcmhyRHRoQ2s9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Le-p99_V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEConda%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenzen%2540R-2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTlRbElWRXBzakVXSGptSzVBZ0RQblRiYnZ2RDBMUExGcmhyRHRoQ2s9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/1daf7b0575a022",
          "author": "JboyHashimoto",
          "description": "公式のだとちょっと分かりずらかった\nPyCharmやVisual Studio Codeで、Runしてすぐに、ログを見れるコードに書き換えてみた。自分の学習用のメモです。公式ドキュメントだとターミナルでやるのが前提なので、IDEやPlaygrandを使用して、学習できるコードにしました。\n以下に、Python 3を使用してリストの操作を行うプログラムの例を示します。指定された要件に基づいて、print文でログを出力し、コメントを追加し、各メソッドの解説を提供しています。\nfruits = ['orange', 'apple', 'pear', 'banana', 'kiwi', 'a...",
          "link": "https://zenn.dev/joo_hashi/articles/1daf7b0575a022",
          "publishedOn": "2023-05-22T09:20:39.000Z",
          "wordCount": 782,
          "title": "Pythonのリストについて学んでみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pFWf5Lzf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pFWf5Lzf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/a17382daefe9d2",
          "author": "JboyHashimoto",
          "description": "独特な記号と文法を理解したい\n以下に、Python 3を使用してクラス構文の学習を行うプログラムの例を示します。それぞれ、クラスの継承、コンストラクターとデストラクター、変数とメソッドの使用の例を含んでいます。\nクラスの継承の例:\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def speak(self):\n        raise NotImplementedError(\"Subclass must implement the 'speak' method.\")\n\n\nclass...",
          "link": "https://zenn.dev/joo_hashi/articles/a17382daefe9d2",
          "publishedOn": "2023-05-22T09:05:35.000Z",
          "wordCount": 769,
          "title": "Pythonのクラスについて学んでみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AcoXJPjr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AcoXJPjr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/cbcloud_blog/articles/93dfa4c76a2475",
          "author": "aipacommander",
          "description": "概要\n\nServerless Frameworkを使ってLambda Layerを利用するLambdaを用意したかった\n単純に利用するだけだったらドキュメント読んで、はい、おわり。だったんだけど、Serverless Frameworkを利用経験が浅いのと、Pluginを利用したことで混乱した\n\n利用したPlugin「Serverless Python Requirements」\n\n\nその時混乱したことも含め、デプロイ手順をメモする\nあと、他にもいくつか試してみた\n\n\n--stageオプションで環境変数とデプロイ先を変更する\nLambda関数を複数管理する\n\n\n\n\n 環境\n$ sw_...",
          "link": "https://zenn.dev/cbcloud_blog/articles/93dfa4c76a2475",
          "publishedOn": "2023-05-22T08:53:32.000Z",
          "wordCount": 3794,
          "title": "Serverless Framework(Python)でLambda Layerを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---Rb4Q_y9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Serverless%2520Framework%2528Python%2529%25E3%2581%25A7Lambda%2520Layer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CBcloud%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:aipacommander%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmM2U0Y2NhYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZGZjNDc2ZjguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---Rb4Q_y9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Serverless%2520Framework%2528Python%2529%25E3%2581%25A7Lambda%2520Layer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CBcloud%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:aipacommander%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmM2U0Y2NhYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZGZjNDc2ZjguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/43c119012538ba",
          "author": "JboyHashimoto",
          "description": "どうすればいいのか？\n以下にPython3を使用してメモリ消費を抑えるための2つのコード例を示します。それぞれがデバッグ情報をコンソールに出力します。\nwith ステートメントを使用する方法:\nimport sys\n\nwith open('test.txt', 'a') as f:\n    f.write('test')\n    print('test', file=sys.stdout)\n\n# ファイルが自動的に閉じられることを確認するために別のコンソール出力\nprint('File closed:', f.closed)\n実行結果\n/usr/local/bin/python3.1...",
          "link": "https://zenn.dev/joo_hashi/articles/43c119012538ba",
          "publishedOn": "2023-05-22T08:52:13.000Z",
          "wordCount": 366,
          "title": "Pythonでメモリの消費を抑えたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--of1nYuJL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25AE%25E6%25B6%2588%25E8%25B2%25BB%25E3%2582%2592%25E6%258A%2591%25E3%2581%2588%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--of1nYuJL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25AE%25E6%25B6%2588%25E8%25B2%25BB%25E3%2582%2592%25E6%258A%2591%25E3%2581%2588%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mshrynzw/articles/91ea213b43bf22",
          "author": "mshrynzw",
          "description": "概要\n一例としての参考。\n\n 一覧\n\n 基本\n\n Clipy\nクリップボードのコピー履歴\nhttps://clipy-app.com/\n\n BetterSnapTool\nウィンドウの整列\nhttps://apps.apple.com/jp/app/bettersnaptool/id417375580?mt=12\n\n Docker Desktop\nよく利用する環境構築\nhttps://www.docker.com/products/docker-desktop/\n\n Visual Studio Code\nよく利用するエディター\nhttps://azure.microsoft.com/j...",
          "link": "https://zenn.dev/mshrynzw/articles/91ea213b43bf22",
          "publishedOn": "2023-05-22T08:42:15.000Z",
          "wordCount": 290,
          "title": "【新人】macOSにインストールしているアプリ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--id_GPTFy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2596%25B0%25E4%25BA%25BA%25E3%2580%2591macOS%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mshrynzw%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNzIwYTFjNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--id_GPTFy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2596%25B0%25E4%25BA%25BA%25E3%2580%2591macOS%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mshrynzw%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNzIwYTFjNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/ee8dd263c6a57d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-229 A - First Grid\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    s = getStringRow(2)\n\n    s.sort()\n\n    print('No' if s[0] == '#.' and s[1] == '.#' else 'Yes')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/ee8dd263c6a57d",
          "publishedOn": "2023-05-22T05:25:35.000Z",
          "wordCount": 278,
          "title": "［AtCoder］ABC-229｜A - First Grid",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eiHCI2EJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-229%25EF%25BD%259CA%2520-%2520First%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eiHCI2EJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-229%25EF%25BD%259CA%2520-%2520First%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/01396edb071637",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-229 B - Hard Calculation\n\n\n\n 提出結果\ndef getStringMap():\n    return input().split()\n\n\ndef main():\n    a, b = getStringMap()\n\n    l = max(len(a), len(b))\n    if len(a) != len(b):\n        a = a.zfill(l)\n        b = b.zfill(l)\n\n    r = 'Easy'\n    for i in range(l):\n        if int(a[i]) + ...",
          "link": "https://zenn.dev/hyperdb/articles/01396edb071637",
          "publishedOn": "2023-05-22T05:25:34.000Z",
          "wordCount": 376,
          "title": "［AtCoder］ABC-229｜B - Hard Calculation",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A_e8OqXy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-229%25EF%25BD%259CB%2520-%2520Hard%2520Calculation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A_e8OqXy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-229%25EF%25BD%259CB%2520-%2520Hard%2520Calculation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/minnanowp/articles/372f2ea53d147c",
          "author": "POP",
          "description": "Djangoで開発したくなったので、Dockerで開発環境を簡単にセットアップしました。\n以下が、GitHubリポジトリです。データベースはPostgreSQLにしています。\nhttps://github.com/pop-web/django-docker-test-env\n\n 前提条件\n\nDockerがインストールされていること\nDocker Composeがインストールされていること\n\n\n 環境設定\n\n\nこのリポジトリをクローンします：\ngit clone git@github.com:pop-web/django-docker-test-env.git\n\n\n\nクローンしたディレクト...",
          "link": "https://zenn.dev/minnanowp/articles/372f2ea53d147c",
          "publishedOn": "2023-05-21T19:08:34.000Z",
          "wordCount": 118,
          "title": "Dockerを使用してDjango開発環境を簡単にセットアップする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8_CeCaO3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Django%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:POP%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViZDhhNDFhN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8_CeCaO3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Django%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:POP%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViZDhhNDFhN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lia/articles/c5e00435659ea2",
          "author": "りあ",
          "description": "今回はAtCoder Beginner Contest 302のB問題です．\nそうです．まさかのB問題で躓きました．はぁ・・・・\n言語はPython3(PyPy3)になります.\nちなみに前回はcollectionライブラリのCounterモジュールを使った問題を解説してますので，よければご覧ください．\nhttps://zenn.dev/lia/articles/7f0a1af230bbfb\nまずは問題を見てみましょう．\n\n 問題文\n縦 H マス × 横 W マスのマス目があり、各マスに 1 つずつ英小文字が書き込まれています。 上から i 行目かつ左から j 列目のマスを (i,j) で...",
          "link": "https://zenn.dev/lia/articles/c5e00435659ea2",
          "publishedOn": "2023-05-21T14:21:26.000Z",
          "wordCount": 1494,
          "title": "AtCoder Beginner Contest 302 B問題",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ff97TgtF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%2520Beginner%2520Contest%2520302%2520B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ZmExMWM5MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ff97TgtF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%2520Beginner%2520Contest%2520302%2520B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ZmExMWM5MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/raku/articles/7b647a11a7a766",
          "author": "raku",
          "description": "初めに\nChatGPTの登場によって、ここ数カ月、生成系AIが非常に盛り上がっていますね。\n連日新しいサービスやプラグインが生まれているイメージです。\nさて、エンジニア界隈では、このChatGPTにプログラムを自動生成してもらい、ノーコードツールのように使用するようなユースケースが度々見受けられます。（日本語で書いた文章から自動でアプリケーションを構築するサービスなんかも出来てましたね）\n今回は、そんなChatGPTとGitHubCopilot（以降Copilotと表記します）を使用してアプリケーション開発をしてみたので、その感想や上記ツールを使用するコツを書いていこうと思います。\n...",
          "link": "https://zenn.dev/raku/articles/7b647a11a7a766",
          "publishedOn": "2023-05-21T14:17:07.000Z",
          "wordCount": 213,
          "title": "ChatGPT・GitHubCopilotを使用したAI時代のアプリケーション開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--k8Tac8lP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2583%25BBGitHubCopilot%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FAI%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:raku%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUazNJcFRVSEhLejB0b19HdzRVZHEyQVpWR2o5MWlDbDNCMFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--k8Tac8lP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2583%25BBGitHubCopilot%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FAI%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:raku%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUazNJcFRVSEhLejB0b19HdzRVZHEyQVpWR2o5MWlDbDNCMFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/keisuke_05410/articles/bf589deea27876",
          "author": "Keisuke_Kaji",
          "description": "はじめに\nこんにちは、今回はFlaskのアプリケーションをHerokuにデプロイしようとした際に遭遇した問題とその解決方法について話したいと思います。特に、'Procfile'の名前に関連する問題で、私の経験が同じ問題に直面している方々の助けになればと思います。\n\n エラー内容\n私の目標は、作成したFlaskアプリケーションをHerokuにデプロイすることでした。しかし、デプロイプロセスを開始したところで、私はエラーに直面しました。\nat=error code=H14 desc=”No web processes running” method=GET path=”/” host=x...",
          "link": "https://zenn.dev/keisuke_05410/articles/bf589deea27876",
          "publishedOn": "2023-05-21T13:29:38.000Z",
          "wordCount": 159,
          "title": "FlaskアプリケーションのHerokuデプロイ：'Procfile'名前エラーの解決",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WVuu50GV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AEHeroku%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25EF%25BC%259A%2527Procfile%2527%25E5%2590%258D%25E5%2589%258D%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keisuke_Kaji%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5YjBmMGM1ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WVuu50GV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AEHeroku%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25EF%25BC%259A%2527Procfile%2527%25E5%2590%258D%25E5%2589%258D%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keisuke_Kaji%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5YjBmMGM1ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lia/articles/7f0a1af230bbfb",
          "author": "りあ",
          "description": "最近プログラミングコンテストに興味を持ちまして，まぁこれが難しい．\nてことで備忘録として躓いた問題を復習したいと思います．\nちなみに言語はPython3です\n今回は，AtCoder Beginner Contest 301のC問題\n\n 問題文\nAtCoder社ではカードを使った 1 人ゲームが流行っています。\nゲームで使う各カードには、英小文字 1 文字または @ の文字が書かれており、いずれのカードも十分多く存在します。\nゲームは以下の手順で行います。\n\nカードを同じ枚数ずつ 2 列に並べる。\n@ のカードを、それぞれ a, t, c, o, d, e, r のいずれかのカードと置き換...",
          "link": "https://zenn.dev/lia/articles/7f0a1af230bbfb",
          "publishedOn": "2023-05-21T11:51:17.000Z",
          "wordCount": 639,
          "title": "AtCoder Beginner Contest 301 C問題",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PwJRlFoR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%2520Beginner%2520Contest%2520301%2520C%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ZmExMWM5MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PwJRlFoR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%2520Beginner%2520Contest%2520301%2520C%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ZmExMWM5MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro46/articles/fdd474403f6554",
          "author": "SHIRO",
          "description": "使用するライブラリ\nimport pandas as pd\n\n (備考) 列指定の方法\ndf['a'] と指定すれば Series になる。\ndf[['a']] と指定すれば DataFrame になる。\n\n apply系の関数の選択チートシート\n新しい列を追加する処理を実装したい場面を想定。\n\n\n\ninput\noutput\nfunctions\nfunc in apply\n\n\n\n\n\npd.Series\npd.Series\n\npd.Series.map  pd.Series.apply\n\nスカラー → スカラー\n\n\npd.Series\npd.DataFrame\npd.Series.ap...",
          "link": "https://zenn.dev/shiro46/articles/fdd474403f6554",
          "publishedOn": "2023-05-21T09:36:47.000Z",
          "wordCount": 1076,
          "title": "【Python】pandas の apply系関数まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3u3py1z3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pandas%2520%25E3%2581%25AE%2520apply%25E7%25B3%25BB%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3u3py1z3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pandas%2520%25E3%2581%25AE%2520apply%25E7%25B3%25BB%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/122ee1611f6a6c",
          "author": "takuh",
          "description": "はじめに\n与えられた数字のインデックス番号を返すアルゴリズムです（binary_search）。\n\n 実装\n\nbinary_search.py\nfrom typing import List, NewType\n\nIndexNum = NewType(\"IndexNum\", int)\n\ndef linear_search(numbers: List[int], value: int) -> IndexNum:\n  for i in range(0, len(numbers)):\n    if numbers[i] == value:\n      return i\n  return...",
          "link": "https://zenn.dev/takuh/articles/122ee1611f6a6c",
          "publishedOn": "2023-05-21T08:14:25.000Z",
          "wordCount": 746,
          "title": "【Python】バイナリサーチの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9DM-5Qp0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2581%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9DM-5Qp0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2581%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/5c0c0e56ac3541",
          "author": "takuh",
          "description": "はじめに\nカウントソートの実装例です。\n\n 実装\n\ncounting_sort.py\nfrom typing import List\n\ndef counting_sort(numbers: List) -> List[int]:\n  max_num = max(numbers)\n  counts = [0] * (max_num + 1)\n  result = [0] * len(numbers)\n  \n  for num in numbers:\n    counts[num] += 1\n  \n  # 各数字の個数を調べる\n  for i in range(1, len(cou...",
          "link": "https://zenn.dev/takuh/articles/5c0c0e56ac3541",
          "publishedOn": "2023-05-21T06:10:41.000Z",
          "wordCount": 469,
          "title": "【Python】カウントソートの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kXlGf1oH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kXlGf1oH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/harukii/articles/eb07ea9a1d1c07",
          "author": "ホソノP",
          "description": "ナンピンマーチンはもうすでにご存知のように一定期間は無敵の手法です。\nどの通貨ペアを選択すればいいかを考えてみます。\n事前にTwitterで調査したところ、\n\nAUDCAD\nXAUUSD\nその他なんでもヨシ\n\nとのことです。\n\n 日足チャートの値動き率でボラティリティを確認する\nTrading Viewの日足チャートの値動き率ご覧ください。\n\n紫 USDJPY\n水 XAUUSD\n黄 AUDCAD\nオレンジ AUDNZD\n見えてるレンジでオレンジの線が一番値動きがおとなしいです。\nでは オレンジ色の通貨ペア「AUDCAD」が最良なのでしょうか？\nこれはどうですか？\n\nこれを見ると水色の「X...",
          "link": "https://zenn.dev/harukii/articles/eb07ea9a1d1c07",
          "publishedOn": "2023-05-21T04:34:03.000Z",
          "wordCount": 4429,
          "title": "ナンピンマーチンの通貨ペアはAUDCADとXAUUSDと、どちらが良いのか？",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rIqqm77N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258A%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25B3%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25B3%25E3%2581%25AE%25E9%2580%259A%25E8%25B2%25A8%25E3%2583%259A%25E3%2582%25A2%25E3%2581%25AFAUDCAD%25E3%2581%25A8XAUUSD%25E3%2581%25A8%25E3%2580%2581%25E3%2581%25A9%25E3%2581%25A1%25E3%2582%2589%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rIqqm77N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258A%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25B3%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25B3%25E3%2581%25AE%25E9%2580%259A%25E8%25B2%25A8%25E3%2583%259A%25E3%2582%25A2%25E3%2581%25AFAUDCAD%25E3%2581%25A8XAUUSD%25E3%2581%25A8%25E3%2580%2581%25E3%2581%25A9%25E3%2581%25A1%25E3%2582%2589%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro46/articles/5653a2905328a4",
          "author": "SHIRO",
          "description": "使用するライブラリ\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nデータはすべて long-form の pd.DataFrame とする。\n\n (おまけ) よく使う設定\n!\n完全に個人の趣味です。\n\nsns.set_style('whitegrid') # darkgrid, whitegrid, dark, white\nsns.set_context('talk') # paper < notebook < talk < poster\nsns.set_palet...",
          "link": "https://zenn.dev/shiro46/articles/5653a2905328a4",
          "publishedOn": "2023-05-21T03:37:56.000Z",
          "wordCount": 653,
          "title": "【Python】データ可視化に使えるseabornまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LpK8zxgg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258Bseaborn%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--LpK8zxgg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258Bseaborn%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/waiwawaiwai/articles/96c53787491f80",
          "author": "わいわわ",
          "description": "pythonでりんごの会計を出すコードを作る\nこんにちは！pythonの勉強に励んでおります、わいわわです！\nprogateさんのカリキュラムを学習していたら\n最後に問題が出てきましたのでアウトプットとしてまとめます。\n\n りんごの個数を入力し、合計金額が出るコード\napple_price = 200\nmoney = 1000\n\ninput_count = input('購入するりんごの個数を入力してください：')\ncount = int(input_count)\ntotal_price = apple_price * count\n\nprint('購入するりんごの個数は' + str...",
          "link": "https://zenn.dev/waiwawaiwai/articles/96c53787491f80",
          "publishedOn": "2023-05-21T03:18:30.000Z",
          "wordCount": 208,
          "title": "Pythonの基礎的な問題を解く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WI22dd7n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%259A%2584%25E3%2581%25AA%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%2584%25E3%2582%258F%25E3%2582%258F%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlYzc2NzgwMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WI22dd7n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%259A%2584%25E3%2581%25AA%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%2584%25E3%2582%258F%25E3%2582%258F%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlYzc2NzgwMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/parfait/articles/2349f015addbaf",
          "author": "parfait",
          "description": "この記事の対象ユーザー\n\nSnowflakeユーザー\nPandasはわかるけど，Snowpark for pythonは不慣れな方\nSnowpark for pythonのチートシートを探している方\n\n\n 背景\n「Snowpark for python，書きにくい・・・」\n同じ感想を持った方は同士だ．是非，この記事を最後まで読んだうえで「私が知ってるTips」をコメントで残してほしい．\nなぜ，Snowpark for python(以下，Snowpark)を書きにくいと感じるのか？理由はいくつかあるが，一番の理由は「Pandas likeなコードでsnowflakeを操作できる」と勘...",
          "link": "https://zenn.dev/parfait/articles/2349f015addbaf",
          "publishedOn": "2023-05-21T03:15:53.000Z",
          "wordCount": 3790,
          "title": "PandasとSnowpark for pythonの対応表",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XY9uWIWR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2581%25A8Snowpark%2520for%2520python%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%25E8%25A1%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:parfait%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNDMyNTBmMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XY9uWIWR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2581%25A8Snowpark%2520for%2520python%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%25E8%25A1%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:parfait%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNDMyNTBmMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/c0b74d9aaec8f7",
          "author": "takuh",
          "description": "はじめに\n偶数のリストを返すアルゴリズムです。\n（例）input: 20, output: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20]\n\n 実装\n\neven_numbers.py\nfrom typing import List\ndef func(num: int) -> List[int]:\n  numbers = []\n  for i in range(num+1):\n    if i%2 == 0:\n      numbers.append(i)\n    else:\n      continue\n  return numbers\n\nif ...",
          "link": "https://zenn.dev/takuh/articles/c0b74d9aaec8f7",
          "publishedOn": "2023-05-21T01:08:36.000Z",
          "wordCount": 258,
          "title": "【Python】偶数のリストを返すアルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WgQ7hWtB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%2581%25B6%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WgQ7hWtB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%2581%25B6%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/fd84d5a8047ebb",
          "author": "takuh",
          "description": "はじめに\n与えた数字までに存在する素数を格納したリストを作成するアルゴリズムです。\n（例）input: 20, output: [2, 3, 5, 7, 11, 13, 17, 19]\n\n 実装\n\nprime_numbers.py\n# 関数に型明示ができるようにする\nfrom typing import List, Generator\n\n# 素数を抽出する関数（与えた数字までの素数を抽出する）\ndef generate_primes_v1(numbers: int) -> List[int]:\n  # 空のリストの作成\n  primes = []\n  # for文を何回回したか...",
          "link": "https://zenn.dev/takuh/articles/fd84d5a8047ebb",
          "publishedOn": "2023-05-21T00:05:55.000Z",
          "wordCount": 1084,
          "title": "【Python】素数のリストを作成するアルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7LHxFRA2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E7%25B4%25A0%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7LHxFRA2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E7%25B4%25A0%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazu22/articles/8c6dbf14185724",
          "author": "Kazu22",
          "description": "まだPythonは出てこないです。。。\n\nイントロダクション\n\nデジタル信号処理の概要\n応用分野と重要性\n\n\n\n\n デジタル信号処理の概要\nデジタル信号処理とは、文字通りデジタル化（量子化、離散化）された信号（光、音、加速度など）を処理（フィルタ、周波数解析など）すること。\n\n↑アナログ（青）とデジタル（赤）のイメージ。赤は飛び飛びの値しかない。（実際は細かいだけで青もデジタルなのだが、、、）\n\n 応用分野と重要性\n応用分野には以下のようなものがある\n\nテレビ\n電話\n音楽再生\n\nデジタル信号処理は情報の再現、保存、伝送を可能にする技術であり、現代の情報技術に欠かせないもの。また、医療画像...",
          "link": "https://zenn.dev/kazu22/articles/8c6dbf14185724",
          "publishedOn": "2023-05-20T14:33:33.000Z",
          "wordCount": 87,
          "title": "Pythonで学ぶデジタル信号処理（1イントロダクション）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hJ3WoRE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E4%25BF%25A1%25E5%258F%25B7%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%25881%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazu22%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDA4ZjliYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hJ3WoRE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E4%25BF%25A1%25E5%258F%25B7%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%25881%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazu22%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDA4ZjliYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kkj/articles/d14470babe1930",
          "author": "kkj",
          "description": "Poetryは、Pythonのパッケージ管理ツールです。\n今までパッケージ管理せずにコードを書いていたので、Poetryの使い方を学習します。\n学習するメリット\n・共同作業時に環境を合わせることができる\n・個人開発でコードを公開するときも役立ちそう\n\nPoetry は、 Python で依存関係を管理およびパッケージ化するためのツールです。これを使用すると、プロジェクトが依存するライブラリを宣言でき、ライブラリが管理 (インストール/更新) されます。Poetry は、繰り返しインストールを確実にするためのロックファイルを提供し、配布用にプロジェクトを構築できます。\nhttps://py...",
          "link": "https://zenn.dev/kkj/articles/d14470babe1930",
          "publishedOn": "2023-05-20T08:51:27.000Z",
          "wordCount": 611,
          "title": "PythonはPoetryを使用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iy8jPXjp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AFPoetry%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kkj%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MklxdFFYOF8zZGh0M0hDS3FMUG9tZS1MWVlWSVZjUjQ4SXRRYlk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iy8jPXjp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AFPoetry%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kkj%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MklxdFFYOF8zZGh0M0hDS3FMUG9tZS1MWVlWSVZjUjQ4SXRRYlk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/misakiishihara/articles/7571fa98b8e2b0",
          "author": "石原岬",
          "description": "venvでmigrateしようとした際にcorsheadesにエラーがあると怒られた際の対処法です。同じ状況の方がいましたら参考にしてください。\n\n エラー\n$ python3 manage.py makemigrations\nTraceback (most recent call last):\nFile \"C:\\Users\\81902\\Desktop\\Dev\\ishiharatech\\ishihara-tech-back\\manage.py\", line 22, in <module>\nmain()\nFile \"C:\\Users\\81902\\Desktop\\Dev\\ishi...",
          "link": "https://zenn.dev/misakiishihara/articles/7571fa98b8e2b0",
          "publishedOn": "2023-05-20T03:37:00.000Z",
          "wordCount": 398,
          "title": "[エラーハンドリング]No module named 'corsheaders'",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FrDTZIe4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%255DNo%2520module%2520named%2520%2527corsheaders%2527%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmOGQ1NTY0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FrDTZIe4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%255DNo%2520module%2520named%2520%2527corsheaders%2527%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259F%25B3%25E5%258E%259F%25E5%25B2%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmOGQ1NTY0ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joanofarc/articles/depressied_fired_engineer_on_mega_venture",
          "author": "JoanOfArc",
          "description": "はじめに\n当記事を開いてくださりありがとうございます。私は表題の通り、私は一般にメガベンチャーと呼ばれる自社開発企業で機械学習エンジニアとして勤務しはじめてからわずか半年で、鬱を発症し退職することになったものです。この会社は待遇も良く、社風としても労働者思いのとても素晴らしい会社であったと私自身振り返って思います。\n　そんな会社に運よく入社することができた私ですが、わずか半年で「鬱状態」と心療内科から診断を受け休職し、会社制度により退職することになりました。「え？そんなに素晴らしい環境なのにメンタル弱すぎでは？」と思われる方もいらっしゃることでしょう。返す言葉が全くありません。おっし...",
          "link": "https://zenn.dev/joanofarc/articles/depressied_fired_engineer_on_mega_venture",
          "publishedOn": "2023-05-20T01:47:28.000Z",
          "wordCount": 338,
          "title": "自社開発メガベンチャーをわずか半年で鬱退職した雑魚エンジニアの話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--miN0hhHY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E7%25A4%25BE%25E9%2596%258B%25E7%2599%25BA%25E3%2583%25A1%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%2592%25E3%2582%258F%25E3%2581%259A%25E3%2581%258B%25E5%258D%258A%25E5%25B9%25B4%25E3%2581%25A7%25E9%25AC%25B1%25E9%2580%2580%25E8%2581%25B7%25E3%2581%2597%25E3%2581%259F%25E9%259B%2591%25E9%25AD%259A%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--miN0hhHY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E7%25A4%25BE%25E9%2596%258B%25E7%2599%25BA%25E3%2583%25A1%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%2592%25E3%2582%258F%25E3%2581%259A%25E3%2581%258B%25E5%258D%258A%25E5%25B9%25B4%25E3%2581%25A7%25E9%25AC%25B1%25E9%2580%2580%25E8%2581%25B7%25E3%2581%2597%25E3%2581%259F%25E9%259B%2591%25E9%25AD%259A%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JoanOfArc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmFiYzg1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/louloutech/articles/f161fdec424c57",
          "author": "louloutech",
          "description": "こちらの記事（https://tomo8language.com/quotes-list-philosopher/）を用いて、スクレイピングの練習をしたので、その際の思考整理としてのメモ書きです。\n【目標】\n哲学者の名前とその名言を表示するコードを作成する\n【コード】\nまず広い範囲から、スクレイピングして、徐々に範囲を狭めていく\nfrom time import sleep\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd\n\nurl = 'https://tomo8language.com/quotes-...",
          "link": "https://zenn.dev/louloutech/articles/f161fdec424c57",
          "publishedOn": "2023-05-19T23:57:32.000Z",
          "wordCount": 740,
          "title": "哲学者名言のスクレイピング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WPfDxwAj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2593%25B2%25E5%25AD%25A6%25E8%2580%2585%25E5%2590%258D%25E8%25A8%2580%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:louloutech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YktVMDI3VzFrR2p0ZzVZcFoxVzRtUHVRcHlrM0hSWkwwS3NWSWo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WPfDxwAj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2593%25B2%25E5%25AD%25A6%25E8%2580%2585%25E5%2590%258D%25E8%25A8%2580%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:louloutech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YktVMDI3VzFrR2p0ZzVZcFoxVzRtUHVRcHlrM0hSWkwwS3NWSWo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takenokopjt/articles/30ca07eb59abcb",
          "author": "珍竹林_八号",
          "description": "いきさつ\nSlackを運営する中で外部の人を招くことになった。#Generalにあまり公開したくない内容があったので、新しいプライベートチャンネルに内容をコピーしたが、メッセージの一括削除機能はないらしい。調べるとSlack APIを使ってまとめて削除するしかないらしい。\n\n 手順\n\nSlack APIの取得\nPythonで処理を実行\n\n\n Slack設定（API_token取得）\nこの記事を参考にさせてもらいました。Google Apps Scriptを使う記事ですが、APIの取得のところは参考になります。実は、スクリプトはこの通りにやってもエラーが出たのであきらめた次第です。\nh...",
          "link": "https://zenn.dev/takenokopjt/articles/30ca07eb59abcb",
          "publishedOn": "2023-05-19T23:02:36.000Z",
          "wordCount": 1287,
          "title": "Slackのメッセージを一括削除したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RTtze2-n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%258F%258D%25E7%25AB%25B9%25E6%259E%2597_%25E5%2585%25AB%25E5%258F%25B7%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkNzEwNDhhZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RTtze2-n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%258F%258D%25E7%25AB%25B9%25E6%259E%2597_%25E5%2585%25AB%25E5%258F%25B7%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkNzEwNDhhZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bee2/articles/e8623a603752ff",
          "author": "bee2",
          "description": "データサイエンスやデータエンジニアリングの分野において、効率的かつ柔軟なデータ処理を実現するためには、適切なツールの選択が不可欠です。最近では、高速かつ省メモリなデータ操作ライブラリであるPolarsが注目を浴びています。本記事では、この新たなライブラリと既存のデータ処理ツールであるPandasとの対応関係を簡潔にまとめます。特に、Polarsへの移行やトライアルをスムーズに進めるために、両ライブラリの使い方に焦点を当てて解説します。\n\n 本ブログの見方\n以下のフォーマットでまとめています。\n\n <処理概要>\n< <Pandasコード>\n> <P...",
          "link": "https://zenn.dev/bee2/articles/e8623a603752ff",
          "publishedOn": "2023-05-19T13:50:44.000Z",
          "wordCount": 1789,
          "title": "Pandas → Polars 早見表",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_2g8RMMD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%2520%25E2%2586%2592%2520Polars%2520%25E6%2597%25A9%25E8%25A6%258B%25E8%25A1%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bee2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmMDgwYTliNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_2g8RMMD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%2520%25E2%2586%2592%2520Polars%2520%25E6%2597%25A9%25E8%25A6%258B%25E8%25A1%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bee2%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmMDgwYTliNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tatsuromurata/articles/fb6fbc23849e38",
          "author": "しば🐕AI",
          "description": "Elevenlabs TTSとは\nElevenlabs TTSはElevenlabsから提供されたリアルな声を高品質に生成するためのモデルであり、複数の言語をサポートする単一のTTSモデルとなっています。\nhttps://huggingface.co/spaces/elevenlabs/tts\nclone voicesとかもありますが課金しなきゃできませんでした。\n\n リンク\nColab\ngithub\n\n 準備\nGoogle Colabを開き、メニューから「ランタイム→ランタイムのタイプを変更」でランタイムを「GPU」に変更します。\n\n 環境構築\nインストール手順は以下の通りです。\n...",
          "link": "https://zenn.dev/tatsuromurata/articles/fb6fbc23849e38",
          "publishedOn": "2023-05-19T09:02:31.000Z",
          "wordCount": 547,
          "title": "Elevenlabsのmultilingual TTSをgoogle colabで試してみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FEfkvu7O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Elevenlabs%25E3%2581%25AEmultilingual%2520TTS%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FEfkvu7O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Elevenlabs%25E3%2581%25AEmultilingual%2520TTS%25E3%2582%2592google%2520colab%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25B0%2520AI%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMmM0MmY1MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5727f6b3f44e82",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-228 B - Takahashi's Secret\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, x = getIntMap()\n    a = getIntList()\n    f = [False for _ in range(n)]\n\n    i = x - 1\n    while f[i] == False...",
          "link": "https://zenn.dev/hyperdb/articles/5727f6b3f44e82",
          "publishedOn": "2023-05-19T05:05:03.000Z",
          "wordCount": 389,
          "title": "［AtCoder］ABC-228｜B - Takahashi's Secret",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WfRAIhOT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-228%25EF%25BD%259CB%2520-%2520Takahashi%2527s%2520Secret%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WfRAIhOT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-228%25EF%25BD%259CB%2520-%2520Takahashi%2527s%2520Secret%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/53c761314aa95e",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-228 A - On and Off\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    s, t, x = getIntMap()\n\n    if s < t:\n        print('Yes' if s <= x < t else 'No')\n    else:\n        print('No' if t <= x < s else 'Yes')\n\n\nif __name__ == \"__main__\":\n  ...",
          "link": "https://zenn.dev/hyperdb/articles/53c761314aa95e",
          "publishedOn": "2023-05-19T05:05:03.000Z",
          "wordCount": 311,
          "title": "［AtCoder］ABC-228｜A - On and Off",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j5SRV2zV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-228%25EF%25BD%259CA%2520-%2520On%2520and%2520Off%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--j5SRV2zV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-228%25EF%25BD%259CA%2520-%2520On%2520and%2520Off%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kazu22/articles/3bb9c8579e962f",
          "author": "Kazu22",
          "description": "動機\n業務で加速度センサで測定したデータを振動分析していますが、デジタル信号処理について十分に学んでいないので、勉強してアウトプットすることにしました。以下はChatGPTに作成してもらったカリキュラムです。これに沿って進めていきます。文体にはあまり意識せず、書きやすいように書いたため、読みにくいかもしれません。アウトプットのハードルを下げるためですので、ご了承ください。\n\n カリキュラム\n\nイントロダクション\n\nデジタル信号処理の概要\n応用分野と重要性\n\n\n離散時間信号とシステム\n\n離散時間信号の表現と性質\n離散時間システムのモデリングと特性\n\n\n離散時間信号の変換\n\n離散時間フー...",
          "link": "https://zenn.dev/kazu22/articles/3bb9c8579e962f",
          "publishedOn": "2023-05-18T21:25:48.000Z",
          "wordCount": 121,
          "title": "Pythonで学ぶデジタル信号処理（目次）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ED2wYL7T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E4%25BF%25A1%25E5%258F%25B7%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2588%25E7%259B%25AE%25E6%25AC%25A1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazu22%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDA4ZjliYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ED2wYL7T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E4%25BF%25A1%25E5%258F%25B7%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2588%25E7%259B%25AE%25E6%25AC%25A1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazu22%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDA4ZjliYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shungo_a/articles/be767f772bc0d8",
          "author": "S.A",
          "description": "前記事のまとめ、および、本記事の目的\n前記事では、ChatGPTのAPIキーを用いて、指示文を与えることでプログラムを作成可能なのかを確認しました。その結果、下記のような指示文を与えたら、以下のプログラムを作成できました。\n\n\n　このようにAPIを用いることでコメント文を記載しつつ、コーディング可能であることが分かります。ChatGPTは、2023/4/6時点で1000トークンで0.002ドルとかなり安いです。しかしながら、エラーのない正しいプログラムを書くためには、慣れるまで何回もやり直す必要があり、気が付いたら支払金額が多くなるという可能性があります。\n　そこで、指示文と今までで...",
          "link": "https://zenn.dev/shungo_a/articles/be767f772bc0d8",
          "publishedOn": "2023-05-18T11:23:15.000Z",
          "wordCount": 1276,
          "title": "Transformerを用いた文章のクラスタリング",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ICZlx1jQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformer%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ICZlx1jQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformer%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.A%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NTg1NmYwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/h_waka/articles/67d0dd45d8dc50",
          "author": "わかまつ＠iCARE",
          "description": "自作スクリプトをパッケージ化するときの書き方\n業務で自作のPythonスクリプトをパッケージ化する必要に迫られたのですが、意外とハマったので備忘録を残しておきます。\nPythonバージョンは3.9.xです。\n\n 例示\n\n 構成\n+ hoge/\n    +- __init__.py\n    +- foo.py\n$ cat hoge/__init__.py\n\nfrom .foo import bar\n\n$ cat hoge/foo.py\n\ndef bar(msg :str=\"Hello World!\"):\n    print(msg)\n    return None\n\nif __name...",
          "link": "https://zenn.dev/h_waka/articles/67d0dd45d8dc50",
          "publishedOn": "2023-05-18T08:23:28.000Z",
          "wordCount": 143,
          "title": "__init__.py の書き方を永遠に覚えられない私へ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WXacyZtA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:__init__.py%2520%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E6%25B0%25B8%25E9%2581%25A0%25E3%2581%25AB%25E8%25A6%259A%25E3%2581%2588%25E3%2582%2589%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E7%25A7%2581%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%258B%25E3%2581%25BE%25E3%2581%25A4%25EF%25BC%25A0iCARE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNGEwRExYbDRKV3RmREk2M05iT05EVjBTNDlfTnVTUjNDY3hkWUg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WXacyZtA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:__init__.py%2520%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E6%25B0%25B8%25E9%2581%25A0%25E3%2581%25AB%25E8%25A6%259A%25E3%2581%2588%25E3%2582%2589%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E7%25A7%2581%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%258B%25E3%2581%25BE%25E3%2581%25A4%25EF%25BC%25A0iCARE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNGEwRExYbDRKV3RmREk2M05iT05EVjBTNDlfTnVTUjNDY3hkWUg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e1dbcf0f2e8bc6",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-227 A - Last Card\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef num(i, n):\n    return n if i % n == 0 else i % n\n\n\ndef main():\n    n, k, a = getIntMap()\n\n    p = [num(i, n) for i in range(a, a + k)]\n\n    print(p[-1])\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e1dbcf0f2e8bc6",
          "publishedOn": "2023-05-18T04:19:02.000Z",
          "wordCount": 333,
          "title": "［AtCoder］ABC-227｜A - Last Card",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DUvbTXlc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-227%25EF%25BD%259CA%2520-%2520Last%2520Card%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DUvbTXlc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-227%25EF%25BD%259CA%2520-%2520Last%2520Card%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/5ac52b584b8b51",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-227 B - KEYENCE building\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef f(a, b):\n    return 4 * a * b + 3 * a + 3 * b\n\n\ndef main():\n    n = getInt()\n    s = getIntList()\n\n    a = []\n    l = min(max(s), 1000) + 1\n  ...",
          "link": "https://zenn.dev/hyperdb/articles/5ac52b584b8b51",
          "publishedOn": "2023-05-18T04:19:01.000Z",
          "wordCount": 552,
          "title": "［AtCoder］ABC-227｜B - KEYENCE building",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JLLYEIfs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-227%25EF%25BD%259CB%2520-%2520KEYENCE%2520building%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JLLYEIfs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-227%25EF%25BD%259CB%2520-%2520KEYENCE%2520building%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/luv/articles/cee43ccc05ae20",
          "author": "lovespaces",
          "description": "discord.pyでcaptchaモジュールを使用した画像認証ボットを作ったのでせっかくならと紹介。\n\n 完成型\n/panelというコマンドを送信すると認証パネルが送信され、チェックマークが書かれたボタンを押すとぼかしが入った認証コードが表示されるというものになっています。\n\n「表示する」を押すとぼかしが消され、認証と書かれたボタンを押すと認証コードを入力するモーダルが出るというものになっています。\n\n\n\n 使うモジュール\n\ndiscord.py\ncaptcha\nrandom (標準モジュール)\nstring (標準モジュール)\nio (標準モジュール)\npillow\n\n\n コード\n!...",
          "link": "https://zenn.dev/luv/articles/cee43ccc05ae20",
          "publishedOn": "2023-05-17T12:14:45.000Z",
          "wordCount": 3138,
          "title": "captchaモジュールを使った画像認証ボットを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ag1R6b8E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:captcha%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lovespaces%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjN2RiM2M5NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ag1R6b8E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:captcha%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lovespaces%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjN2RiM2M5NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yosuke00/articles/4484f8b5443047",
          "author": "Yosuke00",
          "description": "1.はじめに\n今回は、自然言語処理の自己学習の一環としてレシピサイトの言語情報が必要でスクレイピングを行った際に個人的に詰まった点や注意点を備忘録として記事を書いていきます。\n　あと、規約的におそらくスクレイピング自体はサーバーに負荷がかからないよう配慮すれば大丈夫だとは思っているのですがもしこの認識が間違っているようであればご指摘よろしくお願いします。\n\n 2.Seleniumについて\n今回用いたSeleniumとは、Webアプリケーションのテストを自動化するオープンソースのテストフレームワークで、ジェイソン・ハギンズ氏によって2004年に開発されました。\n　Pythonによるスク...",
          "link": "https://zenn.dev/yosuke00/articles/4484f8b5443047",
          "publishedOn": "2023-05-17T08:42:19.000Z",
          "wordCount": 2118,
          "title": "クックパッドから複数ページをSeleniumでスクレイピング!!",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M4WCgnVF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2591%25E3%2583%2583%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592Selenium%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2521%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yosuke00%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmViMmNlZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--M4WCgnVF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2591%25E3%2583%2583%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592Selenium%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2521%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yosuke00%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmViMmNlZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/92b9526e20c7a6",
          "author": "sergicalsix",
          "description": "はじめに\nPythonには、文字列の評価や動的なコード操作を行うための複数の手法が存在します。\n文字列の実行では、eval()やexec()がポピュラーですが、本記事では安全で信頼性の高い方法としてast.literal_eval()、getattr()の活用方法を紹介します。\n\n exec,evalとそのセキュリティリスク\nPythonのexec()を使用すると、文字列をPythonのコードとして実行することができます。以下はexec()の基本的な使用例です。\nagg = \"sum\"\nl = [1, 2, 3]\nexec(f'result = {agg}(l)')\nprint(re...",
          "link": "https://zenn.dev/sergicalsix/articles/92b9526e20c7a6",
          "publishedOn": "2023-05-17T07:38:00.000Z",
          "wordCount": 394,
          "title": "Python: 文字列の実行でeval,execからは卒業しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IfBe6nxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%253A%2520%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25A7eval%252Cexec%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AF%25E5%258D%2592%25E6%25A5%25AD%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IfBe6nxd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%253A%2520%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25A7eval%252Cexec%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AF%25E5%258D%2592%25E6%25A5%25AD%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/herumi/articles/s_xbyak-assembler-2",
          "author": "herumi",
          "description": "初めに\nこれはx64用JITアセンブラXbyakや静的アセンブラs_xbyakを開発するときに、各種アセンブラの差異についてはまったり調べたりしたことをまとめるにあたり、せっかくなのでクイズ形式にしたものです。\n中級以降は主にAVX-512に関するかなりマニアックで瑣末な知識です。何を聞かれてるのか分からなくても殆どの場合、何の問題もありません。\n\n 前置き\nここで扱うアセンブラは\n\nGAS (GNU Assembler) 2.38\n\nNetwide Assembler (NASM) 2.16\n\nMicrosoft Macro Assembler 14.35.32217.1\n\nです。...",
          "link": "https://zenn.dev/herumi/articles/s_xbyak-assembler-2",
          "publishedOn": "2023-05-17T07:23:48.000Z",
          "wordCount": 928,
          "title": "x64用主要アセンブラの構文差異クイズ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0hbr4ZEO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:x64%25E7%2594%25A8%25E4%25B8%25BB%25E8%25A6%2581%25E3%2582%25A2%25E3%2582%25BB%25E3%2583%25B3%25E3%2583%2596%25E3%2583%25A9%25E3%2581%25AE%25E6%25A7%258B%25E6%2596%2587%25E5%25B7%25AE%25E7%2595%25B0%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0hbr4ZEO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:x64%25E7%2594%25A8%25E4%25B8%25BB%25E8%25A6%2581%25E3%2582%25A2%25E3%2582%25BB%25E3%2583%25B3%25E3%2583%2596%25E3%2583%25A9%25E3%2581%25AE%25E6%25A7%258B%25E6%2596%2587%25E5%25B7%25AE%25E7%2595%25B0%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ma5me/articles/f558076fc4c77c",
          "author": "Ma5Me",
          "description": "概要\nなんとなくzennを始めたので、テストを兼ねた投稿です。\nWSL（Windows Subsystem for Linux）を使ってるホスト側（Windows）で、\nいつも同じようなシェル芸を使ってテキスト加工するときに使えるネタです。\n作業環境のホスト側にPythonいれてあって、業務で同じシェル芸を繰り返す方に役立ちます。\n補足：そもそもbash等のシェルスクリプトで済むじゃんって話ではあるのですが･･･\n\n 想定\nノートアプリで学習サイト[1]のメモを書き残すようなときに、\n各タイトルが含まれるページをHTMLで保存したものから抽出するケースを想定してます。\n今回は以下の二...",
          "link": "https://zenn.dev/ma5me/articles/f558076fc4c77c",
          "publishedOn": "2023-05-17T05:53:05.000Z",
          "wordCount": 530,
          "title": "WSLを呼び出してシェル芸する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7SljJqIn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E8%258A%25B8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ma5Me%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlNjU3YmY1OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7SljJqIn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E8%258A%25B8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ma5Me%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlNjU3YmY1OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/91eab5f42dc9c9",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-226 B - Counting Arrays\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    l = getStringRow(n)\n\n    print(len(set(l)))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/91eab5f42dc9c9",
          "publishedOn": "2023-05-17T04:47:27.000Z",
          "wordCount": 273,
          "title": "［AtCoder］ABC-226｜B - Counting Arrays",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y3ArBKSy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-226%25EF%25BD%259CB%2520-%2520Counting%2520Arrays%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y3ArBKSy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-226%25EF%25BD%259CB%2520-%2520Counting%2520Arrays%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1a8e79aa412ea0",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-226 A - Round decimals\n\n\n\n 提出結果\nimport math\n\n\ndef getFloat():\n    return float(input())\n\n\ndef main():\n    x = getFloat()\n\n    print(math.floor(x + 0.5))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1a8e79aa412ea0",
          "publishedOn": "2023-05-17T04:47:27.000Z",
          "wordCount": 221,
          "title": "［AtCoder］ABC-226｜A - Round decimals",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--q5siMdIH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-226%25EF%25BD%259CA%2520-%2520Round%2520decimals%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--q5siMdIH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-226%25EF%25BD%259CA%2520-%2520Round%2520decimals%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takahiro1127/articles/1ff142cc210025",
          "author": "Tokyo ネオニート",
          "description": "ブログやメディアのライターさん向けに3000文字以上のSEO記事を自動生成するwebサイトを個人開発し、リリースしたので記事にしてみました。\n\n リリースしたwebサイト\nAuto(自動) + Article(記事)でAuticleという名前にしました。\n\nメインのキーワードとテールワードを入力するだけで記事を自動生成してくれるプロダクトになります。\n\n↓自動生成された記事です。こちらはPDCAについての解説記事を作成しました。\n\n↓無料で数記事作れますので、皆様よろしければ使ってみてください。↓\nhttps://auticle.tech/web/\n\n webサイトを作成したきっかけ\nラ...",
          "link": "https://zenn.dev/takahiro1127/articles/1ff142cc210025",
          "publishedOn": "2023-05-17T01:08:00.000Z",
          "wordCount": 321,
          "title": "【新卒1年目】記事を自動生成するwebサイトAuticleを個人開発しました。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JIrJst6o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2596%25B0%25E5%258D%25921%25E5%25B9%25B4%25E7%259B%25AE%25E3%2580%2591%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258Bweb%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588Auticle%25E3%2582%2592%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tokyo%2520%25E3%2583%258D%25E3%2582%25AA%25E3%2583%258B%25E3%2583%25BC%25E3%2583%2588%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4ODY3YWNiMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JIrJst6o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2596%25B0%25E5%258D%25921%25E5%25B9%25B4%25E7%259B%25AE%25E3%2580%2591%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258Bweb%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588Auticle%25E3%2582%2592%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tokyo%2520%25E3%2583%258D%25E3%2582%25AA%25E3%2583%258B%25E3%2583%25BC%25E3%2583%2588%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4ODY3YWNiMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kumasun/articles/def24ae21f6c9d",
          "author": "Kumasun Morino",
          "description": "はじめに\nWordleというゲームをご存知だろうか。\n固定長の枠に単語を当てはめると、当てはめた文字が「正解（正しい位置にあり、文字も正しい）」なのか、「惜しい（その文字が含まれるが場所が違う）」、「間違い（その文字は含まれない）」の状態で表され\nそれを元に正解の単語を探し当てるという言葉遊びだ。\n一時期流行し、各国版が作られたり、特定ジャンルに特化したものが作られたりと派生したが、\nそのうちの一つが「ポケモンWordle」だ。\nhttps://wordle.mega-yadoran.jp/\nこれを解くには、かなりの数のポケモンの名前を把握している必要があり\nポケモンに全然詳しくない...",
          "link": "https://zenn.dev/kumasun/articles/def24ae21f6c9d",
          "publishedOn": "2023-05-17T00:58:13.000Z",
          "wordCount": 1319,
          "title": "ポケモンWordleの回答を補助するコードを書いた（Pythonにおけるargparse, re, csvモジュールを使った習作）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VpVGq5gM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259D%25E3%2582%25B1%25E3%2583%25A2%25E3%2583%25B3Wordle%25E3%2581%25AE%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E8%25A3%259C%25E5%258A%25A9%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25EF%25BC%2588Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bargparse%252C%2520re%252C%2520csv%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kumasun%2520Morino%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwMUFRUjNkVVAzSExWb3pNOUk0RnBjT2VFa1JDcGV0TVFOY2hYd0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VpVGq5gM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259D%25E3%2582%25B1%25E3%2583%25A2%25E3%2583%25B3Wordle%25E3%2581%25AE%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E8%25A3%259C%25E5%258A%25A9%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25EF%25BC%2588Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bargparse%252C%2520re%252C%2520csv%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kumasun%2520Morino%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwMUFRUjNkVVAzSExWb3pNOUk0RnBjT2VFa1JDcGV0TVFOY2hYd0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ikeda1151/articles/fd921d49a00ed6",
          "author": "ikeda1151",
          "description": "前提\nIDEを動かす環境:Windows10\nseleniumを動かす環境:WSL\n\n \n以下でseleniumIDEを取得する。 ブラウザもここに入ってるので、FirefoxやChromeにプラグインを入れる必要はない。\nhttps://github.com/SeleniumHQ/selenium-ide/releases/tag/4.0.0-alpha.14\n\n 環境構築\npip install selenium==4.0\nvi /etc/yum.repos.d/google-chrome.repo\n以下を入力\n[google-chrome]\nname=google-chrome...",
          "link": "https://zenn.dev/ikeda1151/articles/fd921d49a00ed6",
          "publishedOn": "2023-05-16T13:58:26.000Z",
          "wordCount": 1159,
          "title": "selenium IDEからPython実行コードをエクスポートして実行するまで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--voAgtAdv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:selenium%2520IDE%25E3%2581%258B%25E3%2582%2589Python%25E5%25AE%259F%25E8%25A1%258C%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikeda1151%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkYThhOWI0NTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--voAgtAdv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:selenium%2520IDE%25E3%2581%258B%25E3%2582%2589Python%25E5%25AE%259F%25E8%25A1%258C%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikeda1151%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkYThhOWI0NTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/fc87667c5f2ab3",
          "author": "takuh",
          "description": "はじめに\nヴィジュネル暗号の実装例（Python）です。\n\n ヴィジュネル暗号とは？\n平文のアルファベットのインデックス番号と、鍵のアルファベットのインデックス番号を足し、２６で割った時の余りのインデックス番号に対応するアルファベットに変換する。\n\n平文　（元の文字列）：ABCDXYZ\n鍵（暗号化に使う文字列）：MORNING\n暗号文（暗号化した文字列）：MPTQFLF\n\n※ 参考図（wikipediaより引用）\n\n\n 実装\n\nvigenere_cipher.py\nimport string\n\n# 大文字での実装\nALPHABET = string.ascii_uppercase\n\n...",
          "link": "https://zenn.dev/takuh/articles/fc87667c5f2ab3",
          "publishedOn": "2023-05-16T11:37:47.000Z",
          "wordCount": 856,
          "title": "【Python】ヴィジュネル暗号の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--roYoyo3Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25B4%25E3%2582%25A3%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%258D%25E3%2583%25AB%25E6%259A%2597%25E5%258F%25B7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--roYoyo3Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25B4%25E3%2582%25A3%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%258D%25E3%2583%25AB%25E6%259A%2597%25E5%258F%25B7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/masa0317/articles/49345f7ab1e434",
          "author": "masa",
          "description": "私はこれまでpythonプロジェクトのライブラリ管理には\npip-tools\nhttps://github.com/jazzband/pip-tools\nを利用していましたが、\n現在のプロジェクトで\npoetry\nhttps://github.com/python-poetry/poetry\nを導入しました。\nその理由は\n\nPyPIのbuildとpublish機能がある\npoetry自体が枯れてきて、安定感が出てきた\n\nとなります。\nweb上に溢れているpoetryに関する記事の多くは\npoetryに関する良い所\nしか取り上がれらていませんが、\nこの記事では\nエンジニアとして現実的な目線...",
          "link": "https://zenn.dev/masa0317/articles/49345f7ab1e434",
          "publishedOn": "2023-05-16T11:18:09.000Z",
          "wordCount": 416,
          "title": "[python]poetryの導入と感想",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--lK4aW7fP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpython%255Dpoetry%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%25A8%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlNDc0ODA4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--lK4aW7fP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpython%255Dpoetry%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%25A8%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlNDc0ODA4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/798ea3cba60ea1",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-225 B - Star or Not\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    ab = getIntListRow(n - 1)\n\n    c = [0 for _ in range(0, n + 1)]\n\n    for a, b in ab:\n        c...",
          "link": "https://zenn.dev/hyperdb/articles/798ea3cba60ea1",
          "publishedOn": "2023-05-16T04:04:29.000Z",
          "wordCount": 426,
          "title": "［AtCoder］ABC-225｜B - Star or Not",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FAMvKBoF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-225%25EF%25BD%259CB%2520-%2520Star%2520or%2520Not%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FAMvKBoF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-225%25EF%25BD%259CB%2520-%2520Star%2520or%2520Not%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/059bac02447217",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-225 A - Distinct Strings\n\n\n\n 提出結果\nimport itertools\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n    t = [\"\".join(w) for w in itertools.permutations(s, 3)]\n\n    print(len(set(t)))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/059bac02447217",
          "publishedOn": "2023-05-16T04:04:28.000Z",
          "wordCount": 263,
          "title": "［AtCoder］ABC-225｜A - Distinct Strings",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UkWhA-uq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-225%25EF%25BD%259CA%2520-%2520Distinct%2520Strings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UkWhA-uq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-225%25EF%25BD%259CA%2520-%2520Distinct%2520Strings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shkik/articles/41d77ee0247c12",
          "author": "きくち",
          "description": "困ったこと\nGoogle Cloud Storageからオブジェクトを2通りの方法で取得しようとした。実行環境はローカル。\n\ngsutil\n\ngsutil ls gs://bucket/[bucket]/[object]\n成功。\ngs://bucket/[bucket_name]/[object_path]\n\nPython Cloud Storage Client\n\nfrom google.cloud import storage\n\ndef main():\n    client = storage.Client()\n    bucket = client.bucket(\"[bucke...",
          "link": "https://zenn.dev/shkik/articles/41d77ee0247c12",
          "publishedOn": "2023-05-15T20:26:57.000Z",
          "wordCount": 579,
          "title": "GCPでgsutilは通るのにstorage.Client()が通らなかった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3j2DyAXr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%25E3%2581%25A7gsutil%25E3%2581%25AF%25E9%2580%259A%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25ABstorage.Client%2528%2529%25E3%2581%258C%25E9%2580%259A%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2581%258F%25E3%2581%25A1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkxZLWl5bWFNNFljQURFekZES1VxbndOeDhZbkZGc1hmN0NhX3ZLUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3j2DyAXr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%25E3%2581%25A7gsutil%25E3%2581%25AF%25E9%2580%259A%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25ABstorage.Client%2528%2529%25E3%2581%258C%25E9%2580%259A%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2581%258F%25E3%2581%25A1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkxZLWl5bWFNNFljQURFekZES1VxbndOeDhZbkZGc1hmN0NhX3ZLUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/noneprogrammer/articles/f163941f4ecdd3",
          "author": "none_programmer",
          "description": "C++でアルゴ (幅優先探索 キューorデキューを使って) 迷路の最短路を解く\n(S-->Gへの最短経路を探して移動回数を返す)\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <iomanip>\n#include <string>\n\nusing namespace std;\n\nvoid printMaze(const vector<vector<string>>& maze) {\n    /*地図を表示する...",
          "link": "https://zenn.dev/noneprogrammer/articles/f163941f4ecdd3",
          "publishedOn": "2023-05-15T07:06:25.000Z",
          "wordCount": 3644,
          "title": "C++でアルゴ (幅優先探索 キューorデキューを使って) 迷路の最短路を解く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kFyXxCbd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:C%252B%252B%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%2520%2528%25E5%25B9%2585%25E5%2584%25AA%25E5%2585%2588%25E6%258E%25A2%25E7%25B4%25A2%2520%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BCor%25E3%2583%2587%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2529%2520%25E8%25BF%25B7%25E8%25B7%25AF%25E3%2581%25AE%25E6%259C%2580%25E7%259F%25AD%25E8%25B7%25AF%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:none_programmer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi1FSlJ6TTFSc0pRcDZLM3llSFNpVkQ4aDJjTDMyQm5MWTNHcFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--kFyXxCbd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:C%252B%252B%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%2520%2528%25E5%25B9%2585%25E5%2584%25AA%25E5%2585%2588%25E6%258E%25A2%25E7%25B4%25A2%2520%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BCor%25E3%2583%2587%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2529%2520%25E8%25BF%25B7%25E8%25B7%25AF%25E3%2581%25AE%25E6%259C%2580%25E7%259F%25AD%25E8%25B7%25AF%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:none_programmer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi1FSlJ6TTFSc0pRcDZLM3llSFNpVkQ4aDJjTDMyQm5MWTNHcFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/herumi/articles/s_xbyak-assembler-1",
          "author": "herumi",
          "description": "初めに\nこれはx64用JITアセンブラXbyakに慣れてしまい、JITでなく静的なアセンブリ言語（以下ASM）もXbyakライクに書きたいという人（つまり私）がPython上で似た開発体験を求めて作ったツールです。\ns_xbyakの\"s_\"は静的(static)からつけました。\n\n s_xbyakの特徴\n\nPythonで作られたASMコードジェネレータ\ngas (GNU Assembler), Netwide Assembler (NASM), Microsoft Macro Assemblerに対応\nWin64 ABIとAMD64 (Linux)に（一部）対応\nXbyakライクなD...",
          "link": "https://zenn.dev/herumi/articles/s_xbyak-assembler-1",
          "publishedOn": "2023-05-15T05:40:30.000Z",
          "wordCount": 1578,
          "title": "Xbyakライクなx64用静的ASM生成ツールs_xbyak",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ujoO16G0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Xbyak%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25AF%25E3%2581%25AAx64%25E7%2594%25A8%25E9%259D%2599%25E7%259A%2584ASM%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABs_xbyak%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ujoO16G0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Xbyak%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25AF%25E3%2581%25AAx64%25E7%2594%25A8%25E9%259D%2599%25E7%259A%2584ASM%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABs_xbyak%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:herumi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dja2JGZGIydG5ESjlyX2tUMnRQcU1pbkJKVTNIVjhEc0pOZEdHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e3722c9af92207",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-224 A - Tires\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('er' if s.endswith('er') else 'ist')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e3722c9af92207",
          "publishedOn": "2023-05-15T04:20:04.000Z",
          "wordCount": 215,
          "title": "［AtCoder］ABC-224｜A - Tires",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qz021Puu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-224%25EF%25BD%259CA%2520-%2520Tires%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qz021Puu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-224%25EF%25BD%259CA%2520-%2520Tires%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/7c8269e598d801",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-224 B - Mongeness\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntListRow(N):\n    return [list(map(int, input().split())) for _ in range(N)]\n\n\ndef main():\n    h, w = getIntMap()\n    a = getIntListRow(h)\n\n    f = True\n    for y in range(h - 1):\n        for ...",
          "link": "https://zenn.dev/hyperdb/articles/7c8269e598d801",
          "publishedOn": "2023-05-15T04:20:03.000Z",
          "wordCount": 530,
          "title": "［AtCoder］ABC-224｜B - Mongeness",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9Fc0XDkH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-224%25EF%25BD%259CB%2520-%2520Mongeness%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9Fc0XDkH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-224%25EF%25BD%259CB%2520-%2520Mongeness%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/noneprogrammer/articles/d13a8f3e4537d8",
          "author": "none_programmer",
          "description": "繋がっている水たまり(w)の数を数えるアルゴ(水たまりは8近傍で隣接している場合につながっているとみなします。)\n\n pythonで深さ優先探索の実装\ndef lake_counting(field):\n    #debug_print(field)\n    field_x_length = len(field) #10行\n    field_y_length = len(field[0]) #12列\n    lake_count = 0 #答え用のポケット用意\n\n    #深さ優先検索(再帰)\n    def dfs(x,y):                \n        fi...",
          "link": "https://zenn.dev/noneprogrammer/articles/d13a8f3e4537d8",
          "publishedOn": "2023-05-14T13:28:10.000Z",
          "wordCount": 4445,
          "title": "深さ優先探索 python,go,cpp(goとcppはほぼ同じ)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bLxKJzZy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25B7%25B1%25E3%2581%2595%25E5%2584%25AA%25E5%2585%2588%25E6%258E%25A2%25E7%25B4%25A2%2520python%252Cgo%252Ccpp%2528go%25E3%2581%25A8cpp%25E3%2581%25AF%25E3%2581%25BB%25E3%2581%25BC%25E5%2590%258C%25E3%2581%2598%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:none_programmer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi1FSlJ6TTFSc0pRcDZLM3llSFNpVkQ4aDJjTDMyQm5MWTNHcFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bLxKJzZy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25B7%25B1%25E3%2581%2595%25E5%2584%25AA%25E5%2585%2588%25E6%258E%25A2%25E7%25B4%25A2%2520python%252Cgo%252Ccpp%2528go%25E3%2581%25A8cpp%25E3%2581%25AF%25E3%2581%25BB%25E3%2581%25BC%25E5%2590%258C%25E3%2581%2598%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:none_programmer%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yi1FSlJ6TTFSc0pRcDZLM3llSFNpVkQ4aDJjTDMyQm5MWTNHcFI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ky0yk/articles/21cf1355858ffd",
          "author": "ky0yk",
          "description": "FastAPIに入門すべく「FastAPI入門」を写経したのでレポートします。\n\n はじめに\n\n FastAPIとは\n\nFastAPI は、Pythonの標準である型ヒントに基づいてPython 3.6 以降でAPI を構築するための、モダンで、高速(高パフォーマンス)な、Web フレームワークです。\n\nhttps://fastapi.tiangolo.com/\n\n FastAPI入門とは\nFastAPI入門は、その名の通り、FastAPIの入門としてZennで公開されている本です。\n\nDjangoやFlaskを使っている方にもおすすめ、最近人気のPython製高速Webフレームワーク、...",
          "link": "https://zenn.dev/ky0yk/articles/21cf1355858ffd",
          "publishedOn": "2023-05-14T11:25:15.000Z",
          "wordCount": 293,
          "title": "要点がギュっと詰まった「FastAPI入門」を読みながらTODOアプリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--91n0yK_D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A6%2581%25E7%2582%25B9%25E3%2581%258C%25E3%2582%25AE%25E3%2583%25A5%25E3%2581%25A3%25E3%2581%25A8%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258CFastAPI%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589TODO%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ky0yk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN3o2Nm5UTzNhRjg2cFJPOFhvNXVHQW5uQWx1NXVlRk5TeHRfUjVoUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--91n0yK_D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A6%2581%25E7%2582%25B9%25E3%2581%258C%25E3%2582%25AE%25E3%2583%25A5%25E3%2581%25A3%25E3%2581%25A8%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2580%258CFastAPI%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589TODO%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ky0yk%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN3o2Nm5UTzNhRjg2cFJPOFhvNXVHQW5uQWx1NXVlRk5TeHRfUjVoUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/harukii/articles/c48e5a665c6d2b",
          "author": "ホソノP",
          "description": "はじめに\nFX（外国為替）の自動売買ツールは、トレーディングの自動化を可能にし、効率的な取引を実現するためのツールです。本記事では、為替のヒートマップを活用してアノマリー（異常値）を検出し、それを基にした自動売買ツール（Expert Advisor, EA）の作成方法について説明します。\n為替のヒートマップとは、通貨ペアの価格変動を視覚化したもので、時間軸と価格レベルを組み合わせて表示します。ヒートマップは、価格の変動や傾向を一目で把握するのに便利であり、アノマリーの検出にも役立ちます。\n\n データの収集と前処理\n最初に、過去の価格データを収集しましょう。信頼性のあるデータプロバイダーや...",
          "link": "https://zenn.dev/harukii/articles/c48e5a665c6d2b",
          "publishedOn": "2023-05-14T08:13:09.000Z",
          "wordCount": 4314,
          "title": "FX自動売買ツール作り方：為替のヒートマップからアノマリーEAを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ezNcXvht--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FX%25E8%2587%25AA%25E5%258B%2595%25E5%25A3%25B2%25E8%25B2%25B7%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25EF%25BC%259A%25E7%2582%25BA%25E6%259B%25BF%25E3%2581%25AE%25E3%2583%2592%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A2%25E3%2583%258E%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BCEA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ezNcXvht--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FX%25E8%2587%25AA%25E5%258B%2595%25E5%25A3%25B2%25E8%25B2%25B7%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25EF%25BC%259A%25E7%2582%25BA%25E6%259B%25BF%25E3%2581%25AE%25E3%2583%2592%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A2%25E3%2583%258E%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BCEA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/omizunomitaro/articles/39837cf82b16d1",
          "author": "おみずのみ太郎",
          "description": "✅目的\ngoogle colaboratoryでSeleniumを動かすことが思った以上に設定が必要だったためメモしします。\n\n エラー内容\ngoogle colaboratoryの現在のubuntuバージョンではchromium-browserが配布されなくなったためインストールができません。\n\n 実行内容\n!pip install chromium chromium-driver\n!pip install selenium\n\n 実行内容(エラー)\nLooking in indexes: https://pypi.org/simple, https://us-python.pkg....",
          "link": "https://zenn.dev/omizunomitaro/articles/39837cf82b16d1",
          "publishedOn": "2023-05-14T07:07:36.000Z",
          "wordCount": 427,
          "title": "GoogleColaboratoryでSeleniumを動かそうとすると出るエラーの話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--B6c-o0Xe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoogleColaboratory%25E3%2581%25A7Selenium%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%2587%25BA%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25BF%25E3%2581%259A%25E3%2581%25AE%25E3%2581%25BF%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2ZjhjMTA2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--B6c-o0Xe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoogleColaboratory%25E3%2581%25A7Selenium%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E5%2587%25BA%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25BF%25E3%2581%259A%25E3%2581%25AE%25E3%2581%25BF%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2ZjhjMTA2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ikeda1151/articles/3c75e6ec8d61bf",
          "author": "ikeda1151",
          "description": "前提\nプロジェクト：Webアプリ開発\nチームメンバー数：６〜７人\n自担当：設計〜結合テスト(後にシステムテストまで)\n\n 経緯\n\n 序\nワイ「結合テスト手動なんキツイな...重いとこだけでもちまちま自動化しとかんと後々ヤバそう」\nワイ「半年くらい弄り倒してたら色々できること増えたわ」(Step1~3)\n\n 破\nメンバー1「ここの改修テスト工数がヤベぇ！」\nワイ「そこシナリオ弄るだけで自動テスト回せるからこっちでやるで」\nメンバー2「すまんワイのも頼むわ」\nメンバー3「よろ」\nワイ「ヒィ！」\nワイ「項目表からシナリオ生成できるようにしといたから、各々で自動テスト回して！」(Step4)...",
          "link": "https://zenn.dev/ikeda1151/articles/3c75e6ec8d61bf",
          "publishedOn": "2023-05-14T06:52:27.000Z",
          "wordCount": 137,
          "title": "結合テスト・システムテストを自動化した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OgoNabXA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B5%2590%25E5%2590%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BB%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikeda1151%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkYThhOWI0NTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OgoNabXA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B5%2590%25E5%2590%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BB%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikeda1151%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkYThhOWI0NTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/harukii/articles/0efcf8072daf7b",
          "author": "ホソノP",
          "description": "FX（外国為替取引）の世界では、ドル円の「五十日仲値アノマリー」という現象が注目を集めています。この現象は、一部のトレーダーによって検証され、自動売買ツールに組み込まれ、実際のトレーディングに活用されているという報告があがっています。\nところで、この五十日アノマリーは誰によって初めて発見されたのでしょうか？そして、このような情報はどのようにして生まれ、広まっていくのでしょうか？こういった疑問を抱くのは自然なことです。\nまた、アノマリーとは、通常のパターンから外れた現象を指す言葉です。では、この五十日アノマリー以外にも、時間帯による値動きを調べることで新たなアノマリーが発見できる可能性はあ...",
          "link": "https://zenn.dev/harukii/articles/0efcf8072daf7b",
          "publishedOn": "2023-05-14T05:30:58.000Z",
          "wordCount": 2499,
          "title": "FX取引と五十日アノマリー：その発見と新たな可能性の探索",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OlsCOyCy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FX%25E5%258F%2596%25E5%25BC%2595%25E3%2581%25A8%25E4%25BA%2594%25E5%258D%2581%25E6%2597%25A5%25E3%2582%25A2%25E3%2583%258E%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BC%25EF%25BC%259A%25E3%2581%259D%25E3%2581%25AE%25E7%2599%25BA%25E8%25A6%258B%25E3%2581%25A8%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25E3%2581%25AE%25E6%258E%25A2%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OlsCOyCy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FX%25E5%258F%2596%25E5%25BC%2595%25E3%2581%25A8%25E4%25BA%2594%25E5%258D%2581%25E6%2597%25A5%25E3%2582%25A2%25E3%2583%258E%25E3%2583%259E%25E3%2583%25AA%25E3%2583%25BC%25EF%25BC%259A%25E3%2581%259D%25E3%2581%25AE%25E7%2599%25BA%25E8%25A6%258B%25E3%2581%25A8%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25E3%2581%25AE%25E6%258E%25A2%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2582%25BD%25E3%2583%258EP%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMRmtaa0x2czhRUTlKQ3ZkTDlvQ0l3a3NuU0cyVDB0dkVQUW5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/45fc0a6c9738bc",
          "author": "takuh",
          "description": "はじめに\nコーディング練習１日目です。\n\n コーディング内容\nリスト内の数字の中で、値の大きなもの２つの差をリストに追加していき、使用した値の大きなもの２つはリストから除外する。\nこの処理を繰り返していき、最後にリストに残った値を出力する。\n\n 実装\n\nsample.py\n# 関数内で型明示する\nfrom typing import List\n\nclass Solution:\n    def lastStoneWeight(self, stones: List[int]) -> int:\n        def remove_largest():\n            # リ...",
          "link": "https://zenn.dev/takuh/articles/45fc0a6c9738bc",
          "publishedOn": "2023-05-14T02:49:09.000Z",
          "wordCount": 618,
          "title": "【Python】コーディング練習",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3ajq5oTe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E7%25B7%25B4%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3ajq5oTe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E7%25B7%25B4%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/22ed4bc99f797f",
          "author": "takuh",
          "description": "はじめに\nInsertion sortは、リスト内の値をインデックス順に見ていき、現在の値よりも数の小さいものがあったら、その値を適切な位置まで移動させるようなソート方法である。\n\n 実装【Python】\n\ninsertion_sort.py\n# 一回のリストのループ中に数の逆転があったら、その値を適切な位置まで移動させる\nfrom typing import List\n\n\ndef insertion_sort(numbers: List[int]) -> List[int]:\n    len_numbers = len(numbers)\n    for i in range(...",
          "link": "https://zenn.dev/takuh/articles/22ed4bc99f797f",
          "publishedOn": "2023-05-14T02:38:24.000Z",
          "wordCount": 391,
          "title": "【Python】挿入ソート（Insertion Sort）を使ってみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QDg1xFOc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%258C%25BF%25E5%2585%25A5%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2588Insertion%2520Sort%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QDg1xFOc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%258C%25BF%25E5%2585%25A5%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2588Insertion%2520Sort%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/c0c4db2539fd1c",
          "author": "takuh",
          "description": "はじめに\n選択ソートは、先頭にある値とそれ以降の値を比較し、一番小さい値を先頭に持ってくる（これを繰り返す）ソート手法です。\n\n 実装\n# 選択ソート：リストの中から１番小さな数値を探す → 見つけた最小の数値と、リストの始めの数値を入れ替える → これを繰り返す\nfrom typing import List\n\n# 関数の定義：\ndef selection_sort(numbers: List[int]) -> List[int]:\n    # インデックス番号の取り出し\n    len_numbers = len(numbers)\n    for i in range(le...",
          "link": "https://zenn.dev/takuh/articles/c0c4db2539fd1c",
          "publishedOn": "2023-05-14T02:37:17.000Z",
          "wordCount": 405,
          "title": "【Python】選択ソートを使ってみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VAJgoPhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%2581%25B8%25E6%258A%259E%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VAJgoPhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%2581%25B8%25E6%258A%259E%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/3c087a5132dfaa",
          "author": "takuh",
          "description": "はじめに\nバブルソートとは、リスト内の要素２つを前から順に見ていき、大きいものが右側になるように並べ替えていくものです。\n\n 実装\n\nbubble_sort.py\n# バブルソート：隣同士を比較する → 最後まで繰り返す → 始めに戻り、隣同士を比較 → 最後から２番目まで繰り返す\nfrom typing import List\n\n# 関数の定義(入力：元のリスト、出力：並べ替えた後のリスト)\ndef bubble_sort(numbers: List[int]) -> List[int]:\n    # リストの長さを求める\n    len_numbers = len(numb...",
          "link": "https://zenn.dev/takuh/articles/3c087a5132dfaa",
          "publishedOn": "2023-05-14T02:36:09.000Z",
          "wordCount": 425,
          "title": "【Python】バブルソートを使ってみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yhOxv5yC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2590%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yhOxv5yC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2590%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/300320a0911227",
          "author": "takuh",
          "description": "はじめに\nリストの数字を偶数、奇数の順に並べ替えるアルゴリズムを実装しました。\n\n 方針\n1.　偶数と奇数用の殻のリストを用意する。\n2.　リストを始めから順に見ていき、２で割り切れるものは偶数のリストに追加する。それ以外は奇数のリストに追加する。\n3.　偶数、奇数のリストを結合する。\n\n 実装\n\neven_first_odd_end.py\n# 関数の引数に型を明示できるようにする。\nfrom typing import List\n\n# Noneを指定することで、対象のリストを上書きできるようにする。\ndef even_first_odd_end(numbers: List[int]...",
          "link": "https://zenn.dev/takuh/articles/300320a0911227",
          "publishedOn": "2023-05-14T02:34:49.000Z",
          "wordCount": 389,
          "title": "【Python】リスト内の数字を偶数、奇数の順に並べ替えるアルゴリズム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0ba-8sk0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E5%2586%2585%25E3%2581%25AE%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E5%2581%25B6%25E6%2595%25B0%25E3%2580%2581%25E5%25A5%2587%25E6%2595%25B0%25E3%2581%25AE%25E9%25A0%2586%25E3%2581%25AB%25E4%25B8%25A6%25E3%2581%25B9%25E6%259B%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0ba-8sk0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E5%2586%2585%25E3%2581%25AE%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E5%2581%25B6%25E6%2595%25B0%25E3%2580%2581%25E5%25A5%2587%25E6%2595%25B0%25E3%2581%25AE%25E9%25A0%2586%25E3%2581%25AB%25E4%25B8%25A6%25E3%2581%25B9%25E6%259B%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/2e6c64d843c08a",
          "author": "takuh",
          "description": "はじめに\npalindromeとは\n逆さに読んでも同じもの。\n例）abcba\n※ 1文字の時も今回は含めることにする。\n\n 実装\n\npalindrome.py\ndef palindrome(strings: str) -> bool:\n    len_strings = len(strings)\n    if not len_strings:\n        return False\n    if len_strings == 1:\n        return True\n\n    start, end = 0, len_strings - 1\n    while start ...",
          "link": "https://zenn.dev/takuh/articles/2e6c64d843c08a",
          "publishedOn": "2023-05-14T02:33:03.000Z",
          "wordCount": 309,
          "title": "【Python】palindromeの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--R_nIf1b3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591palindrome%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--R_nIf1b3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591palindrome%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tsukatsuka1783/articles/introduction_machine_learning",
          "author": "ゆーと",
          "description": "この記事の目的\n「機械学習とは結局なんぞや、何ができるんや。」\n「こまけぇことはいいからとりあえずサンプルを動かして挙動確認してみたい。」\nといった、機械学習という言葉は知っているが、実際の動作イメージがついていない人 が実際に動作確認して体験してみよう。\nといった記事です。\n今回はMNISTという手書き数字の画像データを使って、数字を推論するプロブラムを作成します。\n「機械学習ってこういったこともできるんやなぁ。」となんとなく掴んで頂けたら幸いです。\n※ とりあえず機械学習を体験してみることが目的なので、技術的に詳しいことは書いてない＆参考になるようなコードは書いてません。あしから...",
          "link": "https://zenn.dev/tsukatsuka1783/articles/introduction_machine_learning",
          "publishedOn": "2023-05-14T02:28:10.000Z",
          "wordCount": 2534,
          "title": "~コピペでOK~ 実際に動かして体験する機械学習入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AD2K7l1u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%7E%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2581%25A7OK%7E%2520%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMDVkNzJkN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AD2K7l1u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%7E%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2581%25A7OK%7E%2520%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMDVkNzJkN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ashitahonkidasu/articles/36d64bfc4e4bc2",
          "author": "shiba",
          "description": "今回試した環境\nローカル環境: windows 11\nクラウドプラットフォーム: GCP compute engin m2-micro\nOS: ubuntu 22.04lts\n\n wgetでminiforgeスクリプトをダウンロード\nminiforgeのgithubにアクセスします。\nminiforge\n自分が使うOSに対応したスクリプトを右クリックしてリンク先をコピーします。\nwget \"リンク先を貼り付け\"\n\n 実行\nlsでさっきダウンロードしたスクリプト名を確認します。\nls\nMiniforge〇〇.shを実行します。\nbash \"Miniforge-スクリプト名.sh\"\n\n ...",
          "link": "https://zenn.dev/ashitahonkidasu/articles/36d64bfc4e4bc2",
          "publishedOn": "2023-05-14T01:14:18.000Z",
          "wordCount": 125,
          "title": "GCP AWS等のクラウドプラットフォームに最新のpythonを入れる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vjN7RvUg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%2520AWS%25E7%25AD%2589%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2583%2597%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AEpython%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shiba%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1OThjYTZmNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vjN7RvUg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%2520AWS%25E7%25AD%2589%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2583%2597%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AEpython%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shiba%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1OThjYTZmNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/575b7c20aa780c",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\n\n基本アルゴリズムの概要\n基本的な実装方法\nチューニング方法\n\n\n\n[!info]+ Subject\n\n機械学習プロジェクトに関わる全ての方\nDL の実装を始めたい方\n\n\n\n[!abstract]+ Curriculum\n1.深層学習の実践\n2.深層学習チューニング\n添削問題\n\n\n\n ディープラーニング実践\n\n ディープラーニングの概要\n\n フレームワーク\n\nTensorFlow by Google\n\n本講義ではtensorflow.kerasを使用します。\n\n\nPyTorch by Facebook\n\n\n 基本用語\n\nEpoch : トレーニン...",
          "link": "https://zenn.dev/joel/articles/575b7c20aa780c",
          "publishedOn": "2023-05-13T16:00:28.000Z",
          "wordCount": 10050,
          "title": "[TIL] ディープラーニング基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vSMH94BO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vSMH94BO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/eric233/articles/8781fa03b6359c",
          "author": "Eric",
          "description": "Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.\nConsider the number of elements in nums which are not equal to val be k, to get accepted...",
          "link": "https://zenn.dev/eric233/articles/8781fa03b6359c",
          "publishedOn": "2023-05-13T15:49:43.000Z",
          "wordCount": 1372,
          "title": "（英語解説）LeetCode 27: Remove Element in-Place",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OeqtqU-v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2588%25E8%258B%25B1%25E8%25AA%259E%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2589LeetCode%252027%253A%2520Remove%2520Element%2520in-Place%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Eric%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdwZG1NYXZHT3lMUXVtVUJONERCbWNZRkV0NmMxZjZKTXF4TTBXZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OeqtqU-v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2588%25E8%258B%25B1%25E8%25AA%259E%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2589LeetCode%252027%253A%2520Remove%2520Element%2520in-Place%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Eric%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTdwZG1NYXZHT3lMUXVtVUJONERCbWNZRkV0NmMxZjZKTXF4TTBXZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/parfait/articles/5aebc4523dc52f",
          "author": "parfait",
          "description": "結論\n\nDeepL + GPT3.5である程度日英の医薬品名の名寄せは可能。\nSemanticSimilarityExampleSelector + Few Shotが有効。\n名寄せ補助ツールとして、ChatGPTを使うのはあり。\n\n\n 背景\n顧客「臨床データベースA(DB)と臨床データベースBを統合して解析してほしい」\nこういった要望は定期的にあるがさて困った。なぜなら2つのDBは同じ臨床データなのだが、言語が異なるのだ。\nまたそれぞれ独自の入力ルールが多々見られ、良い結合keyが見つからない。あえて選ぶとしたら医薬品名になるのだが、片方を単純に翻訳しても医薬品名同士で結合できるわ...",
          "link": "https://zenn.dev/parfait/articles/5aebc4523dc52f",
          "publishedOn": "2023-05-13T10:55:52.000Z",
          "wordCount": 1432,
          "title": "ChatGPTで日英医薬品マスター作成の試み",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NIj4U2Lp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7%25E6%2597%25A5%25E8%258B%25B1%25E5%258C%25BB%25E8%2596%25AC%25E5%2593%2581%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E4%25BD%259C%25E6%2588%2590%25E3%2581%25AE%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:parfait%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNjl1T1dhNDNpQ1ROU2tKc0g3OGxqMEpCTFE1VlhQamhoekdLbFEyUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--NIj4U2Lp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7%25E6%2597%25A5%25E8%258B%25B1%25E5%258C%25BB%25E8%2596%25AC%25E5%2593%2581%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E4%25BD%259C%25E6%2588%2590%25E3%2581%25AE%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:parfait%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNjl1T1dhNDNpQ1ROU2tKc0g3OGxqMEpCTFE1VlhQamhoekdLbFEyUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/8aa97212202951",
          "author": "takuh",
          "description": "はじめに\nハノイの塔の実装コードです。\n\n 実装\n\ntower_of_hanoi.py\nfrom typing import List, Tuple\n\n\ndef hanoi(disk: int, src: str, dest: str, support: str):\n    if disk < 1:\n        return\n\n    hanoi(disk-1, src, support, dest)\n    print(f'move {disk} from {src} to {dest}')\n    hanoi(disk-1, support, dest, src)\n\n\n...",
          "link": "https://zenn.dev/takuh/articles/8aa97212202951",
          "publishedOn": "2023-05-13T09:43:46.000Z",
          "wordCount": 600,
          "title": "【Python】ハノイの塔の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JfrT_NVx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%258F%25E3%2583%258E%25E3%2582%25A4%25E3%2581%25AE%25E5%25A1%2594%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JfrT_NVx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%258F%25E3%2583%258E%25E3%2582%25A4%25E3%2581%25AE%25E5%25A1%2594%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/9086178dbfbbec",
          "author": "takuh",
          "description": "はじめに\n与えられた行列を螺旋状のリスト形式で返すアルゴリズムです。\n\n 参考図\n\n\n 実装\n\nspiral_matrix.py\nfrom typing import List\n\nclass Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        # 出力配列を初期化\n        result = []\n        rows, columns = len(matrix), len(matrix[0])\n        # 上、右、下、左の境界をup、right、...",
          "link": "https://zenn.dev/takuh/articles/9086178dbfbbec",
          "publishedOn": "2023-05-13T09:42:18.000Z",
          "wordCount": 700,
          "title": "【Python】スパイラルマトリックスの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HSspbeDQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B9%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%259E%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HSspbeDQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B9%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%259E%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/b2e50c34b8dad3",
          "author": "takuh",
          "description": "はじめに\nシーザー暗号：入力されたアルファベットを３つシフトさせて暗号化する方法。\n（例）art → duw\n\n 実装\n\ncaesar_cipher(not_use_stringModule)\n# 文字列を暗号化する関数（stringモジュールを使わない場合）\nfrom typing import Generator, Tuple\n\ndef caesar_cipher(text: str, shift: int) -> str:\n    result = \"\"\n    len_alphabet = ord(\"Z\") - ord(\"A\") + 1\n    for char in ...",
          "link": "https://zenn.dev/takuh/articles/b2e50c34b8dad3",
          "publishedOn": "2023-05-13T09:30:34.000Z",
          "wordCount": 896,
          "title": "【Python】シーザー暗号の実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0hLo860y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E6%259A%2597%25E5%258F%25B7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0hLo860y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E6%259A%2597%25E5%258F%25B7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/takuh/articles/b2a7f802f98d43",
          "author": "takuh",
          "description": "はじめに\nパスカルのトライアングルをPythonで実装しました。\n\n 参考図（パスカルのトライアングル）　Wikipediaより引用\n\n\n 実装\n\npascal_triangle.py\nfrom typing import List\n\n# 値を足し合わせる部分のアルゴリズム（出力はリストに入ったままの状態）\ndef pascal_triangle(depth: int) -> List[List[int]]:\n    # 各深さ毎のリストを作成する（深くなる毎に1が追加されていく）\n    data = [[1] * (i + 1) for i in range(depth)]...",
          "link": "https://zenn.dev/takuh/articles/b2a7f802f98d43",
          "publishedOn": "2023-05-13T09:25:41.000Z",
          "wordCount": 571,
          "title": "【Python】パスカルのトライアングル（実装）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7GQ3k1-A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2591%25E3%2582%25B9%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25AB%25EF%25BC%2588%25E5%25AE%259F%25E8%25A3%2585%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--7GQ3k1-A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2591%25E3%2582%25B9%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25AB%25EF%25BC%2588%25E5%25AE%259F%25E8%25A3%2585%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuh%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFZDMlpZSlp1TVJEQ1AtYkxabmNzRnlkU3RZQ2FGNU4wUTNwVWhGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kashira/articles/290de0b35836ae",
          "author": "kashira",
          "description": "なぜこの記事を書くのか？\nDataplexのデータリネージAPIを有効にすることで、BigQueryのテーブル間の依存関係を簡単に可視化することが出来る。\nhttps://cloud.google.com/data-catalog/docs/concepts/about-data-lineage?hl=ja\n特定のテーブルを参照しているテーブルが少ないうちはGUIを使うだけで問題ないが、よく参照されるテーブルの依存関係を把握する際に辛い部分もある。\n筆者が体験したものとして、テーブルAに問題が発生したので、テーブルAを参照しているテーブルをリストアップして関係者に連絡したいケースがあ...",
          "link": "https://zenn.dev/kashira/articles/290de0b35836ae",
          "publishedOn": "2023-05-13T06:05:31.000Z",
          "wordCount": 1861,
          "title": "DataplexのデータリネージAPIを使って、対象のテーブルに依存しているテーブルを自動で列挙する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PlBLgDBw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dataplex%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E5%25AF%25BE%25E8%25B1%25A1%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AB%25E4%25BE%259D%25E5%25AD%2598%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E5%2588%2597%25E6%258C%2599%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kashira%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlZDBiNDVjOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--PlBLgDBw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dataplex%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E5%25AF%25BE%25E8%25B1%25A1%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AB%25E4%25BE%259D%25E5%25AD%2598%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E5%2588%2597%25E6%258C%2599%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kashira%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlZDBiNDVjOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/datamarket/articles/dagster_cloud",
          "author": "datamarket",
          "description": "データオーケストレーションとは\n\nデータオーケストレーションという言葉をご存知でしょうか？日本ではまだ耳慣れない言葉ですが、data orchestrationでgoogle検索すると実に3000万件以上ヒットし、世界的には十分に市民権を得ている言葉です。Databricksではデータオーケストレーションを以下のように説明しています。\nデータオーケストレーションとは\nデータオーケストレーションとは、複数のストレージからサイロ化したデータを取り出し、組み合わせて整理し、分析に利用できるようにするための自動化されたプロセスです。\nこのプロセスでは、レガシーシステム、クラウドベースのツール...",
          "link": "https://zenn.dev/datamarket/articles/dagster_cloud",
          "publishedOn": "2023-05-13T03:38:00.000Z",
          "wordCount": 556,
          "title": "データオーケストレーションツールDagsterの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BXEWYFcL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25AA%25E3%2583%25BC%25E3%2582%25B1%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABDagster%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:datamarket%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5NDg0MThlNjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BXEWYFcL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25AA%25E3%2583%25BC%25E3%2582%25B1%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABDagster%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:datamarket%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5NDg0MThlNjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/cote2/articles/6459c1c44091da",
          "author": "Kotetsu",
          "description": "!\n筆者は職業プログラマーではないためおかしな記述が多々あると思いますがご容赦ください。\n\n\n 対象\nPythonのごく初歩的な知識があること。\n\n この記事でできること\nIFCデータ内に含まれる階情報（階名称、レベル）を取得する\n\n 環境\n\nPython 3.10.6\nifcopenshell 0.7.0\nifcファイルは2x3を使用\n\n今回はSolibriのサンプルファイル（Solibriビル.ifc）を使用\n\n\n\n\n 下準備\nターミナルから pip install ifcopenshell等でIfcOpenShellライブラリをインストールしておく\n\n コード\n\nIfcStorey...",
          "link": "https://zenn.dev/cote2/articles/6459c1c44091da",
          "publishedOn": "2023-05-13T01:24:31.000Z",
          "wordCount": 512,
          "title": "IfcOpenShellで階情報を取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KErzLJ6b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IfcOpenShell%25E3%2581%25A7%25E9%259A%258E%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kotetsu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2M2I3MWRlN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KErzLJ6b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IfcOpenShell%25E3%2581%25A7%25E9%259A%258E%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kotetsu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2M2I3MWRlN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c49158fcdeaee2",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-223 A - Exact Price\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    print('No' if x == 0 or x % 100 > 0 else 'Yes')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c49158fcdeaee2",
          "publishedOn": "2023-05-12T08:08:19.000Z",
          "wordCount": 248,
          "title": "［AtCoder］ABC-223｜A - Exact Price",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--msKyXf-c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-223%25EF%25BD%259CA%2520-%2520Exact%2520Price%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--msKyXf-c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-223%25EF%25BD%259CA%2520-%2520Exact%2520Price%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/3342a2028ee5aa",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-223 B - String Shifting\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    if len(s) == 1:\n        print(s)\n        print(s)\n    else:\n        t = s\n        l = []\n        for i in range(len(s)):\n            t = t[1:] + t[0]\n            l.append(t)\n ...",
          "link": "https://zenn.dev/hyperdb/articles/3342a2028ee5aa",
          "publishedOn": "2023-05-12T08:08:18.000Z",
          "wordCount": 352,
          "title": "［AtCoder］ABC-223｜B - String Shifting",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A3p8urcn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-223%25EF%25BD%259CB%2520-%2520String%2520Shifting%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A3p8urcn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-223%25EF%25BD%259CB%2520-%2520String%2520Shifting%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/masaru21/articles/4dc6ed298601b8",
          "author": "lonely_creator_m",
          "description": "ウェブサイトの引っ越しのために、素材のフォルダを頂きました。\nでも、このフォルダがウェブサイトをスクレイピングしたような感じでHTMLファイルとフォルダの構成で、保存されていました。\nそのため今回、ウェブサーバーを起動して、内容を確認したいと思いました。\n私は、Windows11HOMEを使っていますが、Stable Diffusionを使っている関係もあり、Pythonをインストールしています。\n今回は、PythonのWebサーバーを起動したいと思い作業しました。\nその内容を自分の備忘録を兼ねて、記録します。\n今回は、HTMLのファイルを表示するために行っています。\nPHPなどは動かな...",
          "link": "https://zenn.dev/masaru21/articles/4dc6ed298601b8",
          "publishedOn": "2023-05-12T07:59:29.000Z",
          "wordCount": 191,
          "title": "Windows11HOMEで手早くウェブサイトを表示する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OdSFoc2H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11HOME%25E3%2581%25A7%25E6%2589%258B%25E6%2597%25A9%25E3%2581%258F%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lonely_creator_m%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OdSFoc2H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11HOME%25E3%2581%25A7%25E6%2589%258B%25E6%2597%25A9%25E3%2581%258F%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lonely_creator_m%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gkchop/articles/8ada22b2d078f2",
          "author": "TangeDanpei",
          "description": "はじめに\n前回はシンボリック回帰のインストールから簡単なチュートリアルによる動作確認までを行いました。\nこの記事では、裏に方程式が隠れているX（説明変数）とy（目的変数）の関係について、シンボリック回帰による外挿予測性能について評価しました。典型的な機械学習手法であるElasticNet、RandomForest、Support Vector Machineをベンチマークとして比較しました。\n\n 環境\n\nUbuntu 20.04.1\nPython 3.9.15\njapanize-matplotlib 1.1.3\nmatplotlib 3.6.2\nnumpy 1.23.5\noptuna...",
          "link": "https://zenn.dev/gkchop/articles/8ada22b2d078f2",
          "publishedOn": "2023-05-12T07:43:34.000Z",
          "wordCount": 2599,
          "title": "シンボリック回帰PySRで外挿予測性能評価",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Dypduikk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0PySR%25E3%2581%25A7%25E5%25A4%2596%25E6%258C%25BF%25E4%25BA%2588%25E6%25B8%25AC%25E6%2580%25A7%25E8%2583%25BD%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TangeDanpei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYmI3ZmFjZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Dypduikk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0PySR%25E3%2581%25A7%25E5%25A4%2596%25E6%258C%25BF%25E4%25BA%2588%25E6%25B8%25AC%25E6%2580%25A7%25E8%2583%25BD%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TangeDanpei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYmI3ZmFjZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kuwaigan/articles/9cfcf42dfba6ea",
          "author": "クワイガン",
          "description": "はじめに\nはじめまして、クワイガンです(スターウォーズが好きだからこの名前にしました)。\n現在大学4年生で、来年からITベンダに入社予定です。\n先日、内定者懇親会に参加したところ、同期が結構な開発経験を積んでいる猛者ばかりだということに気がつきました。入社後、同期のみんなに置いて行かれたくないので、何か自分も成果物を作ろうということで、厚かましくもアルバイト先の塾長に、出欠管理システムの導入をプレゼンをしたところ、意外にもすんなりOKが出ました。この記事では初めての大規模？開発の苦難について語らせていただきたいと思います。大学生のみんなのモチベ向上に繋がれば幸いです。それではレッツゴ...",
          "link": "https://zenn.dev/kuwaigan/articles/9cfcf42dfba6ea",
          "publishedOn": "2023-05-12T05:19:30.000Z",
          "wordCount": 157,
          "title": "大学4年生がバイト先の塾にて, 出欠管理システムを開発した話。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qjIXxVN2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E5%25AD%25A64%25E5%25B9%25B4%25E7%2594%259F%25E3%2581%258C%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2588%25E5%2585%2588%25E3%2581%25AE%25E5%25A1%25BE%25E3%2581%25AB%25E3%2581%25A6%252C%2520%25E5%2587%25BA%25E6%25AC%25A0%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AF%25E3%2582%25A4%25E3%2582%25AC%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5MmEzZDA0NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qjIXxVN2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E5%25AD%25A64%25E5%25B9%25B4%25E7%2594%259F%25E3%2581%258C%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2588%25E5%2585%2588%25E3%2581%25AE%25E5%25A1%25BE%25E3%2581%25AB%25E3%2581%25A6%252C%2520%25E5%2587%25BA%25E6%25AC%25A0%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AF%25E3%2582%25A4%25E3%2582%25AC%25E3%2583%25B3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5MmEzZDA0NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/4652feadecc681",
          "author": "しろ",
          "description": "テキストから音楽を誰でも簡単に作れるWebUIを作りました。\n壮大なものは作れないものの単純なメロディーぐらいなら作れるものになります。\n作成されるファイルはABC、MIDI、wavが生成されます。\nhttps://github.com/massao000/text-to-music-webui\n\n デモ\nhttps://youtu.be/cxlemBVQ9Lg\nhttps://youtu.be/NVf9__rH1Nw\n\n 画面\n\n\n 使用\n使用しているものとしては以下のものになります。\nhttps://huggingface.co/sander-wood/text-to-music",
          "link": "https://zenn.dev/shiro_toy_box/articles/4652feadecc681",
          "publishedOn": "2023-05-12T03:40:00.000Z",
          "wordCount": 144,
          "title": "テキストから音楽を作るWebUIを作りました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tUYMQhQl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258BWebUI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tUYMQhQl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258BWebUI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/baayashi884/books/6347ec59e0175c",
          "author": "digitalWagon",
          "description": "pandasについて、最小限の知識に絞って扱う。",
          "link": "https://zenn.dev/baayashi884/books/6347ec59e0175c",
          "publishedOn": "2023-05-12T02:23:43.000Z",
          "wordCount": 58,
          "title": "Pandas  データ処理",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mWcz1qma--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kYzFkYjY3NDg0LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mWcz1qma--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kYzFkYjY3NDg0LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/duke13/articles/9c74dd595823cbd",
          "author": "duke13",
          "description": "これから開発者として新品のMacを手に入れましたあなたに、なるべくCleanな開発環境の構築方法を説明します。\nここで言うCleanの定義とは、各種のプログラミング言語をインストールして、バージョンを切り替えられる構成の意味です。\n今回は、Pyhton , Node.js , Java の環境構築の手順を詳しく解説していきます。\n環境のイメージ\n\n\n 1. Homebrew のインストール\nまずは、パッケージマネージャーの Homebrew をインストールしましょう。Macを使う以上、いずれインストールすることになると思います。\n/bin/bash -c \"$(curl -fsSL ht...",
          "link": "https://zenn.dev/duke13/articles/9c74dd595823cbd",
          "publishedOn": "2023-05-11T15:15:37.000Z",
          "wordCount": 813,
          "title": "anyenvを用いてCleanなMac開発環境を構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3aKx-YaT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anyenv%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6Clean%25E3%2581%25AAMac%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:duke13%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290SmJQZ1gxdlZ0UWdlVE5lQUlWRmQ3a2Y5c0dEQWMwRnJ3ZlhrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3aKx-YaT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anyenv%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6Clean%25E3%2581%25AAMac%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:duke13%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290SmJQZ1gxdlZ0UWdlVE5lQUlWRmQ3a2Y5c0dEQWMwRnJ3ZlhrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/jcc/articles/43c441c1e8929e",
          "author": "jc",
          "description": "Google Providersのバグを見つけた\n先日DAGを開発中にGoogle Providers (apache-airflow-providers-google==8.9.0)のCloudDataTransferServiceJobStatusSensorを使用したところ、\nproject_idはオプション引数であるにも関わらず、省略するとエラーが発生するというバグに遭遇しました。\n[2023-03-09, 02:31:24 UTC] {taskinstance.py:1774} ERROR - Task failed with exception\nTraceback (mo...",
          "link": "https://zenn.dev/jcc/articles/43c441c1e8929e",
          "publishedOn": "2023-05-11T14:16:40.000Z",
          "wordCount": 560,
          "title": "Apache Airflowのコミッターになった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_XmvpT1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Airflow%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_XmvpT1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Airflow%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jc%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMGIzZjk3ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/twinkle_star/articles/d82a4c79e691a6",
          "author": "comet",
          "description": "はじめに\n本記事ではPythonを用いた天文解析の理解を深めることを目的に、Astropy公式チュートリアルのSynthetic Images from simulated dataとConvolution and Filteringを参考に記事にまとめる。なお、筆者の備忘録として活用できるように分かりやすい解説を付け加えるよう配慮した。\n\n 本記事のゴール\n\n\nastropy.wcsを用いた天体画像へのWCS座標の割り当て\n\nastropy.modeling.modelを用いたPSF(Point Spread Function)の構築\n\nastropy.convolutionを用い...",
          "link": "https://zenn.dev/twinkle_star/articles/d82a4c79e691a6",
          "publishedOn": "2023-05-11T14:06:33.000Z",
          "wordCount": 1954,
          "title": "Astropyで天文データ解析 [2] -convolution, filtering-",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P9y8-T81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astropy%25E3%2581%25A7%25E5%25A4%25A9%25E6%2596%2587%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A7%25A3%25E6%259E%2590%2520%255B2%255D%2520-convolution%252C%2520filtering-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:comet%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlMzVhMmU5YTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P9y8-T81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astropy%25E3%2581%25A7%25E5%25A4%25A9%25E6%2596%2587%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A7%25A3%25E6%259E%2590%2520%255B2%255D%2520-convolution%252C%2520filtering-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:comet%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlMzVhMmU5YTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/5f9f937272984c",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\n人工知能の注目分野「機械学習」について正確に理解すること。\n\n\n[!info]+ Subject\n\n機械学習プロジェクトに関わる全ての人\n機械学習を体系的に復習したい人 >- 機械学習を体系的に復習したい人\n\n\n\n[!abstract]+ Curriculum\n1.機械学習概論\n2.機械学習の流れ\n3.性能評価指標\n添削問題\n\n\n\n 機械学習概論\n\nディープラーニング：生物の神経細胞の構造を模倣したアルゴリズム「ニューラルネットワーク」の利用が主流で、現在最も高い精度が得やすい機械学習技術。\n強化学習：正解ラベルも大量のデータも必要としない...",
          "link": "https://zenn.dev/joel/articles/5f9f937272984c",
          "publishedOn": "2023-05-11T09:06:19.000Z",
          "wordCount": 458,
          "title": "[TIL] 機械学習概論",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8iY_HexZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E6%25A6%2582%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8iY_HexZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E6%25A6%2582%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/miwarin/articles/9d31448cfa7e7f",
          "author": "三輪晋",
          "description": "pyminizip · PyPI で日本語ファイル名を含めて ZIP を作成した場合 且つ その ZIP ファイルを Python 3.11 未満の ZipFile クラスで参照すると、ファイル名が文字化けします。それ以外の場合は問題ありません。まとめると以下のとおり:\n\n\n\n\nPython 3.11 未満でZIP参照\nPython 3.11 以上でZIP参照\n\n\n\n\npyminizipでZIP作成\n問題あり\n問題なし\n\n\nそれ以外でZIP作成\n問題なし\n問題なし\n\n\n\n\n 事例\nテキトーに日本語のファイル名を作成して\n% echo 'pyminizipで生成した' > pymin...",
          "link": "https://zenn.dev/miwarin/articles/9d31448cfa7e7f",
          "publishedOn": "2023-05-11T08:51:11.000Z",
          "wordCount": 4331,
          "title": "pyminizip で日本語ファイル名を含めて ZIP ファイルを作成したときは注意しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--S1ZRhfdj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyminizip%2520%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%2520ZIP%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AF%25E6%25B3%25A8%25E6%2584%258F%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2589%25E8%25BC%25AA%25E6%2599%258B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSW5MRWNyMWFDMmpKN1l5Y0M0SURQbWZ5dTJwRUk3b1pNRDJRcXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--S1ZRhfdj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyminizip%2520%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%2520ZIP%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AF%25E6%25B3%25A8%25E6%2584%258F%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2589%25E8%25BC%25AA%25E6%2599%258B%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puSW5MRWNyMWFDMmpKN1l5Y0M0SURQbWZ5dTJwRUk3b1pNRDJRcXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/92c36798182a7a",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\n一般社団法人データサイエンス協会がGitHubに公開した「データサイエンス100のノック（構造化データ加工編）」の問題演習を行うコースです。 このコースでは、行や列の操作、結合、アスペクト変換、四則演算などを学ぶことができます。\nビジネス現場での分析実務では、データのほとんどが構造化データです。構造化データを自由に加工・集計するスキルを磨き、データサイエンスの実践力を高めましょう。\n\n\n[!abstract]+ Curriculum\n1.列に対する操作\n2.行に対する操作\n3.結合\n4.縦横変換\n5.四捨五入演算\n6.正規化、非正規化\n7.ファイ...",
          "link": "https://zenn.dev/joel/articles/92c36798182a7a",
          "publishedOn": "2023-05-11T07:39:44.000Z",
          "wordCount": 4360,
          "title": "[TIL] データサイエンス100本ノック（構造化データ加工編）（初級）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6lAahwT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2588%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258A%25A0%25E5%25B7%25A5%25E7%25B7%25A8%25EF%25BC%2589%25EF%25BC%2588%25E5%2588%259D%25E7%25B4%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--6lAahwT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2588%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258A%25A0%25E5%25B7%25A5%25E7%25B7%25A8%25EF%25BC%2589%25EF%25BC%2588%25E5%2588%259D%25E7%25B4%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c6be983556aaae",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-222 A - Four Digits\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print('%04d' % n)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/c6be983556aaae",
          "publishedOn": "2023-05-11T04:18:36.000Z",
          "wordCount": 210,
          "title": "［AtCoder］ABC-222｜A - Four Digits",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_WRO3_1C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-222%25EF%25BD%259CA%2520-%2520Four%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_WRO3_1C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-222%25EF%25BD%259CA%2520-%2520Four%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/40f6ebd0104bcc",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-222 B - Failing Grade\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, p = getIntMap()\n    a = getIntList()\n    b = [i for i in a if i < p]\n\n    print(len(b))\n\n\nif __name__ == \"__mai...",
          "link": "https://zenn.dev/hyperdb/articles/40f6ebd0104bcc",
          "publishedOn": "2023-05-11T04:18:35.000Z",
          "wordCount": 321,
          "title": "［AtCoder］ABC-222｜B - Failing Grade",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AqHOqOEs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-222%25EF%25BD%259CB%2520-%2520Failing%2520Grade%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--AqHOqOEs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-222%25EF%25BD%259CB%2520-%2520Failing%2520Grade%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shiro_toy_box/articles/1a65c8a901e854",
          "author": "しろ",
          "description": "Pythonの標準ライブラリのosのos.environを利用します。\nos.environはPythonスクリプト内で環境変数の設定、確認、削除することができるものです。\n\n!\nOSの環境に影響を与えることはありません。\n\nなぜ、直接環境変数を設定をしないのか\n\nソフトの持ち運びができ、開発環境が1つにまとめることができる\n各OS（Windows、macOS、Linux）によって環境変数の設定の方法が異なるため\nOSの種類に関係なく同じ方法で環境変数を設定ができる\n\n\n!\nただし外部ソフトは各OSごとのものをインストールする必要がある\n\n\n 使い方\n\n パスが通っているか確認\n\nサン...",
          "link": "https://zenn.dev/shiro_toy_box/articles/1a65c8a901e854",
          "publishedOn": "2023-05-11T03:03:03.000Z",
          "wordCount": 578,
          "title": "OSに環境変数を設定せずに外部ソフトをPythonで利用する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4Qh8ZfM6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OS%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E5%25A4%2596%25E9%2583%25A8%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%2592Python%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4Qh8ZfM6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OS%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E5%25A4%2596%25E9%2583%25A8%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%2592Python%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joo_hashi/articles/e33e3eadf979ef",
          "author": "JboyHashimoto",
          "description": "色々ハマったので、メモしておく\nHerokuが有料化されたことになり、代替手段として、renderなるものが話題になっていて、デプロイするのをやってみました。しかし、デプロイに失敗して原因を調べてみたとこと、今回だとPythonならではのルールがあったみたいです。\n\n ソースコード\n最初は、main.pyでやってましたが、エラーの原因になるそうで、app.pyに変更しました。\n\napp.py\nfrom flask import Flask, request, json, jsonify\n\napp = Flask(__name__)\napp.config['JSON_AS_ASCII'...",
          "link": "https://zenn.dev/joo_hashi/articles/e33e3eadf979ef",
          "publishedOn": "2023-05-11T02:55:49.000Z",
          "wordCount": 969,
          "title": "renderなるものを使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FM9OY-FV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:render%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FM9OY-FV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:render%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/c55987e1d57bf0",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\nデータ可視化コースでは、Matplotlibを使ってデータを可視化する方法を学びます。折れ線グラフ、円グラフ、ヒストグラムなどの作成から3Dグラフの作成方法まで学びます。\n\n\n[!abstract]+ Curriculum\n1.データ可視化のための準備\n\n様々なグラフ\n乱数生成\n時系列データ\nデータの操作\n\n\nMatplotlibの使い方\n\n\n一種類のデータを可視化しよう\n複数のデータを可視化しよう 1\n複数のデータを可視化しよう 2\n\n\nいろいろなグラフを作ろう\n\n\n折れ線グラフ\n棒グラフ\nヒストグラム\n散布図\n円グラフ\n3Dグラフ\n添削問題\n...",
          "link": "https://zenn.dev/joel/articles/c55987e1d57bf0",
          "publishedOn": "2023-05-10T16:46:24.000Z",
          "wordCount": 5580,
          "title": "[TIL] ライブラリ「Matplotlib」基礎（可視化）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P-i4HM0b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CMatplotlib%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P-i4HM0b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CMatplotlib%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/339736cf136996",
          "author": "Joel Lee",
          "description": "本記事はAidemyの【新】ライブラリ「pandas」基礎（表計算）の講義ノートです。\n\n\n[!abstract]+ Curriculum\n\npandas とは\npandas の操作方法\n複数の DataFrame の利用\n\n\n添削問題\n\n\n\n\n Pandas とは\nテーブルデータを扱うことに特化したライブラリ。\n\n\n\n Pandas 操作\n\n データの読み書き\n#pd/リード #pd/セーブ\n\npd.read_csv() : sep, header, names, encodinng\npd.read_excel() : 'Sheet1'.\n.to_csv(˶´꒳˵), .to_exce...",
          "link": "https://zenn.dev/joel/articles/339736cf136996",
          "publishedOn": "2023-05-10T13:27:02.000Z",
          "wordCount": 6086,
          "title": "[TIL]【新】ライブラリ「pandas」基礎（表計算）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--H9WyoA5t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%25E3%2580%2590%25E6%2596%25B0%25E3%2580%2591%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258Cpandas%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E8%25A1%25A8%25E8%25A8%2588%25E7%25AE%2597%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--H9WyoA5t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%25E3%2580%2590%25E6%2596%25B0%25E3%2580%2591%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258Cpandas%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E8%25A1%25A8%25E8%25A8%2588%25E7%25AE%2597%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kthrlab_blog/articles/cbde0ff0aa6e7f",
          "author": "Junko Fujii",
          "description": "研究紹介\n吹奏楽やオーケストラなどの多人数演奏用の楽譜から、ピアノ連弾用の楽譜を生成するプログラムを紹介します。当研究室卒業生の島村さんが研究開発しました。\n\n合奏はオーケストラや吹奏楽など多人数で演奏するため、和音などの魅力がある一方で、演奏者や楽器、場所の確保など課題があり、気軽に楽しむことができません。一方、ピアノソロは一人で演奏できるため手軽ですが、演奏の厚みに限界があり、合奏の楽しみを味わうことができません。\n合奏とピアノソロの中間的な演奏形態の一つに「ピアノ連弾」があります。2人の演奏者と1台のピアノがあれば演奏が可能であり、合奏の楽しみを味わいつつも手軽に演奏ができます...",
          "link": "https://zenn.dev/kthrlab_blog/articles/cbde0ff0aa6e7f",
          "publishedOn": "2023-05-10T07:26:45.000Z",
          "wordCount": 278,
          "title": "吹奏楽の楽譜から、ピアノ連弾用の楽譜を作る話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---iAzp2B9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%25B9%25E5%25A5%258F%25E6%25A5%25BD%25E3%2581%25AE%25E6%25A5%25BD%25E8%25AD%259C%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2583%2594%25E3%2582%25A2%25E3%2583%258E%25E9%2580%25A3%25E5%25BC%25BE%25E7%2594%25A8%25E3%2581%25AE%25E6%25A5%25BD%25E8%25AD%259C%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Junko%2520Fujii%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNjZjOGM0ZTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s---iAzp2B9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%25B9%25E5%25A5%258F%25E6%25A5%25BD%25E3%2581%25AE%25E6%25A5%25BD%25E8%25AD%259C%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2583%2594%25E3%2582%25A2%25E3%2583%258E%25E9%2580%25A3%25E5%25BC%25BE%25E7%2594%25A8%25E3%2581%25AE%25E6%25A5%25BD%25E8%25AD%259C%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Junko%2520Fujii%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNjZjOGM0ZTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f70c0091460393",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-221 B - typo\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = list(getString())\n    t = list(getString())\n    x = []\n    y = []\n\n    for i in range(len(s) - 1):\n        if s[i] != t[i]:\n            x.append(s[i])\n            x.append(s[i + 1])\n            y.append(...",
          "link": "https://zenn.dev/hyperdb/articles/f70c0091460393",
          "publishedOn": "2023-05-10T05:47:27.000Z",
          "wordCount": 423,
          "title": "［AtCoder］ABC-221｜B - typo",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yb-UeFWp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-221%25EF%25BD%259CB%2520-%2520typo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--yb-UeFWp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-221%25EF%25BD%259CB%2520-%2520typo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/da8e0ad4e6c188",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-221 A - Seismic magnitude scales\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b = getIntMap()\n\n    print(32 ** (a - b))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/da8e0ad4e6c188",
          "publishedOn": "2023-05-10T05:47:27.000Z",
          "wordCount": 241,
          "title": "［AtCoder］ABC-221｜A - Seismic magnitude scales",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0f7wtNhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-221%25EF%25BD%259CA%2520-%2520Seismic%2520magnitude%2520scales%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0f7wtNhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-221%25EF%25BD%259CA%2520-%2520Seismic%2520magnitude%2520scales%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gkchop/articles/9fc05fd286d124",
          "author": "TangeDanpei",
          "description": "はじめに\nデータサイエンスにおいてしばしばデータの裏側で起こっている事象の解釈性が求められることがあります。ドメインの原理原則に則った数式をデータから推測することができたらドメインの理解や新たな知見を得ることに役立つだけでなく、原理原則という汎用性をモデル化できている可能性があるため外挿予測性の向上も期待できます。\nこの記事ではJuliaをバックエンドとしたPythonライブラリPySRをインストールするための手順を示します。\n\n元論文\nGithub\n\n\n 環境\n\nUbuntu 20.04.1\nPython 3.9.15\npysr 0.12.3\n\n\n 手順\n\n Juliaのインストー...",
          "link": "https://zenn.dev/gkchop/articles/9fc05fd286d124",
          "publishedOn": "2023-05-10T05:28:28.000Z",
          "wordCount": 900,
          "title": "シンボリック回帰向けPySRのインストール",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--c1I6KTto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0%25E5%2590%2591%25E3%2581%2591PySR%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TangeDanpei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYmI3ZmFjZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--c1I6KTto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0%25E5%2590%2591%25E3%2581%2591PySR%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TangeDanpei%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYmI3ZmFjZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kthrlab_blog/articles/2250b74ec16206",
          "author": "Justin Wulf",
          "description": "はじめに\nこの記事では、Streamlitで作成したwebアプリをDockerでコンテナを立てて動かすことを目標とします。\n尚、この記事は身内向けのチュートリアルなので若干いい加減に書いていますが、ご容赦ください。\n\n Dockerとは\n\nDockerは、コンテナ仮想化という技術を用いてアプリを開発・実行することが出来るプラットフォームです。開発したアプリをDockerを使ってコンテナ化すれば、別の環境でも同じように動作させることができます。\nDockerは2013年にDocker社から登場し、今ではVirtualBoxなどの仮想マシンなどに取って変わる仮想環境として世界中で利用され...",
          "link": "https://zenn.dev/kthrlab_blog/articles/2250b74ec16206",
          "publishedOn": "2023-05-10T05:19:47.000Z",
          "wordCount": 640,
          "title": "Dockerを使ってStreamlitのwebアプリを動かそう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dD9KkYEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Streamlit%25E3%2581%25AEweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Justin%2520Wulf%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YzlhYzUwNTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dD9KkYEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Streamlit%25E3%2581%25AEweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E5%258E%259F%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%25EF%25BC%2588%25E6%2597%25A5%25E6%259C%25AC%25E5%25A4%25A7%25E5%25AD%25A6%2520%25E6%2596%2587%25E7%2590%2586%25E5%25AD%25A6%25E9%2583%25A8%2520%25E6%2583%2585%25E5%25A0%25B1%25E7%25A7%2591%25E5%25AD%25A6%25E7%25A7%2591%25EF%25BC%2589%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Justin%2520Wulf%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YzlhYzUwNTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/b742c79462b6bc",
          "author": "Joel Lee",
          "description": "[!Important]+ Goals\n\n複数の値を持つタイプ、関数、クラスについて理解する。\n効果的なコードが記述できる\n\n\n\n[!abstract]+ Curriculum\n\nはじめに\n複数の値を持つタイプ\nリストタイプ\n辞書タイプ\nfor 文によるループ処理\nfor 文\nfor 文の応用例\n関数\n関数とは\n関数を作って理解しよう (独自関数) > 3.\n内蔵関数\nクラス\n1.クラス\n2.クラスを作って理解しよう\nよく使うメソッド\nライブラリ\n添削問題\n\n\n\n\n はじめに\n\n 複数の値を持つタイプ\n\n リストタイプ\n\ndel list[index] : 要素の削除\nlist....",
          "link": "https://zenn.dev/joel/articles/b742c79462b6bc",
          "publishedOn": "2023-05-09T15:00:50.000Z",
          "wordCount": 1458,
          "title": "[TIL] Python基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zBNJo1Vy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:%255BTIL%255D%2520Python%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--zBNJo1Vy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_68:%255BTIL%255D%2520Python%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/5ee50809a18ed5",
          "author": "Joel Lee",
          "description": "[!abstract]+ Curriculum\n\nNumPyとは\nデータ操作\nNumPyとメモリ\nNumpyによる統計解析\n今後の学習の進め方\n添削問題\n\n\n\n\n NumPyとは\n\nNumPy配列と四則演算\n\nブロードキャスト：演算前にNumPy配列の shape を合わせること。\n\n\nデータの読み込み : delimiter, skiprows, usecols\n\nimport numpy as np\n\narr_1 = np.loadtxt(\"./4002_new_numpy/csv_example.csv\",\n\t\t\t\t   delimiter=\",\", # 区切り文字をカンマに指定...",
          "link": "https://zenn.dev/joel/articles/5ee50809a18ed5",
          "publishedOn": "2023-05-09T14:47:51.000Z",
          "wordCount": 2497,
          "title": "[TIL] ライブラリ「NumPy」基礎（数値計算）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wZ-YSMGS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CNumPy%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E6%2595%25B0%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wZ-YSMGS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258CNumPy%25E3%2580%258D%25E5%259F%25BA%25E7%25A4%258E%25EF%25BC%2588%25E6%2595%25B0%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/timoneko/articles/7612a5972297b1",
          "author": "timoneko",
          "description": "下記のライブラリを利用してみます。\nhttps://github.com/boppreh/keyboard\npip install keyboard\n\n キーボードの押した内容を記録する。\n\nescapeを押すまで記録する。\nimport keyboard\n\nrecord_list = keyboard.record(until='escape')\n\nfor i in record_list:\n    print(i)\n\n\n実行結果\nKeyboardEvent(w down)\nKeyboardEvent(w up)\nKeyboardEvent(e down)\nKeyboardEvent(...",
          "link": "https://zenn.dev/timoneko/articles/7612a5972297b1",
          "publishedOn": "2023-05-09T14:17:35.000Z",
          "wordCount": 630,
          "title": "Pythonのライブラリで「お気に入りのショートカットキー作ってみる」",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KggDizfH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A7%25E3%2580%258C%25E3%2581%258A%25E6%25B0%2597%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258A%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%258D%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:timoneko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NjZlZGEzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KggDizfH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A7%25E3%2580%258C%25E3%2581%258A%25E6%25B0%2597%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258A%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%258D%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:timoneko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NjZlZGEzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sergicalsix/articles/34572ce4ec6ee4",
          "author": "sergicalsix",
          "description": "はじめに\npythonでよく使う辞書型について、様々な組み込みのメソッドや便利メソッドをまとめました。\nどれか一つでも役に立つものがあれば幸いです。\nカリキュラムは以下となっています。\n\n辞書への読み取り処理\n辞書への書き込み処理\n辞書の定義\n\n!\n取り扱わないもの: 辞書型に似たものたち namedtuple, dataclass\n\n\n 辞書への読み取り処理\n以下辞書はdとします。\n\n キー(key)とバリュー(value)の取得\n\n\nd.keys()\n全てのkeyが取得ができます。型はdict_keysです。\n\n特定の要素が辞書内にあるかどうかを確認する場合は、inを使って次のよ...",
          "link": "https://zenn.dev/sergicalsix/articles/34572ce4ec6ee4",
          "publishedOn": "2023-05-09T13:46:08.000Z",
          "wordCount": 1239,
          "title": "Pythonの辞書型を使いこなすための基本操作方法と応用テクニック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vO4FuXnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%25BF%259C%25E7%2594%25A8%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vO4FuXnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%25BF%259C%25E7%2594%25A8%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlODkyZDMzYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/bs_kansai/articles/a41961614c4b25",
          "author": "Kanon",
          "description": "Tl;DR\n\n\"good first issue\"があるということはコントリビュートの敷居を下げてくれているということ。\nスター数が多いということはそれだけ認知されているということで、コントリビュートが盛んに行われている可能性が高いということ。\nコントリビュートが盛んということは、ソースコードが洗練されている可能性が高いとこと。\n\nこの 3 つが言えるんじゃないかと考えました。\nそこで、この記事ではgoofiというツールを使って 10 個の言語の\"good first issue\"がありなおかつスター 500 以上ある GitHub リポジトリを 3 つずつ見ていきます。\nこれにより...",
          "link": "https://zenn.dev/bs_kansai/articles/a41961614c4b25",
          "publishedOn": "2023-05-09T10:33:44.000Z",
          "wordCount": 1698,
          "title": "goofiで見る👀色んな言語の知っておきたいOSSプロジェクト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MixY0NVq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:goofi%25E3%2581%25A7%25E8%25A6%258B%25E3%2582%258B%2520%25E8%2589%25B2%25E3%2582%2593%25E3%2581%25AA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584OSS%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:blessing%2520software%2520KANSAI%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNTBmZjE4OWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMRTR5OUhOc3hkUm9vWkVlUDBackFyU0NvWG51SlU4RkpjUHpYamc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MixY0NVq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:goofi%25E3%2581%25A7%25E8%25A6%258B%25E3%2582%258B%2520%25E8%2589%25B2%25E3%2582%2593%25E3%2581%25AA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584OSS%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:blessing%2520software%2520KANSAI%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNTBmZjE4OWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMRTR5OUhOc3hkUm9vWkVlUDBackFyU0NvWG51SlU4RkpjUHpYamc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e931f01e962d42",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-220 B - Base K\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringMap():\n    return input().split()\n\n\ndef main():\n    k = getInt()\n    a, b = getStringMap()\n\n    print(int(a, k) * int(b, k))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/e931f01e962d42",
          "publishedOn": "2023-05-09T04:28:48.000Z",
          "wordCount": 275,
          "title": "［AtCoder］ABC-220｜B - Base K",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3jNR8yto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-220%25EF%25BD%259CB%2520-%2520Base%2520K%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3jNR8yto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-220%25EF%25BD%259CB%2520-%2520Base%2520K%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/708c142a267424",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-220 A - Find Multiple\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    a, b, c = getIntMap()\n\n    d = a if a == c else (a // c + 1) * c\n\n    print(d if d <= b else -1)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/708c142a267424",
          "publishedOn": "2023-05-09T04:28:48.000Z",
          "wordCount": 294,
          "title": "［AtCoder］ABC-220｜A - Find Multiple",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YFW5uKag--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-220%25EF%25BD%259CA%2520-%2520Find%2520Multiple%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YFW5uKag--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-220%25EF%25BD%259CA%2520-%2520Find%2520Multiple%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/python-use-json",
          "author": "gk12",
          "description": "こんにちは。今回は、Pythonについて初心者エンジニアに向けて、JSONを扱う方法をご紹介します。\n\n JSONとは\nJSON(JavaScript Object Notation)は、データをクライアントとサーバーの間で簡単にやりとりするための形式です。JavaScriptで使用されるオブジェクトの記法を参考に、テキストベースの軽量な文書形式で記述されます。PythonでもJSONを扱うことができます。\n\n JSONの書式\nJSONは、以下のような書式で表現されます。\n{\n  \"name\": \"John\",\n  \"age\": 30,\n  \"city\": \"New York\"\n}\n上記...",
          "link": "https://zenn.dev/gk12/articles/python-use-json",
          "publishedOn": "2023-05-09T02:59:14.000Z",
          "wordCount": 368,
          "title": "PythonでJSONを扱う方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vai8IE7Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7JSON%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Vai8IE7Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7JSON%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/e1a3021cd263a7",
          "author": "shimo",
          "description": "以前書いた記事でも紹介したのですが、AWS services mappingという、AWSの各リージョンでどのサービスの対応しているかを随時更新しているAWS公式のページがあります。\nhttps://aws-new-features.s3.amazonaws.com/html/aws_services.html\n大阪リージョンでのサービス対応状況を東京リージョンと比較したかったので、このAWS services mappingからデータを取得して比較するスクリプトを作ってみました。\n\n Code\n\n\n Results\n2023/05/09の時点で、ap-northeast-1(東京)と ...",
          "link": "https://zenn.dev/shimo_s3/articles/e1a3021cd263a7",
          "publishedOn": "2023-05-08T22:32:39.000Z",
          "wordCount": 947,
          "title": "[小ネタ]AWS東京・大阪リージョンで使えるサービスを最新版で比較するPythonスクリプト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UgmO0MQp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255DAWS%25E6%259D%25B1%25E4%25BA%25AC%25E3%2583%25BB%25E5%25A4%25A7%25E9%2598%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UgmO0MQp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255DAWS%25E6%259D%25B1%25E4%25BA%25AC%25E3%2583%25BB%25E5%25A4%25A7%25E9%2598%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/climt/articles/create-stable-diffusion-webui-by-gradio",
          "author": "5HAL1N",
          "description": "はじめに\n株式会社CLIMTのshalinです。\n普段はAUTOMATIC1111/stable-diffusion-webuiを利用してStableDiffusionを実行させていただいてますが、最近どうも更新が遅くなってしまったりバグが増えてきたりと、ビジネス利用をする上で悩ましい点が増えてきました。\nせっかくOSSのstable diffusionなので、自分たちの要件にあったWebUIを作ってしまおうということで、Gradioを使って自作していこうと思います。\n\n 前提\n\npython3.9以降がインストールされている\npythonを最低限触ったことがある\n\n\n 環境構築\nま...",
          "link": "https://zenn.dev/climt/articles/create-stable-diffusion-webui-by-gradio",
          "publishedOn": "2023-05-08T11:28:51.000Z",
          "wordCount": 744,
          "title": "GradioでStableDiffusionのWebUIを自作してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OH9cCLv3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradio%25E3%2581%25A7StableDiffusion%25E3%2581%25AEWebUI%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CLIMT%2520Inc.%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:5HAL1N%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0YjUyMjY3YzMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkE2Q2dvVXdZWUxGek0tbUx3UktBUHd5T21YZE1SeFF1SXJ1SDU9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--OH9cCLv3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradio%25E3%2581%25A7StableDiffusion%25E3%2581%25AEWebUI%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CLIMT%2520Inc.%2520Tech%2520Blog%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:5HAL1N%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0YjUyMjY3YzMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkE2Q2dvVXdZWUxGek0tbUx3UktBUHd5T21YZE1SeFF1SXJ1SDU9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/f90f1ee7f3801f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-219 A - AtCoder Quiz 2\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    x = getInt()\n\n    print('expert' if x >= 90 else 90 - x if x >=\n          70 else 70 - x if x >= 40 else 40 - x)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/f90f1ee7f3801f",
          "publishedOn": "2023-05-08T10:45:57.000Z",
          "wordCount": 293,
          "title": "［AtCoder］ABC-219｜A - AtCoder Quiz 2",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--trh4C5_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-219%25EF%25BD%259CA%2520-%2520AtCoder%2520Quiz%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--trh4C5_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-219%25EF%25BD%259CA%2520-%2520AtCoder%2520Quiz%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/df58d7d0edd3a8",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-219 B - Maritozzo\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    s = getStringRow(3)\n    t = map(int, list(getString()))\n    u = []\n\n    for i in t:\n        u.append(s[i - 1])\n    print(\"\".join(u))\n\n\nif __...",
          "link": "https://zenn.dev/hyperdb/articles/df58d7d0edd3a8",
          "publishedOn": "2023-05-08T10:45:56.000Z",
          "wordCount": 324,
          "title": "［AtCoder］ABC-219｜B - Maritozzo",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SJdHmZyo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-219%25EF%25BD%259CB%2520-%2520Maritozzo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SJdHmZyo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-219%25EF%25BD%259CB%2520-%2520Maritozzo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/naiq112/articles/f57cc333ee8b3c",
          "author": "naiq112",
          "description": "Tableauが使えない状況だったのでTableauみたいな分析ツールを使いたく、いいものはないかと探したところ、PyGWalkerというツールを見つけました。\nStreamlitに対応していたので、ファイルのアップロードをドラッグ&ドロップで直感的に利用できるように実装してみました。\n\n PyGWalkerとは\nPyGWalkerは、pandasやpolarsのデータフレームをTableauスタイルのユーザインタフェースにてデータ分析・可視化をできるようにするツールです。\nTableauのオープンソースの代替品Graphic WalkerをPythonで実行できるようにしたもの...",
          "link": "https://zenn.dev/naiq112/articles/f57cc333ee8b3c",
          "publishedOn": "2023-05-08T10:10:45.000Z",
          "wordCount": 424,
          "title": "PyGWalkerをStreamlitで動作させてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2xy2xXS_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyGWalker%25E3%2582%2592Streamlit%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naiq112%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkZDA2YTFjMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2xy2xXS_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyGWalker%25E3%2582%2592Streamlit%25E3%2581%25A7%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naiq112%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkZDA2YTFjMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/syu_tan/articles/c331eee691749c",
          "author": "syu-tan",
          "description": "１歩目の衛星データの取得判読解析予測の基礎\n!\n\n衛星データの扱い方\n地理空間処理\nDeep Learning を利用したモデリング\nなどの一連の簡単な流れを紹介したいと思います。\n\n\n\n 概要\n!\n\n\n本編\n\n検証事象の紹介\n衛星の撮像検索\n衛星画像の取得\n事象の判読\n地理空間処理\n画像解析\n事象のモデリング\n予測の可視化\n山火事の影響\n\n\n\nおまけ\n\nきっかけ\nモチベーション\n作業処理フロー\n\n\n\n参考\n\n\n\n\n 本編\nよくやる簡単な衛星データの扱いや利用について記載しまーす！\n\n 検証事象の紹介\n\n今回は 山火事 を題材にします。\n特に、長野県諏訪市と茅野市の境にある霧ヶ峰高...",
          "link": "https://zenn.dev/syu_tan/articles/c331eee691749c",
          "publishedOn": "2023-05-08T05:43:43.000Z",
          "wordCount": 4484,
          "title": "１歩目の衛星データの取得判読解析予測の基礎",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vtXT6Dj---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2591%25E6%25AD%25A9%25E7%259B%25AE%25E3%2581%25AE%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%258F%2596%25E5%25BE%2597%25E5%2588%25A4%25E8%25AA%25AD%25E8%25A7%25A3%25E6%259E%2590%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syu-tan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXFuUnlFOVotSVJaaGFYTWk1eUY1TENDejN3QUpCRDNXZHBFSXRaUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vtXT6Dj---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2591%25E6%25AD%25A9%25E7%259B%25AE%25E3%2581%25AE%25E8%25A1%259B%25E6%2598%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%258F%2596%25E5%25BE%2597%25E5%2588%25A4%25E8%25AA%25AD%25E8%25A7%25A3%25E6%259E%2590%25E4%25BA%2588%25E6%25B8%25AC%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syu-tan%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXFuUnlFOVotSVJaaGFYTWk1eUY1TENDejN3QUpCRDNXZHBFSXRaUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kashira/articles/ad470ce26c5e79",
          "author": "kashira",
          "description": "はじめに\n開発・運用のコストを最小限にしつつDev・Staging・Prodをシームレスに切り替える設計思想としてVirtual Data Environments(データ環境の仮想化)という概念があるらしい。\nSQLMeshで実装されており、簡単に試すことが出来るので、どんな感じかさわってみた。\nhttps://sqlmesh.readthedocs.io/en/stable/\n\n Virtual Data Environments(データ環境の仮想化)\n\n TL;DR\nPhysical layerにデータのスナップショットを作成して、それをVirtual layerから参照するこ...",
          "link": "https://zenn.dev/kashira/articles/ad470ce26c5e79",
          "publishedOn": "2023-05-07T09:05:16.000Z",
          "wordCount": 1391,
          "title": "SQLMeshが提供するVirtual Data Environments(データ環境の仮想化)を体験してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--77AETMCa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLMesh%25E3%2581%258C%25E6%258F%2590%25E4%25BE%259B%25E3%2581%2599%25E3%2582%258BVirtual%2520Data%2520Environments%2528%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E5%258C%2596%2529%25E3%2582%2592%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kashira%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlZDBiNDVjOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--77AETMCa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLMesh%25E3%2581%258C%25E6%258F%2590%25E4%25BE%259B%25E3%2581%2599%25E3%2582%258BVirtual%2520Data%2520Environments%2528%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E5%258C%2596%2529%25E3%2582%2592%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kashira%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlZDBiNDVjOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hasegawasatoshi/articles/648f6c1035282b",
          "author": "Satoshi Hasegawa",
          "description": "FastAPI の使い方について学習してみました。とてもシンプルなフレームワークで、公式のチュートリアル も分かりやすかったのですが、最小限の機能を提供しているがゆえに、RDBMS へのアクセスまでやろうとすると、ORM は SQLAlchemy、マイグレーションは Alembic と、その辺の前提知識がないと理解しにくい部分があったので、備忘としてメモをしておきます。\n基本的にはチュートリアルの「 SQL (Relational) Databases 」の写経ですが、同じく、「Bigger Applications - Multiple Files 」を参考に、ファイル分割などをしてい...",
          "link": "https://zenn.dev/hasegawasatoshi/articles/648f6c1035282b",
          "publishedOn": "2023-05-07T08:28:23.000Z",
          "wordCount": 4565,
          "title": "FastAPI で CURD する。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mgNOxa0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2581%25A7%2520CURD%2520%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Satoshi%2520Hasegawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqazZTazNrOVFnWUh2elRDb3pSYWhsMEExd2hQYUhZN0RRc3F0cUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mgNOxa0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2581%25A7%2520CURD%2520%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Satoshi%2520Hasegawa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqazZTazNrOVFnWUh2elRDb3pSYWhsMEExd2hQYUhZN0RRc3F0cUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/555367ebe25196",
          "author": "osn_Lofi",
          "description": "以前、こちらの記事で、GoogleColaboratory（以下、Googleコラボといいます）上でStableDiffusionを実装する方法についてご紹介しました。\nhttps://zenn.dev/robes/articles/8ea32494d40f06\n正直、画像の精度はそれほど高くありませんでしたが、テキストを入れるだけで、AIが様々な画像を生成してくれることが大変驚きでした。\n時は過ぎ、今（2023年5月時点）のStableDiffusionは、画像の精度が、ほぼ写真と言っていいくらい、かなり高くなっています。\nまた、Googleコラボを操作することに変わりはないのですが、...",
          "link": "https://zenn.dev/robes/articles/555367ebe25196",
          "publishedOn": "2023-05-07T07:47:49.000Z",
          "wordCount": 293,
          "title": "【初心者でもできる】GoogleColaboratoryでStableDiffusionのWebUIを動かす",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--P9lPWeVG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2591GoogleColaboratory%25E3%2581%25A7StableDiffusion%25E3%2581%25AEWebUI%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--P9lPWeVG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2591GoogleColaboratory%25E3%2581%25A7StableDiffusion%25E3%2581%25AEWebUI%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yagiyuki/articles/load_pretrained",
          "author": "yagiyuki",
          "description": "Transformersの事前学習済みのモデルのロード処理で、こんなコードをよく見かけませんか?\nfrom transformers import HogeModel\nhoge_model = HogeModel.from_pretrained('hoge_model_name')\nHugging Face上のモデルロードのサンプルは、だいたい上のような実装になっています。\nこれまでなんとなく使っていましたが、少し詳しく挙動を知りたいと思い調査したので、まとめておきます。\nまた、上記のコードをそのまま実運用システムへ組み込むのにもリスクを感じたので、そのあたりも書いておきます。\n\n 'f...",
          "link": "https://zenn.dev/yagiyuki/articles/load_pretrained",
          "publishedOn": "2023-05-07T07:12:59.000Z",
          "wordCount": 420,
          "title": "Transformersの'from_pretrained'の使い方とリスクを考察",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eP_qGgjB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformers%25E3%2581%25AE%2527from_pretrained%2527%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eP_qGgjB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformers%25E3%2581%25AE%2527from_pretrained%2527%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kymok/articles/593ccf5eb56385",
          "author": "kymok",
          "description": "概要\n本稿では， Poisson Image Editing (Perez et al., 2003) を Python で実装してみます．ヤコビ法で高解像度画像を処理すると時間がかかるところ，あらかじめ画像ピラミッドを作成して低解像度側から順に処理することで処理時間を短縮できました．\n考え方はマルチグリッド法と似ているところもあります（マルチグリッド法のほうが洗練されています）が，少しの書き換えだけで実装できるので，小難しいことを考えたくないときには便利です．\n\n 方法\n\n Poisson Image Editing\nPoisson Image Editing (Perez et ...",
          "link": "https://zenn.dev/kymok/articles/593ccf5eb56385",
          "publishedOn": "2023-05-07T05:20:58.000Z",
          "wordCount": 2204,
          "title": "Poisson Image Editing を画像ピラミッドで高速化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TK6Sypa8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poisson%2520Image%2520Editing%2520%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2594%25E3%2583%25A9%25E3%2583%259F%25E3%2583%2583%25E3%2583%2589%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kymok%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZTRiZTU5NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TK6Sypa8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poisson%2520Image%2520Editing%2520%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2594%25E3%2583%25A9%25E3%2583%259F%25E3%2583%2583%25E3%2583%2589%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kymok%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZTRiZTU5NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/turing_motors/articles/8b9a2c4d3e8882",
          "author": "ymg_aq",
          "description": "はじめに\nPythonは世界的にも人気のあるプログラミング言語ですが、実行速度については課題があります。Pythonの実行速度を高速化したい、という要求は根強く、これまでにも様々な処理系が開発されています。\nこの記事はPythonで書かれたコードを35000倍に高速化するにはどのような方法があるかについてまとめたものです。\nこの記事は：\n\nPythonで書かれたアルゴリズムを35000倍に高速化する\n事前コンパイル、並列化、SIMD演算を駆使する\n最終的に44000倍まで高速化できた\n\n\n なぜ35000倍？\n2023年5月2日にModular社よりPythonの使いやすさとC言語...",
          "link": "https://zenn.dev/turing_motors/articles/8b9a2c4d3e8882",
          "publishedOn": "2023-05-07T05:00:00.000Z",
          "wordCount": 6340,
          "title": "Pythonコードを35000倍に高速化したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4IewifRZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%259235000%25E5%2580%258D%25E3%2581%25AB%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ymg_aq%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NmMwZTUwYzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--4IewifRZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%259235000%25E5%2580%258D%25E3%2581%25AB%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:ymg_aq%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjYyMDc4ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NmMwZTUwYzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/tasada038/articles/f2f5b500cdc36a",
          "author": "Takumi Asada",
          "description": "海洋ロボコンをやってた人です。\n今回は久しぶりにPythonでROS 2 パッケージ ping_sonar_ros を作成したので、その備忘録として記載していきます。\nなぜまとめるかは以下です。\n\nC++で慣れるとPython ROS 2の書き方忘れるため\nsetup.pyとCMakeLists.txtで(インポートなどの)各依存関係の書き方が違うため（ここ大切）\n\nまた、本記事に対するコメントも積極的に募集しますので、よろしくお願いいたします。\n\n ROS 2 Pythonパッケージ作成のチップス\nROS 2 Pythonの基本は以下です。\n\nパッケージの作成\n\ncd ~/dev_ws...",
          "link": "https://zenn.dev/tasada038/articles/f2f5b500cdc36a",
          "publishedOn": "2023-05-07T04:24:11.000Z",
          "wordCount": 1416,
          "title": "ROS 2 : Pythonでパッケージ作成するときのチップス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ekdpDtsb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ROS%25202%2520%253A%2520Python%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2581%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Asada%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS02UlRlclRjeFNkX3dsSDk4WE1LY1dHNDJ3b2ZoR1ZmUWNDdVhlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ekdpDtsb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ROS%25202%2520%253A%2520Python%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2581%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Asada%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS02UlRlclRjeFNkX3dsSDk4WE1LY1dHNDJ3b2ZoR1ZmUWNDdVhlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tanny/articles/4820776f992d2f",
          "author": "Tanny",
          "description": "はじめに\nソフトウェアアーキテクチャーの一種として、クリーンアーキテクチャがあります。クリーンアーキテクチャは、Robert C. Martin氏（「ボブおじさん」と呼ばれているらしい）が提唱したもので、以下のブログの説明が有名なようです。\nhttps://blog.tai2.net/the_clean_architecture.html\n私もこのブログの内容をざっと読んでみたのですが、具体的にはどんな実装になるのかがさっぱりわかりませんでした😇。そこで、いつも利用しているPythonでの実装例を探してみたところ、「Clean Architectures in Python」という英...",
          "link": "https://zenn.dev/tanny/articles/4820776f992d2f",
          "publishedOn": "2023-05-07T03:02:38.000Z",
          "wordCount": 3431,
          "title": "「Clean Architectures in Python」を読み解いてクリーンアーキテクチャを具体的に理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yqh7JMig--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CClean%2520Architectures%2520in%2520Python%25E3%2580%258D%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E5%2585%25B7%25E4%25BD%2593%25E7%259A%2584%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yqh7JMig--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CClean%2520Architectures%2520in%2520Python%25E3%2580%258D%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E5%2585%25B7%25E4%25BD%2593%25E7%259A%2584%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tanny%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1OGU0Njc0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/watarungurunnn/articles/738c63c55a62cc",
          "author": "watarungurunnn",
          "description": "tensorflow2.xでModel.predictを実行するたびにメモリ使用量がもりもり増えていく現象が観測されている。\nまず思いつくのはgc.collect()であるが、今回はこれが効かない。\n参考: https://github.com/keras-team/keras/issues/13118\n\n 1. Sequential APIの場合\nまず、提案されている解決法がModel.predict_on_batch()を用いる方法。\nfor x in dataset:\n    y_pred = model.predct_on_batch(x)\n\n 2. Functional API...",
          "link": "https://zenn.dev/watarungurunnn/articles/738c63c55a62cc",
          "publishedOn": "2023-05-06T18:25:11.000Z",
          "wordCount": 134,
          "title": "tensorflow2.xで推論中、メモリ使用量がどんどん増えていく事象への対処",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jpgKPrXe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tensorflow2.x%25E3%2581%25A7%25E6%258E%25A8%25E8%25AB%2596%25E4%25B8%25AD%25E3%2580%2581%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E9%2587%258F%25E3%2581%258C%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25A9%25E3%2582%2593%25E5%25A2%2597%25E3%2581%2588%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%25E4%25BA%258B%25E8%25B1%25A1%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jpgKPrXe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tensorflow2.x%25E3%2581%25A7%25E6%258E%25A8%25E8%25AB%2596%25E4%25B8%25AD%25E3%2580%2581%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E9%2587%258F%25E3%2581%258C%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25A9%25E3%2582%2593%25E5%25A2%2597%25E3%2581%2588%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%25E4%25BA%258B%25E8%25B1%25A1%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarungurunnn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JBR185eWVBY1o2VTJIUEFObk5acmtqc0ZhaXpUWVVaWTUwQVpoWFVjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/fa0013f71d04f2",
          "author": "seiyakitazume",
          "description": "text_splitterを使うと、長い文章を分割してくれます。\n以下のように数行のコードで使うことできます。\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ntexts = text_splitter.split_documents(documents)\n上記のRecursiveCharacterTextSplitterは、文字単位でテキスト...",
          "link": "https://zenn.dev/seiyakitazume/articles/fa0013f71d04f2",
          "publishedOn": "2023-05-06T17:33:56.000Z",
          "wordCount": 140,
          "title": "LangChainのtext_splitterについて軽く調べた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--glwHE27l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2581%25AEtext_splitter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25BB%25BD%25E3%2581%258F%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--glwHE27l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2581%25AEtext_splitter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25BB%25BD%25E3%2581%258F%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sugasuga/articles/18a8f352025e3c",
          "author": "sugasuga",
          "description": "ベクトルのフィルタ機能\n前回の記事にて、Matching Engineを触ってみました。\nhttps://zenn.dev/articles/2bdde4e7169eed\n実際に使う場合は、特定のデータにフィルタした上で、近傍探索をしたい場合があると思います。\n例えば、公開・非公開状態の記事がある中で、公開されている記事のみでベクトル検索を行い関連する記事のデータを取得したい場合などです。事前のフィルタができないと、ベクトル検索結果後にフィルタされ十分な検索結果が残らなかったりする可能性があります。\nElasticSearchは事前のフィルタ機能があります。faissは記事執筆時点の...",
          "link": "https://zenn.dev/sugasuga/articles/18a8f352025e3c",
          "publishedOn": "2023-05-06T17:28:39.000Z",
          "wordCount": 604,
          "title": "Vertex AI Matching Engineでフィルタ機能を使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L069u7rT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Matching%2520Engine%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--L069u7rT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Matching%2520Engine%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/117048f486f707",
          "author": "seiyakitazume",
          "description": "ChromaDBは、文書の埋め込みデータを格納・管理し、文書間の類似性を効率的に検索できるデータベースです。\nLangChainからも使え、以下のコードのように数行のコードでChromaDBの中にembeddingしたPDFやワードなどの文章データを格納することが出来ます。\nfrom langchain.vectorstores import Chroma\ntexts = text_splitter.split_documents(documents)\nembeddings = OpenAIEmbeddings()\nvectordb = Chroma.from_documents(tex...",
          "link": "https://zenn.dev/seiyakitazume/articles/117048f486f707",
          "publishedOn": "2023-05-06T17:22:52.000Z",
          "wordCount": 159,
          "title": "【LangChain】chromadbを使ってローカルの文章(PDF・ワード)をembeddingした上で格納する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xQGPA7wv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591chromadb%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AE%25E6%2596%2587%25E7%25AB%25A0%2528PDF%25E3%2583%25BB%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%2529%25E3%2582%2592embedding%25E3%2581%2597%25E3%2581%259F%25E4%25B8%258A%25E3%2581%25A7%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xQGPA7wv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591chromadb%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AE%25E6%2596%2587%25E7%25AB%25A0%2528PDF%25E3%2583%25BB%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%2529%25E3%2582%2592embedding%25E3%2581%2597%25E3%2581%259F%25E4%25B8%258A%25E3%2581%25A7%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/derwind/articles/dwd-qft-numpy",
          "author": "derwind",
          "description": "目的\nQiskit textbook の 量子フーリエ変換 を見ると、Bloch 球上のアニメーションが掲載されている。そう言えば以前に勉強した時は「ふ〜ん」で流した気がするので、少し真面目に見てみようという企画。\n\n 量子フーリエ変換とは？\n量子コンピュータの色々な FTQC アルゴリズム、例えば量子位相推定や Shor のアルゴリズムで利用されるモジュールである。形式的には、古典的な離散フーリエ変換と対をなす形で定義される。\n\n 離散フーリエ変換\nN \\in \\N に対し x を [0, 1, \\cdots, N-1] 上の函数とし、x_j = x(j),\\ j \\in [0, ...",
          "link": "https://zenn.dev/derwind/articles/dwd-qft-numpy",
          "publishedOn": "2023-05-06T12:32:04.000Z",
          "wordCount": 2437,
          "title": "量子フーリエ変換を眺める",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eeDoaw1E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258F%25E5%25AD%2590%25E3%2583%2595%25E3%2583%25BC%25E3%2583%25AA%25E3%2582%25A8%25E5%25A4%2589%25E6%258F%259B%25E3%2582%2592%25E7%259C%25BA%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eeDoaw1E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258F%25E5%25AD%2590%25E3%2583%2595%25E3%2583%25BC%25E3%2583%25AA%25E3%2582%25A8%25E5%25A4%2589%25E6%258F%259B%25E3%2582%2592%25E7%259C%25BA%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/stranglehello/articles/d7567ac87c2d0b",
          "author": "stranglehello",
          "description": "はじめに\n\nこの記事は前回のこちらからのちょっとした派生です\n良かったら先に目を通していただければ嬉しいです😁\n\n\n 今回の利用するサービス\n\n\nSnowflake(DWH)\n\n少し前にpreviewになったPythonのワークシートをメインに使います\n\n\n\ntrocco\n\n前回と同じくデータを取得する部分とワークフローで呼び出す部分を担当します\n前回の記事からのUpdateとしてはFreeプランが登場しており、今回はFreeで使える範囲で対応できます\n\n\n\n\n 対応内容\n\nこちら前回と同じでtitanic問題での利用を想定してみます！（変わり映えがなくてすみません、、）\n\n\n さっ...",
          "link": "https://zenn.dev/stranglehello/articles/d7567ac87c2d0b",
          "publishedOn": "2023-05-06T12:03:35.000Z",
          "wordCount": 559,
          "title": "troccoで簡易MLOpsをまわしてみる2（Snowflake ver）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Zh0vvQw7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:trocco%25E3%2581%25A7%25E7%25B0%25A1%25E6%2598%2593MLOps%25E3%2582%2592%25E3%2581%25BE%25E3%2582%258F%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B2%25EF%25BC%2588Snowflake%2520ver%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stranglehello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNjcyNDhkMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Zh0vvQw7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:trocco%25E3%2581%25A7%25E7%25B0%25A1%25E6%2598%2593MLOps%25E3%2582%2592%25E3%2581%25BE%25E3%2582%258F%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B2%25EF%25BC%2588Snowflake%2520ver%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stranglehello%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNjcyNDhkMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/t_o_d/articles/d3b2ba62989a27",
          "author": "t_o_d",
          "description": "先日OpenAIからテキストや画像の入力から3Dアセットを生成するShap-Eが発表されました。\nそこでGoogle Colaboratoryを利用してShap-Eを試した方法を記録いたします。\n\n\n 結論\n\n本記事の手順で以下のように「テキストを指定して3Dアセットの作成」がColaboratory上で試すことが可能です。\n\n\n\n 準備\n\n実行環境を整えるため、Google Colaboratory上にGPU(T4)環境を作成します。\n\n※詳細な作成方法はこちらを参考にしてください。\n\n\n\n\n\n\n\n 手順\n\n リポジトリ取得\n\n実行環境の作成後、以下を実行してShap-Eのソースコー...",
          "link": "https://zenn.dev/t_o_d/articles/d3b2ba62989a27",
          "publishedOn": "2023-05-06T10:47:26.000Z",
          "wordCount": 1187,
          "title": "テキストから3Dアセットを生成するShap-EをColaboratoryで試用",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sR1pDCD2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%25893D%25E3%2582%25A2%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BShap-E%25E3%2582%2592Colaboratory%25E3%2581%25A7%25E8%25A9%25A6%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_o_d%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYzIwYTUyNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sR1pDCD2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%25893D%25E3%2582%25A2%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BShap-E%25E3%2582%2592Colaboratory%25E3%2581%25A7%25E8%25A9%25A6%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_o_d%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYzIwYTUyNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/a7d18b4861f550",
          "author": "Joel Lee",
          "description": "ノート\n本記事は、Kikagakuの無料講座「Python&機械学習入門」の講義ノートの第2回目です。\n以下のリストは当該講座のカリキュラムで、本ノートは「8.導入」から「11.単回帰分析の実装」までの内容を簡単にまとめたものです。\n\nCurriculum (401/548)\n1.導入 (42 min)\n2.微分 (49 min)\n3.線形代数 (55 min)\n4.単回帰分析 (52 min)\n5.重回帰分析 (56 min)\n6.Python属性講義 (101 min)\n7.単回帰分析の実装 (51 min)\n\n\n\n8.重回帰分析の実装 (27 min)\n9. 練習問題 ...",
          "link": "https://zenn.dev/joel/articles/a7d18b4861f550",
          "publishedOn": "2023-05-06T10:06:02.000Z",
          "wordCount": 1725,
          "title": "[TIL] Python&機械学習入門2(完)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SAFteeX8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520Python%2526%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%25802%2528%25E5%25AE%258C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SAFteeX8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520Python%2526%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%25802%2528%25E5%25AE%258C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/a7d5c8253c9ad5",
          "author": "hodakam",
          "description": "datatableに画像を挿入する方法\nDashという簡単にデータ分析のためのダッシュボードが作れるライブラリがあります。Dashの中にはdatatableという便利なライブラリがあり、これを利用することでソートやページング、フィルターなどのテーブル形式のデータでよく用いられる機能を非常に簡単に実装することができます。\n実際にダッシュボードを作成する場合、フィールドとして数値や文字列だけでなく画像やファイルへのリンクなどを使いたくなることがあります。Dashのdatatableにこれらのオブジェクトを埋め込むには実はそれなりに工夫が必要です。\n\n 実現方法1：html.ImgでImg...",
          "link": "https://zenn.dev/hodakam/articles/a7d5c8253c9ad5",
          "publishedOn": "2023-05-06T09:33:07.000Z",
          "wordCount": 694,
          "title": "Dashのdatatableに画像を挿入する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mB1SQEC5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dash%25E3%2581%25AEdatatable%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mB1SQEC5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dash%25E3%2581%25AEdatatable%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/lud/articles/616777396e54a2",
          "author": "t_nakatani",
          "description": "この記事では，ZetaChain(testnet)上に実装されたUniswapにPythonでアクセスしてswapする方法を紹介します．\n環境はjupyterlabを想定しています．\n\n 解説\nprivateな情報は.envファイルから環境変数として読み込みます．\nADDRESS=0x...\nPRIVATE_KEY=0x...\n%load_ext dotenv\n%dotenv .env -o -v\n\n 各種設定\nZetaChain上のtokenアドレス等を設定します．(公式リンク)\nfrom web3 import Web3, HTTPProvider\nimport json, os, ...",
          "link": "https://zenn.dev/lud/articles/616777396e54a2",
          "publishedOn": "2023-05-06T07:57:33.000Z",
          "wordCount": 1420,
          "title": "【Python】ZetaChain上のuniswapでswap",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qrg_0zoJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591ZetaChain%25E4%25B8%258A%25E3%2581%25AEuniswap%25E3%2581%25A7swap%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_nakatani%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkNzQyN2QyNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qrg_0zoJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591ZetaChain%25E4%25B8%258A%25E3%2581%25AEuniswap%25E3%2581%25A7swap%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_nakatani%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkNzQyN2QyNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sho7650/articles/b05b3afc3dda31",
          "author": "しょっさん",
          "description": "Raspberry PiにCO2モニター CO2-mini | 自然環境測定器 - 製品情報 - 計測器のカスタムと、PM2.5などをチェックするセンサーをつけて、部屋の中の空気を管理しています。主にCO2やPM2.5を気にしてます。\n今回それは置いといて。\nこれらを制御するためにPythonのライブラリを使っています。しばらく放置しすぎたために、pipでインストールするライブラリ群が古くなっていたので、今回いきおいあまってアップデートしてみたら、非常に大変で萎えたことを報告します。\n\n いっぺんに更新ができない\nbundle updateとかnpm updateをしたかっただけですが、...",
          "link": "https://zenn.dev/sho7650/articles/b05b3afc3dda31",
          "publishedOn": "2023-05-06T01:06:32.000Z",
          "wordCount": 275,
          "title": "pip ライブラリを一括更新したかった",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iKWbVu-a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pip%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%25A3%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pHRTNxaV82OWc4eWtDWE9UVzY3SjliUWpKS1UtN05RNzRkRUdpZmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--iKWbVu-a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pip%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%25A3%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pHRTNxaV82OWc4eWtDWE9UVzY3SjliUWpKS1UtN05RNzRkRUdpZmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/d4a11404320a07",
          "author": "seiyakitazume",
          "description": "データの準備\nfrom langchain import OpenAI, PromptTemplate, LLMChain\nfrom langchain.chains.mapreduce import MapReduceChain\nfrom langchain.prompts import PromptTemplate\n\n# 要約に使用したいモデルを定義\nllm = OpenAI(temperature=0)\n\nlong_text = \"(要約したい長文)\"\n\nfrom langchain.text_splitter import CharacterTextSplitter\n# 長文...",
          "link": "https://zenn.dev/seiyakitazume/articles/d4a11404320a07",
          "publishedOn": "2023-05-05T16:31:40.000Z",
          "wordCount": 744,
          "title": "LangChainを使った文章の要約方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Fa4KBSn1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%2584%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Fa4KBSn1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%2584%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/joel/articles/080cbd42c66cef",
          "author": "Joel Lee",
          "description": "Notes\n本記事は、Kikagaku の無料講座「Python&機械学習入門」の講義ノートの最初のノートです。\n以下のリストは当該講座のカリキュラムであり、本ノートは「1.導入」から「7.単回帰分析の実装」までの内容を簡単にまとめたものです。\n\nCurriculum (401/548) > **Curriculum (401/548)\n1.導入 (42 min)\n2. 微分 (49 min)\n3.線形代数 (55 min)\n4.単回帰分析 (52 min) > 5.重回帰分析 (56 min)\n5.重回帰分析 (56 min) > 6.\n6.Python ...",
          "link": "https://zenn.dev/joel/articles/080cbd42c66cef",
          "publishedOn": "2023-05-05T16:06:49.000Z",
          "wordCount": 1820,
          "title": "[TIL] Python&機械学習入門1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eU2RvUKV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520Python%2526%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%25801%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eU2RvUKV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTIL%255D%2520Python%2526%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E5%2585%25A5%25E9%2596%25801%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Joel%2520Lee%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1N2YxOTA5Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sugasuga/articles/2bdde4e7169eed",
          "author": "sugasuga",
          "description": "この記事について\nGCPにはVertex AI Matching Engineという低レイテンシで近似最近傍探索を行なってくれるサービスがあります。レコメンドや検索に活用できそうなので気になっており、実際に使ってみました。\n2023/05月の時点だと情報が少なく、いろんな事にハマったので記録として残しておきます。\n\n 構築する際の選択肢\n\n ネットワーク関連\n\n\nvpc peeringをして繋ぐ方法\n\n\npublic endpointという方法 (2023/05時点でプレビュー)\n\n\nprivate service connectという方法 (2023/05時点でプレビュー)\n\n\nの...",
          "link": "https://zenn.dev/sugasuga/articles/2bdde4e7169eed",
          "publishedOn": "2023-05-05T15:55:15.000Z",
          "wordCount": 1414,
          "title": "Vertex AI Matching Engineを試す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yxqc6y_w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Matching%2520Engine%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yxqc6y_w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Matching%2520Engine%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ovrsa/articles/4db3a7f206616b",
          "author": "ovrsa",
          "description": "はじめに: AWS Lambda, Python, Dockerを使用した開発の効果\n近年、クラウドコンピューティングが益々普及し、アプリケーション開発においても効率的かつ柔軟な方法が求められています。その中で、AWS Lambda、Python、およびDockerは、開発者にとって非常に有用な技術として注目されています。\nAWS Lambdaは、サーバーレスコンピューティングサービスであり、コードの実行とスケーリングを自動的に行います。これにより、開発者はインフラ管理の負担を軽減し、コードの開発に集中できます。\nPythonは、読みやすく、書きやすいプログラミング言語であり、多くの...",
          "link": "https://zenn.dev/ovrsa/articles/4db3a7f206616b",
          "publishedOn": "2023-05-05T15:53:42.000Z",
          "wordCount": 538,
          "title": "AWS Lambda、Python、Dockerを活用する実践的なチュートリアル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--epryDDN4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Lambda%25E3%2580%2581Python%25E3%2580%2581Docker%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25AE%259F%25E8%25B7%25B5%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--epryDDN4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Lambda%25E3%2580%2581Python%25E3%2580%2581Docker%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25AE%259F%25E8%25B7%25B5%25E7%259A%2584%25E3%2581%25AA%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ovrsa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZT2h0N3VkNWwzcml5eUJuZ2t6U3k2QnYzNnRBYkJJRUtUcDZUa3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojyo21/articles/e32246f626e67b",
          "author": "okojyo21",
          "description": "Web アプリのバックエンドに、なぜ Python を選んだのか？\nアプリケーションの動作環境・開発環境を決めるのに、言語や方式の選定は重要です。\n本来であれば、私自身はマイクロソフトの技術で育ってきたこともあり、C#ならびに、ASP.Net Core という組み合わせで Web アプリケーションを作成していきたいところでした。\nが、社内アプリケーション開発環境において、用意された資源の中に、Windows または Linux サーバーを利用するという選択肢がなく、IBM 系のサーバーしか選択することができない状況にありました。\nまた、基幹システムが登録されているオフコンをインターネ...",
          "link": "https://zenn.dev/okojyo21/articles/e32246f626e67b",
          "publishedOn": "2023-05-05T15:41:49.000Z",
          "wordCount": 366,
          "title": "クラサバアプリ脳で Webアプリを学ぶ(vue + python) ４０代後半　のメモ その5 バックエンドにPythonを選んだ理由",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qmhxu0I5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE5%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25ABPy...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qmhxu0I5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE5%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25ABPy...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/okojyo21/articles/19557a0118e8fc",
          "author": "okojyo21",
          "description": "Webアプリ開発の重要性を痛感・・\nいきなりですが、何をあたりまえな！という人もいるかと思いますが、世の中には全くWebアプリケーション開発に触れずにシステム屋さんをしている人たちもいます。\nしかしながら、Zennの投稿記事を見ていても、主要なキーワードは、TypeScript フロントエンド　など モバイルまたはWebアプリに関するキーワードが並んでいることを考えても、近年のアプリケーション開発において、何らかの形でWebアプリケーションに携わっている人が多いことが伺えます。\nまた、よくポートメッセ（住んでいるところがバレますね・・）などのIT系やメーカー企業の製品展示会（RX J...",
          "link": "https://zenn.dev/okojyo21/articles/19557a0118e8fc",
          "publishedOn": "2023-05-05T15:41:47.000Z",
          "wordCount": 349,
          "title": "クラサバアプリ脳で Webアプリを学ぶ(vue.js + python) ４０代後半　のメモ その１",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2DSwzcmy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue.js%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2DSwzcmy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E8%2584%25B3%25E3%2581%25A7%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2528vue.js%2520%252B%2520python%2529%2520%25EF%25BC%2594%25EF%25BC%2590%25E4%25BB%25A3%25E5%25BE%258C%25E5%258D%258A%25E3%2580%2580%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okojyo21%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Njk5ODhhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koujimachi2023/articles/b70ddeee91f3fb",
          "author": "おいしい",
          "description": "モデル公開しました\n以下のサイトでモデル公開中です。\n君だけのオリジナル怪文書を生成しよう！\nhttps://huggingface.co/spaces/Oishiyo/zupposhi-maker\n\n Hightlights\n\nhuggingface + streamlitで自作AIアプリをデプロイ\nかんたん！😁\n\n\n 初めに\n\n 今回の目的\nプログラミングの成果物を公表する方法としては\n\nGitHubに上げる\nPyinstallerなどでexeに固めて配布する\nHeroku、Render、GCP、AWSなどのPaaS(またはPaaSを含むサービス)を使って公開する\nなどの方法があ...",
          "link": "https://zenn.dev/koujimachi2023/articles/b70ddeee91f3fb",
          "publishedOn": "2023-05-05T14:02:56.000Z",
          "wordCount": 2830,
          "title": "イナババ怪文書生成AIをHugging Face Spaces + Streamlitでデプロイした",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1ebxTGKN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%2592Hugging%2520Face%2520Spaces%2520%252B%2520Streamlit%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1ebxTGKN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%2592Hugging%2520Face%2520Spaces%2520%252B%2520Streamlit%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/gk12/articles/chatgpt-use-api-python",
          "author": "gk12",
          "description": "こんにちは。今回は、ChatGPTについて初心者エンジニアに向けて、PythonでChatGPT APIを使って自然言語処理をする方法について紹介します。\n\n はじめに\nChatGPTは、OpenAIが開発した自然言語処理の技術です。ChatGPT APIは、このChatGPTを利用したAPIであり、開発者が簡単に自然言語処理を組み込むことができます。Pythonは、ChatGPT APIを使った自然言語処理を行うために最適なプログラミング言語の1つです。この記事では、PythonでChatGPT APIを使って自然言語処理をする方法について説明します。\n\n ChatGPT APIの準備...",
          "link": "https://zenn.dev/gk12/articles/chatgpt-use-api-python",
          "publishedOn": "2023-05-05T12:41:41.000Z",
          "wordCount": 447,
          "title": "PythonでChatGPT APIを使って自然言語処理をする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tlXplobN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7ChatGPT%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tlXplobN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7ChatGPT%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gk12%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2prWVpxM3E3NlBxVkRzQ21NMWlpS0ZrRjJqU0pPWDdXOTdUcnBEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mnonamer/articles/poetry-install-sslerror",
          "author": "名無し。",
          "description": "始めに\n  MaxRetryError\n\n  HTTPSConnectionPool(host='github.com', port=443): Max retries exceeded with url: /user/repo/info/refs?service=git-upload-pack (Caused by SSLError(FileNotFoundError(2, 'No such file or directory')))\n\n  at .venv\\Lib\\site-packages\\urllib3\\util\\retry.py:592 in increment\n     ...",
          "link": "https://zenn.dev/mnonamer/articles/poetry-install-sslerror",
          "publishedOn": "2023-05-05T10:50:04.000Z",
          "wordCount": 186,
          "title": "Windowsでのpoetry installがSSLErrorで落ちる人へ向けて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_iqK3zFC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25A7%25E3%2581%25AEpoetry%2520install%25E3%2581%258CSSLError%25E3%2581%25A7%25E8%2590%25BD%25E3%2581%25A1%25E3%2582%258B%25E4%25BA%25BA%25E3%2581%25B8%25E5%2590%2591%25E3%2581%2591%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2590%258D%25E7%2584%25A1%25E3%2581%2597%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1MmE0YTk1ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_iqK3zFC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25A7%25E3%2581%25AEpoetry%2520install%25E3%2581%258CSSLError%25E3%2581%25A7%25E8%2590%25BD%25E3%2581%25A1%25E3%2582%258B%25E4%25BA%25BA%25E3%2581%25B8%25E5%2590%2591%25E3%2581%2591%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2590%258D%25E7%2584%25A1%25E3%2581%2597%25E3%2580%2582%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1MmE0YTk1ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimakaze_soft/articles/21428033c4f4b9",
          "author": "shimakaze_soft",
          "description": "Pythonを用いてのGoFの定義した23個のデザインパターンの一つであるAdapterパターンの実装方法について解説します。\nAdapterパターンは、「構造に関するデザインパターン」に分類されます。\n\n Adapterパターンとは\nシステムを利用するクライアントは、簡単なインターフェースを通じてサブシステムと連携できるパターンです。\nこのパターンを使用することで、既存のクラスに対して変更を加えることなく、インターフェースを変更することができます。\n\n 利点\n\n\n既存のクラスを変更せずに新しいインターフェースと連携させることができます。これにより、コードの再利用が容易になり、保守性が向...",
          "link": "https://zenn.dev/shimakaze_soft/articles/21428033c4f4b9",
          "publishedOn": "2023-05-05T09:41:21.000Z",
          "wordCount": 1895,
          "title": "Pythonでデザインパターンを学ぼう (Adapter)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wl4Y6jIq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Adapter%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--wl4Y6jIq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25BC%25E3%2581%2586%2520%2528Adapter%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimakaze_soft%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZjllYjE0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yamadamadamada/articles/3fb198003c5428",
          "author": "やまだまだまだ",
          "description": "はじめに\nGoogle Maps APIやLeafletなどのマップ上にマーカーを表示する際、緯度経度が必要です。\nしかし、施設名から緯度経度を調べることは手間がかかるため、本記事では国土地理院APIを使ってCSVファイルから一括で緯度経度を取得する方法を紹介します。\n\n 国土地理院APIについて\n\n無料で施設名から緯度経度を取得できるAPI\nいつ使えなくなるかわからないので注意\n精度\n\n有名施設：かなり近い位置まで緯度経度を取得できる\nあまり有名ではない施設：市町村まで・取得できない\n\n\n\n国土地理院APIは情報の誤差が許容できないサービスには向きません。\n有料ですがGoogleM...",
          "link": "https://zenn.dev/yamadamadamada/articles/3fb198003c5428",
          "publishedOn": "2023-05-05T07:48:16.000Z",
          "wordCount": 1679,
          "title": "Pythonと国土地理院APIで施設名から緯度経度を一括取得してCSV出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--23UVvFnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8%25E5%259B%25BD%25E5%259C%259F%25E5%259C%25B0%25E7%2590%2586%25E9%2599%25A2API%25E3%2581%25A7%25E6%2596%25BD%25E8%25A8%25AD%25E5%2590%258D%25E3%2581%258B%25E3%2582%2589%25E7%25B7%25AF%25E5%25BA%25A6%25E7%25B5%258C%25E5%25BA%25A6%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6CSV%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25BE%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN25nTUpzQl9VRWo4dDZQQ2hTODc2VHlWRGJ1ZGpUR2stanBVeW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--23UVvFnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8%25E5%259B%25BD%25E5%259C%259F%25E5%259C%25B0%25E7%2590%2586%25E9%2599%25A2API%25E3%2581%25A7%25E6%2596%25BD%25E8%25A8%25AD%25E5%2590%258D%25E3%2581%258B%25E3%2582%2589%25E7%25B7%25AF%25E5%25BA%25A6%25E7%25B5%258C%25E5%25BA%25A6%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6CSV%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25BE%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN25nTUpzQl9VRWo4dDZQQ2hTODc2VHlWRGJ1ZGpUR2stanBVeW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/flask_vs_fastapi",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、PythonでWeb開発を進める際に使われるWebフレームワークである「FastAPI」と「Flask」について、両者それぞれの特徴と強みを具体的なソースコードを用いて解説する。\n\n この記事の対象とする読者\n\nこれからPythonでWeb開発を進めることを検討している人\nAPIを開発したいものの、どのような技術を使うべきが迷っている人\nFlaskとFastAPI両方とも、あるいはどちらか一方に興味を持っている人\n社内あるいは個人開発の技術選定で、FastAPIあるいはFlaskの導入を検討している人\n\n\n Flaskとは\nFlaskはPythonで開発され...",
          "link": "https://zenn.dev/nameless_sn/articles/flask_vs_fastapi",
          "publishedOn": "2023-05-05T06:54:14.000Z",
          "wordCount": 1121,
          "title": "【徹底解説】Flask VS FastAPI",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8xT8zAgL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Flask%2520VS%2520FastAPI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--8xT8zAgL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Flask%2520VS%2520FastAPI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ot12/articles/19ffe5d03bd1d9",
          "author": "つかさ",
          "description": "ChatGPTを使ってエンジニアの生産性を爆上げする活用術をまとめました！\n今回はGPT-4を使用しています。\n\n コードの生成\nChatGPTにやりたいことを伝えるだけで良い感じのコードを書いてくれます。\n試しに「はてなブックマークの昨日の人気記事TOP10をスクレイピングするコード」の生成をお願いしてみたところ、1分かからないくらいでサンプルコードを生成してくれました！\n\nちなみに、コードが長くなる場合は会話の途中で途切れてしまいますが「続けて」と言えば続きを書いてくれます。\n\n エラーの原因特定\n上で作成してもらったコードですが、エラーが出たのでエラーの原因を特定してもらいました。...",
          "link": "https://zenn.dev/ot12/articles/19ffe5d03bd1d9",
          "publishedOn": "2023-05-05T05:40:40.000Z",
          "wordCount": 229,
          "title": "【ChatGPT】エンジニアの生産性を爆上げする活用術",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0rV_TeGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ChatGPT%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E7%2594%259F%25E7%2594%25A3%25E6%2580%25A7%25E3%2582%2592%25E7%2588%2586%25E4%25B8%258A%25E3%2581%2592%25E3%2581%2599%25E3%2582%258B%25E6%25B4%25BB%25E7%2594%25A8%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2595%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmMDM1NjJkMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--0rV_TeGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ChatGPT%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E7%2594%259F%25E7%2594%25A3%25E6%2580%25A7%25E3%2582%2592%25E7%2588%2586%25E4%25B8%258A%25E3%2581%2592%25E3%2581%2599%25E3%2582%258B%25E6%25B4%25BB%25E7%2594%25A8%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2595%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmMDM1NjJkMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/fitness_densuke/articles/python_dev_tips10",
          "author": "Tamtam",
          "description": "roadmap.shのPython Developerを眺めながら、\n復習がてら色々調べていたのですが、せっかくなので使えそうなモノを10個ピックアップしました！\n※ 分野や紹介するTIPSの粒度が整理されてないです。筆者の思いつきで書いてますので注意を\n\n 1.pytest実行時のimportエラーの回避策\n1.1と1.2セットでやることで効果を発揮します！\n\n 1.1 ディレクトリ構成のトップレベルで\"src tests\"を使い分ける\nツリー階層で表すと以下のような形です。\nproject\n    .env\n    src\n        __init__.py\n        mo...",
          "link": "https://zenn.dev/fitness_densuke/articles/python_dev_tips10",
          "publishedOn": "2023-05-05T04:39:57.000Z",
          "wordCount": 3135,
          "title": "(初/中級者向け) Python開発ですぐに役立つTIPS10選",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MhMFw1zO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528%25E5%2588%259D%252F%25E4%25B8%25AD%25E7%25B4%259A%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%2529%2520Python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%2599%25E3%2581%2590%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4TIPS10%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MhMFw1zO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528%25E5%2588%259D%252F%25E4%25B8%25AD%25E7%25B4%259A%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%2529%2520Python%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%2599%25E3%2581%2590%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4TIPS10%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/happy663/articles/1a0abc285b3a33",
          "author": "happy663",
          "description": "最近センサデータを用いて屋内推定をするために勉強しており今回は加速度と角速度から歩行軌跡を描いたのでその方法を書く.言語はPythonを使用している.\n\n 実験環境\n\nスマートフォン(iPhoneXR)を下記画像のようなポーチに入れ腰に巻き付けた状態で行う．そのためスマホの向きは横向きで装着される．\nセンシング動作は9歩直進した後,左に90度回転し5歩歩くという動作を行う.\n加速度，角速度の取得には複数のセンサを同時に取得できるいるアプリphyphoxを使用する．iOS,Android共に提供されている.\n歩行データをわかりやすくするために開始時，終了時に約5秒の時間を空ける．\nサンプリ...",
          "link": "https://zenn.dev/happy663/articles/1a0abc285b3a33",
          "publishedOn": "2023-05-05T04:24:35.000Z",
          "wordCount": 3394,
          "title": "歩行時の加速度,角速度データから歩行軌跡を描いてみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n1n1BI2t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A9%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25AE%25E5%258A%25A0%25E9%2580%259F%25E5%25BA%25A6%252C%25E8%25A7%2592%25E9%2580%259F%25E5%25BA%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E6%25AD%25A9%25E8%25A1%258C%25E8%25BB%258C%25E8%25B7%25A1%25E3%2582%2592%25E6%258F%258F%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:happy663%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l5bWFoUjZSUDFFUVd4STkwM0MxS0wwODlkRF9TQmV3dE5kaWN1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n1n1BI2t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A9%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25AE%25E5%258A%25A0%25E9%2580%259F%25E5%25BA%25A6%252C%25E8%25A7%2592%25E9%2580%259F%25E5%25BA%25A6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E6%25AD%25A9%25E8%25A1%258C%25E8%25BB%258C%25E8%25B7%25A1%25E3%2582%2592%25E6%258F%258F%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:happy663%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l5bWFoUjZSUDFFUVd4STkwM0MxS0wwODlkRF9TQmV3dE5kaWN1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/4de750326a4c5d",
          "author": "seiyakitazume",
          "description": "langchainについてのパートをchatGPTに解説させました。\nvocode.py\nimport logging\nimport os\nfrom langchain.agents import tool\nfrom dotenv import load_dotenv\n\nfrom vocode.streaming.models.message import BaseMessage\nfrom call_transcript_utils import delete_transcript, get_transcript\n\nload_dotenv()\n\nfrom vocode.streaming...",
          "link": "https://zenn.dev/seiyakitazume/articles/4de750326a4c5d",
          "publishedOn": "2023-05-05T02:06:59.000Z",
          "wordCount": 2975,
          "title": "LLMと電話を組み合わせたパッケージvocodeの中身を勉強する②",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RKTGa_yt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E9%259B%25BB%25E8%25A9%25B1%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8vocode%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RKTGa_yt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E9%259B%25BB%25E8%25A9%25B1%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8vocode%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/1db5339cb42269",
          "author": "seiyakitazume",
          "description": "LLMによる電話応答ができるパッケージであるvocodeの中身を勉強したいと思ったので、気になるpyファイルの中身がどのようになっているかをchatGPTに解説させました。\nchat_gpt_agent.py\nfrom typing import Optional\nimport openai\nfrom langchain.prompts import (\n    ChatPromptTemplate,\n    MessagesPlaceholder,\n    SystemMessagePromptTemplate,\n    HumanMessagePromptTemplate,\n)\nfr...",
          "link": "https://zenn.dev/seiyakitazume/articles/1db5339cb42269",
          "publishedOn": "2023-05-05T01:50:44.000Z",
          "wordCount": 3536,
          "title": "LLMと電話を組み合わせたパッケージvocodeの中身を勉強する①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WQbdUtXE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E9%259B%25BB%25E8%25A9%25B1%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8vocode%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--WQbdUtXE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25A8%25E9%259B%25BB%25E8%25A9%25B1%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8vocode%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tk_resilie/articles/python_my_best_project",
          "author": "米谷 昂(Python/FastAPIプロフェッショナル)",
          "description": "概要\nチームでPythonを開発する場合に活用可能な、パッケージや構成などの開発テンプレートを紹介します。\nパッケージ管理、lint, test, loggingなどの、汎用的にプロジェクトで活用可能な構成になっています。\n今回説明する内容のリポジトリは以下の通りです。\nhttps://github.com/takashi-yoneya/python-template\n\n 想定読者\nPythonやGitの基本的な使い方を理解している方を想定しているため、基本的な用語説明は省略しています。\n\n 環境\nエンジニアの利用率の高いmacOSを前提として説明していますので、その他の環境の方は随...",
          "link": "https://zenn.dev/tk_resilie/articles/python_my_best_project",
          "publishedOn": "2023-05-05T00:57:25.000Z",
          "wordCount": 2221,
          "title": "[2023年最新版]Pythonを案件で使うなら、とりあえず入れるべきパッケージや構成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ItScEIDs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B4%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%255DPython%25E3%2582%2592%25E6%25A1%2588%25E4%25BB%25B6%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%25E3%2582%2589%25E3%2580%2581%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258D%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2584%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFas...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ItScEIDs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2023%25E5%25B9%25B4%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%255DPython%25E3%2582%2592%25E6%25A1%2588%25E4%25BB%25B6%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%25E3%2582%2589%25E3%2580%2581%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258D%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2584%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFas...%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/8f3d81313b555b",
          "author": "よしだ",
          "description": "はじめに\n今回は時系列分析を扱います。NumPyroではFor文を使用すると速度が遅くなる＆メモリを大量に使用するようになるので、時系列などの繰り返し構造がある場合は、scan関数を使用する必要があります。この記事ではscan関数と簡単な分析にとどめて紹介します。\n\n ライブラリのインポート\nimport os\n\nimport jax\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport s...",
          "link": "https://zenn.dev/yoshida0312/articles/8f3d81313b555b",
          "publishedOn": "2023-05-04T13:12:42.000Z",
          "wordCount": 2269,
          "title": "NumPyro：時系列分析",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qO_gKg0S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qO_gKg0S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/satoru_output/articles/3140c1b760fb66",
          "author": "サトル アウトプット用",
          "description": "使用OS\nWindows11\n\n 前書き\n非エンジニアの方や学生でIT業界の転職を考えて自分のパソコンで\n試しに簡単なプログラミング言語を書いてみたいと\n思ったことはありませんか？\n今回はそういった方向けに、タイトルにある通り小学生にもできるPythonの\n環境構築(※)をお伝えします。\n※環境構築とは、自分のパソコンでPyhtonを使えるように設定することです。\n\n 環境構築手順\n\n\nMicrosoft Storeを開く\n\n\n\nMicrosoft Storeから「Pyhton」を検索\n\n\n\n入手をクリック\n\n\n\n「すべてのアプリ」からインストールされたことを確認\n\n「Pyhton(...",
          "link": "https://zenn.dev/satoru_output/articles/3140c1b760fb66",
          "publishedOn": "2023-05-04T12:40:18.000Z",
          "wordCount": 162,
          "title": "超簡単！ 小学生にもできるPython環境構築。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--eK_7FNzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25EF%25BC%2581%2520%25E5%25B0%258F%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%25AB%25E3%2582%2582%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%2588%25E3%2583%25AB%2520%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E7%2594%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YWE2YjI4MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--eK_7FNzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25EF%25BC%2581%2520%25E5%25B0%258F%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%25AB%25E3%2582%2582%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BPython%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%2588%25E3%2583%25AB%2520%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E7%2594%25A8%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4YWE2YjI4MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/laiso/articles/bb4b0a720983da",
          "author": "laiso",
          "description": "LMQLのtokenizerで文字化けするのを修正したので自分で試してみます。\nhttps://github.com/eth-sri/lmql/pull/39\n以前に構築したnoteの記事をLlamaIndex経由で参照してクエリしてみます。\nhttps://zenn.dev/laiso/articles/faa984a3e33e2b\nLlamaIndex 0.6.0はかなりの破壊的変更が入っているのでご注意ください。\nhttps://betterprogramming.pub/llamaindex-0-6-0-a-new-query-interface-over-your-data-3...",
          "link": "https://zenn.dev/laiso/articles/bb4b0a720983da",
          "publishedOn": "2023-05-04T06:14:30.000Z",
          "wordCount": 486,
          "title": "LMQL v0.0.6.1で日本語が通るようになった",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--d99wjZ2b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LMQL%2520v0.0.6.1%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%258C%25E9%2580%259A%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--d99wjZ2b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LMQL%2520v0.0.6.1%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%258C%25E9%2580%259A%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZTk4YjUxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/shimo_s3/articles/080677429b74d6",
          "author": "shimo",
          "description": "フォルダを指定して、再帰的に.pyファイルを探して各ファイルの最大の文字数を出力します\nデフォルトでは80文字を超えるものだけを出力\n(調査用に作りました)",
          "link": "https://zenn.dev/shimo_s3/articles/080677429b74d6",
          "publishedOn": "2023-05-04T06:06:39.000Z",
          "wordCount": 113,
          "title": "再帰的に.pyファイルを探して各ファイルの最大の文字数を出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9rJgmE8l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2586%258D%25E5%25B8%25B0%25E7%259A%2584%25E3%2581%25AB.py%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2597%25E3%2581%25A6%25E5%2590%2584%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E6%259C%2580%25E5%25A4%25A7%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--9rJgmE8l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2586%258D%25E5%25B8%25B0%25E7%259A%2584%25E3%2581%25AB.py%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2597%25E3%2581%25A6%25E5%2590%2584%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E6%259C%2580%25E5%25A4%25A7%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMjI2YjdhZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nnydtmg/articles/aws-managed-prefixlist-update-lambda",
          "author": "nnydtmg",
          "description": "はじめに\n皆さんはプレフィックスリスト利用していますか？\n私はAmazon WorkSpacesクライアントアプリを利用した通信で、NetworkFirewallのアウトバウンドを厳密に制限する必要がある時に初めて使いました。\n（なんでこんな構成になっているかは、詳しく書けないのでご了承ください。。）\nが、この「Amazon WorkSpacesクライアントアプリを利用した通信に制限」がなかなか面倒で、要件で指定されるIPレンジが不定期にAWS側で変更され、その都度設定しているプレフィックスリストを更新する必要が出てきました。\n毎度手動で更新しても良いですが、数百のレンジに対して差分...",
          "link": "https://zenn.dev/nnydtmg/articles/aws-managed-prefixlist-update-lambda",
          "publishedOn": "2023-05-04T03:28:49.000Z",
          "wordCount": 667,
          "title": "AWS管理のIPが更新された時にプレフィックスリストに登録しいているIPレンジを自動更新する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gf1P_Z-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AEIP%25E3%2581%258C%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2597%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BIP%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nnydtmg%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWY5cGFBTVBuSE9kX3puM3ZuQnJoNWRDYXlLMV80dzhxdko1M0M9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--gf1P_Z-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AEIP%25E3%2581%258C%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2597%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BIP%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nnydtmg%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNWY5cGFBTVBuSE9kX3puM3ZuQnJoNWRDYXlLMV80dzhxdko1M0M9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/d53ff6d665650f",
          "author": "osn_Lofi",
          "description": "機械学習において、モデルのハイパーパラメータの調整は非常に大事です。\n大事なんですが、手動で行うと、時間も手間もすごくかかりますよね。\nここでは、ハイパーパラメータを効率的に調整するOptunaについてご紹介するとともに、Pythonでの具体的な実装方法をご説明します。\n\n Optunaとは\n日本のPrefferdNetworks社が開発した、ハイパーパラメータの自動最適化フレームワークです。\nOptunaは、ベイズ最適化を実装することで、パラメータの探索を効率的に行うことができます。\nベイズ最適化は、確率統計の理論の一つです。\n具体的には、目的関数の値を評価するために、パラメータの値を...",
          "link": "https://zenn.dev/robes/articles/d53ff6d665650f",
          "publishedOn": "2023-05-04T01:14:40.000Z",
          "wordCount": 930,
          "title": "【機械学習】Optunaを使って効率よくハイパーパラメータを調整しよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--hWbpu7vn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2591Optuna%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%258A%25B9%25E7%258E%2587%25E3%2582%2588%25E3%2581%258F%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25AA%25BF%25E6%2595%25B4%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--hWbpu7vn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2591Optuna%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%258A%25B9%25E7%258E%2587%25E3%2582%2588%25E3%2581%258F%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25AA%25BF%25E6%2595%25B4%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tac519/articles/84a6c73b04dde0",
          "author": "tac",
          "description": "Edit bashrc\nvi ~/.bashrc\n\n Append it to the end of file.\n'G' is the jump command to the end.\nalias python=\"python3\" \nalias pip=\"pip3\" \n'Esc' and, ':wq!' is the save command.\n\n Reflect to system\nsource ~/.bashrc",
          "link": "https://zenn.dev/tac519/articles/84a6c73b04dde0",
          "publishedOn": "2023-05-04T00:29:20.000Z",
          "wordCount": 171,
          "title": "Run python3 with 'python' command",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RkupgmIX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:Run%2520python3%2520with%2520%2527python%2527%2520command%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVBZ2llVUk0ZzEtdm5id1dmNjNVVFdBSFJGUWNOMlg5QzdDeEI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RkupgmIX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_64:Run%2520python3%2520with%2520%2527python%2527%2520command%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVBZ2llVUk0ZzEtdm5id1dmNjNVVFdBSFJGUWNOMlg5QzdDeEI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kanadadada/articles/5438ce7dda7474",
          "author": "Yuchiwo",
          "description": "今回書くこと\nOpenAIで対話するAIの対話アシスタント（AITuber）にPythonを使った感情推定の機能を導入します。感情が扱えるようになるとモデルの表情を変えたり、発言内容を記憶する際に重み付けを変えたりできそうなので導入をしてみることにしました。\n具体的にはこんな内容を記載していきます。\n\n感情推定はテキストからBERTを使って感情のラベルとスコアを算出するものとしています。\n\n\n なぜBERT？\n昨今話題の大規模言語モデルで使われるTransformersを使った新しい手法ということで、こちらを試してみることにしました。\nまた感情推定というとJanome・日本語評価極性...",
          "link": "https://zenn.dev/kanadadada/articles/5438ce7dda7474",
          "publishedOn": "2023-05-03T23:30:01.000Z",
          "wordCount": 343,
          "title": "AITuberにBERTを使った感情推定を導入する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1hWIDlSX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AITuber%25E3%2581%25ABBERT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2584%259F%25E6%2583%2585%25E6%258E%25A8%25E5%25AE%259A%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuchiwo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjODExZDExZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--1hWIDlSX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AITuber%25E3%2581%25ABBERT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2584%259F%25E6%2583%2585%25E6%258E%25A8%25E5%25AE%259A%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuchiwo%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjODExZDExZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yofa/articles/0acb3090d73e44",
          "author": "yofa",
          "description": "背景\n\nDiscordでChatGPTを使いたい、使ってほしい\n\n\n ゴール\n\nDiscordでChatGPTが使えるようになっている\n\n\n 手順\n\nchatGPT-discord-botをcloneする\nDiscord botを作る\nOpenAI API keyを作る\ndockerで実行する\nテスト\n\n\n chatGPT-discord-botをcloneする\n\nhttps://github.com/Zero6992/chatGPT-discord-bot\n\ngit clone https://github.com/Zero6992/chatGPT-discord-bot.git\n...",
          "link": "https://zenn.dev/yofa/articles/0acb3090d73e44",
          "publishedOn": "2023-05-03T17:54:31.000Z",
          "wordCount": 269,
          "title": "ChatGPTを使ったDiscord botを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ns6eQz6V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FDiscord%2520bot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yofa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyM1cwODBLUTkzVGNfYWsxTG9xSEIxZmpTQ0J4NlpVODNfcFlWdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ns6eQz6V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FDiscord%2520bot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yofa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyM1cwODBLUTkzVGNfYWsxTG9xSEIxZmpTQ0J4NlpVODNfcFlWdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/sugasuga/articles/10e9843263f215",
          "author": "sugasuga",
          "description": "この記事について\ngRPC通信に関して知識と経験がない。とりあえずpythonでやってみる。\n頭の整理も兼ねて、最もシンプルなgRPC通信でhello worldを返すアプリケーションを書いてみる。\ngRPCの利点・詳細・各用語などは他記事などを参考にしてください。\n\n 流れ\n\n(諸々の環境構築)\ngRPCのAPI定義ファイルであるprotoファイルを作成\nprotoファイルをコンパイル\nサーバー側のpythonファイルを作成\nサーバーを叩くクライアント側のpythonファイルを作成\n実行\n\n諸々のコードは下記になる\n.\n├── Dockerfile\n├── README.md\n├─...",
          "link": "https://zenn.dev/sugasuga/articles/10e9843263f215",
          "publishedOn": "2023-05-03T16:54:26.000Z",
          "wordCount": 830,
          "title": "pythonでgRPC通信をやってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--juI47vZb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7gRPC%25E9%2580%259A%25E4%25BF%25A1%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--juI47vZb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7gRPC%25E9%2580%259A%25E4%25BF%25A1%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugasuga%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjRiY2I1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/f445335b7867c4",
          "author": "よしだ",
          "description": "はじめに\n今回はガウス過程を扱います。\n!\n2023年5月現在、NumPyroはデフォルトでガウス過程のためのモジュール/ツールがなくスクラッチで訓練/予測のコードを書く必要があります。tinygpという第三者のライブラリもありますが、予測はサポートしていません。また、MCMCが速いという特徴があるNumPyroでも、ガウス過程回帰は計算が重いです。一方で、ガウス過程回帰を実施する便利なライブラリとしてGPyやGPyTorchが既にあリます。以上の理由から、個人的にはある程度データが多くなった場合、ガウス過程回帰はGPyTorch + Pyroを使用していきたいと思っています。（デー...",
          "link": "https://zenn.dev/yoshida0312/articles/f445335b7867c4",
          "publishedOn": "2023-05-03T15:01:15.000Z",
          "wordCount": 8039,
          "title": "NumPyro：ガウス過程",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vp__Orft--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--vp__Orft--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2582%25AC%25E3%2582%25A6%25E3%2582%25B9%25E9%2581%258E%25E7%25A8%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nadegata_memo/articles/6e9b569c5be845",
          "author": "nadegata",
          "description": "はじめに\nMediaPipeを用いたポーズ推定を，ローカルでPythonを用いて行う方法．\n下記ページのコードを使用しています．\nhttps://github.com/google/mediapipe/blob/master/docs/solutions/pose.md#resources\n私が使用した環境やアプリケーションは以下の通りです．\n・windows\n・コマンドプロンプト\n・python3.10.11\n\n 0.Pythonの保存場所の確認\n\nコマンドプロンプトを起動する．\n\n以下，全てのコードはコマンドプロンプトにて実行します．\n \nPythonの保存場所を確認\n\nwher...",
          "link": "https://zenn.dev/nadegata_memo/articles/6e9b569c5be845",
          "publishedOn": "2023-05-03T13:29:52.000Z",
          "wordCount": 696,
          "title": "MediaPipe Pose をローカルのPythonで使う[備忘録]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--n2LY6JjJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MediaPipe%2520Pose%2520%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEPython%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nadegata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXdLYUtONEpmTGRvZ0ZqMURkU004U2hFVlpRWHlMajctYmRJU009czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--n2LY6JjJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MediaPipe%2520Pose%2520%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEPython%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nadegata%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXdLYUtONEpmTGRvZ0ZqMURkU004U2hFVlpRWHlMajctYmRJU009czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/robes/articles/755e7ee27ce308",
          "author": "osn_Lofi",
          "description": "Pythonを使って、緯度・経度の座標情報を地図上にプロットする方法についてご紹介します。\nサンプルのデータとして、githubに公開されている米国の都市データを使いますので、ここに記載のコードをコピペすることで、お手元のPCでも同じものを見ることができます。\n興味を持たれた方は、ぜひ、一緒にやってみてください。\n地図に位置情報をプロットできるライブラリーとして、foliumとPlotlyの2種類あります。\nそれぞれについて、ご紹介していきます。\n\n データのダウンロード\nまずは、サンプルデータをダウンロードしましょう。\nimport pandas as pd\ndf =pd.read_...",
          "link": "https://zenn.dev/robes/articles/755e7ee27ce308",
          "publishedOn": "2023-05-03T12:13:10.000Z",
          "wordCount": 1074,
          "title": "【Python】地図上に位置情報（緯度・経度）をプロットする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ubMeNz3U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25AB%25E4%25BD%258D%25E7%25BD%25AE%25E6%2583%2585%25E5%25A0%25B1%25EF%25BC%2588%25E7%25B7%25AF%25E5%25BA%25A6%25E3%2583%25BB%25E7%25B5%258C%25E5%25BA%25A6%25EF%25BC%2589%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ubMeNz3U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25AB%25E4%25BD%258D%25E7%25BD%25AE%25E6%2583%2585%25E5%25A0%25B1%25EF%25BC%2588%25E7%25B7%25AF%25E5%25BA%25A6%25E3%2583%25BB%25E7%25B5%258C%25E5%25BA%25A6%25EF%25BC%2589%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:osn_Lofi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwN2VmNjZiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/cd0ede289c3b28",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-218 B - qwerty\n\n\n\n 提出結果\ndef getIntList():\n    return list(map(int, input().split()))\n\n\ndef main():\n    p = getIntList()\n\n    a = ord('a') - 1\n    s = []\n    for i in p:\n        s.append(chr(a + i))\n    print(''.join(s))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/cd0ede289c3b28",
          "publishedOn": "2023-05-03T03:19:55.000Z",
          "wordCount": 293,
          "title": "［AtCoder］ABC-218｜B - qwerty",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CcG6QlWS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-218%25EF%25BD%259CB%2520-%2520qwerty%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CcG6QlWS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-218%25EF%25BD%259CB%2520-%2520qwerty%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/9d2bc146c7073d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-218 A - Weather Forecast\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getString():\n    return input()\n\n\ndef main():\n    n = getInt()\n    s = list(getString())\n\n    print('Yes' if s[n - 1] == 'o' else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/9d2bc146c7073d",
          "publishedOn": "2023-05-03T03:19:54.000Z",
          "wordCount": 281,
          "title": "［AtCoder］ABC-218｜A - Weather Forecast",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JpJvKfJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-218%25EF%25BD%259CA%2520-%2520Weather%2520Forecast%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JpJvKfJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-218%25EF%25BD%259CA%2520-%2520Weather%2520Forecast%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/1aa9acfcf14c72",
          "author": "Daphnia",
          "description": "App Service(Webapp)にPython（Flask）を最小構成でVScodeからデプロイします。内容は、ルートページにアクセスした際に、{\"status\":200}を表示するだけのFlaskとします。App Serviceの構成も基本的にデフォルトで作成します。目的はVSCodeからApp Serviceにデプロイをするということとなります。\naz cliとVScodeはインストールされている前提としています。また、az loginも済みで・・。\n\n App Serviceの構築\nまず、App Serviceを作成します。今回は簡易的にAz CLIを使用してデプロイを実行し...",
          "link": "https://zenn.dev/daphnia/articles/1aa9acfcf14c72",
          "publishedOn": "2023-05-03T03:04:39.000Z",
          "wordCount": 461,
          "title": "WebAppにPython(Flask)を最小構成でVScodeデプロイする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--A5-9-fA3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebApp%25E3%2581%25ABPython%2528Flask%2529%25E3%2582%2592%25E6%259C%2580%25E5%25B0%258F%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7VScode%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMDBhYTc2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--A5-9-fA3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebApp%25E3%2581%25ABPython%2528Flask%2529%25E3%2582%2592%25E6%259C%2580%25E5%25B0%258F%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7VScode%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMDBhYTc2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yktakaha4/articles/describe_remaining_id_length_in_django",
          "author": "Yuuki Takahashi",
          "description": "小ネタです🍣\nDjangoのModelにデフォルトで存在するidフィールドについて、idをどの程度採番しているか簡単にチェックするためのスクリプトです\n全モデルの全フィールドを走査し、AutoFieldがあったら Model.objects.latest(*fields) を出力します\nhttps://docs.djangoproject.com/en/4.2/ref/models/querysets/#latest\n本スクリプトはSQLを扱わないため、MySQLでもPostgreSQLでも同様の結果を得ることができるものと思います\nしかしながら、この実装だと最新のidが削除済みの場合に...",
          "link": "https://zenn.dev/yktakaha4/articles/describe_remaining_id_length_in_django",
          "publishedOn": "2023-05-02T14:33:06.000Z",
          "wordCount": 705,
          "title": "Djangoで全テーブルのIDの採番状況をチェックする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pOpzEsAH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E5%2585%25A8%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AEID%25E3%2581%25AE%25E6%258E%25A1%25E7%2595%25AA%25E7%258A%25B6%25E6%25B3%2581%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--pOpzEsAH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E5%2585%25A8%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AEID%25E3%2581%25AE%25E6%258E%25A1%25E7%2595%25AA%25E7%258A%25B6%25E6%25B3%2581%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/make_it_happen/articles/758264e7dd8d9c",
          "author": "Make It happen",
          "description": "前置き\nRaspberryPiに接続したデバイスをプログラミングの出来ない人にプレゼントすることになり、Flaskを使ってブラウザからデバイス操作できるようにしてあげました。\nその際にデバイス状態が視覚的にわかるようにUnityで3Dモデルを作成とWebGLビルドを行い、RaspberryPiからのセンサーデータでUnityのモデル状態が変更するようにしました。\n今回は上記を実現するために使用した技術を忘れないために備忘録的にまとめました。\n\n 作ったもの\n前置きで書いたプレゼントの品は個人情報を含むので別途サンプルを作成しました。\n今回はボタンを押すとボールの転がる速度が変化するサ...",
          "link": "https://zenn.dev/make_it_happen/articles/758264e7dd8d9c",
          "publishedOn": "2023-05-02T08:09:57.000Z",
          "wordCount": 3831,
          "title": "FlaskからHTMLに埋め込んだUnityWebGLを操作する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_nhdwux2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%258B%25E3%2582%2589HTML%25E3%2581%25AB%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A0UnityWebGL%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Make%2520It%2520happen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkNLeTJKT3FMekVENHY2NkxybnBRTzl4LVFSRFJkclM0b2pHbjE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--_nhdwux2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%258B%25E3%2582%2589HTML%25E3%2581%25AB%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A0UnityWebGL%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Make%2520It%2520happen%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkNLeTJKT3FMekVENHY2NkxybnBRTzl4LVFSRFJkclM0b2pHbjE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/manyan3/articles/c42e3651e9fe8d",
          "author": "Manyan3",
          "description": "Anomalib\nhttps://github.com/openvinotoolkit/anomalib\nhttps://openvinotoolkit.github.io/anomalib/\n\nAnomalib is a deep learning library that aims to collect state-of-the-art anomaly detection algorithms for benchmarking on both public and private datasets.\n\n!\n\n公式Gitとページです。\nAnomaly detection、異常検知の...",
          "link": "https://zenn.dev/manyan3/articles/c42e3651e9fe8d",
          "publishedOn": "2023-05-02T08:00:42.000Z",
          "wordCount": 810,
          "title": "Anomalib with custom data setup(日本語つき)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XHPDR_Pl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Anomalib%2520with%2520custom%2520data%2520setup%2528%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25A4%25E3%2581%258D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Manyan3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjU0MzMxYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XHPDR_Pl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Anomalib%2520with%2520custom%2520data%2520setup%2528%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25A4%25E3%2581%258D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Manyan3%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MjU0MzMxYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/c337cff7ac2197",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-217 B - AtCoder Quiz\n\n\n\n 提出結果\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    s = getStringRow(3)\n    t = ['ABC', 'ARC', 'AGC', 'AHC']\n\n    for w in t:\n        if w in s:\n            continue\n        print(w)\n        break\n\n\nif __name__ == \"__main__\":\n ...",
          "link": "https://zenn.dev/hyperdb/articles/c337cff7ac2197",
          "publishedOn": "2023-05-02T07:33:38.000Z",
          "wordCount": 288,
          "title": "［AtCoder］ABC-217｜B - AtCoder Quiz",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--z4RZHDkB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-217%25EF%25BD%259CB%2520-%2520AtCoder%2520Quiz%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--z4RZHDkB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-217%25EF%25BD%259CB%2520-%2520AtCoder%2520Quiz%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/bd91eeff631b5f",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-217 A - Lexicographic Order\n\n\n\n 提出結果\ndef getStringList():\n    return list(input().split())\n\n\ndef main():\n    s = getStringList()\n    t = sorted(s)\n\n    print('Yes' if s[0] == t[0] else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/bd91eeff631b5f",
          "publishedOn": "2023-05-02T07:33:37.000Z",
          "wordCount": 256,
          "title": "［AtCoder］ABC-217｜A - Lexicographic Order",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QyzRnZdO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-217%25EF%25BD%259CA%2520-%2520Lexicographic%2520Order%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QyzRnZdO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-217%25EF%25BD%259CA%2520-%2520Lexicographic%2520Order%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/aae7e98b512783",
          "author": "hodakam",
          "description": "RDKitの構造最適化\n前回の記事で、RDKit上で複数分子を取り扱い、移動や回転を行ってみました。ただし、ここでの分子操作はあくまでも幾何的に行ったものであり化学的に正しいとは限りません。そのため、こういった化学構造を初期構造として量子化学計算を行うとうまく収束しないことが多いです。うまく構造を収束させるために低レベル基底や汎関数での事前の最適化や分子力場による構造最適化を行います。\nRDKitにも分子力場による構造最適化の機能は備わっています。しかし、よくある公式リファレンスのやり方だと構造の拘束がないので、二量体のように特定の原子間の位置関係を制御した状態で最適化することはでき...",
          "link": "https://zenn.dev/hodakam/articles/aae7e98b512783",
          "publishedOn": "2023-05-02T05:13:55.000Z",
          "wordCount": 1622,
          "title": "RDKitで拘束を入れて構造最適化をする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BGHomtHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RDKit%25E3%2581%25A7%25E6%258B%2598%25E6%259D%259F%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E6%25A7%258B%25E9%2580%25A0%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--BGHomtHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RDKit%25E3%2581%25A7%25E6%258B%2598%25E6%259D%259F%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E6%25A7%258B%25E9%2580%25A0%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/d791a37c73b63d",
          "author": "seiyakitazume",
          "description": "LangchainとGPTを使用したニュースの要約しました。\n\n 主な処理\n\nニュース記事のスクレイピング（prtimes）\nprtimesの記事の参照元のサイトを要約し、記事を生成\n\n\n 1. ニュース記事のスクレイピング crawling.py\n対象：prtimes\n\nprtimes\n\ndata/prtimes_company.csvにpratimesにおけるcompany_idを一覧で保持する\n保持しているcompany_idの企業の記事は、RSSでtitle、url、intro、updated（更新日）を取得してデータベースのprtimesテーブルに保存する。\n\n\n\n\n 2. 記...",
          "link": "https://zenn.dev/seiyakitazume/articles/d791a37c73b63d",
          "publishedOn": "2023-05-02T05:07:32.000Z",
          "wordCount": 287,
          "title": "LangchainとGPTを使ってニュースの自動要約プログラムを作成した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ForKhovj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Langchain%25E3%2581%25A8GPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--ForKhovj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Langchain%25E3%2581%25A8GPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/zekkn/articles/ed170f977b086c",
          "author": "zekkn",
          "description": "津波情報のXMLをパースする\n気象庁のサイトには気象庁防災情報XMLフォーマット形式電文が公開されていて、一般の人でも取得することができる。\nここでは気象全般の情報、地震津波火山情報なども提供されている。\nそこで、Pythonを使ってXML電文をパースしてみた。\n\n 実際のXML電文の構造\n2022年1月トンガ噴火に伴う地球規模の津波発生により奄美大島、トカラ列島に津波警報が発表されたときの実際の電文が以下のサイトでアーカイブされている。\nhttp://agora.ex.nii.ac.jp/cgi-bin/cps/report_xml.pl?id=20220115151519_0_V...",
          "link": "https://zenn.dev/zekkn/articles/ed170f977b086c",
          "publishedOn": "2023-05-02T04:34:39.000Z",
          "wordCount": 973,
          "title": "Pythonで気象庁の津波情報(XML電文)をパースする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YtSOaAs4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25B0%2597%25E8%25B1%25A1%25E5%25BA%2581%25E3%2581%25AE%25E6%25B4%25A5%25E6%25B3%25A2%25E6%2583%2585%25E5%25A0%25B1%2528XML%25E9%259B%25BB%25E6%2596%2587%2529%25E3%2582%2592%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zekkn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMDQzYTBmMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--YtSOaAs4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%25B0%2597%25E8%25B1%25A1%25E5%25BA%2581%25E3%2581%25AE%25E6%25B4%25A5%25E6%25B3%25A2%25E6%2583%2585%25E5%25A0%25B1%2528XML%25E9%259B%25BB%25E6%2596%2587%2529%25E3%2582%2592%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zekkn%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMDQzYTBmMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/amemy/articles/2f90ce384cd180",
          "author": "雨宮甲念",
          "description": "完成イメージ：\n\nこの記事では、ブラウザのボタンを押したら、サーバー内のPythonファイルを実行し、その実行結果をブラウザに表示するプログラムを作成します。\nAjaxを使用して非同期通信を行い、画面遷移を防ぎます。\nFlaskを使ってPythonのウェブアプリケーションを作成し、JavaScriptと連携させます。\n\n 前提\n\npythonがインストールされていて、実行可能なことを前提としています。\nwindows11でテストしましたが、他のパソコンでも同様に実行できるはずです。\n\n\n 準備\n以下のコマンドでFlaskをインストールします。\npip install Flask\n次に、以...",
          "link": "https://zenn.dev/amemy/articles/2f90ce384cd180",
          "publishedOn": "2023-05-02T04:15:41.000Z",
          "wordCount": 926,
          "title": "すぐに実行できる、最もシンプルなAjaxのサンプル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mNVhGgQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2599%25E3%2581%2590%25E3%2581%25AB%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2581%25E6%259C%2580%25E3%2582%2582%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AAAjax%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259B%25A8%25E5%25AE%25AE%25E7%2594%25B2%25E5%25BF%25B5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMmM3ZGQzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--mNVhGgQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2599%25E3%2581%2590%25E3%2581%25AB%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2581%25E6%259C%2580%25E3%2582%2582%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AAAjax%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259B%25A8%25E5%25AE%25AE%25E7%2594%25B2%25E5%25BF%25B5%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMmM3ZGQzNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nekodamistie/articles/4910ffa201dd9a",
          "author": "sacat.neko",
          "description": "HTMLコードからURLだけ抜き出したい\nURLだけ抜き出したい時には正規表現を使いました。\n\n URLの形を把握する\nURLの形は、主に以下のようなものが多い。\n・http://....\n・https://...\n別の形式が決まっていればそちらも検討する。\n\n 使用した正規表現\nurl_pattern = \"https?://[\\w/:%#\\$&\\?\\(\\)~\\.=\\+\\-]+\"\n\n 解説\nhttp  --> httpがある（から始まる）\ns?  --> sは0回か1回繰り返す\n://  --> ://がある\n[] --> 次の文字集合\n\\w --&...",
          "link": "https://zenn.dev/nekodamistie/articles/4910ffa201dd9a",
          "publishedOn": "2023-05-02T03:06:05.000Z",
          "wordCount": 386,
          "title": "PythonでHTMLからURLを抜き出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Jl4gRTlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7HTML%25E3%2581%258B%25E3%2582%2589URL%25E3%2582%2592%25E6%258A%259C%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Jl4gRTlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7HTML%25E3%2581%258B%25E3%2582%2589URL%25E3%2582%2592%25E6%258A%259C%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sacat.neko%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzhjYzk0NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nameless_sn/articles/fastapi_tutorial_for_rest",
          "author": "Shota Nukumizu",
          "description": "はじめに\n今回の記事では、FastAPIでREST APIを開発する手順を簡潔に解説する。\n\n 本記事の対象読者\n\nPythonの基本文法(データ型、条件分岐、繰り返し)を理解している人\nRailsやLaravel等のWebフレームワークで簡単なWebアプリケーションを開発できる人\nFastAPIで簡潔にREST APIを開発したい人\n\n\n 用語解説\n\n FastAPI\nFastAPIの公式ドキュメントによると、以下のように説明されている。\n\nFastAPI is a modern, fast (high-performance), web framework for buildin...",
          "link": "https://zenn.dev/nameless_sn/articles/fastapi_tutorial_for_rest",
          "publishedOn": "2023-05-02T02:44:46.000Z",
          "wordCount": 3021,
          "title": "FastAPIで学ぶPythonによるREST API開発の基本",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KVS77su6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BREST%2520API%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--KVS77su6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BREST%2520API%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Nukumizu%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BpRWxxcmxndGkyV3NPQ2dpcmg2R1dFS3NaSC1SOHJOTE1JcXNscWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hiroshimraz/articles/b65d3d06eebb95",
          "author": "hiroshiMraz",
          "description": "Azure Functionsのvscodeデプロイ(python,langchain)\nazure funcitonsをvscode拡張でセットアップしてみるだけ\npythonを実行して、langchainもいれておいてみる\n完成品プロジェクトはこちら\nhttps://github.com/piroz/my-azure-langchain\n\n 使用したもの\n1.Azureのアカウント\n2.vscode拡張\nhttps://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions\n\n...",
          "link": "https://zenn.dev/hiroshimraz/articles/b65d3d06eebb95",
          "publishedOn": "2023-05-01T22:15:53.000Z",
          "wordCount": 602,
          "title": "Azure Functionsを vscodeからデプロイする(python,langchain)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Oik4EOpI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Functions%25E3%2582%2592%2520vscode%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2528python%252Clangchain%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroshiMraz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkZTcxN2VhMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Oik4EOpI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Functions%25E3%2582%2592%2520vscode%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2528python%252Clangchain%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroshiMraz%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkZTcxN2VhMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yofa/articles/f2c4bd6ceba0e4",
          "author": "yofa",
          "description": "背景\n\nサイゼリヤのキッズメニューの表紙には間違い探しが描かれている\n間違い探しの難易度は非常に高く、全て見つけるのに数時間かかることもある\n\n\n ゴール\n\nサイゼリヤの間違い探しをワンパンで倒す\n\n\n 手順\n\n\nサイゼリヤ公式HPから間違い探しを開いて、画像を保存する\n\nSpot the difference in saizeriyaを使う\n\n画像を左右2枚に分割する\n分割した2枚の画像の差分を出力する\n\n\n\n\n 参考\n\nhttps://note.nkmk.me/python-opencv-numpy-image-difference/",
          "link": "https://zenn.dev/yofa/articles/f2c4bd6ceba0e4",
          "publishedOn": "2023-05-01T17:25:46.000Z",
          "wordCount": 104,
          "title": "サイゼリヤの間違い探しをワンパンで倒す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Pgy3x_BP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BC%25E3%2583%25AA%25E3%2583%25A4%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%2591%25E3%2583%25B3%25E3%2581%25A7%25E5%2580%2592%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yofa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyM1cwODBLUTkzVGNfYWsxTG9xSEIxZmpTQ0J4NlpVODNfcFlWdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Pgy3x_BP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BC%25E3%2583%25AA%25E3%2583%25A4%25E3%2581%25AE%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E6%258E%25A2%25E3%2581%2597%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%2591%25E3%2583%25B3%25E3%2581%25A7%25E5%2580%2592%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yofa%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyM1cwODBLUTkzVGNfYWsxTG9xSEIxZmpTQ0J4NlpVODNfcFlWdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/22ac86f3d8712e",
          "author": "よしだ",
          "description": "連載している記事の１つです。以前までの記事を読んでいる前提で書いているので、必要であればNumPyroの記事一覧から各記事を参考にしてください。\n\n はじめに\nベイズを扱う際に避けて通れないのが、数多くある確率分布です。今回はこれまで扱ってきた分布をまとめていきます。\n\n 分布\n分布の形状を可視化するための準備を行います。\nfrom jax import random\nfrom jax import numpy as jnp\nimport numpyro.distributions as dist\nimport seaborn as sns\nimport matplotlib.pyplo...",
          "link": "https://zenn.dev/yoshida0312/articles/22ac86f3d8712e",
          "publishedOn": "2023-05-01T15:02:06.000Z",
          "wordCount": 3071,
          "title": "NumPyro：各分布に関してまとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sLEtwsRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%2590%2584%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--sLEtwsRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E5%2590%2584%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/4a42bab05bd7b4",
          "author": "Daphnia",
          "description": "フロントエンド(ReactJS)とバックエンド(Flask)をそれぞれ構築し、Websocket通信してみます。\nフロントエンドから何か送信したらその送信した文字列に文字を追加してフロントエンドに送信し、画面に描画するアプリを構築します。つまり、フロントエンドからのリクエストをトリガーとしてバックエンドではフロントエンドに文字列を送信します。\n\n ディレクトリ\n.\n├─ be\n    ├─ app.py\n    ├─ requirements.txt\n    └─ socket_manager.py\n├─ fe\n    ├─ App.js\n    ├─ ...\n    ├─ socket...",
          "link": "https://zenn.dev/daphnia/articles/4a42bab05bd7b4",
          "publishedOn": "2023-05-01T14:12:53.000Z",
          "wordCount": 900,
          "title": "reactjs+Flaskでwebsocket通信",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--RALNHsnA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:reactjs%252BFlask%25E3%2581%25A7websocket%25E9%2580%259A%25E4%25BF%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMDBhYTc2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--RALNHsnA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:reactjs%252BFlask%25E3%2581%25A7websocket%25E9%2580%259A%25E4%25BF%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMDBhYTc2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/ryosuke_horie/articles/ebb84b6974e991",
          "author": "ryo-tech",
          "description": "はじめに\n使い物にはならなかったのですが、学びにはつながったので共有します。\n主に、GoogleCloudVisonAPIに対する知見の共有となります。\n\n 目次\n\n#1 作ろうとしたアプリケーションについて\n#2 実装した機能\n#3 問題点（あきらめた理由）\n#4 開発環境\n#5 知見の共有\n#6 今後の修正案\n#7 最後に\n\n\n #1 作ろうとしたアプリケーションについて\n1ヶ月のシフト表がカレンダー形式のPDFで共有されています。このカレンダーは1日毎に区切られていて、他の人のシフトも記載されているものです。\nPDFだと自分のカレンダーに取り込むことができないので、画像認識を利...",
          "link": "https://zenn.dev/ryosuke_horie/articles/ebb84b6974e991",
          "publishedOn": "2023-05-01T13:55:00.000Z",
          "wordCount": 713,
          "title": "【CloudVisonAPI】シフト表からカレンダーに予定を入れる作業を自動化したい【Python】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DQiFZ1uP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590CloudVisonAPI%25E3%2580%2591%25E3%2582%25B7%25E3%2583%2595%25E3%2583%2588%25E8%25A1%25A8%25E3%2581%258B%25E3%2582%2589%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25AB%25E4%25BA%2588%25E5%25AE%259A%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E4%25BD%259C%25E6%25A5%25AD%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryo-tech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMTExODBjOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--DQiFZ1uP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590CloudVisonAPI%25E3%2580%2591%25E3%2582%25B7%25E3%2583%2595%25E3%2583%2588%25E8%25A1%25A8%25E3%2581%258B%25E3%2582%2589%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25AB%25E4%25BA%2588%25E5%25AE%259A%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E4%25BD%259C%25E6%25A5%25AD%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2590Python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryo-tech%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMTExODBjOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/53b82847da2f07",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-126 A - Signed Difficulty\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    x, y = getString().split('.')\n\n    print('%s%s' % (x, '-' if y <= '2' else '+' if y >= '7' else ''))\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/53b82847da2f07",
          "publishedOn": "2023-05-01T04:16:36.000Z",
          "wordCount": 270,
          "title": "［AtCoder］ABC-216｜A - Signed Difficulty",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xEyVEIGR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-216%25EF%25BD%259CA%2520-%2520Signed%2520Difficulty%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--xEyVEIGR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-216%25EF%25BD%259CA%2520-%2520Signed%2520Difficulty%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/1c4e3d3b581456",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-216 B - Same Name\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef getStringRow(N):\n    return [input() for _ in range(N)]\n\n\ndef main():\n    n = getInt()\n    st = getStringRow(n)\n\n    print('Yes' if len(set(st)) < n else 'No')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/1c4e3d3b581456",
          "publishedOn": "2023-05-01T04:16:36.000Z",
          "wordCount": 295,
          "title": "［AtCoder］ABC-216｜B - Same Name",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tnyx-ss4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-216%25EF%25BD%259CB%2520-%2520Same%2520Name%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tnyx-ss4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-216%25EF%25BD%259CB%2520-%2520Same%2520Name%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yuarth/articles/64c922e4abd84f",
          "author": "yuarth",
          "description": "はじめに\nこの記事は、前回作成したものをベースに、各スライドに画像を挿入するためのプロンプトを追加＋スライドの内容をベースにDALL・Eで画像を生成する機能を追加したものです。\n\n 必要なもの\n\nOpenAIのAPIキー\n３ヶ月で失効する$18の無料枠があります。（以降は従量課金製）\nChatGPTとDALL・EのAPIリクエストに使用します\nAPIの料金については以下参照\n\nhttps://openai.com/pricing\n\nPythonのライブラリ\n\nopenai\nunstructured\nselenium\n\n\n\n\n 実装\n\n テキストデータの読み込み\n今回はWikipedi...",
          "link": "https://zenn.dev/yuarth/articles/64c922e4abd84f",
          "publishedOn": "2023-05-01T03:00:00.000Z",
          "wordCount": 2761,
          "title": "ChatGPT+DALL・Eで画像付きスライドを自動作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CPxZ4Y6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%252BDALL%25E3%2583%25BBE%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E4%25BB%2598%25E3%2581%258D%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuarth%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGMwMWJlNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CPxZ4Y6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%252BDALL%25E3%2583%25BBE%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E4%25BB%2598%25E3%2581%258D%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuarth%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGMwMWJlNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/chanmoro/articles/1552c120ec8f37",
          "author": "Chanmoro",
          "description": "はじめに\n今年の2月頃に Twitter API に関する無料プランの廃止がアナウンスがされました。そして最近では色々なサービスで Twitter でのログインやアカウント連携に関わる機能が利用できなくなる事象が多発しているようです。\nTwitter API を使っているアプリケーションの開発に関わられている方はいまいち状況が掴めずあわあわしていると思われます。安心してください、僕もその1人です。\n\n今の時点で公式から発表されているのは Standard (v1.1), Essential (v2), Elevated (v2), Premium などのプランが廃止され、今後は新たな...",
          "link": "https://zenn.dev/chanmoro/articles/1552c120ec8f37",
          "publishedOn": "2023-05-01T02:22:56.000Z",
          "wordCount": 915,
          "title": "OAuth 1.0a, OAuth 2.0 で Twitter 連携して Twitter API v2 を使う実装サンプル (Python)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VkkvuLtx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OAuth%25201.0a%252C%2520OAuth%25202.0%2520%25E3%2581%25A7%2520Twitter%2520%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2597%25E3%2581%25A6%2520Twitter%2520API%2520v2%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E5%25AE%259F%25E8%25A3%2585...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Chanmoro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkMGM4OGM4NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--VkkvuLtx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OAuth%25201.0a%252C%2520OAuth%25202.0%2520%25E3%2581%25A7%2520Twitter%2520%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2597%25E3%2581%25A6%2520Twitter%2520API%2520v2%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E5%25AE%259F%25E8%25A3%2585...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Chanmoro%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkMGM4OGM4NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yamatonokuni/articles/33b9a917caf40c",
          "author": "たろう",
          "description": "はじめに\nSphinxというPython製のドキュメント作成ツールがあります。テキストベースで記述したファイルをHTMLやPDFに変換することができて便利なのですが、変換にはビルドを伴うので、少し面倒です。\nそこで、VSCodeに拡張機能を入れてライブプレビューをしながら記述できる環境を整えたので、その方法をメモしておこうと思います。\nちなみに、Pythonの公式ドキュメントや、Linux KernelのドキュメントなどがSphinxで作成されています。その外にもOSS（特にPython関連）のドキュメントはSphinxで作成されているものが多いです。こちらに採用例が載っていました。...",
          "link": "https://zenn.dev/yamatonokuni/articles/33b9a917caf40c",
          "publishedOn": "2023-04-30T18:34:52.000Z",
          "wordCount": 918,
          "title": "VSCodeでSphinxドキュメント作成環境を整える",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3POgkuD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7Sphinx%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMDJiOGI0ZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3POgkuD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7Sphinx%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMDJiOGI0ZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/amifima/articles/2afd82ae92038a",
          "author": "あみふぃま",
          "description": "エディタ\n\n vim\n自分はVimmerなんで、Vimを推しておきます。Vimがあれば大抵の事が出来ると思ってます。\nが、Vimは習得に時間がかかるという難点があります。\nエディタプラグイン\n\nneocomplcache.vim\nquickrun.vim\nvimproc + quickrun\nunite.vim\n\n\n MacVim\n\n Emacs\nVIM, Emacs は別格って感じですね・・・\nエディタプラグイン\n\nanything.el\n\n\n CocoaEmacs\n\n Mou\nMarkdownを書くためのエディタ。\n\nhttp://mouapp.com/\n リアルタイムプレビュー...",
          "link": "https://zenn.dev/amifima/articles/2afd82ae92038a",
          "publishedOn": "2023-04-30T15:00:01.000Z",
          "wordCount": 2646,
          "title": "【まとめ】プログラマのツール【100選】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ll-tCQlE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2581%25AE%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%2590100%25E9%2581%25B8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BF%25E3%2581%25B5%25E3%2581%2583%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4MmRiMzE1NzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ll-tCQlE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2581%25AE%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%2590100%25E9%2581%25B8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BF%25E3%2581%25B5%25E3%2581%2583%25E3%2581%25BE%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4MmRiMzE1NzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tukiakaritabane/articles/google-colab-pyopenjtalk-error",
          "author": "月明たばね",
          "description": "pyopenjtalkのpip installでエラー\n\nセル\n!pip install pyopenjtalk\n\nGoogle Colabでpyopenjtalkのpip installが失敗する。\npyopenjtalkは、PythonからOpenJtalkが使用できるライブラリである。\nhts_engine_API、open_jtalkというC/C++のライブラリを参照していて、pip installの際、この２つのライブラリのビルドに失敗している。\n\n出力\nLooking in indexes: https://pypi.org/simple, https://us-pyth...",
          "link": "https://zenn.dev/tukiakaritabane/articles/google-colab-pyopenjtalk-error",
          "publishedOn": "2023-04-30T13:21:34.000Z",
          "wordCount": 420,
          "title": "Google Colabでpyopenjtalkがインストールできない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qwuqsLKi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2581%25A7pyopenjtalk%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%2588%25E6%2598%258E%25E3%2581%259F%25E3%2581%25B0%25E3%2581%25AD%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTQzMDZiYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--qwuqsLKi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2581%25A7pyopenjtalk%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%2588%25E6%2598%258E%25E3%2581%259F%25E3%2581%25B0%25E3%2581%25AD%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTQzMDZiYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/4d0574f75bbede",
          "author": "Daphnia",
          "description": "FlaskでWebsocketを構築してみる。目的はPythonでWebsocketを使用してみるということで、サーバーサイドで完結する構成で組んでみます。\n\n 完成\n\n\n 環境\n\n ライブラリ\n\nflask\nflask_socketio\n\n\n 構築\n\n まずはFlaskでHello World\nvenv 環境を使用して、簡単に構築します。\n\n\napp.pyファイル作成\n\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'secret!'\n\n@app.ge...",
          "link": "https://zenn.dev/daphnia/articles/4d0574f75bbede",
          "publishedOn": "2023-04-30T11:40:01.000Z",
          "wordCount": 857,
          "title": "Flaskでwebsocketを試してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rmOgt77M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A7websocket%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--rmOgt77M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A7websocket%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/s1ok69oo/articles/fb86aeacfba310",
          "author": "Shingo Uto",
          "description": "はじめに\n因果推論100ノック（自作）31本目~40本目の問題とPythonのサンプルコードです．\nRDDに関する問題です．問題の不備や内容の誤り等ありましたら，ご指摘いただけますと幸いです．\n\n 設定\nコンビニアプリでクーポンを配布するケースを考えます．\n過去の購買が多いほどアプリ内の累計ポイントが高いとし，累計ポイントが100以上のユーザーにクーポンを配布した結果，クーポン配布期間のユーザーの売上がどれほど増加したかという効果を推定します．\n利用するデータは，下記のファイルです．\nhttps://github.com/s1ok69oo/causal_inference_100kn...",
          "link": "https://zenn.dev/s1ok69oo/articles/fb86aeacfba310",
          "publishedOn": "2023-04-30T10:48:48.000Z",
          "wordCount": 1912,
          "title": "因果推論100本ノック(4)RDD（回帰不連続デザイン）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FwwtErMh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25284%2529RDD%25EF%25BC%2588%25E5%259B%259E%25E5%25B8%25B0%25E4%25B8%258D%25E9%2580%25A3%25E7%25B6%259A%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--FwwtErMh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25284%2529RDD%25EF%25BC%2588%25E5%259B%259E%25E5%25B8%25B0%25E4%25B8%258D%25E9%2580%25A3%25E7%25B6%259A%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Uto%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTQzZGRhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/seiyakitazume/articles/7c0714539ded87",
          "author": "seiyakitazume",
          "description": "株式会社piponではこのような病院検索のサイトを提供しています。\n厚生労働省のデータをグラフ化して、病院ごとの症例数をグラフ化しています。\nhttps://hospital-search.net/index.html\nこのサイトを作った理由としては、こんなエピソードを聞いたからです。\nある方が、舌がんになり、自分の出身大学の附属病院へ行きました。\nしかし、その附属病院には、舌がんの症例数が少なく最適な治療をするまでに時間を要してしまいました。\n結果的にその方は亡くなってしまいました。もし、最適な治療を最初から受けられたら結果はどうなっていたか・・・どうしても考えてしまいます。\nしかし、...",
          "link": "https://zenn.dev/seiyakitazume/articles/7c0714539ded87",
          "publishedOn": "2023-04-30T09:14:10.000Z",
          "wordCount": 223,
          "title": "chatGPTを使って、文章からSQLを生成する方法を試しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IfSZKlNN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%258B%25E3%2582%2589SQL%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--IfSZKlNN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%258B%25E3%2582%2589SQL%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seiyakitazume%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjczZjRjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yagiyuki/articles/download_img_python",
          "author": "yagiyuki",
          "description": "Pythonで指定QPS範囲で画像をダウンロードするプログラムを書きました。\nQPSはQueries Per Secondのことです。\n今回の場合、1秒間にダウンロードする画像件数のことを指します。\nたとえば、10QPSならば1秒間に10枚の画像をダウンロードするという意味になります。\nクロール先のサイトの負荷を軽減するためにQPS上限を指定することは重要です。\n以下がコード例となります。\nimport os\nimport time\nimport requests\n\ndef download_image(url, save_path):\n    try:\n        response...",
          "link": "https://zenn.dev/yagiyuki/articles/download_img_python",
          "publishedOn": "2023-04-30T03:35:07.000Z",
          "wordCount": 574,
          "title": "PythonでQPS上限を指定して画像をダウンロードする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Yh3dm-Ve--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7QPS%25E4%25B8%258A%25E9%2599%2590%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Yh3dm-Ve--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7QPS%25E4%25B8%258A%25E9%2599%2590%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yagiyuki%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNzdjOGIyNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/yj_szk/articles/c049bad009550f",
          "author": "モケケ",
          "description": "何が変わったのか\n\n\nこれしかできなくなった\n\n1日50投稿(メディア含む)\n1日50ツイ消し\n1日自分のツイートに対しての取得25回\n\n\n\n\n検索とか色々全滅した\nインスタとか顔本は投稿用のAPIないし今までのTwitterが異常だったのかもしれない\n\n ただツイートするだけの方法\n\n 準備\npip install tweepy==4.14.0\n\n 認証\n設定ファイル\n\nhoge.ini\n[hoge]\nconsumer_key = \nconsumer_secret = \naccess_key = \naccess_secret = \nbearer_token = \n\nツイート用のv2...",
          "link": "https://zenn.dev/yj_szk/articles/c049bad009550f",
          "publishedOn": "2023-04-30T03:31:56.000Z",
          "wordCount": 691,
          "title": "Twitter APIの無償枠をtweepyからなんとか使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UBpEVh2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25E3%2581%25AE%25E7%2584%25A1%25E5%2584%259F%25E6%259E%25A0%25E3%2582%2592tweepy%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A2%25E3%2582%25B1%25E3%2582%25B1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYTI1ODY0ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--UBpEVh2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25E3%2581%25AE%25E7%2584%25A1%25E5%2584%259F%25E6%259E%25A0%25E3%2582%2592tweepy%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A2%25E3%2582%25B1%25E3%2582%25B1%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYTI1ODY0ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/kaedeee/articles/bf3573cf96f8ba",
          "author": "Kaede Games",
          "description": "エピローグ\n「やりますねぇ！」\n初めて彼の声を聞いたのは、大学一年の夏休み。別大学に進学した、高校の親友の家だった。\n小綺麗な家の中で響き渡る、「イキスギィ！！」僕にとっては、何が「行き過ぎ」ているのかさっぱりだったし、久しぶりに会った友人の代わり様に、驚くばかりだった。\nそんな無垢なワイであったが、変化というものは恐ろしい。なんと現在は、迫真クリエイターとして野獣先輩シリーズを筆頭に数々の大人気アプリ（これもうわかんねぇな）を手がけているのだ。\nほら、見ろよ見ろよ👇\n🍎 AppStore\nhttps://bit.ly/kaedapple\n🍏 GooglePlay\nhttps://b...",
          "link": "https://zenn.dev/kaedeee/articles/bf3573cf96f8ba",
          "publishedOn": "2023-04-30T01:45:37.000Z",
          "wordCount": 287,
          "title": "野獣先輩は抗うつ剤となりうるか。（電気羊はアンドロイドの夢を見るか）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jEt4w6Zc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258E%25E7%258D%25A3%25E5%2585%2588%25E8%25BC%25A9%25E3%2581%25AF%25E6%258A%2597%25E3%2581%2586%25E3%2581%25A4%25E5%2589%25A4%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258A%25E3%2581%2586%25E3%2582%258B%25E3%2581%258B%25E3%2580%2582%25EF%25BC%2588%25E9%259B%25BB%25E6%25B0%2597%25E7%25BE%258A%25E3%2581%25AF%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AD%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AE%25E5%25A4%25A2%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%25E3%2581%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kaede%2520Games%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NzhjZjA2MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--jEt4w6Zc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258E%25E7%258D%25A3%25E5%2585%2588%25E8%25BC%25A9%25E3%2581%25AF%25E6%258A%2597%25E3%2581%2586%25E3%2581%25A4%25E5%2589%25A4%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258A%25E3%2581%2586%25E3%2582%258B%25E3%2581%258B%25E3%2580%2582%25EF%25BC%2588%25E9%259B%25BB%25E6%25B0%2597%25E7%25BE%258A%25E3%2581%25AF%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AD%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AE%25E5%25A4%25A2%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%25E3%2581%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kaede%2520Games%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NzhjZjA2MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/nicktominaga/articles/read_txt_python",
          "author": "Nick",
          "description": "シンプルに、以下のような時系列データを\n\n\n\ntime[s]\ndata\n\n\n\n\n1\n5\n\n\n2\n4\n\n\n3\n3\n\n\n4\n4\n\n\n5\n5\n\n\n\n以下のようなスペース区切りのテキストファイルで扱うとする。\n 1  5  \n 2  4 \n 3  3 \n 4  4 \n 5  5\n\nコードは以下\nimport numpy as np\n\ndata = np.genfromtxt(\"sample.txt\")\n\ndata_x = data[:,0]\ndata_y = data[:,1]\ndata[:,0]の意味は、行全体（左側の：）に沿って、0列目を取ってくる\nという意味。",
          "link": "https://zenn.dev/nicktominaga/articles/read_txt_python",
          "publishedOn": "2023-04-29T15:42:19.000Z",
          "wordCount": 125,
          "title": "pythonでのデータ読み込みメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SDptjzpc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nick%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYzcxZTgzYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--SDptjzpc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nick%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYzcxZTgzYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/andoando/articles/60331fc517c17e",
          "author": "あんどう",
          "description": "はじめに\nこんにちは、あんどうです。今回はPytorchでピザの画像を分類する簡単な画像分類モデルを作成していきたいと思います。\n\n ライブラリ類の準備\nfrom torch import optim\nfrom torch import nn # ネットワークや各種レイヤー\nfrom torch.nn import functional #より詳しいレイヤー\nfrom torch.utils.data import DataLoader\nfrom torchvision import datasets # 画像データセットのモジュール\nfrom torchvision import ...",
          "link": "https://zenn.dev/andoando/articles/60331fc517c17e",
          "publishedOn": "2023-04-29T09:20:00.000Z",
          "wordCount": 3960,
          "title": "Pytorchでピザ判定機を作る🍕",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--50JxjUBm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch%25E3%2581%25A7%25E3%2583%2594%25E3%2582%25B6%25E5%2588%25A4%25E5%25AE%259A%25E6%25A9%259F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--50JxjUBm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pytorch%25E3%2581%25A7%25E3%2583%2594%25E3%2582%25B6%25E5%2588%25A4%25E5%25AE%259A%25E6%25A9%259F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/5ed9ca8c7a63db",
          "author": "hodakam",
          "description": "ある程度のまとまりで能動学習をする\nこの記事に能動学習の一般的な手法について記載しました。その中で次の学習データを決めるときに1つの候補ではなく、複数の候補をまとめて提案するという方法があると書きました。後者はbatch active learningといいます。特に化学実験を行うようなケースでは、次の学習候補を一つ一つ提案するのではなく、ある程度まとまった単位で学習する方が作業面で効率的なケースもあります。\nまた、次に学習すべきデータは予測の不確実性やデータ密度などの指標によって選択され、これらを単独で用いるだけでなく、組み合わせて使うこともあると書きました。\nこれらの両者を組み合...",
          "link": "https://zenn.dev/hodakam/articles/5ed9ca8c7a63db",
          "publishedOn": "2023-04-29T07:30:03.000Z",
          "wordCount": 1195,
          "title": "ランク付けバッチ能動学習（Ranked batch-mode active learning）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--69B9S4TY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%2591%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25EF%25BC%2588Ranked%2520batch-mode%2520active%2520learning%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--69B9S4TY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AF%25E4%25BB%2598%25E3%2581%2591%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25EF%25BC%2588Ranked%2520batch-mode%2520active%2520learning%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hodakam/articles/dc749aab5b95e7",
          "author": "hodakam",
          "description": "効率的に学習データを選ぶための戦略\n機械学習をやっていると、\"モデルの精度を上げるためにはデータが足りないです。増やしましょう！\"的なシチュエーションに遭遇します。このとき、実際どういうデータを増やしたらいいんでしょう？データが少ない場合は、ドメイン知識に明るい人が人力で選ぶという手もありますが、候補データがたくさんある場合は自動でいい感じに選択する必要があります。この”モデルの精度を上げるために自動でいい感じにデータを選択する”ということを実現する手法の一つが能動学習 (active learning)です。\n能動学習は大きく分けて、\n\n次の学習データをどうやって用意するか？(sa...",
          "link": "https://zenn.dev/hodakam/articles/dc749aab5b95e7",
          "publishedOn": "2023-04-29T07:25:55.000Z",
          "wordCount": 309,
          "title": "能動学習を雰囲気で理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tTaZWseP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--tTaZWseP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%25BD%25E5%258B%2595%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodakam%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4MTNmZjhkNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/mul/articles/20230429_01_test",
          "author": "MulciEla",
          "description": "Windows 2019Server(Windows10でも同じ)\nPython 3.7.8\n\n Pythonをインストール\npython-3.7.8.exeを使用してインストール\n今回は諸事情で32bit版をインストールしていますが64bit版でも問題ないはず\n\n ライブラリのインストール\nWindowsサービスということで今回はpywin32を使用する\npip install pywin32\n※もし上記のコマンドで64bit版のpywin32がインストールされてしまう場合は32bit版の.whlファイルを事前に準備し直接指定してインストールを行いましょう\n\n 環境変数\n以下の6つの環...",
          "link": "https://zenn.dev/mul/articles/20230429_01_test",
          "publishedOn": "2023-04-28T18:45:39.000Z",
          "wordCount": 918,
          "title": "PythonでWindows サービス(SocketServer)を作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bOVKgmad--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Windows%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2528SocketServer%2529%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MulciEla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeHZUSlZBTUI4SWNDbVVRNWRUWVhockMzWEZxX2ZsYi0wdkFQYng9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--bOVKgmad--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Windows%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2528SocketServer%2529%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MulciEla%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeHZUSlZBTUI4SWNDbVVRNWRUWVhockMzWEZxX2ZsYi0wdkFQYng9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/dms_sub/articles/39isji929iwj92jd",
          "author": "tuna2134",
          "description": "はじめに\nこの記事はどのような言語を使うと適切なのか、もしくはどのようなライブラリを使うといいのかについて解説します。\n\n まずライブラリーから\nライブラリって似たようなものがたくさんありますよね？そんな時どれつかえばいいのかわからな〜いって感じになるのがよくあります。\n僕は基本以下に注目して、選定しています。\n\n更新頻度が一年以内に行われている、すなわち活発(これに関しては、ライブラリーのコードが古く言語かなんかのアップデートで使えなくなる可能性があるため)\nドキュメントなどがしっかり整備されている(これは説明などどう使えばいいのかわかるやつのが好ましい)\n自分にとって効率的にかけ...",
          "link": "https://zenn.dev/dms_sub/articles/39isji929iwj92jd",
          "publishedOn": "2023-04-28T15:41:39.000Z",
          "wordCount": 98,
          "title": "ライブラリー選定で僕が大事にしていること",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y0fDi6WW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%25A7%25E5%2583%2595%25E3%2581%258C%25E5%25A4%25A7%25E4%25BA%258B%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--y0fDi6WW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%25A7%25E5%2583%2595%25E3%2581%258C%25E5%25A4%25A7%25E4%25BA%258B%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tuna2134%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MzBjZDE5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/maybe_dog/articles/1c37ca514dc35e",
          "author": "おそらく犬",
          "description": "はじめに\nこんにちは。23卒エンジニア1年目のおそらく犬です。\nPythonについて何も分からないのでこの機に勉強しようと思います。\n今回は言語リファレンスの1,2章を見ていきます。なかなかに辛い期間が続きます。\n\n チュートリアル\n言語を学びたいときに初めに見るべきは公式のドキュメントです。間違っても待エソジニアではありません。\nこちらがPython公式チュートリアルです。\nhttps://docs.python.org/ja/3/tutorial/index.html\nそれでは読んでいきましょう。\n\n Pythonチュートリアル\n\nPython は強力で、学びやすいプログラミング...",
          "link": "https://zenn.dev/maybe_dog/articles/1c37ca514dc35e",
          "publishedOn": "2023-04-28T14:51:25.000Z",
          "wordCount": 2163,
          "title": "pythonを完全に理解しよう その1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TqhUMWEG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2520%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%259D%25E3%2582%2589%25E3%2581%258F%25E7%258A%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MTA2ZjRmM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TqhUMWEG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2520%25E3%2581%259D%25E3%2581%25AE1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%259D%25E3%2582%2589%25E3%2581%258F%25E7%258A%25AC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MTA2ZjRmM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/380ca6716a3de6",
          "author": "Daphnia",
          "description": "1. Flaskでアプリ作成\nFlaskアプリの構築についてはこちらを参考にしてください。\nhttps://zenn.dev/daphnia/articles/890a85c7b20250\n\n 2. NginxとFlask通信\n上記で作成したFlaskアプリにアクセスする前段階にNGINXを置いてアクセスをしてみようと思います。\n通信：　クライアント -> NGINX -> Gunicorn -> Flask\n\n ディレクトリ\n.\n├─ flask # 構成は前のブログ参照\n├─ nginx\n    ├─ Dockerfile\n    ├─ nginx.conf\n ...",
          "link": "https://zenn.dev/daphnia/articles/380ca6716a3de6",
          "publishedOn": "2023-04-28T14:26:06.000Z",
          "wordCount": 885,
          "title": "FlaskとNGINXで繋いでみよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5X3n86JF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A8NGINX%25E3%2581%25A7%25E7%25B9%258B%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--5X3n86JF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A8NGINX%25E3%2581%25A7%25E7%25B9%258B%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/koujimachi2023/articles/b6bde79e73dd1d",
          "author": "おいしい",
          "description": "おいたん、怪文書を自動生成しちゃうのら・・・😁\n!\n\n本記事の内容およびコードは稲葉百万鉄氏の「どうぶつの森e+実況プレイ(https://www.nicovideo.jp/mylist/45062007)」のファン作品です。\n「どうぶつの森e+」および稲葉百万鉄氏の「どうぶつの森e+実況プレイ」のネタバレを含みます。\n自然言語処理初心者かつ独学での勉強のため、間違っている点・至らない点あるかと存じます。何卒ご容赦ください。\n\n\n\n Highlights\n\nイナババ怪文書をrinna/japanese-gpt2-mediumで学習\nズッポシむらの住民名や固有の表現を含んだ怪文書の自動...",
          "link": "https://zenn.dev/koujimachi2023/articles/b6bde79e73dd1d",
          "publishedOn": "2023-04-28T14:17:45.000Z",
          "wordCount": 2644,
          "title": "GPT-2をファインチューニングしてイナババ怪文書を自動生成するAIを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2wspSfaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-2%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BAI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--2wspSfaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-2%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%2590%25E3%2583%2590%25E6%2580%25AA%25E6%2596%2587%25E6%259B%25B8%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BAI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNzc4ZWRjYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/daphnia/articles/890a85c7b20250",
          "author": "Daphnia",
          "description": "1. Flaskでアプリを作成してみよう\n\n ディレクトリ\n.\n├─ tamplates\n    ├─ indes.html\n├─ app.py\n├─ Dockerfile\n├─ gunicorn.py\n└─ requirements.txt\n\n ソースコード\napp.pyの内容は以下になります。\n\npy\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.get('/')\ndef index():\n    return render_template('index.html')\n\n\nhtml\n&...",
          "link": "https://zenn.dev/daphnia/articles/890a85c7b20250",
          "publishedOn": "2023-04-28T12:56:31.000Z",
          "wordCount": 888,
          "title": "FlaskアプリのデプロイにGunicornを使用してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--TZqUC_7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25ABGunicorn%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--TZqUC_7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25ABGunicorn%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daphnia%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmZIUHNZTklEQUllWFJrT2hNd2FzLWJnTEsxZHFYWHZKWW5xVTg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/collabostyle/articles/3d0f210c59679e",
          "author": "なるお",
          "description": "初めまして！\nなるおと申します！\n初めてのZenn記事です！\n今回はYOLOというライブラリを使って、画像内のオブジェクト検出と座標取得をしてみたいと思います！\n↓こんなの\n\n\n YOLOって？\n画像や映像ストリーム内のオブジェクト検出アルゴリズムです。\nYou Only Look Onceの頭文字をとっており、人間と同じく、一目見たら物体検出できるという意味らしいです。\nYOLOには複数のバージョンがあり、2023/04/23現在で v8となっています。\n\n 本記事の前提\nYOLO CLIもpipを使ってインストールするため、Pythonのインストールは必須ですね。\nPythonのイン...",
          "link": "https://zenn.dev/collabostyle/articles/3d0f210c59679e",
          "publishedOn": "2023-04-28T10:58:40.000Z",
          "wordCount": 996,
          "title": "YOLOを使ってオブジェクト検出と座標取得をしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ejp5aoV_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YOLO%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%25A8%25E5%25BA%25A7%25E6%25A8%2599%25E5%258F%2596%25E5%25BE%2597%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258A%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YnUzNDNyeWU1dURpcERqZ3o3MzFQM0M4TjBVcnd6cnMzVDJoamM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--Ejp5aoV_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YOLO%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%25A8%25E5%25BA%25A7%25E6%25A8%2599%25E5%258F%2596%25E5%25BE%2597%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258A%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YnUzNDNyeWU1dURpcERqZ3o3MzFQM0M4TjBVcnd6cnMzVDJoamM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/e875348a8af484",
          "author": "よしだ",
          "description": "連載している記事の１つです。以前までの記事を読んでいる前提で書いているので、必要であればNumPyroの記事一覧から各記事を参考にしてください。\n\n はじめに\n今回はベイジアンABテストを扱います。各ケースにおいて適切に事前分布等を設計するなど手間はかかりますが、最終的にBがAより優れている/効果があった確率は◯%というような結果が出てくるので、次のアクションを決める意思決定に向いています。\nベイジアンABテストはいろいろな企業で導入されており以下のように紹介記事も多いので、今回はNumPyroでの実装を簡単にだけ紹介して終わりにします。\nhttps://engineering.merc...",
          "link": "https://zenn.dev/yoshida0312/articles/e875348a8af484",
          "publishedOn": "2023-04-28T10:27:44.000Z",
          "wordCount": 1656,
          "title": "NumPyro：ベイジアンABテスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JZ8XEB2d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25B8%25E3%2582%25A2%25E3%2583%25B3AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--JZ8XEB2d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25B8%25E3%2582%25A2%25E3%2583%25B3AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/carushi/articles/0b74dd27b9aeac",
          "author": "carushi",
          "description": "目的\nAnacondaを使って環境管理をしつつ、Jupyter-labでそれぞれの環境下にあるPythonを別のカーネルとして呼びたい。\nJupyterとそこで呼び出されるカーネル・ターミナルの違いを正しく理解する。\n\n InstallしたはずのパッケージがJupyter上で動かない\nまず作業のために新たな環境を作成し、その環境をactivateした上でJupyter-labを走らせました。しかし、Jupyter上で動くカーネルはJupyterが走っている環境とは必ずしも一致しないので、以下のコマンドを走らせて呼び出されるpythonと、Jupyter notebook上でコードを実...",
          "link": "https://zenn.dev/carushi/articles/0b74dd27b9aeac",
          "publishedOn": "2023-04-28T05:47:21.000Z",
          "wordCount": 213,
          "title": "Jupyter Notebook (Lab)上で目当てのPythonが呼べないときの覚書",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XwuCgMDd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2520Notebook%2520%2528Lab%2529%25E4%25B8%258A%25E3%2581%25A7%25E7%259B%25AE%25E5%25BD%2593%25E3%2581%25A6%25E3%2581%25AEPython%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B9%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E8%25A6%259A%25E6%259B%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:carushi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZjJiZDViMzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--XwuCgMDd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jupyter%2520Notebook%2520%2528Lab%2529%25E4%25B8%258A%25E3%2581%25A7%25E7%259B%25AE%25E5%25BD%2593%25E3%2581%25A6%25E3%2581%25AEPython%25E3%2581%258C%25E5%2591%25BC%25E3%2581%25B9%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E8%25A6%259A%25E6%259B%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:carushi%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4ZjJiZDViMzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/b5e631c4b34edd",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-215 B - log2(N)\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    i = 0\n    while 2 ** (i + 1) <= n:\n        i += 1\n    print(i)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/b5e631c4b34edd",
          "publishedOn": "2023-04-28T03:50:37.000Z",
          "wordCount": 251,
          "title": "［AtCoder］ABC-215｜B - log2(N)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HP_z1HZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CB%2520-%2520log2%2528N%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--HP_z1HZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CB%2520-%2520log2%2528N%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/a5b4756d2cb87d",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-215 A - Your First Judge\n\n\n\n 提出結果\ndef getString():\n    return input()\n\n\ndef main():\n    s = getString()\n\n    print('AC' if s == 'Hello,World!' else 'WA')\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/a5b4756d2cb87d",
          "publishedOn": "2023-04-28T03:50:36.000Z",
          "wordCount": 225,
          "title": "［AtCoder］ABC-215｜A - Your First Judge",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CaHrjLy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CA%2520-%2520Your%2520First%2520Judge%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CaHrjLy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-215%25EF%25BD%259CA%2520-%2520Your%2520First%2520Judge%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/team_delta/articles/3ee759ceda3092",
          "author": "EjiOsa",
          "description": "はじめに\n株式会社DELTA　エンジニアの長田（おさだ）です。\n前回はゴミ箱センサーの開発スタイルについて書かせていただきましたが、今回はゴミ箱センサーの技術的な部分を備忘録として記事にしたいと思います。\nRaspberry Pi Pico Wの工事設計認証（いわゆる技適）の取得および表示手順が完了したため2023年3月27日に日本でも発売されました。\n前回の記事ではRaspberry Pi Picoを使用していましたが、Raspberry Pi Pico WにはWi-Fi機能が追加されており、せっかくなのでゴミ箱センサーにもWi-Fiを使用した機能を追加しています。\n\n\n 開発環境...",
          "link": "https://zenn.dev/team_delta/articles/3ee759ceda3092",
          "publishedOn": "2023-04-28T00:11:15.000Z",
          "wordCount": 3850,
          "title": "Raspberry Pi Pico Wのゴミ箱センサー",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CryVgyJd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Pico%2520W%25E3%2581%25AE%25E3%2582%25B4%25E3%2583%259F%25E7%25AE%25B1%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DELTA%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:EjiOsa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjRiYjM4NGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTAzX3R6cUR5cUx3YVBmcElPSERmMEtMY0VDZm91QWVqZWMxdkJaZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CryVgyJd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Pico%2520W%25E3%2581%25AE%25E3%2582%25B4%25E3%2583%259F%25E7%25AE%25B1%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DELTA%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_135/g_south_west%2Cl_text:notosansjp-medium.otf_34:EjiOsa%2Cx_220%2Cy_84/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjRiYjM4NGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_82/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTAzX3R6cUR5cUx3YVBmcElPSERmMEtMY0VDZm91QWVqZWMxdkJaZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_64/og-base.png"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/099c1c05c81e89",
          "author": "よしだ",
          "description": "はじめに\n今回は次元圧縮としてベイジアン主成分分析とその拡張であるautomatic relevance determination(ARD)付き主成分分析を扱います。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import load_iris\nfrom s...",
          "link": "https://zenn.dev/yoshida0312/articles/099c1c05c81e89",
          "publishedOn": "2023-04-27T16:32:58.000Z",
          "wordCount": 2750,
          "title": "NumPyro：次元圧縮",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--syH9_N8m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A1%25E5%2585%2583%25E5%259C%25A7%25E7%25B8%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--syH9_N8m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A1%25E5%2585%2583%25E5%259C%25A7%25E7%25B8%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/andoando/articles/8505774e50ae4a",
          "author": "あんどう",
          "description": "はじめに\nこんにちは、あんどうです。Kaggleなどでテーブルデータのコンペでは一般にGBDT系のモデル(LightGBMとか)がよく使われますが、深層学習モデルではどのくらいの精度を出すことができるんだろう？と気になったので今回はシンプルなNNを用いてKaggleのSpaceship Titanic（初心者用の常設コンペ）を解いていこうと思います。\n\n データ確認\n今回使っていくデータを確認します。\nBASE = \"path_to_dir\"\n\ntrain = pd.read_csv(BASE+\"train.csv\")\ntest = pd.read_csv(BASE+\"test.cs...",
          "link": "https://zenn.dev/andoando/articles/8505774e50ae4a",
          "publishedOn": "2023-04-27T13:53:48.000Z",
          "wordCount": 3520,
          "title": "[Kaggle]Spaceship titanicをNNで解く①",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--nhpnTIcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKaggle%255DSpaceship%2520titanic%25E3%2582%2592NN%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--nhpnTIcy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKaggle%255DSpaceship%2520titanic%25E3%2582%2592NN%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZDQ1ODZkNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tomlab/books/d4df1e3f76a1ba",
          "author": "tomr",
          "description": "この本では「web3.py」,「Flask」により、簡単なWebアプリケーションを実装し、Web3を体験します。",
          "link": "https://zenn.dev/tomlab/books/d4df1e3f76a1ba",
          "publishedOn": "2023-04-27T06:57:29.000Z",
          "wordCount": 75,
          "title": "【Flask】web3.pyで簡単なWeb3アプリを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--MMcaxYEE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80YjFkNTVlOWEzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--MMcaxYEE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80YjFkNTVlOWEzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/84762a9eb3add5",
          "author": "よしだ",
          "description": "はじめに\n今回は、MCMCで常微分方程式のパラメータを推論する方法を見ていきます。MCMCでパラメータ推論することで物理法則などの事前知識の導入や不確実性を考慮しながら、多変数のパラメータ最適化をバランスよく実施できることが期待できます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport nu...",
          "link": "https://zenn.dev/yoshida0312/articles/84762a9eb3add5",
          "publishedOn": "2023-04-27T05:08:08.000Z",
          "wordCount": 3006,
          "title": "NumPyro：ODE",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3rEUIiwB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:NumPyro%25EF%25BC%259AODE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--3rEUIiwB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:NumPyro%25EF%25BC%259AODE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/e245f9ce297698",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-214 B - How many?\n\n\n\n 提出結果\ndef getIntMap():\n    return map(int, input().split())\n\n\ndef main():\n    s, t = getIntMap()\n\n    c = 0\n    for i in range(s + 1):\n        for j in range(s + 1 - i):\n            for k in range(s + 1 - i - j):\n                if i * j * k <= t:\n           ...",
          "link": "https://zenn.dev/hyperdb/articles/e245f9ce297698",
          "publishedOn": "2023-04-27T04:06:59.000Z",
          "wordCount": 366,
          "title": "［AtCoder］ABC-214｜B - How many?",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--geZgJYxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CB%2520-%2520How%2520many%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--geZgJYxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CB%2520-%2520How%2520many%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/hyperdb/articles/d648bd7fa1fbb5",
          "author": "はいぱぁ",
          "description": "設問ページ\n\n🔗ABC-214 A - New Generation ABC\n\n\n\n 提出結果\ndef getInt():\n    return int(input())\n\n\ndef main():\n    n = getInt()\n\n    print(4 if n <= 125 else 6 if n <= 211 else 8)\n\n\nif __name__ == \"__main__\":\n    main()",
          "link": "https://zenn.dev/hyperdb/articles/d648bd7fa1fbb5",
          "publishedOn": "2023-04-27T04:06:58.000Z",
          "wordCount": 253,
          "title": "［AtCoder］ABC-214｜A - New Generation ABC",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b4ra7sJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CA%2520-%2520New%2520Generation%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--b4ra7sJO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-214%25EF%25BD%259CA%2520-%2520New%2520Generation%2520ABC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/tomlab/books/71f3950b51f319",
          "author": "tomr",
          "description": "この本では、「Flask」および「Real-ESRGAN」を用いて、画像を高解像度化（画質を向上）するWebアプリケーションを実装します。",
          "link": "https://zenn.dev/tomlab/books/71f3950b51f319",
          "publishedOn": "2023-04-27T01:58:49.000Z",
          "wordCount": 77,
          "title": "【Flask】画像を高解像度化するWebアプリケーションを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--QSxAXVkK--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mODg0MzdjYjMzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--QSxAXVkK--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mODg0MzdjYjMzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg"
        },
        {
          "id": "https://zenn.dev/yoshida0312/articles/d0e4c36d94d26b",
          "author": "よしだ",
          "description": "はじめに\n今回は実務でもよくある欠損値がデータにある際の取り扱い方をみていきます。\n\n ライブラリのインポート\nimport os\n\nimport jax.numpy as jnp\nfrom jax import random\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport numpyro\nfrom numpyro.diagnostics import hpdi\nimport numpyro.distributions as dis...",
          "link": "https://zenn.dev/yoshida0312/articles/d0e4c36d94d26b",
          "publishedOn": "2023-04-26T14:31:58.000Z",
          "wordCount": 3327,
          "title": "NumPyro：欠損値の扱い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--dA9r636p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A0%25E6%2590%258D%25E5%2580%25A4%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--dA9r636p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPyro%25EF%25BC%259A%25E6%25AC%25A0%25E6%2590%258D%25E5%2580%25A4%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%2597%25E3%2581%25A0%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwYjhjZjgyOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        },
        {
          "id": "https://zenn.dev/piment/articles/24269616aa9c04",
          "author": "ぴーまん",
          "description": "現状のwhisper、whisper.cpp、faster-whiperを比較してみたいと思います。\nopenai/whisperに、2022年12月にlarge-v2モデルが追加されたり、色々バージョンアップしていたりと公開からいろいろと進化しているようです。\nhttps://github.com/openai/whisper\nCPU向けにC/C++で書かれたバージョンです。Core ML supportだそうですので、Mac向け感が強いです。\nhttps://github.com/ggerganov/whisper.cpp\nCTranslate2でWhisperモデルの書き直して、オ...",
          "link": "https://zenn.dev/piment/articles/24269616aa9c04",
          "publishedOn": "2023-04-26T14:30:58.000Z",
          "wordCount": 674,
          "title": "whisper、whisper.cpp、faster-whisperの比較",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CAUWjswT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:whisper%25E3%2580%2581whisper.cpp%25E3%2580%2581faster-whisper%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png",
            "length": "0",
            "type": "image/png"
          },
          "imageUrl": "https://res.cloudinary.com/zenn/image/upload/s--CAUWjswT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:whisper%25E3%2580%2581whisper.cpp%25E3%2580%2581faster-whisper%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}