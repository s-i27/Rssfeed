<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://s-i27.github.io/Rssfeed/index.html</id>
    <title>osmos::feed</title>
    <updated>2024-01-02T01:16:28.686Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://s-i27.github.io/Rssfeed/index.html"/>
    <link rel="self" href="https://s-i27.github.io/Rssfeed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[最新のMlflowによるLLMの実験管理]]></title>
        <id>https://zenn.dev/pluck/articles/275ab121b86cb5</id>
        <link href="https://zenn.dev/pluck/articles/275ab121b86cb5"/>
        <updated>2024-01-01T16:11:41.000Z</updated>
        <summary type="html"><![CDATA[最近LLMを使った実験をする機会があったので，その実験管理に最新バージョン（2.9.2）のmlflowを使ってみた．そのバージョンではLLMに対するいくつかの便利機能があったので，今回はそれについて書いてみる．

 Mlflow
MLflowは、機械学習のライフサイクルを管理するためのOSSで，モデルのバージョニング、データセットの管理、実験の追跡、デプロイメントなど、機械学習プロジェクトの全体的なプロセスをサポートしている．
https://mlflow.org/
ドキュメントも充実しており，Mlflowの使い方というより，機械学習の実験管理のベストプラクティスを学ぶ際にもとても有用な...]]></summary>
        <author>
            <name>pluck</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SQL クライアントの将来についての期待]]></title>
        <id>https://zenn.dev/yassun7010/articles/9c4894473c053c</id>
        <link href="https://zenn.dev/yassun7010/articles/9c4894473c053c"/>
        <updated>2024-01-01T15:27:47.000Z</updated>
        <summary type="html"><![CDATA[Snowflake や BigQuery をチームで利用する機会があり、自動テストをチーム内で導入したいという目的から Turu を作成しました。

しかし、 Turu が望ましいライブラリかと聞かれると、そうではないと個人的には考えているため、開発に至った動機と理想の姿を記録しておきたいと思います。

 将来的な期待

データベースベンダーはフォーマッタ・リンタ・ローカル開発環境を提供して欲しい
文字列で書いたクエリを Python コード上でフォーマット・リントする方式が成長して欲しい
SQL <-> Python の間のやり取りで必要なのは ORM ではなく型チェック・...]]></summary>
        <author>
            <name>yassun7010</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[映画推薦システム]]></title>
        <id>https://zenn.dev/kawamottyan/articles/5d5700923796cd</id>
        <link href="https://zenn.dev/kawamottyan/articles/5d5700923796cd"/>
        <updated>2024-01-01T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Website: https://kawastream.kawamottyan.com
GitHub：https://github.com/kawamottyan/kawastream


 概要
目的
このプロジェクトは、映画ストリーミングサービスにおいてパーソナライズされた推薦システムの検討と構築を行う。これは、次に選択（クリック）される映画の予測を最適化すること、その予測を長期的に継続できるシステムを構築することによって達成される。
課題

コールドスタート問題
探索と活用のトレードオフ
好みやトレンドの変動性

解決策

セッションベースレコメンドアルゴリズム
バンディットアルゴ...]]></summary>
        <author>
            <name>kawamottyan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【機械学習】バイアスとバリアンスって？]]></title>
        <id>https://zenn.dev/nekoallergy/articles/ml-basic-bias-variance</id>
        <link href="https://zenn.dev/nekoallergy/articles/ml-basic-bias-variance"/>
        <updated>2024-01-01T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[バイアスとバリアンスって？
機械学習では、「バイアス」と「バリアンス」という用語を使います。この2つはモデルが出した結果が、良いか？悪いか？を判断するために、めっちゃ重要な考え方です。

 1. バイアス（Bias）って？
バイアスは、モデルが訓練データの本質的なパターンをどれだけ「見逃しちゃっているか」を示します。


 バイアスの例：
ある学校の生徒の成績を予測するために、単に「出席日数」のみを使用するモデルを考えてみましょう。このモデルは「出席日数が多いほど成績が良い」という単純な仮定に基づいていますが、実際の成績には出席日数以外にも影響する要因（例えば、勉強の質、教材の理解...]]></summary>
        <author>
            <name>NekoAllergy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[辰年だし、Python3+Django+WSL環境構築する]]></title>
        <id>https://zenn.dev/shakevo/articles/b831c80d21364c</id>
        <link href="https://zenn.dev/shakevo/articles/b831c80d21364c"/>
        <updated>2024-01-01T04:20:25.000Z</updated>
        <summary type="html"><![CDATA[初投稿です。しゃけほっけです。
あけましておめでとうございます。
開発用のPCを新調したり、新たにPythonの学習環境を整えたかったり、様々な理由で新品の真っ新な状態から環境構築する場合のToDoについて、結構情報が散っていたので新しくThinkPadを購入する前に記事にまとめることにしました。

 この記事のゴール

Windows上にGitがインストールされている
Windows上にPythonがインストールされている
WIndows上でVSCodeとGitHubが連携できている
WSLが利用可能な状態になっている
WSL上にPython3がインストールされている
WSL上にven...]]></summary>
        <author>
            <name>しゃけほっけ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python×Next.js×PostgreSQLの環境をDockerで構築する]]></title>
        <id>https://zenn.dev/syuya2036/articles/416c8f7a3a4765</id>
        <link href="https://zenn.dev/syuya2036/articles/416c8f7a3a4765"/>
        <updated>2024-01-01T02:43:58.000Z</updated>
        <summary type="html"><![CDATA[はじめに
langchainを使った個人開発をするためにPython×Next.js×PostgreSQLの環境をDockerで構築したので、備忘録として残しておきます。
各環境をDockerfileで定義して、docker-composeで管理するようにしています。

 完成イメージ

 ディレクトリ構成
.
├── front
├── services
│   ├── ai
│   │   ├── api
│   │   └── db
└── docker-compose.yml

front, ai_service(api), ai_dbの3つのコンテナを作成し、これらをdoc...]]></summary>
        <author>
            <name>sh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[基本的なグラフアルゴリズムの解説とPython実装【グラフ入門】]]></title>
        <id>https://zenn.dev/syuya2036/articles/6e77df7083fc4f</id>
        <link href="https://zenn.dev/syuya2036/articles/6e77df7083fc4f"/>
        <updated>2024-01-01T00:03:00.000Z</updated>
        <summary type="html"><![CDATA[グラフアルゴリズム

 初めに
部活のアルゴリズム講座で使った資料を公開します。

 グラフとは
グラフとは、以下の図のように、頂点とそれを結ぶ辺からなる構造のことを言います。

図 1: グラフの例

 グラフの例
グラフってなんの役に立つの？と思うかもしれませんが、実はグラフは私たちの身の回りにたくさん存在しています。

友達関係

友達関係や家族関係、SNS のフォロー関係などは、人を頂点、人と人の関係を辺として、グラフで表すことができます。

道路網

道路網は、交差点を頂点、道路を辺として、グラフで表すことができます。

ネットワーク

ネットワークは、コンピュータを頂点、...]]></summary>
        <author>
            <name>sh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pre-commit で git-secrets を実行する]]></title>
        <id>https://zenn.dev/anieca/articles/6a16e0f3664481</id>
        <link href="https://zenn.dev/anieca/articles/6a16e0f3664481"/>
        <updated>2024-01-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
pre-commit 導入済みの環境に git-secrets を入れようとしたところ少しハマったのでメモを残します。

 問題
pre-commit が導入された環境に新たに git-secrets を導入しようと思いました。
公式のドキュメントに従ってインストールを進めると、すでに pre-commit が存在するため git secrets --install に失敗します。
$ git secrets --install
Installed commit-msg hook to .git/hooks/commit-msg
.git/hooks/pre-commit ...]]></summary>
        <author>
            <name>Anieca</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[平均と分散を漸化式を使って爆速で求める]]></title>
        <id>https://zenn.dev/shundeveloper/articles/a38d310f5e524e</id>
        <link href="https://zenn.dev/shundeveloper/articles/a38d310f5e524e"/>
        <updated>2023-12-31T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[前書き
Databaseの情報から平均と分散を計算するAPIを建てようと考えていた. その時に平均と分散の計算量がo(n)なのを現在の平均分散をキャッシュしておけば早くなることに気づいたので計算をしました.
しかし, そもそも考えているアプリのnが大きくないという条件から素直にDBの関数を使ったほうが保守性が良いということでボツになりました.
この記事はそんな悲しみを供養する記事です.

 平均

\begin{align*}
\bar{x}_n
&=
\frac{1}{n} \sum x_i
\\
&=
\big(
    \frac{1}{n} \sum_{i=1...]]></summary>
        <author>
            <name>Shun</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GRU4Rec]]></title>
        <id>https://zenn.dev/kawamottyan/articles/6cb216877a1cb9</id>
        <link href="https://zenn.dev/kawamottyan/articles/6cb216877a1cb9"/>
        <updated>2023-12-31T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[GRU4Recを用いて、ユーザーが次に見る映画を予測する。

 GRU


h_tをz_tの値によって更新する


h_t = (1 - z_t)h_{t-1} + z_t\tilde{h}_t



h_tを更新する割合を決めるゲートを作成する
z_tが1つ前の隠れ状態と候補の隠れ状態をどの割合で保持するか決める


z_t = \sigma(W_z x_t + U_z h_{t-1})



h_tをリセットする割合を決めるゲートを作成する
r_tがないと過去の隠れ状態をすべて同じように扱う


r_t = \sigma(W_r x_t + U_r h_{t-1})



h_tを更...]]></summary>
        <author>
            <name>kawamottyan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LinUCB]]></title>
        <id>https://zenn.dev/kawamottyan/articles/5dfd4d01641c49</id>
        <link href="https://zenn.dev/kawamottyan/articles/5dfd4d01641c49"/>
        <updated>2023-12-31T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[LinUCBを用いて、ユーザーが次に見る映画のジャンルの探索を行う。

 UCB

\text{UCB} = \bar{x}_j + \sqrt{\frac{2 \ln n}{n_j}}

変数


\bar{x}_j: アーム j の平均報酬

n: これまでの試行回数

n_j: アーム j がこれまでに選ばれた回数

\ln: 自然対数


この式は、アームの平均報酬 \bar{x}_j と試行回数 n を基に、そのアームを選択する際の信頼上限 (Upper Confidence Bound) を計算する。

 LinUCB
原著論文は下記である。
A Contextual-Ban...]]></summary>
        <author>
            <name>kawamottyan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[行列の幾何平均計算の実装]]></title>
        <id>https://zenn.dev/tky823/articles/99a846ba3367f6</id>
        <link href="https://zenn.dev/tky823/articles/99a846ba3367f6"/>
        <updated>2023-12-31T13:47:55.000Z</updated>
        <summary type="html"><![CDATA[正定値Hermite行列に対する幾何平均をNumPyで実装
ブラインド音源分離手法の多チャネル非負値行列因子分解(MNMF)や独立半正定値テンソル分析（IPSDTA）には，半正定値Hermite行列に対する幾何平均の計算が登場します．Pythonの数値計算ライブラリのNumPyでこれらの手法を実装してみました．その際の工夫について共有します．

 正定値Hermite行列に対する幾何平均の定義
2つの正定値Hermite行列\bm{A},\bm{B}\in\mathbb{C}^{N\times N}が与えられたとき，\bm{A}と\bm{B}の幾何平均は，次の式を満たす正定値Herm...]]></summary>
        <author>
            <name>tky823</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PySimpleGUIでつくる数当てゲーム]]></title>
        <id>https://zenn.dev/teke/articles/ac5bda09509a80</id>
        <link href="https://zenn.dev/teke/articles/ac5bda09509a80"/>
        <updated>2023-12-31T13:10:39.000Z</updated>
        <summary type="html"><![CDATA[数当てゲームをPythonで作ろう
今回は、数当てゲーム（Guess the Number）をPythonのPySimpleGUIを使って作ります。
PySimpleGUIは初めて取り扱いましたが、無事完成までもっていくことができたので学習記録として共有したいと思います。
私と同じような初学者の方のお役に立てば幸いです。

 数当てゲーム（Guess the Number）の概要
数当てゲームは、その名の通り、ある正解の数を推測して当てるゲームです。
まず、回答者は正解と思われる数を推測します。その数が正解でない場合、正解の数よりも大きいか小さいかがヒントとして与えられます。
そのヒ...]]></summary>
        <author>
            <name>てけ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Multivector Retrieverで検索用のチャンクとLLMに渡すドキュメントを分離することでRAGの精度向上を目指す]]></title>
        <id>https://zenn.dev/khisa/articles/401f6934aca965</id>
        <link href="https://zenn.dev/khisa/articles/401f6934aca965"/>
        <updated>2023-12-31T11:50:12.000Z</updated>
        <summary type="html"><![CDATA[今回は、RAGにおいて、ベクトル検索に利用するチャンクと、LLMに渡すコンテキストのドキュメントを分離する方法を試してみます。Langchainの MultiVector Retriever を利用します。結果として、それなりの精度向上が実現できました。

 MultiVector Retriever でRAGの検索精度向上を目指す
前回は、ブログ記事のテキストを<h2>タグでチャンク分割することでRAGの精度改善が実現できるかを試しました。元の文章の構造を意識してチャンクを分割することで、Retrieverの精度が向上することを目指したわけです。結果としては、適当に文字数で...]]></summary>
        <author>
            <name>ひさ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HDF5ファイルに多次元配列をC++ (.cpp)で書き込む]]></title>
        <id>https://zenn.dev/capriblue/articles/dd3fd8c86fa276</id>
        <link href="https://zenn.dev/capriblue/articles/dd3fd8c86fa276"/>
        <updated>2023-12-31T06:18:24.000Z</updated>
        <summary type="html"><![CDATA[!
この記事を書いている人は、C++などについて深い知識がありません。実はもっと良い方法があったり、実はやってはいけないやり方を掲載しているかもしれません。ただ以下に示すモチベーションの利用者が何も考えずにHDF5を利用するには苦戦を強いられるため、どなたか同じようなモチベーションの方が少しでも落とし穴にはまることなく実装できればと思い、記事にさせていただきます。コメントなどで指摘いただけると大変助かります。

!
環境

os: ubuntu22.04
shell: bash
cpuコア数: 8
compiler gcc 4.8.5



 HDF5を使うきっかけ
C++で書いたプログ...]]></summary>
        <author>
            <name>capriblue</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[botについてよくある質問]]></title>
        <id>https://zenn.dev/map_universe/articles/482c51c86b03af</id>
        <link href="https://zenn.dev/map_universe/articles/482c51c86b03af"/>
        <updated>2023-12-31T05:15:02.000Z</updated>
        <summary type="html"><![CDATA[1. 動作環境について
Q: どの証券会社を使ってますか？
A: auカブコム証券です。
Q: Pythonですか？Excelですか？
A: Pythonで書いた自動売買プログラムを使用しています。このプログラムは、後述するkabuステーションAPIにリクエストを送ります。Excelは使用していません。
Q: APIが使えるんですか？
A: はい、auカブコム証券が提供するkabuステーションAPIを利用しています。このAPIはローカル型APIで、Windowsマシン上で稼働するkabuステーションがリクエストを処理します。
Q: Windowsマシンが必要ですか？
A: はい、24...]]></summary>
        <author>
            <name>Map</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[llm-jp-evalを試す]]></title>
        <id>https://zenn.dev/toshi_456/articles/957518bef2317b</id>
        <link href="https://zenn.dev/toshi_456/articles/957518bef2317b"/>
        <updated>2023-12-31T04:59:41.000Z</updated>
        <summary type="html"><![CDATA[llm-jp-evalとは
llm-jp-evalとはLLM-JP（LLM勉強会）で作成された複数のデータセットから大規模言語モデルの評価を手軽に行うことができるリポジトリである。
https://github.com/llm-jp/llm-jp-eval
v1.0.0では以下のNLPのタスクが評価できる。

MC(Multi-Choice QA)：jcommonsenseqa
NLI(Natural Language Inference)：jamp、janli、jnli、jsem、jsick
QA(Question Answering)：jemhopqa、niilc
RC(Read...]]></summary>
        <author>
            <name>toshi_456</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu22でifconfigからTXとRXを取得する]]></title>
        <id>https://zenn.dev/kn64872/articles/f13dc4499218d3</id>
        <link href="https://zenn.dev/kn64872/articles/f13dc4499218d3"/>
        <updated>2023-12-31T03:20:05.000Z</updated>
        <summary type="html"><![CDATA[はじめに
ubuntu22のifconfigで出力されるIFのTXとRXの値を取得します。
対象IFの指定は引数で実施しておきます。

複数のIFの表示時は未対応
IPv4のみ対応
ifconfigの出力はディストリビューション毎に大きく違うのでubuntu22専用です。


 実装内容

go.py
import sys
import re

r1 = re.compile('^inet\s+([\d\.]+)\s+netmask\s+([\d\.]+)\s+broadcast\s+([\d\.]+)', re.MULTILINE|re.DOTALL)
r2 = re.compil...]]></summary>
        <author>
            <name>O.Yabuki-213</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[「FFT(高速フーリエ変換)を完全に理解した」になるまで 3(実装編)]]></title>
        <id>https://zenn.dev/masswork/articles/fft-understanding-03</id>
        <link href="https://zenn.dev/masswork/articles/fft-understanding-03"/>
        <updated>2023-12-30T21:30:17.000Z</updated>
        <summary type="html"><![CDATA[まえおき


前回の記事の続きになります。
概要を知りたい方は前々回の記事をよんでください。



 アプリを作ってフーリエ変換を視覚的に確認してみる

ブラウザ上で動作するwebアプリを作ってみました。
こちらより確認できます。




 アプリの解説


サイン波の生成: 3種類の振動をグラフ化します。振幅、周期、減衰、位相の4つのパラメータを変更できます。

合成波の生成: 単振動を合成しグラフ化成します。

周波数軸グラフの生成: FFTを実装し振幅と位相をグラフ化します。

複素平面の視覚化: 指定した周波数でのDFTの結果を複素平面上にグラフ化します。


 実装について
!...]]></summary>
        <author>
            <name>mass</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[連立1階常微分方程式をPythonで数値解析]]></title>
        <id>https://zenn.dev/kitakita3110/articles/45495c7e9d27e1</id>
        <link href="https://zenn.dev/kitakita3110/articles/45495c7e9d27e1"/>
        <updated>2023-12-30T16:17:34.000Z</updated>
        <summary type="html"><![CDATA[タイトルの通り、SciPyを用いて連立1階常微分方程式をPythonで数値解析してみました。
この手の例としてローレンツ方程式を対象とした記事は他にも調べたら出てくるので、今回はUpper Convected Maxwell Model(以下UCMモデル)の構成方程式を対象として、Pythonで数値解析できればと思います。
そもそもですが、1階常微分方程式をPythonで数値解析するのに参考になったサイトを紹介させていただきます。
https://home.hirosaki-u.ac.jp/jupyter/python-sk/
とても丁寧に解説させているので、Pythonに慣れていない方...]]></summary>
        <author>
            <name>YK</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[transformersライブラリを使い大規模言語モデルから尤度を取得する]]></title>
        <id>https://zenn.dev/masahiro_kaneko/articles/c51618dae9be89</id>
        <link href="https://zenn.dev/masahiro_kaneko/articles/c51618dae9be89"/>
        <updated>2023-12-30T16:08:04.000Z</updated>
        <summary type="html"><![CDATA[概要
transformersライブラリを使い大規模言語モデルから尤度を取得する方法を紹介します。コードの全体はここにあります。

 コード
def likelihood(self, batch: torch.Tensor) -> torch.Tensor:
        """
        Calculate the likelihood of the batch.

        Args:
            batch (torch.Tensor): A tensor of shape (batch_size, sequence_length).

    ...]]></summary>
        <author>
            <name>MasahiroKaneko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[絶対虚数単位を使いたくない人のための四元数表現]]></title>
        <id>https://zenn.dev/kaityo256/articles/quaternion_wo_imaginary</id>
        <link href="https://zenn.dev/kaityo256/articles/quaternion_wo_imaginary"/>
        <updated>2023-12-30T13:52:57.000Z</updated>
        <summary type="html"><![CDATA[はじめに
数学では、自乗すると-1になる数iが出てきます。これは存在しない数という意味で、虚数(imaginary number)と呼ばれます。一方、我々が普段使う数は、実際に存在する数という意味で実数(real number)と呼ばれます。そして、実数と虚数が混ざった数を複素数(complex number)といいます。複素数は高次方程式の解を表現するために導入されますが、存在しない数を使うなんて気持ち悪いですよね。そこで、虚数を使わずに、実数だけで話を作ってみましょう。

 一次方程式
変数xの関数、f(x)を考えます。これは、xを決めたらf(x)の値が決まるので、xが入力、f(...]]></summary>
        <author>
            <name>ロボ太</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[行列積状態について考える (7) — QAOA ともつれ量]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-matrix-product07</id>
        <link href="https://zenn.dev/derwind/articles/dwd-matrix-product07"/>
        <updated>2023-12-30T13:39:22.000Z</updated>
        <summary type="html"><![CDATA[目的
QAOA の実験を Qiskit で遊んでみる (21) — QAOA でお絵描き で行った。この時、大規模な QAOA のシミュレーションの可能性の模索のため 25 量子ビットの QAOA を試したのだが、GPU 上のテンソルネットワーク計算で最適化に T4 で 1 時間 35 分かかった。一般的にはテンソルネットワーク計算が向いているのは

浅い回路
もつれの少ない回路

である。浅さはさて置きにしても、これほど時間がかかった理由として、もつれも大きそうな気がするのでこれについて確認したい。
この結果が真の時、QAOA の計算については、cuTensorNet を含めたテン...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[実践的な視点から学ぶ: Pytestを使った自動テストの効率的な書き方]]></title>
        <id>https://zenn.dev/masayan1126/books/d273a6586f3f05</id>
        <link href="https://zenn.dev/masayan1126/books/d273a6586f3f05"/>
        <updated>2023-12-30T09:33:12.000Z</updated>
        <summary type="html"><![CDATA[本記事では、pytestでPythonの単体テストを行う際に最低限押さえておきたいポイントについて紹介しています。本気でpytestで自動テストを書きたいと方向けに、単なるチュートリアルではなく、実用的な観点での説明をしています。ぜひ参考にしてみてください]]></summary>
        <author>
            <name>masayan1126</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Playwright for Python でWebスクレイピングを試してみた！導入と使い方まとめ]]></title>
        <id>https://zenn.dev/aiq_dev/articles/b13a88fe4a7bc7</id>
        <link href="https://zenn.dev/aiq_dev/articles/b13a88fe4a7bc7"/>
        <updated>2023-12-30T06:29:17.000Z</updated>
        <summary type="html"><![CDATA[こんにちは、AIQ株式会社のフロントエンドエンジニアのまさぴょんです！
今回は、Playwright for Python でWebスクレイピングを試してみたので、導入と使い方について、解説します。

 Playwright for Pythonとは？
Playwrightは、エンドツーエンド(E2E)のテストのニーズに対応するために、Microsoftによって、作成されたライブラリです。
E2Eテストのためのツールとして開発されましたが、Webスクレイピングに使用にも適しています。
Playwrightには、次のような特徴があります。
!

Playwrightは、Chromium, ...]]></summary>
        <author>
            <name>まさぴょん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pandas DataFrameで、条件に合う列の前後の列を取りたいとき]]></title>
        <id>https://zenn.dev/masatoyamamoto/articles/ede23603ea1f4b</id>
        <link href="https://zenn.dev/masatoyamamoto/articles/ede23603ea1f4b"/>
        <updated>2023-12-30T03:24:10.000Z</updated>
        <summary type="html"><![CDATA[金融時系列データを使用しているときによくあるのが、収益率の異常値を見つけて、その前後の価格を確認したいとき。
まずは条件に合う列を抜き出すが、前後が取れない。
df[df["ret"]>100]
そこで、indexに変換してから一つ足し引きしてやる
indices = df[df["ret"]>100].index
df.loc[indices-1,:]]]></summary>
        <author>
            <name>Masato Max Yamamoto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[対話的にChat Completions APIにテストコードを書いてもらう]]></title>
        <id>https://zenn.dev/fusic/articles/c93efa06148a7c</id>
        <link href="https://zenn.dev/fusic/articles/c93efa06148a7c"/>
        <updated>2023-12-29T16:06:05.000Z</updated>
        <summary type="html"><![CDATA[導入
Fusic Advent Calendar 2023の11日目を担当します@seike460です!
信じられないくらい遅れました！ごめんなさい！
OpenAI流行ってますね。
テストコードはOpenAIに任せると精度が高いという話を聞いたので、
テストコードを書いてもらおうと思います。
opt-outを気にしなくて良いChat Completions APIに、
CLIで読み込んだファイルを投げてサクッとテストコード書いてもらいます。
そもそもこれじゃテストコード書きづらいよ！って状態の時もあると思うので、
テストコードがかけるようにリファクタリングも行います。

 要素の解説...]]></summary>
        <author>
            <name>seike460</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WSLにMetaTrader5をインストールする]]></title>
        <id>https://zenn.dev/yiefhouse/articles/ea85ded564f7bd</id>
        <link href="https://zenn.dev/yiefhouse/articles/ea85ded564f7bd"/>
        <updated>2023-12-29T07:41:47.000Z</updated>
        <summary type="html"><![CDATA[はじめに
FXの自動売買ツールを作ってみようと思いMetaTrader5(MT5)のインストールから始めたのですが、思いのほか苦戦したので一旦ここまでで記録しておこうと思います。

 環境

Windows10
WSL2(Ubuntu22.04)


 インストールのポイント

Pythonのmt5パッケージはWindows用なので、macやlinuxでは使用できません。
そのため、まずはwineを使ってWindows用Pythonをインストールする必要があります。


 インストールの流れ

Ubuntuにwineをインストールする
Ubuntuにデスクトップ環境をインストールする...]]></summary>
        <author>
            <name>yhfs</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonで咄嗟に実装できて便利だった機能3選]]></title>
        <id>https://zenn.dev/sigmai_tech/articles/202312-first-project</id>
        <link href="https://zenn.dev/sigmai_tech/articles/202312-first-project"/>
        <updated>2023-12-29T03:32:30.000Z</updated>
        <summary type="html"><![CDATA[こんにちは。株式会社シグマアイリサーチャーの@k_arakiです。
今回は初めて携わったアプリ開発で簡単に導入できて便利だった機能を3つ紹介します。

 はじめに
この記事を書くきっかけとなった体験についてお話しします。
入社してまもなく、ある企業に対する業務サポートの効果検証プロジェクトに参加しました。
まず初めにサポート用のプログラムだけ作成し、過去のデータを用いて有効性を調べました。
その次のステップである試験運用を行うために簡易的なアプリ化が必要でした。
今回の話はこの時の開発に関するものです。
本体のプログラムはそれまでの検証で既に出来上がっているため、アプリとしての開発項目は...]]></summary>
        <author>
            <name>荒木健介</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LLM速習ログ]]></title>
        <id>https://zenn.dev/antyuntyun/articles/learning_llm</id>
        <link href="https://zenn.dev/antyuntyun/articles/learning_llm"/>
        <updated>2023-12-29T03:19:06.000Z</updated>
        <summary type="html"><![CDATA[はじめに
仕事・プライベート上での様々な環境変化や私自身の変化があり、最近ではコード書かない(書けない?)おじさんになってしまいつつありますが、年末年始休暇のタイミングで LLM 周りを学んで時代にキャッチアップしたくなったので、備忘として残します。

 LLM 概要をサクッと学ぶ
NTT データさんの記事。概要理解のための資料としてとてもわかりやすいです。
https://speakerdeck.com/kyoun/llm-introduction-ses2023
tty さんの連載記事。実装例も掲載されており、とてもわかりやすいです。
https://zenn.dev/ttya1...]]></summary>
        <author>
            <name>antyuntyun</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[深層学習モデルでバーチャルスライドのSemantic segmentation]]></title>
        <id>https://zenn.dev/rchiji/books/f3a5aad6536207</id>
        <link href="https://zenn.dev/rchiji/books/f3a5aad6536207"/>
        <updated>2023-12-29T02:42:44.000Z</updated>
        <summary type="html"><![CDATA[「Semantic segmentaion」と調べれば、街中の写真から人、車、道、木などにラベル（マスク）を付けて分類している画像が出てくるだろう。このようにSemantic segmentationでは同じ意味を持つピクセルを同じ値に分類する。

Semantic segmentationの深層学習モデルでは入力画像と同じサイズのラベル画像を返す。U-Netはその代表例である。医学画像ではレントゲンやMRI画像から腫瘍部の検出に使われる例が多い。


本書では病理画像全体から複数の構造をSemantic segmentationで分類する方法を紹介する。次に示すのが一連のワークフローである。
「QuPathでラベル付け ➔ TensorFlowでSemantic segmentationモデルの訓練 ➔ バーチャルスライドでSemantic segmentation ➔ （必要であれば）再ラベリングと再学習」

※ 病理画像はバーチャルスライドシステムで取得したものを想定しているが、巨大なtiffファイル等でも同様のアプローチができる。

巨大な画像はそのままでは入力には扱えない。そこで画像を小さくタイル状に分割してモデルの学習、予測に使用する。「タイル画像の切り貼り」、「タイル端に存在する構造の扱い」など、モデルを通す前後の処理も必須になる。

バーチャルスライドデータの操作、学習用画像の用意、予測結果の可視化にはフリーソフトのQuPathを使用する。本書でも必要なQuPathスクリプトは紹介するが不足であれば以下の本を参照してほしい。
https://zenn.dev/rchiji/books/51fbb88213582d

⚫: QuPath
⚪: Python
🔴: Tensorflow
🧱: タイル画像処理

--------------------
機械学習用のローカル環境としては以下を使用した。
・Windows 11（16コア/32スレッド、128GBメモリ、CドライブにM2.SSD）
・Tensorflow 2.10
・NVIDIA GeForce RTX3090
--------------------

231229 初版を公開します。ネットワーク構造を自作するところも今後記載予定です。]]></summary>
        <author>
            <name>Ryota Chijimatsu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jupyter Notebook と txt で開発するときに気を付けていることまとめ]]></title>
        <id>https://zenn.dev/placeless/articles/zenn_article-13</id>
        <link href="https://zenn.dev/placeless/articles/zenn_article-13"/>
        <updated>2023-12-28T18:37:39.000Z</updated>
        <summary type="html"><![CDATA[絵文字はランダム絵文字です．テーマに合う絵文字が思いつかなかった．許してね

 何があったか

Jupyter Notebook 上で

%pip install -r requirements.txt

を回す際，延々と pip install が回る事態が発生した


 原因

編集した requirements.txt を VSCode 上のタブでそのまま開いていた
同期がうまくいっていなかった，もしくは更新が反映されていなかった．
VSCode が自動保存効かせてる関係上，タブを閉じないと txt に上書き保存されないという仕様が存在しそう


 余談

VSCode 上から拡張...]]></summary>
        <author>
            <name>Yoshitaka Naraoka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker版RcloneでGoogleDriveの認証情報を取得・rcloneコマンド実行 (headless版)]]></title>
        <id>https://zenn.dev/nondescript/articles/c09e1af0726c60</id>
        <link href="https://zenn.dev/nondescript/articles/c09e1af0726c60"/>
        <updated>2023-12-28T16:39:53.000Z</updated>
        <summary type="html"><![CDATA[Docker版RcloneでGoogleDriveの認証情報を取得・rcloneコマンド実行のheadless版

 TL;DR

Seleniumをheadless起動で認証操作


 背景

何が何でもGUIを使いたくない
自動認証したい

※圧倒的にGUI手動認証のほうが楽なのでお勧めできない。

 手順



 認証自動化Pythonスクリプトの準備


詳細後述

auto_rclone.py
import os
import shutil
from argparse import ArgumentParser, Namespace
from signal import SIG...]]></summary>
        <author>
            <name>素人の戯言</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GyazoのAPIが最強すぎる]]></title>
        <id>https://zenn.dev/k1ut/articles/55653e755d1b34</id>
        <link href="https://zenn.dev/k1ut/articles/55653e755d1b34"/>
        <updated>2023-12-28T07:45:51.000Z</updated>
        <summary type="html"><![CDATA[GyazoのAPIが最強🔥
Gyazoといえば、スクリーンショットを簡単に共有できるという印象の方が多いでしょう。
スクリーンショットだけではなく、未踏ジュニア23年に採択された、「AI 4コマメーカー 」は、GyazoのAPIを最大限に活用しています。
しかし、Gyazoについての情報やドキュメントも詳しく解説されていないので、本記事では 導入からメタデータの活用 まで紹介します。
GyazoAPIの使用はかなり簡単です🙆‍♂️

 そもそも「AI 4コマメーカー」とは🤔

「AI 4コマメーカー」は AI があなたの描いた絵を活用し、4コマ漫画を作成するwebアプリケーションです...]]></summary>
        <author>
            <name>kai tanaka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unity ML-Agents の Python環境を一括でセットアップする]]></title>
        <id>https://zenn.dev/tsubasahizono/articles/1c091f8c43802c</id>
        <link href="https://zenn.dev/tsubasahizono/articles/1c091f8c43802c"/>
        <updated>2023-12-28T04:57:05.000Z</updated>
        <summary type="html"><![CDATA[概要
UnityでML-Agentsを利用する際に毎回行うPython環境の構築が面倒だったので
ダウンロードから仮想環境構築まで一括で行うシェルスクリプトを作りました。
仮想環境を作りたいフォルダ内でsource setup.shのように実行してください。
※現在のML-Agentsの最新リリースではPython3.10.x以上を使う必要があります。
ML-Agents公式GitHub

 シェルスクリプトの内容
#!bin/zsh

python --version
echo "Start mlenv setup"
python -m venv env
echo "venv is...]]></summary>
        <author>
            <name>Tsubasa Hizono</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Snowflake] Streamlitでタスク管理ダッシュボードを作ってみた]]></title>
        <id>https://zenn.dev/shinoki/articles/c5ead8253e71e9</id>
        <link href="https://zenn.dev/shinoki/articles/c5ead8253e71e9"/>
        <updated>2023-12-28T02:48:42.000Z</updated>
        <summary type="html"><![CDATA[はじめに
私が所属しているライフイズテックのデータ基盤グループでは、ELT処理でSnowflake Taskを使っています。複数のSnowflake Taskを利用するにあたって、Task間の依存関係の解決のためにタスクに有向非巡回グラフ（DAG）を設定しています。
DAG内の子タスクを編集する場合にルートタスクを一時停止にする必要がありますが、ルートタスクの再開することを忘れてしまうという事象が発生したことがありました。
そこで各タスクの状態を確認できるようにする必要が発生しました。
確認する方法で下記の2点の要件を満たすために、Streamlitでダッシュボードをつくることにしま...]]></summary>
        <author>
            <name>shinoki</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[好きなファイルサイズでダミー画像を作りたい]]></title>
        <id>https://zenn.dev/srgr0/articles/generate-specified-size-image</id>
        <link href="https://zenn.dev/srgr0/articles/generate-specified-size-image"/>
        <updated>2023-12-27T15:09:12.000Z</updated>
        <summary type="html"><![CDATA[!
この記事は初心者向けです。NumPyとPillowをご存じの方は、リポジトリ(こちら)をご利用ください。


 前置き
ソフトウェアやサービスのテストでは、特定のファイルサイズのダミー画像を用意しなければならないケースがあります。
検索エンジンで「ダミー画像　ファイルサイズ指定」などと検索すると幾つかの記事がヒットしますが、多くの方法では画像が開けなくなってしまったり、ファイルサイズの上限があったり、メタデータの削除やロスレス圧縮でファイルサイズが戻ってしまったりするなど、問題があります。
今回は、任意のサイズで実際に開くことができロスレス圧縮にも耐える画像を作成するスクリプトを作成...]]></summary>
        <author>
            <name>Srgr0</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[StreamlitアプリをAzureのAppServiceで動かす]]></title>
        <id>https://zenn.dev/nomhiro/articles/deploy-streamlit-to-appservice</id>
        <link href="https://zenn.dev/nomhiro/articles/deploy-streamlit-to-appservice"/>
        <updated>2023-12-27T13:52:41.000Z</updated>
        <summary type="html"><![CDATA[StreamlitアプリをAzureのAppServiceで動かす

 紹介すること／紹介しないこと

こちらの記事では、OpenAIを簡単に検証するためにStreamlitを使う方法を紹介しました。紹介したStreamlitアプリをAzureのAppServiceにデプロイしWebアプリとして公開する方法を紹介します。


 AzureAppSericeとは

AzureAppSericeとは、Azure上でWebアプリケーションをホストするためのサービスです。
AzureAppSericeは、AzureのPaaSサービスの一つで、サーバーの管理やOSの管理などをAzureが行って...]]></summary>
        <author>
            <name>しろくま</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VSCode(Cursor)でJupyter使うと "(二重引用符)の後ろにArithmeticError が補完されて世界の法則が乱れる]]></title>
        <id>https://zenn.dev/galapagos/articles/ce9a8d0e3f9e7d</id>
        <link href="https://zenn.dev/galapagos/articles/ce9a8d0e3f9e7d"/>
        <updated>2023-12-27T11:04:30.000Z</updated>
        <summary type="html"><![CDATA[VSCodeで不意に現れる'ArithmeticError'

こいつなんなの？？ 消す方法がわからん、むっっきいいいいいいいいいいいいいいいいい！！！となっていた波浪です、お疲れ様です。

 滅せよ ArithmeticError
はい、早速ですがこいつを消す方法。

⌘+, で設定を開き、検索窓に Python Completion Trigger Characters を入れると オートコンプリートをトリガーする文字列のデフォルトが .%'"となっていることが確認できます。
あ、これよく見ると、入ってますね、シングルクォーテーションとダブルクォーテーション。
というわけでシング...]]></summary>
        <author>
            <name>hellohazime</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ruby公式「Pythonとの違い」から学ぶ、Pythonの「Rubyとの違い」]]></title>
        <id>https://zenn.dev/open8/articles/to-python-from-ruby</id>
        <link href="https://zenn.dev/open8/articles/to-python-from-ruby"/>
        <updated>2023-12-27T08:20:56.000Z</updated>
        <summary type="html"><![CDATA[はじめに
隔週で開催される社内勉強会で、Python の基本的な言語仕様を紹介するために Ruby 公式の「PythonからRubyへ」というドキュメントを用いた回が意外に盛り上がったので記事にします。
https://www.ruby-lang.org/ja/documentation/ruby-from-other-languages/to-ruby-from-python/
Ruby コミュニティのメンバーによって運営されている Ruby 公式サイトに掲載されているドキュメントで、Python 使いが Ruby と Python の言語仕様の違いを理解するのにぴったりな内容とな...]]></summary>
        <author>
            <name>Kento Toriumi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】WikipediaのXMLファイルのInfoboxから家族を抜き出す]]></title>
        <id>https://zenn.dev/haru330/articles/39b5065c99c99a</id>
        <link href="https://zenn.dev/haru330/articles/39b5065c99c99a"/>
        <updated>2023-12-27T02:35:53.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Wikipediaの人物ごとのページには、Infoboxという、情報がまとまっているものがあります。
基本的なパラメータは、以下に載っているので参照してください。
https://ja.wikipedia.org/wiki/Template:Infobox_人物
このようなInfoboxから、家族の情報を抜き出すためのコードです。
Bing AIに質問し、コードを考えてもらいました。
XML内のInfoboxの例（マルティン・ルターの場合）{{Infobox Christian leader
| type = 
| honorific-prefix = 
| name = ...]]></summary>
        <author>
            <name>はる</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【GoとPython】異なる言語、共通する哲学]]></title>
        <id>https://zenn.dev/urakawa_jinsei/articles/6a121de1908dd1</id>
        <link href="https://zenn.dev/urakawa_jinsei/articles/6a121de1908dd1"/>
        <updated>2023-12-27T02:31:09.000Z</updated>
        <summary type="html"><![CDATA[この記事はAndrew Gerrand氏のGo and the Zen of Python[1]を訳したものです。

 "Beautiful is better than ugly."
Goは、C言語を彷彿とさせる軽量で規則的な構文を持っている
しかし、美しいか醜いかは、個人に依存する

 "Simple is better than complex."
メソッドはただの関数であり、特別な場所は無い
thisやselfなどのキーワードはなく、レシーバは他の関数引数と同じようなものである
type Vector struct {
    X, Y float64
}

func (v Ve...]]></summary>
        <author>
            <name>浦川 仁成</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Powertools for AWS (Python) を用いて Cognito ユーザープールのカスタマイズする]]></title>
        <id>https://zenn.dev/todoker_blog/articles/91ac3ebcb1fe0d</id>
        <link href="https://zenn.dev/todoker_blog/articles/91ac3ebcb1fe0d"/>
        <updated>2023-12-27T01:47:00.000Z</updated>
        <summary type="html"><![CDATA[こんにちは。hayata-yamamoto です。
今回は、Powertools for AWS (Python) を用いて、Cognito のユーザープールのイベントで動く Lambda 関数を実装する方法を共有します。ユーザー認証に Cognito を利用していると、時折追加の処理を実装したいと思うシーンが出てきます。そのような場合に、Lambda を用いて追加の処理を実装するのですが、Powertools を用いるとどのようなメリットがあるのかをご紹介します。
実際に弊社でも、Powertools を用いて各Cognitoのトリガーを実装しており、以前に比べて格段に実装がわかりやす...]]></summary>
        <author>
            <name>山本隼汰 | Hayata Yamamoto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpreadSheetをPython（Colab）で色々と動かしてみる]]></title>
        <id>https://zenn.dev/paxdare_labo/articles/180fc4e3366707</id>
        <link href="https://zenn.dev/paxdare_labo/articles/180fc4e3366707"/>
        <updated>2023-12-27T01:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
SpreadSheetを、自動で操作したり、大量に作成したりということが必要な場面があると思います。
今回は、それをPython（Colab）上で実施するためのTIPs的にまとめていきます。

 環境設定
gspreadのライブラリが必要なのでインストールします
!pip install gspread==4.0.0
from google.colab import auth, drive
from google.auth import default

import pandas as pd
import gspread

from googleapiclient imp...]]></summary>
        <author>
            <name>PAX dare Labo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Boothの宛名印刷用CSVからクリックポストのまとめ申し込みCSVを書き出すスクリプト]]></title>
        <id>https://zenn.dev/takashicompany/articles/6c71b417e80982</id>
        <link href="https://zenn.dev/takashicompany/articles/6c71b417e80982"/>
        <updated>2023-12-26T17:04:32.000Z</updated>
        <summary type="html"><![CDATA[ChatGPTと一緒に作った。
% python booth2clickpost.py <Boothの宛名印刷用CSVのファイルパス> [クリックポストのまとめ申し込みのCSVの書き出しパス] で動作します。
書き出しパスは省略すると Boothの宛名印刷用CSVのパス_clickpost.csv で書き出されます。
おそらく問題ないかと思いますが、このスクリプトを用いたことでトラブルや不利益を被った際の責任は負いかねます。
使用の際は問題ないことを確認の上ご利用ください🙏]]></summary>
        <author>
            <name>takashicompany</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AppStoreのレビューをPythonで取得してExcelに出力する方法]]></title>
        <id>https://zenn.dev/gunjo/articles/8195f0ff51b8d7</id>
        <link href="https://zenn.dev/gunjo/articles/8195f0ff51b8d7"/>
        <updated>2023-12-26T13:46:40.000Z</updated>
        <summary type="html"><![CDATA[はじめに
AppStoreのレビューを取得したいと思い、以下の記事を参考にPythonで実装してみました。
https://qiita.com/kitaharamikiya/items/3654286aedb605611296

 IDの取得
まずはAppStoreのIDを取得します。AppStoreのURLを開いた際にURLに含まれているIDを取得します。
例えば、以下のマクドナルドのURLの場合、idの後にある413618155がIDになります。


 必要ライブラリのインストール
HTTPリクエストを送るためにrequestsライブラリを使用し、Excelファイルに書き込むため...]]></summary>
        <author>
            <name>むさし</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Maya] SplineIKで伸びるリグの実装]]></title>
        <id>https://zenn.dev/pytokyo/articles/203db8767526d5</id>
        <link href="https://zenn.dev/pytokyo/articles/203db8767526d5"/>
        <updated>2023-12-26T13:13:24.000Z</updated>
        <summary type="html"><![CDATA[概要
Mayaで伸びる多関節のSplineIKリグの実装をしました。作ったアニメーションはUnityで動かす想定です。またリグのセットアップを半自動化できるように、スクリプトも書きましたので参考にしていただけますと幸いです。


 SplineIKを使った多関節リグを作る
まずSplineIKを使った多関節のリグを作る方法を解説します。
こういった多関節で動く想定のモデルを用意します。

こういった選択した頂点からボーンを作るスクリプトを用意しておくと、正確に骨を用意することができます。
import maya.cmds as cmds

selected_verts = cmds....]]></summary>
        <author>
            <name>yohawing</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python の pip で いっぱい library を install したいときの方法]]></title>
        <id>https://zenn.dev/placeless/articles/zenn_article-12</id>
        <link href="https://zenn.dev/placeless/articles/zenn_article-12"/>
        <updated>2023-12-26T10:02:13.000Z</updated>
        <summary type="html"><![CDATA[いきなり参考文献

「pip install 多数ライブラリ」とググると
pipを用いて、複数のPythonライブラリを一括インストールする
Python Tips: ライブラリをまとめてインストールしたい
Pythonパッケージをpipコマンドで一括インストールする

※情報が古い可能性があるので，その辺りは各位入念に自ら調べてください．

 なぜそうなったかというと

Google Colab から GitHub に移植した Jupyter Notebook のリファクタリングでもするか……と思って
まずはライブラリを最新にしようとした
そしたらコマンドがすごく長くなった
これま...]]></summary>
        <author>
            <name>Yoshitaka Naraoka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonで人物の名寄せをしてみる]]></title>
        <id>https://zenn.dev/haru330/articles/f502bef65e0de7</id>
        <link href="https://zenn.dev/haru330/articles/f502bef65e0de7"/>
        <updated>2023-12-26T09:56:02.000Z</updated>
        <summary type="html"><![CDATA[はじめに
自然言語処理をしていたら、人物の名寄せをしないといけなくなりました。
ただ、全部の名寄せをしたいわけではなく、特定の漫画の一部分のみを名寄せをしたいだけです。
その方法をメモしておきます。

 実行環境
!
Python 3.10.12
spacy 3.6.1
WSL2


 spacyを用いたコード
import spacy
# spaCyの日本語モデルをロードします
nlp = spacy.load('ja_ginza')
# フルネームのリストを定義します
full_names = ["工藤新一", "毛利蘭", "怪盗キッド","江戸川コナン"]
# 名前のマッピン...]]></summary>
        <author>
            <name>はる</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonのパッケージ管理ツールの私的まとめ(2023)]]></title>
        <id>https://zenn.dev/festiva1300/articles/e62f6732f6327e</id>
        <link href="https://zenn.dev/festiva1300/articles/e62f6732f6327e"/>
        <updated>2023-12-25T23:26:30.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Pythonのパッケージ管理ツールについて調べる機会があったので備忘録として残しておきます。
なお、私は主にアプリケーション開発でPythonを使っているので、データサイエンス系で利用されることが多いAnacondaについては記載していません。

 パッケージ管理ツールの機能
Pythonのパッケージ管理ツールは以下のような機能を持っていることが多いです。


パッケージインストール
Pythonのパッケージをインストールする機能です。


パッケージ仮想化
パッケージをユーザーやプロジェクトごとに管理する機能です。
Pythonのパッケージは通常、実行環境にグローバルイン...]]></summary>
        <author>
            <name>festiva1300</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Webの最新データで更新可能な技術用語のデータベースを構築する実験]]></title>
        <id>https://zenn.dev/takeaship/articles/create_composable_tech_term_database</id>
        <link href="https://zenn.dev/takeaship/articles/create_composable_tech_term_database"/>
        <updated>2023-12-25T17:02:36.000Z</updated>
        <summary type="html"><![CDATA[これは LAPRAS Advent Calendar 2023 の 5 日目のエントリーです。
LAPRAS 株式会社 で開発者をしている takeaship と申します。

 TL;DR

技術タグを検索や選択できる機能を作るとき、裏側のタグデータを構築・維持するのは大変
既存のサービスで使えそうなものはなかったため、自前で構築できるか検証した
ほどほどの手間で、そこそこ使えて自動更新できる技術用語データが構築できた


 技術タグのデータベースをどうやって構築するか問題
これは幣サービス・LAPRAS の求人検索画面で、技術タグを選択して求人を検索できます。

Zenn でも、トピッ...]]></summary>
        <author>
            <name>takeaship</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[最近話題になっているPythonリンター兼フォーマッターのRuffを試してみた]]></title>
        <id>https://zenn.dev/zhuo_cheng/articles/2e3570219ff8ee</id>
        <link href="https://zenn.dev/zhuo_cheng/articles/2e3570219ff8ee"/>
        <updated>2023-12-25T13:31:47.000Z</updated>
        <summary type="html"><![CDATA[Ruffとは

Ruffは2022年8月にリリースされた、Rust言語で書かれたPythonのリンター兼フォーマッター。
既存のリンターとフォーマッター（Flake8やBlackなど）に比べて数十倍速い。
Pytorch、FastAPI、Amazonを始めとする数多くの有名なOSSや企業が導入。
リリースから1年半弱で21k以上のスター⭐を獲得。 


https://github.com/astral-sh/ruff

 なぜ流行っているか
主に以下の3点が大きいでしょう。

圧倒的な速さ
さまざまなツールを１つにまとめること
設定はpyproject.tomlだけで済む


 R...]]></summary>
        <author>
            <name>オレンジ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonによるLINE Botローカル開発環境構築(Docker,ngrok)]]></title>
        <id>https://zenn.dev/yuki0920/articles/6dba4e6ab9ca89</id>
        <link href="https://zenn.dev/yuki0920/articles/6dba4e6ab9ca89"/>
        <updated>2023-12-25T12:40:46.000Z</updated>
        <summary type="html"><![CDATA[LINE Messaging APIを使用したLINE Botの実装をPythonで行っています。
本番環境はFaas(Cloud Functions)かHerokuあたりを利用予定です。
開発生産性を考えると、本番環境にデプロイする前にローカルで動作確認できるようにし、アジリティ高く開発したいですよね。
また、Pythonは自分の経験上ローカルへのインストールの罠が多いため、Docker環境を利用します。
そこで本記事では、PythonによるLINE Botローカル開発環境構築の解説をします。

 前提
LINE Bot開発における下記の基本的な準備を終えていることを前提とします。

...]]></summary>
        <author>
            <name>yuki0920</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebSocket などの JSON を BigQuery に無限に溜め込むサンプル]]></title>
        <id>https://zenn.dev/mtkn1/articles/bigquery-subscription</id>
        <link href="https://zenn.dev/mtkn1/articles/bigquery-subscription"/>
        <updated>2023-12-25T12:37:50.000Z</updated>
        <summary type="html"><![CDATA[本記事は 仮想通貨botter Advent Calendar 2023 25 日目の記事です。
https://qiita.com/advent-calendar/2023/botter
この記事では Google Cloud Pub/Sub BigQuery サブスクリプションを利用して WebSocket などからの大量の JSON データをリアルタイムで BigQuery に溜め込む 為のサンプルを紹介します。
この記事を参考にして頂くことで、様々な取引所の WebSocket で配信されるデータ (約定など) を 手っ取り早く / なんでも / 雑に / 無限に BigQuer...]]></summary>
        <author>
            <name>まちゅけん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【型好きなあなたへ】Python-Type-Challengesのすゝめ]]></title>
        <id>https://zenn.dev/raku/articles/dc3ff5bfef1232</id>
        <link href="https://zenn.dev/raku/articles/dc3ff5bfef1232"/>
        <updated>2023-12-25T12:29:48.000Z</updated>
        <summary type="html"><![CDATA[はじめに
先日、こんな素敵な記事を目にしました
https://zenn.dev/kakekakemiya/articles/2d7a3384a5faf0
さすがTypeScriptさん。型定義の自由度が非常に高く、色んな表現が出来ます。
この問題一通りやれば、TypeScriptの型定義もマスター出来るんですかね。
ところで、実は型なし言語のPythonにも型定義が存在します。
https://docs.python.org/3/library/typing.html
TypeScriptやJavaのように、コンパイルエラーを発生させるような強制力はないのですが、VSCodeを始め...]]></summary>
        <author>
            <name>raku</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[意外とつまづく？Pythonの辞書型の値変更のあれこれ]]></title>
        <id>https://zenn.dev/sergicalsix/articles/6092bd1defd384</id>
        <link href="https://zenn.dev/sergicalsix/articles/6092bd1defd384"/>
        <updated>2023-12-25T12:22:56.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Pythonの辞書型の値を変更したいと思うことは、しばしばあると思います。
ただPythonの辞書型の値の変更は、意外とハマる部分があります。
今回はPythonの辞書型の値の変更を網羅的に解説してきます。

 辞書型のvalueの変更
辞書型の値の変更は比較的簡単です。
値の破壊的な代入ならば、以下のように簡単に実行できます。
d = {'a':1,'b':2,'c':3}
d['a'] = 2
次に辞書の値を1つ増やすことを考えます。
d['a'] += 1 
何も考えずに書くとこうなりますが、これだとダメで、keyaがないときにエラーを返します。
対応策としては、de...]]></summary>
        <author>
            <name>sergicalsix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Maya】開発中のPythonの変更を即時反映する]]></title>
        <id>https://zenn.dev/khrtz/articles/c0b9f5efec206f</id>
        <link href="https://zenn.dev/khrtz/articles/c0b9f5efec206f"/>
        <updated>2023-12-25T09:41:30.000Z</updated>
        <summary type="html"><![CDATA[概要
Mayaでのツール開発時にPythonスクリプトをリロードしてる方法を共有します。
my_namespace.src.ui のような階層にスクリプトを置いていたとした、my_namespaceを指定するとmy_namespace配下のスクリプトが全てリロードされます。
DEFAULT_RELOAD_PACKAGESに予めリロード対象のnamespaceを入れておくと、指定しなくても毎回リロードします。
環境: Maya2024
unload_packages(silent=False, packages=["my_namespace"])

 unload_packages.p...]]></summary>
        <author>
            <name>へるつ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[まずはエラーに正しく対処できるようになる]]></title>
        <id>https://zenn.dev/kanaotto/articles/b13d4e79b495d4</id>
        <link href="https://zenn.dev/kanaotto/articles/b13d4e79b495d4"/>
        <updated>2023-12-25T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに：エラーを読むことの重要性
未経験からエンジニアになった人がまず直面する難関として「エラーメッセージの理解」です。コードにエラーが発生した際、多くの初学者は、その原因や対処法がわからず挫折してしまうことがあると思います。
この記事では、エラーメッセージを読み解くための基本的な心構えと、実際のエラーにどう対応すればよいかの具体的な方法を紹介します。
Python のコードを例に、エラーの基本構成を理解し、それをどのように読み解き、問題解決に結びつけるかを丁寧に説明していきます。また、エラーを読むことの重要性を伝えることで、読者の皆さんがプログラミングにおける障害を乗り越え、よ...]]></summary>
        <author>
            <name>Yuji Tsuritani</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[文書データのクリーニングと<h2>タグによるチャンク分けでRAGの精度向上を目指す]]></title>
        <id>https://zenn.dev/khisa/articles/74d9ae645655a4</id>
        <link href="https://zenn.dev/khisa/articles/74d9ae645655a4"/>
        <updated>2023-12-25T05:52:31.000Z</updated>
        <summary type="html"><![CDATA[前回の記事では、WordpressのブログのデータをXMLファイルでエクスポートし、TextSplitterを用いてチャックに分割したあと、Vector Store のChromaに格納することでRAGを実現しました。性能はそこそこでしたが、文書中に正解がある質問に対して、正しく文書を見つけられていないと思われる挙動もありました。
今回は、前回、適当に2000文字くらいで分割していたHTMLファイルをきちんとクリーニングし、一つのトピックについての話題に閉じるはずに<h2>タグで分割してチャンク分けをしてみました。
前回の記事は以下をご覧ください。
https://zenn....]]></summary>
        <author>
            <name>ひさ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pytest-monitorとpytest-memrayを用いてソフトウェアのボトルネックを発見する]]></title>
        <id>https://zenn.dev/simpleform/articles/20231223-05-pytest-monitor-memray</id>
        <link href="https://zenn.dev/simpleform/articles/20231223-05-pytest-monitor-memray"/>
        <updated>2023-12-25T02:26:07.000Z</updated>
        <summary type="html"><![CDATA[本記事を閲覧いただきありがとうございます。シンプルフォーム社のエンジニアの駒井 (@rindybell) です。本記事は SimpleForm Advent Calendar 2023 の２３日目の記事となっています。
本記事では、ソフトウェアのボトルネック発見に有用な、pytest-monitor と pytest-memray というライブラリを紹介します。

 1. 背景
プロダクトマネージャといったステークホルダがソフトウェアを評価するとき、「何らかの検索をできるか」とか「期待するデータが表示されるか」といった、機能面をしばしば重視します。ただし、運用コストに影響するため、メモリ...]]></summary>
        <author>
            <name>シンプルフォーム Tech Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPT Data Analysisで社内ニコニコカレンダーシステムの利用状況を解析した]]></title>
        <id>https://zenn.dev/fusic/articles/a90fe58a4a6694</id>
        <link href="https://zenn.dev/fusic/articles/a90fe58a4a6694"/>
        <updated>2023-12-25T01:00:00.000Z</updated>
        <summary type="html"><![CDATA[本記事はFusic Advent Calendar 2023 シリーズ1の25日目の記事です。恐れ多くもアンカーを務めさせていただきます💪
2022年末にChatGPTが登場し、2023年は我々のお仕事においてもChatGPTを活用する場面が着実に増えました。そんな1年を締めくくる記事なので、この記事でもChatGPTに触れたいと思います。


 Advanced Data Analysis
ChatGPT Plusを申し込むと利用できる機能の1つに「Advanced Data Analysis」という機能があります。通常のChatGPTと比べて以下のような違いがあります。

ファイルの...]]></summary>
        <author>
            <name>Y_uuu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AzureStaticWebAppをReact+AzureFunctions(Python)で作って、ローカルで動かしてみる]]></title>
        <id>https://zenn.dev/tk_hamaguchi/articles/83ee81a896f401</id>
        <link href="https://zenn.dev/tk_hamaguchi/articles/83ee81a896f401"/>
        <updated>2023-12-24T23:32:21.000Z</updated>
        <summary type="html"><![CDATA[この記事は、下記の構成をローカル環境で実行するためのメモです。

AzureでちょっとしたWebアプリケーションを作るときに、コスト面や運用面でAzure Static Web Appsは候補に上がりやすいサービスです。
しかし大体の手順がGithubやAzureDevOpsといったCI連携が前提となっていて、ちょっと作って試すにはハードルが高いイメージがありました。
そのため本記事ではサクッとローカルで動かすところまで行ってみようと思います。
主な利用サービスは下記の通りです。




Azureサービス
フレームワーク
言語




フロントエンド
Azure Static Web ...]]></summary>
        <author>
            <name>tk_hamaguchi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[BigQueryのパーティション分割テーブルで特定のパーティションを効率的に削除する方法]]></title>
        <id>https://zenn.dev/analytics_eng/articles/f5d46ce1f3fa63</id>
        <link href="https://zenn.dev/analytics_eng/articles/f5d46ce1f3fa63"/>
        <updated>2023-12-24T22:00:01.000Z</updated>
        <summary type="html"><![CDATA[パーティション分割テーブルとは
BigQueryのパーティション分割テーブルとは、テーブルを日付などのセグメントに分割することでクエリを効率的に実行できるタイプの種類である。table_yyyymmdd と日付suffixをテーブルに付けて管理するシャーディングテーブルとの違いとして、

高いクエリパフォーマンス
スキーマやメタデータの不要な重複を避けられる

といったメリットが挙げられている。個人的にはワイルドカードを使用した際のネーミング被り事故を防げる点が一番ありがたいことだと思っている(注1)。
dbtでもパーティション分割テーブルの利用がデフォルトとして想定されており、スキ...]]></summary>
        <author>
            <name>tanukifk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Polarsで「pandasライブラリ活用入門(第2版)」を書いてみました]]></title>
        <id>https://zenn.dev/tremendous1192/articles/4adb2a62c76717</id>
        <link href="https://zenn.dev/tremendous1192/articles/4adb2a62c76717"/>
        <updated>2023-12-24T20:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Pythonにおけるデータ分析ライブラリといえばpandasですが、最近Rust言語で書かれた高速データ分析ライブラリpolarsというライブラリへの注目が集まっています。
今年はQiitaのアドベントカレンダーも作成されているので、多くの方が気になるライブラリだと言えるでしょう。
私も今年の3月にpandasとpolarsのコード比較記事を執筆しましたが、X(旧Twitter)にて動かないコードがあるとのご指摘を頂きました。
どうやらいくつかの破壊的変更があったようです。
参考書籍の第2版が今年の9月に出版されたので、内容を更新したいと思います。

 参考


panda...]]></summary>
        <author>
            <name>Tremendous1192</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[行列積状態について考える (6) — Vidal の標準形]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-matrix-product06</id>
        <link href="https://zenn.dev/derwind/articles/dwd-matrix-product06"/>
        <updated>2023-12-24T17:32:35.000Z</updated>
        <summary type="html"><![CDATA[目的
「Vidal の標準形」と呼ばれる MPS (Matrix Product State; 行列積状態) の一つの表示形式について見る。

 Tensor-Train 表示
正規化された量子の状態ベクトル

\begin{align*}
\ket{\Psi} = \Psi_{000} \ket{000} + \Psi_{001} \ket{001} + \cdots + \Psi_{111} \ket{111}
\end{align*}

を考える。一般に d 量子ビットで考えるとして、係数の確率振幅 \Psi_{i_1 i_2 \cdots i_d} の部分のことを波動関数と呼...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[地図からこだわりの道を抽出する方法]]></title>
        <id>https://zenn.dev/homing/articles/f9a314841c737d</id>
        <link href="https://zenn.dev/homing/articles/f9a314841c737d"/>
        <updated>2023-12-24T15:01:00.000Z</updated>
        <summary type="html"><![CDATA[この記事は、FOSS4G Advent Calendar 2023 の25日目の記事です

 想定する読者
この記事では、オープンデータからこだわりの道を抽出する方法について解説します。
これは、GIS初心者の私が手を動かした時の事を元にしています。
はじめてオープンデータに触れた時に、何から触れば良いのかわからなかったので、同じ境遇の人の参考になればうれしいです。

 使用するデータ
地図データには無料のOSM(OpenStreetMap)を使います。
OSM内には車道、歩道、山、川、店舗等が含まれていて、これらを使って目的の道を抽出します。
https://openstreetmap...]]></summary>
        <author>
            <name>rito</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CLIP/BLIP2を使ってrosbagの画像検索できるようにした話、プロンプトと検索結果の比較を添えて]]></title>
        <id>https://zenn.dev/hakuturu583/articles/image_search</id>
        <link href="https://zenn.dev/hakuturu583/articles/image_search"/>
        <updated>2023-12-24T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[本記事は「基盤モデル×Robotics Advent Calendar 2023」の12/25に投稿されたものです。
https://qiita.com/advent-calendar/2023/robot-ai

 はじめに
こんにちは、昨日こんな記事を投稿していたものです。
最近Vision&Languageや基盤モデルの発展には目覚ましいものがありますが、その応用先の一つとして「自然言語による画像検索」が挙げられます。
YOLOなどに代表される従来の物体認識手法と異なりVision&Languageモデルはembeddingと呼ばれる画像とテキスト情報を同じ次元のベ...]]></summary>
        <author>
            <name>hakuturu583</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenAIを簡単に検証するためにStreamlitを使う]]></title>
        <id>https://zenn.dev/nomhiro/articles/streamlit-use-openai</id>
        <link href="https://zenn.dev/nomhiro/articles/streamlit-use-openai"/>
        <updated>2023-12-24T12:49:40.000Z</updated>
        <summary type="html"><![CDATA[OpenAIを簡単に検証するためにStreamlitでチャットする

 この記事を書いた背景
AzureOpenAIを利用してプロンプトやチャットを試したいときに、一般的にはAzureAIStudioのPlayGroundを利用すると思います。
PlayGroundはインターネットを経由したブラウザ接続で利用するため、場合によっては社内での利用が難しい場合があります。そのような場合は独自にチャットができるアプリを用意する必要があります。

 紹介すること／紹介しないこと
StreamlitはPythonで簡単にWebアプリを作成できるフレームワークです。今回はStreamlitを利用...]]></summary>
        <author>
            <name>しろくま</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[マケデコアドベントカレンダー特別企画 マケデコ 2023年末座談会]]></title>
        <id>https://zenn.dev/gamella/articles/1a84cd8f480d76</id>
        <link href="https://zenn.dev/gamella/articles/1a84cd8f480d76"/>
        <updated>2023-12-24T08:12:25.000Z</updated>
        <summary type="html"><![CDATA[マケデコアドベントカレンダー2023の特別企画として、マケデコ運用メンバーのtomo/yoshiso/UKI/hio、年末座談会を開催しました。各自一枚のスライドを用意して、それを眺めながら、今年を振り返る企画です。ぜひお楽しみください。
ぜひお楽しみください。

 マケデコイベント振り返り

最初の一枚目は今年の振り返りを兼ねて、開催したイベントの振り返りをしました。

 イベントの参加クラスターについて
tomo: ざっと眺めてみて、まずどうですかね？
UKI: 客層的にも、参加人数が一番集まっているのがディープテック領域なんですね。より詳しくニーズを知るには、なにかアンケートとか...]]></summary>
        <author>
            <name>tomo@Alpaca</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[win11+ゲーミングPCで高速なpython環境構築(WSL編)]]></title>
        <id>https://zenn.dev/ashitahonkidasu/articles/73132d1563b745</id>
        <link href="https://zenn.dev/ashitahonkidasu/articles/73132d1563b745"/>
        <updated>2023-12-24T05:49:13.000Z</updated>
        <summary type="html"><![CDATA[pythonは元々速い処理を得意としていないけどGPUコンテナとintelのnumpyやらscikit-learnを使うことで処理速度を改善させることを目的とする。
シンプルに言えばwin11 + wsl + docker + GPUコンテナ + intelついでにminicondaということです.

!
この記事はIntel AVX2以上に対応しているCPUとnvidia製GPUを搭載していることを前提としてます。pythonのバージョンは2023.12現在3.9までにしか対応していない


 GPUドライバのインストール

自分はGeForce Experienceが元々入っていた...]]></summary>
        <author>
            <name>shiba</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[顔交換の実装方法をみる]]></title>
        <id>https://zenn.dev/mobdev/articles/11cf0c5c4d86b0</id>
        <link href="https://zenn.dev/mobdev/articles/11cf0c5c4d86b0"/>
        <updated>2023-12-24T01:17:00.000Z</updated>
        <summary type="html"><![CDATA[この記事はmob Advent Calendar 24日目の記事です。
顔交換ができるカメラアプリなどが巷にありますよね。どのような実装をしているんだろうって気になったので調べてみることにしました。

 参考コードを読んでみる
roopという、 Stable Diffusion の文脈などで出てくる顔交換ができるソフトウェアがあります。
https://github.com/s0md3v/roop
このコードを読んでどのような流れで実装しているのかを見ていきます。
!
次のような免責事項があります。使用する際には必ず一読して、注意して使用しましょう。
このソフトウェアは、AI生成メディア...]]></summary>
        <author>
            <name>mob</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[進化計算コンペティション2023に挑戦した話]]></title>
        <id>https://zenn.dev/soray677/articles/a2ba94b010ad3e</id>
        <link href="https://zenn.dev/soray677/articles/a2ba94b010ad3e"/>
        <updated>2023-12-23T16:02:07.000Z</updated>
        <summary type="html"><![CDATA[この記事は進化計算学会によって毎年行われている、現実での課題に沿った最適化問題でコンペを行う「進化計算コンペティション」の2023年開催コンペに挑んでみたものです。
http://www.jpnsec.org/symposium202303.html

 進化計算とは？
進化計算は組み合わせ問題の最適化としてよく使われる手法です。
例えば、小学生の遠足のおやつを思い浮かべてください。おやつ購入の上限を300円までとしたときに、以下のおやつがあったら何が最適解でしょうか？

どうでしょう。パッと思いつくのはチョコ100円、グミ200円の組み合わせでしょうか。
ただ、これをどうやって選択した...]]></summary>
        <author>
            <name>SoraY677</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Pytorch】SONYのSQ-VAEを実装する]]></title>
        <id>https://zenn.dev/pythocial/articles/fabb9558369f7a</id>
        <link href="https://zenn.dev/pythocial/articles/fabb9558369f7a"/>
        <updated>2023-12-23T15:03:00.000Z</updated>
        <summary type="html"><![CDATA[この記事では，SONYが2022年に開発した深層学習モデルのSQ-VAEについて，

ざっくりとした動作原理の確認
実装と実験

を，駆け足で行っていきます．
こちらは ラクス Advent Calender 2023 24日目の記事になります。
!
The code on this page was partially retrieved and modified from the work of sony/sqvae, which is distributed under the Apache License 2.0.


 Introduction：AE族について
ここに，中間のと...]]></summary>
        <author>
            <name>pythocial</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[令和5年に誕生したオレオレFWの話]]></title>
        <id>https://zenn.dev/notch_man8600/articles/e41d27764b2c99</id>
        <link href="https://zenn.dev/notch_man8600/articles/e41d27764b2c99"/>
        <updated>2023-12-23T15:00:01.000Z</updated>
        <summary type="html"><![CDATA[この記事はklis（筑波大学情報学群知識情報・図書館学類） Advent Calendar 2023の内容となります。
https://adventar.org/calendars/8957
こんにちは、klis19（3編）のnotch_manです。今日はクリスマスイブですね。皆さんはいかがお過ごしでしょうか。私は仕事が多すぎてクリスマスどころか年末年始も消滅する見込みです。
今日はクリスマスイブにピッタリな一家に1つあると嬉しいオレオレFWの紹介をします。街中のカップルを眺めて心が寒くなった皆さん、愛を持ってオレオレFWを育てて豊かな人生を歩みましょう！
※対象はWebアプリケーション...]]></summary>
        <author>
            <name>notch_man</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Googleの「Gemini」をLINEBotにしてみました。]]></title>
        <id>https://zenn.dev/rinadad/articles/4a789582fc1caf</id>
        <link href="https://zenn.dev/rinadad/articles/4a789582fc1caf"/>
        <updated>2023-12-23T09:40:06.000Z</updated>
        <summary type="html"><![CDATA[出来たもの
!
サービス維持のための収入がないので一般公開はしません。



 使ったもの

Python

Flask (ウェブアプリ用)
line-bot-sdk (LINEBot用)
google-generativeai (Gemini用)


ngrok (公開用)


 コード

 色々学ぶ編
まずGeminiの基本的なコードに関しては次のページを御覧ください。
https://ai.google.dev/tutorials/python_quickstart
そしてLINEBotに関して、今回参考にした記事・ページは次のとおりです。
https://www.tomota...]]></summary>
        <author>
            <name>Rin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PyTorchのbroadcastingがよくわらないので調べてみた。]]></title>
        <id>https://zenn.dev/yuks0810/articles/c5be2251797af3</id>
        <link href="https://zenn.dev/yuks0810/articles/c5be2251797af3"/>
        <updated>2023-12-23T08:19:56.000Z</updated>
        <summary type="html"><![CDATA[この記事の目的
大学院に出願する際にGNNについての小論文を提出したので、それまでにGNNをちゃんと勉強しておこうということで勉強し始めたのだが、その最初の段階でPyTorchのbroadcastingが出てきてよくわからなかったのでメモ。
検索してqiitaとかzennとかで何かしらの記事出てくるかな？と思っていたが、あまりヒットしなかったので書く。
このページ（How does pytorch broadcasting work?）にbroadcastingについてのドキュメントURLが記載されていたのでそれを読んで理解しようと思う。
紹介されていたドキュメント：

numpy ...]]></summary>
        <author>
            <name>Yuki Nakata</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonで接線ポートフォリオを計算する]]></title>
        <id>https://zenn.dev/derbuihan/articles/4d3e50ef0b1520</id>
        <link href="https://zenn.dev/derbuihan/articles/4d3e50ef0b1520"/>
        <updated>2023-12-23T06:50:03.000Z</updated>
        <summary type="html"><![CDATA[はじめに
前回の記事で、ポートフォリオを最適化して効率的フロンティアを書きました。今回は、無リスク資産を導入して、接線ポートフォリオを計算します。

 無リスク資産
無リスク資産とは、先進国の短期国債のようにリスクなく投資ができる資産のことです[1]。この記事では無リスク資産の年間の利益率をr_fとします。

 シャープ・レシオ
リスクがある資産のポートフォリオに対して、効率性の基準を考えます。ポートフォリオを選択する場合、リスクを取るほどリターンが大きくなることが期待されます。そのため、それぞれのポートフォリオが、無リスク資産という基準からどれだけリスクを取って、代わりにリターンを...]]></summary>
        <author>
            <name>PONTA</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Snowpark Container Services をさわってみた]]></title>
        <id>https://zenn.dev/tmasuo/articles/ab21cf8ac1c76f</id>
        <link href="https://zenn.dev/tmasuo/articles/ab21cf8ac1c76f"/>
        <updated>2023-12-23T04:23:15.000Z</updated>
        <summary type="html"><![CDATA[📜 この記事は
Snowflake Advent Calendar 2023 Series 2 - Day 21 の記事になります。Snowflake で Sales Engineer をしております、@tmasuo がお届けします。
前日も Snowflake の中の人 @sakudata がお送りしておりました。SiS の裏ワザ的な話ということで、アプリネタでしたが、今回も懲りずに中の人からアプリネタをお送りいたします。

 🎉 Snowpark Container Services (SPCS) PuPr!!
Snowflake Summit 2023 で鳴り物入りで登場した ...]]></summary>
        <author>
            <name>tmasuo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【決定版】誰も教えてくれない名前の付け方]]></title>
        <id>https://zenn.dev/jim_soros/articles/9e457a4e145475</id>
        <link href="https://zenn.dev/jim_soros/articles/9e457a4e145475"/>
        <updated>2023-12-23T03:43:18.000Z</updated>
        <summary type="html"><![CDATA[名前の付け方の名前には変数名や関数名、クラス名があります。
名前の付け方は多くの本で議論されていますが、どれだけ本を読んでも答えにはたどり着けません。言葉とそれを理解する読者は生き物だからです。

 Q.これらの名前の目的は何ですか？
A. 目的は、読者に処理内容を理解してもらうための目次の役割を果たします。

 Q.読者とは誰を指しますか？
A. 読者は、自分自身およびコードを読む不特定多数の人々を指します。

 Q.不特定多数の人々全てを納得させる目次は作れますか？
A. いいえ、作れません。

 Q.不特定多数の人々全てを納得させる目次は作れますか？
A. いいえ、困難です。

 ...]]></summary>
        <author>
            <name>jim_soros</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Erg開発進捗2023]]></title>
        <id>https://zenn.dev/mtshiba/articles/erg_progress_2023</id>
        <link href="https://zenn.dev/mtshiba/articles/erg_progress_2023"/>
        <updated>2023-12-22T22:30:01.000Z</updated>
        <summary type="html"><![CDATA[!
本記事は言語実装Advent Calendar 2023 23日目の記事です。

2022に引き続き私が開発している言語Ergの経過を報告していきたいと思いますが、訳あって本年はマニアックな話を中心にしたいと思います。
今年Erg本体に入れた変更・改善・実装のうちこれは知見だなと思ったものを中心にいくつかピックアップしています。

 双方向型検査
関連PR:
#456
通常Ergの型推論はボトムアップに進行します。
例えば、関数呼び出しは引数の式の型から推論され、最後に全体のシグネチャが導出されます。
しかし逆に、関数のシグネチャから引数型の推論をしてほしいこともままあります。
fo...]]></summary>
        <author>
            <name>shiba</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonのGUIライブラリを介さずウィンドウタイトルバーの色を変える方法 in Win11]]></title>
        <id>https://zenn.dev/foxfoxfox/articles/401229bb3e4fa9</id>
        <link href="https://zenn.dev/foxfoxfox/articles/401229bb3e4fa9"/>
        <updated>2023-12-22T11:58:33.000Z</updated>
        <summary type="html"><![CDATA[記事の要約
pythonにおいて、GUIのウィンドウタイトルバーの色を変更したい場合、タイトルバーを一旦非表示にして、それぞれのボタンを1から実装する手法がよく出てくる。
これはウィンドウの移動などもコーディングしなければならず、色を変えたいだけなのに面倒。
DwmSetWindowAttribute 関数を使えばWindows11なら対処できるよ

 あらすじ

windows11のpythonでタイトルバーの色だけ変えたい
はじめはroot.overrideredirect(1)で実装していたが、不安定な挙動が多い
DwmSetWindowAttributeで解決


 サンプル...]]></summary>
        <author>
            <name>🦊🦊🦊</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[機動戦士ガンダムSEED 新作公開を記念して dbt seed で遊ぶ]]></title>
        <id>https://zenn.dev/allllllllez/articles/a00d3c816913fe</id>
        <link href="https://zenn.dev/allllllllez/articles/a00d3c816913fe"/>
        <updated>2023-12-22T11:00:44.000Z</updated>
        <summary type="html"><![CDATA[はじめに

ちゅらデータ Advent Calendar 2023 13日目の記事です。
私は親会社にてデータエンジニアをやっている、いわゆるちゅらデータのゆかいな仲間たちの一人でございます。
!
本記事の内容は全体的にジョークです。怒らないで！サイクロプスを打たないで！


 それでも！守りたい概要があるんだ！！
dbt の seed コマンドを SEED 仕様にしてみました。



 グゥレイト！背景だぜ！

 またガンダムの話がしたいのか、あんた達は！
皆様、ガンダムはお好きですか？
好きな作品は何ですか？お気に入りのキャラクターは誰ですか？？乗ってみたいモビルスーツ/モビル...]]></summary>
        <author>
            <name>あれ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FastAPIでSwagger UIを機能、ドメインなどで別々の画面に分割して管理しやすくする]]></title>
        <id>https://zenn.dev/tk_resilie/articles/fasapi_multi_swagger</id>
        <link href="https://zenn.dev/tk_resilie/articles/fasapi_multi_swagger"/>
        <updated>2023-12-22T09:36:05.000Z</updated>
        <summary type="html"><![CDATA[概要
FastAPIを使うことでSwagger UIを自動的に生成することができ、APIのドキュメント化や検証に非常に有用ですが、既定では1つのSwagger UIに全てのWebAPIが羅列されるため、規模が大きくなるにつれて、管理が辛くなることが想定されます。
実用案件でFastAPIを使用する場合、APIの数は数百件になることも珍しくないため、機能、ドメイン毎などで別のSwagger UIに分割して管理できた方が幸せになれます。
本記事では、この機能ドメイン等の単位でSwagger UIを分割して管理する方法を紹介します。
なお本記事のソースコードのリンクを含んだ内容を以下のSa...]]></summary>
        <author>
            <name>米谷 昂(Python/FastAPIプロフェッショナル)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS Lambda と Python Boto3 を使って Amazon S3 Express One Zone の性能比較をしてみた]]></title>
        <id>https://zenn.dev/collabostyle/articles/f4b00f81151632</id>
        <link href="https://zenn.dev/collabostyle/articles/f4b00f81151632"/>
        <updated>2023-12-22T04:42:37.000Z</updated>
        <summary type="html"><![CDATA[Amazon S3 Express One Zone について
Amazon S3 Express One Zone については、JAWS-UG 名古屋 2023年 AWS re:Inventの復習 - JAWS-UG名古屋 | Doorkeeper の LT 登壇資料でざっくり説明したので、以下をご確認ください！


 Lambda からアップロード・ダウンロード速度を計測する
AWS Lambda からアクセスする速度を time を使って簡易計測してみました！

 最新の boto3 を追加する
まず、Boto3 のバージョンを確認してみます。
import boto3

de...]]></summary>
        <author>
            <name>山とコード</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[モンテカルロ法による3体相互作用を持つ全結合イジング模型の解析]]></title>
        <id>https://zenn.dev/jij_inc/articles/5387626bf92f85</id>
        <link href="https://zenn.dev/jij_inc/articles/5387626bf92f85"/>
        <updated>2023-12-22T02:58:04.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事はJij Inc. Advent Calendar 2023の22日目の記事です。
株式会社Jijの鈴木です。
この記事では、3体相互作用を持つ全結合イジング模型を古典モンテカルロ法を用いて数値的に解析します。以前に書いた記事で、3体相互作用を含む一般の高次相互作用を持つ全結合イジング模型に対して解析的なアプローチを行い、1次相転移を起こすことが分かりました。つまりこのモデルの性質はある程度分かっているわけですが、この記事ではそのことを数値的に検証します。

 モデル
3体相互作用を持つ全結合イジング模型は以下で定義されます。

E_{p=3}=-\frac{2}{...]]></summary>
        <author>
            <name>pagliacci</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonで学ぶはじめての聴覚フィルタ（やさしい？解説）]]></title>
        <id>https://zenn.dev/kyama0321/articles/a93649c74600be</id>
        <link href="https://zenn.dev/kyama0321/articles/a93649c74600be"/>
        <updated>2023-12-21T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[1. はじめに
サイバーエージェント AI Labのやまかつ(@kyama0321)です。AI Labでは、AudioチームのResearch Scientistとして、ヒトの聴覚特性に基づく音声情報処理の研究をしています。
本記事は、日本音響学会 学生・若手フォーラム Advent Calendar 2023の22日目の記事になります。引越しが無事に終わった（？）ので、やっと書く気になりました。
タイトルから既におわかりのように、　本記事は日本音響学会誌2010年66巻10号に掲載された"はじめての聴覚フィルタ(やさしい解説)[1]"の導入部分を、Pythonで学べるようにしたも...]]></summary>
        <author>
            <name>yamakatz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GIS × Python Tutorial Session3.1 ~ geometry分解~]]></title>
        <id>https://zenn.dev/daidai_daitai/articles/d0fc874ef21c20</id>
        <link href="https://zenn.dev/daidai_daitai/articles/d0fc874ef21c20"/>
        <updated>2023-12-21T13:37:35.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は「GIS × Python Tutorial」の関連記事です。
先日投稿したSession3を補完する記事を書きました。
自分でもデータを扱う際にshapely.geometryを分解して使用する事は結構あります。
なので今回はgeometryを渡すと分解して返してくれる関数を作成します。
面倒なので例外処理などは入れていません。解説も面倒なので書きませんが使用方法だけは書いていきます。

 Import
from typing import Any
from typing import List
from typing import Tuple

import ...]]></summary>
        <author>
            <name>橙。</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPTのノードエディタを作った話【元記事へのリンクのみ】]]></title>
        <id>https://zenn.dev/uynet/articles/b5320b89c018fa</id>
        <link href="https://zenn.dev/uynet/articles/b5320b89c018fa"/>
        <updated>2023-12-21T09:55:36.000Z</updated>
        <summary type="html"><![CDATA[以前制作したChatGraphというChatGPTのノードエディタに関する技術詳細です。要約すると、pythonでGUIを作ったら大変過ぎたという話で、実はAI関係なかったというものでした。
https://uynet.booth.pm/items/4728147
記事は以前Qiitaに書いたので、そのリンクを貼ります。
https://qiita.com/uynet/items/eb0ee91800cfc1ca4bc1
時間があればにこちらでまとめ直そうと思います。]]></summary>
        <author>
            <name>uynet</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CentOs Stream8+Django+nginx+uWSGIでWEB環境を構築する。]]></title>
        <id>https://zenn.dev/nori1234/books/ce09094f5f4371</id>
        <link href="https://zenn.dev/nori1234/books/ce09094f5f4371"/>
        <updated>2023-12-21T09:26:17.000Z</updated>
        <summary type="html"><![CDATA[Linux系OS・CentOs Stream8をベースにwebサーバーを構築し、youtubeやinstagram等、誰もが知るサイトの構築に使用されたフレームワーク「Django」で、簡単な処理（「おめでとうございます。正常に動作しています」をブラウザに表示)が成功するまでをゴールにしたものです。初心者の方でも楽しみながら進んでいくことができると思います。]]></summary>
        <author>
            <name>norizo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SlackとChatGPT APIでチャットボットを作る パート6 (OpenAI SDK 1.3.xと1106のモデルに対応する)]]></title>
        <id>https://zenn.dev/techflagcorp/articles/312cd5f0ee3517</id>
        <link href="https://zenn.dev/techflagcorp/articles/312cd5f0ee3517"/>
        <updated>2023-12-21T00:49:39.000Z</updated>
        <summary type="html"><![CDATA[SlackとChatGPT APIでチャットボットを作る パート6 (OpenAI SDK 1.3.xと1106のモデルに対応する)
SDKの仕様変化と新型モデルでいろいろ変わりました。今回はパート3のコードを書き換えてOpenAI SDK 1.3.xと1106のモデルに対応すます。依然Chat Completion APIを使用しAssistants APIは使いませんので骨格についてはパラレルfunction calling対応をのぞいてほとんどかわりません。

 ソースコード

chatbot.py
import os
from slack_bolt import App
fr...]]></summary>
        <author>
            <name>dagger1</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ニューラルネットの説明可能性について考える (1) — Grad-CAM]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-grad-cam01</id>
        <link href="https://zenn.dev/derwind/articles/dwd-grad-cam01"/>
        <updated>2023-12-20T17:27:08.000Z</updated>
        <summary type="html"><![CDATA[目的
機械学習のモデルが何故そのような結果を出すのかについて知りたいことがある。決定木のようなモデルの場合、かなり分かりやすいのだがニューラルネットワークの場合にはハッキリ言ってブラックボックスだ。
ところで Grad-CAM: Visual Explanations from Deep Networks via Gradient-based Localization という研究がある。CAM (Class Activation Mapping) は分類における重要な因子を計算する技術らしく、Grad-CAM はその改善版らしい。今回は論文を読んでないので、深くは触れないことにする。...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GIS × Python Tutorial Session3 ~ shapely & pyproj~]]></title>
        <id>https://zenn.dev/daidai_daitai/articles/62686a3889e190</id>
        <link href="https://zenn.dev/daidai_daitai/articles/62686a3889e190"/>
        <updated>2023-12-20T14:24:34.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は「GIS × Python Tutorial」の関連記事です。
今回はPythonでGISのVectorデータを扱う際に使用する "shapely" と "pyproj" に関しての記事です。
具体的には

shapelyでのgeometry objectの作成方法
pyprojでの投影変換
shapelyの便利なメソッド

を紹介していきます。
Session5ではgeopandasを扱う予定ですが、geopandasはshapelyをベースに作成されているので、今回紹介するメソッドも使用できるはずです。
Vectorデータの種類に関しては "Session1"...]]></summary>
        <author>
            <name>橙。</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【python】pyenvのインストール手順（Windows）]]></title>
        <id>https://zenn.dev/takuya_zenn/articles/c66679a8fc8b0a</id>
        <link href="https://zenn.dev/takuya_zenn/articles/c66679a8fc8b0a"/>
        <updated>2023-12-20T11:30:54.000Z</updated>
        <summary type="html"><![CDATA[pyenvのダウンロード
githubから落としてくる。
git clone https://github.com/pyenv-win/pyenv-win.git

 環境変数やパスを通す作業

 環境変数を設定する
以下のコマンドを実行する。
今回は、「C:\Users\ユーザー名」にgithubからクローンしてきた場合で行っている。
[System.Environment]::SetEnvironmentVariable('PYENV',$env:USERPROFILE + "\pyenv-win\","User")

[System.Environment]::SetEnvir...]]></summary>
        <author>
            <name>たくや</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[numpy] 異なる型で四則演算をすると結果がおかしくなる]]></title>
        <id>https://zenn.dev/apo_zenn/articles/89fca999d35591</id>
        <link href="https://zenn.dev/apo_zenn/articles/89fca999d35591"/>
        <updated>2023-12-20T10:43:18.000Z</updated>
        <summary type="html"><![CDATA[int32とuint16の足し算
a = 1, b = -1として，その和を計算してみます．
型はそれぞれ a(int32), b(uint16)です．

 test.py
a = np.array(1) #int32
b = np.array(-1).astype("uint16") #uint16

print(a + b)

結果 65536 (int32)
おかしな結果ですね。本来は0となるはずです。

 足す方(a)をuint16にしてみる
今度は先ほどと型を逆転し、
a(uint16), b(int32)として，その和を計算してみます．

 test.py
a = np....]]></summary>
        <author>
            <name>apo_zenn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[構造一貫解析ソフトSS7をPythonで実行する #3 ループ処理例（Python実行）]]></title>
        <id>https://zenn.dev/kitagawadisk/articles/b7b32633c735eb</id>
        <link href="https://zenn.dev/kitagawadisk/articles/b7b32633c735eb"/>
        <updated>2023-12-20T08:22:53.000Z</updated>
        <summary type="html"><![CDATA[フォルダ構成
src
├─ ss7_make_python.py :: 入力csv -> 解析のループを行う。
├─ ss01_0001.py :: ss7 python実行
├─ module/
│   └─ ss7_SB1.py :: ss7出力csvの読書きを行う。
└─ data/  
│   └─ csv/
│       ├─ exp.csv :: ss7.iknから生成。順次書替え。
│       ├─ inp.csv :: ss7.iknから生成。順次書替え。
│	└─ inp0.csv :: pythonで書換。
└─ Python/ :: ss7 Op.P...]]></summary>
        <author>
            <name>kitagawadisk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[チャットで楽々検索！ Azure AI Search と OpenAI を組み合わせた独自ドキュメント検索サンプルのご紹介]]></title>
        <id>https://zenn.dev/microsoft/articles/jp-openai-5v1</id>
        <link href="https://zenn.dev/microsoft/articles/jp-openai-5v1"/>
        <updated>2023-12-20T07:05:38.000Z</updated>
        <summary type="html"><![CDATA[はじめに
皆さん、こんにちは！
弊社では、OpenAI を活用して様々なシナリオに対応するサンプルを作成・公開しています。
私のチームのプロジェクトで独自のデータを検索することのできるサンプルの作成に携わっておりますので、その内容をご紹介いたします。

 概要

 どんなサンプルか？

文章検索サンプルのアーキテクチャ
本サンプルは、Azure AI Search と OpenAI を組み合わせて、独自のドキュメントを検索することができます！
独自のドキュメントを Azure AI Search のインデックスに登録しておき、OpenAI を介して質問をすることで、ドキュメントの内容...]]></summary>
        <author>
            <name>marumaru1019</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GiNZAを利用して、主語・述語・目的語、修飾被修飾関係などを抽出する]]></title>
        <id>https://zenn.dev/haru330/articles/800d3f42e2df74</id>
        <link href="https://zenn.dev/haru330/articles/800d3f42e2df74"/>
        <updated>2023-12-20T06:50:28.000Z</updated>
        <summary type="html"><![CDATA[環境
WSL 2
Python 3.10.12
pip 23.3.1

 GiNZA インストール（コマンド）
以下でspacyも入ります。
pip install -U ginza
私の場合、spacy 3.6.1、ginza 5.1.3でした。

 主語・述語を出す
以下のコードで、主語・述語を出すことができます。
引用したコード

import spacy
def parse_document(sentence, nlp):
    doc = nlp(sentence)
    tokens = []

    for sent in doc.sents:
        f...]]></summary>
        <author>
            <name>はる</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[構造一貫解析ソフトSS7をPythonで実行する #2 ループ処理例（コマンド実行）]]></title>
        <id>https://zenn.dev/kitagawadisk/articles/dc88f544f09dfe</id>
        <link href="https://zenn.dev/kitagawadisk/articles/dc88f544f09dfe"/>
        <updated>2023-12-20T05:19:53.000Z</updated>
        <summary type="html"><![CDATA[フォルダ構成
src
├─ss7_make_command.py :: 入力csv -> 解析のループを行う。
├─ss7_make_command_GUI.py
├─ module/
│   ├─ ss7_SB1.py :: ss7出力csvの読書きを行う。
│   └─ ss7_scmd.py :: scmdファイルを作成する
└─ data/  
    ├─ csv/
    │   ├─ exp.csv :: ss7.iknから生成。順次書替え。
    │   └─ inp.csv :: ss7.iknから生成。順次書替え。
    └─ scmd/
       ...]]></summary>
        <author>
            <name>kitagawadisk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[サーバーレスなGPUクラウド "Modal" で Swallow の 70B モデルをサクッと実行する（$30のクレジットあり）]]></title>
        <id>https://zenn.dev/kazuph/articles/d10653fcfb17db</id>
        <link href="https://zenn.dev/kazuph/articles/d10653fcfb17db"/>
        <updated>2023-12-20T02:57:38.000Z</updated>
        <summary type="html"><![CDATA[A100(80G)で推論した後のUsage画面。無料枠の範囲内でかなり遊べることがわかる
今回はメソッドレベルでぽいっとGPUにタスクを投げることができるGPUクラウド"Modal"を使って、最近出たばかりのSwallowというLLMを動かして見ようと思います。
https://modal.com/

 課題
Colabのメモリでは課金していてもA100(40G)でしか動かせません。そうなると「まあ70Bのモデルもあるけど、今回も13Bまで試せばいいかな」と思いがちです。自分もよく自室の自作PCに搭載したRTX3090(24G)で13BのLLMを動かして確認していますが、LLMはだいた...]]></summary>
        <author>
            <name>kazuph</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[相関と因果は混ぜるな危険 PCアルゴリズムを用いたe-learningのデータの因果推論]]></title>
        <id>https://zenn.dev/aidemy/articles/b30501ee3e1737</id>
        <link href="https://zenn.dev/aidemy/articles/b30501ee3e1737"/>
        <updated>2023-12-19T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[!
この記事は、 Aidemy Advent Calendar 2023の20日目の投稿です。
前回の記事はこれからのデータ分析はPandasにDuckDBも併用して高速化しようという話でした。

※弊社の教材はe-learningではなく、オンラインDXラーニングと呼びます。弊社のコンテンツを分析したわけではないのでこのタイトルで許してください。

相関関係は因果関係を示したものではないと統計学で習い、じゃあ因果関係を示す手法を教えてくれよって頭が爆発しそうになった皆さんこんにちは。自分は何回も爆発しました。
本記事はe-learningのデータセットとPCアルゴリズムを用いてどの要素...]]></summary>
        <author>
            <name>meibyeleth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【TouchDesigner】PythonとAnnotateでEditor内を瞬間移動する]]></title>
        <id>https://zenn.dev/usbhatyu/articles/434e5cfb8f1438</id>
        <link href="https://zenn.dev/usbhatyu/articles/434e5cfb8f1438"/>
        <updated>2023-12-19T13:33:08.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こちらはTouchDesigner Advent Calendar 2023 19日目の記事です。
https://qiita.com/advent-calendar/2023/touchdesigner
みなさんは2022年に実装されたAnnotateCOMP使っていますでしょうか？
この機能によって実装ごとにまとめたりコメントを入れられたりとても便利になりました。

今回はこのAnnotateCOMPを用いてNetworkEditor内を飛び回るシステムを作りました。
https://twitter.com/usbhatyu/status/173708888857182...]]></summary>
        <author>
            <name>MASATOnoUSB</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[numpyとscipyを用いて混合ポアソン分布の事後分布を計算する]]></title>
        <id>https://zenn.dev/joeyoji/articles/7e5f17d6d4ddf3</id>
        <link href="https://zenn.dev/joeyoji/articles/7e5f17d6d4ddf3"/>
        <updated>2023-12-19T05:33:30.000Z</updated>
        <summary type="html"><![CDATA[問題設定
簡単のためデータx\in\mathbb{Z}_{\geq0}は1次元データとする。


統計モデル：混合ポアソン分布


p(x|\pi,\lambda)=\sum_{c=1}^C\pi_c\mathrm{Poisson}(x|\lambda_c)=\sum_{c=1}^C\pi_c\frac{\lambda_c^x}{x!}e^{-\lambda_c}


\pi=(\pi_c)_{c=1}^C\in \mathbb{S}^{C-1}は混合比率、\lambda=(\lambda)_{c=1}^C\in\mathbb{R}_{\geq0}^Cはポアソン分布の強度パラメータ。...]]></summary>
        <author>
            <name>joeyoji</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[polarsはpandasよりはやい？]]></title>
        <id>https://zenn.dev/sre_holdings/articles/5e92725c9fed39</id>
        <link href="https://zenn.dev/sre_holdings/articles/5e92725c9fed39"/>
        <updated>2023-12-19T02:33:37.000Z</updated>
        <summary type="html"><![CDATA[こんにちは。
SREホールディングス株式会社データサイエンティストの岡林です。
データ分析、機械学習の前処理では通常pandasを使用していますが、データ数が増えてくると処理時間が気になることがあります。
少し前から話題になっているpolarsを使用すると、pandasよりも速く処理ができそうなので、実際に試してみます。

 TL;DR


polarsはpandasより、概ね数倍〜十倍程度速い
データのread/writeはcsvよりも、parquetを使用した方が速い
ライブラリの成熟度、安定性の面ではpandasが有利

用途やシーンによって使い分けるのが良い。

 動作環境

M...]]></summary>
        <author>
            <name>k.okabayashi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Maya】モデルのメッシュと頂点情報の変更履歴を保存して再現する、モデリング作業記録ツールの検証]]></title>
        <id>https://zenn.dev/khrtz/articles/c02a4e2d7d0e9f</id>
        <link href="https://zenn.dev/khrtz/articles/c02a4e2d7d0e9f"/>
        <updated>2023-12-19T02:06:28.000Z</updated>
        <summary type="html"><![CDATA[概要
僕は普段は仕事でTAをしています。
Mayaでのモデリングの作業工程を記録してアニメーションで再現したいと思ったので検証しました。
よくYouTubeでみるようなモデリング講座ってOBSなどで画面収録してると思います。外部に公開するような動機があれば、画面収録するとは思いますが、普段画面収録してたらPCの容量いくつあっても足りませんよね。なのでMaya上で操作単位でのモデルの変更履歴を保存するツールを考えたので検証を行いました。もし実現できればモデリングの工程をSNSにあげてドヤることもできますね。完成後に1から作業工程っぽくアニメーションを付けてる方もいらっしゃいました。(大...]]></summary>
        <author>
            <name>へるつ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ROS 2でWoL(Wake-on-LAN)したかった話]]></title>
        <id>https://zenn.dev/nomumu/articles/f344aa7b2dee74</id>
        <link href="https://zenn.dev/nomumu/articles/f344aa7b2dee74"/>
        <updated>2023-12-18T20:09:40.000Z</updated>
        <summary type="html"><![CDATA[!
この記事は ROS2 Advent Calendar 2023 の14日目です。


 Wake-on-LANでロボット制御パソコンを起動したい
今年は例年のmicro-ROSネタから少し離れて小ネタをご紹介します。
ROS 2を動かす複数のパソコンの起動を連動させたい場合のTipsになります。
趣味で複数のロボット制御用パソコン(以下、制御PC)を搭載するロボット制御ユニットを製作しているのですが、その中で気づいたちょっとしたノウハウ[1]の紹介記事になります。

 複数のパソコンで制御されるロボットシステム
少し大型のロボットシステムになると、役割分担されたいくつかの制御PCが搭...]]></summary>
        <author>
            <name>nomumu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Redashをv10.1にバージョンアップしました]]></title>
        <id>https://zenn.dev/denzow/articles/5a07b44e18bb59</id>
        <link href="https://zenn.dev/denzow/articles/5a07b44e18bb59"/>
        <updated>2023-12-18T15:57:32.000Z</updated>
        <summary type="html"><![CDATA[こんにちは、こんばんは、おはようございます。LAPRASでエンジニアのような何かをしているdenzow です。この記事はLAPRAS Advent Calendar 2023 17日目の記事です。
またLAPRAS Advent Calendar 2021 12日目の記事でもあります。

 まとめると
LAPRAS社では長らくRedashを利用しており、クエリも先程7000を超えた程度に活用されています。導入当初はv3をEC2で動かしていたRedashが、気がつけばv8 + ECSの構成に変わり、そのままEKSに引っ越しをしていましたが、この度漸くv10.1の最新(Release 202...]]></summary>
        <author>
            <name>denzow</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[学校のクラス分けの最適化: Python MIP で解く]]></title>
        <id>https://zenn.dev/azuki9140/articles/1cecd22ddab06e</id>
        <link href="https://zenn.dev/azuki9140/articles/1cecd22ddab06e"/>
        <updated>2023-12-18T15:41:14.000Z</updated>
        <summary type="html"><![CDATA[1. はじめに

 1-1. 目的
こんにちは！この記事では、私たちがゼミの演習で行った面白いプロジェクトについて話します。プロジェクトのテーマは「クラス分けの最適化」で、Pythonを使って実際にどうやってクラスを上手に分けるかに挑戦しました。学校のクラスを分ける時に、いろいろな条件をどう満たすかって結構頭を使う問題ですよね。そこで、私たちは生徒の学力、性別、リーダーシップ能力などの様々な要素を考慮して、8つのクラスに生徒を公平に割り振る方法を考えてみました。
このプロジェクトの目標は、教育現場でよくある課題、つまりクラス編成の公平性と効率性を向上させることです。私たちは、特別な支...]]></summary>
        <author>
            <name>AzuKi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[テンソルネットワークで計算する量子ゲート方式]]></title>
        <id>https://zenn.dev/torataro/articles/2023-11-12-tensor_network</id>
        <link href="https://zenn.dev/torataro/articles/2023-11-12-tensor_network"/>
        <updated>2023-12-18T14:12:31.000Z</updated>
        <summary type="html"><![CDATA[本記事は量子コンピューター Advent Calendar 2023の20日目の記事です。
!
本記事では量子ゲート方式について、ある程度理解していることを前提とします。

量子ゲート方式の原理については以下の記事を参照してください。
https://zenn.dev/torataro/articles/2023-01-05-quantum_circuit
https://zenn.dev/torataro/articles/2023-01-16-quantum_circuit

 テンソルネットワークについて

 テンソルとは？
テンソルネットワークにおけるテンソルとは多次元配列のこと...]]></summary>
        <author>
            <name>寅太郎</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WordpressのブログでRAGを試してみる]]></title>
        <id>https://zenn.dev/khisa/articles/9c48af5a1f417b</id>
        <link href="https://zenn.dev/khisa/articles/9c48af5a1f417b"/>
        <updated>2023-12-18T12:59:40.000Z</updated>
        <summary type="html"><![CDATA[生成AIに専門知識を与えて質問に回答させるRAG（Retrieval-augmented generation）をいじっています。個人的にWordpressで運営しているブログの記事を与えて、RAGによる簡易なQAボットを作ってみましたので、紹介したいと思います。

 Wordpressのエクスポートデータを読み込ませてRAGを実現する
RAG（Retrieval-augmented generation）は、大規模言語モデル（LLM）のプロンプトに、コンテキストとして関連する情報を含めることで、専門知識を必要とする質問に答えさせる手法です。
専門知識の集合体をデータベースに保存しておき...]]></summary>
        <author>
            <name>ひさ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[なんとなく使っていたPythonのwith文の仕組みと使い方を調べてみた！]]></title>
        <id>https://zenn.dev/aiq_dev/articles/0e198d8b6f2aa7</id>
        <link href="https://zenn.dev/aiq_dev/articles/0e198d8b6f2aa7"/>
        <updated>2023-12-18T11:25:00.000Z</updated>
        <summary type="html"><![CDATA[こんにちは、AIQ株式会社のフロントエンドエンジニアのまさぴょんです！
今回は、なんとなく使っていたPythonのwith文の仕組みと使い方を調べてみたので、解説します。

 with文、なんとなく使っていませんか？
Pythonを使っていると結構な頻度で、目にするのが、with構文だと思います。
他の言語で、withというkeywordを見たことがない私にとっては、最初に見た時は「これ何？」って、なりました。
その時は、ちょっと調べて、ファイル操作の時にこれを使えばいいのね〜ぐらいの感じで使っていました。
with open('sample.txt', 'r') as f:
    r...]]></summary>
        <author>
            <name>まさぴょん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【今日から使える】pytestを入門した人に送る実践的なTips7選]]></title>
        <id>https://zenn.dev/open8/articles/graduating-from-pytest-beginner</id>
        <link href="https://zenn.dev/open8/articles/graduating-from-pytest-beginner"/>
        <updated>2023-12-18T09:09:57.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Python でテストを書くにあたって pytest は主な選択肢になってくると思います。現在では pytest に関する優れた入門記事が数多く存在しています。
今回は、それらの記事を見て入門を終えた方々に向けて、今日から使える実践的な Tips を7つご紹介します！
弊社でも実際に活用している Tips も交えてお伝えするので、チームで導入する際に参考にしていただければ幸いです。
!
今回紹介する Tips は、pytest を単体テストとして用いることを前提としています


 想定読者

pytest の基本的な記法、フィクスチャあたりまで入門した方（今回、この辺りの話...]]></summary>
        <author>
            <name>Kento Toriumi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[これからのデータ分析はPandasにDuckDBも併用して高速化しようという話]]></title>
        <id>https://zenn.dev/aidemy/articles/3aeea1470f1535</id>
        <link href="https://zenn.dev/aidemy/articles/3aeea1470f1535"/>
        <updated>2023-12-18T07:40:15.000Z</updated>
        <summary type="html"><![CDATA[こんにちは。
株式会社アイデミーでデータサイエンティストをやっている米倉と申します。
今回はデータ分析を高速化するために、従来のPandasによる実装に加えてDuckDBも併用して高速化を図ってみたのでご紹介します。

 BI(ダッシュボード)作った → データ重すぎて動かない問題
データサイエンティストや機械学習エンジニアの代表的な日常業務として、データ分析があります。
データ分析作業を楽にしたり、より良い意思決定に繋げるための考察を得る手段として、BIツール（ダッシュボード）を作ることがあります。
Pythonでダッシュボード的なものを作ろうとした場合、WEBアプリ系のフレームワーク...]]></summary>
        <author>
            <name>Kazuya Yonekura</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GIS × Python Tutorial Session2 ~ 主要ライブラリ ~]]></title>
        <id>https://zenn.dev/daidai_daitai/articles/61eb0cf24c5e0d</id>
        <link href="https://zenn.dev/daidai_daitai/articles/61eb0cf24c5e0d"/>
        <updated>2023-12-18T07:34:47.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は「GIS × Python Tutorial」の関連記事です。
今回はPythonでGISを扱う際によく見るライブラリなどの一覧を纏めています。
実際にライブラリをどの様に扱うのかに関しては、次回以降の記事に書いていきます。
!
各ライブラリの説明は生成AIに丸投げしました。


 Vector

 1. shapely
Shapelyでは、ジオメトリの操作や分析を行うことができます。二点間の距離を計測したり、エリアの面積を計測することができます。
また、wktやjsonのシリアライズ、デシリアライズができるため、地理空間データを計算するためのライブラリとして広く...]]></summary>
        <author>
            <name>橙。</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Djangoで書いたサービスをCloud Run+Cloud SQL環境で動かそうとして諸々苦労したこと（初心者体験記）]]></title>
        <id>https://zenn.dev/tonytani37/articles/b485f00613b1e9</id>
        <link href="https://zenn.dev/tonytani37/articles/b485f00613b1e9"/>
        <updated>2023-12-18T05:59:12.000Z</updated>
        <summary type="html"><![CDATA[これまでなにか作ってみようと思ったときにはQiita.comの記事が多くヒットしたりしてたのでそちらへは時々投稿していましたが、最近はこのzennに投稿された記事あヒットするようになってきたので、お試しでユーザ登録してみました。
で、Qiita.comに投稿した記事をまたこちらに書くのはちょっと大変だと思ったことから、第一回目の投稿はリンクの引用にしました。
記事の内容はタイトルにあるとおりこれまでherokuで動かしたり（有料サービスになって撤退）、Pythonanywhereで動かしたり（無料ユーザは１つだけしかサービスが公開できない）していたDjangoで書いたサービスを、一般によ...]]></summary>
        <author>
            <name>トニーたに</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ROSによるロボット操作法  Part-2 シミュレーション(Turtle)編]]></title>
        <id>https://zenn.dev/dsl_gunma/articles/0e8b9b0049a4b6</id>
        <link href="https://zenn.dev/dsl_gunma/articles/0e8b9b0049a4b6"/>
        <updated>2023-12-18T05:19:08.000Z</updated>
        <summary type="html"><![CDATA[０．記事の内容
群馬県産業技術センターではAI技術等をはじめとしたデジタル技術を広く県内企業の方にも活用頂けるようデジタルソリューションラボDSL[外部リンク] 等を通じて情報等の提供を行っています。この記事では、ROSの基本的な考え方とDSLに整備されたTHK(株)社製の移動台車を備えた単腕のロボットのシミュレーションによる操作の手順等についてまとめています。
このPart-2は文字数の制限から1つの内容を前半のTurtle編と後半のRobot編に分けています。Part-1およびPart-2の後半の内容は次のリンクからご覧頂けます(別のページか開きます)。
Part-1 実機編 [...]]></summary>
        <author>
            <name>群馬産業技術センター デジタルソリューションラボ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ROSによるロボット操作法  Part-2 シミュレーション(Robot)編]]></title>
        <id>https://zenn.dev/dsl_gunma/articles/2add9d5f362af4</id>
        <link href="https://zenn.dev/dsl_gunma/articles/2add9d5f362af4"/>
        <updated>2023-12-18T05:15:52.000Z</updated>
        <summary type="html"><![CDATA[０. 記事の内容
本記事の内容は、THK(株)社製の移動台車を備えた単腕のロボットのシミュレーションによる操作の手順等についてまとめています。
このPart-2は文字数の制限から1つの内容を前半のTurtle編と後半のRobot編に分けています。そのため、各章の番号の割振りも含め、前半と後半で連続した内容となっていますので、必要に応じてPart-2の前半をご覧下さい。Part-1およびPart-2の前半の内容は次のリンクからご覧頂けます(別のページか開きます)。
Part-1 実機編 [リンク]
Part-2 シミュレーション(Turtle)編 [リンク]

 ６．ロボットのGUIに...]]></summary>
        <author>
            <name>群馬産業技術センター デジタルソリューションラボ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dockerとserverless frameworkでLambdaしたい]]></title>
        <id>https://zenn.dev/akgcog/articles/e7eae895bfa6ea</id>
        <link href="https://zenn.dev/akgcog/articles/e7eae895bfa6ea"/>
        <updated>2023-12-18T04:58:39.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Lambdaのお勉強をしたので開発環境を整えたいなと思った時にcloud9だとお金かかって嫌だったのでローカルPCでdockerの環境作成をしました。

 やること
1.Dockerfileの作成
2.docker-compose.ymlの作成
3.起動確認
4.serverless frameworkのセットアップ

 1.Dockerfileの作成
大きく分けて4つぐらい環境作成してるので１つずつ見ていきます。

 1-1.Ubuntuの作成
# ubuntuのイメージをダウンロード
FROM ubuntu

# ワークディレクトリ
WORKDIR /src

# ti...]]></summary>
        <author>
            <name>akgcog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lambda Function URL で簡単に Slack の bot 作成]]></title>
        <id>https://zenn.dev/simpleform/articles/20231218-09-lambda-function-url</id>
        <link href="https://zenn.dev/simpleform/articles/20231218-09-lambda-function-url"/>
        <updated>2023-12-18T00:55:43.000Z</updated>
        <summary type="html"><![CDATA[シンプルフォームのエンジニアの杉です。本記事は SimpleForm Advent Calendar 2023 の 18 日目の記事です。
この記事では AWS の Lambda 関数で使用することのできる Lambda Function URL について書きたいと思います。

 Lambda Function URL とは
Slack などのサービスから簡単に Lambda 関数を invoke したいと思ったことはないでしょうか？このような場面で便利なものが Lambda Function URL です。
今までは、 Lambda 関数の AWS 認証なしの HTTPS 経由で実行を...]]></summary>
        <author>
            <name>シンプルフォーム Tech Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dbtのincrementalモデルで作成したテーブルの環境差異をなくす方法]]></title>
        <id>https://zenn.dev/analytics_eng/articles/27123e35aca725</id>
        <link href="https://zenn.dev/analytics_eng/articles/27123e35aca725"/>
        <updated>2023-12-17T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
dbtのincrementalモデルは大規模データに対して様々な方法での増分更新を実現できる便利さの反面、無数の落とし穴がある。
そのうちの1つが、改修による影響を開発環境で確認することの難しさである。
普通のtableやviewなら、開発環境でdbt buildするだけで検証できるが、incrementalモデルの場合は開発環境でテストにパスしても、本番環境にリリースした際のbuildでエラーとなって頭を抱えることも多い。
だいたいのケースでは、本番環境と同じデータでテストしていないことによるエラーであり、同じデータを用意できていれば防げる。
だが、多くのincremen...]]></summary>
        <author>
            <name>tanukifk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[もう NCBI GEO の多くの FASTQ を処理しなくてもいいかもしれない #souyakuAC2023]]></title>
        <id>https://zenn.dev/136/articles/ncbi-gen-counts</id>
        <link href="https://zenn.dev/136/articles/ncbi-gen-counts"/>
        <updated>2023-12-17T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[創薬 (dry) Advent Calendar 2023 Day 18 の記事です。 #souyakuAC2023
ケモインフォの記事がほとんどの中、バイオインフォ（遺伝子発現解析）周りの記事です。
本稿では NCBI-generated RNA-seq count data とそのダウンロード補助パッケージ ncbi-counts (PyPI) を紹介します。

 GEO とは
Gene Expression Omnibus (GEO) とは、National Center for Biotechnology Information (NCBI) が管理するゲノムデータリポジトリです...]]></summary>
        <author>
            <name>136</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ちょっと裏技っぽいC++でのMessagePackの作り方]]></title>
        <id>https://zenn.dev/chillmura/articles/db9326aa20559d</id>
        <link href="https://zenn.dev/chillmura/articles/db9326aa20559d"/>
        <updated>2023-12-17T09:20:00.000Z</updated>
        <summary type="html"><![CDATA[この記事はSafie Engineers' Blog! Advent Calendar17日目の記事です。

 はじめに
こんにちは、セーフィーの画像認識エンジニアの木村（勇）です。
セーフィーのエッジAI搭載カメラで動作するアプリケーションの開発を行っています。このアプリケーションの実装ではC++が使われているのですが、サーバーとのデータやりとりでMessagePackというシリアライズの形式を使う機会が発生しました。
案外実用的な情報がなく意外と苦戦したポイントも多かったので、実際に行った手法（あまり正攻法じゃなさそうな）を共有したいと思います。

 MessagePackとは
基本...]]></summary>
        <author>
            <name>chillmura</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[小さくMLOpsを始めるための前処理順序付けライブラリdagstreamの紹介]]></title>
        <id>https://zenn.dev/slopetech/articles/4f299c4a1784fa</id>
        <link href="https://zenn.dev/slopetech/articles/4f299c4a1784fa"/>
        <updated>2023-12-17T09:17:22.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は MLOps Advent Calendar 2023 の 17 日目の記事になります。
機械学習システムの中で、複雑化しやすい前処理の順序関係を管理するシンプルなPythonライブラリ dagstream を作成したので、その紹介をしたいと思います。

GitHub: https://github.com/ricosjp/dagstream


ただし、後述するように、機械学習PoC (Proof Of Concept) プロジェクトで使うような比較的規模の小さなコードを想定しています。そのため、大規模システムや既存のフレームワークへの適用方法は対象としない点に...]]></summary>
        <author>
            <name>hedgeek</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Actions で、Poetry を使用しているプロジェクトに対して Snyk を適用する]]></title>
        <id>https://zenn.dev/comachi/articles/3bc8444ba94dca</id>
        <link href="https://zenn.dev/comachi/articles/3bc8444ba94dca"/>
        <updated>2023-12-17T06:20:42.000Z</updated>
        <summary type="html"><![CDATA[はじめに

この記事では、GitHub Actions で、Poetry を使用しているプロジェクトに対して Snyk を適用する方法について、メモとして残します。


 適用手順

 Auth Token の設定


https://app.snyk.io/account から Auth Token を取得し、GitHub の Secret に、例えば SNYK_TOKEN として設定する。


 ワークフローの作成


snyk/actions/python@master の args の --file に、poetry.lock のパスを設定する。


 .github/wor...]]></summary>
        <author>
            <name>comachi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[構造一貫解析ソフトSS7をPythonで実行する #1]]></title>
        <id>https://zenn.dev/kitagawadisk/articles/bc6fdfb2050e56</id>
        <link href="https://zenn.dev/kitagawadisk/articles/bc6fdfb2050e56"/>
        <updated>2023-12-17T06:04:45.000Z</updated>
        <summary type="html"><![CDATA[構造一貫解析ソフトSS7をPythonで実行する #1 概要
SS7を外部ソフトから実行する手段は現在２種ある。どちらの方法にせよ、csvを介してSS7の「解析結果の確認」と「入力データ書換え」を行い、繰返し計算をすることで最適化を目指す。
コマンド実行の使用例については以下のYoutubeアカウントの方が示されているので、参考にされたい。https://www.youtube.com/@auto-designer4641/videos[SS7 Op.コマンド実行]『SS7』の機能を外部から実行するオプションソフトウェア『Super Build／SS7 Op.コマンド実行』 | 建築構造...]]></summary>
        <author>
            <name>kitagawadisk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AI Challenge入門ガイド(1)]]></title>
        <id>https://zenn.dev/ttanaka3/articles/3dc507df539985</id>
        <link href="https://zenn.dev/ttanaka3/articles/3dc507df539985"/>
        <updated>2023-12-17T04:54:58.000Z</updated>
        <summary type="html"><![CDATA[この記事の対象者
AI Challengeで環境構築は終わったけど次にどこから取り組んだらいいのかわからないという方に向けた記事です。概要からよくわからない方は以下の記事をご参考ください。
https://qiita.com/ttanaka3/items/bc8b090f8e427c32e25b

 何から取り組めばいいのかわからない場合はここからやってみよう

 lanelet2の地図を編集する(影響大)

 lanelet2とは？
今回の大会では車両の走行経路をlanelet2で定義しています。
lanelet2の説明は以下に記載しておきますので、初めての方は軽く読んでおいてくだ...]]></summary>
        <author>
            <name>tanaka3</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[俺の仮想通貨bot開発モチベ整理]]></title>
        <id>https://zenn.dev/afk2777/articles/zenn-bot-motivation</id>
        <link href="https://zenn.dev/afk2777/articles/zenn-bot-motivation"/>
        <updated>2023-12-17T03:51:23.000Z</updated>
        <summary type="html"><![CDATA[はじめに
はじめまして、makioと申します。
Sierエンジニア歴12年の34歳です。
2021年にrichmanbtc氏の仮想通貨botterへの誘いに関する書籍を読んで衝撃を受け、2023年11月にbotを放流し1000円稼ぐことができました。
開発をはじめたのが2年前で最近やっと少額で稼げるようになったわけですが、成果を出すまでに時間がかかってしまいました。
botを開発する目的を見失ってモチベが続かなかったのが原因です。
＃スプラ🦑の誘惑に負けて作業が続かなかったのもある。
本記事では今後の開発モチベを維持するために、金を稼ぐという点だけだと他の稼ぎ方もある中でなぜ俺はbo...]]></summary>
        <author>
            <name>makio</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PodmanとDev ContainersでPython開発環境を作る]]></title>
        <id>https://zenn.dev/ackylarkham/articles/ab5ddc3dd9ba1e</id>
        <link href="https://zenn.dev/ackylarkham/articles/ab5ddc3dd9ba1e"/>
        <updated>2023-12-17T01:54:09.000Z</updated>
        <summary type="html"><![CDATA[はじめに
久しぶりにPythonを使おうと思ったら、Macを買い替えたせいで開発環境がないことに気づきました。今まではMacに直にPythonをインストールして使っていたのですが、せっかくPodman Desktopもインストールしたんだし、コンテナーで開発環境作るかと思い立ってやってみたのでこの記事でその内容を公開します。
構築した環境は、下図のとおりです。下図のLocal OSがmacOS Sonoma 14.1.2, ContainerがPodman 4.8.2(Podman Desktop 1.5.3)です。マシンは、MacBook Air M2 2023, 24GBメモリを...]]></summary>
        <author>
            <name>あっきー</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[とあるレビューのSlack通知機能を周り道してやった話]]></title>
        <id>https://zenn.dev/nao_randd/articles/466f78053bb5c8</id>
        <link href="https://zenn.dev/nao_randd/articles/466f78053bb5c8"/>
        <updated>2023-12-17T00:59:46.000Z</updated>
        <summary type="html"><![CDATA[はじめに
ヤプリ Advent Calendar 2023の17日目の記事を担当します！iOSエンジニアの@Nao_RandDです
https://adventar.org/calendars/8946
この記事ではとあるサイトのレビューをSlackに通知することを実現するために、色々と回り道して実装した内容を紹介しようと思います🙋‍♀️
!
エンジニアでない方も雰囲気がわかるように作成したため、具体的なGCPの設定やPythonコードは記事にはありません 🙇‍♀️


 関連

Zapier
Google Cloud Platform(GCP)

Cloud Functions
C...]]></summary>
        <author>
            <name>Nao-RandD</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Googleコラボにシークレット機能が追加され、APIキーの管理が便利になった]]></title>
        <id>https://zenn.dev/robes/articles/04cc622f31c61b</id>
        <link href="https://zenn.dev/robes/articles/04cc622f31c61b"/>
        <updated>2023-12-16T23:42:16.000Z</updated>
        <summary type="html"><![CDATA[Googleコラボがアップデートし
シークレット機能が追加されました。
具体的には、
huggingfaceやOpenAIなどのAPIキーを
Googleコラボの「シークレット」に保存できるようになりました！
シークレットに保存された値は当然、非公開で
ユーザーだけが参照することができます。

 使い方

ノートブックを開いて、左側の鍵マークをクリック
名前と値（キー）を入力する（キーは""は不要です）

これだけです！

APIキーを呼び出す時は、以下のコードを実行します。]]></summary>
        <author>
            <name>osn_Lofi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gradioで複数アクセスに対応する方法]]></title>
        <id>https://zenn.dev/optimisuke/articles/2941db3a93fc05</id>
        <link href="https://zenn.dev/optimisuke/articles/2941db3a93fc05"/>
        <updated>2023-12-16T15:58:12.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Gradio で作ったアプリに複数アクセスがあった場合、重い処理（LLM の呼び出しとか）では待ち時間が発生することが判明しました。
対策としてやったことはとてもシンプルで、並行処理数のリミットを変更することで、複数同時アクセスが可能となり、待ち時間なく対応できました。結果的に対策はすごくシンプルでしたが、せっかくなので情報を残しておこうとおもいます。

 GRADIO_DEFAULT_CONCURRENCY_LIMIT
Gradio では、ボタンクリックの処理を実行するとき、並行処理数のリミットを設定することができます。
調べると、並行処理数のリミットのデフォルト値を一括...]]></summary>
        <author>
            <name>Optimisuke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HuggingFaceEmbeddingsのモデルがコンテナ実行時にダウンロードされるのを防ぐ]]></title>
        <id>https://zenn.dev/optimisuke/articles/9e744ababcda20</id>
        <link href="https://zenn.dev/optimisuke/articles/9e744ababcda20"/>
        <updated>2023-12-16T15:24:50.000Z</updated>
        <summary type="html"><![CDATA[はじめに
タイトルの通りだけれど、HuggingFaceEmbeddings のモデルがコンテナ実行時にダウンロードされるのを防ぐ方法を考えた。

 HuggingFaceEmbeddings を使ったベクターストア
詳しくは説明しないけど、LangChain とかで RAG (Retrieval-Augmented Generation)するとき、API を使わずに Embedding しようとするとこんな感じで書ける。
client = chromadb.PersistentClient(path=directory)
embedding = HuggingFaceEmbeddi...]]></summary>
        <author>
            <name>Optimisuke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[RDS(Aurora Serverless v2)にLambdaでアクセスしてみる]]></title>
        <id>https://zenn.dev/zgw426/articles/852df74849f4a7</id>
        <link href="https://zenn.dev/zgw426/articles/852df74849f4a7"/>
        <updated>2023-12-16T14:53:30.000Z</updated>
        <summary type="html"><![CDATA[やること
RDS(Aurora Serverless v2)にLambdaでアクセスできるかの検証メモです。

 構成図
この構成で検証しました。


※

Cloud9とRDS接続の設定はこの記事では省略
VPC Lambdaを作成
RDSプロキシ使用せず




 手順概要

（１）Aurora Servless v2のRDSを作る
（２）テーブルを作り、レコードを追加する

（２－１）セットアップ
（２－２）DBにアクセス
（２－３）テーブル作成とレコード登録
（２－４）UPDATEできるか確認
（２－５）PythonスクリプトでDBアクセス


（３）Lambdaレイヤーの作...]]></summary>
        <author>
            <name>suo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonの仮想環境venvをちゃんと理解する]]></title>
        <id>https://zenn.dev/optimisuke/articles/44bdf0e4a07b60</id>
        <link href="https://zenn.dev/optimisuke/articles/44bdf0e4a07b60"/>
        <updated>2023-12-16T14:50:02.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Python の venv をなんとなくで使ってたんですが、期待する Python バージョンや pip パッケージにならなくてモヤモヤしてたので、真面目に動きを確認しました。完全に理解したので共有です。

 python -m venv .venvで作られるもの
まず、venv で仮想環境作る前に、現状のどの python を使ってるかみてみます。
私の環境だと、pyenv を使ってるので、このパスに python があります。せっかくなので、バージョンを変更してみます。
% which python
/Users/optimisuke/.pyenv/shims/pyth...]]></summary>
        <author>
            <name>Optimisuke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GradioでImageを使うときの3つのtype]]></title>
        <id>https://zenn.dev/optimisuke/articles/37e0faf3497675</id>
        <link href="https://zenn.dev/optimisuke/articles/37e0faf3497675"/>
        <updated>2023-12-16T13:29:25.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Gradio で Image を使うとき、numpy.array, PIL.Image or str filepathの 3 タイプがあります（デフォルトではnumpy.array）。
それぞれ、使い所がありそうなので必要に応じてタイプを選ぶ必要がありそうです。
また、タイプによって画像の扱い方が違うので注意が必要です。
ここでは、画像をサーバー側で保存する方法について、コードを踏まえて説明します。
https://www.gradio.app/docs/image

 コードと画面
Gradio のシンプルな画面を作って、3 つのタイプでそれぞれ保存しています。
file...]]></summary>
        <author>
            <name>Optimisuke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google Colaboratoryで静的解析とスペルチェックをしたい]]></title>
        <id>https://zenn.dev/mima_ita/articles/29c51a6c9424d7</id>
        <link href="https://zenn.dev/mima_ita/articles/29c51a6c9424d7"/>
        <updated>2023-12-16T12:30:53.000Z</updated>
        <summary type="html"><![CDATA[背景
通常のpythonの開発では開発時にflake8を使用して静的解析を行ったり、cSpellを使用してスペルチェックを実施している。
同様にGoogle Colaboratoryでの開発時でも静的解析もスペルチェックうようにして、Colab上のコードを実際に製品コードに移行する負担を減らすようにする。
NotebookStaticAnalyzer
https://github.com/mima3/NotebookStaticAnalyzer
サンプルのノートブック
https://github.com/mima3/NotebookStaticAnalyzer/blob/main/...]]></summary>
        <author>
            <name>mima_ita</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Snowflake BUILD in Tokyoの参加レポ]]></title>
        <id>https://zenn.dev/dataheroes/articles/37930913bf19a6</id>
        <link href="https://zenn.dev/dataheroes/articles/37930913bf19a6"/>
        <updated>2023-12-16T09:54:45.000Z</updated>
        <summary type="html"><![CDATA[勝手に賑やかし&当日のSNS投稿係として参加
初めに日本法人代表の東條さんの挨拶

「日本法人が出来て4年です。」
「オフィスは渋谷だねと決めていました。」
「社員も増えました。」
本日も美しい、KTさん。これはクリスマス仕様だそうで
https://x.com/guen/status/1735600614028296299
以下、速記メモです


DBランキング、Snowflakeが10位になりました。


SFとPythonについて


「arima」なんだろう？Pythonのモジュ＾る
予測をできる
配列を見て、次の値を予測している
{1,2,3...10}をみて、11,1...]]></summary>
        <author>
            <name>ぬん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonの株価のポートフォリオを最適化して効率的フロンティアを描く]]></title>
        <id>https://zenn.dev/derbuihan/articles/aa610e27418127</id>
        <link href="https://zenn.dev/derbuihan/articles/aa610e27418127"/>
        <updated>2023-12-16T09:40:37.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Pythonで株価のポートフォリオを最適化して効率的フロンティアを描く方法を紹介します。

 株価のシミュレーション
この記事では、株価は幾何ブラウン運動に従うと仮定します。株価が幾何ブラウンの運動に従うと仮定すると、株価の確率変数は以下のようになります。[1]

S = S_0 \exp \left( \left( \mu - \frac{\sigma^2}{2} \right) t + \sigma W_t \right)

ここで、S_0は初期株価、\muは平均収益率、\sigmaはボラティリティ、W_tはブラウン運動の確率変数です。また、ブラウン運動の確率変数W_t...]]></summary>
        <author>
            <name>PONTA</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gradio: Pythonで簡単にAIをWebアプリ化]]></title>
        <id>https://zenn.dev/syado/articles/0d31f0f8964e14</id>
        <link href="https://zenn.dev/syado/articles/0d31f0f8964e14"/>
        <updated>2023-12-16T03:00:00.000Z</updated>
        <summary type="html"><![CDATA[!
この記事はSafie Engineers' Blog! Advent Calendar16日目の記事です。


 はじめに
セーフィー株式会社 開発本部 第3開発部 AIVisionグループで画像認識AIの開発エンジニアをしている土井 慎也です。
セーフィーには2023年1月に入社し、もうすぐ1年が経とうとしています。
今年を思い返せば、生成系AIを中心とした、AI界隈の発展がすごい1年でした。
毎日のようにいろんな技術が発表されて、使えそうなものはすぐにOSSに実装されていて、技術進歩の速度がものすごく速く感じました。
さて、今回はそんなAI界隈で使われているWEB UIツールのG...]]></summary>
        <author>
            <name>syado</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cognito + SES + Lambdaで任意のタイミングでメール送信]]></title>
        <id>https://zenn.dev/jij_inc/articles/c07b357b775b53</id>
        <link href="https://zenn.dev/jij_inc/articles/c07b357b775b53"/>
        <updated>2023-12-15T22:56:49.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事はJij Inc. Advent Calendar 2023の16日目の記事です。
はじめまして、株式会社Jij のtaqroです。

 概要
Cognito User Poolに登録されているEmailを取得し、SESを利用してメール送信を行うLambda関数を作成しました。これにより、簡単に顧客にメール送信を送ることができるようになりました。本記事ではその説明をします。

 背景
Jijでは2週間のスパンのsprintで開発をしています。sprintが完了後、そこでのプロダクトのアップデート内容をプロダクトを利用している顧客に向けてメール送信を行っています。しか...]]></summary>
        <author>
            <name>taqro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SAPPORO OPEN DATA HACKに参加してきた]]></title>
        <id>https://zenn.dev/knot/articles/e0f84d0783fa80</id>
        <link href="https://zenn.dev/knot/articles/e0f84d0783fa80"/>
        <updated>2023-12-15T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
ジョブカンアドベントカレンダー16日目の記事です！
https://qiita.com/advent-calendar/2023/jobcan
普段はジョブカンの開発インターンとして、札幌でお世話になっています。
今回のはハッカソンに参加してきたので、そのレポートと反省の記事です。

 どんなハッカソンに参加したの？
一般社団法人未完さん主催、アクセンチュアさん共催のSAPPORO OPEN DATA HACKというハッカソンに参加しました。
https://connpass.com/event/298303/
開催概要は以下のようになっています(connpassより引用)...]]></summary>
        <author>
            <name>knot</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[botter のためのデプロイ入門]]></title>
        <id>https://zenn.dev/mtkn1/books/deployment-for-botter</id>
        <link href="https://zenn.dev/mtkn1/books/deployment-for-botter"/>
        <updated>2023-12-15T19:39:14.000Z</updated>
        <summary type="html"><![CDATA[仮想通貨 bot をクラウドに自動デプロイする方法を紹介します。]]></summary>
        <author>
            <name>まちゅけん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[行列積状態について考える (5) — ニューラルネットワークのモデル圧縮]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-matrix-product05</id>
        <link href="https://zenn.dev/derwind/articles/dwd-matrix-product05"/>
        <updated>2023-12-15T18:15:53.000Z</updated>
        <summary type="html"><![CDATA[目的
行列積状態について考える (3) の続きとして、ニューラルネットワークのモデル圧縮について考えたい。arXiv:1509:06569 Tensorizing Neural Networks に沿って考えたい。

 全結合層と TT-層
ニューラルネットワークの全結合層は W \in \operatorname{Mat}(m,n; \R) および b \in \R^m に対して、x \in \R^n を入力として

\begin{align*}
y = Wx + b
\end{align*}

により出力 y \in \R^m を与えるようなものである。
以下、arXiv:150...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LINQ -> Python チートシート]]></title>
        <id>https://zenn.dev/shimat/articles/d8812d20e803cf</id>
        <link href="https://zenn.dev/shimat/articles/d8812d20e803cf"/>
        <updated>2023-12-15T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[C# Advent Calendar 2023の16日目の記事です。が主題はPython！
https://qiita.com/advent-calendar/2023/csharplang
「C#のLINQのアレは、Pythonではどう書くんだっけ？」という際の自分用メモです。

 想定読者

LINQは空気のように慣れ親しんでいる
Pythonは月並みに書けはする

時代はPythonですからね[1]。うまく付き合わないといけません。C#が母語という人がPythonを書くシーンを想定しています。

 環境

.NET 8 / C# 12
Python 3.12.0

Pythonにつ...]]></summary>
        <author>
            <name>shimat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebUIではなく素のDiffusersでLora（safetensors）もLCMもやる]]></title>
        <id>https://zenn.dev/kazuph/articles/1a67d696f5d68d</id>
        <link href="https://zenn.dev/kazuph/articles/1a67d696f5d68d"/>
        <updated>2023-12-15T01:55:12.000Z</updated>
        <summary type="html"><![CDATA[ざっくりこんな感じになります。V100で620msecで生成できます。


 Setup
!pip install -U diffusers transformers scipy ftfy accelerate

 LoRA modelのロード
今回はsafetensorsをダウンロードします。これはLoraとして指定すると数ステップで画像が生成できるようになります。
!wget  -O LCM-LoRA.safetensors "https://civitai.com/api/download/models/225222?type=Model&format=SafeTensor...]]></summary>
        <author>
            <name>kazuph</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[coremltoolsでPyTorchモデルをCore MLモデルに変換する]]></title>
        <id>https://zenn.dev/shu223/articles/coremltools_pytorch</id>
        <link href="https://zenn.dev/shu223/articles/coremltools_pytorch"/>
        <updated>2023-12-14T21:13:14.000Z</updated>
        <summary type="html"><![CDATA[coremltools 4.0からはコンバーターが大きく刷新され、PyTorchモデルがONNXを経由することなく直接Core MLモデルに変換できるようになった。
https://qiita.com/shu223/items/6ddfbedb4fdfb2059a11
coremltoolsをM1 Mac上に環境構築する手順についてはこちらに書いた。
https://note.com/shu223/n/n95af3b29d89e
本記事では現行の最新バージョンでPyTorchモデルをCore MLモデルに変換する実装について書く。
!
本記事は2022年8月に noteのマガジン に書い...]]></summary>
        <author>
            <name>Shuichi Tsutsumi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[RAPIDS RMMでRAMをGPUメモリとして使う]]></title>
        <id>https://zenn.dev/karunru/articles/7ff503d8ef7480</id>
        <link href="https://zenn.dev/karunru/articles/7ff503d8ef7480"/>
        <updated>2023-12-14T15:34:12.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は Kaggle Advent Calendar 2023 15日目の記事です
皆さん，GPUメモリ足りてますか！？
kaggleをやっているとどうしてもGPUメモリが足りなくてout_of_memoryを見る機会が多いと思います
本記事では，RAMをGPUメモリとして扱い，cuDFとpytorchでGPUメモリ足りない問題を解決する方法をご紹介します

 RAPIDS Memory Manager (RMM)
RAPIDS Memory Manager (RMM) とは，cuDFなどが有名なNVIDIAが開発しているライブラリ郡RAPIDS[1]のうちの一つで，G...]]></summary>
        <author>
            <name>やまぴー</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lambdaでdatetimeを定義するとき]]></title>
        <id>https://zenn.dev/jun784/articles/bc88e972e2a86d</id>
        <link href="https://zenn.dev/jun784/articles/bc88e972e2a86d"/>
        <updated>2023-12-14T15:21:35.000Z</updated>
        <summary type="html"><![CDATA[datetimeをglobalで定義してはいけない。
lambda_handler以下に定義
from datetime import datetime, timezone, timedelta

# このように定義するとlambdaのインスタンスの実行時間によって値が変わらない
now_jst = datetime.now(jst)

# 代わりにlambdaタイプをつける
now_jst = lambda: datetime.now(jst)
    
# UNIXタイムスタンプをミリ秒単位で取得
unix_timestamp_ms = int(now_jst.timestamp()...]]></summary>
        <author>
            <name>Jun Kawasaki</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PlanetScale APIを使ってDBテストを高速化した]]></title>
        <id>https://zenn.dev/keitakn/articles/accelerate-planetscale-test-code</id>
        <link href="https://zenn.dev/keitakn/articles/accelerate-planetscale-test-code"/>
        <updated>2023-12-14T15:03:23.000Z</updated>
        <summary type="html"><![CDATA[概要
PlanetScale APIを使ってDBテストを高速化したので、その時にやった具体的な手法を記載した記事になります。

 対象読者
下記の通りです。

テストコードを書いたことがある人
PlanetScaleを使ったことがある人
テストコードの実行速度に関して問題意識を持っている人

サンプルコードはPythonとpytestを使っていますが、この記事の内容は他言語のテストコードでも応用できるかと思います。

 筆者のバックグラウンド
普段はTypeScript（Next.jsを主に利用）を用いたフロントエンド開発者です。
以前はバックエンドエンジニアで主にGoを使ってAWS...]]></summary>
        <author>
            <name>keitakn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ブルーバックとか使わずにクロマキー合成する]]></title>
        <id>https://zenn.dev/kura103/articles/bd65ce70a2b595</id>
        <link href="https://zenn.dev/kura103/articles/bd65ce70a2b595"/>
        <updated>2023-12-14T15:00:01.000Z</updated>
        <summary type="html"><![CDATA[ハッピバースデートゥミ〜〜〜♪ハッピバースデートゥミ〜〜〜♪、ハッピバースデーディアわたし〜♪
ハッピバースデートゥミ〜〜〜♪
くら＠ちゅらデータ（43）です。
この投稿はちゅらデータアドベントカレンダー2023の15日目の記事です。
OBSで人と背景をクロマキー合成するときに背景を単色にする必要があるんですが大変なんでどうにかしたいなーって話です。

 はじめに
オンラインミーティングだとmeetやzoomの機能で綺麗に人と背景を合成してくれて散らかった部屋を晒さなくて済むんですが、OBSで合成する時が困るんですよね。
OBSのインプットの時点で背景を単色にできればスムーズに合成できる...]]></summary>
        <author>
            <name>kura103</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LLM・プロンプトの評価・テストフレームワークについてまとめてみた]]></title>
        <id>https://zenn.dev/pomcho555/articles/8e42f0a4ce39eb</id>
        <link href="https://zenn.dev/pomcho555/articles/8e42f0a4ce39eb"/>
        <updated>2023-12-14T14:09:48.000Z</updated>
        <summary type="html"><![CDATA[はじめに
ご存知の通り大LLM時代なわけで、つよつよな方からアフィリ記事までこぞってどうやってLLMで良い出力を得るかまとめております。そしてそのテクニックがプロンプトエンジニアリングとして体系化されつつあります。ただし、エンプラでLLMを真面目に使おうとすると、プロンプトの管理やLLMごとの管理、レスポンスタイムの計測など様々な評価を継続的にやる必要があります。従来のデータサイエンスでも結局評価や計測が後々重要になったきたことを考えると必然かもしれませんが、そこらへんをまとめた日本語の記事がなかったので、アドベントカレンダーというチャンスを使ってまとめてみます!
そのなわけで、この...]]></summary>
        <author>
            <name>pomcho555</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GIS × Python Tutorial Session1~ 座標データの中身 ~]]></title>
        <id>https://zenn.dev/daidai_daitai/articles/6018ca73367744</id>
        <link href="https://zenn.dev/daidai_daitai/articles/6018ca73367744"/>
        <updated>2023-12-14T14:01:42.000Z</updated>
        <summary type="html"><![CDATA[はじめに
GIS関連の業務を行う際に、どの様にデータを扱っていますか?
ローカル環境でGISに関する計算などを行う場合は、"QGIS" や "ArcGIS Pro" などのデスクトップアプリが有名で、私自身も "ArcGIS Pro" を使用しています。
GISエンジニアであればともかく、そうでない方はGISを補助的に利用するだけでガッツリ使うという方も少ないかもしれません。もちろんそれでも問題はないのですが、どの様なデータになっているのかを理解していると、活用の幅も広がるかもしれません。
このTutorialはPythonでGISデータを扱う事に焦点を当てて進めていきます。Part...]]></summary>
        <author>
            <name>橙。</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pyenvとpipenvでいい感じに環境作成]]></title>
        <id>https://zenn.dev/thiem/articles/a04c3113463a69</id>
        <link href="https://zenn.dev/thiem/articles/a04c3113463a69"/>
        <updated>2023-12-14T12:51:19.000Z</updated>
        <summary type="html"><![CDATA[実施環境
mac pro m2

 step1 Homebrewのインストール
$ /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

 Homebrewの環境変数の設定(zprofileを使用するパターン)
echo 'eval $(/opt/homebrew/bin/brew shellenv)' >> /Users/<<ユーザ名>>/.zprofile
eval $(/opt/homebrew/bin/...]]></summary>
        <author>
            <name>tammy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Polars の maintain_order について]]></title>
        <id>https://zenn.dev/shu421/articles/883deabe505052</id>
        <link href="https://zenn.dev/shu421/articles/883deabe505052"/>
        <updated>2023-12-14T09:06:51.000Z</updated>
        <summary type="html"><![CDATA[こんにちは！shu421と言います。
Polars Advent Calendar 2023 の 14 日目です。今回は Polars の maintain_order 引数について書きたいと思います。簡単な Tips 的な内容なのでさらっと読んでいただけると嬉しいです。また今回は version 0.19.5 を対象に記事を書きましたが、 Polars はアップデート頻度が多く、仕様がよく変わります。将来的にこの記事とは異なる仕様になる可能性もあるので、最新の仕様は公式ドキュメントを追っていただけると幸いです。
https://pola.rs/#

 目次

maintain_orde...]]></summary>
        <author>
            <name>shu421</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでカスタムファイルシステムを作ろう]]></title>
        <id>https://zenn.dev/nicosys_pub/articles/0yes6yg3pikxchv9klzws</id>
        <link href="https://zenn.dev/nicosys_pub/articles/0yes6yg3pikxchv9klzws"/>
        <updated>2023-12-14T06:40:53.000Z</updated>
        <summary type="html"><![CDATA[Pythonでカスタムファイルシステムを作ろう
Pythonでカスタムファイルシステムを作ろう
プログラマーのみなさん、こんにちは！今回はPythonでオレオレファイルシステムを作っているお話です。さっそくコードをご紹介しますね。
コードはcoloramaを使用して色づけし、フォーマットも適切に行っています。こちらが該当部分です。
def fuse_method(f):
    def wrapped_func(*args, **kw):
        try:
            return f(*args, **kw)
        except:
          ...]]></summary>
        <author>
            <name>Nicosys - BE:BUDDY（ビバディ）</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VS Code+DevContainer+Dockerで最強Python開発環境]]></title>
        <id>https://zenn.dev/aidemy/articles/vscode-env-python</id>
        <link href="https://zenn.dev/aidemy/articles/vscode-env-python"/>
        <updated>2023-12-13T23:37:07.000Z</updated>
        <summary type="html"><![CDATA[概要

 本書の内容
VS CodeとDockerを利用した、Python用開発環境の設定/利用方法を説明します。
本書で実現する開発環境の概略図は以下です。

Dockerを利用するので、動作環境のポータビリティが確保できる等のメリットがある他に、
以下のことができるようになります。

VSCodeのUIで、コンテナをビルド・起動する
VSCodeのUIで、コンテナ内のソースコード編集やスクリプトを実行する
などなど。

なお、本書は、PCがMacであることを想定して説明しますが、WindowやUbuntu-Destop等のLinuxディストリビューションでも同様のことができます。...]]></summary>
        <author>
            <name>masa-suke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ダミーの法人番号を生成する仕組みを作ろう]]></title>
        <id>https://zenn.dev/simpleform/articles/20231213-03-fake-corporate-number</id>
        <link href="https://zenn.dev/simpleform/articles/20231213-03-fake-corporate-number"/>
        <updated>2023-12-13T21:44:52.000Z</updated>
        <summary type="html"><![CDATA[エンジニアリングマネージャの犬束 (@sekainoinuatsu) です。
本記事は SimpleForm Advent Calendar 2023 の 13 日目の記事です。
当社では法人調査の情報基盤を作るため、法人に関する様々な情報を日々収集しています。
日本では、国税庁が全ての法人に 13 桁の法人番号を付与しており[1]、当社が法人の情報を収集して紐付ける上で積極的に法人番号を活用しています。
この 13 桁の番号は、完全にランダムに決められている数字というわけではなく、一定の規則があります。
実装においては、法人番号の規則性を利用するケースもあります。
そのため、自動テスト...]]></summary>
        <author>
            <name>シンプルフォーム Tech Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Topological SortでBigQueryのジョブをスケジューリングする]]></title>
        <id>https://zenn.dev/snagasawa/articles/schedule-bigquery-jobs-by-topological-sort</id>
        <link href="https://zenn.dev/snagasawa/articles/schedule-bigquery-jobs-by-topological-sort"/>
        <updated>2023-12-13T19:46:53.000Z</updated>
        <summary type="html"><![CDATA[!
この記事は ZOZO Advent Calendar 2023 シリーズ3 13 日目の記事です。

https://qiita.com/advent-calendar/2023/zozo

 概要
依存関係を持つBigQueryのSQLのジョブを、 Topological Sortによってスケジューリングする方法を紹介します。
dbtやDataformを利用すればおのずと依存関係に基づいたデータパイプラインを構築できますが、そのようなツールを導入しない簡易的な依存関係の解決手段としてお見知りおきください。

 サンプル
サンプルのリポジトリです。今回はgraphlibを利用するため...]]></summary>
        <author>
            <name>snagasawa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[新卒研修チーム分けを新卒が最適化した話]]></title>
        <id>https://zenn.dev/h_atsu/articles/training_team_opt</id>
        <link href="https://zenn.dev/h_atsu/articles/training_team_opt"/>
        <updated>2023-12-13T19:23:59.000Z</updated>
        <summary type="html"><![CDATA[こんにちは、新卒一年目データサイエンティストのはだです。
この記事はBrainPad Advent Calendarの12日目の記事です。

 はじめに
本記事では新卒研修のチーム決めを混合整数計画問題で定式化して解いてみた話をしたいと思います。
研修の空き時間に同期と雑談(ヒアリング？)しながらゼロからモデルを組み立てて、実際のチーム決めでも使われたのでとても良い経験になりました。
以下ではブレインパッドの新卒研修のざっくりした説明とチーム分けのモデルについて説明していきたいと思います。

 研修について
ブレインパッドの新卒研修は4,5,6月の3ヶ月間あり、4月はビジネス系研修、5月...]]></summary>
        <author>
            <name>h_atsu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[venv仮想環境を有効にしてもデフォルト環境のライブラリしか使えない]]></title>
        <id>https://zenn.dev/ssfuno/articles/d0a8b424f5c707</id>
        <link href="https://zenn.dev/ssfuno/articles/d0a8b424f5c707"/>
        <updated>2023-12-13T15:26:40.000Z</updated>
        <summary type="html"><![CDATA[結論
結論からいうと、私の場合、仮想環境を作成した後にフォルダを移動したことが原因だったので、元の場所に戻すと解決しました。

 動作環境

Windows 10
Python 3.11.1


 経緯と解決策
以前venvで作成した仮想環境をコマンドプロンプトから有効化したところ、仮想環境に導入していたはずのライブラリが使用できないようになっていました。
pip freezeでインストールされているライブラリを出力してみると、なんと仮想環境が無効になっているとき（デフォルト）の環境と同じになっていました。
調べてみるとこれは仮想環境のパスが正しく指定されていないために起きているよう...]]></summary>
        <author>
            <name>すふー</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[UE5とStableDiffusionでゲーム内の絵画を生成する]]></title>
        <id>https://zenn.dev/riti0208/articles/3b5a15776badbe</id>
        <link href="https://zenn.dev/riti0208/articles/3b5a15776badbe"/>
        <updated>2023-12-13T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[ホグワーツレガシーを以前やってるときに
絵画を使って屋内の情報量を増やしてる感じがあったので
StableDiffusionでUEと連携できないかと考え試しました。

 前提

今回StableDiffusionやPythonを使用して実装しますが、環境のインストールなどは省きます。
下記StableDiffusionWebUIを用います
https://github.com/AUTOMATIC1111/stable-diffusion-webui



 ざっくり完成形


 概要図


 StableDiffusionWebUIのAPIモード
StableDiffusionWebUI...]]></summary>
        <author>
            <name>Riti0208</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[オフラインのRaspberry Pi OSでpython-dotenvを使う]]></title>
        <id>https://zenn.dev/tkithrta/articles/5c1b27c8ec95dc</id>
        <link href="https://zenn.dev/tkithrta/articles/5c1b27c8ec95dc"/>
        <updated>2023-12-13T14:49:28.000Z</updated>
        <summary type="html"><![CDATA[!
この記事はRaspberry Pi Advent Calendar 2023 13日目の記事です。

少し前にRaspberry Pi OS Bookwormがリリースされました。
https://akkiesoft.hatenablog.jp/entry/20231012/1697120720
長らくオフラインのRaspberry Pi Zero WHにRaspberry Pi OS Bullseyeを入れて使用していたので、これを気にmicroSDを焼きなおそうかと思いながら新機能を見ても、アップデート内容がRaspberry Pi 4/5に関する内容ばかりです。
https:/...]]></summary>
        <author>
            <name>黒ヰ樹</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[BigQuery を Pandas のように操作する]]></title>
        <id>https://zenn.dev/cloud_ace/articles/35dd9dafc1f9bd</id>
        <link href="https://zenn.dev/cloud_ace/articles/35dd9dafc1f9bd"/>
        <updated>2023-12-13T10:10:19.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは、クラウドエース Data/ML ディビジョン所属の坂田です。
BigQuery 界隈のみなさん、「BigQuery DataFrames」という Python ライブラリをご存知でしょうか。
BigQuery DataFrames は 2023 年 9 月に登場したライブラリで、BigQuery データを使ってデータ分析を行うことができる、Google 提供のライブラリです。
BigQuery DataFrames は、2 つの機能に分かれています。


Pandas ライクな操作・機能を提供する bigframes.pandas


scikit-learn ...]]></summary>
        <author>
            <name>クラウドエース株式会社</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kaggle：データサイエンスと機械学習の世界へのパスポート]]></title>
        <id>https://zenn.dev/pipon_tech_blog/articles/1d7b27134bc560</id>
        <link href="https://zenn.dev/pipon_tech_blog/articles/1d7b27134bc560"/>
        <updated>2023-12-13T03:16:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
データサイエンスと機械学習は、現代のテクノロジー界の最前線に位置しています。
そこで第一歩目を踏み出そうとしても、「環境設定」がよくわからない…
基本書を読んでも分かるようでわからない…
色々と学んではいるけど、結局のところどう使えるのかがわからない…
そういった悩みに応えつつ、この分野における技術的スキルの向上や新たなアイデアの探求を目指すなら、Kaggleはあなたの理想的な出発点となるでしょう。
ここでは、Kaggleの概要からそのメリット、使用例、注意点までを詳しく解説します。

 Kaggleとは？
Kaggleは、データサイエンスと機械学習に特化した世界最大級のオ...]]></summary>
        <author>
            <name>マイケル</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pygameでゲームを作ろう]]></title>
        <id>https://zenn.dev/kwaka1208/books/pygame-programming</id>
        <link href="https://zenn.dev/kwaka1208/books/pygame-programming"/>
        <updated>2023-12-13T02:51:41.000Z</updated>
        <summary type="html"><![CDATA[pygameを使ったPythonプログラミング入門です]]></summary>
        <author>
            <name>Kenichi Wakabayashi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ddPn08/rvc-webui を今更ながら試す（API利用のみ）]]></title>
        <id>https://zenn.dev/kazuph/articles/c837435845cc1b</id>
        <link href="https://zenn.dev/kazuph/articles/c837435845cc1b"/>
        <updated>2023-12-13T02:15:25.000Z</updated>
        <summary type="html"><![CDATA[https://github.com/ddPn08/rvc-webui
何かしらのRVCのモデル（pth）を持っているとします。
僕は852話さんのBoothにいくつかあるのを買っています。
https://meola.booth.pm/
それでは、セットアップを開始しましょう。

 git clone
今回はAPI経由で利用したいので、ddPn08さんのrvc-webuiにある server.py を利用します。
中身を見るとわかりますがgradio経由でのAPIではなく素のflaskを使っているようです。
git clone https://github.com/ddPn08/rvc...]]></summary>
        <author>
            <name>kazuph</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[緯度経度データの検索・処理をいつもやっている]]></title>
        <id>https://zenn.dev/takilog/articles/199f30c01111a8</id>
        <link href="https://zenn.dev/takilog/articles/199f30c01111a8"/>
        <updated>2023-12-12T23:10:44.000Z</updated>
        <summary type="html"><![CDATA[本記事は情報検索・検索技術 Advent Calendar 2023の13日目の記事です。
最近Overtureのデータを触っていて、何回も同じ処理を書いていて頭がダメな感じなので、将来の自分のために処理をメモするために書いています。
特にライブラリをチョロっと使うだけの簡単な処理を書きました。
せっかくなので、これまでの細々とやっていた記事も宣伝しておきます。

シェープファイル(shpファイル)をPython+Geopandasで扱った
Overture Maps Foundationのデータを活用したい (3): Mapboxを用いたクラスタ可視化


 設定
どこかから処理してき...]]></summary>
        <author>
            <name>たきろぐ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python で実行時型チェックをしよう：改良版]]></title>
        <id>https://zenn.dev/wsuzume/articles/67ce25adea10b4</id>
        <link href="https://zenn.dev/wsuzume/articles/67ce25adea10b4"/>
        <updated>2023-12-12T17:28:32.000Z</updated>
        <summary type="html"><![CDATA[はじめに
よく調べたら前回作ったやつよりもシンプルかつ強力なのができたので共有します。
Python のバージョンは 3.10 以上にしてください。

 参考文献

inspect --- 活動中のオブジェクトの情報を取得する
functools --- 高階関数と呼び出し可能オブジェクトの操作


 Install
$ pip install nobus
from nobus.typecheck import typecheck

 コピペ用
ロクにメンテされていない個人開発のライブラリに抵抗がある人は以下のソースコードをコピペしてください。50行もなくとても素直で読めば分かると思...]]></summary>
        <author>
            <name>Josh Nobus</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[大規模言語モデルを自作しよう！(Transformers+DeepSpeed+torch.compile+flash_attn2）]]></title>
        <id>https://zenn.dev/selllous/articles/transformers_pretrain_to_ft</id>
        <link href="https://zenn.dev/selllous/articles/transformers_pretrain_to_ft"/>
        <updated>2023-12-12T16:43:47.000Z</updated>
        <summary type="html"><![CDATA[本記事は、LLM Advent Calendar 2023 13日目の記事です。
https://qiita.com/advent-calendar/2023/llm

 はじめに
🤗 Transformersは、自然言語処理、マルチモーダル、音声処理、コンピュータビジョン分野の事前学習済モデルを簡単にダウンロードしトレーニングすることが可能なpythonライブラリです。このライブラリを使用し、大規模言語モデル（LLM）の事前学習済モデルをローカルPC上にダウンロードし、それを使用した言語生成や、要約・翻訳・質問応答などの個別のタスクへのファインチューニング、チャットAIへの組み込みなど...]]></summary>
        <author>
            <name>celery</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flaskで全例外を共通関数で処理しつつ、デフォルトのInternal Server Errorページを表示]]></title>
        <id>https://zenn.dev/nondescript/articles/31517126cebb55</id>
        <link href="https://zenn.dev/nondescript/articles/31517126cebb55"/>
        <updated>2023-12-12T15:42:53.000Z</updated>
        <summary type="html"><![CDATA[TL;DR

エラーがwerkzeug.exceptions.HTTPExceptionのサブクラスでないときにInternalServerError()を返却する


 要求

すべてのルーティングにおける全例外を、HTTPエラーとそれ以外のそれぞれでの共通関数で処理するか、あるいは両方の共通関数で処理したい
例外をハンドリングした際は全てデフォルトのHTTPエラーフォーマットで返したい


 実装例



 HTTPエラーとそれ以外のエラーで関数を分ける場合



server_sep.py
from flask import Flask
from werkzeug.except...]]></summary>
        <author>
            <name>素人の戯言</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[json 見やすくする]]></title>
        <id>https://zenn.dev/newjackhack/articles/7ac21dc83035fe</id>
        <link href="https://zenn.dev/newjackhack/articles/7ac21dc83035fe"/>
        <updated>2023-12-12T12:44:59.000Z</updated>
        <summary type="html"><![CDATA[test.txt
{
  "person": {
    "name": "John Doe",
    "age": 30,
    "address": {
      "city": "Example City",
      "state": "Test State",
      "zipcode": "12345"
    },
    "contacts": [
      {
        "type": "email",
        "value": "john.doe@example.com"
      },
      {
        "type":...]]></summary>
        <author>
            <name>New Jack Hack</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ALB / NLB のアクセスログを CloudWatch Logs に転送する（2023 年版）]]></title>
        <id>https://zenn.dev/nh8939/articles/fcb8d8e92adbd3</id>
        <link href="https://zenn.dev/nh8939/articles/fcb8d8e92adbd3"/>
        <updated>2023-12-12T12:32:27.000Z</updated>
        <summary type="html"><![CDATA[はじめに
ALB / NLB のアクセスログは S3 にしか出力できません。そのため、ログを検索するには Athena など S3 に対応した分析ツールを使用する必要があります。
Athena も非常に便利なツールですが、もっと手軽に CloudWatch Logs で閲覧したい場合は、S3 の Create Object イベントをトリガーに Lambda を実行してなんとかするパターンが一般的です。サンプルコードも GitHub などで見つけることができます。
https://github.com/rupertbg/aws-load-balancer-logs-to-cloudw...]]></summary>
        <author>
            <name>NH#8939</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[rye add BeautifulSoupしてrye syncするとエラーが出る]]></title>
        <id>https://zenn.dev/aiyoshida/articles/947d3751dfbb85</id>
        <link href="https://zenn.dev/aiyoshida/articles/947d3751dfbb85"/>
        <updated>2023-12-12T06:36:07.000Z</updated>
        <summary type="html"><![CDATA[結論
rye remove BeautifulSoup
rye add beautifulsoup4
rye sync
以上。

 経緯
$ rye add BeautifulSoup
$ rye sync
Reusing already existing virtualenv
Generating production lockfile: /（プロジェクトパス）/requirements.lock
    error: subprocess-exited-with-error

    × python setup.py egg_info did not run successfu...]]></summary>
        <author>
            <name>Ai.Yoshida</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SQLAlchemy flush超入門]]></title>
        <id>https://zenn.dev/simpleform/articles/20231212-06-sqlalchemy-flush</id>
        <link href="https://zenn.dev/simpleform/articles/20231212-06-sqlalchemy-flush"/>
        <updated>2023-12-12T04:50:07.000Z</updated>
        <summary type="html"><![CDATA[シンプルフォームの中仙道(@hinata17100) です。本記事は SimpleForm Advent Calendar 2023 の12日目の記事となっています。
本記事ではPythonの中でよく利用されているORMの1つであるSQLAlchemyの「flush」についてご紹介します。

 flushとは
flushとは、addとcommitの間というイメージをするとわかりやすいです。どういうことかというと、DB上に一時的に保存はされてはいるけどrollbackが可能な状態です。

 動作の例
文章ではわかりにくいと思うので実際に動作を見てみましょう。
game.nameがvalor...]]></summary>
        <author>
            <name>シンプルフォーム Tech Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS Lambda handler はどのように呼ばれるのか]]></title>
        <id>https://zenn.dev/hkdord/articles/lambda-handler-deep-dive</id>
        <link href="https://zenn.dev/hkdord/articles/lambda-handler-deep-dive"/>
        <updated>2023-12-12T04:05:20.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事はAWS Lambda と Serverless Advent Calendar 2023 12 日目の記事です。
AWS Lambda の handler 関数は Python の場合ドキュメントにあるように event と context という２つの引数を取ります。
def handler_name(event, context): 
    ...
    return some_value
一方で Go の場合 handler 関数はドキュメントにあるように context.Context と各呼び出し元のサービスに応じた event を引数に取る関数です...]]></summary>
        <author>
            <name>Hidekazu Karino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonでIMAP接続に使われた暗号化バージョンをチェックする]]></title>
        <id>https://zenn.dev/yktakaha4/articles/check_imap_tls_version_in_python</id>
        <link href="https://zenn.dev/yktakaha4/articles/check_imap_tls_version_in_python"/>
        <updated>2023-12-12T03:30:02.000Z</updated>
        <summary type="html"><![CDATA[小ネタです🍣
AWSにおいて、暗号化通信に用いられるプロトコルの最小バージョンが TLS 1.2 以上となることが2022年6月にアナウンスされていましたが、これはSDKなどが利用しているAPIエンドポイントを指しており、サービス内で独自にエンドポイントを定義するものについては一部が未対応の状態になっていました
https://aws.amazon.com/jp/blogs/news/tls-1-2-required-for-aws-endpoints/
例えば、マネージドのIMAPサービスであるWorkMailにおいては上記対応の期限が2023年12月であることを通知されていました
こ...]]></summary>
        <author>
            <name>Yuuki Takahashi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[有限要素法による非時間依存3次元シュレディンガー方程式]]></title>
        <id>https://zenn.dev/lao/articles/4b9d5332e719fa</id>
        <link href="https://zenn.dev/lao/articles/4b9d5332e719fa"/>
        <updated>2023-12-12T02:00:58.000Z</updated>
        <summary type="html"><![CDATA[はじめに
有限要素法による非時間依存1次元シュレディンガー方程式で1次元, 有限要素法による非時間依存2次元シュレディンガー方程式で2次元のシュレディンガー方程式を有限要素法を用いて解いたので, 今回は3次元のシュレディンガー方程式を解く.
3次元のシュレディンガー方程式は

\left(-\frac{\hbar^2}{2m}\nabla^2+V(x,\,y,\,z)\right)\phi(x,\,y,\,z)=E\phi(x,\,y,\,z)

です（dV は体積分を表す.）. ただし, \displaystyle\nabla^2=\frac{\partial^2}{\partia...]]></summary>
        <author>
            <name>らお</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AIでどんなネタも寿司にする！寿司画像生成iOSアプリをつくった]]></title>
        <id>https://zenn.dev/mesummery/articles/8c54128f0dfbe2</id>
        <link href="https://zenn.dev/mesummery/articles/8c54128f0dfbe2"/>
        <updated>2023-12-11T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[クソアプリアドベントカレンダー2023 12日めの記事です。

 お寿司が食べたい

 お寿司食べたいですよね？
でもお寿司って高くないですか？
ひと味ちがうお寿司を食べたいな〜なんて思ってお店を探すと、会員制だったりしてね。
手軽にデリバリーで頼んでも、いつも混んでて届くまでちょっと時間がかかりません？
・・・そんなお寿司民たちに朗報です！
OpenAIの DALL·E と GPT をつかって、お寿司アプリをつくりました。

🔗 Sushify
OpenAI DALL·E と GPT とは...

 DALL·E
OpenAI 提供する画像生成ができるモデルです。

 GPT
Open...]]></summary>
        <author>
            <name>Na</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[価格変動パターンの類似度を使用したデータバリデーション]]></title>
        <id>https://zenn.dev/daidai_daitai/articles/20eef499ab86dd</id>
        <link href="https://zenn.dev/daidai_daitai/articles/20eef499ab86dd"/>
        <updated>2023-12-11T11:44:29.000Z</updated>
        <summary type="html"><![CDATA[当記事は、マケデコ Advent Calendar 2023 10日目の記事になります。
https://qiita.com/advent-calendar/2023/market-api

 はじめに
みなさんデータのバリデーションはどの様にしていますか？
バリデーションの方法は様々あり、その詳細に関しては私が書くまでもなく、世の中には情報があふれています。
株などの価格時系列データをバリデーションする際にはどのようにしたらいいのでしょうか。
こないだちょっとその事について思いついた方法があり、この記事を執筆するのに合わせて実装してみました。有用かどうかの検証は済ませていませんので、気...]]></summary>
        <author>
            <name>橙。</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pygameを使って球体を描画する]]></title>
        <id>https://zenn.dev/yonamine/articles/8d400c60706672</id>
        <link href="https://zenn.dev/yonamine/articles/8d400c60706672"/>
        <updated>2023-12-11T11:12:36.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Pygameを使って画面に球体を描画する基本的なプログラムを作成します。
このように描画されたら完成です。

以下のステップに従って進めてください。

 ステップ1: モジュールのインポート
まず、Pygameモジュールをインポートする必要があります。
import pygame


import pygame: これにより、Pygameライブラリがプログラム内で使用できるようになります。


 ステップ2: Pygameの初期化
次に、Pygameを初期化します。
pygame.init()


pygame.init(): Pygameを使う前に、この関数を呼び出してP...]]></summary>
        <author>
            <name>与那嶺あきお</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[類似記事のグルーピングを ChatGPT と GNN でやってみた]]></title>
        <id>https://zenn.dev/simpleform/articles/20231211-09-similar-articles</id>
        <link href="https://zenn.dev/simpleform/articles/20231211-09-similar-articles"/>
        <updated>2023-12-11T09:51:44.000Z</updated>
        <summary type="html"><![CDATA[シンプルフォームのエンジニアの杉です。本記事は SimpleForm Advent Calendar 2023 の 11 日目の記事です。
この記事ではニュースなどの文章に対して類似記事のグルーピングを ChatGPT と Graph Neural Network （ GNN ）を用いて試してみたことについて書かせていただきます。

 背景
世の中には多くのニュースが存在します。1 日のうちに作成される記事を全て読むということは難しいです。これらのニュースを要約やグルーピングすることができればより多くの記事を読むことが可能になります。
本記事では ChatGPT と GNN を用いたニュ...]]></summary>
        <author>
            <name>シンプルフォーム Tech Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPT+LangChain| Elasticsearch公式ドキュメントのQ&Aを作ってみる]]></title>
        <id>https://zenn.dev/zozotech/articles/86543f2ad9a09e</id>
        <link href="https://zenn.dev/zozotech/articles/86543f2ad9a09e"/>
        <updated>2023-12-11T02:25:28.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は、情報検索・検索技術 Advent Calendar 2023 の 11日目の記事です。
本記事では、最新のElasticsearchの公式ドキュメントの内容を元にQ&Aを行うチャットボットを、LLMとLangChain、さらには、Elasticsearchのベクトル検索機能を使って作成したので、実現方法や利用した技術について紹介します。

また、RAGを使ったWikipediaのQ&Aを作った話が、同アドベントカレンダーの4日目の記事で紹介されているので、気になる方はご参照ください。
https://secon.dev/entry/2023/12...]]></summary>
        <author>
            <name>さっと</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPT+LangChain| Elasticsearch公式ドキュメントのQ&Aを作ってみる]]></title>
        <id>https://zenn.dev/satto_sann/articles/86543f2ad9a09e</id>
        <link href="https://zenn.dev/satto_sann/articles/86543f2ad9a09e"/>
        <updated>2023-12-11T02:25:28.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は、情報検索・検索技術 Advent Calendar 2023 の 11日目の記事です。
本記事では、最新のElasticsearchの公式ドキュメントの内容を元にQ&Aを行うチャットボットを、LLMとLangChain、さらには、Elasticsearchのベクトル検索機能を使って作成したので、実現方法や利用した技術について紹介します。

また、RAGを使ったWikipediaのQ&Aを作った話が、同アドベントカレンダーの4日目の記事で紹介されているので、気になる方はご参照ください。
https://secon.dev/entry/2023/12...]]></summary>
        <author>
            <name>さっと</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FastAPIでWebSocketに入門してみた]]></title>
        <id>https://zenn.dev/knot/articles/dbce3e3a2f3f3a</id>
        <link href="https://zenn.dev/knot/articles/dbce3e3a2f3f3a"/>
        <updated>2023-12-11T02:22:13.000Z</updated>
        <summary type="html"><![CDATA[CISTアドベントカレンダー11日目の記事です！
https://qiita.com/advent-calendar/2023/cist
FastAPIでWebSocketを触ってみたので備忘録的な感じで記事にします。

 WebSocketとは？

https://learn.microsoft.com/ja-jp/azure/application-gateway/application-gateway-websocketより
WebSocketとはクライアントとサーバーの間で双方向通信を行うためのプロトコルです。
HTTP通信はリクエストとレスポンスの1セットのやりとりが終わると通...]]></summary>
        <author>
            <name>knot</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonのお作法「pep8」とは]]></title>
        <id>https://zenn.dev/oozeki/articles/python_about_pep8</id>
        <link href="https://zenn.dev/oozeki/articles/python_about_pep8"/>
        <updated>2023-12-10T15:17:50.000Z</updated>
        <summary type="html"><![CDATA[プログラムのコーディングスタイルとは
プログラムを正しく実行させるには、決められたルールの元、記載しなければいけません。
ガイドラインpep8
Pythonの場合、関数の宣言する場合はdefから宣言する事や、インデントを活用してプログラムのブロックを定義する等、様々な書き方のルールであるコーディングスタイルというのが決められています。
Pythonのコーディングスタイルは公式にpep8というガイドラインが決められています。
https://pep8-ja.readthedocs.io/ja/latest/
本稿では、基本的なコード(ルール通りじゃないと実行されない)の記載方法は省略し...]]></summary>
        <author>
            <name>oozeki</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python + FastAPIでオニオンアーキテクチャ（簡易版）]]></title>
        <id>https://zenn.dev/keitakn/articles/python-fastapi-onion-architecture-simplified</id>
        <link href="https://zenn.dev/keitakn/articles/python-fastapi-onion-architecture-simplified"/>
        <updated>2023-12-10T15:12:06.000Z</updated>
        <summary type="html"><![CDATA[概要
Python、FastAPIを用いてオニオンアーキテクチャ（簡易版）を実現するための解説記事です。

 対象読者

PythonやFastAPIを触ったことがある人
オニオンアーキテクチャなどのソフトウェアアーキテクチャに興味がある人


 筆者のバックグラウンド
普段はTypeScript（Next.jsを主に利用）を用いたフロントエンド開発者です。
以前はバックエンドエンジニアで主にGoを使ってAWS上でAPIの開発などを行なっていました。
最近はLLMを用いたアプリケーション開発に関わっています。
PythonやFastAPIの経験は浅いです。

 この記事を書こうと思っ...]]></summary>
        <author>
            <name>keitakn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPTと対話してGPSデータシミュレーションを探索した話]]></title>
        <id>https://zenn.dev/t_shunsuke/articles/af6309d6c51e89</id>
        <link href="https://zenn.dev/t_shunsuke/articles/af6309d6c51e89"/>
        <updated>2023-12-10T15:10:15.000Z</updated>
        <summary type="html"><![CDATA[概要
本稿の概要を以下に書きます。

ChatGPTにより、ノーコードで歩行GPSシミュレーションデータを作成

スキーマとサンプリング周期等の要件をプロンプトに指定することにより、テーブルデータを生成
出力データを地図上にプロット


Pythonを使う歩行GPSシミュレーションデータの作成方法をChatGPTと探索

ノーコードでは限界がありそうだと分かった
PythonによるシミュレーションデータをChatGPTと対話しながら作成
出力データを地図上にプロット




 はじめに
本稿はOptimind Advent Calendar 2023の11日目の記事です。
ちょうど一...]]></summary>
        <author>
            <name>t_shunsuke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloud Run に双方向通信アプリケーションをデプロイしてみよう]]></title>
        <id>https://zenn.dev/google_cloud_jp/articles/26f99daf156914</id>
        <link href="https://zenn.dev/google_cloud_jp/articles/26f99daf156914"/>
        <updated>2023-12-10T15:00:01.000Z</updated>
        <summary type="html"><![CDATA[tl;dr;

Cloud Run で WebSocket を利用したアプリケーションを動かしてみた
Google Cloud の話は半分くらいで、半分くらいはアプリケーションの実装の話です


 はじめに
こんにちは、パートナーエンジニアの Shoです。
この記事は Google Cloud Advent Calendar 2023 / 101 版の 12/11 の記事です。
皆さん、Cloud Run を使っていますか？ Cloud Run を利用したサービスというと、ウェブサービスだったり、APIサーバだったりを思い浮かべる方が多いかもしれません。
実は、 Cloud Run ...]]></summary>
        <author>
            <name>Sho / Sho Onuma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[tkinter/customtkinterでMarkdown記法のファイルを表示するアイデア]]></title>
        <id>https://zenn.dev/foxfoxfox/articles/be23e942cf3192</id>
        <link href="https://zenn.dev/foxfoxfox/articles/be23e942cf3192"/>
        <updated>2023-12-10T14:10:03.000Z</updated>
        <summary type="html"><![CDATA[記事の要約
pythonのtkinter/customtkinterでMarkdown形式のファイルを読み込みたいとき、それほど高機能でなくてもいい場合は自分でパーサーを書くのが一番シンプル。

 あらすじ

現在私が趣味で作っているソフトはcustomtkinterでGUIを組んでいて、「使い方」タブがある
使い方はソフトの機能追加に合わせて更新したい、かつ多言語対応もしたいのでできれば大本のファイルをMarkdownで記述して、それをcustomtkinterに描画したい
しかし、Markdownをtkinterに読み込むライブラリは(検索した感じでは)なく、多くはHTMLに一度...]]></summary>
        <author>
            <name>🦊🦊🦊</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pysparkで汎用的に取込対象外のデータ行をskipする]]></title>
        <id>https://zenn.dev/johndoe/articles/4beabcd8c6ab8a</id>
        <link href="https://zenn.dev/johndoe/articles/4beabcd8c6ab8a"/>
        <updated>2023-12-10T13:03:22.000Z</updated>
        <summary type="html"><![CDATA[概要
マルチテナントの連携ファイル取り込みetlに関して、
異常データが入っている場合、その行ごとskipして保存できる分だけ保存する処理を
汎用的にするには。

 経緯
etl取込を行うにあたって、連携データの中には往々にして取り込めない異常データが存在する。
最終的に数値がで保存するのに文字列型であったり、日付型で保存するのに-のような日付に変換できないようなデータが混じっている場合がマルチテナントでファイル取り込みを行う場合、様々なシステムからの連携ファイルを取り込むので存在する。
マルチテナントのetl取り込みを共通のコードで汎用的に取り込めるようにしたのはまた別の話でやると...]]></summary>
        <author>
            <name>John</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[機械学習]サポートベクトルマシン(SVM)の気持ちを説明する(ハードマージン編)]]></title>
        <id>https://zenn.dev/sasshi_i/articles/4cede72ad782c0</id>
        <link href="https://zenn.dev/sasshi_i/articles/4cede72ad782c0"/>
        <updated>2023-12-10T12:12:44.000Z</updated>
        <summary type="html"><![CDATA[はじめに
今回の記事は機械学習と数理最適化 Advent Calendar 2023の11日目の記事です。
機械学習のアルゴリズムとして入門書でもよく取り上げられるサポートベクトルマシンについて解説します。今回はデータが線形分離可能(ex.1つの直線でデータを2つに分けられる)なケースについて説明します。次回以降の記事で線形分離不可能なケースも解説していく予定です。

 サポートベクトルマシンとは
サポートベクトルマシンは、機械学習アルゴリズムの1つで教師あり学習に該当するアルゴリズムです。サポートベクトルマシンでは、マージン最大化という考え方を基にデータを分離するための関数を定義し...]]></summary>
        <author>
            <name>Satoshi Ito</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Child Mind Instituteの気になったSolutionまとめと反省]]></title>
        <id>https://zenn.dev/stylishboob/articles/3ed2391ebe1042</id>
        <link href="https://zenn.dev/stylishboob/articles/3ed2391ebe1042"/>
        <updated>2023-12-10T10:00:39.000Z</updated>
        <summary type="html"><![CDATA[kaggleのChild Mind Institutionというコンペに参加し、見事惨敗しました(257位/1877チーム)。
コンペにちゃんと参加するのは初めてでしたが、それでもメダルを取れないと悔しいですね。
次のコンペでは勝てるよう、他の方のSolutionを読んで勉強しようと思い、この記事にまとめておきます。

 どんなコンペであったか
このコンペの目標は、睡眠の開始と終了を検出することでした。
手首に装着された加速度計データと日にちを訓練データとして使用して、人の睡眠状態を判断するモデルを開発します。

 どんなデータであったか
与えられたデータはtrain_seriesとtr...]]></summary>
        <author>
            <name>stylishboob</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django4.2 コンテナ環境構築]]></title>
        <id>https://zenn.dev/suraud/articles/create-django-docker</id>
        <link href="https://zenn.dev/suraud/articles/create-django-docker"/>
        <updated>2023-12-10T06:10:43.000Z</updated>
        <summary type="html"><![CDATA[概要
Django4.2 コンテナ環境構築に関する手順やメモ
環境：windows11（wsl2+ubuntu）
コンテナ構成：Django + MySQL

 ファイル構成(今回作成するもの)
$ tree -aL 2 django-env/
django-env/
├── .env
├── Dockerfile
├── docker-compose.yml
├── manage.py
├── myblog
│   ├── __init__.py
│   ├── __pycache__
│   ├── asgi.py
│   ├── settings.py
│   ├── urls...]]></summary>
        <author>
            <name>/UD</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでpyenv+poetry+FastAPIな環境を作成する]]></title>
        <id>https://zenn.dev/takuty/articles/b83c70c32820bb</id>
        <link href="https://zenn.dev/takuty/articles/b83c70c32820bb"/>
        <updated>2023-12-10T03:29:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Python のプロジェクト環境構築する時はみなさんどうしていますか？
Python のバージョンだったりプロジェクトの依存するパッケージなどできる限り簡潔に環境構築したいと思う方も多いと思います。
私は pyenv ＋ poetry を使用しています。これでプロジェクトごとにバージョン切り替えや仮想環境が作成できるので複数プロジェクトを開発するには良いかと思っています
今回は FastAPI を例に手順を記事にしていきたいと思います。

 補足
Windows でも環境構築可能ですが、今回は Mac での手順になります

 pyenv インストール
Homebrew上にイ...]]></summary>
        <author>
            <name>Takuty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust製の動画像可視化ツールRerunの紹介]]></title>
        <id>https://zenn.dev/higumachan/articles/52b0080ed72a8d</id>
        <link href="https://zenn.dev/higumachan/articles/52b0080ed72a8d"/>
        <updated>2023-12-10T02:29:45.000Z</updated>
        <summary type="html"><![CDATA[この記事はRust Advent Calendar 2023 シリーズ2と画像処理・画像解析 Advent Calendar 2023の10日目の記事です。

 rerunの紹介
rerunとは、rerun.ioという会社が開発している、動画像の可視化を強みとした

可視化UI
専用のロギングライブラリ

が一体となったOSSの可視化ツールになります。
こちらは、公式のexampleからの引用になりますが

のような画面を比較的簡単に作成することができます。
Rustで記述されている事による強みや特徴があり、恩恵に強くあやかれている言語だと思います。

 rerunの特徴
rerunは開...]]></summary>
        <author>
            <name>higumachan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Amazon Bedrock実装⑥：設計した規則に従いコードを生成するか試してみる]]></title>
        <id>https://zenn.dev/zgw426/articles/c5d4feed72be63</id>
        <link href="https://zenn.dev/zgw426/articles/c5d4feed72be63"/>
        <updated>2023-12-10T02:06:28.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Bedrockで、コードの設計規則（記載規則）に従いCDKのコードを作成させてみました。今まで、設計規則は担当者が理解し、その規則に従いコードを作成していましたが、これをAIにやってもらえるかの検証です。

 参考

Anthropic Claude models

https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters-claude.html
プロンプトのパラメータに関する情報


Amazon Bedrock テキストモデルのプロンプトテンプレートと例

https://docs.aws...]]></summary>
        <author>
            <name>suo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FireDucks を触ってみる 〜 Polars との比較を添えて〜]]></title>
        <id>https://zenn.dev/magicmoment/articles/try-using-fireducks-202312</id>
        <link href="https://zenn.dev/magicmoment/articles/try-using-fireducks-202312"/>
        <updated>2023-12-09T23:30:00.000Z</updated>
        <summary type="html"><![CDATA[この記事は Magic Moment Advent Calendar 2023 10 日目の記事です。

Magic Moment Data チームというチームでプロダクトのデータを活用した機能の検討・開発をしている @nagomiso と言います。好きな物はお酒とラーメンで普段は 9% チューハイ[1] で喉の渇きを癒しています。
さて Python でデータ加工や集計処理をするときに欠かせないライブラリと言えば pandas ですね。なんだかんだ Tabular Data を扱う時には欠かせないライブラリだと思います。
そんな定番ライブラリを高速化するライブラリとして颯爽と現れたのが...]]></summary>
        <author>
            <name>Magic Moment Tech Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LangChainやるならPythonよりTypeScriptの方がいんじゃね？]]></title>
        <id>https://zenn.dev/optimisuke/articles/d6dcb852e14c81</id>
        <link href="https://zenn.dev/optimisuke/articles/d6dcb852e14c81"/>
        <updated>2023-12-09T16:24:50.000Z</updated>
        <summary type="html"><![CDATA[はじめに
LangChain を Python で動かしているソフトウェアエンジニアの方々に意見を聞いてみたいんですが、「LangChain やるなら Python より TypeScript の方がいんじゃね？」って思うことありません？ありますよね？・・・え？・・・・・・ない？？？・・・え？・・・あるでしょ？
ということで、LangChain の JS/TS 版の LangChain.js について書いていこうと思いますー。
自分が Python の書き方よく分かってないってのが一番の理由だと思うんですが、LangChain 触ってると、TypeScript で書きたいなぁ、Typ...]]></summary>
        <author>
            <name>Optimisuke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FastAPIでCRUD APIエンドポイントを作成する]]></title>
        <id>https://zenn.dev/redheadchloe/articles/ccb1e38e5d1085</id>
        <link href="https://zenn.dev/redheadchloe/articles/ccb1e38e5d1085"/>
        <updated>2023-12-09T16:05:16.000Z</updated>
        <summary type="html"><![CDATA[はじめに
FastAPIの学習でCRUD APIを作成してみました。
FastAPI は、Python 3.8+ で API を構築するためのモダンで高速な Web フレームワークです。
https://fastapi.tiangolo.com/

 環境
Docker Desktop
Python 3.8+
MongoDB

 tl;dr

仮想環境を作成する
Dockerで環境構築する
DBの設定を行う
モデルを作成する
エンドポイントを作成する
CRUD操作を行う
SwaggerUIを使って検証する


 fastapiのディレクトリ構造
最低限の構造になりますが。
. # ル...]]></summary>
        <author>
            <name>🦓</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[モンハンの装備の選び方を数理最適化で考える]]></title>
        <id>https://zenn.dev/yumcyawiz/articles/044a56a3c4e604</id>
        <link href="https://zenn.dev/yumcyawiz/articles/044a56a3c4e604"/>
        <updated>2023-12-09T15:17:55.000Z</updated>
        <summary type="html"><![CDATA[この記事は数理最適化 Advent Calendar 2023の10日目の記事です。
モンスターハンターワールドというゲームの装備の組み合わせ最適化を整数計画法のソルバーを用いてチャレンジしてみたので、それについてまとめました。
本記事で作成したオプティマイザーは以下でWebアプリという形で公開しているので、是非試してみてください。
https://mhw-optimizer.streamlit.app/

 モンハンにおける装備選択問題
モンハンでは非常に多くの種類の武器、防具、装飾品、護石が存在します。プレイヤーはこれらが作る無数の組み合わせの中から、狩りを有利に進めるために、自分に...]]></summary>
        <author>
            <name>yumcyawiz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[キーボード操作をPythonで自動化する]]></title>
        <id>https://zenn.dev/ardririy/articles/76e73d4d78042f</id>
        <link href="https://zenn.dev/ardririy/articles/76e73d4d78042f"/>
        <updated>2023-12-09T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[この記事はProgate Path コミュニティ Advent Calendar 2023 12/10の記事です。

 事の顛末
友人と◯ver Watchというゲームで遊んでいた際に、遊んでいたうちの一人が面白いボイス[1]を発見してしまったために、それを連続で流すという遊びが始まりました。
その友人はCapsLockに該当のキーコンフィグを割り当てていたためボイスを流すためには薬指を使う必要があるのですが、例えばQやAなどは多くの場合薬指で押すことになるため、ゲーム内の移動やスキル使用がままならなくなる、という問題が発生します。
この問題は、プログラムによって「CapsLockを押し...]]></summary>
        <author>
            <name>ardririy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SnowflakeとChatGPTを組み合わせてワークシート上で自然言語からサンプルクエリを生成する]]></title>
        <id>https://zenn.dev/stafes_blog/articles/49ad7c4f956006</id>
        <link href="https://zenn.dev/stafes_blog/articles/49ad7c4f956006"/>
        <updated>2023-12-09T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[!
この記事は、スターフェスティバル Advent Calendar 2023の10日目です。

こんにちは！   @koonagiです。
振り返るとインフラやデータ基盤に関連するブログを今年は10本ほど書いてました。
ブログに書けてない学んだことが今年は他にもたくさんあった一年だったので、来年はもっとアウトプットしていきたし。
さて、自分の今年の締めのブログとして内容としては、今年の自分の技術的な関心が強かったSnowflakeとChatGPTを組み合わせた内容にしようと思います。
内容は薄め。

 できたもの
以下のページを参考にして、SnowflakeのUDFを使って、SQLで算出...]]></summary>
        <author>
            <name>koonagi (kohei yamazaki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LightFMから始める推薦システム入門]]></title>
        <id>https://zenn.dev/toma2/articles/2c2a1b5d185741</id>
        <link href="https://zenn.dev/toma2/articles/2c2a1b5d185741"/>
        <updated>2023-12-09T00:00:01.000Z</updated>
        <summary type="html"><![CDATA[アドベントカレンダー
株式会社GENDAでデータサイエンティストをしているtoma2です。
この記事は、GENDAアドベントカレンダー2023の9日目の記事になります。
https://qiita.com/advent-calendar/2023/genda
GENDAアドベントカレンダーでは、プロダクト開発や組織開発に関わるメンバーを中心に多様なテーマの記事を投稿しています。ぜひ、購読登録をしていただき12月25日までお楽しみください。

 はじめに
最近、推薦モデルを調べる中でLightFMについて勉強したので、その内容をまとめとデータセットMovieLensでの実行例を示します...]]></summary>
        <author>
            <name>toma2</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NumPyroでWAICを計算する]]></title>
        <id>https://zenn.dev/lucidfrontier45/articles/eb02774fb4e964</id>
        <link href="https://zenn.dev/lucidfrontier45/articles/eb02774fb4e964"/>
        <updated>2023-12-08T16:32:27.000Z</updated>
        <summary type="html"><![CDATA[概要
WAICはAICを改良して様々な場合でも利用できるようにした情報量基準です。詳しい理論的な背景は考案者である渡辺澄夫氏の以下のWebページなどを参照してください。(2024年には公開が終わるようなので早めに保存したほうがいいかも)
http://watanabe-www.math.dis.titech.ac.jp/users/swatanab/waic2011.html
この記事ではJaxをベースに開発された確率プログラミングのフレームワークであるNumPyroを用いてこのWAICを求める方法について説明します。(WAICの理論やNumPyro自体の詳細な解説はしません)
コー...]]></summary>
        <author>
            <name>lucidfrontier45</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonのMisskeyライブラリの進捗]]></title>
        <id>https://zenn.dev/yupix/articles/2ff668232f1ef3</id>
        <link href="https://zenn.dev/yupix/articles/2ff668232f1ef3"/>
        <updated>2023-12-08T15:00:01.000Z</updated>
        <summary type="html"><![CDATA[!
この記事はMisskey アドベントカレンダ―2023 9日目の記事です


 はじめに
この記事では私が開発しているMisskey API WrapperのMiPACとBot frameworkであるMiPAを紹介しつつ、その過程でMisskeyに貢献した物などをご紹介します。最初に軽くMiPA / MiPACそれぞれについてサンプルを交えつつ紹介していきます。

 MiPACについて
https://github.com/yupix/MiPAC
MiPACはMisskey Pthon API Coreの略で、Python上でMisskeyのAPIを操作するために作成しているライブ...]]></summary>
        <author>
            <name>ゆぴ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【個人開発 #1-5】レコメンドシステムを作ってみた vol.5　〜処理の実装〜]]></title>
        <id>https://zenn.dev/waka07/articles/development-diary_1-5</id>
        <link href="https://zenn.dev/waka07/articles/development-diary_1-5"/>
        <updated>2023-12-08T13:51:27.000Z</updated>
        <summary type="html"><![CDATA[作りたいシステム
忙しい人のためのギフト提案型 AI「AiSAP!(エイサップ)」
忙しい社会人のために、AI が可能な限り素早く（ASAP: As Soon As Possible）、最適なギフトを提案してくれる Web サービス。
今回は処理の実装について説明していきます。
今回で最終回となります。

 フォルダ構成
前回作成したフォルダ構成は下記のようになっています。
.
├── app.py
├── recommender.py
└── data
    ├── item.csv
    ├── rating.csv
    └── recipient.csv

 データの作...]]></summary>
        <author>
            <name>Waka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DataFrameを快適にクエリするライブラリを作った]]></title>
        <id>https://zenn.dev/eholic/articles/pandaq-library</id>
        <link href="https://zenn.dev/eholic/articles/pandaq-library"/>
        <updated>2023-12-08T13:51:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
pandas.DataFrameを使ったデータ分析をするときに、queryを使って中身を眺めることが良くあります。queryは強力ですが、抽出したい条件をクエリ文字列で記述する必要があります。シンプルな条件であれば苦もないですが、少し複雑な条件になると、f-stringを駆使したり、str.containsなどの関数が必要になり、書き辛さを感じていました。特に単純文字列なのでIDEの補完が効かない不便さもあります。
そこで、クエリを手軽に生成できるライブラリpandaqを作りました。

GitHub eholic/pandaq
pandaq・PyPI

!
本ライブラリは、...]]></summary>
        <author>
            <name>eholic</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Streamlit Elements を使ってドラッグ・サイズ変更可能なダッシュボードを作ってみた]]></title>
        <id>https://zenn.dev/hiroki_igeta/articles/fd38059fedaf86</id>
        <link href="https://zenn.dev/hiroki_igeta/articles/fd38059fedaf86"/>
        <updated>2023-12-08T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[この記事は、Retty Advent Calendar 2023、7日目の記事です🎄🎁 (1日遅れての投稿です > <)


 サマリ


streamlit-elementsを使うと、ドラッグ・サイズ変換可能なダッシュボードを作ることができる
Streamlitだと、データの集計対象の絞り込み・表示/非表示の出し分けのコントロールも行いやすい
実装した挙動はこんな感じ↓実際の挙動
※本記事の細かい実装内容はhttps://github.com/Igecchi/bq_streamlit/をご参照ください


 Streamlitとは?
Streamlitは、Pythonで実装...]]></summary>
        <author>
            <name>hiroki_igeta</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jijのプロダクト開発にRustを採用した]]></title>
        <id>https://zenn.dev/jij_inc/articles/fa5693fa2c7e27</id>
        <link href="https://zenn.dev/jij_inc/articles/fa5693fa2c7e27"/>
        <updated>2023-12-08T05:30:51.000Z</updated>
        <summary type="html"><![CDATA[この記事はJij Inc. Advent Calendar 2023の8日目の記事です。
こんにちは、株式会社Jijのしたろうです。
Rustを使ってJijZeptのバックエンドを開発するチームをマネジメントしています。

 なぜ私はRustを採用したのか？

私がJijに入社して以来、Rustを用いて2つのプロダクトを実装しました。一つ目は、数理モデルを記述するPythonパッケージ jijmodeling、二つ目は最適化問題を解くクラウドサービス JijZept のバックエンドです。
入社初期に、私はJijが提供するプロダクトの実装言語を選定する役割を担いました。我々のプロダクトは、...]]></summary>
        <author>
            <name>したろう</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-329｜B - Next]]></title>
        <id>https://zenn.dev/hyperdb/articles/a3508767d317b9</id>
        <link href="https://zenn.dev/hyperdb/articles/a3508767d317b9"/>
        <updated>2023-12-08T05:12:57.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-329 B - Next



 提出結果
def getInt():
    return int(input())


def getIntList():
    return list(map(int, input().split()))


def main():
    n = getInt()
    a = getIntList()

    b = [x for x in a if x < max(a)]
    print(max(b))


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-329｜A - Spread]]></title>
        <id>https://zenn.dev/hyperdb/articles/498ea68d696201</id>
        <link href="https://zenn.dev/hyperdb/articles/498ea68d696201"/>
        <updated>2023-12-08T05:12:56.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-329 A - Spread



 提出結果
def getString():
    return input()


def main():
    s = getString()

    print(" ".join(list(s)))


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[StreamlitのUploadedFile.read()で、Document stream is emptyエラーにハマった]]></title>
        <id>https://zenn.dev/enterrocken/articles/80e6739f2457c2</id>
        <link href="https://zenn.dev/enterrocken/articles/80e6739f2457c2"/>
        <updated>2023-12-08T03:28:28.000Z</updated>
        <summary type="html"><![CDATA[はじめに
初めまして。
都内IT企業で、データアルゴリズムチームのエンジニアをしております、Noraです。
今回の記事では、PythonでWeb開発を行えるフレームワーク「streamlit」において、PDFを読み込んで画像に変換する際にハマってしまったので、ハマりポイントとその解消法を解説いたします。
3分あれば読めるかと思いますので、同じポイントでハマった方はぜひご覧ください！

 ハマったポイント
今回ハマったポイントは「Document stream is empty」というエラーです。
以下は、エラーが起こったスクリプトです。
index.pyファイルの、file = co...]]></summary>
        <author>
            <name>yuki.hirano</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Snowflake】地理データの結合を列で実現したい]]></title>
        <id>https://zenn.dev/datum_studio/articles/623b470b7b4f4b</id>
        <link href="https://zenn.dev/datum_studio/articles/623b470b7b4f4b"/>
        <updated>2023-12-08T03:01:00.000Z</updated>
        <summary type="html"><![CDATA[概要(背景・目的)
地理データで同じようなポリゴン達の列を結合したいがST_COLLECT関数だとただ並べるだけなので重複を排除できない。その結果、レコードに乗らないデータが錬成されてしまう。ST_UNIONという関数もあるがこちらは引数が2列必要であり列の処理に向いていない。(入力までの準備が難しい)
なので、重複を削除しつつレコードで表示できるような処理をUDFsで解決していく。

 関連資料


https://medium.com/snowflake/how-to-use-python-udfs-for-geospatial-use-cases-in-snowflake-bd...]]></summary>
        <author>
            <name>_hama</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[生存時間分析を使ってみたのでざっくり説明]]></title>
        <id>https://zenn.dev/d2c_mtech_blog/articles/cfe222214576bf</id>
        <link href="https://zenn.dev/d2c_mtech_blog/articles/cfe222214576bf"/>
        <updated>2023-12-08T02:25:10.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは、D2Cデータサイエンティストの内野です。
本記事では、自分が生存時間分析に初めて触れた際に欲しかった、噛み砕いた手法の説明と実際に使ってみた使用例をまとめていきたいと思います。
これから何かに生存時間分析を活用してみたい！イベント予測がしたくてどんな手法があるか気になる！というような方の参考になれば幸いです。


 生存時間分析とは

 生存時間分析の概要
生存時間分析とは、生存時間解析や生存分析とも呼ばれるイベントが発生するまでの時間を解析する手法のことです。
名前だけを聞くと、死亡するまでの時間を解析する手法のように聞こえますが、失病発症までの時間や工業製品...]]></summary>
        <author>
            <name>D2C データサイエンティスト 内野</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[『Pythonではじめる数理最適化』の7章「商品推薦のための興味のスコアリング」をStanで解く]]></title>
        <id>https://zenn.dev/tokin_tokin/articles/44daebd2833971</id>
        <link href="https://zenn.dev/tokin_tokin/articles/44daebd2833971"/>
        <updated>2023-12-07T23:09:14.000Z</updated>
        <summary type="html"><![CDATA[この記事は確率的プログラミング言語 Advent Calendar 2023の12/8の記事です。

 概要
『Pythonではじめる数理最適化』はいい本ですよね。親しみやすい実例、分かりやすい数式、きれいなPythonコードと三拍子そろっています (今年のアドカレで改訂版が近いうちに出ることを知りました)。
https://amzn.to/40Zuer1
7章「商品推薦のための興味のスコアリング」では、「何日前に直近の閲覧があったか」と「閲覧回数」の二つの軸で興味のスコアを考えます。興味のスコアが単調減少であるという制約のもと、再閲覧の割合と推定値の二乗誤差を最小化するという凸二次計画...]]></summary>
        <author>
            <name>Matsuura</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonまとめ]]></title>
        <id>https://zenn.dev/joeee/articles/077588ae239bcb</id>
        <link href="https://zenn.dev/joeee/articles/077588ae239bcb"/>
        <updated>2023-12-07T22:25:59.000Z</updated>
        <summary type="html"><![CDATA[type
str
float
number
など通常のタイプが用意されている。

 for文
for [ここにfor文の中で使いたい文字] in range [forを回す範囲]
上記で使える。

 if文

sample.py
if n < 100:
  // ここで処理
else:
  // ここで処理


 consoleで確認したいとき
console.logではなく、print()でコンソールに結果を表示できます。

 import
よくあるimportの仕方

sample.py
// 先頭
import test ffom "[相対パス]"


 function...]]></summary>
        <author>
            <name>jo-shino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[行列積状態について考える (4)]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-matrix-product04</id>
        <link href="https://zenn.dev/derwind/articles/dwd-matrix-product04"/>
        <updated>2023-12-07T17:10:04.000Z</updated>
        <summary type="html"><![CDATA[目的
行列積状態について考える (3) の続きとして、ニューラルネットワークが Tensor-Train っぽいコンポーネントを持つ場合に学習プロセスを実行してみたい、ということをやってみる。
以下で扱う実装に特に深い意味はないが、訓練が思ったような形で動作するのかを知りたいという感じである。

 行列の TT-分解
行列積状態について考える (3) より、行列 A = ( A(i_1,i_2) )_{1 \leq i_1 \leq r_1, 1 \leq i_2 \leq r_2} について、

\begin{align*}
A(i_1,i_2) = \sum_{\alpha_0,...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SQLAlchemy w/ PyMySQL で collation_connection に任意の collation を設定したい！]]></title>
        <id>https://zenn.dev/komiya_atsushi/articles/ac18ceca6c36de</id>
        <link href="https://zenn.dev/komiya_atsushi/articles/ac18ceca6c36de"/>
        <updated>2023-12-07T15:19:45.000Z</updated>
        <summary type="html"><![CDATA[tl;dr

SQLAlchemy は MySQL サーバとのコネクションを確立するタイミングで SET NAMES <charset> を (COLLATE の指定せず) 誰の許可もなしに勝手に発行しやがる困ったちゃん である

このふざけた挙動のせいで、サーバの collation_connection に utf8mb4_0900_bin を設定していても結果的に無視されてしまう


これを解消しようとして、create_engine() の connect_args パラメータによって collation を指定するステートメントを PyMySQL レベルのコネク...]]></summary>
        <author>
            <name>KOMIYA Atsushi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VSCode Dev ContainersでPython環境を構築する際のベストプラクティス]]></title>
        <id>https://zenn.dev/naas/articles/dev-container-python-best-practice</id>
        <link href="https://zenn.dev/naas/articles/dev-container-python-best-practice"/>
        <updated>2023-12-07T14:12:21.000Z</updated>
        <summary type="html"><![CDATA[はじめに
VSCodeのDev Containers機能を用いて、Pythonプロジェクトの開発環境を構築しました。
そこで得られた知見を共有します。

 実現する構成

Python
Poetry
セッションストア（Redis）
データベース（Microsoft SQL Server）


 完成形

 devcontainer.json
{
  "name": "devcontainer-python",
  "dockerComposeFile": ["docker-compose.yml"],
  "service": "server",
  "runServices": [...]]></summary>
        <author>
            <name>Nakano as a Service</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[llama.cppを使ってMacのローカルPC内にLLMサーバを立てる]]></title>
        <id>https://zenn.dev/michy/articles/46b275eb16b441</id>
        <link href="https://zenn.dev/michy/articles/46b275eb16b441"/>
        <updated>2023-12-07T12:16:29.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事はllama.cppを使ってMacのローカル環境にLLMサーバを立てるための手順を紹介しています。
llama.cppのビルドが終わっている環境を前提としています。
ビルド方法がわからない場合は、まずはこちらの記事を見てみてください。
https://zenn.dev/michy/articles/d13d24e5f19c56

 LLMサーバを立てると何が良いのか？
先の記事の通り、サーバを立てなくてもLLMの推論は可能ですが何度も繰り返し実行する場合はサーバを立てた方が圧倒的に処理が早くなります。
LLMの推論は、モデルを一度メモリに読み込んでから推論を実行する...]]></summary>
        <author>
            <name>zaiwa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Double DQNで深層強化学習]]></title>
        <id>https://zenn.dev/team411/articles/9f1db350845e98</id>
        <link href="https://zenn.dev/team411/articles/9f1db350845e98"/>
        <updated>2023-12-07T09:48:01.000Z</updated>
        <summary type="html"><![CDATA[team411のSugiyamaです！
team411は電通大の技術系サークルで、プロダクト開発、ソリューション開発などを行っております。
１年生は研修、２〜３年生はマネジメント、４年〜M2年は研究知識の応用を目標にしています！
今回は深層強化学習の１つ、Double DQNについて実装したので解説したいとおもいます。

 Double DQN

 Double DQNの概要
元論文:Deep Reinforcement Learning with Double Q-learning
https://arxiv.org/abs/1509.06461
Double DQNとは従来のDQN(...]]></summary>
        <author>
            <name>Sugiyama</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[#M5Stack ATOM LiteでFire TVのバグを「「修正」」する]]></title>
        <id>https://zenn.dev/muo/articles/940098aa9adbd4</id>
        <link href="https://zenn.dev/muo/articles/940098aa9adbd4"/>
        <updated>2023-12-06T21:54:16.000Z</updated>
        <summary type="html"><![CDATA[本記事はM5Stack Advent Calendar 2023の7日目の記事です

 Fire TV Stickシリーズ 長年のバグ
余ったPCモニターへFire TV Stickを挿してアマプラ端末化する際にどうしても許せないのがFire TVをスリープさせたときの挙動です
Fire TV本体をスリープさせてもHDMI信号出力がオフにならないため、モニターの省電力機能が効かず黒画面をずっと表示しっぱなしになります
これは有名な問題で、Amazon本家フォーラムでも2019年に立ったスレッドが未解決のまま放置されています
キューブ型のFire TVではスリープ時にHDMI信号がオフにな...]]></summary>
        <author>
            <name>@muo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[行列積状態について考える (3)]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-matrix-product03</id>
        <link href="https://zenn.dev/derwind/articles/dwd-matrix-product03"/>
        <updated>2023-12-06T15:54:22.000Z</updated>
        <summary type="html"><![CDATA[目的
行列積状態 (Matrix Product State; MPS) について以前に書いた 行列積状態について考える (2) の続きとして、もっと一般のテンソルでの Tensor-Train 分解 (量子化学の分野などでの呼称は MPS) を考えたい。
要するに SIAM J. Sci. Comput., 33(5), 2295–2317. (23 pages) Tensor-Train Decomposition, I. V. Oseledets の内容を実装したいということになる。

 TT-分解 (Tensor-Train 分解)
一般に A(i_1,i_2, \cdots...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LINEでつくる 音声翻訳機(ほんやくコンニャク)]]></title>
        <id>https://zenn.dev/ted_17/articles/7d476df997edcc</id>
        <link href="https://zenn.dev/ted_17/articles/7d476df997edcc"/>
        <updated>2023-12-06T15:24:43.000Z</updated>
        <summary type="html"><![CDATA[はじめにのはじめに
Zenn投稿テストもかねて、Qiitaから自分の記事をコピーしたものです。
内容が古い(2022年2月)ことは、ご了承願います。

 はじめに
AWS AIのサービスに、下記のようなものがある。

音声をテキストに変換するtranscribe
テキストを他言語翻訳するtranslate
テキストを音声に変換するpolly

これらを組み合わせれば、ほんやくコンニャクができるのではないか？
ちなみに私はおみそ味を食べてみたい。
ということでほんやくコンニャクのLINEBOTを作ってみた。
基本的にはAWSサービスをぽちぽちと繋げていくだけで、LINE設定含め半日あれ...]]></summary>
        <author>
            <name>teddy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pillowで画像をマスク画像に従ってクロップ]]></title>
        <id>https://zenn.dev/fmfm_mdk/articles/pillow-crop-by-mask</id>
        <link href="https://zenn.dev/fmfm_mdk/articles/pillow-crop-by-mask"/>
        <updated>2023-12-06T15:17:00.000Z</updated>
        <summary type="html"><![CDATA[四角形のアイコン画像の角を丸めたい，そんな時ありますよね．
この辺とかこの辺とか参照したうえで，より良い方法を検討した結果を報告します．

 解法
画像を2枚用意します．一つがマスク (mask.png) ，一つはクロップする対象 (image.png) です．二つの高さと幅は一致している必要があります．
import numpy as np
from PIL import Image

mask = Image.open( r"mask.png" )
mask = np.array( mask )

img = Image.open( r"image.png" )
img = np.a...]]></summary>
        <author>
            <name>fmfm_games</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jenkins+PythonでUnityの自動ビルド&自動デプロイ]]></title>
        <id>https://zenn.dev/kd_gamegikenblg/articles/c8b89f317d9cee</id>
        <link href="https://zenn.dev/kd_gamegikenblg/articles/c8b89f317d9cee"/>
        <updated>2023-12-06T15:00:01.000Z</updated>
        <summary type="html"><![CDATA[「神戸電子専門学校 ゲーム技研部 Advent Calendar 2023」7日目の記事です。
https://qiita.com/advent-calendar/2023/kdgamegiken

 はじめに
みなさんはUnityで開発している際に、頻繁にビルドをしているでしょうか?おそらく業務以外ではあまりしていないんじゃないかと思います。そしてアルファ/ベータテスト用に久々にビルドしてみるとビルドエラー/実行時エラーが出て修正作業に、、、なんてことの経験もあるのではないでしょうか。私はあります。(そしてビルドエラーの大半の原因はUnityEditorのusingだったり↓)

私の...]]></summary>
        <author>
            <name>shirokuma1101</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[レシピサイトをクローリングして健康になった気になってみた]]></title>
        <id>https://zenn.dev/simpleform/articles/20231207-07-crawling-recipes-with-scrapy</id>
        <link href="https://zenn.dev/simpleform/articles/20231207-07-crawling-recipes-with-scrapy"/>
        <updated>2023-12-06T14:44:37.000Z</updated>
        <summary type="html"><![CDATA[はじめに
エンジニアの @infinity0206 です。近年健康診断の数値が悪くなっており、そろそろ運動しないとやばそうです（しません）
本記事は SimpleForm Advent Calendar 2023 の7日目です。今回は社内で法人データのwebクローリングにも活用されている Scrapy についてお話しします！

 膨大なクローラの管理
弊社では SimpleCheck という法人情報を調査することのできるSaaSを開発しています。このサービスの一番根幹とも言える部分が法人データの管理になります。
web 上のデータ収集にはクローラを別途開発して運用しており、クローリン...]]></summary>
        <author>
            <name>シンプルフォーム Tech Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonでスクレイピングしてスプレッドシートに書きだす方法]]></title>
        <id>https://zenn.dev/takuya_zenn/articles/226774851b0ef8</id>
        <link href="https://zenn.dev/takuya_zenn/articles/226774851b0ef8"/>
        <updated>2023-12-06T11:52:05.000Z</updated>
        <summary type="html"><![CDATA[手順

Google cloud APIsの必要なAPIを有効化する
検索するコードを書く
スクレイピングするコードを書く
スプレッドシートに書きだすコードを書く
スプレッドシートに権限を付与する
実行する


 Google cloud APIsの設定を行う

 有効化するAPI
・Google Sheets API
・Custom Search API
Google cloudコンソールのAPIとサービスから、上記２つを検索し、有効化する。

 検索するコードを書く

search.py
from googleapiclient.discovery import build
im...]]></summary>
        <author>
            <name>たくや</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-328｜B - 11/11]]></title>
        <id>https://zenn.dev/hyperdb/articles/d12bf8cc7396a6</id>
        <link href="https://zenn.dev/hyperdb/articles/d12bf8cc7396a6"/>
        <updated>2023-12-06T04:48:52.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-328 B - 11/11



 提出結果
def getInt():
    return int(input())


def getIntList():
    return list(map(int, input().split()))


def main():
    n = getInt()
    d = [0] + getIntList()

    c = 0
    for i in range(1, n + 1):
        for j in range(1, d[i] + 1):
            if len(set(...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-328｜A - Not Too Hard]]></title>
        <id>https://zenn.dev/hyperdb/articles/88200d02fad0a7</id>
        <link href="https://zenn.dev/hyperdb/articles/88200d02fad0a7"/>
        <updated>2023-12-06T04:48:51.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-328 A - Not Too Hard



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    n, x = getIntMap()
    s = getIntList()

    print(sum([i for i in s if i <= x]))


if __name__ == "__main__":
    ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[再現性を担保したAWS Athenaでのランダムサンプリングについて(Advent Calendar Day 4)]]></title>
        <id>https://zenn.dev/d2c_mtech_blog/articles/e0d3ef00ac238a</id>
        <link href="https://zenn.dev/d2c_mtech_blog/articles/e0d3ef00ac238a"/>
        <updated>2023-12-06T02:53:11.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは、D2Cデータサイエンティストの小林です。
本記事では、AWS Athenaによるハッシュ関数を用いた再現性のあるサンプリング手法について検討します。
ハッシュについては以前の記事をご覧ください。
また、AWS AthenaでのDB作成やテーブル作成については触れませんので別の記事を参考にしていただければと思います。

 開発環境
検証において以下の環境を使用しました。
AWS EC2 (インスタンスタイプ: r5.xlarge)
Python 3.10系（3.10.9）
awswrangler 2.6.0
pandas 1.5.1
random 3.10系で提供...]]></summary>
        <author>
            <name>D2C データサイエンティスト 小林</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[arm64のLambdaでpydantic_coreモジュールが見つからなかった]]></title>
        <id>https://zenn.dev/gdtypk/articles/arm-lambda-pydantic-core</id>
        <link href="https://zenn.dev/gdtypk/articles/arm-lambda-pydantic-core"/>
        <updated>2023-12-06T01:18:27.000Z</updated>
        <summary type="html"><![CDATA[はじめに
LambdaのOSアーキテクチャをArmに設定した状態でデプロイすると、エラーになったので解決方法を残します。

 問題
Lambdaにコードをデプロイすると、以下のエラーが表示されました。
No module named 'pydantic_core._pydantic_core'
手元(Amazon Linux2023 X86)では動いていたのに、何でだろうなーと思いました。
arm64とX86で互換性が無いからかと思って、ビルドとデプロイする環境をM1 Macに切り替えたのですが、状況変わらずでした。

 解決方法
以下のリンクを見つけ、Amazon Linux202...]]></summary>
        <author>
            <name>ろん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWSアクセスを偽装し、Lambda→パラメータストア/Secrets Mangerの値をローカルサーバーから取得]]></title>
        <id>https://zenn.dev/nondescript/articles/35aec40e3bb976</id>
        <link href="https://zenn.dev/nondescript/articles/35aec40e3bb976"/>
        <updated>2023-12-05T16:22:46.000Z</updated>
        <summary type="html"><![CDATA[※ローカルでのテスト環境のことであり、実環境は対象外。

 TL;DR

ssm.ap-northeast-1.amazonaws.com,
secretsmanager.ap-northeast-1.amazonaws.comを
/etc/hostsで127.0.0.1に対応させる
自己署名証明書でsubjectAltName=DNS:*.ap-northeast-1.amazonaws.comを指定して443ポートで偽装サーバーを立てる
/lambda-entrypoint.sh実行シェルの環境変数REQUESTS_CA_BUNDLEに自己署名証明書のcrtファイルを指定する


 ...]]></summary>
        <author>
            <name>素人の戯言</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023弊研コンペ解法]]></title>
        <id>https://zenn.dev/xkurozaru/articles/5e953a3c6e09ee</id>
        <link href="https://zenn.dev/xkurozaru/articles/5e953a3c6e09ee"/>
        <updated>2023-12-05T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
今年度、弊研究室では機械学習コンペが開催されました。
かくいう私も参加しそれなりのスコアを出せたので、後輩たちの後学のためにも自分の解法を解説したいと思います。
本記事は 法政大学理工学部 Advent Calendar 2023 6日目の記事です。

 解法
スコアを上げるに当たっていくつかやったことがあるので、一つ一つ解説していきます。

 前処理
画像認識タスクでまずはじめにやるべきは、生画像を見ることです。
本コンペで使用するデータセットの中身を確認すると、やばいデータが大量にあることが確認できます。

やばい例
こういったあからさまなノイズは学習・識別の邪魔になる...]]></summary>
        <author>
            <name>xkurozaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[シミュレーションで理解するヤングの干渉実験]]></title>
        <id>https://zenn.dev/torataro/articles/2023-09-23-young_interference</id>
        <link href="https://zenn.dev/torataro/articles/2023-09-23-young_interference"/>
        <updated>2023-12-05T13:41:54.000Z</updated>
        <summary type="html"><![CDATA[ヤングの干渉実験
ヤングの干渉実験の対象となる光は波です。波であるならば以下の二つの性質を持ちます。

回折：直線的に進むことなく、物体の裏側に回り込みながら伝わっていくこと。
干渉：異なる波が重ね合わさり、それぞれが強めあったり弱めあったりすること。

この回折と干渉の原理を通じて光の干渉をスクリーン上に反映させる実験があります。それがヤングの干渉実験と呼ばれるものです。実験系を紹介します。

点光源から放たれた光はスリットが二つ設けられている二重スリットマスクまで伝搬し、マスクを通過した光は各々のスリットから回折しながらスクリーンへとさらに伝搬して行く流れです。ここでスクリーンに...]]></summary>
        <author>
            <name>寅太郎</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[awswrangler(Athena)でのデータ抽出をPolarsへ置き換えて高速化する]]></title>
        <id>https://zenn.dev/d2c_mtech_blog/articles/282b99e903a032</id>
        <link href="https://zenn.dev/d2c_mtech_blog/articles/282b99e903a032"/>
        <updated>2023-12-05T09:02:18.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは。D2Cデータサイエンティストの名越です。
Pythonでs3にある大規模なテーブルデータを多少の条件をつけて抽出する際どのように取得していますでしょうか？
Pandasを使ってデータ処理をする場合は大規模データだと重くなってしまうためできるだけ事前に処理をしたものを取り出したいですよね。
私の所属している部署では awswrangler を用いてAthenaでデータ取得することができる環境が整っているため、私はそこまで深く考えることもなくシステム内ではこのやり方でデータを抽出することが多いです。
本記事では既にある程度十分に速いawswranglerを用いた大規...]]></summary>
        <author>
            <name>D2Cデータサイエンティスト名越</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenAIのAssistant API試してみた【基本編】]]></title>
        <id>https://zenn.dev/kenshiroh/articles/72c95629dc8ad8</id>
        <link href="https://zenn.dev/kenshiroh/articles/72c95629dc8ad8"/>
        <updated>2023-12-05T06:19:58.000Z</updated>
        <summary type="html"><![CDATA[OpenAIの大型のアップデートが2023/11/7に発表されましたね。
GPT4-Turboがやはり目玉ではありますが、Assistant APIというのもβ版で公開されました。
概要を読んでみると、langchainのAgentのようなものをOpenAIが公式に実装したという感じですね。
周辺ツールとして作成されていたものを本家が作りに来るこのパターン、これまでにもよく見てきたパターンですがここでも始まってきましたね。
playgroundでもAPI経由でも使うことができるが、ここではAPI経由での使い方で試しながら、その特徴を見ていきましょう。
まずはSDKをアップデートする。as...]]></summary>
        <author>
            <name>kenshiroh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python命名規則]]></title>
        <id>https://zenn.dev/wanage/articles/8b8c890a47d477</id>
        <link href="https://zenn.dev/wanage/articles/8b8c890a47d477"/>
        <updated>2023-12-05T04:42:29.000Z</updated>
        <summary type="html"><![CDATA[命名規則



対象
ルール
例




パッケージ
全小文字。なるべく短く。アンダースコア非推奨。
tqdm, requests ...


モジュール
全小文字。なるべく短く。アンダースコア可。
sys, os,...


クラス
最初大文字 + 大文字区切り
MyFavoriteClass


例外
最初大文字 + 大文字区切り
MyFuckingError


型変数
最初大文字 + 大文字区切り
MyFavoriteType


メソッド
全小文字 + アンダースコア区切り
my_favorite_method


関数
全小文字 + アンダースコア区切り
my_favor...]]></summary>
        <author>
            <name>wanage</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[管理者権限がなく、pipでモジュールインストールできないWindows PCにPython環境を構築する手順]]></title>
        <id>https://zenn.dev/kwaka1208/articles/a-stand-alone-python-environment</id>
        <link href="https://zenn.dev/kwaka1208/articles/a-stand-alone-python-environment"/>
        <updated>2023-12-05T02:50:51.000Z</updated>
        <summary type="html"><![CDATA[概要
このページでは、限られた条件下にあるPCにPythonの動作環境を構築する手順を説明しています。対象はWindows PCのみとなります。
また、この記事ではディレクトリ（フォルダ）配置なども具体的に限定的に記述していますが、まったくの初心者でもここに書いてあるとおり進めれば環境を作れるようにするためのものです。ご自身の環境に合わせて適宜読み替えてください。

 コマンドラインでの操作
Pythonの実行環境の構築と自分で作ったPythonのプログラムの実行は、いずれも「コマンドライン」で行います。通常、Windowsではアプリの操作をマウスなどポインティングデバイスで行います...]]></summary>
        <author>
            <name>Kenichi Wakabayashi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS Lambda カスタムイメージを使って PostgreSQL に接続する]]></title>
        <id>https://zenn.dev/lincwell_inc/articles/984997447266d1</id>
        <link href="https://zenn.dev/lincwell_inc/articles/984997447266d1"/>
        <updated>2023-12-05T00:24:07.000Z</updated>
        <summary type="html"><![CDATA[はじめに
AWS Lambda から Python を使って PostgreSQL に接続するときに、 psycopg2 を使うことが多いと思います。
その場合、ZIP にパッケージングして Lambda にアップロードする必要があります。
今までは、 Serverless Framework を使ったり、 lambci/docker-lambda を使ってローカルでパッケージングしていました。
普段、 Terraform を使って Lambda などの環境を構築する際に、 ZIP ファイルを予めリポジトリに入れられれば管理が簡単ですが、ファイルが大きい場合デプロイ時に ZIP にパ...]]></summary>
        <author>
            <name>mani3</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[XSOverlayの手首メニューのメディアキーを自分のアプリの制御に利用する方法]]></title>
        <id>https://zenn.dev/dimebag29/articles/d29376aae38d97</id>
        <link href="https://zenn.dev/dimebag29/articles/d29376aae38d97"/>
        <updated>2023-12-04T22:16:55.000Z</updated>
        <summary type="html"><![CDATA[概要
pynputライブラリを利用したキーボードのグローバルフックによって、XSOverlayの手首メニューの「前の曲」「再生/一時停止」「次の曲」キーが押されたことを検知し、自分のアプリでお好みの処理を実行。その後、メディアプレーヤーなどの他のアプリが動いてしまわないようにキー入力のメッセージを破棄します。
手首メニューのメディアキーが押された時に情報を飛ばしてくれるような専用のAPIをXSOverlayが用意してくれているわけではありません。

XSOverlayの手首メニューの各メディアキーの場所

 環境

Windows10 64bit
Python 3.7.5
pynpu...]]></summary>
        <author>
            <name>dimebag29</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonのDecoratorを利用した引数・戻り値の型チェック実装]]></title>
        <id>https://zenn.dev/ytsakairi/articles/3c9ac78c755172</id>
        <link href="https://zenn.dev/ytsakairi/articles/3c9ac78c755172"/>
        <updated>2023-12-04T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[!
この記事はAidemy Advent Calendar 2023の５日目の記事です。
４日目はDynamicVizで次元削減から恣意性を除くでした！


 概要
自作関数を利用する際に、引数と戻り値の型チェックを行うことで、コードの安全性を高められます。
Pythonのデコレータとアノテーションを利用することで、簡単に複数関数へ型チェックを適用することができます。

 デコレータとは
デコレータは関数やクラスをラップして、別の関数を返す関数のことです。ここでは関数デコレータについて話を進めていきます。
既存の関数をラップすることにより、引数に指定した関数の前後で処理を追加することがで...]]></summary>
        <author>
            <name>sakairi-y</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenAI APIのJSON ModeとFunction Callingの精度比較]]></title>
        <id>https://zenn.dev/stafes_blog/articles/7f96753fa0de75</id>
        <link href="https://zenn.dev/stafes_blog/articles/7f96753fa0de75"/>
        <updated>2023-12-04T21:22:20.000Z</updated>
        <summary type="html"><![CDATA[!
この記事は、スターフェスティバル Advent Calendar 2023の5日目です。

こんにちは！   @koonagiです。
2023年も変わらずインフラエンジニアとデータ基盤エンジニアを兼務しておりまして、RDSのアップデートしたり、Snowflake使ったデータ基盤作ったり色々楽しくやっておりますー。一年早かったなー。
今日はゆるっとこれまで気になってたけど、調査できなかったOpenAI APIの仕様について調査したのでその結果を書いていきます！

 やったこと
システムにOpenAI APIを組み込むときに、OpenAIのJSON ModeやFunction Calli...]]></summary>
        <author>
            <name>koonagi (kohei yamazaki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ラジオ復権大作戦~自動切り抜き動画制作システム~]]></title>
        <id>https://zenn.dev/saurusu_saurusu/articles/e84b3790b38983</id>
        <link href="https://zenn.dev/saurusu_saurusu/articles/e84b3790b38983"/>
        <updated>2023-12-04T19:23:57.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさんこんにちわ！ラジオ大好き情報系大学院生です！学部生の頃は深夜１時まで大学で友人とプログラミングに没頭して、ニッポン放送さんのオールナイトニッポンを聴きながら下宿先に帰る生活をしていたほど、プログラミングとラジオに全てを捧げた生活を送っていました。笑（詳細）
そんな私の学生生活を支えてくれたラジオそしてラジオ業界の救世主となりうるシステムを開発しましたので、紹介したいと思います！

 ”ラジオ”の存在意義とは
今年の夏、東京での就職活動の帰りに、人生で初めて電車で『有楽町駅』を通りかかり、ニッポン放送がある「有楽町」に自分がいることに感激してしまい、改札を出てニッポン...]]></summary>
        <author>
            <name>saurusu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでエアコンのリモコン信号を解析し自在に操作できるようにする]]></title>
        <id>https://zenn.dev/mikiken/articles/encode-ir-signal</id>
        <link href="https://zenn.dev/mikiken/articles/encode-ir-signal"/>
        <updated>2023-12-04T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[この記事は、CAMPHOR- Advent Calendar 2023の5日目の記事です。

 はじめに
この記事は、以下の記事の続きです。
https://zenn.dev/mikiken/articles/decode-ir-signal
前回は、赤外線リモコンの信号をバイナリデータにデコードし、それをパースして以下のように16進数として表記する方法までを説明しました。
23cb260100205800c64000000000100000a3
この記事では、エアコンのリモコン信号を解析した上で、エアコンの運転状態からリモコン信号を生成する方法について説明します。

 エアコンのリモコ...]]></summary>
        <author>
            <name>mikiken</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python100本ノック#12 例外(Exception)処理]]></title>
        <id>https://zenn.dev/willyang/articles/19f45c0af8b992</id>
        <link href="https://zenn.dev/willyang/articles/19f45c0af8b992"/>
        <updated>2023-12-04T14:20:18.000Z</updated>
        <summary type="html"><![CDATA[例外(Exception)とは
Pythonではプログラムの実行時に発生するエラーを「例外」と呼ぶ。例外に対処することを「例外処理」といい、Pythonではtry, except文に例外を発生させる可能性があるコードと、例外が発生した際に行う処理を記述していく。

 例外処理

 基本文法(try, except)
try:
    発生しうる例外
except:
    例外をキャッチした際に処理

 具体例
try:
    f = open('python.txt', 'r')
    content = f.readline()
    print(content, end=...]]></summary>
        <author>
            <name>willyang</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Open-Interpreterを実行中に呼び出される再帰の上限を変更する]]></title>
        <id>https://zenn.dev/nakashi94/articles/8ff1a7636bea7f</id>
        <link href="https://zenn.dev/nakashi94/articles/8ff1a7636bea7f"/>
        <updated>2023-12-04T13:32:02.000Z</updated>
        <summary type="html"><![CDATA[概要
Open-Interpreterを実行中に呼び出される再帰の上限を変更する

 環境
Windows 10 Home
Docker 23.0.1-rd
Docker Compose v2.16.0
python 3.11.5
Dockerで作成したpython3.11.5を実行する環境で作業をすることを想定している。

 解決されるエラー
デフォルトではpythonが呼び出すことのできる再帰関数の上限が1000であるため、Open-Interpreterでコードを実行する際に再帰呼び出し回数が上限を超えると以下のエラーが出力される。
RuntimeError: maximum ...]]></summary>
        <author>
            <name>nakashi94</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pandasで特定の列におけるユニークな要素ごとの最後の行を取得する]]></title>
        <id>https://zenn.dev/activecore/articles/2691196280f4e7</id>
        <link href="https://zenn.dev/activecore/articles/2691196280f4e7"/>
        <updated>2023-12-04T12:30:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは。新卒エンジニアのwinnieです🐥
業務でPandasを触っているときに意外と難しかった（頭がどうにかなりそうだった）処理があったのでサクッと記事にしてみました。この記事は株式会社アクティブコアAdvent Calendarの5日目の記事になります！


 解説
ありのままを話すと「特定の列におけるユニークな要素ごとの最後の行を取得」します。何を言っているのかわからねーと思うがおれも何を書けばいいのかわからなかったので、以下の例を見てください。
以下の表から、「 A 列におけるユニークな要素ごとの最後の行を取得」します。



column A
column B...]]></summary>
        <author>
            <name>winnie279</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pandasの高速化はiterrows解消が9割]]></title>
        <id>https://zenn.dev/okun/articles/ca9881bee4d5a0</id>
        <link href="https://zenn.dev/okun/articles/ca9881bee4d5a0"/>
        <updated>2023-12-04T05:47:22.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは、株式会社オークンでデータサイエンティストをやっています、nobuです。
pandas、とにかく遅いですよね。
pandasの高速化については、いくつかのアプローチがあります

並行処理、並列処理を使う
他ライブラリを使う

polars
cudf



しかしそれらに手を出す前に、iterrows(ループ処理)を使っていたりしませんか？
知っている方には今更な話ですが、iterrowsは絶対に使ってはいけません！
iterrowsを解消し一括処理するだけで、かなりの速度改善ができます。
また、iterrowsを使ったままだと、上に挙げた他のアプローチをとってもあ...]]></summary>
        <author>
            <name>t_nobu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[アルゴリズムの勉強をしたい(今更)]]></title>
        <id>https://zenn.dev/hikaelis/articles/5bd1bdc90a42b4</id>
        <link href="https://zenn.dev/hikaelis/articles/5bd1bdc90a42b4"/>
        <updated>2023-12-04T03:57:25.000Z</updated>
        <summary type="html"><![CDATA[アルゴリズムの勉強をしたいと前々から思っていて、ようやく始めようと決意したので雑記

 きっかけ

【大学院時代】 Pythonの勉強したいなぁ…何かいいツールあるかなぁ…
-> AtCoder
-> 少しやって力尽きる(そもそもPythonをあまり理解してなかった)
【最近】 久しぶりに会った医師の友人が実はプログラミング出来ることを知る(AtCorder水色, 応用情報技術)
-> 危機感


 目的
アルゴリズム力強化。仕事でもアルゴリズム系のことが出来たら便利そう。今やっているものと合わせて
(ソフト開発) + (薬学知識) + (語学力) + (アルゴリズム)...]]></summary>
        <author>
            <name>hikaelis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TensorFlowのKeras関連モジュールの補完が効かない]]></title>
        <id>https://zenn.dev/laniakea/articles/658fd4b77a0af2</id>
        <link href="https://zenn.dev/laniakea/articles/658fd4b77a0af2"/>
        <updated>2023-12-04T00:59:19.000Z</updated>
        <summary type="html"><![CDATA[起こったこと
概ねタイトル通りだが、詳しく状況を記載していく。
筆者は普段、VSCodeのPylanceのanalyzerおよび補完機能を使用してPythonコードを書いている。ところが、TensorFlowのバージョン更新を境にtf.keras名前空間に属するモジュールの補完が効かなくなってしまった（その他のライブラリや関数では補完が効くので、VSCodeの破損ではない）。
tf.kerasにはlayersやmixed_precisionなども属しているため、影響はかなり致命的である。
ちなみに、詳しくは後述するが、TensorFlowのバージョンやコードの書き方によって補完の有無...]]></summary>
        <author>
            <name>Laniakea</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data Analysis GPTを先生にしてデータ分析を練習した]]></title>
        <id>https://zenn.dev/saka1/articles/632cc76e14f6fb</id>
        <link href="https://zenn.dev/saka1/articles/632cc76e14f6fb"/>
        <updated>2023-12-04T00:47:35.000Z</updated>
        <summary type="html"><![CDATA[データ分析および機械学習の題材として非常に有名なデータセットに「タイタニック」があります。
航海中に沈没したタイタニック号の乗客名簿が与えられるので、彼らの属性から生存したがどうかを予測する機械学習モデルを作成せよ、というわけです。
https://www.kaggle.com/competitions/titanic
筆者は機械学習についての知識に乏しかったので、これをやってみようと思いました。
学習にあたって、 タイタニックについて解説している記事・書籍はたくさんあると思いますが、今回は現代的なアプローチとして「ChatGPTにやり方を教わりながらデータセットを分析していく」ことをや...]]></summary>
        <author>
            <name>saka1</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jupyter tensorflowで学習するとき、長時間たったらKernel Crashになる原因の１つ]]></title>
        <id>https://zenn.dev/oniyama/articles/98684828fc87b5</id>
        <link href="https://zenn.dev/oniyama/articles/98684828fc87b5"/>
        <updated>2023-12-04T00:47:28.000Z</updated>
        <summary type="html"><![CDATA[日本語記事がなかったので。
Jupyter上でTensorflowを使って機械学習をするとき、学習自体はうまく行っているが長時間たつとKernel Crashになることがある。
たとえば、独立したAgentが大量にあるようなケースである。
このようなとき、利用中のメモリに注目したい。おそらくメモリが大量に食っていることだろう。
なぜメモリを食いまくっているかというと、ipythonのコマンド履歴をすべてメモリ上においているからだ。
これを防ぐために、
ipython --HistoryManager.enabled=False
などとして、コマンド履歴を無効化することをおすすめする。
実...]]></summary>
        <author>
            <name>Sugiyama</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lambda の同時実行数でハマった話]]></title>
        <id>https://zenn.dev/simpleform/articles/20231204-04-lambda-concurrency</id>
        <link href="https://zenn.dev/simpleform/articles/20231204-04-lambda-concurrency"/>
        <updated>2023-12-04T00:36:44.000Z</updated>
        <summary type="html"><![CDATA[シンプルフォームでエンジニアをやっている 中山@h7kayama と申します。
本記事は SimpleForm Advent Calendar 2023 の 4 日目の記事になります。
本日は最近一番ハマった「Lambdaの同時実行数」についてお話したいと思います。
弊社では SimpleCheck という法人名を入力するだけで世の中の情報を瞬時に収集し、30秒でレポーティングするサービスを開発しています。そんな SimpleCheck の裏側は主に AWS の Lambda を使用しています。Lambda のイベントソースは、FIFO SQS キューを使用しており SQS - Lamb...]]></summary>
        <author>
            <name>シンプルフォーム Tech Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[fletでプログレスバーを実装してみよう!!]]></title>
        <id>https://zenn.dev/rinadad/articles/5e50fa13d82fa8</id>
        <link href="https://zenn.dev/rinadad/articles/5e50fa13d82fa8"/>
        <updated>2023-12-03T20:33:07.000Z</updated>
        <summary type="html"><![CDATA[flet
https://flet.dev/
Flutterで構築されたPythonのGUIフレームワークです。

こんなものが作れます。

 プログレスバー
処理中であること、進捗をユーザーに視覚的にわかりやすく伝えることができる要素です。
ダウンロード処理や長い処理をする際には必須と言えるでしょう。
さて、fletでのプログレスバーの実装は非常に簡単です。
import flet as ft

def main(page:ft.Page):
    page.title = "プログレスバーのデモ"
    # 要素の定義
    progress_bar = ft.Progre...]]></summary>
        <author>
            <name>Rin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Streamlit コード辞典 -使えるPythonアプリ-]]></title>
        <id>https://zenn.dev/cocosan/books/f4e6732fe37151</id>
        <link href="https://zenn.dev/cocosan/books/f4e6732fe37151"/>
        <updated>2023-12-03T17:55:36.000Z</updated>
        <summary type="html"><![CDATA[StreamlitはWEBアプリが簡単に作れるライブラリでHTML、CSS不要、デプロイ簡単、サーバー使用料無料（Streamlit Community Cloud）で小さな組織、チームで手軽に簡単にアプリを共有することができます。

そのstreamlitの機能、画面での表現の仕方に関わるコードを辞書のようにひきやすくかつ場面の中で使い方もわかりやすく解説するよう努めました。

メーカーの営業マンがpythonを仕事や生活に具体的にどう役立てているか、活用事例をお伝えしたいと思い始めたYouTubeのチャンネル【使えるPythonアプリ】を体系的に整理した内容となっております。

Pythonの基礎を学んだ方が実戦でPythonを生かす段階でStreamlitはおすすめです。
そのstreamitを効率的に使いこなすためのコード辞典です。

仕事現場で使えるアプリのYoutube動画とソースコードも掲載しております。

■ アップデートについて
本書は随時アップデートされていきます。
一度購入された方はアップデート後も追加料金は発生いたしません。]]></summary>
        <author>
            <name>使えるpythonアプリ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dbt の persist_docs を source にも反映させたい！]]></title>
        <id>https://zenn.dev/tanuhack/articles/727fbbfa9eae6f</id>
        <link href="https://zenn.dev/tanuhack/articles/727fbbfa9eae6f"/>
        <updated>2023-12-03T15:00:01.000Z</updated>
        <summary type="html"><![CDATA[dbt Advent Calendar 2023 の 4 日目の記事です。
「DWH に関するメタデータの管理を dbt だけで完結させたい…。」この願望は、データエンジニアやアナリティクスエンジニアであれば、一度は考えたことがあるのではないでしょうか。
私は、管理するサービスを余程の理由がない限り増やしたくない人間なので、メタデータに関しても全て dbt だけで完結させたいと思っています。
dbt で管理しているカラムのメタデータ（dbt Docs の description）を DWH にも反映させたいとき、dbt_project.yml などの設定ファイルに persist_doc...]]></summary>
        <author>
            <name>たぬ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでエアコンのリモコン信号をデコードしパースする]]></title>
        <id>https://zenn.dev/mikiken/articles/decode-ir-signal</id>
        <link href="https://zenn.dev/mikiken/articles/decode-ir-signal"/>
        <updated>2023-12-03T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[この記事は、CAMPHOR- Advent Calendar 2023の4日目の記事です。

 TL;DR

ラズパイを使って、簡単なスマートリモコン[1]を作った
その際にエアコンのリモコン信号を解析したが、以外と大変だった
本記事ではリモコン信号をフォーマットに従いデコードしパースするところまでを説明


 はじめに
今年の夏は、めちゃくちゃ暑かったですね。帰宅前にエアコンをつけておきたいと思うことが多かった[2]ので、スマートリモコンを作りました。
https://twitter.com/mikikeen/status/1707810093440577627
製作物の概要としては、...]]></summary>
        <author>
            <name>mikiken</name>
        </author>
    </entry>
</feed>