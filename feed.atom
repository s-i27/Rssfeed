<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://s-i27.github.io/Rssfeed/index.html</id>
    <title>osmos::feed</title>
    <updated>2023-10-10T01:13:18.337Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://s-i27.github.io/Rssfeed/index.html"/>
    <link rel="self" href="https://s-i27.github.io/Rssfeed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[Notion API x Python]]></title>
        <id>https://zenn.dev/karaage0703/articles/9e58dec9eeaa86</id>
        <link href="https://zenn.dev/karaage0703/articles/9e58dec9eeaa86"/>
        <updated>2023-10-09T16:48:31.000Z</updated>
        <summary type="html"><![CDATA[Notion API Python SDK
とりあえず試したのでメモです。
以下公式が詳しいです。
https://github.com/ramnes/notion-sdk-py

 Notion側
以下でインテグレーションを作成します。
https://www.notion.so/my-integrations
以下の通りでOKです。

インテグレーションを作成すると、トークンを取得できます。取得したら、環境変数に設定しておきましょう。
$ export NOTION_TOKEN="NOTION_INTEGRATION_TOKEN"
制御したいページの右上の…をクリックして「+コネ...]]></summary>
        <author>
            <name>karaage0703</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonでCLIを含んだパッケージをhatchで作る]]></title>
        <id>https://zenn.dev/tk_hamaguchi/articles/788c9f7f2d290e</id>
        <link href="https://zenn.dev/tk_hamaguchi/articles/788c9f7f2d290e"/>
        <updated>2023-10-09T15:21:23.000Z</updated>
        <summary type="html"><![CDATA[記事の概要
PythonでCLIを作ろうと思った時、rubyでいうところの bundle gem 的なものがないかと探していたところ、hatchに辿り着いたので使い方をメモしておきます。
この記事で取り扱うのは下記の内容です。

環境準備
パッケージの雛形生成
ローカル環境での動作確認
Lintチェック
テスト
カバレッジ
パッケージング
依存ライブラリの管理


 0. 環境準備
まずは作業用のフォルダと仮想環境を準備する。
$ mkdir sandbox_hatch
$ cd sandbox_hatch
$ python3.11 -m venv venv
$ source ven...]]></summary>
        <author>
            <name>tk_hamaguchi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonのコルーチンをそこはかとなく理解する]]></title>
        <id>https://zenn.dev/fitness_densuke/articles/understanding_coroutine_in_python</id>
        <link href="https://zenn.dev/fitness_densuke/articles/understanding_coroutine_in_python"/>
        <updated>2023-10-09T12:24:02.000Z</updated>
        <summary type="html"><![CDATA[コルーチンの前に..ジェネレータの基本
コルーチンについていきなり説明する前に、その前提知識となるジェネレータについて解説します。
Pythonの用語集からジェネレータの意味を引用します。

(ジェネレータ) generator iterator を返す関数です。 通常の関数に似ていますが、 yield 式を持つ点で異なります。 yield 式は、 for ループで使用できたり、next() 関数で値を 1 つずつ取り出したりできる、値の並びを生成するのに使用されます。

ジェネレータは、イテレーション中に要素を動的に生成するイテレータになります。
特徴としてはyield を使い「値...]]></summary>
        <author>
            <name>Tamtam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【SAM】Lambda + API Gatewayの開発環境構築]]></title>
        <id>https://zenn.dev/y_taiki/articles/aws_sam_setup</id>
        <link href="https://zenn.dev/y_taiki/articles/aws_sam_setup"/>
        <updated>2023-10-09T09:14:16.000Z</updated>
        <summary type="html"><![CDATA[はじめに
SAMを使って、ローカルでAPI Gatewayを起動し、lambda_function.pyにリクエストできる環境を構築します

 SAMとは
AWSでサーバーレスアプリケーションを構築するためのフレームワークです。
このフレームワークを使用することで、AWS Lambda、Amazon API Gateway、およびその他のサーバーレスリソースのアプリケーションを定義、デプロイすることができます。
SAM CLIを使用すると、ローカルの開発環境でAWS LambdaやAmazon API Gatewayなどを模倣することができます。

 前提
以下の内容は、インストール...]]></summary>
        <author>
            <name>taiki</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ちょこちょこ作ってたmarkdown生成ライブラリを公開しました🐍]]></title>
        <id>https://zenn.dev/k5h/articles/243e31ce883eb3</id>
        <link href="https://zenn.dev/k5h/articles/243e31ce883eb3"/>
        <updated>2023-10-09T07:48:26.000Z</updated>
        <summary type="html"><![CDATA[こんにちは．
最近論文を提出して研究にひと段落ついたので，実験しながらちょこちょこ作ってたPythonのMarkdown生成ライブラリを公開しました．
元々は，実験結果を研究室で共有するために，pythonから直接markdown形式の表を直感的に出力できるようにしようと思って作っていました，
作っているうちに，思ったよりいい感じになってきて，他に人でも役に立てるようなものになったんじゃないかと思ったので，綺麗にラッピングしてPyPIに上げてみました．
もしよければ使ってみてくれると嬉しいです．

 mdfy





 Installation
pip install mdfy

 ど...]]></summary>
        <author>
            <name>k5h</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django REST FrameworkでのAPI実装からSwagger UIでスキーマを表示してみた]]></title>
        <id>https://zenn.dev/whitecat_22/articles/9e0682c17ac818</id>
        <link href="https://zenn.dev/whitecat_22/articles/9e0682c17ac818"/>
        <updated>2023-10-09T04:46:27.000Z</updated>
        <summary type="html"><![CDATA[はじめに
先日Django REST Framework（DRF）を利用してAPIを作成しました。
APIのドキュメントをつくることも考慮すると、Swaggerのドキュメント生成を基本機能としてサポートしているFastAPIに傾きかけましたが、やはりDjangoの強力な管理機能は業務アプリに欠かせません。
DRFで作成したAPIのドキュメントを簡単に作成できないかと調べていたところ、少しの工夫でFastAPIと同様にAPIドキュメントを自動作成することができることを知りました。
今回は、DRFで実装したAPIからAPIドキュメントの作成を自動化する手順をここに残します。
先人たちの知...]]></summary>
        <author>
            <name>whitecat_22</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React+DjangoRESTFramworkでSPAのToDoアプリをつくる]]></title>
        <id>https://zenn.dev/whitecat_22/articles/b82ee3e7a43011</id>
        <link href="https://zenn.dev/whitecat_22/articles/b82ee3e7a43011"/>
        <updated>2023-10-09T04:43:27.000Z</updated>
        <summary type="html"><![CDATA[背景
以前からDjangoにおけるWebアプリケーション作成において、ReactやFlutterなどのフロントエンドのフレームワークとの結合を考えております。
今回は、手始めにフロントエンドにReactを、バックエンドはDjango REST Frameworkを利用したRESTful APIで行なうことを目的にToDoアプリの作成をしながら学習した記録です。
先人たちの知恵をお借りするなどして解決できたことを、この場をお借りして感謝するとともに、大変恐縮ですが自分のメモとして、こちらへまとめておきます。

 はじめに
ReactやPython、Djangoなどの技術仕様も日に日に変...]]></summary>
        <author>
            <name>whitecat_22</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lambda@EdgeでHTTPレスポンスを圧縮したら発生した、Viewerのデコードエラーを解決する方法]]></title>
        <id>https://zenn.dev/datahaikuninja/articles/decode-compressed-response-generated-lambda-edge</id>
        <link href="https://zenn.dev/datahaikuninja/articles/decode-compressed-response-generated-lambda-edge"/>
        <updated>2023-10-09T03:35:19.000Z</updated>
        <summary type="html"><![CDATA[Lambda@EdgeでHTTPレスポンスを圧縮したら、Viewerのデコードエラーが発生した
オリジンリクエストトリガーのLambda関数でHTTPレスポンスを圧縮したら、Viewerのデコードエラーが発生してレスポンスボディをロードできなくなる事象が発生しました。
どのようにエラーを解決したか、備忘録的な記事を書こうと思います。
Lambda@Edgeで圧縮処理を行うのはかなり特殊なケースだと思いますが、同じ事象に困っている人の参考になれば幸いです。
なお、本記事内のコードはPythonですが、Node.jsでも参考になると思います。
結論から書くと、Lambda関数がretur...]]></summary>
        <author>
            <name>datahaikuninja</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[一緒に勉強していこうって本]]></title>
        <id>https://zenn.dev/shiki_01/books/my-study-book</id>
        <link href="https://zenn.dev/shiki_01/books/my-study-book"/>
        <updated>2023-10-09T02:26:27.000Z</updated>
        <summary type="html"><![CDATA[プログラマー志望の高校生が勉強したことを自分の備忘録としてまとめるだけ]]></summary>
        <author>
            <name>shiki-01</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloud FunctionsのHTTPトリガーを使って，Slackのチャンネルへ通知する]]></title>
        <id>https://zenn.dev/tossy21/articles/fe9745b2548595</id>
        <link href="https://zenn.dev/tossy21/articles/fe9745b2548595"/>
        <updated>2023-10-08T00:59:48.000Z</updated>
        <summary type="html"><![CDATA[Python Slack SDKからSlackのチャンネルへ通知する仕組みをGoogle Cloud Functionsで実現します。
Slack Appは，前回の記事で作成したものを用います。
https://zenn.dev/tossy21/articles/c9ff5d1e24b407

 Cloud FunctionsでSlackへ通知する関数を作成
Cloud Functionsで関数を作成します。
コードは前回同様のものをベースとして利用します。
以下のコードをmain.pyとして保存します。
Cloud Functionsでは，関数ディレクトリのルートにあるmain.pyと...]]></summary>
        <author>
            <name>tossy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【LINE API】LINE APIを取得する手順]]></title>
        <id>https://zenn.dev/eito_blog/articles/0eda0d55736f27</id>
        <link href="https://zenn.dev/eito_blog/articles/0eda0d55736f27"/>
        <updated>2023-10-08T00:56:41.000Z</updated>
        <summary type="html"><![CDATA[LINE APIを利用することで、botから自分のLINEにメッセージを送信するプログラムを作成することができます。
本記事では上記プログラム作成のために必要な下記の情報を取得する手順について解説していきます。

チェネルアクセストークン
ユーザーID


 LINE Developersにアクセス
添付URLにアクセスし、「今すぐはじめよう」をクリックします。
https://developers.line.biz/ja/services/messaging-api/
LINEアカウントでログインより、ログインします。


 LINE Developersへの登録
LINE Devel...]]></summary>
        <author>
            <name>エイト</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[りんなAIモデル一覧]]></title>
        <id>https://zenn.dev/taisan11/articles/4fd5fe6581e07d</id>
        <link href="https://zenn.dev/taisan11/articles/4fd5fe6581e07d"/>
        <updated>2023-10-08T00:30:28.000Z</updated>
        <summary type="html"><![CDATA[注意
これは適当にrinnaの文章生成系のaiをまとめたものです。どんぐらいの性能をしてるかを見て選ぶものです
なので紹介などは自分で調べてください
手抜き

 gpt-japanese

 1b
1.3B パラメータの日本語 GPT モデル

 モデルアーキテクチャ
24 層、2048 隠れサイズのトランスフォーマーベースの言語モデル。

 トレーニング
モデルは、従来の言語モデリング目標を最適化するために、日本語 C4、日本語 CC-100、および日本語 Wikipediaでトレーニングされました。同じデータから選択された検証セットでは約 14 パープレキシティに達します。

 ...]]></summary>
        <author>
            <name>たいさん!</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django REST FrameworkでAPIを作成してみた]]></title>
        <id>https://zenn.dev/whitecat_22/articles/f826daf43155cd</id>
        <link href="https://zenn.dev/whitecat_22/articles/f826daf43155cd"/>
        <updated>2023-10-07T13:57:28.000Z</updated>
        <summary type="html"><![CDATA[背景
以前からDjangoにおけるWebアプリケーション作成において、ReactやFlutterなどのフロントエンドのフレームワークとの結合を考えております。
今回は、それに先立ちフロントエンドとバックエンドとのやりとりをDjango REST Frameworkを利用したRESTful APIで行なうために学習した記録です。
先人たちの知恵をお借りするなどして解決できたことを、この場をお借りして感謝するとともに、大変恐縮ですが自分のメモとして、こちらへまとめておきます。

 はじめに
チグサさんのブログ：「チグサウェブ」の記事を参考に、Django REST Frameworkを利...]]></summary>
        <author>
            <name>whitecat_22</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python Slack SDKのchat.postMessageを使って，Slackのチャンネルへ通知する]]></title>
        <id>https://zenn.dev/tossy21/articles/c9ff5d1e24b407</id>
        <link href="https://zenn.dev/tossy21/articles/c9ff5d1e24b407"/>
        <updated>2023-10-07T12:07:40.000Z</updated>
        <summary type="html"><![CDATA[Python Slack SDKのchat.postMessageを使って，Slackのチャンネルへ通知します。

 Slack Appの作成


https://api.slack.com/apps へアクセス


Create New Appを押下


Create an appで「from scratch」を選択


App Name と workspace を選択し，Create Appを押下


Featuresの「OAuth & Permissions」を押下


Scopesの「Bot Token Scopes」で「Add an OAuth Scope」を押下


...]]></summary>
        <author>
            <name>tossy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[conda-forgeに自作ライブラリを登録した]]></title>
        <id>https://zenn.dev/pejpo/articles/8b60c9ee0122ee</id>
        <link href="https://zenn.dev/pejpo/articles/8b60c9ee0122ee"/>
        <updated>2023-10-07T09:07:27.000Z</updated>
        <summary type="html"><![CDATA[はじめに
PythonでSMiPolyというライブラリを作り、PyPIで公開していますが、この度、condaでインストールできるように、conda-forgeに登録しました(Anaconda.orgではこちら)。登録は、公式のインストラクションのStep-by-step Instructionsを中心に読んで進めました。
Zennでも、「Conda-ForgeにPythonパッケージを公開する手順」や、「自作パッケージをconda-forgeに登録してみた」といった記事が投稿されており、大変参考にさせていただきました。

 概要
PyPIに登録し、pipでインストールできる状態として...]]></summary>
        <author>
            <name>Dr_O</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 3.12 の新機能試してみた]]></title>
        <id>https://zenn.dev/masinc/articles/885ed8cb51c6ee</id>
        <link href="https://zenn.dev/masinc/articles/885ed8cb51c6ee"/>
        <updated>2023-10-05T21:02:01.000Z</updated>
        <summary type="html"><![CDATA[2023/10/2 に Python 3.12 がリリースされました。
今回は、Python 3.12 の気になった新機能を試してみました。

 型パラメータ構文

 Generics 関連
Python にも他の言語のジェネリクスのような記法が追加されました。

 Generics 関数
Python3.11 以下の場合:
from typing import TypeVar

T = TypeVar('T')

def max(a: T, b: T) -> T:
    return a if a > b else b

Python3.12:
def max[T](a:...]]></summary>
        <author>
            <name>masinc</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】ChatGPT+Slack APIでチャットボットを作成する]]></title>
        <id>https://zenn.dev/enterrocken/articles/d4f04e842eba2f</id>
        <link href="https://zenn.dev/enterrocken/articles/d4f04e842eba2f"/>
        <updated>2023-10-05T13:58:27.000Z</updated>
        <summary type="html"><![CDATA[はじめに
初めまして。
都内IT企業で、データアルゴリズムチームのエンジニアをしております、Noraです。
今回は、SlackAPIとOpenAI APIを活用して、チャットボットを構築します。
今回はPythonを利用した実装です。
社内Slackにチャットボットを構築することで、メンバーの質問内容を把握できるようになります。
また、スレッドの内容を記憶した返答をできるようになると、満足度も向上し、様々なチャット内容を蓄積・展開できます。
（OpenAI APIは従量課金制なので、使い過ぎには気をつけましょう）

 利用ツール・言語

 Python
今回の実装はPythonを使用...]]></summary>
        <author>
            <name>yuki.hirano</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[plotlyでGEBCOの地形データを可視化してみる]]></title>
        <id>https://zenn.dev/ssfuno/articles/962c7d61ded576</id>
        <link href="https://zenn.dev/ssfuno/articles/962c7d61ded576"/>
        <updated>2023-10-05T11:51:34.000Z</updated>
        <summary type="html"><![CDATA[イントロダクション
plotlyはインタラクティブなグラフを描けるPythonのライブラリです。こちらの記事を拝見して、GEBCOの地形データをsurface plotで表示してみたいと思ったので試してみました。
https://qiita.com/tmiyama/items/bba94d4125d9b67edf84
伊豆諸島のあたりを表示してみた結果がこちらです！（中央奥は伊豆半島）
海底と比べると島ってすごく高いんだなと感じますね🏝️


 動作環境

Python 3.10.12
netCDF4 1.6.4
plotly 5.15.0


 データのダウンロード
GEBCOはパ...]]></summary>
        <author>
            <name>すふー</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[点群データのアライメント（回転）]]></title>
        <id>https://zenn.dev/hiyokotti/articles/9213b4f2fa07e2</id>
        <link href="https://zenn.dev/hiyokotti/articles/9213b4f2fa07e2"/>
        <updated>2023-10-05T08:56:08.000Z</updated>
        <summary type="html"><![CDATA[初めに
LiDARセンサなどで3次元空間をスキャンした際に、センサのわずかな設置角度ズレなどによって期待のデータとは異なるデータが取れてしまう場合があると思います。
今回はそんな時に役立つデータの補正方法（の一例）を紹介したいと思います。
ちょっと数学的な用語などはうろ覚えで書いてますので、間違いあればバッシバシにご指摘ください。。。

 思想
案件によってさまざまだとは思いますが、今回は3次元空間内の床面を基準としてセンサの傾きを補正します。
①スキャンした点群データから床面となる平面を特定する
②特定した平面の方程式（ax+by+cz+d=0)を使って回転軸ベクトルを決定する
③...]]></summary>
        <author>
            <name>新米ひよこ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[スクレイピング入門　（Python）]]></title>
        <id>https://zenn.dev/hiyokotti/articles/f21d41fcfadca6</id>
        <link href="https://zenn.dev/hiyokotti/articles/f21d41fcfadca6"/>
        <updated>2023-10-05T08:54:37.000Z</updated>
        <summary type="html"><![CDATA[はじめに
昨今なにかとアツいスクレイピング。
様々な理由で興味がある人もいるのではないでしょうか
私自身も

趣味であるTCG（主にポケモンカード）を何とかECサイトで定価購入したい
でもECサイトの定価販売なんて秒で売り切れるから買えない
代わりに機械が勝手に買ってくれたらうれしいな
という願望からスクレイピングに手を出し、何とか自動購入ツールを完成させました。

今回はそんな私がスクレイピングに入門するにあたって学んだことを
備忘録として記します。
※様々な記事で言われていることですが、スクレイピングを禁止しているサイトもあるのでご自身で規約を読まれて自己責任でお願いします。

...]]></summary>
        <author>
            <name>新米ひよこ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[IIIFマニフェストを元に画像をダウンロードするPythonスクリプト]]></title>
        <id>https://zenn.dev/a_adachi/articles/fc314c754f4488</id>
        <link href="https://zenn.dev/a_adachi/articles/fc314c754f4488"/>
        <updated>2023-10-05T05:48:02.000Z</updated>
        <summary type="html"><![CDATA[n番煎じですが、備忘録として書き残します。
IIIFマニフェストを元に画像をダウンロードするスクリプトです。標準ライブラリのみで動作すると思います。
python iiif_dl.py https://iiif.example.com/path/to/manifest
GitHubにもアップロードしています。
https://github.com/adachi-a/iiif-image-downloader/
誤りやお気づきの点などありましたらぜひコメントいただけますと幸いです。

iiif_dl.py
import json
import os
import sys
import ti...]]></summary>
        <author>
            <name>a-adachi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-320｜A - Leyland Number]]></title>
        <id>https://zenn.dev/hyperdb/articles/8a84ecc784b47a</id>
        <link href="https://zenn.dev/hyperdb/articles/8a84ecc784b47a"/>
        <updated>2023-10-05T04:44:31.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-320 A - Leyland Number



 提出結果
def getIntMap():
    return map(int, input().split())


def main():
    a, b = getIntMap()

    print(a ** b + b ** a)


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-320｜B - Longest Palindrome]]></title>
        <id>https://zenn.dev/hyperdb/articles/1fdaa82f30a397</id>
        <link href="https://zenn.dev/hyperdb/articles/1fdaa82f30a397"/>
        <updated>2023-10-05T04:44:30.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-320 B - Longest Palindrome



 提出結果
def getString():
    return input()


def main():
    s = getString()

    c = 0
    for i in range(len(s), 0, -1):
        for j in range(0, len(s) - i + 1):
            w = s[j:j+i]
            r = w[::-1]
            if w == r:
                ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3日間でテック記事のAI要約・翻訳メディアをつくってみました]]></title>
        <id>https://zenn.dev/mesummery/articles/9d8e4e30c3275e</id>
        <link href="https://zenn.dev/mesummery/articles/9d8e4e30c3275e"/>
        <updated>2023-10-05T03:00:00.000Z</updated>
        <summary type="html"><![CDATA[つくったもの

🔗 Tech Sloths
英語のテックブログなどを中心に、OpenAI APIにより要約と翻訳を行いメディア化しました。
AIによる、記事の内容を活かした「アイディアや導入例」の提案なども掲載しています。

 開発した背景

日々アップデートされる技術情報、どこから手をつけるかわからなくなりがちだった
テックブログは長文が多くて読むのに時間がかかる印象があった

英語の文章を読む心理的ハードルの高さがあった

OpenAI API Function calling について知り、何かやりたかった


 使用した技術

 フロントエンド

Notion

なるべく工数...]]></summary>
        <author>
            <name>Na</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[任意の確率分布でベイズ分類機を作る]]></title>
        <id>https://zenn.dev/lucidfrontier45/articles/8902653414edc6</id>
        <link href="https://zenn.dev/lucidfrontier45/articles/8902653414edc6"/>
        <updated>2023-10-04T14:03:01.000Z</updated>
        <summary type="html"><![CDATA[やりたいこと
scikit-learnのnaive_bayesにはいくつかのモデルが実装されていますが、それ以外の確率分布、特にKDEでフィットした経験分布を用いてベイズ分類機を作りたい。

 やり方
基本的には以下の通りです。


C: class

X: 観測値

C^* = \mathrm{argmax}_C P(C)P(X|C)
任意の形のP(X|C)を利用できるようにできるだけ汎用的に作りたいのでこれを抽象クラスにしてAPIだけ定義し、それ以外の部分を実際に実装します。fitで観測データからパラメータを推定し、pdfで確率(密度)を返します。

 分布抽象クラスのAPI
f...]]></summary>
        <author>
            <name>lucidfrontier45</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[APIから受け取ったJSONデータをUnityで辞書型に変換する方法]]></title>
        <id>https://zenn.dev/shiro_toy_box/articles/3ebcac8e5c229f</id>
        <link href="https://zenn.dev/shiro_toy_box/articles/3ebcac8e5c229f"/>
        <updated>2023-10-04T13:41:14.000Z</updated>
        <summary type="html"><![CDATA[前書き
作っているもののオプション設定を作ろうと思い、たどり着いた解決方法です。
参照の記事をもとにChatGPTで解決することができました。
https://note.com/sirodon_256/n/nd92fc6c26cc8

 やりたいこと

APIでロールプレイの設定の情報取得できるように


 本題

 APIの処理

api.py
from fastapi import FastAPI
import subprocess
import os
import character_roleplay

app = FastAPI()

@app.get("/roll_mode...]]></summary>
        <author>
            <name>しろ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Raspberry PiとNFCでスマートフォンでタッチするとリクエストを送るようにする]]></title>
        <id>https://zenn.dev/kemomimi02/articles/13da0afb8cdb3d</id>
        <link href="https://zenn.dev/kemomimi02/articles/13da0afb8cdb3d"/>
        <updated>2023-10-04T08:48:51.000Z</updated>
        <summary type="html"><![CDATA[必要なもの
Raspberry Pi 2 model B v1.2

PaSoRi RC-S380

TP-Link TL-WN725N
（Raspberry Pi 2 model BにWifiが搭載されていないため）

電磁スピーカー
PCのビープ音を出すスピーカーを使いました

電磁スピーカー Amazon URL

 Raspberry Pi にOSをインストールする
下記サイトから Raspberry Pi Imager をインストール
Raspberry Pi OS
Raspberry Pi Imagerを起動したら、「OSを選ぶ」から「Raspberry Pi OS」を...]]></summary>
        <author>
            <name>ミンミ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FastAPI✕SQLite✕SQLModelで作ったJWT認証付きREST APIで、簡単なテストをする流れ]]></title>
        <id>https://zenn.dev/nameless_sn/articles/fastapi_testing_tutorial</id>
        <link href="https://zenn.dev/nameless_sn/articles/fastapi_testing_tutorial"/>
        <updated>2023-10-04T07:54:20.000Z</updated>
        <summary type="html"><![CDATA[はじめに
今回の記事では、FastAPIとSQLiteで作ったREST APIをテストする方法を解説する。

 対象とする読者

FastAPIをこれから学ぶひと
FastAPIで実際にテストしたい人
これからFastAPIを実務で導入したいひと


 REST APIを開発する手順
FastAPIを使用して、SQLModelとSQLiteを用いた簡単なJWT認証付きのREST APIを開発する手順を以下に示す。

 (1) 必要なライブラリのインストール
pip install fastapi[all] uvicorn sqlmodel

 (2) モデルの定義:

 /app/m...]]></summary>
        <author>
            <name>Shota Nukumizu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-319｜A - Legendary Players]]></title>
        <id>https://zenn.dev/hyperdb/articles/f0d60808c79988</id>
        <link href="https://zenn.dev/hyperdb/articles/f0d60808c79988"/>
        <updated>2023-10-04T07:31:04.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-319 A - Legendary Players



 提出結果
def getString():
    return input()

def main():
    s = getString()
    d = {
        'tourist': 3858,
        'ksun48': 3679,
        'Benq': 3658,
        'Um_nik': 3648,
        'apiad': 3638,
        'Stonefeang': 3630,
        'ecnerwala': 36...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-319｜B - Measure]]></title>
        <id>https://zenn.dev/hyperdb/articles/94903215e001eb</id>
        <link href="https://zenn.dev/hyperdb/articles/94903215e001eb"/>
        <updated>2023-10-04T07:31:03.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-319 B - Measure



 提出結果
def getInt():
    return int(input())

def main():
    n = getInt()
    a = [j for j in range(1, 10) if n % j == 0]

    r = ''
    for i in range(n + 1):
        x = [b for b in a if i % (n / b) == 0]
        if len(x) == 0:
            r += '-'
        els...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Overture Maps Foundationのデータを活用したい (3): Mapboxを用いたクラスタ可視化]]></title>
        <id>https://zenn.dev/takilog/articles/5cab3bfd05a9a2</id>
        <link href="https://zenn.dev/takilog/articles/5cab3bfd05a9a2"/>
        <updated>2023-10-04T05:32:40.000Z</updated>
        <summary type="html"><![CDATA[Overture Maps Foundationというものがあります。前回、位置データ (Placesデータ) をダウンロードして保存しました。
https://zenn.dev/takilog/articles/e96d8c1e132db4
今回はMatplotlibではなく、Mapboxを利用して、ダウンロードしてきたPOI情報を地図上に可視化してみます。

 データの確認
前回の記事でダウンロードして総数のうち、10,000個のPOIを格納してgeojson形式に変換したものを用意しました。このような形式になっています。基本的には点 (Point) として、名前とID・カテゴリ名・...]]></summary>
        <author>
            <name>たきろぐ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[graph-toolの基本的な使い方]]></title>
        <id>https://zenn.dev/takuowake/articles/52e2803d258a57</id>
        <link href="https://zenn.dev/takuowake/articles/52e2803d258a57"/>
        <updated>2023-10-04T03:09:51.000Z</updated>
        <summary type="html"><![CDATA[はじめに
graph-toolはPythonのライブラリで、大規模なネットワークの解析や操作を高速に行うことができるツールです。以下では、graph-toolの基本的な使い方を紹介します。

 インストール
まずはgraph-toolをインストールします。詳細なインストール手順は公式ドキュメントを参照してください。
Ubuntu OSのDocker上でインストールする方法については、以下を参考にしてください。
https://zenn.dev/takuowake/articles/7c654e3b2a7df6

 graph-toolの使い方

 基本的なグラフの作成
from gr...]]></summary>
        <author>
            <name>Takuo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでlistをコピーしたいだけなのに、調べたら方法がたくさんあったという話]]></title>
        <id>https://zenn.dev/nakurei/articles/list-copy-with-python</id>
        <link href="https://zenn.dev/nakurei/articles/list-copy-with-python"/>
        <updated>2023-10-03T16:47:29.000Z</updated>
        <summary type="html"><![CDATA[これはなに
Pythonでlistをコピーする方法について調べたメモ。

 結論 | 結局どの手法が良いのか
どの方法が優れているかは状況によるが、上記の調査結果から、筆者は下記の手法を選択しようと思った。

浅いコピー : copy.copy()を利用
深いコピー : copy.deepcopy()を利用


 はじめに
Pythonでは、b = aでリストをコピーできない。
b = aでリストをコピーしようとすると、新しいリストが作成されるのではなく、既存のリストaへの新しい参照bが作成される。つまり、aとbは同じオブジェクトを指す。
a = [1, [2, 3], 4]
b =...]]></summary>
        <author>
            <name>NakuRei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[最悪なコードと最高なコード]]></title>
        <id>https://zenn.dev/udonmaru/articles/2b4238a9f99016</id>
        <link href="https://zenn.dev/udonmaru/articles/2b4238a9f99016"/>
        <updated>2023-10-03T12:41:28.000Z</updated>
        <summary type="html"><![CDATA[chatgptに最悪なコードを作ってもらいました

 普通に作ってもらった
import random as r,math as m;exec(''.join([chr(108-(i%2)*32)+chr(97+(i%2)*4) for i in range(12)]));x,y,z,a,b,c=1,2,3,4,5,6
def f(x,y,z,a,b,c):return m.sqrt(x**2+y**2+z**2),m.sqrt(a**2+b**2+c**2)
def g(v,w):return r.choice([v,w])
print(g(*f(x,y,z,a,b,c)))

 ダメ...]]></summary>
        <author>
            <name>udonmaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CHANGELOGの悩みを一発解決！git-cliffの使い方からカスタマイズまで📚]]></title>
        <id>https://zenn.dev/atu4403/articles/howto-git-cliff</id>
        <link href="https://zenn.dev/atu4403/articles/howto-git-cliff"/>
        <updated>2023-10-03T10:42:11.000Z</updated>
        <summary type="html"><![CDATA[はじめに
CHANGELOGを自動生成するツールは多種多様です。Conventional Commitsに対応したコミットメッセージから生成するもの、GitHub上でのリリースやタグ付けまで行うものなどがあります。
CHANGELOGを自動生成する際には、バージョンタグに対応したコミットメッセージを基にしてくれると便利です。コミットメッセージを適切に付けるだけで、後はツールにお任せできます。ただし、いくつかの懸念点が存在します。

 懸念点 1: チキンエッグプロブレム
CHANGELOG自動生成ツールは便利ですが、一つの大きな問題があります。それは、Gitのタグとコミットメッセージ...]]></summary>
        <author>
            <name>atu4403</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python｜機械学習]]></title>
        <id>https://zenn.dev/airiin/articles/1400294ab87dae</id>
        <link href="https://zenn.dev/airiin/articles/1400294ab87dae"/>
        <updated>2023-10-03T10:21:00.000Z</updated>
        <summary type="html"><![CDATA[欠損値の補完
欠損値補完の流れは以下の通り。

欠損値の数を確認
ヒストグラムで表示し、欠損値の補完方法を考える
欠損値を補完する
欠損値の数を確認


 欠損値を平均値で補完する場合
data.isnull().sum()
# 各カラムの欠損値の数が表示される。

plt.hist(data['カラム名'])
plt.show()
# 指定したカラムのヒストグラムが表示される。

average = data['カラム名'].mean()
data.update(data['カラム名'].fillna(average))
# 欠損値を平均値で補完。

data['カラム名'].is...]]></summary>
        <author>
            <name>AIRI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python3 + OpenCVで道路白線検出プログラムを実装する]]></title>
        <id>https://zenn.dev/shogura/articles/lane-tracker</id>
        <link href="https://zenn.dev/shogura/articles/lane-tracker"/>
        <updated>2023-10-03T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
ドイツで自動車のソフトウェアエンジニアリングを学んでる奴 "shogura" です。
「Shaping the Future of mobility, together」を掲げ、自動車に関するソフトウェアエンジニアリングのプログラムを提供しているSEA:MEに参加しています。SEA:MEでは「組み込みシステム」「自動運転」「モビリティエコシステム」の3つのモジュールから自分の興味に合った分野を学習することができます。
本記事では、自動運転モジュールの一環であるPiRacerで決まったレーンを自動走行でさせるという課題の一部である道路白線検出プログラムについてどのように実装し...]]></summary>
        <author>
            <name>shogura</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Androidアプリ内でPythonを実行する]]></title>
        <id>https://zenn.dev/ouma_san/articles/d6734a48743156</id>
        <link href="https://zenn.dev/ouma_san/articles/d6734a48743156"/>
        <updated>2023-10-03T07:10:29.000Z</updated>
        <summary type="html"><![CDATA[あいさつ
初めまして、お馬さんです。大学生やっています。大学で初めてプログラミングを触りました。
初めの記事なので誤字やもっとこうしたほうがいいなどがあるかもしれませんがどうぞお手柔らかにお願いします。

 環境

Android Studio Electric Eel | 2022.1.1
kotlin: 1.7.0
minSdk: 24
targetSdk: 33


 最終目標
AndroidでPythonのライブラリを使用できるようにする。
Androidの単一データをPythonで処理し、Androidで取得できるようにする。
Androidの配列データをPythonで処理...]]></summary>
        <author>
            <name>お馬さん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-318｜A - Full Moon]]></title>
        <id>https://zenn.dev/hyperdb/articles/2657d97d909f0b</id>
        <link href="https://zenn.dev/hyperdb/articles/2657d97d909f0b"/>
        <updated>2023-10-03T04:29:11.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-318 A - Full Moon



 提出結果
def getIntMap():
    return map(int, input().split())


def main():
    n, m, p = getIntMap()
    a = [i * p + m for i in range(n // p + 1) if i * p + m <= n]

    print(len(a))

if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-318｜B - Overlapping sheets]]></title>
        <id>https://zenn.dev/hyperdb/articles/22275b66bab66a</id>
        <link href="https://zenn.dev/hyperdb/articles/22275b66bab66a"/>
        <updated>2023-10-03T04:29:11.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-318 B - Overlapping sheets



 提出結果
def getInt():
    return int(input())

def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]

def getMax(xy):
    m = 0
    for x in xy:
        m = max(m, max(x))
    return m

def getSum(xy):
    s = 0
    for x in...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[unittestで特定の関数呼び出しをテスト全体でアサーションする]]></title>
        <id>https://zenn.dev/yktakaha4/articles/assert_function_calls_in_all_unittests</id>
        <link href="https://zenn.dev/yktakaha4/articles/assert_function_calls_in_all_unittests"/>
        <updated>2023-10-03T04:05:13.000Z</updated>
        <summary type="html"><![CDATA[小ネタです🍣
Pythonでプログラミングをするにあたって print はとても便利です
ビルトイン関数のためimportは不要ですし、実装やテストの最中にちょっとだけ現在の状態を確認したいときに、誰しもお世話になったことがあるのでないかと思います
https://docs.python.org/ja/3.11/library/functions.html#print
しかしながら、Pythonにはロギングの仕組みとしてlogging モジュールが用意されており、プロダクションコードにおいてはこちらを利用すべきです
https://docs.python.org/ja/3/howto/l...]]></summary>
        <author>
            <name>Yuuki Takahashi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonで正規表現を使ってみる]]></title>
        <id>https://zenn.dev/satoru_output/articles/zenn_python_text</id>
        <link href="https://zenn.dev/satoru_output/articles/zenn_python_text"/>
        <updated>2023-10-02T23:35:11.000Z</updated>
        <summary type="html"><![CDATA[事前準備
Pythonがインストール済みであること。

 導入手順
下記コマンドを入力
import re

 正規表現で検索する
findall関数を使ってマッチする文字列を表示させる
サンプルコード
import re

text = "b!,bu!,buu!,buuu!,buuuu!"

#正規表現*を作った場合
#*は直前の正規表現が0回以上繰り返す意味
res1 = re.findall(r"bu*!", text)
print(res1)
#正規表現?を作った場合
#?は直前の正規表現が0回もしくは1回存在するという意味
res2 = re.findall(r"bu?!"...]]></summary>
        <author>
            <name>サトル アウトプット用</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【個人開発】英字ニュースから単語の出現回数を調べた話]]></title>
        <id>https://zenn.dev/nii/articles/english-frequency</id>
        <link href="https://zenn.dev/nii/articles/english-frequency"/>
        <updated>2023-10-02T22:31:58.000Z</updated>
        <summary type="html"><![CDATA[1.はじめに
皆さん、英語勉強していますか？
最近では様々なドキュメントが翻訳されたり自動翻訳ツールが充実してきたりと便利な世の中になっていますが、まだまだ英語が必要になる場面も多いです。
私も英語の必要性を感じてTOEICの勉強を始めました。そこそこ基礎が完成できたと考え、少し背伸びして英字ニュースを読んでみたりしました。
しかし1ヶ月くらいニュースを読んだところ、あることに気づきました。
「単語、全然わからん」と。
TOEICと実際に使用されている単語は少なからずズレているようです。今だにTOEIC頻出単語であるwheelbarrow(手押し車)やcanopy(天蓋)を英字新聞で...]]></summary>
        <author>
            <name>nii</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【2023年10月】0円で読めるおすすめ技術書5選まとめ]]></title>
        <id>https://zenn.dev/raio/articles/c3359584402555</id>
        <link href="https://zenn.dev/raio/articles/c3359584402555"/>
        <updated>2023-10-02T11:27:47.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです！
平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻
↓筆者について↓
https://qiita.com/Raio14f/items/ef0fb67685b36298bcb0
今回の記事では、【2023年10月】0円で読めるおすすめ技術書TOP5を紹介します！
ご興味ある方は、是非最後までご覧ください！

 技術書を0円で読む方法
KindleUnlimitedを使うことで、技術書を0円で何冊でも読むことが出来ます🙌
今回、紹介する技術書はKindleUnlimitedに加入すると...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python｜matplotlibの基本コマンド]]></title>
        <id>https://zenn.dev/airiin/articles/5ae894b62219d1</id>
        <link href="https://zenn.dev/airiin/articles/5ae894b62219d1"/>
        <updated>2023-10-02T10:28:06.000Z</updated>
        <summary type="html"><![CDATA[matplotlibとは
分析結果を可視化するのに利用されるライブラリ。さまざまな種類のグラフが作成できる。

 matplotlibの読み込み
import matplotlib.pyplot as plt
# matplotlibの読み込み。

%matplotlib inline
# グラフをノートブック内に直接表示するためのマジックコマンド。

import warnings
# Python標準ライブラリの warnings をインポート。プログラム実行中の警告を制御。

warnings.simplefilter('ignore')
# 全ての警告を無視する。

impo...]]></summary>
        <author>
            <name>AIRI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python｜Numpyの基本コマンド]]></title>
        <id>https://zenn.dev/airiin/articles/9b6ebb86923098</id>
        <link href="https://zenn.dev/airiin/articles/9b6ebb86923098"/>
        <updated>2023-10-02T07:19:50.000Z</updated>
        <summary type="html"><![CDATA[Numpy（ヌンパイ）とは
ndarray（N次元配列）を作成することができるライブラリ。
高速な処理が可能で、コードがシンプルで読みやすくなる。
そのため、計算負荷が高い処理を行う際は、ndarrayにデータを格納すること。

 Numpyの基本コマンド

 numpyの読み込み
import numpy as np

 ndarrayの作成
np.array([1,2,3])
# array([1,2,3])を作成

np.array(['a',1,2])
# 最初の要素のデータ型に変換された array(['a','1','2'])を作成

np.arange(5)
# 要素数...]]></summary>
        <author>
            <name>AIRI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-317｜B - MissingNo.]]></title>
        <id>https://zenn.dev/hyperdb/articles/dbbaaa1db39f4c</id>
        <link href="https://zenn.dev/hyperdb/articles/dbbaaa1db39f4c"/>
        <updated>2023-10-02T04:39:54.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-317 B - MissingNo.



 提出結果
def getInt():
    return int(input())

def getIntList():
    return list(map(int, input().split()))

def main():
    n = getInt()
    a = getIntList()
    a.sort()

    for i in range(n - 1):
        if a[i + 1] - a[i] == 1:
            continue
        p...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-317｜A - Potions]]></title>
        <id>https://zenn.dev/hyperdb/articles/887cef1f3a14f8</id>
        <link href="https://zenn.dev/hyperdb/articles/887cef1f3a14f8"/>
        <updated>2023-10-02T04:39:53.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-317 A - Potions



 提出結果
def getIntMap():
    return map(int, input().split())

def getIntList():
    return list(map(int, input().split()))

def main():
    n, h, x = getIntMap()
    a = [0] + getIntList()
    b = [i for i in range(len(a)) if a[i] >= x - h]

    print(min(b))

i...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python｜pandasの基本コマンド]]></title>
        <id>https://zenn.dev/airiin/articles/66350d2cfaeae4</id>
        <link href="https://zenn.dev/airiin/articles/66350d2cfaeae4"/>
        <updated>2023-10-02T02:50:35.000Z</updated>
        <summary type="html"><![CDATA[pandasとは
pandasは、データの集計や加工に使用されるライブラリ。
データの読み込み、表示、整形、書き出し等が可能。

 データの読み書き

 データの読み込み（ファイルから）

Google Colabで実行
[1] import pandas as pd
[2] import numpy as np
[3] data = pd.read_csv('./data.csv', index_col=False) 

import pandas
pandasを利用できるようにする
as pd
pandas と書く部分を pdと書ける要因設定。本来ならpandas.read_cs...]]></summary>
        <author>
            <name>AIRI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【物体検出】評価指標（TP/TN/FP/FN/Precisio/Recall）を分かり易く解説【図解】]]></title>
        <id>https://zenn.dev/nekoallergy/articles/dl-advance-eval-metrics</id>
        <link href="https://zenn.dev/nekoallergy/articles/dl-advance-eval-metrics"/>
        <updated>2023-10-01T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
物体検出タスクは、写真や映像の中から「物体が何か？」と「物体がどこにあるか？」を見つける技術です。
物体検出では、モデルがどれだけ上手く物体を見つけられたかを判断するための基準がたくさんあります。

物体検出モデルの精度
今回は、物体検出における評価指標（TP/TN/FP/FN/Precisio/Recall）について解説します。

 1. 基本的な用語
まずはじめに、基本となる4つの用語を押さえておきましょう。

基本の4つ

 True Positive (TP)
物体検出モデルが物体を「検出した」と予測し、その予測が正しかった場合。
例：画像に犬がいて、モデルがその犬...]]></summary>
        <author>
            <name>NekoAllergy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ローカル環境のノリでAWSの署名v4付きリクエストをしよう！]]></title>
        <id>https://zenn.dev/iammytoo/articles/6d6c43d0660b9b</id>
        <link href="https://zenn.dev/iammytoo/articles/6d6c43d0660b9b"/>
        <updated>2023-10-01T14:09:22.000Z</updated>
        <summary type="html"><![CDATA[概要
本記事では、Pythonでローカルに簡易的なWebサーバーを立て、そこにリクエストすることで、AWS署名v4が必要なサービスに、送られてきた内容にそのまま署名を付けてリクエストを投げるプログラムを紹介します。

 動機
ローカル環境で動作確認をするのと同じワークフローでAWSに乗っけたdev環境等にアクセスする方法を用意したかったため。
これを使うとテスト等について、ドメインを変えるだけで実行できるのがかなりうれしい。世間によくあるAPIテストのフレームワークで、AWSの署名v4が実装されていそうなのは、postmanぐらいしかなさそうだったため、CI等であったりしても便利かな...]]></summary>
        <author>
            <name>miyamoto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[python の flaskでpostデータを受け取れないとき]]></title>
        <id>https://zenn.dev/jun784/articles/2406d7c922422a</id>
        <link href="https://zenn.dev/jun784/articles/2406d7c922422a"/>
        <updated>2023-10-01T14:04:25.000Z</updated>
        <summary type="html"><![CDATA[https://qiita.com/YOCKOW/items/0b9635c62840998708f7
js側
・コンテンツタイプを指定してはいけない
https://www.geeksforgeeks.org/how-to-extract-the-data-from-an-immutablemultidict/
flask.py側
・request.form.get('speach_text')
を利用する]]></summary>
        <author>
            <name>Jun Kawasaki</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Docker] MongoDB接続がタイムアウトする場合の対処法]]></title>
        <id>https://zenn.dev/ykesamaru/articles/70db82c336b4db</id>
        <link href="https://zenn.dev/ykesamaru/articles/70db82c336b4db"/>
        <updated>2023-10-01T13:40:08.000Z</updated>
        <summary type="html"><![CDATA[[Docker] MongoDB接続がタイムアウトする場合の対処法



[Docker] MongoDB接続がタイムアウトする場合の対処法

はじめに
注意
環境
MongoDBと繋がらなくなった時、調べるべき手順のリスト

解法

ホストのファイアーウォール設定

mongoshコマンドの使用

MongoDBの設定確認


Dockerのネットワーク


まとめ
参考文献




 はじめに
Dockerを使用してMongoDBコンテナを構築しました。構築から時間が経つと、接続がタイムアウトする問題に直面しました。
具体的には
client = MongoClient('mon...]]></summary>
        <author>
            <name>yKesamaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【python】seabornで系列数が多い時にハイライト表示したグラフが描けるライブラリ Vol.2]]></title>
        <id>https://zenn.dev/shiro46/articles/42c79863658b63</id>
        <link href="https://zenn.dev/shiro46/articles/42c79863658b63"/>
        <updated>2023-10-01T12:38:46.000Z</updated>
        <summary type="html"><![CDATA[はじめに
以前、Rのgghighlightというパッケージを真似てpython用のライブラリを作ったんですが（下記記事を参照）、使いづらいところがあったのでいくつか修正して新しいパッケージとして整理しました。
https://zenn.dev/shiro46/articles/0b1df96a1bab7a

 パッケージの概要
pythonのseabornを使ってグラフを描く時に、hue引数を指定すると系列を簡単に分けられるのですが、数が増えすぎると見づらくなることがあります。

色が多くなり、パッと見て注目ポイントがわからない図
今回は、系列が多いときに一部の系列のみカラー表示とす...]]></summary>
        <author>
            <name>SHIRO</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[poetryでllama-indexをm1 docker環境にinstallできなくてつらい]]></title>
        <id>https://zenn.dev/wisteria30/articles/2f6b8433a62919</id>
        <link href="https://zenn.dev/wisteria30/articles/2f6b8433a62919"/>
        <updated>2023-10-01T12:33:06.000Z</updated>
        <summary type="html"><![CDATA[はじめに
結論から言うと、依存ライブラリであるtree-sitter-languagesがaarch64アーキテクチャのmanylinux2014版のwheelファイルを提供していないが原因です。
加えてこのライブラリはソースインポートをサポートしていないので、根本解決はメンテナーに対応するバイナリファイルを作成してもらう他ないです。
これに該当する記事全然見つからなくて、poetryやllama-indexって意外とまだ使われていないなーと実感しました。

 暫定対処

image build時に--platform linux/amd64 を付けてx86アーキテクチャで開発する
...]]></summary>
        <author>
            <name>かっか</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[新・明解 Python入門 第2版 感想文]]></title>
        <id>https://zenn.dev/hyd/articles/c96c8600e2308b</id>
        <link href="https://zenn.dev/hyd/articles/c96c8600e2308b"/>
        <updated>2023-10-01T11:54:22.000Z</updated>
        <summary type="html"><![CDATA[概要
Pythonを本格的にお仕事で使うことになったので、オレオレ勉強だけでなく入門書からやり直そうと決意。1週間かけて「新・明解 Python入門 第2版」を読んだので、その記録です。

 p60 多重の値比較
List3-16とList3-18が等価。この書き方に慣れることができるだろうか。

List3-16
if 3<= month and month <= 5:
    print('それは春です。')
elif 6 <= month and month <= 8:
    print('それは夏です。')
elif 9 <= month an...]]></summary>
        <author>
            <name>hyd</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[0円で読める機械学習のおすすめ技術書5選]]></title>
        <id>https://zenn.dev/raio/articles/0506765ae3d135</id>
        <link href="https://zenn.dev/raio/articles/0506765ae3d135"/>
        <updated>2023-10-01T11:02:49.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです！
平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻
↓筆者について↓
https://qiita.com/Raio14f/items/ef0fb67685b36298bcb0
今回の記事では、0円で読める機械学習のおすすめ技術書5選を紹介します！
ご興味ある方は、是非最後までご覧ください！

 技術書を無料で読む方法
KindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌
今回、紹介する技術書はKindleUnlimitedに加入することで無料...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dockerコンテナ内のFastAPIのコードをVS Codeでデバッグする]]></title>
        <id>https://zenn.dev/kterashi02/articles/86c76f8d96382b</id>
        <link href="https://zenn.dev/kterashi02/articles/86c76f8d96382b"/>
        <updated>2023-10-01T10:03:17.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Dockerコンテナで動作するFastAPIのコードを以下のようにVSCodeでデバッグ（変数の状態を確認したり、ステップ実行したり）するための方法を記載します。
DjangoやFlaskでも同様の方法でデバッグの設定を行うことができると思います。

 コンテナ側の設定
requirementsファイルにdebugpyを追加
debugpy
dockerfile内でdebugpyで起動するように設定
CMD ["python3", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "uvicorn", "app.main:...]]></summary>
        <author>
            <name>kterashi02</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonの最適化ライブラリPuLP をM1 Mac × Dockerで動かす]]></title>
        <id>https://zenn.dev/monogotu_ds/articles/3b8609ac263621</id>
        <link href="https://zenn.dev/monogotu_ds/articles/3b8609ac263621"/>
        <updated>2023-10-01T07:39:34.000Z</updated>
        <summary type="html"><![CDATA[目的
M1 Mac上のDockerコンテナ内で、Pythonの数理最適化ライブラリPuLPを動かしたい。

 事象

M1 Mac上のDockerコンテナに、単にPuLPをインストールしてoptimizeメソッドを実行すると、以下のようなエラーが生じる。OSError: [Errno 8] Exec format error: '/src/.venv/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc'


Pythonの仮想環境venvでは、上記エラーは発生しなかった。


 推定原因

上記エラーは、最適化ソル...]]></summary>
        <author>
            <name>monogotu_ds</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】seleniumで使うChromeDriverを自動更新]]></title>
        <id>https://zenn.dev/koupro0204/articles/e25d99a8975cfc</id>
        <link href="https://zenn.dev/koupro0204/articles/e25d99a8975cfc"/>
        <updated>2023-09-30T22:39:55.000Z</updated>
        <summary type="html"><![CDATA[今回は毎回更新されるchromeに合わせたドライバーを自動でしてくれるコードを解説していきます。
Zennに投稿するようなので解説になります。
環境によって変わると思うので先ずは環境から

 環境

Windows 11
selenium         4.13.0
Python 3.11.5
Chrome 115以降

必要な情報はこれくらいですかね。
特にSeleniumはバージョンによって起動の仕方とか違うので気を付けてください。
chromeは115より前のバージョンだとダウンロード先が変わるので注意してください。
一応以前のバージョンのやつもGithub内に入れておきます。（...]]></summary>
        <author>
            <name>い。</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでウォルラス演算子を使う際には変数スコープに注意する]]></title>
        <id>https://zenn.dev/spacemarket/articles/0b2102f35c28e9</id>
        <link href="https://zenn.dev/spacemarket/articles/0b2102f35c28e9"/>
        <updated>2023-09-30T14:20:38.000Z</updated>
        <summary type="html"><![CDATA[代入式・ウォルラス（セイウチ）演算子とは
代入式はウォルラス演算子（:=）で変数に値を割り当てる新しい構文で、Python 3.8から導入された機能になります。
通常の代入文と同じように変数への代入を実行するだけでなく、その結果を式全体の値として返します。
・・・といってもちょっと分かりづらいと思うので、通常の代入文との比較を交えて説明したいと思います。

 通常の"代入文"を使った方法
import random

def get_some_integer():
    return random.randint(0, 5)

# 通常の方法
value = get_some_in...]]></summary>
        <author>
            <name>miotava</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonでMT法を用いて異常検知してみよう]]></title>
        <id>https://zenn.dev/tirimen/articles/259ff950936212</id>
        <link href="https://zenn.dev/tirimen/articles/259ff950936212"/>
        <updated>2023-09-30T05:11:09.000Z</updated>
        <summary type="html"><![CDATA[本記事の目的
異常検知の代表的手法であるMT法について自分用のメモを残す。

 MT法とは
異常検知手法の代表的な手法である。異常検知には、回帰や決定木、深層学習などの手法でも行えるが、MT法の良いところは「計算速度が速く、説明可能な統計的手法」である。下記のリンクがMT法の特徴を詳しくまとめているので、確認してほしい。
https://www.angletry.com/diffmt/

 理論編：MT法を分解して考えてみよう

 ステップ0：前準備
シンプルに考えたいので、2変量の装置時系列データを考える。ここでは変量を圧力と水温としておく。時刻1からnまでのデータ組X=(X_1,...]]></summary>
        <author>
            <name>tirimen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【個人開発 #1-2】レコメンドシステムを作ってみた vol.2　〜画面イメージ・DB設計・処理の流れ〜]]></title>
        <id>https://zenn.dev/waka07/articles/development-diary_1-2</id>
        <link href="https://zenn.dev/waka07/articles/development-diary_1-2"/>
        <updated>2023-09-30T00:56:58.000Z</updated>
        <summary type="html"><![CDATA[作りたいシステム
忙しい人のためのギフト提案型AI「AiSAP!(エイサップ)」
忙しい社会人のために、AIが可能な限り素早く（ASAP: As Soon As Possible）、最適なギフトを提案してくれるWebサービス。

 画面イメージ
画面イメージはこんな感じです。
ドロップダウンで条件を選択して検索ボタンを押下すると、ランキングされた商品一覧が表示されます。


 DB設計
ER図はこんな感じです。

商品テーブル：商品情報を管理。商品1つにつき1つのIDを付与。
受け取り手テーブル：受け取り手の情報を管理。受け取り手のパターンは検索条件のパターン数だけ存在するため有限な...]]></summary>
        <author>
            <name>Waka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[なろう小説API というものを呼んでみる]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-narou-syosetu-api</id>
        <link href="https://zenn.dev/derwind/articles/dwd-narou-syosetu-api"/>
        <updated>2023-09-29T15:30:09.000Z</updated>
        <summary type="html"><![CDATA[目的
小説家になろう というサイトがあって、ユーザーが投稿した小説を読めるらしい。たぶん 転生したらスライムだった件 が有名？
たまたま なろう小説API というものを見つけたので、普段は叩かない Web API を叩いてみようという内容。

 実装
必要なモジュールを import する:
import io
import json
import gzip
import requests

 欲しい情報を指定する
検索項目を絞る。今回は「小説名」「作者名」「小説のあらすじ」「ジャンル」をターゲットにしてみたい。また、大域負荷を下げるために、of フィールドでターゲットの情報だけをフ...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[綺麗なコードの書き方が学べる技術書3選]]></title>
        <id>https://zenn.dev/raio/articles/5430bedac9757d</id>
        <link href="https://zenn.dev/raio/articles/5430bedac9757d"/>
        <updated>2023-09-29T09:13:16.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです！
平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻
↓筆者について↓
https://qiita.com/Raio14f/items/ef0fb67685b36298bcb0
今回の記事では、綺麗なコードの書き方が学べる技術書5選を紹介します！
ご興味ある方は、是非最後までご覧ください！

 技術書を無料で読む方法
KindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌

200万冊以上の書籍が何冊でも読み放題
月額980円が今なら1ヶ月無料
...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-315｜A - tcdr]]></title>
        <id>https://zenn.dev/hyperdb/articles/e3123d9d545c2f</id>
        <link href="https://zenn.dev/hyperdb/articles/e3123d9d545c2f"/>
        <updated>2023-09-29T05:36:15.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-315 A - tcdr



 提出結果
def getString():
    return input()

def main():
    s = list(getString())
    t = [c for c in s if c not in ['a', 'e', 'i', 'o', 'u']]

    print("".join(t))


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-315｜B - The Middle Day]]></title>
        <id>https://zenn.dev/hyperdb/articles/bffa54a5e72b24</id>
        <link href="https://zenn.dev/hyperdb/articles/bffa54a5e72b24"/>
        <updated>2023-09-29T05:36:14.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-315 B - The Middle Day



 提出結果
def getInt():
    return int(input())

def getIntList():
    return list(map(int, input().split()))

def main():
    m = getInt()
    d = getIntList()

    c = (sum(d) + 1) // 2

    r = []
    for i in range(m):
        if sum(d[:i]) > c:
        ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Matplotlib Cheatsheets Cheatsheet]]></title>
        <id>https://zenn.dev/inaturam/articles/c3a40db166de61</id>
        <link href="https://zenn.dev/inaturam/articles/c3a40db166de61"/>
        <updated>2023-09-28T15:34:47.000Z</updated>
        <summary type="html"><![CDATA[matplotlib cheatsheetsのよく使う部分だけをまとめた早見表を作成しました。
また、グラフの枠線、軸、補助線の描写の、上部にURLがついているグラフはnkayさんのQiitaの記事matplotlibのめっちゃまとめのものを引用させて頂いています。"matplotlibのめっちゃまとめ"はmatplotlibの本質的な部分を射ながら網羅的にまとめられた非常に良い記事で、入出力に関しても具体的に例示されていますので、plotsに苦手意識がある方はこの記事を読んでおくことを強くおすすめします。
https://qiita.com/nkay/items/d1eb91e33b9...]]></summary>
        <author>
            <name>inaturam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GoogleDrive APIでつまづいたとこ]]></title>
        <id>https://zenn.dev/k02miu/articles/5e14024bd2294b</id>
        <link href="https://zenn.dev/k02miu/articles/5e14024bd2294b"/>
        <updated>2023-09-28T13:55:53.000Z</updated>
        <summary type="html"><![CDATA[はじめに
SpreadSheetに記載されたGoogleDriveのフォルダIDのファイルをコピーしてDBに登録するような処理を作っていたところ２箇所ほど躓いたので記載しておきます。
謎のゴミファイルがくっついてくる。
フォルダを覗いてもそんなファイルはない。。
みたいなやつの真相です。

 どんな状態
処理はPythonでgoogleapiclientを使用してます。

あるドライブのフォルダの下に入っているファイルの一覧を取得しようとしたが、取得できない。
フォルダには動画が一つしかない状態なのにも関わらず謎のファイルがくっついてくる。


 原因

ドライブが共有のものの場合、...]]></summary>
        <author>
            <name>k02miu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[フリーランスで年収1000万超えたい人におすすめ案件サイト]]></title>
        <id>https://zenn.dev/raio/articles/0bdd5a5e32f32f</id>
        <link href="https://zenn.dev/raio/articles/0bdd5a5e32f32f"/>
        <updated>2023-09-28T11:31:35.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアの@Raioです🙌
平日は公立高校に通いながら、放課後や休日はSkyGrid株式会社のエンジニアとして働いています🧑🏻‍💻
今回の記事では、
フリーランスエンジニア必見！年収100万超えたい人におすすめ案件サイト
をご紹介します！

フリーランスエンジニアやってるけど、年収が上がらない
今よりも収入を増やしたい
年収1000万円超えたい

こんな方に、おすすめの記事となっております！
ご興味ある方は、是非最後までご覧ください👀

 エミリーエンジニアとは？
「エミリーエンジニア」とは、フリーランスエンジニアを専門としたエージェントサービ...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[faiss] データセットから似ている顔を検索する]]></title>
        <id>https://zenn.dev/ykesamaru/articles/1aba202d413776</id>
        <link href="https://zenn.dev/ykesamaru/articles/1aba202d413776"/>
        <updated>2023-09-28T10:56:26.000Z</updated>
        <summary type="html"><![CDATA[[faiss] データセットから似ている顔を検索する



[faiss] データセットから似ている顔を検索する


はじめに

顔データセット
顔写真


実装
実行結果
まとめ




 はじめに
モデルの学習に使われていない顔データセットを用い、用意した写真と似ている顔を検索します。
今回の記事では、顔写真を1枚用意し、faissを用いて直接データセットから検索します。

 顔データセット
find . -maxdepth 2 -type f -name *.png | wc -l
57637
約5万7千枚の顔写真が含まれるデータセットを用意しました。

 顔写真


 実装
...]]></summary>
        <author>
            <name>yKesamaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonでWeb開発を学ぶ上で確認するべきGitHubリポジトリ 18選 2023年版]]></title>
        <id>https://zenn.dev/nameless_sn/articles/18_awesome_python_repos_2023</id>
        <link href="https://zenn.dev/nameless_sn/articles/18_awesome_python_repos_2023"/>
        <updated>2023-09-28T09:47:40.000Z</updated>
        <summary type="html"><![CDATA[はじめに
今回の記事では、Web開発でPythonを学ぶ上で絶対に確認するべきGitHubリポジトリを18個、私の独断と偏見で解説する。

 対象とする読者

これからPythonをWeb開発で導入したい人
Pythonを使ったWeb開発に興味がある人
Pythonに関連した情報収集している人
タイトルでなんとなく気になった人


 Django

DjangoはPythonで開発されたWebフレームワークである。最大の特徴は、バックエンド開発に必要な機能がデフォルトで搭載されている点にある。手軽に、簡単なWebアプリケーションを開発したいなら選択肢に入る。

 Flask

シンプ...]]></summary>
        <author>
            <name>Shota Nukumizu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-314｜B - Roulette]]></title>
        <id>https://zenn.dev/hyperdb/articles/aabd8cf6b8531b</id>
        <link href="https://zenn.dev/hyperdb/articles/aabd8cf6b8531b"/>
        <updated>2023-09-28T05:25:35.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-314 B - Roulette



 提出結果
def getInt():
    return int(input())

def getIntList():
    return list(map(int, input().split()))

def main():
    n = getInt()
    c = []
    a = [[]]

    for i in range(n):
        c.append(getInt())
        a.append(getIntList())

    x = getInt()
   ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-314｜A - 3.14]]></title>
        <id>https://zenn.dev/hyperdb/articles/7b808932e044b3</id>
        <link href="https://zenn.dev/hyperdb/articles/7b808932e044b3"/>
        <updated>2023-09-28T05:25:35.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-314 A - 3.14



 提出結果
def getInt():
    return int(input())

def main():
    n = getInt()
    p = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679';

    print(p[:n+2])

if __name__ == "__main__":
    main()```]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2ヵ月OSS活動をした結果…]]></title>
        <id>https://zenn.dev/zuzuzu/articles/oss_contribute</id>
        <link href="https://zenn.dev/zuzuzu/articles/oss_contribute"/>
        <updated>2023-09-28T05:22:09.000Z</updated>
        <summary type="html"><![CDATA[概要
OSS活動を開始して2ヵ月ほど経ちました。
最初は「OSS活動なんて選ばれた優秀なエンジニアしか出来ない」と思っていました。
しかし実際に始めてみたところすんなりマージまでいきました。
OSS活動は自分にあったIssueを選択出来れば誰でも出来ると思います。
そして得られたモノも多いのでそちらについて話していきながら
どうすればOSS活動が出来るのか解説していきたいと思います。

 自己紹介

IT業界歴 10年
しかし6年間運用監視業務を行っていた
実質経験4年程度のインフラエンジニア
直近の案件ではSREをしてたので CIツール , terraform , ansibleを...]]></summary>
        <author>
            <name>zu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[カメラ情報を用いてリアルタイムで状況をテキストに起こしたい (Ros2) part3]]></title>
        <id>https://zenn.dev/iasl/articles/4e2f0192bf9f0c</id>
        <link href="https://zenn.dev/iasl/articles/4e2f0192bf9f0c"/>
        <updated>2023-09-28T02:08:21.000Z</updated>
        <summary type="html"><![CDATA[あれから、数回動作確認していて思いました。1フレームしか処理していないじゃないか!と... videoBLIPで学習させたモデルを使っているのにもったいない。ということで、しっかり動画像に反映させていきます。

 勉強せねば...
ということで、さっそくvideoBLIPをより深く理解していこう思います。

 demoを実行&&考察
それでは、まずはapp.pyを見ていきます。app.pyの16行目にある通り、model: VideoBlipForConditionalGenerationという、Blip2VisionModelを継承したクラスを用いています。Blip2V...]]></summary>
        <author>
            <name>toky</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[日経先物分析その3...SQ別の値動きに特徴はあるか（1）]]></title>
        <id>https://zenn.dev/daidai_daitai/articles/6b828ad32bb6c2</id>
        <link href="https://zenn.dev/daidai_daitai/articles/6b828ad32bb6c2"/>
        <updated>2023-09-27T13:29:36.000Z</updated>
        <summary type="html"><![CDATA[その2では何をしたのか
"その2"では日経先物のタイムバーにSQごとのidを割り当て、残存時間を計算しました
今回も使用しますので、まだ見ていない方は参照してください
https://zenn.dev/daidai_daitai/articles/64f45e2d3df2b0

 その3では何をするのか
SQごとのidを使用し値動きの特徴などを見ていきます
・マイナーSQとメジャーSQで値動きに違いがあるのか
・上昇しやすい月、下落しやすい月はあるのか
などを見ていきます。少し長くなりそうなので適当に記事を分割して書いていく事にします。

 概要

SQごとにidを割り当てる
SQカ...]]></summary>
        <author>
            <name>橙。</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AIボイチェン RVCの設定方法]]></title>
        <id>https://zenn.dev/yonedar/articles/f1bd70f59ebe89</id>
        <link href="https://zenn.dev/yonedar/articles/f1bd70f59ebe89"/>
        <updated>2023-09-27T12:33:01.000Z</updated>
        <summary type="html"><![CDATA[はじめに
環境構築から学習データ作成・利用までを記載
RVCのgithubを参照しつつ補足しています

 環境構築



 仮想環境構築(不要な場合はスキップ）

rvc用の仮想環境をanacondaで構築する場合(rvcという名称でpython3.10入れる）conda create -n rvc python=3.10


仮想環境の起動conda activate rvc






 RVCの導入



2.1. win + Nvidia(RTX30xx)を利用する場合

cmdで下記を実行し、cudaのバージョンが11.7か11.8か確認するnvcc -V


11.7か1...]]></summary>
        <author>
            <name>yone</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[遅延評価と機械学習]]></title>
        <id>https://zenn.dev/mtmaru/articles/3e64ccfc4fc2d2</id>
        <link href="https://zenn.dev/mtmaru/articles/3e64ccfc4fc2d2"/>
        <updated>2023-09-27T09:52:08.000Z</updated>
        <summary type="html"><![CDATA[最近「なぜ関数プログラミングは重要か」という文書の存在を知りました。関数型プログラミング界隈ではかなり有名な文書のようだったので私も読んでみたのですが、話題の一つとして「遅延評価がプログラムのモジュール化を可能にし、生産性を高める」という話が事例とともに説明されており、とても勉強になりました。まだまだ理解しきれてはいませんが……
本記事では、「なぜ関数プログラミングは重要か」に触発された私が、試しに機械学習のパイプライン構築に遅延評価を適用してみた事例を紹介します。読者のターゲットは普段Pythonで機械学習に触れているデータサイエンティストの方です。本記事を通して、遅延評価を使うと機械...]]></summary>
        <author>
            <name>mtmaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【物体検出】特徴マップとアンカーボックスの関係って？【図解】]]></title>
        <id>https://zenn.dev/nekoallergy/articles/dl-advanced-featuremap-anchor</id>
        <link href="https://zenn.dev/nekoallergy/articles/dl-advanced-featuremap-anchor"/>
        <updated>2023-09-27T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
物体検出とは、写真の中から「何が写っているか？」と「どこにあるか？」を見つける技術です。

物体検出とは？
この物体検出では、アンカーボックス という技術が使われます。
アンカーボックスの考え方を正しく理解するためには、まず 特徴マップ というものを理解していきましょう。

 特徴マップって？
特徴マップとは、画像の中から重要な情報を取り出し、それを保存する技術です。

特徴マップって？


情報を取り出す: 画像はたくさんの情報を持っています。CNNを使うことで、画像の内容や形状といった特徴（情報）を抽出することができます。これらの情報は「特徴マップ」と表現され、深い層に...]]></summary>
        <author>
            <name>NekoAllergy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[coco-annotatorから必要な部分だけ抜き取る]]></title>
        <id>https://zenn.dev/takiser/articles/668b0ed83ef251</id>
        <link href="https://zenn.dev/takiser/articles/668b0ed83ef251"/>
        <updated>2023-09-27T07:12:08.000Z</updated>
        <summary type="html"><![CDATA[何ができるコード？
coco-annotatorでkeypointだけをannotationしたデータセットのjsonからfile_nameとkeypointsだけを抜き取ってjsonファイルを作成します。
元ファイルがあるディレクトリにsimple_dataset.jsonとして出力されます。

 何に使ったの？
自作keypoint detection深層学習モデルを作成中です。被写体が絶対に写っていること、全てのkeypointが見えていることを条件として簡易的なモデルを作成しています。必要な情報は画像に対応する3点のkeypointsなのでそれだけを抽出するために作成した。
...]]></summary>
        <author>
            <name>takiser</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-313｜B - Who is Saikyo?]]></title>
        <id>https://zenn.dev/hyperdb/articles/5d0b824fb24082</id>
        <link href="https://zenn.dev/hyperdb/articles/5d0b824fb24082"/>
        <updated>2023-09-27T06:08:38.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-313 B - Who is Saikyo?



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]

def main():
    n, m = getIntMap()
    ab = getIntListRow(m)

    r = [0] + [0 for _ in range(n)]
    for a, ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-313｜A - To Be Saikyo]]></title>
        <id>https://zenn.dev/hyperdb/articles/54b5f1cfe5a407</id>
        <link href="https://zenn.dev/hyperdb/articles/54b5f1cfe5a407"/>
        <updated>2023-09-27T06:08:38.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-313 A - To Be Saikyo



 提出結果
def getInt():
    return int(input())

def getIntList():
    return list(map(int, input().split()))

def main():
    n = getInt()
    a = getIntList()

    if n == 1:
        print(0)
    else:
        m = max(a[1:])
        print(0 if a[0] > m else ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jsonファイルの構造を任意深度で可視化する(python)]]></title>
        <id>https://zenn.dev/takiser/articles/60631464166421</id>
        <link href="https://zenn.dev/takiser/articles/60631464166421"/>
        <updated>2023-09-27T06:04:58.000Z</updated>
        <summary type="html"><![CDATA[何をするコード？
pythonを使ってjsonの構造を可視化します。
ファイルのパスと表示したい深度を実行時引数で指定できます。
表示するのはjsonのkeyです。

 何に使ったの？
jsonで書かれた深層学習用データセットの構造を知りたいと思った時に使いました。

 コード
json-visualizeKey.py
import json
import sys
from pathlib import Path
import re


def open_json(path):
    with open(path) as data:
        return json.load...]]></summary>
        <author>
            <name>takiser</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[フォルダ・ファイルの変更をざっとみたいときに]]></title>
        <id>https://zenn.dev/eurekapu/articles/3a3fa62e444cde</id>
        <link href="https://zenn.dev/eurekapu/articles/3a3fa62e444cde"/>
        <updated>2023-09-27T04:35:06.000Z</updated>
        <summary type="html"><![CDATA[私はITに強い税理士・公認会計士の小松啓です。今日はコードでどのように業務を自動化しているかをご紹介します。
特に財務デューデリジェンスでは、多くのデータがクラウドにアップロードされます。その管理が大変です。そこで、毎朝ローカルに新しいフォルダをダウンロードし、Pythonスクリプトで更新されたファイルを特定します。これでデータの整理が効率的に行えます。
このスクリプトはフォルダとファイルの構造をテキストファイルで見られるようにします。テキストファイルには年月日が付き、指定の場所に保存されます。
import os
from tkinter import Tk, filedialog, ...]]></summary>
        <author>
            <name>小松啓</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[文章を自動で改行して字幕を作る。(BudouX in Python）]]></title>
        <id>https://zenn.dev/micchi/articles/e0a584deeced0a</id>
        <link href="https://zenn.dev/micchi/articles/e0a584deeced0a"/>
        <updated>2023-09-26T16:14:18.000Z</updated>
        <summary type="html"><![CDATA[ゴール：文章を読みやすい位置で改行するために分割する。
先日、BudouX: 読みやすい改行のための軽量な分かち書き器という記事が公開されていました。
動画の字幕を作成するために早速使ってみました。

 開発環境

Python 3.10.12


 事前準備
pip install budoux

 やったこと

 分かち書き
日本語は単語ごとに空白で区切らないため単語の切れ目の判定が難しいです。
そこで、BudouXはこの問題を次の文字の間で区切るべきか否かの二値分類問題に落とし込み、文章に対して、予測値が正であれば区切り、そうでなければ区切らないという処理を繰り返すことで、読み...]]></summary>
        <author>
            <name>micchi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[discord.pyでスラッシュコマンドを実装する方法]]></title>
        <id>https://zenn.dev/952490802574164/articles/b8b0232b29e79b</id>
        <link href="https://zenn.dev/952490802574164/articles/b8b0232b29e79b"/>
        <updated>2023-09-26T10:49:16.000Z</updated>
        <summary type="html"><![CDATA[Discordボットとは
Discordは、ゲーマーやコミュニティのメンバーに利用されるコミュニケーションツールです。この記事では、Discordボットを作成し、Pythonライブラリであるdiscord.pyを使用してスラッシュコマンドを実装する方法を説明します。

 開発環境のセットアップ
Discordボットを開発するには、Pythonとdiscord.pyのセットアップが必要です。以下は、開発環境をセットアップする手順です。
Pythonをインストールします。
discord.pyライブラリをインストールします。
Discord Botを作成します。

 ボットの基本設定
ボ...]]></summary>
        <author>
            <name>まるた</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pydanticで非プリミティブを使う]]></title>
        <id>https://zenn.dev/yosemat/articles/6834cfc8de0d86</id>
        <link href="https://zenn.dev/yosemat/articles/6834cfc8de0d86"/>
        <updated>2023-09-26T10:13:26.000Z</updated>
        <summary type="html"><![CDATA[非プリミティブな型はPydanticでは使えない
こんにちは極論モンスターのYosematです。
Pydanticはbuilt-inで値のValidationやSerialization（stringやjsonに変換して保存したりする機能）がついていて便利ですが非プリミティブな型はPydanticModelでは使えません。これは型によってValidation/Serializationのロジックは異なるからです。
Pythonユーザーのよくあるユースケースは「numpyをPydanticで使う」だと思います。
import numpy as np
from pydantic impo...]]></summary>
        <author>
            <name>Yosemat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FastAPI と Strawberry(GraphQL) が動作する諸々整ったデモアプリを作ってみた]]></title>
        <id>https://zenn.dev/comachi/articles/4376fb0a50ca0f</id>
        <link href="https://zenn.dev/comachi/articles/4376fb0a50ca0f"/>
        <updated>2023-09-26T10:10:09.000Z</updated>
        <summary type="html"><![CDATA[はじめに

この記事では、最近 FastAPI と Strawberry(GraphQL) に入門した私が、FastAPI と Strawberry(GraphQL) が動作する諸々整ったデモアプリを使用する（作る）方法をメモとして残します。
Strawberry に関する記事（特にサンプルコード付き）は未だあまり少ない印象を受けましたので、Strawberry について入門する方の参考になればと思います。

FastAPI と Strawberry(GraphQL) に入門してから数週間なので、アンチパターンを踏んでいるかもしれませんが、サンプルコードの一つとしていただければと思い...]]></summary>
        <author>
            <name>comachi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonのlambdaは式構文だから命令文を書けないとか言われるけど関数定義がobjectになるから別に困らない]]></title>
        <id>https://zenn.dev/karamawanu/articles/3a879e40014b57</id>
        <link href="https://zenn.dev/karamawanu/articles/3a879e40014b57"/>
        <updated>2023-09-26T06:27:47.000Z</updated>
        <summary type="html"><![CDATA[pythonは、式構文と命令文が明確に分かれており、lamdaが式扱いになる。これはpythonの問題点だとは言われる。
公式ドキュメントにもそう書いてある。あえてpython2.7にリンク。後半を抜粋する。
https://docs.python.org/ja/2.7/reference/expressions.html#lambda

パラメータの構文の一覧は 関数定義 を参照してください。ラムダ式で作成された関数は命令文を含むことができない点に注意してください。

中で命令文が書けないのでこれが他言語育ちからやたらdisられる。
だが待ってほしい。lambdaの章には前半にもうひと...]]></summary>
        <author>
            <name>karamawanu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[venv使用時は全角が入ったパス名に注意]]></title>
        <id>https://zenn.dev/tk2345/articles/138e079d93ac49</id>
        <link href="https://zenn.dev/tk2345/articles/138e079d93ac49"/>
        <updated>2023-09-26T05:04:13.000Z</updated>
        <summary type="html"><![CDATA[結論
venvで仮想環境を作成するときにパス内に全角が含まれていると仮想環境でない通常の環境化で動作してしまうため、半角のみでの環境を作成してください。

 環境
OS: Windows11
Python: 3.7.9
シェル：PowerShell

 現象

 パスに全角を含まない場合
D:\venv_testに仮想環境を作成してみます。

仮想環境をアクティブにし、pip freezeでパッケージの確認を行います。先ほど環境を作成したため、何もインストールされていません。


 パスに全角を含んだ場合
一度venvフォルダを削除し、フォルダ名をvenv_テストに変更して改めて仮想...]]></summary>
        <author>
            <name>tk2345</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-312｜A - Chord]]></title>
        <id>https://zenn.dev/hyperdb/articles/cb44aff7b662bd</id>
        <link href="https://zenn.dev/hyperdb/articles/cb44aff7b662bd"/>
        <updated>2023-09-26T04:54:11.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-312 A - Chord



 提出結果
def getString():
    return input()


def main():
    s = getString()

    print('Yes' if s in ['ACE', 'BDF', 'CEG', 'DFA', 'EGB', 'FAC', 'GBD'] else 'No')


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-312｜B - TaK Code]]></title>
        <id>https://zenn.dev/hyperdb/articles/b5f4d1e88272fa</id>
        <link href="https://zenn.dev/hyperdb/articles/b5f4d1e88272fa"/>
        <updated>2023-09-26T04:54:11.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-312 B - TaK Code



 提出結果
def getIntMap():
    return map(int, input().split())

def getStringRow(N):
    return [input() for _ in range(N)]

def chk(c):
    a = ['###.', '###.', '###.', '....', '....', '.###', '.###', '.###']
    t = [c[0][0:4], c[1][0:4], c[2][0:4], c[3][0:4], c[5...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[多重共線性の検証（線形回帰とRandomForest）]]></title>
        <id>https://zenn.dev/stylishboob/articles/c9d82b9eae3284</id>
        <link href="https://zenn.dev/stylishboob/articles/c9d82b9eae3284"/>
        <updated>2023-09-26T02:30:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
私の職場では「多重共線性はだめだ！多重共線性を取り除け！」とよく叫ばれています。
ただ、多重共線性の説明をみると大体が線形回帰の例のみで、それ以外のケースはどうなのかについてはあまり言及されていませんでした。
そこで、今回は線形回帰（sklearnのLinearRegression）に加えて、非線形の回帰手法であるRandomForest（こちらもsklearnのRandomForestRegressor）で多重共線性があるのかを検証したいと思います。
また、多重共線性はモデルの予測精度にも影響を与えるものだと勘違いしていましたので、RMSEもどれくらい変わるのかを今回の検...]]></summary>
        <author>
            <name>stylishboob</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next.jsとPythonの開発環境を爆速で構築する]]></title>
        <id>https://zenn.dev/arsaga/articles/0fdee431a8374a</id>
        <link href="https://zenn.dev/arsaga/articles/0fdee431a8374a"/>
        <updated>2023-09-26T02:17:10.000Z</updated>
        <summary type="html"><![CDATA[はじめに
今回はフロントエンドにNext.js、バックエンドにPythonを採用して、Webサイトの環境構築を行いたいと思います。元々、Whisper APIとVOICEVOXによる合成音声を使用した会話アプリを開発したかったのですがですが、環境構築の段階でかなりのボリュームになった為、一旦記事として共有します。


 モノレポについて
モノレポとはWebアプリの全てのコード（WebバックエンドやWebフロントエンド）を単一のリポジトリに保存するパターンを指します。 リポジトリを単一化することのメリットは、複数のチームで開発を行う際に、バックエンドとフロントエンドでコードを使い回すこ...]]></summary>
        <author>
            <name>まさきち</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[alembicのマイグレーションファイルの書き方]]></title>
        <id>https://zenn.dev/fhmn/articles/188b23c6a95644</id>
        <link href="https://zenn.dev/fhmn/articles/188b23c6a95644"/>
        <updated>2023-09-26T01:04:51.000Z</updated>
        <summary type="html"><![CDATA[Pythonのマイグレーションツールalembicで、テーブル作成や列追加等をどう記載すればよいかまとめます。
alembicのインストールや設定方法については触れません。

 テーブル作成
from datetime import datetime

from alembic import op
from sqlalchemy import DATETIME, VARCHAR, Column, Integer


def upgrade() -> None:
    op.create_table(
        "users",
        Column("id", In...]]></summary>
        <author>
            <name>fhmn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CAEのためのPython6（メッシュ入れ替えツール）]]></title>
        <id>https://zenn.dev/cae_taka/articles/e3f4267adbf3bf</id>
        <link href="https://zenn.dev/cae_taka/articles/e3f4267adbf3bf"/>
        <updated>2023-09-26T00:33:04.000Z</updated>
        <summary type="html"><![CDATA[動機

日頃のAssy作業で一番多いのがベースになるモデルがあって、
部品の一部を入れ替えていく作業かと思います。
この作業１つ2つなら大したことないんですが、数が多くなると必要な部品を消して
しまったり、節点や要素のリナンバーをミスしてモデルを壊してしまうことがあります。
また、プリソフトでこの作業をやっていると節点と要素だけ消せばいいところをパートやセットノードなどを削除してしまう危険性があります。（私はこれが原因で部品がすり抜けてました）
やっていることは単純なので、計算結果の前でしまった！！と頭抱えこまないように自動化していきたいと思います。


 今回やること

ベースにな...]]></summary>
        <author>
            <name>Taka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【物体検出】アンカーボックスって？【図解】]]></title>
        <id>https://zenn.dev/nekoallergy/articles/dl-advanced-anchor</id>
        <link href="https://zenn.dev/nekoallergy/articles/dl-advanced-anchor"/>
        <updated>2023-09-25T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[アンカーボックスとは？
物体検出タスクは、写真や映像の中から「物体が何か？」と「物体がどこにあるか？」を見つける技術です。ここで「アンカーボックス」というのは、物体の位置を推測するための「参照ボックス」として考えることができます。
具体例で考えてみましょう。
例えば、道路の写真に車や自転車、歩行者が写っているとします。

アンカーボックスとは？
アンカーボックスは、この写真上のあらゆる場所に小さな四角いボックスをいくつか置いて、それぞれのボックスが物体を含むかどうかを推測します。そして、もし物体を含んでいると判断されたら、そのボックスの位置や大きさを調整して、物体を正確に囲むようにし...]]></summary>
        <author>
            <name>NekoAllergy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-311｜B - Vacation Together]]></title>
        <id>https://zenn.dev/hyperdb/articles/9d3e5ddee2b33f</id>
        <link href="https://zenn.dev/hyperdb/articles/9d3e5ddee2b33f"/>
        <updated>2023-09-25T05:17:50.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-311 B - Vacation Together



 提出結果
def getIntMap():
    return map(int, input().split())


def getStringListRow(N):
    return [list(input()) for _ in range(N)]


def main():
    n, d = getIntMap()
    s = getStringListRow(n)

    # x -> y transform
    t = []
    for i in range(...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-311｜A - First ABC]]></title>
        <id>https://zenn.dev/hyperdb/articles/59ca91228a3158</id>
        <link href="https://zenn.dev/hyperdb/articles/59ca91228a3158"/>
        <updated>2023-09-25T05:17:49.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-311 A - First ABC



 提出結果
def getInt():
    return int(input())


def getString():
    return input()


def main():
    n = getInt()
    s = [''] + list(getString())

    print(max([s.index('A'), s.index('B'), s.index('C')]))


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[1番手早く自社サービスのソリューションエンジニアを作る方法(OpenAI.functions + IPython+ SlashGPT)]]></title>
        <id>https://zenn.dev/singularity/articles/40dd07f9f3da2b</id>
        <link href="https://zenn.dev/singularity/articles/40dd07f9f3da2b"/>
        <updated>2023-09-24T22:43:04.000Z</updated>
        <summary type="html"><![CDATA[特定サービスを深く熟知していて、APIも自在に使いこなし、お客さんの必要としているソリューションをつくるのを手伝ってくれるソリューションエンジニアって素敵ですよね。いままでそんな素敵なソリューションエンジニアは、雇用するのも養成するのも大変で、超大手のクラウドベンダーぐらいしか十分に用意するのは難しかったです。
この記事では、OpenAI.functions+IPython+SlashGPTを活用することで、自社サービス専用のソリューションエンジニア(ボット)を手早く起ち上げる方法を解説します。
言い換えると、自然言語での要求に応じて独自APIを呼び出すコードを実装、実行してくれるCod...]]></summary>
        <author>
            <name>kozayupapa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CloudTrailを使ってリソース作成者を自動的にタグ付けしてみた]]></title>
        <id>https://zenn.dev/strix/articles/290fed1c2a5665</id>
        <link href="https://zenn.dev/strix/articles/290fed1c2a5665"/>
        <updated>2023-09-24T14:43:19.000Z</updated>
        <summary type="html"><![CDATA[概要
コストを最適化するために、定期的なリソースの棚卸はかかせません。
例えば検証用やPoCで一時的に作成したEC2を目的が達成したとしても何故かしばらく残しておくことが多々あると思います。そして、消し忘れると後に誰が作ったのかわからず消したいけど消せないと悶々とした気持ちになるのです。
誰が作ったのかが一目瞭然となれば、すぐ連絡をすることができスムーズにアクションができますよね。例えばCloudTrailとLambdaを使って作成者（Author）のタグ情報を自動的につける設定できないか考えてみました。

 大まかな流れ
CloudTrailでは誰が・いつ・何をしたかが記録されるの...]]></summary>
        <author>
            <name>Masayuki Harano</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker + FastAPI + nginxで環境構築]]></title>
        <id>https://zenn.dev/hiromichi1729/articles/e1d4fd87484ceb</id>
        <link href="https://zenn.dev/hiromichi1729/articles/e1d4fd87484ceb"/>
        <updated>2023-09-24T14:29:10.000Z</updated>
        <summary type="html"><![CDATA[背景
業務で今まで触ったことのなかったpythonでapi開発をする必要になったので、同じような人がいた場合参考になればと思い自分が行った環境構築の手順をここに残します。

 Pythonのフレームワーク
pythonのどのフレームワークを使って開発をするかからまず決めないといけなかったので、参考までにどういう基準でFastAPIを選んだのか書いておきます。
一応、候補として

Django
Flask
FastAPI

の3種類がありました。
Djangoはフルスタックなフレームワークなので、必要なものが全部揃っているのがメリットですが、今回はサーバーが立てられればいいのでオーバー...]]></summary>
        <author>
            <name>百木拓迪</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django開発環境構築（pyenv・venv）]]></title>
        <id>https://zenn.dev/zaruju_za/articles/a3194e528592b7</id>
        <link href="https://zenn.dev/zaruju_za/articles/a3194e528592b7"/>
        <updated>2023-09-24T07:15:10.000Z</updated>
        <summary type="html"><![CDATA[はじめに
開発時の個人的なメモです。
デプロイ時などには変更が必要だと思います。

 ＜最終的なディレクトリ構成＞
最終的に
プロジェクト名/
├─ project/
│  ├─ config/
│  ├─ myapp/
│  ├─ static/
│  ├─ manage.py
├─ .python-version
├─ README.md
├─ requirements.txt

 プロジェクトフォルダの作成
mkdir {プロジェクト名}
cd {プロジェクト名}

 仮想環境の整備

 Python のバージョン選択と固定
pyenv vesions
pyenv local ...]]></summary>
        <author>
            <name>zaruju</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DuckDB爆速すぎてGISに使ったりChatGPTと組み合わせてみる]]></title>
        <id>https://zenn.dev/otwn/articles/f11d37685caf93</id>
        <link href="https://zenn.dev/otwn/articles/f11d37685caf93"/>
        <updated>2023-09-24T00:34:33.000Z</updated>
        <summary type="html"><![CDATA[この記事ではDuckDBを使用した地理分析や、Python上でDuckdbのデータを基にLangchainを使ったモデルを利用することで話し言葉でSQLを実行させる例を紹介します。

 SQLの価値
2023年も残り数ヶ月ですが、2022年では最も人気あるプログラミング言語のアンケートでSQLはPythonを抑えて3位でありました(参照)。今年はどうなるでしょうか。ただSQLがここに位置するのは必要性が上昇しているからでしょう。同僚もデータサイエンス分野ではPythonかRで良かった(はずな)のに、SQL学びなおすのかと笑いながら話していました。軽く聞いたアンケートでも、多くの人がSQ...]]></summary>
        <author>
            <name>otwn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django上でCeleryの環境を構築するための細かい設定項目]]></title>
        <id>https://zenn.dev/shimakaze_soft/articles/93d6d3eb90221f</id>
        <link href="https://zenn.dev/shimakaze_soft/articles/93d6d3eb90221f"/>
        <updated>2023-09-24T00:12:31.000Z</updated>
        <summary type="html"><![CDATA[Django上でCeleryの環境を構築する
Django上でCeleryの環境の構築方法は以下の記事でまとめています。
https://zenn.dev/shimakaze_soft/articles/bbd859803c63a6

 Workerのプリフェッチ
CeleryのWorkerがタスクを実行する際、効率的なタスク処理のためにプリフェッチという機能を活用します。
プリフェッチとは、Workerが一度に複数のタスクをキューから事前に先読みして、タスクを保持しておく機能のことを指します。
これにより、前のタスクが終了した瞬間に直ちに次のタスクを開始することができ、Worker...]]></summary>
        <author>
            <name>shimakaze_soft</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DjangoのCeleryで非同期タスクを定期実行するBeatの環境を構築する]]></title>
        <id>https://zenn.dev/shimakaze_soft/articles/3d099fd6f08142</id>
        <link href="https://zenn.dev/shimakaze_soft/articles/3d099fd6f08142"/>
        <updated>2023-09-23T22:01:59.000Z</updated>
        <summary type="html"><![CDATA[Django上でCeleryの実行結果をDBに保存する構築方法は以下の記事で紹介しました。
https://zenn.dev/shimakaze_soft/articles/b925594a2235b0
今回はCeleryを定期実行する機能であるBeatの設定を適用して、Django上でバッチなどの定期実行の機能を設定していきます。
今回はDjango上でCeleryのBeatを使いやすくするためのライブラリとしてのdjango-celery-beatの使い方についても紹介していきます。

 インストール
まずは上記の記事を最初に読んで、Docker上でDjangoとCeleryの環境構...]]></summary>
        <author>
            <name>shimakaze_soft</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DjangoのCeleryで非同期タスクの実行結果をDBに保存する]]></title>
        <id>https://zenn.dev/shimakaze_soft/articles/b925594a2235b0</id>
        <link href="https://zenn.dev/shimakaze_soft/articles/b925594a2235b0"/>
        <updated>2023-09-23T10:32:52.000Z</updated>
        <summary type="html"><![CDATA[Django上でCelery環境の構築方法は以下の記事で紹介しました。
https://zenn.dev/shimakaze_soft/articles/bbd859803c63a6
今回はそのCeleryの実行結果をDBに自動で保存してくれたり、Django-ORMを介して実行結果を取得したりできるdjango-celery-resultsというライブラリがあり、そちらの使い方について紹介します。
https://github.com/celery/django-celery-results

 インストール
まずは上記の記事を最初に読んで、Docker上でDjangoとCeleryの...]]></summary>
        <author>
            <name>shimakaze_soft</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DjangoのCeleryで非同期でタスクを実行して、モニタリングする環境をDockerで構築する]]></title>
        <id>https://zenn.dev/shimakaze_soft/articles/bbd859803c63a6</id>
        <link href="https://zenn.dev/shimakaze_soft/articles/bbd859803c63a6"/>
        <updated>2023-09-23T06:24:33.000Z</updated>
        <summary type="html"><![CDATA[Pythonで非同期処理をやる場合はCeleryを使うのが定番です。
今回はceleryを試しに動作させるための環境をdocker-composeを使って簡単に作る方法をご紹介し、Django上で動作するように環境構築します。
以前、昔にnoteに書いた以下の記事の応用や焼き直しのような内容です。（随分昔に書いた懐かしい記事）
https://note.com/shimakaze_soft/n/n4a2b63d320ed

 基本的に使用するツール類
今回は以下の4つを使用します。
それぞれ別なコンテナで動作させるため、本番の運用などでは、別々なサーバーで動作させることを想定しています。...]]></summary>
        <author>
            <name>shimakaze_soft</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NumPyからCuPyへ：高速化の一例]]></title>
        <id>https://zenn.dev/ykesamaru/articles/f5b41a67523302</id>
        <link href="https://zenn.dev/ykesamaru/articles/f5b41a67523302"/>
        <updated>2023-09-22T12:21:57.000Z</updated>
        <summary type="html"><![CDATA[はじめに
環境
インストール

CuPyについて

NumPyのサンプルコード
CuPyによる高速化
性能比較



CuPyの苦手な処理

NumPyのサンプルコード
CuPyのサンプルコード
性能比較


まとめ


 はじめに
Pythonで数値計算を行う際によく使われるライブラリがNumPyです。しかし、GPUを活用することで計算速度を向上させたい場面も多いでしょう。そこでCuPyが登場します。この記事では、NumPyのコードをCuPyに置き換える一例とその性能比較について解説します。一方でCuPyの苦手な処理についても触れますので、使いどころを間違えないようにしましょう。
...]]></summary>
        <author>
            <name>yKesamaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PydanticのRootModelを使いこなす]]></title>
        <id>https://zenn.dev/yosemat/articles/637f84c579d0b7</id>
        <link href="https://zenn.dev/yosemat/articles/637f84c579d0b7"/>
        <updated>2023-09-22T07:47:57.000Z</updated>
        <summary type="html"><![CDATA[PydanticのBaseModelの恩恵をlistやdictにも与えたい
こんにちは、極論モンスターのYosematです。
PydanticはTypeSafeにPythonをかけて最高ですよね。特に私が好きなのはmodel_validateのようなSerialize/Deserializeの機能です。しかしPydanticのBaseModelはうまいことdictやjsonへのSerialize/Deserializeができますがlist[MyModel]はPydanticのクラスではないのでmodel_validateのようなクラスメソッドにアクセスできません。
ダサい方法を先に書...]]></summary>
        <author>
            <name>Yosemat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-310｜B - Strictly Superior]]></title>
        <id>https://zenn.dev/hyperdb/articles/5a1fb5c71078c2</id>
        <link href="https://zenn.dev/hyperdb/articles/5a1fb5c71078c2"/>
        <updated>2023-09-22T07:03:25.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-310 B - Strictly Superior



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]


def main():
    n, m = getIntMap()
    pl = getIntListRow(n)

    fl = [pl[i][2:] for i in range(n)]  # p...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-310｜A - Order Something Else]]></title>
        <id>https://zenn.dev/hyperdb/articles/0cbb4c118e2ca4</id>
        <link href="https://zenn.dev/hyperdb/articles/0cbb4c118e2ca4"/>
        <updated>2023-09-22T07:03:24.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-310 A - Order Something Else



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    n, p, q = getIntMap()
    a = getIntList()
    b = min([q + a[i] for i in range(n)])

    print(b if b < p ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQLとSQLAlchemyで詰まった話]]></title>
        <id>https://zenn.dev/chapi/articles/c50a050549faf7</id>
        <link href="https://zenn.dev/chapi/articles/c50a050549faf7"/>
        <updated>2023-09-22T04:13:06.000Z</updated>
        <summary type="html"><![CDATA[MySQLとPythonを利用して自社サービスを開発しています。開発していく中で解決に時間がかかったので原因と解決方法をまとめました。

 環境
MYSQL: 8.0
Python: 3.9
SQLAlchemy: 1.4.36
開発環境の構築にはDockerを利用しています。

 エラーになったコード
要件上、idとsystem_timestampというtimestamp型を複合主キーにする必要がありました。

models.py
from sqlalchemy import create_engine
from sqlalchemy.orm import declarative_ba...]]></summary>
        <author>
            <name>ちゃぴ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[カメラ情報を用いてリアルタイムで状況をテキストに起こしたい (Ros2) part2]]></title>
        <id>https://zenn.dev/iasl/articles/371968a2f31e32</id>
        <link href="https://zenn.dev/iasl/articles/371968a2f31e32"/>
        <updated>2023-09-22T04:05:20.000Z</updated>
        <summary type="html"><![CDATA[前回は、使いたいモデル(BLIP-2)を見つけることができ、それらがAIプラットフォームであるHugging Faceにたくさんあることが分かりました。今回はまずHugging Faceについてまとめたいと思います。

 Hugging Faceについて
前述のとおりAIプラットフォームであり、特に自然言語生成モデルがたくさんあります。

Hugging Faceの主な目的は、AIコミュニティの協力と共有を促進することです。プラットフォームは、AIモデルやデータセットをユーザーがアップロードし、共有することができるようになっています。また、他のユーザーがアップロードしたモデルやデータセッ...]]></summary>
        <author>
            <name>toky</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[カメラ情報を用いてリアルタイムで状況をテキストに起こしたい (Ros2) part1]]></title>
        <id>https://zenn.dev/iasl/articles/3fb2b018044232</id>
        <link href="https://zenn.dev/iasl/articles/3fb2b018044232"/>
        <updated>2023-09-22T04:02:47.000Z</updated>
        <summary type="html"><![CDATA[今まで深く機械学習や深層学習を学んでいなかったので触れてみようと思いました。今回はとにかく実装することをメインに進めていきたいと思います。

 深層学習モデルを扱うにあたって
まず、目的を明確にする必要があります。今回は動画像の状況を文章に起こしたいと考えています。また、１からモデルを組み立てる技術はないので、構築済みのモデルを使いたいと考えています。

 大規模言語モデル(LLM)について
今回は入力動画像を大規模言語モデルに入れて、現在の状況を説明するものを作りたいなと考えています。そもそも、大規模言語モデル(LLM)とは以下のようなものです。

大規模言語モデル（Large Lan...]]></summary>
        <author>
            <name>toky</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PowerShellスクリプトを実行できるように設定する]]></title>
        <id>https://zenn.dev/ricmsd/articles/7f2ceade6581db</id>
        <link href="https://zenn.dev/ricmsd/articles/7f2ceade6581db"/>
        <updated>2023-09-22T03:54:10.000Z</updated>
        <summary type="html"><![CDATA[WindowsでPythonの仮想環境（virtual environments）を有効にしようとしたところ以下のエラーに遭遇したので回避方法をメモしておきます。

 Activate.ps1
PS C:\project> & c:/project/venv/Scripts/Activate.ps1
& : このシステムではスクリプトの実行が無効になっているため、ファイル C:\project\venv\Scripts\Activate.ps1 を読み込むことができません。詳細については、「about_Execution_Policies」(https://go.m...]]></summary>
        <author>
            <name>ricmsd</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pytestで非同期関数をテストする]]></title>
        <id>https://zenn.dev/fhmn/articles/2ca12d989dd505</id>
        <link href="https://zenn.dev/fhmn/articles/2ca12d989dd505"/>
        <updated>2023-09-22T01:05:02.000Z</updated>
        <summary type="html"><![CDATA[FastAPIを使っていると非同期関数を扱うことが増えます。
非同期関数のテストの書き方をメモとして記載します。
!
記載のコード例では単純化のため一部コードを省略しています。


 コード
下記のコードをテストするケースを考える。

repo.py
from sqlalchemy import select
from sqlalchemy.orm import Session


class UsersRepository:
    async def find_by_id(session: Session, id: int) -> User:
        result = ...]]></summary>
        <author>
            <name>fhmn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【中級者向け】Streamlitで作るデータ解析Webアプリ]]></title>
        <id>https://zenn.dev/labcode/books/cf772007ca5335</id>
        <link href="https://zenn.dev/labcode/books/cf772007ca5335"/>
        <updated>2023-09-21T13:14:34.000Z</updated>
        <summary type="html"><![CDATA[📰 概要

データファイルをドラッグ&ドロップするだけで、解析が自動で行われるようなアプリを作りたいと思ったことはありませんか？

自分が作った解析コードを他の人にも使ってもらいたいと思ったことはありませんか？

本書では、これらの望みを叶えてくれるデータ解析用のWebアプリの作成方法をご紹介しています。
PythonのライブラリであるStreamlitを用いることで、HTML / CSS / JavaScriptなどの言語不要で簡単に作成できます。

本書では種類の異なる4つのオリジナルアプリの作り方をご紹介しています。
ソースコードもすべて公開しているので、お手元のPCでアプリを動かしながら学習することができます。

👍 Webアプリの利点
・ ブラウザを使って簡単に操作可能になる
・ 他の人にも使ってもらいやすくなる
・ 公開すれば、全世界の人が使えるようになる

👫 対象とする読者
・ データ解析用のオリジナルのWebアプリを作りたい人
・ GUIの操作で解析を半自動化したい人
・ 研究室の他のメンバーにも自分の解析コードを使ってほしいと思っている人
・ Streamlitを使ってWebアプリを作りたい人
・ 手を動かしながらPythonを習得したい人

【販売価格】
期間限定で ¥2000→¥1000 (50% OFF!!)で販売しております！

📰アップデート情報
2023/09/21：技術書初版がリリースされました。

本技術書は随時アップデートされていきます。
一度購入された方はアップデートされたとしても追加料金は発生しませんのでご安心ください。]]></summary>
        <author>
            <name>LabCode（ラボコード）</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonの学習におすすめ技術書5選【高校生エンジニアが解説】]]></title>
        <id>https://zenn.dev/raio/articles/da804721b33850</id>
        <link href="https://zenn.dev/raio/articles/da804721b33850"/>
        <updated>2023-09-21T11:22:26.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです🙌
公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています。
今回の記事では、Pythonの学習におすすめ技術書5選について解説します！

 技術書を無料で読む方法
KindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌

200万冊以上の書籍が何冊でも読み放題
月額980円が今なら1ヶ月無料
場所に囚われず、様々な端末で使用可能

勿論、技術書以外にもビジネス書や漫画など種類豊富です！
↓入会したい方は画像をクリック↓
https://amzn.to/3rv5CZ...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChromeバージョンアップによるSeleniumエラーのトラブルシューティング]]></title>
        <id>https://zenn.dev/ykesamaru/articles/a1a4fd5eae8563</id>
        <link href="https://zenn.dev/ykesamaru/articles/a1a4fd5eae8563"/>
        <updated>2023-09-21T11:06:50.000Z</updated>
        <summary type="html"><![CDATA[はじめに
環境
問題の発生
エラーメッセージ
解決手順
まとめ


 はじめに
この記事は、ChromeのバージョンアップによってSeleniumで発生する一般的なエラーとその解決手順について解説するものです。
この記事は主に自分用の備忘録として書かれており、今後同様の問題に遭遇した際にすぐに対処できるようにすることを目的としています。

 環境
$ uname -a
Linux user 5.15.0-83-generic #92~20.04.1-Ubuntu SMP Mon Aug 21 14:00:49 UTC 2023 x86_64 x86_64 x86_64 GNU/Lin...]]></summary>
        <author>
            <name>yKesamaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python の環境構築をやってみた]]></title>
        <id>https://zenn.dev/harukinguu/articles/641a84f5f53987</id>
        <link href="https://zenn.dev/harukinguu/articles/641a84f5f53987"/>
        <updated>2023-09-21T09:22:39.000Z</updated>
        <summary type="html"><![CDATA[今日、とあるYoutubeにのってたAmazon価格追跡アプリを真似して作ってみようと思ったのですが、せっかくなのでAnacondaで仮想環境を作って取り組みたいと考え、様々な記事を見ながら環境構築に取り組んでみたので、その経緯についてまとめます。

 前提

Anacondaはインストール済み
vscodeもインストール済み


 やり方


pythonの拡張機能のインストール


Anacondaでの仮想環境の構築
https://ai-inter1.com/python-vscode/
createした。


環境変数の設定
https://blog.beachside.dev/...]]></summary>
        <author>
            <name>はるき</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python で RC4 暗号を実装する]]></title>
        <id>https://zenn.dev/fikastudio/articles/3ff628c031af52</id>
        <link href="https://zenn.dev/fikastudio/articles/3ff628c031af52"/>
        <updated>2023-09-21T05:30:07.000Z</updated>
        <summary type="html"><![CDATA[この記事では、Python を使用して RC4 暗号を実装します。
Python のライブラリを使用すれば RC4 暗号なんて簡単に利用することができます。
しかし、RC4 暗号の中身を理解するという意味で、スクラッチで実装します。

 RC4 概要
RC4 暗号の歴史などは、他の記事に譲ります。ここでは、RC4 の仕組みについてのみ着目します。RC4 はストリーム暗号の１種です。ストリーム暗号は、平文をビットもしくはバイト単位で暗号化・復号処理を行います。しかし、これらの処理は独立して行われるものではなく、例えばあるバイトの暗号化処理は、前のバイトの暗号化処理に依存します。
RC4 は...]]></summary>
        <author>
            <name>情報工学入門チャンネル</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-309｜A - Nine]]></title>
        <id>https://zenn.dev/hyperdb/articles/91e153865fdc9a</id>
        <link href="https://zenn.dev/hyperdb/articles/91e153865fdc9a"/>
        <updated>2023-09-21T05:06:30.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-309 A - Nine



 提出結果
def getIntMap():
    return map(int, input().split())


def main():
    a, b = getIntMap()

    print('Yes' if b - a == 1 and a % 3 != 0 else 'No')


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-309｜B - Rotate]]></title>
        <id>https://zenn.dev/hyperdb/articles/1a9448bb9fc2c2</id>
        <link href="https://zenn.dev/hyperdb/articles/1a9448bb9fc2c2"/>
        <updated>2023-09-21T05:06:29.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-309 B - Rotate



 提出結果
def getInt():
    return int(input())


def getStringListRow(N):
    return [list(input()) for _ in range(N)]


def cp(x, y):
    z = []
    for i in range(y):
        z.append([x[i][j] for j in range(y)])
    return z


def main():
    n = getInt()
    a = g...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【個人開発 #1-1】レコメンドシステムを作ってみた vol.1　〜サービス概要〜]]></title>
        <id>https://zenn.dev/waka07/articles/development-diary_1-1</id>
        <link href="https://zenn.dev/waka07/articles/development-diary_1-1"/>
        <updated>2023-09-20T23:31:02.000Z</updated>
        <summary type="html"><![CDATA[作りたいシステム
忙しい人のためのギフト提案型AI「AiSAP!(エイサップ)」

 コンセプト
忙しい社会人のために、AIが可能な限り素早く（ASAP: As Soon As Possible）、最適なギフトを提案してくれるWebサービス。

 作ろうと思ったきっかけ
友達や彼女への誕プレとか、お世話になっている会社の人へのお返しとか、何あげたらいいか毎回悩む！しかも直前になって気づくから買いに行っている時間もない！
という自分の悩みから作りたいなーとなんとなく思っていたのですが、
「何か新サービスを提案してください」と会社に言われて、締め切りが急に出現。
2ヶ月足らずで作ることに...]]></summary>
        <author>
            <name>Waka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Qiskit で遊んでみる (21) — QAOA でお絵描き]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-qiskit21</id>
        <link href="https://zenn.dev/derwind/articles/dwd-qiskit21"/>
        <updated>2023-09-20T17:39:36.000Z</updated>
        <summary type="html"><![CDATA[目的
TYTAN tutorial おすすめ5（お絵かきロジック） という TYTANSDK のチュートリアルがある。原理的には QAOA でいけるはずなので試してみたい。
cuTensorNet での実験は使われたし、何だかんだで時間がかかっていつ解けるのであろうかという感じであったので、今回は思い切って cuStateVec を用いる。
以下の内容は Google Colab の T4 を用いて計算した。

 今回解きたい問題
必要なモジュールを import する。
from __future__ import annotations

import time
from col...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Python] FirestoreにJSONでデータをアップロードする]]></title>
        <id>https://zenn.dev/410/articles/64b7c0d3e46609</id>
        <link href="https://zenn.dev/410/articles/64b7c0d3e46609"/>
        <updated>2023-09-20T15:41:06.000Z</updated>
        <summary type="html"><![CDATA[環境

MacOS Ventura 13.5.2
Python 3.9.6


 秘密鍵を用意する
Firebaseのコンソールにアクセスし、「プロジェクトの設定」 > 「サービス　アカウント」を開きます。
ボタンをクリックして、新しい秘密鍵をダウンロードします。


 コード
mykey.json　- 秘密鍵　
sample_data.json - サンプルデータ
サンプルデータ
{
    "data": {
        "K2Kjm3x6": {
            "name": "Taro",
            "age": 25,
          ...]]></summary>
        <author>
            <name>ようてん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonのthreadを復習してみた。[個人的メモ]]]></title>
        <id>https://zenn.dev/kaba777/articles/084d09bbd17160</id>
        <link href="https://zenn.dev/kaba777/articles/084d09bbd17160"/>
        <updated>2023-09-20T14:29:50.000Z</updated>
        <summary type="html"><![CDATA[Pythonはシングルスレッドだ。
例えば実行に１秒かかる関数taskがあるとする。
def task():
  print('Starting a task...')
  sleep(1)
  print('done')
以下のように2回taskを呼べば、pythonはシングルスレッドのため、１回目のtaskの終了を待ってから２回目のtaskを開始するため、全体では２秒かかる。
task()
task()
これを解決するのがThreadだ。処理を並行して走らせることで１秒で処理を終わらせることが出来る。
pythonでthreadを使用するにはまずThreadをインポートする。
fro...]]></summary>
        <author>
            <name>カバ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【2023円9月】0円で読めるオススメ技術書5選]]></title>
        <id>https://zenn.dev/raio/articles/712bc82e5b8faf</id>
        <link href="https://zenn.dev/raio/articles/712bc82e5b8faf"/>
        <updated>2023-09-20T11:42:27.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです！
平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻
↓筆者について↓
https://qiita.com/Raio14f/items/ef0fb67685b36298bcb0
今回の記事では、0円で読めるオススメ技術書5選を紹介します！
無料で読む方法も紹介してるので、是非最後まで見て頂けると幸いです👍🏻

 技術書を無料で読む方法
KindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌

200万冊以上の書籍が何冊でも読み放題
月額980円が...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-308｜B - Default Price]]></title>
        <id>https://zenn.dev/hyperdb/articles/ffd44d2aefd55c</id>
        <link href="https://zenn.dev/hyperdb/articles/ffd44d2aefd55c"/>
        <updated>2023-09-20T08:15:02.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-308 B - Default Price



 提出結果
def getIntMap():
    return map(int, input().split())


def getStringList():
    return list(input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    n, m = getIntMap()
    c = getStringList()
    d = [''] + get...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-308｜A - New Scheme]]></title>
        <id>https://zenn.dev/hyperdb/articles/0ca903939b174c</id>
        <link href="https://zenn.dev/hyperdb/articles/0ca903939b174c"/>
        <updated>2023-09-20T08:15:02.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-308 A - New Scheme



 提出結果
def getIntList():
    return list(map(int, input().split()))


def main():
    a = getIntList()
    b = [1 for i in range(1, len(a)) if a[i] < a[i - 1]]
    c = [a[i] % 25 for i in range(len(a))]

    r = True
    if min(a) < 100 or max(a) > 675:...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonの標準ライブラリであるreを使ったHTML文書からのHTMLタグの消去]]></title>
        <id>https://zenn.dev/blueman/articles/fd92ff0ba496cb</id>
        <link href="https://zenn.dev/blueman/articles/fd92ff0ba496cb"/>
        <updated>2023-09-20T07:26:20.000Z</updated>
        <summary type="html"><![CDATA[この記事はQiitaの記事の転載です!!
Qiitaの記事はこちら!!
https://qiita.com/blueman/items/b8b9bc29c9e059b30517

!
OpenCV の不調( cv2.imshow() が使えない症状が発生)により投稿が遅れてしまいました。
記事を楽しみにしていただいている方は、お待たせしてしまい大変申し訳ございませんでした🙇‍♂️
現在は、 cv2.imshow() が問題なく使えています。
今後は、このようなこと(記事の投稿が遅れる)が無いよう最善を尽くします。
策としては、

事前にプログラムデータを作成
記事を投稿する直前にはあまり...]]></summary>
        <author>
            <name>ブルーマン</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[我想学漢字（汉字）子供の漢字学習]]></title>
        <id>https://zenn.dev/manyan3/articles/e913d0cd7fc64c</id>
        <link href="https://zenn.dev/manyan3/articles/e913d0cd7fc64c"/>
        <updated>2023-09-20T07:09:00.000Z</updated>
        <summary type="html"><![CDATA[勉強してくれない子供に字を読ませたい

 儿童不喜欢学习。太难了。怎么办 怎麼辦.

一応、日本語と中国語が話せるといいなぁって会社で働いている。
でも、みんな日本語かカスタム英語だけど～

!
どちらかというと作者の勉強という感じですね。


 Game 画面


那自己造成吧!
几天，终于完成了。太好了。
!
日本の漢字、簡体字、繁体字、拼音 注音ランダム出題のゲーム

必要に応じてExcelファイルで拡張可能
中文読めない方も2分間遊んでみてください（デフォルト）


日語、中文学習のお子様用。
https://github.com/mi-kaneyon/man-yard/bl...]]></summary>
        <author>
            <name>Manyan3</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Replacement Markerをカスタマイズ]]></title>
        <id>https://zenn.dev/gz/articles/92d610f63dbb1e</id>
        <link href="https://zenn.dev/gz/articles/92d610f63dbb1e"/>
        <updated>2023-09-20T02:31:01.000Z</updated>
        <summary type="html"><![CDATA[背景情報
Pythonによくあるopen関数でファイルを開く、
例えば、cp932で、あるCSVファイルを開くは以下のようにお書きします。
open(csv_file_path, encoding="cp932", errors='replace')
errors='replace'というのは、エラーが発生する場合、replace処理が実行されます。
例えば、utf8のファイル、をcp932で開く場合、cp932に存在しない文字があった場合、エラーになるので、置換処理が実行されます。
何に置換される？
デフォルトでは、"?"という文字に置換されます。

 何をやりたい
今回は置換用の...]]></summary>
        <author>
            <name>gz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VSCode: Python GUI アプリのライブリロードをするメモ]]></title>
        <id>https://zenn.dev/syoyo/articles/547c490fd94184</id>
        <link href="https://zenn.dev/syoyo/articles/547c490fd94184"/>
        <updated>2023-09-19T17:40:38.000Z</updated>
        <summary type="html"><![CDATA[背景
機械学習や CG 系で Python(tkinter, PyQt など)で GUI 作る必要がある.
React とか Streamlit みたいに GUI のリロードしたい...
最近だと VS Code で LiveCode for Python で行けました!
https://www.youtube.com/watch?v=28jxTjk2QJM

 設定

で GUI ライブラリのモジュール名を指定します.
tkinter などよく使われているものはすでに登録されていましたが, PySide6 などはありませんでした(2023/09 時点)

 リロードのタイミング
G...]]></summary>
        <author>
            <name>syoyo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[特定の用語が含まれているSendGridテンプレートを抽出する方法]]></title>
        <id>https://zenn.dev/okun/articles/6959aa8be04a7f</id>
        <link href="https://zenn.dev/okun/articles/6959aa8be04a7f"/>
        <updated>2023-09-19T12:30:37.000Z</updated>
        <summary type="html"><![CDATA[課題
会社の電話番号やサービス名の変更時、もしくは特定のキャンペーンフレーズが含まれているテンプレートを特定したい時、SendGridダッシュボードでテンプレートを1つ1つ開いてサーチすると時間が掛かる上に事故が起こりやすい。

 要約
Pythonプログラムを用意して上記手順を自動実行する。

 必要なもの

SendGrid API キーの値（SG.xxxxxxx.xxxxxxxxxxxxxx）
サーチしたい用語（例 06-1234-5678、早期登録キャンペーン、プレミアム会員など）


 手順

 以下のシェルスクリプトを実行してローカル環境に全テンプレート情報を取得する。
...]]></summary>
        <author>
            <name>t_tomo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[特定の用語が含まれているSendGridテンプレートを抽出する方法]]></title>
        <id>https://zenn.dev/t_tomo/articles/6959aa8be04a7f</id>
        <link href="https://zenn.dev/t_tomo/articles/6959aa8be04a7f"/>
        <updated>2023-09-19T12:30:37.000Z</updated>
        <summary type="html"><![CDATA[課題
会社の電話番号やサービス名の変更時、もしくは特定のキャンペーンフレーズが含まれているテンプレートを特定したい時、SendGridダッシュボードでテンプレートを1つ1つ開いてサーチすると時間が掛かる上に事故が起こりやすい。

 要約
Pythonプログラムを用意して上記手順を自動実行する。

 必要なもの

SendGrid API キーの値（SG.xxxxxxx.xxxxxxxxxxxxxx）
サーチしたい用語（例 06-1234-5678、早期登録キャンペーン、プレミアム会員など）


 手順

 以下のシェルスクリプトを実行してローカル環境に全テンプレート情報を取得する。
...]]></summary>
        <author>
            <name>t_tomo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[未使用のSendGridテンプレートを抽出する方法]]></title>
        <id>https://zenn.dev/t_tomo/articles/6d3893820db2b6</id>
        <link href="https://zenn.dev/t_tomo/articles/6d3893820db2b6"/>
        <updated>2023-09-19T12:24:42.000Z</updated>
        <summary type="html"><![CDATA[課題
SendGridテンプレートを整理する際、テンプレートIDを1つ1つクリップボードにコピーしてプロジェクトディレクトリ内で参照されているかサーチすると時間が掛かる上に事故が起こりやすい。

 要約
Pythonプログラムを用意して上記手順を自動実行する。

 必要なもの

SendGrid API キーの値（SG.xxxxxxx.xxxxxxxxxxxxxx）
プロジェクトディレクトリ


 手順

 以下のシェルスクリプトを実行してローカル環境に全テンプレート情報を取得する。
% curl -X GET "https://api.sendgrid.com/v3/templat...]]></summary>
        <author>
            <name>t_tomo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[RecBoleを使ってみよう5　推論]]></title>
        <id>https://zenn.dev/kentoo1/articles/592272d3a1a28d</id>
        <link href="https://zenn.dev/kentoo1/articles/592272d3a1a28d"/>
        <updated>2023-09-19T11:04:12.000Z</updated>
        <summary type="html"><![CDATA[前回は、モデルの学習方法について解説しました。
今回は、次のテストデータについて、学習済みモデルのレコメンド先を推論します。

 test.csv
user_id
5
1
2222
3333


 最終コード
まずコードの全体を載せます。
テストファイルは ./data/processed/anime/test.csv、モデルファイルは ./saved/BPR-Sep-15-2023_16-55-36.pth に入っているとします。
predict.py
 ./predict.py
from __future__ import annotations

import logging

i...]]></summary>
        <author>
            <name>ケントゥ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[頭部姿勢推定を簡易実装する]]></title>
        <id>https://zenn.dev/ykesamaru/articles/025b0eabf24e20</id>
        <link href="https://zenn.dev/ykesamaru/articles/025b0eabf24e20"/>
        <updated>2023-09-19T10:20:28.000Z</updated>
        <summary type="html"><![CDATA[はじめに
アルゴリズム
実装
出力結果


 はじめに
頭部姿勢推定は、顔の向きや角度を計算する技術です。
この記事では、複雑なパラメーターを使用せず、簡易的な方法を用いて頭部姿勢を推定する方法を紹介します。具体的には、顔のランドマークを利用して三角形をつくり、その重心から顔の向きを2D平面上で推定します。

通常、頭部姿勢推定にはカメラの

内部パラメーター
外部パラメーター

が必要となります。内部パラメーターは、カメラの焦点距離や画像の中心点などを表すパラメーターで、カメラごとに異なります。外部パラメーターは、カメラの位置や向きを表すパラメーターで、カメラの位置や向きが変わると...]]></summary>
        <author>
            <name>yKesamaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HaskellからPythonに翻訳して何かを味わう]]></title>
        <id>https://zenn.dev/4ergfbv547uezdf/articles/74647c626d8155</id>
        <link href="https://zenn.dev/4ergfbv547uezdf/articles/74647c626d8155"/>
        <updated>2023-09-19T09:59:04.000Z</updated>
        <summary type="html"><![CDATA[概要
このPDF資料において、プロトタイプを作る上でのHaskellの優位性が書かれています。
具体的なコードの全体が示されていないので実際に書いてみました。また上記資料にはPythonについて検証されていないので、Pythonバージョンのコードも書いてみて比較考察してみました。その際はラムダ式を使うようにしています。
私はもともとC/C++やPythonをメインに使っていました。見識を広げるためにHaskellを勉強していまして、それがどれほど手続き型言語(の関数型的書き方)に応用できるのか知りたく思っていました。

 課題
以下図は上記で示したPDF資料から取っています。
軍事系...]]></summary>
        <author>
            <name>bunnyhopper_isolated</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Datadog Fowarder のアップグレード]]></title>
        <id>https://zenn.dev/htnk128/articles/20c16b70f59b50</id>
        <link href="https://zenn.dev/htnk128/articles/20c16b70f59b50"/>
        <updated>2023-09-19T07:35:54.000Z</updated>
        <summary type="html"><![CDATA[これはなに？
Datadog Fowarder はログを Datadog に転送する Lambda 関数だが、使用しているバージョンが古いため AWS Lambda における Python 3.7 ランタイムのサポート終了ともなう対応が必要なためその対応方法をまとめたものである

 手順
基本的に公式の通り実施する

 事前確認

以下のコマンドにて datadog-forwarder が存在することを確認する    $ aws lambda list-functions --function-version ALL --region {リージョン} --output text --...]]></summary>
        <author>
            <name>htnk128</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-307｜B - racecar]]></title>
        <id>https://zenn.dev/hyperdb/articles/f5a319586ffcf0</id>
        <link href="https://zenn.dev/hyperdb/articles/f5a319586ffcf0"/>
        <updated>2023-09-19T04:42:09.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-307 B - racecar



 提出結果
def getInt():
    return int(input())


def getStringRow(N):
    return [input() for _ in range(N)]


def chk(x, y):
    z = x + y
    if z == z[::-1]:
        return True

    z = y + x
    if z == z[::-1]:
        return True
    return False


def main():...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-307｜A - Weekly Records]]></title>
        <id>https://zenn.dev/hyperdb/articles/8903e896f6e2a2</id>
        <link href="https://zenn.dev/hyperdb/articles/8903e896f6e2a2"/>
        <updated>2023-09-19T04:42:09.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-307 A - Weekly Records



 提出結果
def getInt():
    return int(input())


def getIntList():
    return list(map(int, input().split()))


def main():
    n = getInt()
    a = getIntList()

    sw = []
    for i in range(n):
        s = i * 7
        e = s + 7
        sw.append(sum(a[s:...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【AnimateDiff】animatediff-cli-prompt-travelを試してみた！]]></title>
        <id>https://zenn.dev/toki_mwc/articles/84ce8d3abdbc54</id>
        <link href="https://zenn.dev/toki_mwc/articles/84ce8d3abdbc54"/>
        <updated>2023-09-19T03:40:49.000Z</updated>
        <summary type="html"><![CDATA[1. はじめに
animatediff-cli-prompt-travelは、GitHub上で公開されているツールで、アニメーションの差分を生成するためのCLIツールです。この記事では、このツールのインストール方法から使い方、実際の使用結果までを紹介します。

 2. animatediff-cli-prompt-travelとは？
このツールは、neggles/animatediff-cliをベースにしており、特にフレームの中間でプロンプトを変更する実験的な機能が追加されています。

 3. インストール方法
Windows環境を前提として、Python 3.10とgitクライアン...]]></summary>
        <author>
            <name>toki_mwc</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonの__repr__メソッドを理解する]]></title>
        <id>https://zenn.dev/nakurei/articles/understand-python-repr-method</id>
        <link href="https://zenn.dev/nakurei/articles/understand-python-repr-method"/>
        <updated>2023-09-18T22:56:43.000Z</updated>
        <summary type="html"><![CDATA[これはなに
Pythonのオブジェクトが持つ特殊メソッド__repr__について調べたメモ。

 特殊メソッド__repr__とは
__repr__は、objectクラスで定義されている、オブジェクトの「公式な（official）」文字列表現を返すための特殊メソッドである。
__repr__はobjectクラスで定義されており、すべてのクラスは暗黙的にobjectクラスを継承する。そのため、すべてのクラスに__repr__メソッドは定義（継承）されている。

 __repr__の目的
このメソッドの目的は、そのオブジェクトの「公式な（official）」文字列表現を返し、オブジェクト...]]></summary>
        <author>
            <name>NakuRei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python基礎講座・連載1回目 】Google Colaboratory とは？ Google Colab の環境構築編]]></title>
        <id>https://zenn.dev/aiq_dev/articles/78cde201571ae7</id>
        <link href="https://zenn.dev/aiq_dev/articles/78cde201571ae7"/>
        <updated>2023-09-18T13:32:33.000Z</updated>
        <summary type="html"><![CDATA[こんにちは、AIQ株式会社のフロントエンドエンジニアのまさぴょんです！
今回は、社内向けの『Python基礎講座』の連載1回目になります。
今回のテーマは、「Google Colaboratory とは？ Google Colab の環境構築編」です。

 Google Colaboratory (通称:Colab) とは？
Google Colaboratory (通称:Colab)は、ブラウザから Python を実行できるサービス(実行環境でありEditor)です。
Google Colab では、Google アカウントがあれば、簡単にPython の実行環境を構築できます。
ま...]]></summary>
        <author>
            <name>まさぴょん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ネットワークカメラの映像をRTSP経由でMacの画面に表示する]]></title>
        <id>https://zenn.dev/tsujino/articles/d0ca3c9b847b66</id>
        <link href="https://zenn.dev/tsujino/articles/d0ca3c9b847b66"/>
        <updated>2023-09-18T13:27:34.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事ではTapo C310という種類のネットワークカメラの映像をRTSP経由でMacPCの画面に表示する手順を解説します。
Tapoシリーズのネットワークカメラは、映像をスマホアプリで閲覧するのが公式の方法のようですが、仕様外の機能でRTSPのプロトコルを開放しているため自力で設定をすればパソコンでも表示できるようになっています。私の環境で使っているルーターの関係でルーター側の設定が少しトリッキーでしたが、手順自体はとても簡単です。
今回使用した機器や環境は以下の通りです。

Network camera: Tapo C310
Router: docomo home5g...]]></summary>
        <author>
            <name>Tsujino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【2023年9月】0円で読めるJavaScript技術書5選]]></title>
        <id>https://zenn.dev/raio/articles/a6a5f6d698341e</id>
        <link href="https://zenn.dev/raio/articles/a6a5f6d698341e"/>
        <updated>2023-09-18T12:57:29.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです！
平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻
↓筆者について↓
https://qiita.com/Raio14f/items/ef0fb67685b36298bcb0
今回の記事では、0円で読めるJavaScriptの技術書5選を紹介します！
無料で読む方法も紹介してるので、是非最後まで見て頂けると幸いです👍🏻

 技術書を無料で読む方法
KindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌

200万冊以上の書籍が何冊でも読み放題
...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ファイル編集（＋画像生成＋音声生成）Slackアプリを作ってみた話]]></title>
        <id>https://zenn.dev/straydog/articles/5753c72fa9bd03</id>
        <link href="https://zenn.dev/straydog/articles/5753c72fa9bd03"/>
        <updated>2023-09-18T12:14:32.000Z</updated>
        <summary type="html"><![CDATA[はじめに
ファイル編集 Slack アプリを作成を作成したので、そのアプリについて記事にしてみました。気分で機能追加しているので、もしかすると記事更新するかもしれないです。
作成した経緯は、最近 Slack アプリをいじる事が増えたので、自分の今まで積んできたスキルスタック、触ってきたサービスで作ってみるかぁというモチベーション。そもそもラッパーライブラリが用意されている RDB ではなくて、 NoSQL DB を使うのはバグってる気がする。仕事じゃないからできることですね。
作ってみた感じとしては、やはりフロントエンドを実装しない分、工数はそれほどかからないし、OpenAI（Fun...]]></summary>
        <author>
            <name>stray dog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【個人開発】Noteでおすすめされているビジネス書のランキングサイトを作ってみた]]></title>
        <id>https://zenn.dev/daysooon/articles/9091bd87054be1</id>
        <link href="https://zenn.dev/daysooon/articles/9091bd87054be1"/>
        <updated>2023-09-18T08:55:12.000Z</updated>
        <summary type="html"><![CDATA[アプリについて
https://wavook.net/
サービスの内容としては、Note上で紹介されているビジネス書をスキの数が多い順にランキング化したものです。各書籍には紹介しているNote記事へのリンクと、Amazonへのリンクを添付しています。現在では全体ランキングのみですが、今後は金融・ITなどのカテゴリ分けや、月間ランキングなどの機能を追加予定です。

 アプリ画面


 使用技術

 フロントエンド

Next.js
TypeScript
Tailwind CSS
Prisma

tremor ダッシュボードを簡単に作成できるUIライブラリです


 インフラ


Net...]]></summary>
        <author>
            <name>D-suke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[スマホの画面注視認識機能を簡易実装する]]></title>
        <id>https://zenn.dev/ykesamaru/articles/6e2098dbef148e</id>
        <link href="https://zenn.dev/ykesamaru/articles/6e2098dbef148e"/>
        <updated>2023-09-18T08:17:38.000Z</updated>
        <summary type="html"><![CDATA[はじめに
寝顔でスマホの顔認証ロックを解除　50万円の不正送金被害も　どう防ぐ?専門家に聞いたというニュースがあり驚きました。悪い人はいろんなこと考えるんですね。

あなたの個人情報や資産に関する情報などが詰まったスマートフォン。普段はロックをかけているが、もし寝ている間にロックが解除されてしまったら?
そんな恐ろしい事件が実際に起きた。警視庁は、飲食店で知り合った男性が寝た後に、男性の寝顔でスマホやネットバンキングの顔認証ロックを解除し、不正に50万円を送金した疑いで、チュニジア人の男を逮捕したのだ。9/14(木) 15:54配信

このニュースで出てきた「画面注視認識機能」。要は...]]></summary>
        <author>
            <name>yKesamaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Pandas入門】Pandasとは？Pandasの基本の使い方・Pandasチートシート]]></title>
        <id>https://zenn.dev/aiq_dev/articles/dbc01683625524</id>
        <link href="https://zenn.dev/aiq_dev/articles/dbc01683625524"/>
        <updated>2023-09-18T07:38:13.000Z</updated>
        <summary type="html"><![CDATA[こんにちは、AIQ株式会社のフロントエンドエンジニアのまさぴょんです！
今回は、Pandas入門講座です。「Pandasとは何か？」や、Pandasの基本の使い方をまとめて、チートシートとして使えるようにしています。ぜひご活用ください。
以前書いたスクラップ記事はこちら。
(これをベースに記事作成しました)
https://zenn.dev/manase/scraps/2e430d208596dd

 Pandasとは？
Pandasとは、

Pandas(パンダス)とは、データ解析を容易にする機能を提供するPythonのデータ解析ライブラリです。
Pandasの特徴には、データフレーム...]]></summary>
        <author>
            <name>まさぴょん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[passlibを使うLambdaをWindowsでデプロイしてpasslib.exc.MissingBackendErrorとなったら]]></title>
        <id>https://zenn.dev/go_furu93/articles/lambda_bcrypt_no_backends_available</id>
        <link href="https://zenn.dev/go_furu93/articles/lambda_bcrypt_no_backends_available"/>
        <updated>2023-09-18T06:18:05.000Z</updated>
        <summary type="html"><![CDATA[先に結論
Windows(WSL)でデプロイ時、Lambdaのアーキテクチャがx86_64だと、bcryptが使用できないというエラーが発生しました。Lambdaのアーキテクチャにarm64を使うと、エラーが発生しなくなりました。

 現象
WindowsのWSLを使って開発しています。
passlib経由でbcryptを動かすFunctionを作成して、ローカルでは正しく動作しました。
ただし、Serverless Frameworkでデプロイして、Functionを動かすとpasslib.exc.MissingBackendError: bcrypt: no backends a...]]></summary>
        <author>
            <name>ふるはうす</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでガウス過程回帰をやってみよう]]></title>
        <id>https://zenn.dev/tirimen/articles/0c70e82df4add4</id>
        <link href="https://zenn.dev/tirimen/articles/0c70e82df4add4"/>
        <updated>2023-09-18T05:14:57.000Z</updated>
        <summary type="html"><![CDATA[今回もベイズ最適化の記事を書くための前段階記事。回帰というと、線形回帰を思い浮かべるかもしれないが、ベイズ最適化ではガウス過程回帰を用いている。そこで自分用にまとめてみた。

 ガウス過程回帰とは
ガウス過程という言葉についてまず考えてみる。こちらのサイトが詳しく書いてあるので、参考にしてほしい。
https://www.jstage.jst.go.jp/article/isciesci/62/10/62_390/_pdf
また、こちらの書籍も参考にした。（amazonに飛ぶのでご注意ください）
https://www.amazon.co.jp/ウェブ最適化ではじめる機械学習-―-Bテス...]]></summary>
        <author>
            <name>tirimen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MYDNS.JPのサブドメイン用SSL証明書取得に、Docker版PHPでLet's EncryptのDNS-01を用いた際にエラー]]></title>
        <id>https://zenn.dev/nondescript/articles/c43d7fb850555f</id>
        <link href="https://zenn.dev/nondescript/articles/c43d7fb850555f"/>
        <updated>2023-09-18T04:58:36.000Z</updated>
        <summary type="html"><![CDATA[TL;DR

エラー内容
/bin/sh: 1: txtregist.php: not found
対策
#!/usr/local/phpに変更 or hookオプションを"php ファイル名"にする
その他
PHPにこだわる必要はない


 背景

MYDNS.JPのサブドメインに対するSSL証明書をLet's Encryptから自動で取得したかった
CertbotのHTTP-01のために80や443ポートは使いたくなかった
ホスト環境は汚したくなかったのでDockerで実行したかった
MYDNS.JP公式でDNS-01用のphpスクリプトが公開されているので、それを使おうとした
...]]></summary>
        <author>
            <name>素人の戯言</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Alexaで追加した買い物リストをもとにAmazon系以外のECサイトでも音声ショッピングしてみる]]></title>
        <id>https://zenn.dev/wmoto_ai/articles/c7ad0b897aca3d</id>
        <link href="https://zenn.dev/wmoto_ai/articles/c7ad0b897aca3d"/>
        <updated>2023-09-18T03:04:54.000Z</updated>
        <summary type="html"><![CDATA[はじめに
どうも、趣味で機械学習関連を勉強中の生ビールと申します。備忘録がてら初めてのZenn記事投稿します。
モチベーション湧かない家事はやりたくないめんどくさがり屋です。家事する暇あったらその時間ビールを飲んで過ごしていたいです。

 動機
結婚したことをきっかけに、互いの時間を増やすべく家事の時短化を進めていました。初めの一歩として、音声操作のAlexaやSwitchbotを導入。これで少しは楽になったのですが、子供が生まれたのを機にもっと家事の時間を減らすべくトライしてみました。
例えば、「たこ焼きソースないな」て思った”その場で”買い物リストに追加して、それをネット内で自動...]]></summary>
        <author>
            <name>生ビール</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[__init__(self) -> None:って何？]]></title>
        <id>https://zenn.dev/yuto_mo/articles/5c4d165330c5ab</id>
        <link href="https://zenn.dev/yuto_mo/articles/5c4d165330c5ab"/>
        <updated>2023-09-18T02:13:36.000Z</updated>
        <summary type="html"><![CDATA[今回は__init__(self) -> None:について解説していきます。

 __ init__(self) -> None:って何？
__ init__(self) -> None:は

returnで何も返さない

ことを示しています。

 説明
-> None は型ヒントと呼ばれるもので、読み手や開発者に対して関数のインターフェース（入力と出力の型）を示すことができます。
このコードがあることで、この関数は何も返さないことが理解しやすくなります。
__init__は初期化関数で基本的にreturnを行わないため、エディタによっては自動で入力されることが...]]></summary>
        <author>
            <name>pomu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[random.sample()について]]></title>
        <id>https://zenn.dev/yuto_mo/articles/3afdcfba6c8b8c</id>
        <link href="https://zenn.dev/yuto_mo/articles/3afdcfba6c8b8c"/>
        <updated>2023-09-18T00:39:33.000Z</updated>
        <summary type="html"><![CDATA[今回はrandom.sample()について解説します。

 random.sample()とは？
random.sample()は

ランダムな要素を指定した数だけ取り出して、新しいリストとして返す

操作です。
指定は random.sample(元の配列, 取り出す個数) の形式です。
具体的な使い方をコードで見ていきましょう。

 使い方
例コード
import random

# サンプルとなるリスト
data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# data_listからランダムに3つの要素を取り出す
sampled_list = ...]]></summary>
        <author>
            <name>pomu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[USBカメラとGoogle Sitesを使ったリモートモニタリングの実装]]></title>
        <id>https://zenn.dev/kamorei/articles/cloudcam-googlesite</id>
        <link href="https://zenn.dev/kamorei/articles/cloudcam-googlesite"/>
        <updated>2023-09-17T21:20:34.000Z</updated>
        <summary type="html"><![CDATA[概略
USBカメラで定期的に撮影した画像をGoogle Driveにアップロードし、Google Sitesで表示することで、リモートモニタリングを実現します。
Google Sitesであればアクセス制限も利用でき、スマホからも確認できるため、セキュリティカメラとしても利用できます。

 システム構成
システムの流れは以下の通りです。


USBカメラを利用し画像を撮影し、保存する
撮影した画像をPyDrive2を利用しGoogle Driveにアップロードする
Google Sites内にHTMLを埋め込み、Google Driveにアップロードした画像を表示する
Google ...]]></summary>
        <author>
            <name>Kamorei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[aws lambda(python)に最適なlogging classの作成]]></title>
        <id>https://zenn.dev/matsua_ant/articles/5665cea0cb04ee</id>
        <link href="https://zenn.dev/matsua_ant/articles/5665cea0cb04ee"/>
        <updated>2023-09-17T12:37:03.000Z</updated>
        <summary type="html"><![CDATA[概要・背景
aws lambda(python)で関数をいくつか作成しています。
毎度、関数の作成時にloggingの処理を入れるのが面倒でclass化したい思いが膨らんできました。
でもaws lambdaはcloud watch logsへのログ出力があるためfile出力はできません。
webでの参考になるサイトなどから学習し個人的にいい感じの範囲で共通化＆class化しました。

 作成したクラス

Logging_Class.py
import logging

#コメントアウトのフォーマットは全項目出力版フォーマット
#LOG_FORMAT = '%(asctime)s -...]]></summary>
        <author>
            <name>ちゃーて松島</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[エンジニアなのにAudible入ってないの？]]></title>
        <id>https://zenn.dev/raio/articles/685a2cf40df840</id>
        <link href="https://zenn.dev/raio/articles/685a2cf40df840"/>
        <updated>2023-09-17T11:21:38.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです🧑🏻‍💻
平日は公立高校に通いながら、休日は放課後はIT企業のエンジニアとして働いています。
今回の記事では、エンジニアがAudible入るべき理由を詳しく解説していきます。
僕も実際に使ってみて、飛躍的に技術に関する知識が増えたのでおすすめです👍🏻
ご興味ある方は、是非最後までご覧ください！

 Audibleとは？
Audible（オーディブル）は、書籍を朗読した音声コンテンツを配信しているサービスで、一般的には「聴く読書 」などとも呼ばれています。
通常の読書とは異なり、書籍の内容を音声によって聞くことができるため、...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next.js の静的サイトのビルド時に Python で外部 API から最新情報を取得する]]></title>
        <id>https://zenn.dev/yuta_extend/articles/c928d1d32d3f36</id>
        <link href="https://zenn.dev/yuta_extend/articles/c928d1d32d3f36"/>
        <updated>2023-09-17T03:39:39.000Z</updated>
        <summary type="html"><![CDATA[Next.js の静的サイトのビルド時に外部 API からデータを取り込んで加工してから、それをサイトのデータソースとして使うサンプルです。ホスティングサービスとして Cloudflare Pages を使っています。
1 日 1 回大規模データを取り込んで加工してその日のデータを静的サイトで高速表示したい、みたいなパターンを想定しています。

 1. Next.js のプロジェクトを作成する
まずは以下のコマンドで Next.js のプロジェクトを作成します。TypeScript オプションをつけておきます。
npx create-next-app --ts mysite
cd mys...]]></summary>
        <author>
            <name>YuTa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google Colaboratory 提出ファイルの管理]]></title>
        <id>https://zenn.dev/mkymdk/articles/5c369e6e74c606</id>
        <link href="https://zenn.dev/mkymdk/articles/5c369e6e74c606"/>
        <updated>2023-09-17T03:00:28.000Z</updated>
        <summary type="html"><![CDATA[Google Colaboratoryでの、提出ファイルの管理についてメモ書きとして残しておきます。
コンペ主催者が提供しているサンプルコードそのままだと、
'submission.csv'等の名前でcsvが生成されます。
しかし、csvが何を指しているのか忘れてしまったり、
いちいち書くのが少し手間というデメリットがあったりするので、
下記のようなコードで処理しています。
filenameにメモとして、残したい内容を記載してください。
メモには、model名や追加した特徴量等を書いています。
メモ_時間.csv(例：lgb_0917_1234.csv)という名前で、PCにダウンロードし...]]></summary>
        <author>
            <name>Mukaiyama</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[newaxisを解説]]></title>
        <id>https://zenn.dev/yuto_mo/articles/b5805f912bf549</id>
        <link href="https://zenn.dev/yuto_mo/articles/b5805f912bf549"/>
        <updated>2023-09-17T01:23:44.000Z</updated>
        <summary type="html"><![CDATA[今回はnumpyのnewaxisについて解説します。

 newaxisとは？
newaxisは

配列に次元を追加するためのインデックス

です。
具体的な使い方をコードで見ていきましょう。

 使い方
少し難しいですが、まずは「次元を追加する」という意味を掴みましょう。
import numpy as np

# 1次元配列
arr1 = np.array([1, 2, 3])
print(arr1)
print("Shape:", arr1.shape)
Shape: (3,)
# [1 2 3]
# Shape: (3,)

# 行ベクトルに変換（次元を追加）
row_vecto...]]></summary>
        <author>
            <name>pomu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[numpyのスライスについて解説]]></title>
        <id>https://zenn.dev/yuto_mo/articles/cb7ce477d70153</id>
        <link href="https://zenn.dev/yuto_mo/articles/cb7ce477d70153"/>
        <updated>2023-09-16T12:07:55.000Z</updated>
        <summary type="html"><![CDATA[今回はnumpyのスライスについて解説します。

 スライスとは？
スライスは

配列データなどから条件に一致する部分を抜き出す


操作です。
PythonのリストやNumPyの配列に対して、[start:stop:step] といった形でスライスを指定することができます。
コードで使い方を見ていきましょう。

 コード
numpyのスライスは多次元データにも適用できます。まずは1次元から見ていきます。
・1次元配列のスライス
import numpy as np

# 1次元配列
arr1 = np.array([0, 1, 2, 3, 4, 5])

# インデックス1から3までの...]]></summary>
        <author>
            <name>pomu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[エンジニアなのにKindleUnlimited入ってないの？]]></title>
        <id>https://zenn.dev/raio/articles/f22d767531fbc0</id>
        <link href="https://zenn.dev/raio/articles/f22d767531fbc0"/>
        <updated>2023-09-16T11:20:22.000Z</updated>
        <summary type="html"><![CDATA[皆さん、こんにちは。高校生エンジニアのRaioです🙌
公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています。
https://zenn.dev/raio/articles/2478a66537c685
今回の記事では、日々進化する技術を追うエンジニアがKidnleUnlimitedに入るメリットを３つ解説しようと思います。
ご興味あれば、是非最後までご覧ください👀
↓KindleUnlimitedに入会したい方は画像をクリック↓
https://amzn.to/3OJt26v

 1ヶ月無料で技術書が読み放題
KindleUnlimitedを使えば、1ヶ月間無料で沢...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[メタ強化学習を搭載したChatbotの実装方法]]></title>
        <id>https://zenn.dev/sumeragi_0258/articles/e20bed20533612</id>
        <link href="https://zenn.dev/sumeragi_0258/articles/e20bed20533612"/>
        <updated>2023-09-16T09:28:29.000Z</updated>
        <summary type="html"><![CDATA[GPT4を利用して、プロンプトエンジニアリングを中心としたなんちゃって実装をしました。
なお、記事の執筆は一部ChatGPTに手伝ってもらっています。

 メタ強化学習とは？
メタ強化学習（Meta-Reinforcement Learning、Meta-RL）は、AIモデルが新しいタスクや環境に対して迅速に適応できるように学習する技術です。伝統的な強化学習アプローチでは、モデルは特定のタスクに特化して学習しますが、新しいタスクに遭遇したとき、ゼロから学習しなければなりません。これに対して、メタ強化学習ではモデルは複数のタスクにわたって「学習する方法を学習」します。
このアプローチの利点...]]></summary>
        <author>
            <name>すめらぎ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Open InterpreterをローカルモデルでWSL上で使ってみる]]></title>
        <id>https://zenn.dev/bathtimefish/articles/4988990670ee7d</id>
        <link href="https://zenn.dev/bathtimefish/articles/4988990670ee7d"/>
        <updated>2023-09-16T08:45:38.000Z</updated>
        <summary type="html"><![CDATA[はじめに
やばいと評判のOpen Interpreter。GPT4で使うのが鉄板だと思いますがローカルPCにモデルをロードして使うこともできます。
ここではWindows11のWSL上にOpen InterpreterをインストールしてローカルのCode Llamaを使う方法を紹介します。
試した環境は以下のとおりです

Core i9-13900
64GB RAM
GeForce RTX 4090
Windows 11 Pro
WSL (Ubuntu 22.04 LTS)


 セットアップする
こちらのようにWSL上でCUDAが利用できるようになっているのが前提です。
Open ...]]></summary>
        <author>
            <name>bathtimefish</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】NumPyのmemmap()を使って、OpenCVの画像を他プロセスに受け渡すメモ]]></title>
        <id>https://zenn.dev/kazuhito/articles/800e1176270c43</id>
        <link href="https://zenn.dev/kazuhito/articles/800e1176270c43"/>
        <updated>2023-09-16T08:23:23.000Z</updated>
        <summary type="html"><![CDATA[NumPyのmemmap()を使って、OpenCVの画像を他プロセスに受け渡すメモです🦔
以下のようなイメージ↓

書き込み側のスクリプトからメモリマップドファイルに書き込んで、別スクリプトから読み込む↓

画像の受け渡しデータはメモリマップドファイルに書き込まれているので、書き込み側のスクリプトを終了しても、最後に書き込まれた画像が参照できる↓

再度、書き込み側のスクリプトを実行すればメモリマップドファイルに書き込みが再開するので、読み取り側の表示も更新が再開する↓

それぞれのスクリプトは以下です。
メモリマップドファイル書き込み側↓

cv-np-memmap-writer.py...]]></summary>
        <author>
            <name>kazuhito</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[selfについて解説]]></title>
        <id>https://zenn.dev/yuto_mo/articles/9fcf1089c0aade</id>
        <link href="https://zenn.dev/yuto_mo/articles/9fcf1089c0aade"/>
        <updated>2023-09-16T08:11:22.000Z</updated>
        <summary type="html"><![CDATA[今回はpythonのクラスで使用するselfについて解説します。

 selfとは
selfとは

インスタンス自体を指す特殊な変数

です。

 インスタンスとは？
インスタンスはクラスから生成されたオブジェクトのことを指します
これはコードで見た方が理解しやすいと思います。
class Car:
    # クラス内の関数をメソッドと呼ぶ
    # コンストラクタ（初期化メソッド）
    def __init__(self, color, size):
        self.color = color  # インスタンス変数colorを設定
        self.size...]]></summary>
        <author>
            <name>pomu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[東工大機械系院試をpythonで解いてみた[材料力学編]]]></title>
        <id>https://zenn.dev/porphyrio/articles/b687a5c757fe75</id>
        <link href="https://zenn.dev/porphyrio/articles/b687a5c757fe75"/>
        <updated>2023-09-16T08:02:47.000Z</updated>
        <summary type="html"><![CDATA[はじめに
東工大の機械系の院試の問題をpythonを使って解いてみます。今回は令和1年度 材料力学 を解いていきます。過去問は以下のページにあります。
https://www.titech.ac.jp/admissions/prospective-students/admissions/past-exam-papers

 問題



 問1
pythonを使う必要がないので普通に解きます。
(1)
①

\alpha L \Delta T

②

\alpha L \Delta T
(2)

\lambda=\varepsilon L=\frac{\sigma}{E}L=\frac...]]></summary>
        <author>
            <name>porphyrio</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ブラウザを作ろう]]></title>
        <id>https://zenn.dev/ninnin324/books/64557f0881ce31</id>
        <link href="https://zenn.dev/ninnin324/books/64557f0881ce31"/>
        <updated>2023-09-16T04:30:08.000Z</updated>
        <summary type="html"><![CDATA[短いコードで簡単なブラウザを作ります]]></summary>
        <author>
            <name>にんにん324</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[自社開発したい人必見！自社開発企業に転職できるサイトを紹介]]></title>
        <id>https://zenn.dev/raio/articles/5aa3d6f268cbbd</id>
        <link href="https://zenn.dev/raio/articles/5aa3d6f268cbbd"/>
        <updated>2023-09-15T11:25:33.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです🧑🏻‍💻
平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています！
今回の記事では、自社開発したい人に向けた自社開発企業に転職出来るサイトを紹介します🗣️

自社開発したい
IT転職したい
今より収入を上げたい

こんな方には、おすすめの記事です🥳
ご興味のある方は、是非最後までご覧ください！

 クラウドリンクとは？
みなさん、クラウドリンクはご存知ですか？
クラウドリンクは株式会社Cloud Linkが運営している転職エージェントです。
特に自社開発系の求人に特化しています。
自社開発といえば...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ryeでととのう]]></title>
        <id>https://zenn.dev/killy/articles/fc44464c6eb62e</id>
        <link href="https://zenn.dev/killy/articles/fc44464c6eb62e"/>
        <updated>2023-09-15T08:51:57.000Z</updated>
        <summary type="html"><![CDATA[Pythonととのってない
Pythonってライブラリとpython自体の管理が非常に大変です
これまでに数多のパッケージングツールや仮想環境ツールが作られてきました
その度に我々は新しいものに飛びついては, 裏切られ...
とにかくPythonのエコシステムは無秩序に発展してきたといっても過言ではない

 Rye
上記のPythonのエコシステムを統一したいという気持ちで生まれた、らしい
Flaskなどで有名な@mitsuhiko氏が作者である。
https://github.com/mitsuhiko/rye?ref=ground-reality.ghost.io
Rust製なの...]]></summary>
        <author>
            <name>代理構成体</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[RecBoleを使ってみよう4　モデルの学習]]></title>
        <id>https://zenn.dev/kentoo1/articles/7bc48cb54c55a2</id>
        <link href="https://zenn.dev/kentoo1/articles/7bc48cb54c55a2"/>
        <updated>2023-09-15T08:34:45.000Z</updated>
        <summary type="html"><![CDATA[概要
今回はモデルの学習と精度の検証を行います。
データセットは第2回で用意したAnimeにします。複数のモデルの学習を行い、精度を比較することを目標とします。

 run_recbole関数
初回にも使ったrun_recboleは、次の全てを実行してくれるオールインワンな関数です。

データの読み込み
データの分割（デフォルトでは8:1:1に分割します）

学習データ
検証データ
テストデータ


学習データと検証データを用いたモデルの学習
（学習データで学習し、検証データの精度を見て、改善が見られなくなってきたら学習を早期停止します）
テストデータの精度を算出

今回はただ動かす...]]></summary>
        <author>
            <name>ケントゥ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-306｜B - Base 2]]></title>
        <id>https://zenn.dev/hyperdb/articles/b75844912efd6e</id>
        <link href="https://zenn.dev/hyperdb/articles/b75844912efd6e"/>
        <updated>2023-09-15T04:09:36.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-306 B - Base 2



 提出結果
def getIntList():
    return list(map(int, input().split()))


def main():
    a = getIntList()

    r = 0
    for i in range(len(a)):
        if a[i] == 0:
            continue
        r += (2 ** i)

    print(r)


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-306｜A - Echo]]></title>
        <id>https://zenn.dev/hyperdb/articles/6bf2e05726cd46</id>
        <link href="https://zenn.dev/hyperdb/articles/6bf2e05726cd46"/>
        <updated>2023-09-15T04:09:36.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-306 A - Echo



 提出結果
def getInt():
    return int(input())


def getString():
    return input()


def main():
    n = getInt()
    s = list(getString())
    t = ''

    for c in s:
        t += (c * 2)

    print(t)


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Pages で Sphinxしたい]]></title>
        <id>https://zenn.dev/shotakaha/articles/1df7d807137f61</id>
        <link href="https://zenn.dev/shotakaha/articles/1df7d807137f61"/>
        <updated>2023-09-14T14:50:32.000Z</updated>
        <summary type="html"><![CDATA[GitHub Actions
Poetry + SphinxでGitHub PagesできるGitHub Actionsです。

 .github/workflows/static.yml
# Simple workflow for deploying static content to GitHub Pages
name: Deploy Sphinx Document to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you...]]></summary>
        <author>
            <name>shotakaha</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Raspberry Pi 4でのlibrosaのインストールエラー回避方法]]></title>
        <id>https://zenn.dev/bathtimefish/articles/401519803660bb</id>
        <link href="https://zenn.dev/bathtimefish/articles/401519803660bb"/>
        <updated>2023-09-14T13:37:02.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Pythonの音声処理ライブラリlibrosaがRaspberry Pi 4でインストールエラーが発生したので回避方法を模索。いろいろやってたらなんとかなったのでメモっときます。

 環境

Raspberry Pi 4B 8GB
uname -a
Linux raspberrypi 6.1.21-v8+ #1642 SMP PREEMPT Mon Apr  3 17:24:16 BST 2023 aarch64 GNU/Linux
Python 3.9.2
pip 20.3.4


 回避方法
sudo apt install -y llvm libatlas3-base...]]></summary>
        <author>
            <name>bathtimefish</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Qiskit で遊んでみる (20) — Qiskit Optimization での QAOA]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-qiskit20</id>
        <link href="https://zenn.dev/derwind/articles/dwd-qiskit20"/>
        <updated>2023-09-14T12:01:49.000Z</updated>
        <summary type="html"><![CDATA[目的
この記事は大分昔に書いた記事 がベースだったりする[1]。
この時はちょっと Qiskit の古い API を使ったのだが、今回はそれも含めて最新の API にまでアップデートしたい。なお、実用性は狙いではない。
量子コンピューティングの基礎を手を使って学ぶ上での良書に「IBM Quantumで学ぶ量子コンピュータ」があるが、同書 pp.203-210 に掲載された QAOA のコードは新しい Qiskit では動かない。Qiskit Aqua という Deprecated になってしまったパッケージを使っているからである。このコードをQiskit 0.44.0 以降で動くとこ...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【2023年9月】0円で読めるPythonの技術書5選]]></title>
        <id>https://zenn.dev/raio/articles/bcdacfbf43bcc8</id>
        <link href="https://zenn.dev/raio/articles/bcdacfbf43bcc8"/>
        <updated>2023-09-14T11:52:30.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん、こんにちは。高校生エンジニアのRaioです！
平日は公立高校に通いながら、放課後や休日はIT企業のエンジニアとして働いています🧑🏻‍💻
↓筆者について↓
https://qiita.com/Raio14f/items/ef0fb67685b36298bcb0
今回の記事では、0円で読めるPythonの技術書5選を紹介します！
無料で読む方法も紹介してるので、是非最後まで見て頂けると幸いです👍🏻

 技術書を無料で読む方法
KindleUnlimitedを使うことで、沢山の技術書を無料で何冊でも読むことが可能です🙌

200万冊以上の書籍が何冊でも読み放題
月額98...]]></summary>
        <author>
            <name>Raio｜高校生エンジニア</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[matplotlibの fig, axで凡例がはみ出る時の対処法]]></title>
        <id>https://zenn.dev/apo_zenn/articles/1c2a9c0a92a6c6</id>
        <link href="https://zenn.dev/apo_zenn/articles/1c2a9c0a92a6c6"/>
        <updated>2023-09-14T08:58:58.000Z</updated>
        <summary type="html"><![CDATA[このように凡例がはみ出してしまう場合

以下を最後に追加する。
fig.tight_layout() 

 修正後

無事、凡例がFigure内に収められる

 plot.を使っている人 (pyplot使用者の場合)
plt.tihgt_layout()
でいけます。

 例
import numpy as np
import matplotlib.pyplot as plt

x = np.arange(0,10,0.1)
y = np.sin(x)

# 表示
fig, ax = plt.subplots(1,1,figsize=(6,4))
ax.set_title("SIN", ...]]></summary>
        <author>
            <name>apo_zenn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pyenvとvenvを利用したPython環境の構築（Windows、macOS対応）]]></title>
        <id>https://zenn.dev/ryotajin/articles/19-build-python-by-pyenv-venv</id>
        <link href="https://zenn.dev/ryotajin/articles/19-build-python-by-pyenv-venv"/>
        <updated>2023-09-14T07:23:56.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Pythonを始める上で最初につまずくのは実行環境の構築だと思います。私もずいぶん苦労した思い出があります。
さらに頭を悩ませるのがバージョン管理です。ライブラリのバージョンはもちろん、Python自体のバージョンも管理の必要が出てきます。自分でライブラリを作るようになるとこの必要性を強く感じます。
そこで今回はpyenvとvenvを併用して、Pythonとライブラリのバージョンを管理しつつ環境を構築する方法について解説します。
本記事の想定はPythonはある程度使ったことがあって、バージョン管理をきちんとやりたくなってきた人です。また、GitHubの操作がたびたび出てく...]]></summary>
        <author>
            <name>riu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-305｜A - Water Station]]></title>
        <id>https://zenn.dev/hyperdb/articles/f9734172210f8e</id>
        <link href="https://zenn.dev/hyperdb/articles/f9734172210f8e"/>
        <updated>2023-09-14T04:40:39.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-305 A - Water Station



 提出結果
def getInt():
    return int(input())


def main():
    n = getInt()

    p = n // 5

    print(p * 5 if n % 5 < 3 else (p + 1) * 5)


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-305｜B - ABCDEFG]]></title>
        <id>https://zenn.dev/hyperdb/articles/d1e5c40c4ea5ac</id>
        <link href="https://zenn.dev/hyperdb/articles/d1e5c40c4ea5ac"/>
        <updated>2023-09-14T04:40:38.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-305 B - ABCDEFG



 提出結果
def getStringMap():
    return input().split()


def main():
    p, q = getStringMap()
    d = [3, 1, 4, 1, 5, 9]
    s = ord(p) - ord('A')
    e = ord(q) - ord('A')

    print(abs(sum(d[:s]) - sum(d[:e])))


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CAEのためのpython5(6面視画像をエクセルに貼り付け)]]></title>
        <id>https://zenn.dev/cae_taka/articles/421352fa73d4c7</id>
        <link href="https://zenn.dev/cae_taka/articles/421352fa73d4c7"/>
        <updated>2023-09-14T02:51:54.000Z</updated>
        <summary type="html"><![CDATA[動機
CAEの結果（形状やコンター図など）から資料を作成する機会6面視の画像を作成することが、
多くあると思います。（僕は多かったです。）
この作業、やってることは単純ですが案外やってみるとめんどくさいです。
こういう作業は、自動化ですね。
ちょっと長くなりそうなので2回に分けて書いていきます。

 今回やること
1回目では、6面視の画像を作成しました。今回は作成した画像を新規作成したエクセルに貼り付けていきます。

 プログラムの説明

まずは、エクセルを操作するために。openpyxlとPillowをインストールします。

pip install openpyxl
pip ins...]]></summary>
        <author>
            <name>Taka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LLMのファインチューニングで事実の学習ができないのは本当か？ちょっと実験してみた]]></title>
        <id>https://zenn.dev/ohtaman/articles/llm_finetune_lora</id>
        <link href="https://zenn.dev/ohtaman/articles/llm_finetune_lora"/>
        <updated>2023-09-13T21:19:25.000Z</updated>
        <summary type="html"><![CDATA[三行要約

LLM のファインチューニングでは事実の学習ができないという話があったので、事実の学習の例として、シェイクスピアのRomeoをBobに置き換える実験を行った
実験では、訓練対象とする層による結果の違いを確認した。アテンション層のみを訓練した場合は、Bobへの置き換えはできなかった。一方、全結合層を含めて訓練した場合は、学習率を調整するとBobへの置き換えができた
ファインチューニングが事実の学習に向いているかはさておき、工夫次第でファインチューニングも事実の学習に利用できる可能性はある


 背景
先月 ChatGPT(GPT-3.5 Turbo) のファインチューニング...]]></summary>
        <author>
            <name>ohtaman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[poetryでpythonのpackageを管理する]]></title>
        <id>https://zenn.dev/knao124/articles/230913-poetry</id>
        <link href="https://zenn.dev/knao124/articles/230913-poetry"/>
        <updated>2023-09-13T15:02:45.000Z</updated>
        <summary type="html"><![CDATA[poetryとは

venv + .lockでバージョン統一できるpip
高速（遅くない）
https://python-poetry.org/docs/


 install
以下参考

https://python-poetry.org/docs/


 使い方
projectでpoetryを使い始める

$ poetry init

なにかpackageをinstallしたいとき

$ poetry add <package_name>

dev環境のみでいいとき

$ poetry add --dev <package_name>

.lockファイル...]]></summary>
        <author>
            <name>knao124</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python、英文引用】機械学習用ライブラリ10選]]></title>
        <id>https://zenn.dev/tunaproducts/articles/5e30986540bbca</id>
        <link href="https://zenn.dev/tunaproducts/articles/5e30986540bbca"/>
        <updated>2023-09-13T12:27:43.000Z</updated>
        <summary type="html"><![CDATA[!
気になる英文記事を引用して記事を書いてみました。

機械学習、ディープラーニングには、
よくPython言語が用いられますが、
その理由の一つとして、
「豊富なライブラリが存在する」 ということが、
挙げられると思います。
引用元の記事は、
タイトルが
「Top 10 Python Machine Learning Libraries in 2022
(2022年のPythonの機械学習ライブラリ１０選)」
とありましたので、
引用しながら2023年の機械学習のライブラリについて考えてみます。

With a Python-based machine learning librar...]]></summary>
        <author>
            <name>tunaProductsTech(つなぷろテック)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pandas 演習 100]]></title>
        <id>https://zenn.dev/bbled/books/pandas_book_2023</id>
        <link href="https://zenn.dev/bbled/books/pandas_book_2023"/>
        <updated>2023-09-13T10:52:52.000Z</updated>
        <summary type="html"><![CDATA[Pandas を使ったデータ処理の演習問題とその回答集です。 対象の読者としては、python の基本的な文法を理解しており、Google Colabolatory もしくはローカルの python 実行環境を使って python のコードを実行することができる方を 想定しています]]></summary>
        <author>
            <name>超Ｌチカ団編集局</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-304｜A - First Player]]></title>
        <id>https://zenn.dev/hyperdb/articles/b042faf0eb933f</id>
        <link href="https://zenn.dev/hyperdb/articles/b042faf0eb933f"/>
        <updated>2023-09-13T07:44:20.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-304 A - First Player



 提出結果
def getInt():
    return int(input())


def getStringListRow(N):
    return [list(input().split()) for _ in range(N)]


def main():
    n = getInt()
    sa = getStringListRow(n)

    s = []
    a = []
    for x, y in sa:
        s.append(x)
        a.ap...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-304｜B - Subscribers]]></title>
        <id>https://zenn.dev/hyperdb/articles/937d0041cfeffe</id>
        <link href="https://zenn.dev/hyperdb/articles/937d0041cfeffe"/>
        <updated>2023-09-13T07:44:19.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-304 B - Subscribers



 提出結果
def getInt():
    return int(input())


def main():
    n = getInt()
    s = str(n)

    print(s[0:3] + '0' * (len(s) - 3))


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Databricks で English SDK for Apache Spark を使ってデータ分析を効率化する]]></title>
        <id>https://zenn.dev/microsoft/articles/8f77b3d3dd1a12</id>
        <link href="https://zenn.dev/microsoft/articles/8f77b3d3dd1a12"/>
        <updated>2023-09-13T06:06:16.000Z</updated>
        <summary type="html"><![CDATA[はじめに
2023 年 6 月の Data + AI Summit で発表された English SDK for Apache Spark (pyspark-ai) の概要と、Azure Databricks で pyspark-ai のエンジンに Azure OpenAI Service を指定してデータ分析を行う方法をまとめました。

 English SDK for Apache Spark (pyspark-ai) とは

 概要
English SDK for Apache Spark (pyspark-ai) は Spark 開発をアシストしてくれる、Copilot 的な...]]></summary>
        <author>
            <name>ryohtaka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Microsoftの小型で高性能なLLM「phi-1.5」を試す]]></title>
        <id>https://zenn.dev/roboin/articles/a02e784daa0fde</id>
        <link href="https://zenn.dev/roboin/articles/a02e784daa0fde"/>
        <updated>2023-09-13T04:11:13.000Z</updated>
        <summary type="html"><![CDATA[phi-1.5とは？
phi-1.5は、Microsoftがリリースした13億（1.3B）パラメーターのLLMです。Microsoftは6月に、phi-1を発表しており、phi-1.5はその進化版です。
https://huggingface.co/microsoft/phi-1_5
たったの13億パラメーターしかないにも関わらず、常識、言語理解、論理的推論をテストするベンチマークで、100億パラメーター以下のモデルの中でほぼ最先端の性能を示すそうです。
学習に「教科書品質」のデータを用いることで、少ないパラメーター数で高い性能を実現しています。
phi-1.5は、安全性に関わる重要...]]></summary>
        <author>
            <name>ろぼいん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】緯度・経度から距離を算出する]]></title>
        <id>https://zenn.dev/robes/articles/b48d48aa2869fa</id>
        <link href="https://zenn.dev/robes/articles/b48d48aa2869fa"/>
        <updated>2023-09-12T21:53:57.000Z</updated>
        <summary type="html"><![CDATA[Pythonで緯度・経度から距離を算出する方法についてご紹介します。
機械学習でも役にたつスキルだと思います。

 1.計算式
弧度法のラジアンを単位とした緯度を\phi、経度を\lambdaとします。
地点Aの緯度・経度を\phi_1・\lambda_1、
地点Bの緯度・経度を\phi_2・\lambda_2とします。
また、地球の半径は6,371kmとします。
この時、地点Aと地点Bの距離は、以下の公式で計算されます。

distance = 6371 \times arccos(sin\phi_1 \times sin\phi_2 + cos\phi_1 \times cos\ph...]]></summary>
        <author>
            <name>osn_Lofi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tkinter csvフォルダ選択GUI]]></title>
        <id>https://zenn.dev/takiser/articles/e164ff093a5b66</id>
        <link href="https://zenn.dev/takiser/articles/e164ff093a5b66"/>
        <updated>2023-09-12T15:06:30.000Z</updated>
        <summary type="html"><![CDATA[import tkinter as tk
from tkinter import ttk
from tkinter import filedialog
from pathlib import Path


class DataModel:
    def __init__(self):
        self.selected_folder = None
        self.selected_files = []

    def set_selected_folder(self, folder_path):
        self.selected_folder = fold...]]></summary>
        <author>
            <name>takiser</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python　勉強会]]></title>
        <id>https://zenn.dev/ssym/books/8e89577a4eb6fb</id>
        <link href="https://zenn.dev/ssym/books/8e89577a4eb6fb"/>
        <updated>2023-09-12T14:33:52.000Z</updated>
        <summary type="html"><![CDATA[これは、Pythonを学習・復習するための個人的な備忘録です]]></summary>
        <author>
            <name>SSYM</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[`append`と`extend`の違いを知らないと、思わぬバグを生むことになる]]></title>
        <id>https://zenn.dev/ykesamaru/articles/73958e64c226bb</id>
        <link href="https://zenn.dev/ykesamaru/articles/73958e64c226bb"/>
        <updated>2023-09-12T10:04:40.000Z</updated>
        <summary type="html"><![CDATA[Pythonにおけるappendとextendについて、使い方を誤ると思わぬバグを生むことになります。この記事ではappendとextendの基本的な使い方と、面倒くさいことを考えずに済むように、ラッパー関数を作成し、最後に再利用可能なモジュール化を行います。


基本事項

appendとextendの基本的な動作

1. リストに要素を追加する場合

正しい使い方:
誤用:



2. リストにリストを追加する場合

正しい使い方:
誤用:



3. 上記をforループで使う場合

正しい使い方:
誤用:



4. np.ndarrayをリストに追加する場合

正しい使い方:
...]]></summary>
        <author>
            <name>yKesamaru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CAEのためのPython4(6面視画像の自動作成1)]]></title>
        <id>https://zenn.dev/cae_taka/articles/e0c85896c66d95</id>
        <link href="https://zenn.dev/cae_taka/articles/e0c85896c66d95"/>
        <updated>2023-09-12T06:18:39.000Z</updated>
        <summary type="html"><![CDATA[動機
CAEの結果（形状やコンター図など）から資料を作成する機会6面視の画像を作成することが、
多くあると思います。（僕は多かったです。）
この作業、やってることは単純ですが案外やってみるとめんどくさいです。
こういう作業は、自動化ですね。
ちょっと長くなりそうなので2回に分けて書いていきます。

 今回やること
1回目は、ファイルをドラック＆ドロップすると6面視の画像が作成されるところまでやります。
今回は、LSTC社（現在は、Ansys社に買収）が作成したLs-Dyna用のフリープリポストである
lsprepostを自動的に操作して画像を作成します。
※私が使用しているバージョン...]]></summary>
        <author>
            <name>Taka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-303｜A - Similar String]]></title>
        <id>https://zenn.dev/hyperdb/articles/b050ac627bfe63</id>
        <link href="https://zenn.dev/hyperdb/articles/b050ac627bfe63"/>
        <updated>2023-09-12T04:38:37.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-303 A - Similar String



 提出結果
def getInt():
    return int(input())


def getStringList():
    return list(input())


def sc(x, y):
    r = False
    if x == y:
        r = True
    elif (x == '1' and y == 'l') or (x == 'l' and y == '1'):
        r = True
    elif (x == '0' and y ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-303｜B - Discord]]></title>
        <id>https://zenn.dev/hyperdb/articles/03c9e079fbff32</id>
        <link href="https://zenn.dev/hyperdb/articles/03c9e079fbff32"/>
        <updated>2023-09-12T04:38:37.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-303 B - Discord



 提出結果
import math


def getIntMap():
    return map(int, input().split())


def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]


def main():
    n, m = getIntMap()
    a = getIntListRow(m)
    c = []

    for b in a:
        for i...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Flask】初期化時の一つの謎を解明したので解説【無駄知識】]]></title>
        <id>https://zenn.dev/laplace_daemon/articles/598f91c76bb045</id>
        <link href="https://zenn.dev/laplace_daemon/articles/598f91c76bb045"/>
        <updated>2023-09-11T15:29:32.000Z</updated>
        <summary type="html"><![CDATA[Flaskを使ってアプリケーションを作成している時に、ちょっとした疑問が浮かんだ箇所がありまして、その疑問を調査によって解消することができたので備忘録として残しておきます。

 実行環境
OS: Ubuntu 18.04.2 LTS
python: 3.6.8
Flask: 1.1.1

 疑問の内容
以下のFlaskアプリケーションを起動させるファイルを実行してみた時に事件は起こりました。
from flask import Flask
app = Flask(__name__)
@app.route('/')
def hello():
    return "Hello World!...]]></summary>
        <author>
            <name>Laplace</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python で Tellus の衛星データを検索・取得する]]></title>
        <id>https://zenn.dev/sankichi92/articles/2023-09-11_tellus-traveler</id>
        <link href="https://zenn.dev/sankichi92/articles/2023-09-11_tellus-traveler"/>
        <updated>2023-09-11T15:00:05.000Z</updated>
        <summary type="html"><![CDATA[この記事では、tellus-traveler という Python パッケージを使って、衛星データプラットフォーム Tellus の衛星データを検索・取得する方法を紹介します。
tellus-traveler は pip を使ってインストールできます。
$ pip install tellus-traveler

 API トークンをセットする
tellus-traveler は Tellus Satellite Data Traveler API を利用します。
この API の利用には API トークンが必要なため、Tellus にログインし、https://www.tellusxd...]]></summary>
        <author>
            <name>Takahiro Miyoshi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonでWebAPI作ってみた]]></title>
        <id>https://zenn.dev/riontajima/articles/0aab45b7c99c00</id>
        <link href="https://zenn.dev/riontajima/articles/0aab45b7c99c00"/>
        <updated>2023-09-11T12:31:25.000Z</updated>
        <summary type="html"><![CDATA[はじめに
はじめまして。新卒エンジニアです。
PythonでAPIを作る経験をしてみたい、そう感じ今回記事を書かせていただきました。

 REST API
APIを作成するにあたって、REST APIについて学習しました。
https://tech.012grp.co.jp/entry/rest_api_basics
上記のサイトは、一つ一つかみ砕いて説明がしてあり、とても分かりやすかったです。
サイトの内容を簡単にまとめると

RESTは「RESTの4原則に沿ったシンプルな設計思想」のことで、
　　①統一インターフェース
　　②アドレス可能性
　　③接続性
　　④ステートレス性
　...]]></summary>
        <author>
            <name>田島利恩</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[住所正規化のデモ機能を作ったので、日本のヤバい住所を入力してみた]]></title>
        <id>https://zenn.dev/sikkim/articles/bc86fbcac3a9fd</id>
        <link href="https://zenn.dev/sikkim/articles/bc86fbcac3a9fd"/>
        <updated>2023-09-11T08:04:36.000Z</updated>
        <summary type="html"><![CDATA[!
注意：この記事はかなり長いです。


 はじめに
数か月ほど前、住所の正規化が話題になりました。こちらの記事が特に有名ですね。
https://note.com/inuro/n/n7ec7cf15cf9c
関連して、こちらの記事も話題になりました。
https://yoshinorinie.hatenablog.com/entry/2023/06/09/091804
当時はほかにも色々な人が日本のヤバい住所の例をあげてくれて、とても楽しかったです。
実は弊社でもAddressianという住所正規化サービスを提供しています。初めて目にする変わった住所を見かけたら、とりあえず自社のAPI...]]></summary>
        <author>
            <name>TAKAHASHI Taro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-302｜A - Attack]]></title>
        <id>https://zenn.dev/hyperdb/articles/bfd92e1cea3b76</id>
        <link href="https://zenn.dev/hyperdb/articles/bfd92e1cea3b76"/>
        <updated>2023-09-11T05:26:01.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-302 A - Attack



 提出結果
def getIntMap():
    return map(int, input().split())


def main():
    a, b = getIntMap()

    c = a // b

    print(c if a % b == 0 else c + 1)


if __name__ == "__main__":
    main()]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[［AtCoder］ABC-302｜B - Find snuke]]></title>
        <id>https://zenn.dev/hyperdb/articles/af130ee6bf2127</id>
        <link href="https://zenn.dev/hyperdb/articles/af130ee6bf2127"/>
        <updated>2023-09-11T05:26:00.000Z</updated>
        <summary type="html"><![CDATA[設問ページ

🔗ABC-302 B - Find snuke



 提出結果
def getIntMap():
    return map(int, input().split())


def getStringListRow(N):
    return [list(input()) for _ in range(N)]


def chk(l, s):
    p = [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]]

    for i in range(len(p)):
    ...]]></summary>
        <author>
            <name>はいぱぁ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonで大文字と小文字の変換と速度比較]]></title>
        <id>https://zenn.dev/nii/articles/lower-upper-comparison</id>
        <link href="https://zenn.dev/nii/articles/lower-upper-comparison"/>
        <updated>2023-09-11T04:56:30.000Z</updated>
        <summary type="html"><![CDATA[概要
Pythonの文字列で、"Python"のような文字列を"python”に変換したいことがあります。
本記事では、大文字や小文字を判定する方法や変換する方法をまとめました。
また、大量の文字列に対して変換する際の速度比較も実施しました。

 変換方法

 大文字から小文字に変換
str型のlower()を使用します。
https://docs.python.org/ja/3/library/stdtypes.html#str.lower
upper_str = "THIS IS UPPERCASE"
to_lower_str = upper_str.lower()

print...]]></summary>
        <author>
            <name>nii</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[日本語 NLP リポジトリ分類データセットを公開しました！]]></title>
        <id>https://zenn.dev/taishii/articles/04964001eb644d</id>
        <link href="https://zenn.dev/taishii/articles/04964001eb644d"/>
        <updated>2023-09-11T03:31:34.000Z</updated>
        <summary type="html"><![CDATA[Huggingface Datasets で利用可能なテキスト分類用データセットを公開しました🤗
このデータセットは、GitHub リポジトリに対して日本語の自然言語処理（NLP）に関連するか否かのラベルが付与されています。
さらにベースライン用のモデルも公開しましたので、大規模言語モデルの性能評価の比較に活用いただければと考えています。
この記事では、データセットの詳細、利用方法やベースラインモデルのエラー分析の結果を紹介します。
https://huggingface.co/datasets/taishi-i/awesome-japanese-nlp-classification-d...]]></summary>
        <author>
            <name>taishi-i</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonのenumerateの挙動を理解する]]></title>
        <id>https://zenn.dev/nakurei/articles/understand-python-enumerate</id>
        <link href="https://zenn.dev/nakurei/articles/understand-python-enumerate"/>
        <updated>2023-09-10T23:37:14.000Z</updated>
        <summary type="html"><![CDATA[これはなに
Effective Python 第2版の項目7「rangeではなくenumerateを使おう」において、下記の記述があった。

enumerateは、遅延評価ジェネレータでイテレータをラップします。
enumerateは、ループのインデックスとイテレータの次の値の対をyieldします。

この記述の意味がさっぱりわからなかったので調べた。

 そもそもenumerateとは
enumerateはPythonの組み込み関数のひとつである。
enumerate(iterable, start=0)

 引数



引数
名前
渡すもの




第1引数
iterable
シ...]]></summary>
        <author>
            <name>NakuRei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[plt3d]]></title>
        <id>https://zenn.dev/takiser/articles/c64fc753129791</id>
        <link href="https://zenn.dev/takiser/articles/c64fc753129791"/>
        <updated>2023-09-10T14:08:08.000Z</updated>
        <summary type="html"><![CDATA[import pandas as pd
import matplotlib.pyplot as plt
from pathlib import Path
from mpl_toolkits.mplot3d import Axes3D


class SingleLotDataModel:
    def __init__(self, csvPath):
        self.timeFromStart = "TimeFromStart"
        self.timeFromPlane = "TimeFromPlane"
        self.timeFromLayer = ...]]></summary>
        <author>
            <name>takiser</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【AI】AIの本を読んだのでレビュー(その2:文系向けのAI関連本)]]></title>
        <id>https://zenn.dev/tunaproducts/articles/a04e86c050f50a</id>
        <link href="https://zenn.dev/tunaproducts/articles/a04e86c050f50a"/>
        <updated>2023-09-10T13:55:19.000Z</updated>
        <summary type="html"><![CDATA[!
文系向けに書かれたAIの本を読んでみたので、レビューを書きました。内容のネタバレはしないように配慮いたします。


 読んだ本

タイトル：文系AI人材になる
著者：野口竜司

https://www.amazon.co.jp/文系ＡＩ人材になる―統計・プログラム知識は不要-野口-竜司-ebook/dp/B0828D1TYR/ref=sr_1_1?adgrpid=134580030913&gclid=CjwKCAiA3KefBhByEiwAi2LDHBAsdVGfPZ_NywYgCVA4ENmaOVZwTkqyaE6S4I4u27cFWBUnxS2yGxoCqLwQAvD_...]]></summary>
        <author>
            <name>tunaProductsTech(つなぷろテック)</name>
        </author>
    </entry>
</feed>