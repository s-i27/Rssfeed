<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://s-i27.github.io/Rssfeed/index.html</id>
    <title>osmos::feed</title>
    <updated>2022-12-12T01:43:09.184Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://s-i27.github.io/Rssfeed/index.html"/>
    <link rel="self" href="https://s-i27.github.io/Rssfeed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[最新の音声認識モデル『Whisper』を使ってみたよ]]></title>
        <id>https://zenn.dev/stafes_blog/articles/7f08ad8c783371</id>
        <link href="https://zenn.dev/stafes_blog/articles/7f08ad8c783371"/>
        <updated>2022-12-11T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[!
この記事は、スターフェスティバル Advent Calendar 2022の12日目です。

昨日は、あひるさんの知らない技術まみれのチームに移動した時に実践したことでした。
畑の違う技術や分野に挑戦するときはすごい体力がいりますが、そこに果敢に挑戦して成果を出し続けている姿に日々刺激をもらっています..!
改まして、こんにちは！   @koonagiです。
普段はインフラエンジニア兼データエンジニアとしてTerraformを書いたり、CI/CD作ったり、ETL処理書いたりしています。
普段とは違うことをしてみようと音声認識モデル『Whisper』をつかってみたので、そのことについて...]]></summary>
        <author>
            <name>koonagi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonの仮想環境（Pyenv)]]></title>
        <id>https://zenn.dev/ta66/articles/a64ef44efeebab</id>
        <link href="https://zenn.dev/ta66/articles/a64ef44efeebab"/>
        <updated>2022-12-11T14:36:26.000Z</updated>
        <summary type="html"><![CDATA[RHEL系でPythonの仮想環境を導入します。
多くは、個々のユーザ単位で設定されるかと思いますが、
今回は、全体での設定しました。

 pyenvをgitよりダウンロード
(rootで実施)
mkdir /usr/loacl/pyenv
git clone https://github.com/pyenv/pyenv.git /usr/local/pyenv
chmod -R 777 /usr/local/pyenv
vi /etc/profile.d/pyenv.sh
--------------------------
export PYENV_ROOT="/usr/local/...]]></summary>
        <author>
            <name>ta66</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[個人開発]お弁当屋さんの日替わりメニューを通知する Line Bot を作った]]></title>
        <id>https://zenn.dev/coppla/articles/5699b78710d29c</id>
        <link href="https://zenn.dev/coppla/articles/5699b78710d29c"/>
        <updated>2022-12-11T12:31:43.000Z</updated>
        <summary type="html"><![CDATA[はじめに
先日お気に入りのお弁当屋さんの日替わり弁当を通知する Line Bot を作りました。
難しいことはしておらず、お弁当屋さんが毎朝ツイートする日替わりメニューの内容を LINE へ転送するシンプルな Bot です。
もし似たような仕組みを実現したいという人がいれば参考にしてください。

 背景
私の住まいの近くにお気に入りのお弁当屋さんがあります。
そちらでは毎日違う種類の日替わり弁当を出しているのですが、その種類が非常に豊富です。
週一くらいの頻度で訪ねてますが、毎回違うメニューが提供されているのです。
訪れるたびにどんなメニューか楽しみな反面、実は美味しい日替わりを見逃...]]></summary>
        <author>
            <name>coppla</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CLIでアニメーション付き字幕を動画に入れられるツールを作った]]></title>
        <id>https://zenn.dev/neka_nat/articles/abbb23a48aa2cb</id>
        <link href="https://zenn.dev/neka_nat/articles/abbb23a48aa2cb"/>
        <updated>2022-12-11T12:14:00.000Z</updated>
        <summary type="html"><![CDATA[概要
今更ながら、音声からの文字起こしAIで有名なwhisperを触り始めたので、それを使ってCLIでYoutubeや動画ファイルに字幕を入れて保存するツールを作ってみました。
ただ動画に字幕を入れるだけだとwhisper単体でsrtファイルなどに保存すればできてしまうので、文字のアニメーションやエフェクトなどを入れられるツールになっています。
stenocaptioner という名前でpypiに登録されていてpipでインストールできます。
https://pypi.org/project/stenocaptioner/
https://github.com/neka-nat/ste...]]></summary>
        <author>
            <name>neka-nat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[マケデコのDiscordでおもしろかった議論を振り返ってみる]]></title>
        <id>https://zenn.dev/gamella/articles/72b861b2d0b5e0</id>
        <link href="https://zenn.dev/gamella/articles/72b861b2d0b5e0"/>
        <updated>2022-12-11T11:57:50.000Z</updated>
        <summary type="html"><![CDATA[マケデコ( https://discord.gg/xg6P5RXwaa )という主に株式関連のマーケットAPIを活用し、分析や予測モデルを構築しているbotterのコミュニティをJPX総研様、AlpacaJapanの協賛で運営しています。今年の9月から立ち上げて様々な議論、おもしろいトピックがありました。今日はマケデコアドベントカレンダーの一環としてマケデコ内であったおもしろい議論を紹介しようと思います。
https://qiita.com/advent-calendar/2022/market-jquants

こんなかんじで各議論はスレッドで振り返れるようになっています
上記のように...]]></summary>
        <author>
            <name>tomo@Alpaca</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[句点・読点をコロン・セミコロンに変換するプログラム]]></title>
        <id>https://zenn.dev/kinnkinn/articles/27bf534d80c5e6</id>
        <link href="https://zenn.dev/kinnkinn/articles/27bf534d80c5e6"/>
        <updated>2022-12-11T09:26:02.000Z</updated>
        <summary type="html"><![CDATA[句点・読点をコロン・セミコロンに変換するプログラム

 コード全体
#句点・読点をコロン・セミコロンに変換するプログラム
import pyperclip
def listToString(str_list):
    result = ""
    for s in str_list:
        result += s
    return result.strip()

def main():
  print("句点・読点変換:",'')
  S = input()
  slen = len(S)
  result = []
  
  for i in range(slen...]]></summary>
        <author>
            <name>kinnkinn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Numpyで時系列データからフレーム系列を取得する]]></title>
        <id>https://zenn.dev/aki_watanabe/articles/cfc8b37731f5cc</id>
        <link href="https://zenn.dev/aki_watanabe/articles/cfc8b37731f5cc"/>
        <updated>2022-12-11T05:27:05.000Z</updated>
        <summary type="html"><![CDATA[はじめに
時系列信号からフレーム系列を抽出するための関数とその使用例を紹介します．この関数はscipyの時系列用API（scipy.signal）で使われているプライベート関数 _fft_helperの一部を再利用しやすく切り出したものです．

 背景
時系列信号を一定時間のフレームに分割して分析する処理は，音声の分野では主に短時間フーリエ変換などの際によく使われています．scipyなど多くのライブラリでは、この処理をAPIとして実装しています．
しかし，一般のセンサ信号処理においては，抽出したフレームに対してFFT以外の処理を行うことがあります．例えば，周波数領域以外に時間領域の特...]]></summary>
        <author>
            <name>akihisa_watanabe</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Barrett Reduction (2)]]></title>
        <id>https://zenn.dev/converghub/articles/88278d9c786eea</id>
        <link href="https://zenn.dev/converghub/articles/88278d9c786eea"/>
        <updated>2022-12-11T04:52:10.000Z</updated>
        <summary type="html"><![CDATA[Barrett Reduction (2) - on GPU -

 はじめに
前回は、簡単にBarrett Reductionについて記載しました。
今回は、Pythonで並列計算(GPU)を利用して実行する方法について備忘録を残します。

 使用パッケージ

CuPy

!
下記が使用前提条件です。

Python 3.7以上
Compute Capability 3.0以上のCUDA GPUの搭載されたマシン
CUDA Toolkitがインストールされていること

詳しくは、チュートリアル等を参照ください。


 とりあえず実装
CuPyのRawKernelを用いて実装します。...]]></summary>
        <author>
            <name>converghub</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gauge + Selenium + Python の環境構築]]></title>
        <id>https://zenn.dev/seven_901/articles/d93867b7180d43</id>
        <link href="https://zenn.dev/seven_901/articles/d93867b7180d43"/>
        <updated>2022-12-11T03:44:15.000Z</updated>
        <summary type="html"><![CDATA[概要
タイトル通り、Gauge + Selenium + Pythonの環境構築を行ったので備忘録です。
https://gauge.org/
ゴールはChromeでGoogleを開いて、キーワード検索まで行います。
ここでは、PythonとVSCodeのインストールを前提で話を進めます。

 環境

Mac
Python 3.8


 インストール手順

 Gaugeのインストール
https://docs.gauge.org/getting_started/installing-gauge.html?os=macos&language=python&ide=vsc...]]></summary>
        <author>
            <name>seven_901</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[仮想通貨のbotを作りたいが、みんなどう書いてるの？]]></title>
        <id>https://zenn.dev/ttrsq/articles/1280cb7ac7d1b4</id>
        <link href="https://zenn.dev/ttrsq/articles/1280cb7ac7d1b4"/>
        <updated>2022-12-11T01:40:37.000Z</updated>
        <summary type="html"><![CDATA[こんにちは
仮想通貨botter Advent Calendar 2022 の11日目の記事のつもりで書いています。
これからBot作りたいけど、みんなはどう設計しているのだろうという人向け。
loop頻度が1分以上のMLbotを前提としてますが、高頻度でも基本は変わらないと考えています。
クラスの責務の範囲や、起動周りの機構などに悩んでいたら参考になれば、、

 結論

 メインループ
下記のノリで各クラスの責務を分離をすると苦しくなりにくいです。
while True:
	# 新規データ取得
	data = stream.get_marcket_data(target_star...]]></summary>
        <author>
            <name>とっとり（砂丘）</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dataprocとpysparkを使って分散処理で行列分解]]></title>
        <id>https://zenn.dev/sugasuga/articles/82d9ad7933e0f2</id>
        <link href="https://zenn.dev/sugasuga/articles/82d9ad7933e0f2"/>
        <updated>2022-12-10T17:28:32.000Z</updated>
        <summary type="html"><![CDATA[やってみること

GCP上でDataprocクラスタの作成
movielensのデータを使ってmovieIdごとのベクトルをGCSに吐き出すスクリプトを作成
gcloudコマンドを使ってジョブを送信して処理を行う


 Dataprocクラスタの準備
terraformで

dataprocクラスタを作成
dataprocクラスタが使うGCSバケット

の作成。お試しなのでcloud shellなどでterraform initとterraform applyをした。
resource "google_storage_bucket" "dataproc_bucket" {
  # D...]]></summary>
        <author>
            <name>sugasuga</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[日本人を悩ます複数形問題]]></title>
        <id>https://zenn.dev/megeton/articles/af7816c9eb786f</id>
        <link href="https://zenn.dev/megeton/articles/af7816c9eb786f"/>
        <updated>2022-12-10T15:34:27.000Z</updated>
        <summary type="html"><![CDATA[ただの愚痴です

 exists と exist

英語圏では exists がやたら使われる

exists(user) のようなコードを見かけるたびに user は単数形なのにと疑問が沸く
一方 Ruby の Pathname#exist? では単数形なので自然な感じはする
そういや File.exists? は非推奨になり最近では単数形の File.exist? だけになったらしい
翻訳すると exist は存在で exists は存在するらしい

複数形の s じゃない？？？ (ますます混乱)




 starts_with と start_with

Python → sta...]]></summary>
        <author>
            <name>megeton</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mutek 2022 TouchDesigner Workshopまとめ]]></title>
        <id>https://zenn.dev/miwa_maroon/articles/370330c0593367</id>
        <link href="https://zenn.dev/miwa_maroon/articles/370330c0593367"/>
        <updated>2022-12-10T15:10:15.000Z</updated>
        <summary type="html"><![CDATA[ざっくりまとめ
12/9(金)にMutek×Derivative主催でTouchDesigner Workshopが行われました。
まさかの平日！！
ってことで、参加できなかった方も多いと思うので、
こちらの記事で内容をまとめたいと思います！

内容量がすごかったので、
重要だな～
とか
知らなかった～
とか
使えるな～
っていうものに絞って紹介します！

 3つのセクション

 Session1 - Ben Voigt - SceneChanger

 SceneChangerってなんですの？
シーンを変えるときに便利なTouchdesignerのパレットです
例えば、
複数人で違...]]></summary>
        <author>
            <name>miwa maroon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AtCoder Beginner Contest 281 レポート]]></title>
        <id>https://zenn.dev/hannah/articles/20221210_001</id>
        <link href="https://zenn.dev/hannah/articles/20221210_001"/>
        <updated>2022-12-10T14:35:57.000Z</updated>
        <summary type="html"><![CDATA[摘要
ABCD4完でした．D問題にめちゃくちゃ手間取り，まあまあの冷え込みでした．

 ABC281
https://atcoder.jp/contests/abc281

 コンテスト情報

コンテスト名: AtCoder Beginner Contest 281
順位: 2140th / 9226
パフォーマンス: 1054
レーティング: 1267 → 1247 (-20)


 A - Count Down
問題 / 解説

 A - 問題
N以下の非負整数を大きい方から順に出力せよ．

 A - 解法
特筆事項なし．

 A - ACコード
def main():
    ...]]></summary>
        <author>
            <name>はんな</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでclassを使う:getattrとsetattr]]></title>
        <id>https://zenn.dev/sergicalsix/articles/931ca295c36281</id>
        <link href="https://zenn.dev/sergicalsix/articles/931ca295c36281"/>
        <updated>2022-12-10T11:48:45.000Z</updated>
        <summary type="html"><![CDATA[getattr,setattrを使う条件を考える

条件X
インスタンスのメンバー変数(下記の例ではparam_name)がプログラムの内部で変数の値のみ判明しているとき(x = 'param_name')を考える。
つまり以下のような例である。

class Model:
    def __init__(self,s = 'hoge'):
        self.param_name = s

x = 'param_name'
model = Model()

# このときプログラム上でmodelはparam_nameというメンバーを持っていることは知っているが
# ↑変数xに...]]></summary>
        <author>
            <name>sergicalsix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[小ネタ]EventBridge Scheduleをboto3で更新するスニペット]]></title>
        <id>https://zenn.dev/shimo_s3/articles/55e7da7fdee532</id>
        <link href="https://zenn.dev/shimo_s3/articles/55e7da7fdee532"/>
        <updated>2022-12-10T10:31:42.000Z</updated>
        <summary type="html"><![CDATA[EventBridgeのスケジュールを更新するCLI/boto3を書いていると、更新するときにデフォルトから変更している全パラメータを再投入しなければならず、面倒です。
以前、こういうヘルパースクリプトを書いたのですが、いまいち使い勝手が悪いです。自分でもあまり使っていないです。。
https://zenn.dev/shimo_s3/articles/df70484bfe4e39
小さめの関数にして使うようになったので共有します。1つのパラメータであればこれで十分かなと。

 Code
スケジュール名と変えたいパラメータを受け取って更新する関数です。


get_sheduleで現状のパ...]]></summary>
        <author>
            <name>shimo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VisualStudio Code上から実行するとSSLエラー]]></title>
        <id>https://zenn.dev/shin1007/articles/70320401676fce</id>
        <link href="https://zenn.dev/shin1007/articles/70320401676fce"/>
        <updated>2022-12-10T08:04:24.000Z</updated>
        <summary type="html"><![CDATA[エラー内容とそのコード

例外が発生しました: SSLError
HTTPSConnectionPool(host='msedgedriver.azureedge.net', port=443): Max retries exceeded with url: /LATEST_RELEASE_99_WINDOWS (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available."))

path = EdgeChromiumDriverManager().install()
...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonの正規表現で繰り返しの文字列を1つにする。]]></title>
        <id>https://zenn.dev/shin1007/articles/17b2733066bdd5</id>
        <link href="https://zenn.dev/shin1007/articles/17b2733066bdd5"/>
        <updated>2022-12-10T08:01:24.000Z</updated>
        <summary type="html"><![CDATA[やりたいこと
PDFに埋め込まれている文字がおかしいときになんとかしたかった。
下みたいにしたい。連続で同じ文字が繰り返しのときに、一つにしたい。

ああああ　→　あ
ああいいううううえお　→　あいうえお
ABCABCABC　→　ABCABCABC
唯唯諾諾　→　唯諾


 やったこと
    # resultにはすでに何らかの文字列が入っているものとする
    result = re.sub(r"(.)\1{1,}", "\g<1>", result)  # 繰り返し文字列をまとめる

 他にも合わせたスニペット

テキストの整形
import re
from uni...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[openpyxlで余白を設定する]]></title>
        <id>https://zenn.dev/shin1007/articles/3ffc48223e47c7</id>
        <link href="https://zenn.dev/shin1007/articles/3ffc48223e47c7"/>
        <updated>2022-12-10T07:59:30.000Z</updated>
        <summary type="html"><![CDATA[余白を設定できるらしいんですが、方法を探しても見当たりませんでした。
公式に使い方の例が載っていなくて右往左往していましたが、解決です。
以下の関数内の、ws.page_margins.left = 0.4から続くところです。
設定はインチ単位なので気をつけてください。0.4インチで約1センチです。
import openpyxl


def new_workbook(path):
    wb = openpyxl.Workbook()
    ws = wb.active

    # 余白
    ws.page_margins.left = 0.4
    ws.page_mar...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Seleniumで指定座標をクリックさせる]]></title>
        <id>https://zenn.dev/shin1007/articles/9fb3c56c69c96b</id>
        <link href="https://zenn.dev/shin1007/articles/9fb3c56c69c96b"/>
        <updated>2022-12-10T07:57:47.000Z</updated>
        <summary type="html"><![CDATA[動的なウェブサイトなどで、タグを追いかけられないときにどうぞ。
heliumを使うともっと楽なんですが、Anacondaで提供されていないようなので、自作してみました。
最後のactions.perform()を書き忘れて、「動かない。指定するタグが悪いのか？」って結構悩みました。
def click_by_position(driver, x, y) -> None:
    from selenium.webdriver.common.action_chains import ActionChains
    actions = ActionChains(driver)

  ...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[strftime / strptimeのフォーマット]]></title>
        <id>https://zenn.dev/shin1007/articles/24d7cd9d0c44ee</id>
        <link href="https://zenn.dev/shin1007/articles/24d7cd9d0c44ee"/>
        <updated>2022-12-10T07:56:14.000Z</updated>
        <summary type="html"><![CDATA[良く忘れるのでジャンルごとに分けたよ、というだけのもの。
公式はこちら
https://docs.python.org/ja/3/library/time.html#time.strftime



ジャンル
表現
内容




年
%y
上 2 桁なしの西暦年を表す 10 進数 [00,99]。


年
%Y
上 2 桁付きの西暦年を表す 10 進数。


月
%b
ロケールにおける省略形の月名。


月
%B
ロケールにおける省略なしの月名。


月
%m
月を表す 10 進数 [01,12]。


日
%j
年の初めから何日目かを表す 10 進数 [001,366]。


日
%d...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[python-docxで日本語フォント対応]]></title>
        <id>https://zenn.dev/shin1007/articles/d9e490e73867d7</id>
        <link href="https://zenn.dev/shin1007/articles/d9e490e73867d7"/>
        <updated>2022-12-10T07:53:54.000Z</updated>
        <summary type="html"><![CDATA[やりたいこと
英語用のフォントと日本語用のフォントを分ける。
以下のページとほぼ同じことしてます。
本家にプルリクエストが入っているみたいですが、テストやドキュメンテーションの不足などでリジェクトされているみたいです。
https://github.com/python-openxml/python-docx/pull/329/commits/097586cab016c10cfaefb3cf283355f74889a27d

 使用例

example.py
paragraph.runs[0].font.name = "Arial"
paragraph.runs[0].font.na...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[subprocess + pyinstaller --noconsole]]></title>
        <id>https://zenn.dev/shin1007/articles/39f8b3c0c257df</id>
        <link href="https://zenn.dev/shin1007/articles/39f8b3c0c257df"/>
        <updated>2022-12-10T07:52:10.000Z</updated>
        <summary type="html"><![CDATA[PyInstallerを利用した際、subprocess関連が入っているときにうまく動作しないことがあります。
エラーメッセージすら出ないので、なかなかの困りものです。
これを回避するための策を提示します。

 以下の関数を定義
def subprocess_args(include_stdout=True):
    # The following is true only on Windows.
    if hasattr(subprocess, 'STARTUPINFO'):
        info = subprocess.STARTUPINFO()
        info...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[BeautifulSoupで特定の要素を選択するチートシート]]></title>
        <id>https://zenn.dev/shin1007/articles/2476f5af6c51c8</id>
        <link href="https://zenn.dev/shin1007/articles/2476f5af6c51c8"/>
        <updated>2022-12-10T07:50:57.000Z</updated>
        <summary type="html"><![CDATA[主に以下のサイトを参考にさせていただきました。
https://techacademy.jp/magazine/34387
https://qiita.com/Chanmoro/items/db51658b073acddea4ac
https://gammasoft.jp/blog/difference-find-and-select-in-beautiful-soup-of-python/
https://ai-inter1.com/beautifulsoup_1/#st-toc-h-29

 インポート
from bs4 import BeautifulSoup

 soupにHTM...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PyAutoGUIのチートシート]]></title>
        <id>https://zenn.dev/shin1007/articles/f06729df14fb9f</id>
        <link href="https://zenn.dev/shin1007/articles/f06729df14fb9f"/>
        <updated>2022-12-10T07:49:21.000Z</updated>
        <summary type="html"><![CDATA[以下リンク（本家）のうち、使いそうなところだけまとめました。
詳しくは本家を見てください。
https://pyautogui.readthedocs.io/en/latest/quickstart.html
pip install pyautogui Pillow==8.3でインストール。(最新のPillow==8.3.1だとエラーすら吐かずに落ちる)
import pyautoguiでインポート。
下の関数を呼び出す際は手前にpyautogui.を付けましょう。

 設定



動作
コード




すべて1秒おきにする
PAUSE = 1.0




 いろいろ取得



動作
コ...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ベイズの定理に納得がいかなかったからPythonで試してみたら納得がいったって話。]]></title>
        <id>https://zenn.dev/shin1007/articles/69c3164993955d</id>
        <link href="https://zenn.dev/shin1007/articles/69c3164993955d"/>
        <updated>2022-12-10T07:47:56.000Z</updated>
        <summary type="html"><![CDATA[動機
以下のサイトを見ていて、
「どう見ても3/8じゃん？P(A)も8/17じゃん？」
ってなって納得行かなかった。
なので、実際にコードを書いて実験してみて、そもそもの考え方が間違ってたんだなーと理解した。
https://bellcurve.jp/statistics/course/6444.html

 第1の実験（袋３つとも、確率が同じ）

 条件
わかりやすくするため、ボールの数を変えます。
たくさん試行回数を増やせば、まぁまぁいい感じの割合になるでしょう(コードでは1200万回試してます)



袋の名前
白ボールの数
赤ボールの数
このバッグが選ばれている状態で白ボール...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PyPDF2?いやPyMuPDFでしょ]]></title>
        <id>https://zenn.dev/shin1007/articles/b023c50a7d7865</id>
        <link href="https://zenn.dev/shin1007/articles/b023c50a7d7865"/>
        <updated>2022-12-10T07:46:13.000Z</updated>
        <summary type="html"><![CDATA[PyPDF2だと読み書きのときにエラーをはかれる。
ことがある。うちの扱ってるPDFだと結構あるので問題になった。
 (<class 'PyPDF2.utils.PdfReadError'>, PdfReadError('Illeagal character in Name Object',) <traceback object at 0x0123456789ABCDEF

 PyMuPDFなら大丈夫！問題ない！
日本語だとPyPDF2の資料がそこそこあるんですが、PyMuPDFは英語ばっかり。
なので自分が使ったメソッドとか書いていきます。
Wand+ImageM...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【解決】Flask_SQLAlchemyでのOperationalError]]></title>
        <id>https://zenn.dev/shin1007/articles/a0f03992f928a0</id>
        <link href="https://zenn.dev/shin1007/articles/a0f03992f928a0"/>
        <updated>2022-12-10T07:37:52.000Z</updated>
        <summary type="html"><![CDATA[エラー内容とコード

 エラー内容
sqlite3.OperationalError: unable to open database file

 コード
https://readthedocs.org/projects/flask-sqlalchemy/downloads/pdf/2.x/
に存在する

app.py
from flask import Flask
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlit...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【解決】VSCodeでJupyter Notebook使おうとしたらKernelを起動できない]]></title>
        <id>https://zenn.dev/shin1007/articles/6261d50fd46a66</id>
        <link href="https://zenn.dev/shin1007/articles/6261d50fd46a66"/>
        <updated>2022-12-10T07:36:18.000Z</updated>
        <summary type="html"><![CDATA[エラー内容

Failed to start the Kernel. 
c:\miniconda3\envs\test\lib\site-packages\traitlets\traitlets.py:2395: FutureWarning: Supporting extra quotes around strings is deprecated in traitlets 5.0. You can use 'hmac-sha256' instead of '"hmac-sha256"' if you require traitlets >=5.
  FutureWarning,...]]></summary>
        <author>
            <name>shin1007</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ARC 107 B - Quadruple の解説の解説]]></title>
        <id>https://zenn.dev/chelo/articles/e95bdce0c60a07</id>
        <link href="https://zenn.dev/chelo/articles/e95bdce0c60a07"/>
        <updated>2022-12-10T00:32:32.000Z</updated>
        <summary type="html"><![CDATA[https://atcoder.jp/contests/arc107/tasks/arc107_b

 解説
https://atcoder.jp/contests/arc107/editorial/262
下の解説の解説で理解した上でも、茶色500レベルのおれには理解できないぞ

 よく分かった解説を更に噛み砕く
https://drken1215.hatenablog.com/entry/2020/10/31/231300
毎度お世話になっております
方針は理解したのだけれども、vとか記号が多いと理解できない箇所も多いぞ
腹落ちするまで噛み砕くぞ!

 問題文の変形


a+b-c-...]]></summary>
        <author>
            <name>チェロ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Codon】Pythonコンパイラを試してみた]]></title>
        <id>https://zenn.dev/k41531/articles/8ade9c6c891dea</id>
        <link href="https://zenn.dev/k41531/articles/8ade9c6c891dea"/>
        <updated>2022-12-09T22:00:01.000Z</updated>
        <summary type="html"><![CDATA[https://news.ycombinator.com/item?id=33908576
Hacker Newsに上がっていたCodonというソフトウェアが気になったので、少し試してみました。

 Codonとは？
PythonのコードをマシンコードにコンパイルするPythonコンパイラです。
標準のPythonで使われている処理系（CPython）はインタプリタですが、このプロジェクトではPythonの処理系をコンパイラとして実装することでC/C++と遜色ないほどの速度を実現したとありました。
https://github.com/exaloop/codon
また、このプロジェクトは...]]></summary>
        <author>
            <name>kaisei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[今話題の ChatGPT を Python でいい感じに使ってみよう！]]></title>
        <id>https://zenn.dev/ekusiadadus/articles/python_chat_gpt_2022</id>
        <link href="https://zenn.dev/ekusiadadus/articles/python_chat_gpt_2022"/>
        <updated>2022-12-09T18:10:30.000Z</updated>
        <summary type="html"><![CDATA[今話題の ChatGPT を Python でいい感じに使ってみよう！
すでにご存知の方も多いと思いますが、ChatGPT は一世を風靡している強力な自然言語処理（NLP）ツールです。人間のようなテキストの生成から、チャットボットやバーチャルアシスタントの構築まで、幅広い用途で利用されています。
ChatGPT の人気の理由の 1 つは、大量のテキストデータで学習させた強力なオープンソースの GPT-3 言語モデルの上に構築されていることです。これにより、ChatGPT は非常に現実的で一貫性のあるテキストを生成することができ、NLP に携わる人にとって貴重なツールとなっています。
...]]></summary>
        <author>
            <name>ekusiadadus</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[巨大なjsonファイルをサイズ基準で分割するpythonスクリプト]]></title>
        <id>https://zenn.dev/pontsuyo/articles/fab628111b45b3</id>
        <link href="https://zenn.dev/pontsuyo/articles/fab628111b45b3"/>
        <updated>2022-12-09T13:49:09.000Z</updated>
        <summary type="html"><![CDATA[状況

jsonファイルをRedshift serverlessのtableに書き込みたい
RedshiftのCOPY文を実行して書きこみたいが、書き込み可能なjsonのサイズは最大4MBに制限されている。
書き込み予定のjsonファイルの生データのサイズは150MB程度である。
jsonファイルは10,000要素の配列。


 やりたいこと
jsonファイルを適度に分割し、COPY文を実行できる程度に小さくする。

 スクリプト
json配列を先頭から読み、二分探索により高々4MBに収まるように区切る
import ndjson
from sys import getsizeof
...]]></summary>
        <author>
            <name>neginasubi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[披露宴の席次を Gromov-Wasserstein 最適輸送で決めた話]]></title>
        <id>https://zenn.dev/akira_t/articles/seat-opt-via-gw</id>
        <link href="https://zenn.dev/akira_t/articles/seat-opt-via-gw"/>
        <updated>2022-12-08T22:31:22.000Z</updated>
        <summary type="html"><![CDATA[数理最適化 Advent Calendar 2022の9日目です。
新緑の頃、新型コロナ流行の合間をぬって、ささやかな結婚披露宴を表参道の式場にて催しました。諸々の準備の中でも席次はこだわるとキリがなく、数理最適化を使って決めました。人間関係をできるだけ保つようなゲスト集合から座席集合への写像を考えます。

ゲスト間人間関係を考慮して良い感じの配席を考えたい

 tl;dr

披露宴をしました
知り合い関係が複雑かつ長机でゲストの席配置が難しい

組合せ爆発は本物。高々20人の配置に1週間以上悩んだ結果、数理最適化した方が早いと結論


「知り合い同士を近くに配席する」問題は非凸な二次計...]]></summary>
        <author>
            <name>Akira Tanimoto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pytestで関数がn回呼ばれていることをテストしたい]]></title>
        <id>https://zenn.dev/ymiz/articles/7ca3a3b2a264a3</id>
        <link href="https://zenn.dev/ymiz/articles/7ca3a3b2a264a3"/>
        <updated>2022-12-08T21:50:00.000Z</updated>
        <summary type="html"><![CDATA[問題

pytestを使っている
ある関数A内で関数Bがn回呼ばれることをテストしたい
どうするか？


 対応
pytest-mock を利用する。
https://pypi.org/project/pytest-mock/
例えば、
class FooApiClient:
    def fetch(self, i: int):
        return i


class Bar:
    def __init__(self, foo: FooApiClient):
        self.__foo = foo

    def execute(self, count:...]]></summary>
        <author>
            <name>ymiz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HomeAssistantでpython scriptを実行した際importできない問題の解決方法]]></title>
        <id>https://zenn.dev/syfut/articles/c79f8da50aa1bb</id>
        <link href="https://zenn.dev/syfut/articles/c79f8da50aa1bb"/>
        <updated>2022-12-08T18:14:35.000Z</updated>
        <summary type="html"><![CDATA[概要
HomeAsssistantのPythonSprictのドキュメントに沿ってpythonを実行した場合import機能でエラーが出ることがある。
Python_script-Home Assistant
ImportError: __import__ not found
これはHomeAssistant標準の方法では機能が限定的であるために起きている。

 解決方法
importを行う必要がある場合は、シェルコマンドから実行する必要がある。
Configuration.yamlに以下を記載し、システムを再起動する。
shell_command:
    program1: 'p...]]></summary>
        <author>
            <name>Boushipan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[e (自然対数の底) を100億桁求める〜ひとはなぜ円周率に惹かれるのか?]]></title>
        <id>https://zenn.dev/taroh/articles/8ba43baa0f7154</id>
        <link href="https://zenn.dev/taroh/articles/8ba43baa0f7154"/>
        <updated>2022-12-08T13:43:53.000Z</updated>
        <summary type="html"><![CDATA[またまた円周率絡みのぷちネタ。
円周率を自作プログラムで100億桁求めた。アルゴリズムも3つくらい試したし、バイナリダンプもした。全部は無理だがいちおうかなりの無理筋桁を一度にプリントアウトもしてみた。の続き。
ほかにもなんか、計算して面白い数字はないものか? ということで、40年ぶりくらいに、自然対数の底 (その他) を計算してみた。
まあネタとしては、binary splitting法を理解すること (※ ちゃんとしてないが) と、AWSを借りることについての考察の続きも。

 ルート2に人権はないのか?
わしの計算機には、円周率\piが100億桁転がっている。
Twitterで流行...]]></summary>
        <author>
            <name>taroh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pip の小技集]]></title>
        <id>https://zenn.dev/sergicalsix/articles/5d8597914f2057</id>
        <link href="https://zenn.dev/sergicalsix/articles/5d8597914f2057"/>
        <updated>2022-12-08T13:41:12.000Z</updated>
        <summary type="html"><![CDATA[はじめに
!


pip installを行う時は必ず仮想環境で行ってください

pip installでマイナーなライブラリをインストールする場合は、マルウェアが入っていないか十分に調査してください。



 内容

 初級
% pip install {library}=={version}
% pip install {library}>{version}
% pip install --upgrade {library}

% pip install -r requirements.txt
% pip freeze
初球については簡単なものばかりなので、説明は割愛します...]]></summary>
        <author>
            <name>sergicalsix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Kaggle】 Feedback3 コンペでボロ負けしたので教訓を全部吐きます【懺悔】]]></title>
        <id>https://zenn.dev/aidemy/articles/3299c8fd9f394a</id>
        <link href="https://zenn.dev/aidemy/articles/3299c8fd9f394a"/>
        <updated>2022-12-08T08:01:11.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は、 Aidemy Advent Calendar 2022 の8日目の投稿です。
みなさま、いかがお過ごしでしょうか。株式会社アイデミーでデータサイエンティストとして勤務しております、ざっしーと申します。
先日11/29に閉幕したKaggleコンペティション Feedback Prize - English Language Learning （通称Feedback3）に参加してきました。
そこで見事にボロ負けしてきたので、この記事で教訓を1つ残らず落とします。🫠
打ち手の考え方などの概念的な話だったり、具体的な手法の話になったりと、話題のレイヤーが多少は雑多にな...]]></summary>
        <author>
            <name>ざっしー</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでclassを使う:method編(2): staticmethod]]></title>
        <id>https://zenn.dev/sergicalsix/articles/e96ba8f1b3370f</id>
        <link href="https://zenn.dev/sergicalsix/articles/e96ba8f1b3370f"/>
        <updated>2022-12-08T04:58:16.000Z</updated>
        <summary type="html"><![CDATA[本記事はstaticmethodを啓発する記事です。
まずは以下のclassを考えます。
class A:
    def __call__(self):
        return self.__class__.__name__
    
    # bad code
    def print_fuga(self):
        print('fuga')
	
　　 # good code 
    @staticmethod
    def print_hoge():
        print('hoge')
上記クラスのメソッドをインスタンスに注目して簡単に説明します。
...]]></summary>
        <author>
            <name>sergicalsix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでclassを使う:method編(1): 基本的な特殊メソッド]]></title>
        <id>https://zenn.dev/sergicalsix/articles/0d44a97a6bd43a</id>
        <link href="https://zenn.dev/sergicalsix/articles/0d44a97a6bd43a"/>
        <updated>2022-12-08T04:55:59.000Z</updated>
        <summary type="html"><![CDATA[導入
今回はよく目にする4つの特殊メソッドは__init__,__call__,__str__,__repr__に加えて__eq__,__class__.__name__,__dict__を紹介します。
そして想定される実用的な使い方についてもいくつか紹介します。
以下のクラスを使って説明していきます。
class A:
    z = 1
    def __init__(self,x = 1):
        self.x = x
    def __call__(self):
        return f'call:{self.__class__.__name__}'
 ...]]></summary>
        <author>
            <name>sergicalsix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PEP681 - Data Class Transformsって何のためにあるの？]]></title>
        <id>https://zenn.dev/yukinarit/articles/8b92ae6f812839</id>
        <link href="https://zenn.dev/yukinarit/articles/8b92ae6f812839"/>
        <updated>2022-12-08T00:38:46.000Z</updated>
        <summary type="html"><![CDATA[この記事はMapbox Japan Advent Calendar 2022 8日目の記事です。

 PEP681が追加された背景
PEP681 - Data Class Transformsはtypingモジュールに@dataclass_transformというデコレータを追加する変更でpydanticやSQLAlchemy、pyserde等のdataclassをベースにしたライブラリの型チェックし易くするために提案されました。
例えば、@dataclassを追加するだけの超シンプルなデコレータ@add_dataclassがあるとします。
from dataclasses import...]]></summary>
        <author>
            <name>yukinarit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでslackを使う(2): slackでtqdm]]></title>
        <id>https://zenn.dev/sergicalsix/articles/067065d4eccb9a</id>
        <link href="https://zenn.dev/sergicalsix/articles/067065d4eccb9a"/>
        <updated>2022-12-07T16:29:36.000Z</updated>
        <summary type="html"><![CDATA[結論
zsh
(venv)% pip install tqdm  (or pip install --upgrade tqdm )
python
import time  # demo
from tqdm.contrib.slack import tqdm
for i in tqdm([1,2,3,4,5], token = '{token}', channel = '{channel}'):
    print(i)
    time.sleep(1) # demo

 内容
本記事は[1] https://zenn.dev/sergicalsix/articles/f7ad91d...]]></summary>
        <author>
            <name>sergicalsix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでslackを使う(1): slackのメッセージ送信]]></title>
        <id>https://zenn.dev/sergicalsix/articles/f7ad91d1d7cd04</id>
        <link href="https://zenn.dev/sergicalsix/articles/f7ad91d1d7cd04"/>
        <updated>2022-12-07T16:17:21.000Z</updated>
        <summary type="html"><![CDATA[結論
zsh
% source {任意の仮想環境 = venv}/bin/activate
(venv) % pip install "slack_sdk>=3.0"
zshenv
export SLACK_API_TOKEN="hogehogehoge" #your token
python
import os
from slack import WebClient
from slack.errors import SlackApiError

def send_slack_message(text = "Hello from your app! :tada:", chann...]]></summary>
        <author>
            <name>sergicalsix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[mlflowとluigiによるML実験管理例]]></title>
        <id>https://zenn.dev/mina_moto/articles/qiita-20211205-62611fe7756be4cbdebc</id>
        <link href="https://zenn.dev/mina_moto/articles/qiita-20211205-62611fe7756be4cbdebc"/>
        <updated>2022-12-07T15:13:06.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事はBrainPad Advent Calendar 2021の10日目の記事です。
本記事ではMLの実験を行うときの、コード、パラメータ、モデル、評価結果を管理するための構成例を紹介します。
サンプルコードはこちら

 前提知識

Must

python
docker


Want

mlflow
luigi




 思想

前処理を加えたデータや学習したモデルなどプログラムで出力されるファイルは全てmlflowの管理下におく。
コードはgitで管理し、実験結果とcommit hashを紐づける。
前処理、学習、推論などタスク同士の依存関係を管理して、依存してい...]]></summary>
        <author>
            <name>mina_moto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DeepLearningでポケモンを生成する]]></title>
        <id>https://zenn.dev/mina_moto/articles/qiita-20191216-e85dedb407cdfce28219</id>
        <link href="https://zenn.dev/mina_moto/articles/qiita-20191216-e85dedb407cdfce28219"/>
        <updated>2022-12-07T15:13:05.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は近畿大学Advent Calendar 2019の16日目の記事です．
何番煎じか分かりませんがGanでポケモンの画像を生成します．将来的には生成した画像に更にポケモン図鑑の説明を付加するようなことをしたいと思っています．
ソースコードはこちら

 DCGAN
画像生成にはDCGANを用いました．詳細は論文を参照ください．
実装はDCGAN-tensorflowを用いたのですが，なぜか公式のソースコードにバグがあったので修正したものを使っています．

 データセット
pokemon-images-dataset-by-typeで公開されている，ポケモンの画像を用い...]]></summary>
        <author>
            <name>mina_moto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[文章の前処理・分かち書きを行い文書ベクトルを算出]]></title>
        <id>https://zenn.dev/mina_moto/articles/qiita-20191210-af0b3ff3518f7fbd7bce</id>
        <link href="https://zenn.dev/mina_moto/articles/qiita-20191210-af0b3ff3518f7fbd7bce"/>
        <updated>2022-12-07T15:13:05.000Z</updated>
        <summary type="html"><![CDATA[この記事は「Sunrise Advent Calendar 2019」10日目の記事です．
最近，諸事情により自然言語処理を完全に理解する必要があり，文章の前処理やベクトルの算出とかを行ったので，その辺りの方法について簡単にまとめます．

 必要ライブラリインポート
import re
from gensim.models.doc2vec import Doc2Vec, TaggedDocument
import string
import unicodedata
import MeCab

 文書の前処理
対象とする文章
text = 'Yahoo Japanなどを\r運営するヤフーの...]]></summary>
        <author>
            <name>mina_moto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[anacondaコマンドチートシート]]></title>
        <id>https://zenn.dev/mina_moto/articles/qiita-20181116-bf6e965c36b53579b757</id>
        <link href="https://zenn.dev/mina_moto/articles/qiita-20181116-bf6e965c36b53579b757"/>
        <updated>2022-12-07T15:13:04.000Z</updated>
        <summary type="html"><![CDATA[環境
macOS Mojave 10.14

 コマンド一覧

 仮想環境作成
conda create -n name python=version anaconda
name:任意の仮想環境名
version:pythonのバージョンの指定

 作成した仮想環境一覧の表示
conda info -e

 作成した仮想環境に入る
source activate name
name:作成した仮想環境名

 現在の仮想環境から出る
source deacrivate

 仮想環境の削除
conda remove -n name
name:削除する仮想環境名

 anacondaのアップ...]]></summary>
        <author>
            <name>mina_moto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[phpからpythonを呼び出し実行結果を利用]]></title>
        <id>https://zenn.dev/mina_moto/articles/qiita-20180923-f90ceb2f88994639ca95</id>
        <link href="https://zenn.dev/mina_moto/articles/qiita-20180923-f90ceb2f88994639ca95"/>
        <updated>2022-12-07T15:13:04.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事ではphpからpythonプログラムを実行し，その出力結果を文字列としてphpのプログラムで利用する方法について解説します．

 環境
一応書いたけど大体の環境で動くと思います．
php：5.5.38
python：3.6.4

 実行するpythonプログラム
とにかく分かりやすくしました:monkey: 文字列を二行出力するだけです．

exec_from_php.py
print("1line")
print("2line")

当然こうなります．
$ python exec_from_php.py 
1line
2line

 phpからpythonを呼び出...]]></summary>
        <author>
            <name>mina_moto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vertex Piplinesのコンポーネントのスキップ処理]]></title>
        <id>https://zenn.dev/light0w0/articles/b1c5b5c57d0a62</id>
        <link href="https://zenn.dev/light0w0/articles/b1c5b5c57d0a62"/>
        <updated>2022-12-07T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[!
これは ZOZO Advent Calendar 2022 カレンダー Vol.2 とMLOps Advent Calendar 2022 カレンダー Vol.1 の8日目の記事です。


 目的
Vertex Pipelinesの一部のコンポーネント実行をスキップする処理を実現する

 背景
パイプラインでdsl.Conditionを使用し、コンポーネントの出力結果によって一部のコンポーネント実行を条件分岐でスキップすることを考えていたが、以下のようなコードではエラーとなった。
def pipeline_fn():

    cond_task = cond_op()

    w...]]></summary>
        <author>
            <name>hikari</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeError: __init__() got an unexpected keyword argument 'package_name]]></title>
        <id>https://zenn.dev/yoshy_at/articles/d2a46b082e8650</id>
        <link href="https://zenn.dev/yoshy_at/articles/d2a46b082e8650"/>
        <updated>2022-12-07T09:09:14.000Z</updated>
        <summary type="html"><![CDATA[いつものようにdockerをビルドしていたら、以下のようなエラーがでた。
TypeError: __init__() got an unexpected keyword argument 'package_name'
【解決策】
・pip installしている「click」のバージョンを8.0.0以上にする。

※ここから補足
docker-comopse up -d --buildにてビルドをした際に、以下のコマンドがdockerに走っている。
RUN pip install --upgrade pip pip-tools
RUN pip install -r requirement...]]></summary>
        <author>
            <name>ITエンジニア1年生</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonで関数の時間を計測するラッパーを作成]]></title>
        <id>https://zenn.dev/sergicalsix/articles/6434552139b126</id>
        <link href="https://zenn.dev/sergicalsix/articles/6434552139b126"/>
        <updated>2022-12-07T08:06:19.000Z</updated>
        <summary type="html"><![CDATA[結論
import datetime
from functools import wraps

def calc_func_time(f):
    @wraps(f)
    def wrapper(*args, **kwargs):
        start = datetime.datetime.now()
        result = f(*args, **kwargs)
        end = datetime.datetime.now()
        print(f'elapsed time: {f.__name__}: { end - start }')
...]]></summary>
        <author>
            <name>sergicalsix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Python] コンソールでのキーボードイベントをハンドルする]]></title>
        <id>https://zenn.dev/k_kuroguro/articles/e8437cdf6d804f</id>
        <link href="https://zenn.dev/k_kuroguro/articles/e8437cdf6d804f"/>
        <updated>2022-12-07T03:44:58.000Z</updated>
        <summary type="html"><![CDATA[概要
標準モジュールのみで, コンソールにおけるキーボードイベント (キー押下イベント) をハンドルする Python モジュールを作成する. キー入力の処理は OS 依存だが, 本記事では Windows のみ考える.
なお, 実装については TUI フレームワークの Textual を参考にした. ソースの一部はここから複製・改変されているため, 注記のあるものには以下のライセンスが適用される.
LICENSE
Copyright (c) 2021 Riku Kanayama (k_kuroguro)
Released under the MIT license
https://...]]></summary>
        <author>
            <name>くろぐろ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Log AnalyticsにSwitchBotのテレメトリ情報を記録する]]></title>
        <id>https://zenn.dev/yotan/articles/bbf7182152c663</id>
        <link href="https://zenn.dev/yotan/articles/bbf7182152c663"/>
        <updated>2022-12-07T03:31:17.000Z</updated>
        <summary type="html"><![CDATA[はじめに
2022年末のAmazonブラックフライデーで、ついSwitchBotハブミニと、温湿度計をポチってしまいました（あとEcho Showも）。
SwitchBotのアプリでは、IFTTTやアレクサなど主要なサービスに標準で対応しているのですが、各種SwitchBotの操作の為のAPIが公開されているので使ってみました。

SwitchBot スマートリモコン ハブミニ
SwitchBot 温湿度計

本記事は今回の検証の中で培った技術ノウハウの説明をAzure側メインに行います。
実際のソースコードやAzureデプロイスクリプト（bicep）は以下のGitHubレポジトリに...]]></summary>
        <author>
            <name>よたん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flaskの1.xと2.xを無停止で入れ替える]]></title>
        <id>https://zenn.dev/delta/articles/flask_session_202212</id>
        <link href="https://zenn.dev/delta/articles/flask_session_202212"/>
        <updated>2022-12-07T03:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事はteam DELTA Advent Calendar 2022 7日目の記事です。

 自己紹介
山田 尚人(やまだ なおと)といいます。
SEVENRICH GROUP のグループ でCTO Boosterをメインで行っています。
SEVENRICH GROUPとは？
https://costcut.cloud/
個人のZennもあります。
https://zenn.dev/merutin

 概要
Pythonのバージョンアップに伴って、古くなっていたFlaskのバージョンを同時に上げることにしました。
バージョンを上げるに当たって、サービスを止めずに実施する...]]></summary>
        <author>
            <name>DELTAテックブログ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[機械学習を使ったインサイト抽出]]></title>
        <id>https://zenn.dev/luup/articles/data-takahiro-20221207</id>
        <link href="https://zenn.dev/luup/articles/data-takahiro-20221207"/>
        <updated>2022-12-07T01:00:00.000Z</updated>
        <summary type="html"><![CDATA[※この記事はLuup Advent Calendarの7日目の記事です。
こんにちは、Luupの松本です。
今日は、機械学習のちょっと変わった使い方について、Luupでの実例を用いて簡易に紹介します。機械学習というと、モデリングをして予測結果を出し、それを活用して初めて価値が出ると言われることがあります。基本的に多くのケースでその認識は正しいのですが、機械学習の副産物を活用することにより、予測結果を活用することなくかつ容易にビジネス上の価値を出せることがあります。機械学習の基礎を少し理解していることが前提になりますが、それ以上の深い知識は必要ありません。

 機械学習を使ったインサイトの...]]></summary>
        <author>
            <name>Luup Developers Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Amazonのデータセットで始める商品検索]]></title>
        <id>https://zenn.dev/rejasupotaro/articles/321b62c83a5d66</id>
        <link href="https://zenn.dev/rejasupotaro/articles/321b62c83a5d66"/>
        <updated>2022-12-06T23:30:40.000Z</updated>
        <summary type="html"><![CDATA[この記事は 情報検索・検索技術 Advent Calendar 2022 の7日目の記事です。

 はじめに
今年の夏、Amazonが多言語 (英語、スペイン語、そして日本語) のラベル付きの商品検索のデータセットを公開しました。

論文: https://arxiv.org/abs/2206.06588

リポジトリ: https://github.com/amazon-science/esci-data


情報検索において商品検索は、ウェブ検索を作りたいという企業より商品検索を作りたい企業の方が多いという意味で、ポピュラーなトピックだと思います。ところが公開データで実験を行おうとす...]]></summary>
        <author>
            <name>rejasupotaro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Actionsでpush時にPythonコードを自動整形&自動コミット]]></title>
        <id>https://zenn.dev/satto_sann/articles/36c68c73dc5125</id>
        <link href="https://zenn.dev/satto_sann/articles/36c68c73dc5125"/>
        <updated>2022-12-06T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は　ZOZO #5 Advent Calendar 2022 7日目の記事になります。

 やること3行

GitHubにPythonのコードをpushすると自動整形&コミットするCIを作成
CIについて細かく解説
GitHub Actionsで実際に動作


 前提

GitHubのリポジトリでコード管理している
CI/CDはPull Requestで動作する


 自動整形＆コミットするGitHub Actionsの設定
GitHub Actionsの設定は以下の通りです。

sample.yml
name: Format code

on:
  pul...]]></summary>
        <author>
            <name>さっと</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ergの進捗・現状・これから]]></title>
        <id>https://zenn.dev/mtshiba/articles/cf97452bcd05cb</id>
        <link href="https://zenn.dev/mtshiba/articles/cf97452bcd05cb"/>
        <updated>2022-12-06T21:55:00.000Z</updated>
        <summary type="html"><![CDATA[本記事は言語実装アドベントカレンダー7日目の記事です。
Ergは本年、2022年8月に公開したプログラミング言語です。もしかしたらご存知で覚えている方もいるかもしれません。
https://zenn.dev/mtshiba/articles/a38c9fcd9646d4
そしてありがたいことに予想以上の反応と、何人もの方からのコントリビュートを頂きました。
Ergはその後も開発が続けられ、2022年12月現在、バージョン0.5.13(0.6.0ベータ公開)まで到達しました。
本記事ではこれまでの達成事項をまとめ、現状と今後の展望について記していきます。

 開発記録

 8月

8/10...]]></summary>
        <author>
            <name>shiba</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dbt Python モデルで日本のカレンダーにローカライズされたリファレンステーブルを作成する]]></title>
        <id>https://zenn.dev/tanuhack/articles/ac627522fb5eb0</id>
        <link href="https://zenn.dev/tanuhack/articles/ac627522fb5eb0"/>
        <updated>2022-12-06T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[dbt Advent Calendar 2022 の 7 日目の記事です。
ビジネス要件の追加・変更で、「インフォメーションマート（データマート）に、日本のカレンダーにローカライズされた集計列を追加する作業」は、分析あるあるだと思います。

国民の祝日（元旦、山の日など）
第 n 営業日 など

インフォメーションマートを作成・更新するたびに、 SQL の関数を使用して個別に集計列を実装しても良いのですが、ビジネスルールが変更されるたびに、すべてのインフォメーションマートの設定を変更しなければいけません。
どのようなインフォメーションマートにでも使えるような汎用性が高い集計列は、あらかじ...]]></summary>
        <author>
            <name>たぬ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OSSの画像PIIスキャナー、Octopi試してみた]]></title>
        <id>https://zenn.dev/notrogue/articles/5691c72941616a</id>
        <link href="https://zenn.dev/notrogue/articles/5691c72941616a"/>
        <updated>2022-12-06T13:02:42.000Z</updated>
        <summary type="html"><![CDATA[気にはなってるけど触ってないビッグデータ系のツール・サービスを触る Advent Calendar 2022の#5です。
OSSの画像PIIスキャナーOctopiiについて調べて・触ってみました。

 tl;dr

PIIスキャナー・DLPと呼ばれるカテゴリーの製品があるよ
OctopiiはOSSの画像スキャンしてくれるツールだよ
現状、学習に使ったモデルがまだ小さいため精度は微妙かも。ただ、Kerasのモデルを拡張できるよ


 PIIとは
PII(Personally Identifiable Information)で、「個人を特定できる情報」です。例えば、

マイナンバーやアメリ...]]></summary>
        <author>
            <name>notrogue</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonの依存性注入ライブラリInjectorを使ってみた]]></title>
        <id>https://zenn.dev/yuchiki/articles/python-injector</id>
        <link href="https://zenn.dev/yuchiki/articles/python-injector"/>
        <updated>2022-12-06T11:03:32.000Z</updated>
        <summary type="html"><![CDATA[概要
Python の依存性注入ライブラリである Injector を趣味コーディングで使用してみた。使い方をコード例付きで紹介する。

 依存性注入とは
英語 Dependency Injection (依存性注入/依存物注入) の訳語である。
書籍 Clean Architecture で紹介されている SOLID原則に絡む話である。
SOLID原則については詳細に説明しないので他の記事や書籍を参照してほしい。
以下ではC#のクラスを例に挙げて依存性注入について解説する。
MyClass は部品として MyComponent を使用しているとする。
class MyClass {...]]></summary>
        <author>
            <name>ゆーちき</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[polarsでLabelEncoderを使おうとしたら詰まった話]]></title>
        <id>https://zenn.dev/gamera/articles/cd0f49c8ae74f6</id>
        <link href="https://zenn.dev/gamera/articles/cd0f49c8ae74f6"/>
        <updated>2022-12-06T08:00:17.000Z</updated>
        <summary type="html"><![CDATA[TL;DR
pyarrowを入れよう

 polarsって？
polarsとは、PythonとRustのDataFrameライブラリです。DataFrameといえばpandasですが、なんとpolarsはpandasより高速に動作します！！[1]

 環境
python = "^3.10"
polars = "^0.15.2"
scikit-learn = "^1.1.3"

 本題
タイタニックデータセットを利用します。
以下はSexをラベルエンコーディングして、csvとして出力するコードです。
import polars as pl
from sklearn import pre...]]></summary>
        <author>
            <name>gamera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Snowflake で非構造化データを触ってみた]]></title>
        <id>https://zenn.dev/tmasuo/articles/319e29c7196fd1</id>
        <link href="https://zenn.dev/tmasuo/articles/319e29c7196fd1"/>
        <updated>2022-12-06T07:17:18.000Z</updated>
        <summary type="html"><![CDATA[📜 この記事は
Snowflake Advent Calendar 2022 Calendar 1 Day 6 の記事になります。Snowflake で Sales Engineer をしております、@tmasuo がお届けします。
この記事で触れる Snowflake の各機能のリリース状態は 2022 年 12 月 1 日時点に基づきます。

 📷 Snowflake って非構造化データいけるんですか？
よくある質問です。
非構造化データのサポートは 2022 年 1 月に GA されています 🎉
https://docs.snowflake.com/ja/release-not...]]></summary>
        <author>
            <name>tmasuo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TodoistのAPI v9に対応したライブラリを使ってタスクの日付と優先度を変更する]]></title>
        <id>https://zenn.dev/auxinone/articles/880e8d40c2c034</id>
        <link href="https://zenn.dev/auxinone/articles/880e8d40c2c034"/>
        <updated>2022-12-06T05:48:20.000Z</updated>
        <summary type="html"><![CDATA[TodoistのAPIがv9になって、v8が使えなくなりました。pyTodoistもそのうち対応するんだと思いますが、自作のスクリプトをすぐに対応させたかったのでTodoist公式ライブラリのtodoist-api-pythonを使って作り直すことにしました。なお、todoist-pythonは終了のようです。
APIも含め開発者向けのページはDeveloping with Todoist – Guides | Todoist Developerにあります。

 やりたいこと

特定のプロジェクトに属するタスクの優先度と日付を変更したい

Alexaを使ってTodoタスクを追加できるよう...]]></summary>
        <author>
            <name>Shinichi Ohki</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonを500文字で説明する]]></title>
        <id>https://zenn.dev/banananeko/articles/4e5c85c0dd8504</id>
        <link href="https://zenn.dev/banananeko/articles/4e5c85c0dd8504"/>
        <updated>2022-12-06T03:39:48.000Z</updated>
        <summary type="html"><![CDATA[pythonとは
pythonとはプログラミング言語の一つで
2001年に開発された言語のことで
拡張子はpyを一般的に使用する
!
他にもpycやpywやpydなどもあります


 pythonのメリット・デメリット

 メリット

コードが短い
無料
ドキュメントが豊富


 デメリット

実行速度が遅い
機械系のプログラムに弱い


 c言語との比較



比較する項目
python
c言語




実行速度
遅い
速い


コードの長さ
短い
長い


料金
無料
無料


公式ドキュメント
あり
なし




 公式サイト
公式ドキュメントやインストールなどをしたりする公式...]]></summary>
        <author>
            <name>banananeko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pydanticでdataclassを代替してもっと安全なPythonコードを楽に実現する]]></title>
        <id>https://zenn.dev/kumamoto/articles/609a0fd9a944d7</id>
        <link href="https://zenn.dev/kumamoto/articles/609a0fd9a944d7"/>
        <updated>2022-12-06T00:31:09.000Z</updated>
        <summary type="html"><![CDATA[この記事は、LAPRAS Advent Calendar 2022の6日目の記事です。
https://qiita.com/advent-calendar/2022/lapras

 0. はじめに pydanticでもっと硬いPythonコードを実現する 🐍
Lightweight LanguageであるPythonの良さの1つに「気楽に書ける」ということが挙げられると思いますが、そのカジュアルな書き味を多少捨ててでもtypeヒントやdataclass等を用いたより"硬い"コードの方が読む際の認知負荷が減って良いなぁ、と最近は思うようになってきました。
この記事では既にそのような"硬い...]]></summary>
        <author>
            <name>Kumamoto-Hamachi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[技術ブログ始めます。]]></title>
        <id>https://zenn.dev/aoyagi816/articles/272c0461f2b9c6</id>
        <link href="https://zenn.dev/aoyagi816/articles/272c0461f2b9c6"/>
        <updated>2022-12-06T00:27:46.000Z</updated>
        <summary type="html"><![CDATA[技術ブログ始めます。
今まで、機械学習や統計学を勉強してきました。これから、Unityの勉強や統計学の勉強を進めていきますので、それの紹介をしていければと思います。

 経歴
大学の学部では、数学科を出ています。
大学院で、経営学の中にあるマーケティング・サイエンスを専攻しています。
副専攻で数理統計学・データサイエンスを専攻しています。
趣味で、Unityをいじったり、VRモデリングを始めました。
苦労をした点を回顧しながら紹介しようと思います。

 これからのテーマ

機械学習
Deep Learning
計量経済学
数理統計学
Python
VRモデリング
Unity
マーケテ...]]></summary>
        <author>
            <name>Aoyagi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zero-copy deserializationとは【ChatGPTとの共著】]]></title>
        <id>https://zenn.dev/k41531/articles/32616dc9c01ee6</id>
        <link href="https://zenn.dev/k41531/articles/32616dc9c01ee6"/>
        <updated>2022-12-05T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[Wasmerの記事を読んでいる中で、Zero-copy deserializationという知らない単語が出てきたので勉強しました。
!
また、本記事はChat GPTと共同で執筆しています。基本的には私が主導で記事の内容を考えたり、参考文献をもとに記述していますが、中にはChat GPTに質問して得られた回答を元に調査した上で書いている部分もあります。
Chat GPTの言葉は使用した場合は、そのことを明記した上でチェリーピックをせずにそのままコピペしております。


 シリアライズとデシリアライズ
そもそも、シリアライズとデシリアライズとは何なのかを復習します。

 シリアライズとは...]]></summary>
        <author>
            <name>kaisei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sparse Transformerを理解したい]]></title>
        <id>https://zenn.dev/sunbluesome/articles/5f6a86dfa1e1be</id>
        <link href="https://zenn.dev/sunbluesome/articles/5f6a86dfa1e1be"/>
        <updated>2022-12-05T16:17:20.000Z</updated>
        <summary type="html"><![CDATA[Sparse Transformerを理解したい記事です[1]。Sparse TransformerはTransformerにスパース性を導入することで、必要メモリと計算量を減らした方法です。GPT-3のような巨大なモデルにも使用されています[2]。本記事ではまず、sparse transformerで新しく導入されたfactorized self-attentionについて紹介し、次にsparse transformerについてまとめます。

 Sparse Transformerの凄いところ

省メモリなので、長い系列を扱える
計算が高速なので大規模ネットワークに使いやすい
att...]]></summary>
        <author>
            <name>sunbluesome</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dbt python modelで遊ぶ]]></title>
        <id>https://zenn.dev/ugmuka/articles/5b28cca40572e3</id>
        <link href="https://zenn.dev/ugmuka/articles/5b28cca40572e3"/>
        <updated>2022-12-05T15:25:52.000Z</updated>
        <summary type="html"><![CDATA[はじめに
!
この記事はdbt Advent Calendar 2022の6日目の記事です。

dbt python modelがリリースされたので、SQLでは実装が難しそうなmodelを考えて実装してみます。
DWHはSnowflake, 実装はpandasおよびSnowpark for pythonを用いています。

 フィボナッチ数列
SQLはforループを回すような処理は苦手なので、フィボナッチ数列を実装してみます。
import pandas as pd

def model(dbt, session):
    dbt.config(materialized = "tab...]]></summary>
        <author>
            <name>ugmuka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[opentelemetry-instrumentation-fastapi (python) からOpenTelemetryに入門する]]></title>
        <id>https://zenn.dev/taxin/articles/opentelemetry-fast-api-instrumentation-basics</id>
        <link href="https://zenn.dev/taxin/articles/opentelemetry-fast-api-instrumentation-basics"/>
        <updated>2022-12-05T15:24:37.000Z</updated>
        <summary type="html"><![CDATA[この投稿は OpenTelemetry Advent Calendar 2022 の 7 日目の記事です。
この記事は筆者が下記を行い、OpenTelemetry に入門することを目的にまとめた記事となっています。

具体的な実装をベースに OpenTelemetry の全体像を掴む

FastAPI ベースのアプリケーションで出力した Trace を Google Cloud Trace に export するところまでスコープとして実装する



opentelemetry-instrumentation-fastapi の中身を見てどのような機能を提供しているのかを把握する

実装...]]></summary>
        <author>
            <name>taxin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[hello world選手権のおまけ2]]></title>
        <id>https://zenn.dev/banananeko/articles/2ee067051bcc7f</id>
        <link href="https://zenn.dev/banananeko/articles/2ee067051bcc7f"/>
        <updated>2022-12-05T12:56:10.000Z</updated>
        <summary type="html"><![CDATA[まだhello world選手権の記事をみていないなら先に見てください
https://zenn.dev/banananeko/articles/56c102b3128a47
記事は下にちゃんとあります
ネタバレがあるのでこれで見えなくしています
ネタバレがあるのでこれで見えなくしています
ネタバレがあるのでこれで見えなくしています
ネタバレがあるのでこれで見えなくしています
ネタバレがあるのでこれで見えなくしています
ネタバレがあるのでこれで見えなくしています
ネタバレがあるのでこれで見えなくしています
ネタバレがあるのでこれで見えなくしています
ネタバレがあるのでこれで見えなくしてい...]]></summary>
        <author>
            <name>banananeko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPT+Pythonでボイスロイドとリアルタイムで音声会話できるプログラムを作った]]></title>
        <id>https://zenn.dev/akashixi/articles/303dd79264e1ff</id>
        <link href="https://zenn.dev/akashixi/articles/303dd79264e1ff"/>
        <updated>2022-12-05T12:42:11.000Z</updated>
        <summary type="html"><![CDATA[ChatGPTを試していて、想像以上に受け答えがしっかりしている印象を持ちました。入力と出力を音声に置き換えてアレクサのように応答できれば、音声ベースでAIと対話できるのでは？と思い、プログラムを作ってみました。

 作ったもの

プログラムを起動し、音声で問いかけることで音声でメッセージが返ってきます。
音声出力の方法としてボイスロイドを用いました。このツイートの例ではVOICEVOXの「春日部つむぎ」にしゃべってもらっています。

 作り方
やることはシンプルで↓のような流れになります。

音声の入力を受けつけ、なるべく正確にテキストに変換する
ChatGPTにそのテキストを送信し、...]]></summary>
        <author>
            <name>akashixi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ABC280 D - Factorial and Multiple の思い出]]></title>
        <id>https://zenn.dev/chelo/articles/151e0667146841</id>
        <link href="https://zenn.dev/chelo/articles/151e0667146841"/>
        <updated>2022-12-05T12:33:00.000Z</updated>
        <summary type="html"><![CDATA[わからされたABC280のDについて
https://atcoder.jp/contests/abc280/tasks/abc280_d
素因数分解の性質についてわからせられた良い問題でした

 公式解説｢の｣解説が知りたい人へ
私みたく、茶色の実力だと解説の文章すら理解出来ないと思う。
けんちょんさんのゴリゴリに噛み砕いてくれている解説を読もう!!
https://drken1215.hatenablog.com/entry/2022/12/05/160400

 本番中の思考

 考えたこと

倍数を考えることから、Kを素因数分解するのは間違えない

210=2\times3\t...]]></summary>
        <author>
            <name>チェロ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[diffusersでschedulerを変える方法]]></title>
        <id>https://zenn.dev/kaibaoke/articles/art7_change_diffusers_scheduler</id>
        <link href="https://zenn.dev/kaibaoke/articles/art7_change_diffusers_scheduler"/>
        <updated>2022-12-05T11:45:39.000Z</updated>
        <summary type="html"><![CDATA[どうもこんにちは。Kaibaです。
diffusersでガチャをブン回しているんですがいい加減WebUIでDAAM使ってプロンプト研究しなきゃなと思い続けています。一体いつ導入するのか。

 初めに
この記事ではdiffuserでSchedulerを変える方法について説明します。 Twitterで魔術師の方々を覗いていると度々eulerが～ddimが～みたいな話を見かけるんですが、サンプラーって何？？どうやって変えればいいの？？ っていうのがよく分からなかったのでメモとして残しておきます。ckptをdiffusers用に変換とかの情報はあったりしたんですがSchedulerを変える方法は...]]></summary>
        <author>
            <name>Kaiba</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PHPerがはじめてのPythonでつまづいたポイント8点]]></title>
        <id>https://zenn.dev/tk_tech/articles/5ac2c6db7fde59</id>
        <link href="https://zenn.dev/tk_tech/articles/5ac2c6db7fde59"/>
        <updated>2022-12-05T09:43:07.000Z</updated>
        <summary type="html"><![CDATA[PGを10年少々やっているPHPerがこのたび、初めてPythonをさわったところつまづいたポイントがいくつかあったので備忘録のためまとめていく。

 筆者(K)の普段使用している言語

PHP
JavaScript
HTML
CSS

他、数回だけど作るのにさわったことのある言語

Node.js
React


 開発環境

AWS Lambda
Python 3.9
AWS RDS (PostgreSQL)

AWSコンソールのコードエディターにて開発していく。

 開発概要

S3にアップされたExcelをGETしてちょっと編集して同一S3に別KeyでPUTする

ただこれだけ....]]></summary>
        <author>
            <name>TKTK</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Typer の基本的な使い方まとめ]]></title>
        <id>https://zenn.dev/todoker/articles/2022-typer-introduction</id>
        <link href="https://zenn.dev/todoker/articles/2022-typer-introduction"/>
        <updated>2022-12-05T07:09:56.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは。@hayata-yamamotoです。
弊社では、バッチジョブやちょっとしたコマンドライン実行を行うためのツールとして、Typerを採用しています。FastAPI と親和性が高く、使用感も類似しておりシームレスな開発体験を提供してくれています。
https://typer.tiangolo.com/
今回は、Typer の使い方をどうしても忘れてしまう私のために備忘録として、Typer の使い方をまとめたコードを共有します。
コメントに、該当するページが記載されておりますため、Typer を利用されている方々もどうぞご活用ください。

main.py
impor...]]></summary>
        <author>
            <name>株式会社トドケール</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[不均衡データ分類とundersampling + bagging、正例:負例の比率による調整]]></title>
        <id>https://zenn.dev/kn1kn1/articles/dd54a797cc1972</id>
        <link href="https://zenn.dev/kn1kn1/articles/dd54a797cc1972"/>
        <updated>2022-12-05T05:53:59.000Z</updated>
        <summary type="html"><![CDATA[概要
機械学習でクラス分類を行う際にクラス間のサンプル数に偏りがあるデータは、不均衡データ（imbalanced data）と呼ばれているが、これを扱う手法としてundersampling + baggingがあり、以下で紹介されている。
https://tjo.hatenablog.com/entry/2017/08/11/162057
本稿では、undersampling + baggingを試し、undersamplingの際に正例:負例の比率を操作して検知性能の調整を試してみた。

 undersampling + bagging
undersampling + baggin...]]></summary>
        <author>
            <name>kn1kn1</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】積み上げ棒グラフを作成する方法について【備忘録】]]></title>
        <id>https://zenn.dev/siganai/articles/20221204_stack_bar_graph</id>
        <link href="https://zenn.dev/siganai/articles/20221204_stack_bar_graph"/>
        <updated>2022-12-04T13:58:11.000Z</updated>
        <summary type="html"><![CDATA[matplotlibによる積み上げ棒グラフの作成方法について備忘録としてまとめる．
使用言語はPython．
本記事中で例示するために使用したコードは，ここからダウンロード可能．

 方法
matplotlibのbar()を使用し棒グラフを作成する際に，引数bottomを指定することで積み上げ棒グラフを作成することが可能．
実際のコードを以下に示す．

 インストール方法

terminal
pip install matplotlib
pip install numpy


 実際の使用例
ここでは例として，numpyのrandom関数を使用して1~10の範囲内でランダムに要素を作成し...]]></summary>
        <author>
            <name>SiganAI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPTにChatGPTのことやAPIでの使い方を教えてもらう]]></title>
        <id>https://zenn.dev/t_shunsuke/articles/879209568ae6bb</id>
        <link href="https://zenn.dev/t_shunsuke/articles/879209568ae6bb"/>
        <updated>2022-12-04T12:09:52.000Z</updated>
        <summary type="html"><![CDATA[0. 概要
ここ数日間界隈の話題をさらっているChatGPTについて、そもそもこれが何であるのか、あるいはAPI利用方法をChatGPT自信に教えてもらうという内容です。2022/12/04現在、自作アプリケーションに組み込む場合に、（こういうhack？を抜きに）ChatGPTを直接的に叩くようなAPIは用意されていない一方で、代わりにGPT-3等のモデルを使えるOpenAI提供のAPIがあるようで、その使用例も書きます。本稿の記述及びChatGPTの応答に嘘が含まれる可能性が多分にある為、誤りをご指摘いただけると幸いです。

 1. ChatGPTをざっくり理解する
まずはジャブ。...]]></summary>
        <author>
            <name>t_shunsuke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでグラフ画像を作成して、Slackに通知する with AWS]]></title>
        <id>https://zenn.dev/hirokisakabe/articles/ade6da9ca80a40</id>
        <link href="https://zenn.dev/hirokisakabe/articles/ade6da9ca80a40"/>
        <updated>2022-12-04T11:46:13.000Z</updated>
        <summary type="html"><![CDATA[はじめに
わたしはちょっとしたグラフ画像を作成するときに、よく Python を使います。
その作成や、完了した旨の通知を Lambda で実現できれば、楽だなあと思っていました。
今回は、それに取り組みます。

 コードに関する情報

 実行環境

Python 3.9.15
Pipenv version 2022.11.11
Node.js v18.11.0
Docker

Node.js は AWS CDK 用、Docker は Lambda コンテナイメージのビルド用です。
Python が 3.9 系なのは、2022/12 時点で、lambda/python イメージの最新...]]></summary>
        <author>
            <name>Hiroki SAKABE</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonでクラメール連関係数を計算する]]></title>
        <id>https://zenn.dev/ohrzw/articles/a9a818e71c3278</id>
        <link href="https://zenn.dev/ohrzw/articles/a9a818e71c3278"/>
        <updated>2022-12-04T03:03:50.000Z</updated>
        <summary type="html"><![CDATA[クラメール連関係数とは？
「カテゴリーデータ」と「カテゴリーデータ」との間の関連の強さを示す相関係数．
期待度数を算出し，実測度数と一致していれば関係がなく，一致していなければ関係があるという考え方に基づいている．

 とりあえず手っ取り早く結果を得たい場合のcode
 import numpy as np
 import pandas as pd
 
 df = pd.DataFrame()
 
 ### 関数
 def cramersV(x, y):
     table = np.array(pd.crosstab(x, y)) #クロス集計
     n = table.su...]]></summary>
        <author>
            <name>ブログ初心者</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPTをコマンドラインから使うためのCLIツールを作る]]></title>
        <id>https://zenn.dev/ryo_kawamata/articles/2269fc3ad0d375</id>
        <link href="https://zenn.dev/ryo_kawamata/articles/2269fc3ad0d375"/>
        <updated>2022-12-04T01:41:05.000Z</updated>
        <summary type="html"><![CDATA[ChatGPT を使用するための準備
まず、ChatGPT を使用するために必要な Python ライブラリをインストールします。最新の ChatGPT は Python3.6 以降をサポートしており、次のコマンドを使用して必要なライブラリをインストールできます。
pip install openai

 ChatGPT を使用する Python スクリプトの作成
次に、Python スクリプトを作成して、ChatGPT を初期化し、コマンドラインから文を入力して問い合わせるための CLI ツールを作成します。
import openai
import os

openai.api_...]]></summary>
        <author>
            <name>ryo_kawamata</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[botter のための開発環境 2022 (Dev Containers)]]></title>
        <id>https://zenn.dev/mtkn1/articles/a455bb8732e52e</id>
        <link href="https://zenn.dev/mtkn1/articles/a455bb8732e52e"/>
        <updated>2022-12-03T22:00:01.000Z</updated>
        <summary type="html"><![CDATA[この記事は 仮想通貨botter Advent Calendar 2022 4 日目の記事です。
こんにちは、まちゅけん (@MtkN1XBt) です！
今回は VS Code の「Dev Containers」機能と「GitHub Codespaces」というサービスを用いて仮想通貨 bot の開発に適した環境構築の方法をご紹介していきます 🚀

 ✨ ソリューション

🤔 bot 作りたいけどそもそも環境構築も何も分からない ...

✅ 全て自動で環境を構築できる


🤔 新しい開発環境を構築したいが、今の環境を壊したくない ...

✅ 今の環境とは別に新しい環境を簡単に作ったり...]]></summary>
        <author>
            <name>まちゅけん</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LINEでChatGPTを使えるようにしてみる]]></title>
        <id>https://zenn.dev/nixo/articles/267e4cabe6db68</id>
        <link href="https://zenn.dev/nixo/articles/267e4cabe6db68"/>
        <updated>2022-12-03T18:35:38.000Z</updated>
        <summary type="html"><![CDATA[最近話題のOpenAIのChatGPT、毎回ウェブサイトから使うのは面倒だし、誤送信してしまって使いにくいので今回はLINEで使えるようにしてみようと思う。
ちなみに金かかります。数円。多分。
今回はPython+FastAPI+LINESDK+OpenAIで作っていきます。
めちゃ簡単です。

 コード
まずはコード、こういう系の記事は結局コードしか見ないのに毎回下の方まで行くのダルいので良心的な僕は最初にコードを載せておきます。
import os
import openai
from fastapi import FastAPI, Request
from linebot impo...]]></summary>
        <author>
            <name>二宮 貫</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google Colab から Pleasanter に接続しようとしたらできなかったので JupyterNotebook でなんとかした]]></title>
        <id>https://zenn.dev/ulpianus/articles/b7c1ff386197fa</id>
        <link href="https://zenn.dev/ulpianus/articles/b7c1ff386197fa"/>
        <updated>2022-12-03T17:10:09.000Z</updated>
        <summary type="html"><![CDATA[2022 個人アドベントカレンダー の記事です。

 課題感

Excel 帳票やめよう

DX とかってバズワードはいいから業務をクラウドネイティブに改めるんだ


とはいっても Excel 出したいらしい
それできるよ Python ならね

Colab でやれば環境お手軽では




 試したこと

Google Colab から demo.pleasanter.org に繋げなかった
Jupyter Notebook をコンテナで起動して Excel 帳票出力


 Colab

証明書のエラー

普通に requests.post すると ↓ なる

SSLCertVerifi...]]></summary>
        <author>
            <name>ulpianus</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[M1 MacBook Pro (2021) で Stable Diffusion を動かす]]></title>
        <id>https://zenn.dev/zozotech/articles/2a958e8626b064</id>
        <link href="https://zenn.dev/zozotech/articles/2a958e8626b064"/>
        <updated>2022-12-03T15:01:00.000Z</updated>
        <summary type="html"><![CDATA[!
これは ZOZO Advent Calendar 2022 カレンダー Vol.1 の 4 日目の記事です。昨日の投稿は @yokawasa さんの「超簡単 kubectlで取得するカスタムリソースの表示項目をカスタマイズする方法」でした。

!
本エントリーは 2022/11 末時点で書き終えていたものです。そのため 2022-12-01 にリリースされ Core ML に最適化した macOS Ventura 13.1 Beta 4 への言及はなく、Apple が GitHub で公開している apple/ml-stable-diffusion で Stable Diffusio...]]></summary>
        <author>
            <name>HEAVEN chan / ikkou</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[施設名と地名の差をみつける]]></title>
        <id>https://zenn.dev/shimat/articles/13ba2341f776e5</id>
        <link href="https://zenn.dev/shimat/articles/13ba2341f776e5"/>
        <updated>2022-12-03T15:01:00.000Z</updated>
        <summary type="html"><![CDATA[「ゆるWeb勉強会@札幌 2022年アドベントカレンダー」の4日目の記事です。Webなのか怪しいですけど・・・。
https://adventar.org/calendars/7513

 ネタ
お店の名前やマンション名などに地名が入っていることは珍しくないと思いますが、特に有名だったりブランドがある地名だと、住所上の範囲を超えてその地名を名乗っている例を見かけませんか？
アドベントカレンダー的に例を札幌ローカルに激しく寄せて行きますが、例えば「北5条手稲通(旧5号線)」では、南側が宮の森、北側が二十四軒というエリアがあります。宮の森はブランド力の高い地名とされています（たぶん）。そのた...]]></summary>
        <author>
            <name>shimat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bytewax触ってみた]]></title>
        <id>https://zenn.dev/notrogue/articles/7897cc7ecdac79</id>
        <link href="https://zenn.dev/notrogue/articles/7897cc7ecdac79"/>
        <updated>2022-12-03T10:44:13.000Z</updated>
        <summary type="html"><![CDATA[気にはなってるけど触ってないビッグデータ系のツール・サービスを触る Advent Calendar 2022の#3です。

 tl;dr

Pythonで動くストリーミングエンジンだよ
Kubernetesの上でも動くよ
正直、エコシステム・機能的にはSpark・Flinkよりもまだ少なそうだよ


 Bytewaxとは
Pythonで動く分散・ストリーミングエンジンです。公式ページ曰く、

Bytewax is an open source Python framework for building real-time applications with streaming data....]]></summary>
        <author>
            <name>notrogue</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonからRailsのSidekiqを実行する方法]]></title>
        <id>https://zenn.dev/kose_atsuya/articles/ad4fa93baa7e4c</id>
        <link href="https://zenn.dev/kose_atsuya/articles/ad4fa93baa7e4c"/>
        <updated>2022-12-03T02:54:48.000Z</updated>
        <summary type="html"><![CDATA[はじめに
※この記事は IVRy Advent Calendar 2022  の3日目の記事として記載しています。
こんにちは。電話自動応答サービスIVRyでエンジニアをやっている小瀬です。
IVRyのアドベントカレンダー３日目を担当させていただきます！
https://qiita.com/advent-calendar/2022/ivry
IVRyではRailsを中心にバックエンドのコードを書いています。
https://ivry.jp/
開発中に溜まった知見などをzennブログの方に書いていこうと思っていますので、よろしくお願いします。今日はSidekiqに関する簡単な記事です。...]]></summary>
        <author>
            <name>kose_atsuya</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[チームワーキングのプロダクティビティをインクリメントする意識の高いdiscord bot]]></title>
        <id>https://zenn.dev/chan_yu1224/articles/0d51c931bed175</id>
        <link href="https://zenn.dev/chan_yu1224/articles/0d51c931bed175"/>
        <updated>2022-12-02T22:00:01.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは。NAIST Advent Calendar 2022の3日目担当の人です。
今回はdiscordのvoice channel上でチーム作業を行う人たち向けのbotを制作したので、記事に残しておこうと思います。
本当はFairseq（深層学習フレームワーク）の内部実装の記事を書きたかったけどニッチすぎたのでやめた。また別の機会に投稿します。

 botの仕様
discordって、channel内の人がvoice channelに入っても通知が来ないんですよね。なので、誰かがvoice channelに入った際に通知が届くと幸せになる人は多いと思うんです。
あと、も...]]></summary>
        <author>
            <name>Yuchn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django Ninja を使って Web API を作る]]></title>
        <id>https://zenn.dev/chanmoro/articles/b980d8fa681362</id>
        <link href="https://zenn.dev/chanmoro/articles/b980d8fa681362"/>
        <updated>2022-12-02T18:20:33.000Z</updated>
        <summary type="html"><![CDATA[こんにちは！LARPAS 株式会社でプロダクトマネージャーをしている Chanmoro ともうします🙋‍♂️
https://lapras.com/public/chanmoro
これは LAPRAS Advent Calendar 2022の3日目の記事です📖
https://qiita.com/advent-calendar/2022/lapras
最近は飲み歩き系 YouTuber を見るのが好きになり、その影響でこれまで全く興味がなかったもつ焼き屋さんで飲むのに突然ハマってしまいまして、近所のもつ焼き屋開拓にいそしんでおります。
もつ焼きとビールの組み合わせは最高ですね。 (糖質...]]></summary>
        <author>
            <name>Chanmoro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Heroku]10種類のWebフレームワークでCloud Native Buildpacks(ActivityPub)]]></title>
        <id>https://zenn.dev/tkithrta/articles/f5652e678fc296</id>
        <link href="https://zenn.dev/tkithrta/articles/f5652e678fc296"/>
        <updated>2022-12-02T17:14:48.000Z</updated>
        <summary type="html"><![CDATA[Intro
Herokuの無償プランが廃止になり、Fly.ioやRailwayのような類似サービスへ移行した人も多いのではないのでしょうか。
私はFly.ioに移行するだけではなく、公開している10種類のWebフレームワークでActivityPub実装を行うプロジェクト「StrawberryFields」がHerokuに対応しているため、無償プランが廃止になった後もHerokuに対応するサポートを続けようか悩みました。
https://acefed.gitlab.io/strawberryfields
https://zenn.dev/tkithrta/articles/78b203...]]></summary>
        <author>
            <name>黒ヰ樹</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[画像生成AIのプロンプトをColabから自動でNotionに保存してみた話]]></title>
        <id>https://zenn.dev/kaibaoke/articles/a4b28dd0dd251c</id>
        <link href="https://zenn.dev/kaibaoke/articles/a4b28dd0dd251c"/>
        <updated>2022-12-02T13:54:49.000Z</updated>
        <summary type="html"><![CDATA[こんにちは。Kaibaです。最近は画像生成AIで性癖探求の旅に出ています。
怠惰でAutomatic1111に手を出せてないんですが絶対使った方が良い絵を出せるんだろうなぁとTwitterを眺めています。

 なんの記事？
プロンプト（呪文）の研究時にColabの出力からNotionに一々画像とプロンプトをコピペするの怠いなと思って自動化してみました。もはやコピペすら面倒くさがる怠惰の極み。
以下のような知見を求める人には役に立つと思います。

Colab(or Python)からNotionのAPIを叩きたい人
NotionのAPIがImageBlockに直接画像をアップロードさせてく...]]></summary>
        <author>
            <name>Kaiba</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Condaコマンドまとめ]]></title>
        <id>https://zenn.dev/yutabeee/articles/134075b3a842a3</id>
        <link href="https://zenn.dev/yutabeee/articles/134075b3a842a3"/>
        <updated>2022-12-02T10:35:55.000Z</updated>
        <summary type="html"><![CDATA[conda環境の作成
conda create --name <環境名> python=<バージョン>
% conda create --name py36 python=3.6

 仮想環境の有効化、切り替え
conda activate <環境名>
% conda activate py36
※環境名を省略した場合baseが起動する。

 Conda環境の終了
conda deactivate
% conda deactivate

 パッケージのインストール
conda install <パッケージ名>
% conda insta...]]></summary>
        <author>
            <name>yutabeeee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dockerのコンテナでPythonの開発環境を作る]]></title>
        <id>https://zenn.dev/daifukuninja/articles/53e1a312ce98ee</id>
        <link href="https://zenn.dev/daifukuninja/articles/53e1a312ce98ee"/>
        <updated>2022-12-01T18:07:59.000Z</updated>
        <summary type="html"><![CDATA[pyenvなんていらなかった
下記リポジトリに最低限のファイルをまとめてみましたので、ご活用いただければ幸いです。
https://github.com/daifukuninja/devcontainer-python
リポジトリをcloneし、VSCodeでReopen in Containerするだけで、Pythonが開発可能なdevcontainerが起動します。
以下、蛇足ですが説明です。

 前提
VSCodeや拡張機能のインストール、Dockerの導入などは済んでいることが前提となります。VSCode Remoteの導入については下記の公式記事などを適宜ご覧ください。
h...]]></summary>
        <author>
            <name>daifukuninja</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ColabでインタラクティブなUIを使う方法]]></title>
        <id>https://zenn.dev/kaibaoke/articles/c5f193f60803b9</id>
        <link href="https://zenn.dev/kaibaoke/articles/c5f193f60803b9"/>
        <updated>2022-12-01T15:02:54.000Z</updated>
        <summary type="html"><![CDATA[こんにちは。Kaibaです。最近画像生成AIにどハマりしてColabに課金してしまい、ちょっと後悔してます。でもかわいい女の子には抗えなかった。

 概要
Google Colaboratoryで出力欄にボタンなどインタラクティブなUIを配置し、ユーザーのアクションに応じて処理を行う方法です。この記事では以下の二つについてまとめます。他にもありそう。

JavascriptをColabのコードセルに埋め込んでブラウザで実行
ipywidgetのButtonを使ってColabのランタイムで実行


 Javascriptを記述してボタンを生成する
こちらやこちらを参考にしました。他にもCo...]]></summary>
        <author>
            <name>Kaiba</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPTで遊んでみた！]]></title>
        <id>https://zenn.dev/riya_amemiya/articles/07a332d95eec6e</id>
        <link href="https://zenn.dev/riya_amemiya/articles/07a332d95eec6e"/>
        <updated>2022-12-01T12:59:53.000Z</updated>
        <summary type="html"><![CDATA[はじめに
修正や追加等はコメントまたはGitHubで編集リクエストをお待ちしております。
Twitterで何やらヤバそうなAIを見つけたので紹介します。
https://chat.openai.com/chat

 本題
とりあえず前回のAI Programmerの記事と同じことを聞いてみます。
https://zenn.dev/riya_amemiya/articles/db4fb02ecf57a6

 偏差値を求める
Me:Pythonの偏差値を求めるプログラムを書いてください。
AI:偏差値は、元の値から平均値を引いた値を、標準偏差で割った値です。Pythonでは、標準ライブラ...]]></summary>
        <author>
            <name>Riya Amemiya</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ANSI artをつくろう]]></title>
        <id>https://zenn.dev/yktakaha4/articles/how_to_make_ansi_art</id>
        <link href="https://zenn.dev/yktakaha4/articles/how_to_make_ansi_art"/>
        <updated>2022-11-30T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[この記事は、LAPRAS Advent Calendar 2022の1日目の記事です
https://qiita.com/advent-calendar/2022/lapras

LAPRAS 株式会社でSREをしているyktakaha4と申します 🐧
本当は仕事関係のアウトプットをしようと思っていたのですが、直近で思ったより色々とやっていたので、今回は趣味的な話にしようと思います
普段の仕事っぽい話もよければご覧ください
https://zenn.dev/yktakaha4/articles/synthetic_monitoring_with_ur_and_tf
https://spe...]]></summary>
        <author>
            <name>Yuuki Takahashi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[整数計画ソルバーが実行毎に異なる最適解を出力する謎を解け！]]></title>
        <id>https://zenn.dev/umepon/articles/27b28119bb4d9c</id>
        <link href="https://zenn.dev/umepon/articles/27b28119bb4d9c"/>
        <updated>2022-11-30T15:00:01.000Z</updated>
        <summary type="html"><![CDATA[はじめに
この記事は数理最適化Advent Calender 2022の1日目の記事です．

 複数の最適解を持つ最適化問題
最適化問題が複数の最適解を持つ場合には，整数計画ソルバーは最適解を１つ出力してくれます．ところが，Pythonから整数計画ソルバーを繰り返し実行するとその度に異なる最適解を出力することがあります．「複数の最適解を持つ問題なんて重箱の隅をつつくようなレアケースじゃないか？」と突っ込む方もいるかと思いますが，シフトスケジューリングや時間割作成など割当問題を雛形とする現実問題ではしばしば生じる状況です．
例えば，以下の簡単な割当問題を考えましょう．m人の作業員にn個...]]></summary>
        <author>
            <name>Umepon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[二項分布の正規近似 De Moivre-Laplace theorem]]></title>
        <id>https://zenn.dev/shundeveloper/articles/4b331a06ca88c0</id>
        <link href="https://zenn.dev/shundeveloper/articles/4b331a06ca88c0"/>
        <updated>2022-11-30T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[この記事は英語版wikipedia「De Moivre–Laplace theorem」の解説を行う. すなわち, 二項分布の正規近似について取り扱う. 一方で二項分布の期待値・分散などの基本的性質については記事では触れない.
二項分布の基本的な性質および証明については「二項分布の期待値と分散, 最尤推定, 可視化」という記事で扱ったので適宜参照されたい.

 ド・モアブル-ラプラスの定理

 定理
二項分布に従う確率変数 X を定義する. このとき n \to \inftyにおいて, 近似的に以下が成り立つ.

\begin{align*}
\frac{X-np}{\sqrt{npq}...]]></summary>
        <author>
            <name>ShunDev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Discordライブラリのpycordでボイスチャンネルの録音]]></title>
        <id>https://zenn.dev/maguro_alterna/articles/4b8967d4c90b89</id>
        <link href="https://zenn.dev/maguro_alterna/articles/4b8967d4c90b89"/>
        <updated>2022-11-30T07:31:24.000Z</updated>
        <summary type="html"><![CDATA[本稿は9月にQittaに投稿したものと同様のものです。
DiscordAPIには音声を録音する機能があります。
ですがDiscord.pyではプライバシーの面で実装されておらず、Discord.jsは頻繁に変更が施されるため、簡単に録音できる手段は確立されていませんでした。
そんな中で22年3月、Discord.pyの派生ライブラリ、pycordに録音機能が実装されました。
日本語での解説が見当たらなかったので、ここで説明します。

 環境
python 3.8.6 64bit(ここに関しては3.10とかでも問題なし)

pipインストール
pip install discord
pip...]]></summary>
        <author>
            <name>マグロ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[fish shellのM1 MacにPython + pyenvをインストールする]]></title>
        <id>https://zenn.dev/lightkun/articles/fc85ec0b0d3986</id>
        <link href="https://zenn.dev/lightkun/articles/fc85ec0b0d3986"/>
        <updated>2022-11-30T00:24:18.000Z</updated>
        <summary type="html"><![CDATA[M1 MacでPython + pyenvをインストールしたメモです。

 環境
(そろそろOSのバージョン上げないとなぁ。。。)
機種 : MacBook Pro 2021(M1 Max)
キーボード : USキーボード
OS : Monterey(12.2.1)
fish shell version : 3.5.1

 pyenvをインストールする
https://github.com/pyenv/pyenv#installation
READMEを見ながらやっていきます。
$ brew update
$ brew install pyenv
インストールが終わったらREADMEの通...]]></summary>
        <author>
            <name>lightkun</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python x DDD x Clean Architecture]]></title>
        <id>https://zenn.dev/koei_kaji/articles/f2d70a662cbe45</id>
        <link href="https://zenn.dev/koei_kaji/articles/f2d70a662cbe45"/>
        <updated>2022-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
PythonでDDDでクリーンアーキテクチャで実装してみました。
良くも悪くも、"Pythonでは"あまりネット上で見かけない構成になったので共有しようと思います。
つくったものは、めちゃ簡単なTodoアプリです。
https://github.com/koei-kaji/ddd-clean-architecture-python

 経緯

DDDについて全く知らないので、とりあえずPythonで軽量DDDやってみよう
ついでにクリーンアーキテクチャも全く知らないのでコレもやろう

という軽い気持ちで始めました。

 参考
nrslibさんの記事を最も参考にさせていただき...]]></summary>
        <author>
            <name>KoeiK</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OpenCV] 黒目の位置でマウスをスクロールするアプリを作ってみた]]></title>
        <id>https://zenn.dev/htanos/articles/3e57acbc035ae0</id>
        <link href="https://zenn.dev/htanos/articles/3e57acbc035ae0"/>
        <updated>2022-11-29T21:41:34.000Z</updated>
        <summary type="html"><![CDATA[つくったもの
https://github.com/tanomitsu2002/opencv-eyetrack-scroll
目の位置をリアルタイムでトラッキングし、左を向いていたら下、右を向いていたら上にスクロールするアプリです。
セットアップの方法や実行方法はGithubにあるREADME.mdを参照してください。
README.mdにしたがって実行し、目を左右に動かすとマウスの上下スクロールが入力されます。

 使ったパッケージ

opencv-python
dlib
pynput


 参考
https://towardsdatascience.com/real-time-e...]]></summary>
        <author>
            <name>Tano</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[10進100億桁の円周率を2進数にしてみようと思ったはなし。]]></title>
        <id>https://zenn.dev/taroh/articles/38a8855a894fec</id>
        <link href="https://zenn.dev/taroh/articles/38a8855a894fec"/>
        <updated>2022-11-29T14:44:15.000Z</updated>
        <summary type="html"><![CDATA[また円周率かよ。
ってかあまり円周率には関係ない (かもしれない) ぷちネタであるが。多倍長精度固定小数点の10進数を2進数に変換しようとしてハマったはなしです。

 2進表現の円周率がほしい (べつに要らんけど)
円周率100億桁を自力で求めてみた。まあこれとて、Python + gmpy2の無限多倍長精度の整数演算を使って、固定小数点的に求めてみたわけであるが……最後の結果の確認をするためにも、そして自己満足喜びに浸るためにも、10進数での表現が必須である。すなわち『3.141592...』とあるとひとは誰でも「あ、円周率だ!!」と言ってくれるが、『0x3.243f6a...』を見せ...]]></summary>
        <author>
            <name>taroh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[円周率100億桁の出力]]></title>
        <id>https://zenn.dev/taroh/articles/9f165fa9cb0335</id>
        <link href="https://zenn.dev/taroh/articles/9f165fa9cb0335"/>
        <updated>2022-11-29T14:41:33.000Z</updated>
        <summary type="html"><![CDATA[円周率100億桁を自作のPythonプログラムで求めた。となると、次の欲求は。
円周率100億桁をこの目でみてみたい。
というわけで、いろいろやってみた記録である。
※ 2022. 11月末現在……試行錯誤中。

 円周率100億桁をどうやって見るか
円周率100億桁のあたまと終わりは、チャレンジのページにも掲載したが、円周率を100億桁求めたら、ひとは頭の何桁かと、あとわかっている場合 (世界記録とかではなく、リファレンスもある場合)、末尾の何桁かを確認して、「ふぅ♡」と満足するのが普通だろう。おそらく、大抵のひとにとって『7億6654万2310桁目』とか『68億0327万9912桁目...]]></summary>
        <author>
            <name>taroh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonリストに使える関数]]></title>
        <id>https://zenn.dev/pienthon/articles/92058c0da2a93e</id>
        <link href="https://zenn.dev/pienthon/articles/92058c0da2a93e"/>
        <updated>2022-11-29T14:34:12.000Z</updated>
        <summary type="html"><![CDATA[append：最後に要素を足す
list.append(5)

 clear：空のリストにする
list.clear()
copy

 count：要素の個数を数える
list.count(5)

 extend：リストをくっつける
list = llist1.extend(list2)

 index(要素,検索開始位置)：要素からインデックス取得
list.index(3)

 insert(インデックス,要素)：インデックスの位置に要素を追加
list.(2,10)

 pop：最後の要素を消すor指定インデックス要素を消す
※要素でなくインデックスを指定する
list.pop...]]></summary>
        <author>
            <name>にゃーん(Pienthon)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[returnの仕組み]]></title>
        <id>https://zenn.dev/joo_hashi/articles/28b899f8efd048</id>
        <link href="https://zenn.dev/joo_hashi/articles/28b899f8efd048"/>
        <updated>2022-11-29T11:43:44.000Z</updated>
        <summary type="html"><![CDATA[return value logic
仕事で、FlaskとDashというPythonのフレームワークとライブラリを使っていて、ハマったことがあった!
それは、以前作られたソースコードを参考に入力機能を作っていたときに、debugして知ったんだけどreturnをプログラムの終わりに書いて実行したら、あれなんで1箇所しか実行されないんだ?
そんなエラーにハマった😇

 入力フォームを例にやってみる
まずは、正しい例
といっても、Python仕事で使ったのは、最近なんでわかってるか怪しい😅
pythonに限ったことではないですけどね。
nameという変数に値が入ってないので、if文が実行さ...]]></summary>
        <author>
            <name>JboyHashimoto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS Lambdaのローカル開発環境を構築する]]></title>
        <id>https://zenn.dev/yukikaoru/articles/aws-lambda-for-local</id>
        <link href="https://zenn.dev/yukikaoru/articles/aws-lambda-for-local"/>
        <updated>2022-11-29T10:33:15.000Z</updated>
        <summary type="html"><![CDATA[AWS Lambdaのローカル開発環境を構築する
AWS LambdaではコンテナによるデプロイのためにDockerコンテナイメージが用意されており、それを利用してDev Container環境を構築します。 
ここではPythonをランタイム言語として利用します。
参考資料

Lambdaコンテナイメージの作成
Lambdaコンテナイメージをローカルでテストする


 コンテナイメージを作成する
代替ベースイメージからのイメージの作成 にあるDockerfileを参考に進めます。
これに次の追加の変更を行います。

ローカルでのテストを実現するために Runtime Interfa...]]></summary>
        <author>
            <name>yukikaoru</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[これからはじめるdiscord.py(仮)]]></title>
        <id>https://zenn.dev/yaakiyu_s/books/discord_py_starter</id>
        <link href="https://zenn.dev/yaakiyu_s/books/discord_py_starter"/>
        <updated>2022-11-29T07:55:08.000Z</updated>
        <summary type="html"><![CDATA[Python初心者にもわかりやすく解説したdiscord.py入門書。]]></summary>
        <author>
            <name>yaakiyu_school</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[discord.py全集(仮)]]></title>
        <id>https://zenn.dev/yaakiyu_s/books/discord_py_master</id>
        <link href="https://zenn.dev/yaakiyu_s/books/discord_py_master"/>
        <updated>2022-11-29T07:55:07.000Z</updated>
        <summary type="html"><![CDATA[discord.pyに関することを隅々まで集めた最高の一冊。]]></summary>
        <author>
            <name>yaakiyu_school</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pyenvとvenvのチートシート]]></title>
        <id>https://zenn.dev/shoseisan/articles/23d6ffe6a6eca4</id>
        <link href="https://zenn.dev/shoseisan/articles/23d6ffe6a6eca4"/>
        <updated>2022-11-29T05:52:24.000Z</updated>
        <summary type="html"><![CDATA[きっかけ
私はPythonのバージョン管理をpyenvとvenvで行っているのだが、新しい環境を作るたびに方法をググるのが疲れたのでまとめたくなった。

 pyenv

 pyenvの役割
主にpythonのバージョンを管理する

 主な使い方

 インストールできる環境の確認
pyenv install --list

 新しい環境のインストール
pyenv install [pythonのバージョン]
例：pyenv install 3.11.0

 インストール済みの環境の確認
pyenv versions

 バージョンの切り替え
pyenv global 3.6.1

 v...]]></summary>
        <author>
            <name>書生</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Barrett Reduction]]></title>
        <id>https://zenn.dev/converghub/articles/c81afdc0b669a1</id>
        <link href="https://zenn.dev/converghub/articles/c81afdc0b669a1"/>
        <updated>2022-11-29T02:12:32.000Z</updated>
        <summary type="html"><![CDATA[Barrett Reduction (1)

 はじめに
モジュラー演算で高速に処理したい事案が出てきたので備忘録として残します。
メモ程度なので細かい記載は順次追加していく予定です。

a \cdot b \,\, \bmod q


w = K = \lceil \log_2(q) \rceil


\mu = \left\lfloor \frac{2^{2K}}{q} \right\rfloor 

ここで、除算される数のビット長を L とすると、法とする数のビット長 K に対して下式を満たすとき、バレットリダクションの近似計算結果は、厳密に計算したものと一致する。

0 \l...]]></summary>
        <author>
            <name>converghub</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gRPCの4つの通信方式をPythonでやってみる]]></title>
        <id>https://zenn.dev/kumamoto/articles/0596ed47f33965</id>
        <link href="https://zenn.dev/kumamoto/articles/0596ed47f33965"/>
        <updated>2022-11-29T00:55:28.000Z</updated>
        <summary type="html"><![CDATA[gRPCの4つの通信方式の理解を深めるため実際に実装を行っていきます。
既にGo言語で書かれた記事が多くあったので本記事ではPythonで進めていきます。
コードはGitHubのKumamoto-Hamachi/rpc_practiceのzenn-articleブランチ側に今回の記事のコードを上げています。またmainブランチには発展的な内容として複数Servicerがある場合のコードも上げてあります。
本記事ではクライアント側の実装も行っていきますが、実際の開発でgRPCの動作確認をする際にはevansやBloomRPC等のツールを利用するのが楽なのでオススメです。
※evansやBl...]]></summary>
        <author>
            <name>Kumamoto-Hamachi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CodilityのLessonをやってみる（9-16）]]></title>
        <id>https://zenn.dev/paraches/articles/codility_lesson_9_16</id>
        <link href="https://zenn.dev/paraches/articles/codility_lesson_9_16"/>
        <updated>2022-11-28T09:56:04.000Z</updated>
        <summary type="html"><![CDATA[前回の続き。
今回はLesson 9〜16までのeasyをやって行きます。

 リポジトリ
https://github.com/paraches/codility_lessons

 Lesson 9 Maximum slice problem
最大スライス問題

 MaxProfit
https://app.codility.com/programmers/lessons/9-maximum_slice_problem/max_profit/

 問題
配列AにはN個の整数が含まれている。これには連続したN日分の株価が収められている。
0<=P<Q<Nの時、P日に買...]]></summary>
        <author>
            <name>paraches</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[sklearn-onnxで、RandomForestClassifierの出力がboolのときにエラーになる件]]></title>
        <id>https://zenn.dev/kn1kn1/articles/48a2aeb34a2037</id>
        <link href="https://zenn.dev/kn1kn1/articles/48a2aeb34a2037"/>
        <updated>2022-11-28T04:13:24.000Z</updated>
        <summary type="html"><![CDATA[概要
表記の件でワークアラウンドコードを書いて回避したので、その備忘録。

 事象
以下のようなコードで、ランダムフォレストの学習モデルをONNXに変換しようとしたところ、AttributeError: 'numpy.bool_' object has no attribute 'encode'  のエラーが発生した。
from sklearn.ensemble import RandomForestClassifier

classifier = RandomForestClassifier(
    n_estimators = 5,
    random_state = 42,...]]></summary>
        <author>
            <name>kn1kn1</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【ansible】ファイルの先頭行に文字列を追加するplaybookの例]]></title>
        <id>https://zenn.dev/ryurock/articles/qiita-20151127-4c560143134121905328</id>
        <link href="https://zenn.dev/ryurock/articles/qiita-20151127-4c560143134121905328"/>
        <updated>2022-11-28T02:37:28.000Z</updated>
        <summary type="html"><![CDATA[きっとansibleに限らずなんだけども設定ファイルなどでファイルの先頭行に文字列を追加したい時があると思う。
(設定ファイルの設定の順番で挙動で変わるものとか)
今まではCentOSであんまり気にしなかったけどもどうやらOSXではうまく行かなかったのでその時のメモ
そして@urauraさんのやり方が一番シンプルだったことに気づいた・・・・

 環境

Mac OSX Yosemite(10.10.5)

python 2.7.10

ansible 1.9.4






 ファイルの先頭行に文字列を追加するplaybook
~/.zshrc に挿入したい文字列が存在しなければ .zs...]]></summary>
        <author>
            <name>ryurock</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【ansible】僕がansibleを書くときに気をつけている事]]></title>
        <id>https://zenn.dev/ryurock/articles/qiita-20151126-5231aa038acef2732e90</id>
        <link href="https://zenn.dev/ryurock/articles/qiita-20151126-5231aa038acef2732e90"/>
        <updated>2022-11-28T02:37:28.000Z</updated>
        <summary type="html"><![CDATA[昔のバージョンに比べて大分便利(自分の書き方が古く)になってきたので、自分のdotfileの管理をansibleに切り替えて色々触ってみた時のメモ

 環境

Mac OSX Yosemite(10.10.5)

python 2.7.10

ansible 1.9.4






 参考にしたサイト

Ansible-docs Best Practices
Ansible-docs All Modules
Ansible コーディング規約 (の例)


 Best Practicesのディレクトリレイアウトは目を通す
色んなリポジトリを見ていると結構色んなディレクトリ構成でansibl...]]></summary>
        <author>
            <name>ryurock</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【ansible】強制的にchangedを発生させない方法]]></title>
        <id>https://zenn.dev/ryurock/articles/qiita-20151120-639e5f7e49d25c3b6d75</id>
        <link href="https://zenn.dev/ryurock/articles/qiita-20151120-639e5f7e49d25c3b6d75"/>
        <updated>2022-11-28T02:37:27.000Z</updated>
        <summary type="html"><![CDATA[Ansibleのshell moduleを使用してコマンド結果のみをregisterに保存しておきたい時がある
自分の場合はログインShellがzshなのかbashなのかを調べたくてこんなタスクを書いた
- name: check using shell register in file path
  shell: |
      if [ `echo $SHELL | grep -c "zsh"` -eq 1 ]; then
        echo ".zshrc"
      elif [ `echo $SHELL | grep -c "bash"` -eq 1 ]; then
 ...]]></summary>
        <author>
            <name>ryurock</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fakerを使用して日本語を含んだCSVダミーファイルを作成する方法]]></title>
        <id>https://zenn.dev/ryurock/articles/qiita-20150205-b4db10a7989603d6bf8d</id>
        <link href="https://zenn.dev/ryurock/articles/qiita-20150205-b4db10a7989603d6bf8d"/>
        <updated>2022-11-28T02:37:23.000Z</updated>
        <summary type="html"><![CDATA[CSVのダミーデータを作る場合、巷にダミー作成サイトは沢山ありますが
大概の場合は日本語に対応されていません。
そこでPythonの Faker を使用してCSVダミーデータを日本語で作成した時のメモ

 環境

OSX 10.9.5


 参考にしたサイト

fake-factoryでダミーデータ生成

joke2k/faker


 事前準備に必要なもの

python 2.6.9 (で試しました。他はわかりません・・・)
pip


 Fakerのインストール

/path/to/hoge
pip install fake-factory


 Fakerは日本語対応していません
...]]></summary>
        <author>
            <name>ryurock</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ansible-installerってのを作ってみた]]></title>
        <id>https://zenn.dev/ryurock/articles/qiita-20140226-bb412e02981168e49a2d</id>
        <link href="https://zenn.dev/ryurock/articles/qiita-20140226-bb412e02981168e49a2d"/>
        <updated>2022-11-28T02:34:54.000Z</updated>
        <summary type="html"><![CDATA[ryurock/ansible-installer
Ansibleの関係でpythonを入れる時にyyuu/pyenv-installerってのを見つけて、にゃるほどと思いansibleを入れる時も同じ要領で作っておけば楽チンだと思いまして作ってみました。
作ったばっかなので自己責任でお願いします。(キリッ!!)

 環境

osx
Linux


 注意事項

Pythonのインストールでpyenv-installerを使用しています。pyenvを既にお使いの方はpython2.6.9がインストールされますのでご注意ください。globalも2.6.9になります。


 参考にしたサイト...]]></summary>
        <author>
            <name>ryurock</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ansibleを導入したい人の為のくどきポイント]]></title>
        <id>https://zenn.dev/ryurock/articles/qiita-20131220-9cd0aee66003eba482e4</id>
        <link href="https://zenn.dev/ryurock/articles/qiita-20131220-9cd0aee66003eba482e4"/>
        <updated>2022-11-28T02:34:53.000Z</updated>
        <summary type="html"><![CDATA[Advent Calendar初参加です。
ガクガクプルプルしています。(((( ；ﾟДﾟ))))ｶﾞｸｶﾞｸﾌﾞﾙﾌﾞﾙ
プロビジョニングフレームワークの中でも比較的ユルっとフワッと始められるAnsible
でもあなたがもしDevなら導入にあたりOpsの説得が必要です。
そんなときにAnsibleの導入で謙る、ごねるネタをいくつかご紹介します。

 対象者
最近流行のプロビジョニングフレームワークを導入したい！！って方。

 でも、それって結構インフラ担当者から嫌がられる事が多いんですよね。
そりゃあ、普段あまりプログラムを書かない人達に

 「プログラムを書いて自動化できるんですよ！...]]></summary>
        <author>
            <name>ryurock</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【学生向け】Herokuをタダで使う]]></title>
        <id>https://zenn.dev/tokoroteen/articles/ae6fed0b15218b</id>
        <link href="https://zenn.dev/tokoroteen/articles/ae6fed0b15218b"/>
        <updated>2022-11-28T02:11:31.000Z</updated>
        <summary type="html"><![CDATA[1. 概要
こちらの記事の焼き直しです。
Pythonで作ったWebアプリをHeroku上でデプロイしていましたが、2022/11で無料プランが終了することとなりました。そこで、Renderに移行しようと思いましたが、無料プランでは上手く動いてくれませんでした。
色々探していたところ、学生向けに1年間有料プランをタダで使わせてくれる制度があることを発見しましたのでそちらを活用していきます。
Herokuは学生向けに$156奢ってくれるみたいです。

If you are registered with the GitHub Student Developer Pack, you ar...]]></summary>
        <author>
            <name>Tokoroteen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[コード設計]高凝集な設計を目指す]]></title>
        <id>https://zenn.dev/ryutaro_h/articles/b028995914f085</id>
        <link href="https://zenn.dev/ryutaro_h/articles/b028995914f085"/>
        <updated>2022-11-28T01:28:19.000Z</updated>
        <summary type="html"><![CDATA[初めに
エンジニアとして働き始めてから数ヶ月経ち業務に携わる中で、コード設計について学ぶ必要性があると思い、「良いコード/悪いコードで学ぶ設計入門 ―保守しやすい 成長し続けるコードの書き方」を手に取り、学んでいます。本記事はこちらを参考に書いています。
今回は 「凝集度」 について、概念と低凝集の問題点。対する高凝集にするテクニック、について取り上げます。


 前提

 凝集度とは

凝集度とは、「モジュール(クラス)内における、データとロジックの関係性の強さを表す指標です

それぞれ凝集度が高い・低いとは以下の構造を表します。


凝集度が高い(高凝集): クラス内のデータと、...]]></summary>
        <author>
            <name>Ryutaro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】データ分析に用いる指標の算出方法について【備忘録】]]></title>
        <id>https://zenn.dev/siganai/articles/20221127_statistical_index</id>
        <link href="https://zenn.dev/siganai/articles/20221127_statistical_index"/>
        <updated>2022-11-27T13:58:24.000Z</updated>
        <summary type="html"><![CDATA[データを分析する際に使用する指標の算出方法および指標が指し示す内容について備忘録としてまとめる．
使用言語はPython．
本記事中で例示するために使用したコードは，ここからダウンロード可能．
分析するデータはrandomモジュールによりランダムに作成した．

 準備
必要なライブラリをインストールする．

terminal
pip install numpy
pip install scipy


 算出方法

 分析対象のデータをランダム作成
Pythonの標準ライブラリであるrandomモジュールを使用する．
分析対象の配列targetの配列長を変数lengthで制御する．
以下に...]]></summary>
        <author>
            <name>SiganAI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonで米国CPIの時系列分析]]></title>
        <id>https://zenn.dev/welliving/articles/b24a95c498707c</id>
        <link href="https://zenn.dev/welliving/articles/b24a95c498707c"/>
        <updated>2022-11-27T09:43:55.000Z</updated>
        <summary type="html"><![CDATA[この記事について
米国CPIデータを取得するPythonのコードの記事の続きです。

 時系列モデル
差分系列を可視化します。
px.line(cpi.diff().reset_index(),
    x="DATE",
    y="CPIAUCNS"
)

変化率を可視化します。
px.line(cpi.pct_change().reset_index(),
    x="DATE",
    y="CPIAUCNS"
)

statsmodelsの状態空間モデルのUnobservedComponentを使います。
import statsmodels.api as sm
lo...]]></summary>
        <author>
            <name>Ryo YOSHI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[世界の人口データを取得するPythonのコード]]></title>
        <id>https://zenn.dev/welliving/articles/3c0a5919806907</id>
        <link href="https://zenn.dev/welliving/articles/3c0a5919806907"/>
        <updated>2022-11-27T02:43:37.000Z</updated>
        <summary type="html"><![CDATA[この記事について
United Nations(国際連合)のPopulation Division　World Population Prospectsから世界の人口データをPythonで取得します。

 Pythonのコード
zipファイルはそのままread_csvで読み込めます。
import pandas as pd

population = pd.read_csv("https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2022_TotalPopulationB...]]></summary>
        <author>
            <name>Ryo YOSHI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lambda(Python)でAurora PostgreSQL論理レプリケーションを監視して、Slackにアラート通知する]]></title>
        <id>https://zenn.dev/datahaikuninja/articles/with-lambda-monitoring-logical-replication</id>
        <link href="https://zenn.dev/datahaikuninja/articles/with-lambda-monitoring-logical-replication"/>
        <updated>2022-11-27T02:13:03.000Z</updated>
        <summary type="html"><![CDATA[概要
Lambda(Python)で以下の処理（関数）を書いたので、備忘録として記事にします。
a. pg8000を使用して、LambdaからPostgreSQLデータベースへ接続し、論理レプリケーションの統計情報を取得する

b. boto3を使用して、LambdaからCloudWatch Logsにクエリを発行してエラーログを抽出する

c. slack_sdkを使用して、LambdaからSlackにメッセージを投稿し、スレッドにスニペット（ファイル）を追加する
Lambda(Python)あるいは、boto3でこれらの処理を書きたい人には参考になるところがあるかもしれません。
...]]></summary>
        <author>
            <name>datahaikuninja</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lambda(Python)をTerraformだけでデプロイする]]></title>
        <id>https://zenn.dev/datahaikuninja/articles/deploy-python-lambda-function-with-only-terraform</id>
        <link href="https://zenn.dev/datahaikuninja/articles/deploy-python-lambda-function-with-only-terraform"/>
        <updated>2022-11-27T02:13:03.000Z</updated>
        <summary type="html"><![CDATA[概要
Lambda関数(Python)とLambdaレイヤーをterraformだけでデプロイする方法を紹介します。

 背景

 やりたかったこと
TerraformでLambda関数(Python)とLambdaレイヤーを作成してデプロイしたい。
関数コードやレイヤー(requirements.txt)の変更をトリガーにZipアーカイブを作成し、Lambda関数およびLambdaレイヤーを最新の状態に更新したい。

 困っていたこと
Terraformのaws_lambda_functionによって、Lambda関数の各種設定を定義し、関数をデプロイすることができるが、関数コード...]]></summary>
        <author>
            <name>datahaikuninja</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[米国CPIデータを取得するPythonのコード]]></title>
        <id>https://zenn.dev/welliving/articles/69a0e38a9a2886</id>
        <link href="https://zenn.dev/welliving/articles/69a0e38a9a2886"/>
        <updated>2022-11-27T01:34:02.000Z</updated>
        <summary type="html"><![CDATA[この記事について
FREDから米国CPIデータをPythonで取得します。

 Pythonのコード
pandas_datareaderを使います。
なお、FREDのAPIを使う場合はfredapiというライブラリもあります。
import datetime
import pandas_datareader.data as web

start = datetime.datetime(1950, 1, 1)
end = datetime.datetime(2022, 10, 31)
(季節調整前)CPIを取得します。
cpi = web.DataReader('CPIAUCNS', ...]]></summary>
        <author>
            <name>Ryo YOSHI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dashについて学ぶ]]></title>
        <id>https://zenn.dev/joo_hashi/articles/9595ad9bc60bb2</id>
        <link href="https://zenn.dev/joo_hashi/articles/9595ad9bc60bb2"/>
        <updated>2022-11-25T13:38:07.000Z</updated>
        <summary type="html"><![CDATA[Dashとは何か?
Plotly社が開発したPythonのオープンソースライブラリで、React、Plotli.jsで作られているとのこと。
Pythonのコードを書くだけで、Webアプリを作ることができる。
公式ドキュメントはこちら
https://dash.plotly.com/introduction
必要なPythonのパッケージをインストールする。作るものによってPandasを追加でインストールしたりする。
pip install dash
今回は、UIの部品となるコンポーネントをmain.pyで作成しています。
Dash HTML Componentsパッケージなどのクラ...]]></summary>
        <author>
            <name>JboyHashimoto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CodilityのLessonをやってみる（5-8）]]></title>
        <id>https://zenn.dev/paraches/articles/codility_lesson_5_8</id>
        <link href="https://zenn.dev/paraches/articles/codility_lesson_5_8"/>
        <updated>2022-11-25T07:47:13.000Z</updated>
        <summary type="html"><![CDATA[前回の続き。
今回はLesson 5〜8までのeasyをやって行きます。

 リポジトリ
https://github.com/paraches/codility_lessons

 Lesson 5 Prefix Sums
最初に合計？

 PassingCars
https://app.codility.com/programmers/lessons/5-prefix_sums/passing_cars/

 問題
N個の整数で満たされた配列Aがある。配列Aの連続した要素は道路上に連なる車を表している。
配列Aには0か1のみ含まれる。
それぞれが表すのは以下の通り

0は東に向かう車...]]></summary>
        <author>
            <name>paraches</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[じゃんけん画像を分類してみた]]></title>
        <id>https://zenn.dev/takeguchi/articles/672ff3b34753a7</id>
        <link href="https://zenn.dev/takeguchi/articles/672ff3b34753a7"/>
        <updated>2022-11-25T06:59:19.000Z</updated>
        <summary type="html"><![CDATA[YOLOで使えそうな物体検出用のデータセットを探していたとき、roboflow で偶然面白そうな画像分類のデータセットを発見しました。じゃんけんの手の画像から、「グー」、「チョキ」、「パー」を予測するというものです。
実際にディープラーニングのモデルを作成し、予測を行ってみました。
https://public.roboflow.com/classification/rock-paper-scissors

 データのロード
上記のリンクから直接ダウンロードしてもいいのですが、私は以下のコマンドで zip形式でダウンロードして解凍しました。
curl -L "https://public...]]></summary>
        <author>
            <name>tttakeh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dreambooth with xformers on windowsで苦労したやつ]]></title>
        <id>https://zenn.dev/minamik/articles/362dc62d99984d</id>
        <link href="https://zenn.dev/minamik/articles/362dc62d99984d"/>
        <updated>2022-11-25T06:34:27.000Z</updated>
        <summary type="html"><![CDATA[所感
なぜautomatic1111とdreambooth-extentionでtorchのcudaバージョンが違うのだ…
それぞれ実行するたびに再インストールしてくれるので、環境壊しまくってくれる。
以下はその辺りをどうにかした記録。

 前提

NVIDIA RTX A6000
Windows 10 Pro Workstation 21H2
Anaconda 22.9.0
automatic1111 [828438b]


 環境構築手順

automatic1111をClone

(base) > git clone https://github.com/AUTOMATI...]]></summary>
        <author>
            <name>minamik</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[泣く泣く現場へ追加設置した、エッジデバイス(ラズパイ)をbalenaCloudで管理]]></title>
        <id>https://zenn.dev/optfit/articles/fd622027e73e0e</id>
        <link href="https://zenn.dev/optfit/articles/fd622027e73e0e"/>
        <updated>2022-11-25T02:45:00.000Z</updated>
        <summary type="html"><![CDATA[概要
「故障などのリスクを伴う、現場へのハード設置は最小限にしたい」派で、できることは極力クラウドでやりたいと考えている私ですが、エッジデバイスを全国各地に配置しないとどうしようも無い事案が発生したため、泣く泣く現場へエッジデバイス追加設置をする事になりました。
こんにちは。OptFit CTOの荒川です。
現場へのハード設置は故障などのリスクとともに運用コストが跳ね上がることが想定されたので、運用コストを極力かけないようにするためのツールを探していたところ、弊社見習いエンジニアのりょりょりょがbalenaCloudなる遠隔エッジデバイス管理ツールを共有してくれました。
備忘録と社内...]]></summary>
        <author>
            <name>OptFit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Qiskit で遊んでみる (9) — Shor の符号]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-qiskit09</id>
        <link href="https://zenn.dev/derwind/articles/dwd-qiskit09"/>
        <updated>2022-11-24T17:09:16.000Z</updated>
        <summary type="html"><![CDATA[目的
量子回路のエラー訂正に「Shor の符号」というものがあるらしいので、効果を体感してみたい。体感なのでつまり、数式で追いかけるのはやめて、適当に雑音の入る回路をシミュレートしてシミュレータで回して満足するところまでを実行する。

 眺める回路
量子コンピューティング 基本アルゴリズムから量子機械学習まで か Quantum error correction で見る事ができる回路で確認する。
最終的には以下を実装する:

ちゃんと実装できれば、1 回のビット反転、1 回の位相反転、或はその両方が同時に起こるケースを検出してエラー訂正できる、らしい。

 回路を作る
とりあえず、必...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PyTorchの公式入門を読む]]></title>
        <id>https://zenn.dev/yunkai/articles/866cd3beec7ece</id>
        <link href="https://zenn.dev/yunkai/articles/866cd3beec7ece"/>
        <updated>2022-11-24T14:07:05.000Z</updated>
        <summary type="html"><![CDATA[PyTorchの公式チュートリアルを読みました。
データさえあれば、PyTorchを使って、簡単に機械学習ができそうです。
以下、読みながら書いたメモです。

 Quick start

 Data
torch.utils.data.DataLoaderを使えばデータをロード（前処理）できる。
TorchText, TorchVision, TorchAudioなどが学習用のデータセットを持っていて、ダウンロードしてくれる。

 Model
torch.nnを使えばモデルを作れる。
import torch.nn as nn

class NeuralNetwork(nn.Module)...]]></summary>
        <author>
            <name>yunkai</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google ColabでTesseractを動かす（日本語対応）]]></title>
        <id>https://zenn.dev/nakamura196/articles/d61e296fa9d86c</id>
        <link href="https://zenn.dev/nakamura196/articles/d61e296fa9d86c"/>
        <updated>2022-11-24T09:49:43.000Z</updated>
        <summary type="html"><![CDATA[Google ColabでTesseractを動かすノートブックを作成しました。日本語にも対応しています。参考になりましたら幸いです。
https://colab.research.google.com/github/nakamura196/ndl_ocr/blob/main/Tesseractを試す.ipynb
末尾に、hocrファイルをalto形式のxmlファイルに変換するフローも紹介しています。具体的には、以下のツールを使用しています。
https://digi.bib.uni-mannheim.de/ocr-fileformat/
参考になりましたら幸いです。]]></summary>
        <author>
            <name>nakamura196</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】Pythonの主な組み込み関数31個について、全て例を交えて解説する]]></title>
        <id>https://zenn.dev/scytherjs/articles/99148efdb0ec73</id>
        <link href="https://zenn.dev/scytherjs/articles/99148efdb0ec73"/>
        <updated>2022-11-24T00:28:47.000Z</updated>
        <summary type="html"><![CDATA[始めに
こちらの参考書でPythonを勉強しています。
Chapter6第2部に組み込み関数が大量に紹介されていたので、触ってみるついでに紹介していきます！

 紹介！
ではどうぞ！
マイルールで見出しレベル調整してたら見づらくなったかもしれません。右のナビゲーションを参考にしてください...
難しめな用語の脚注も載せておりますのでご覧ください。

 1. 計算

 1-1. 絶対値を返す
abs(x)
abs(-10) # 10
abs(-0) # 0
複素数の絶対値を求めるためにも使える。
abs(complex(1, 2)) # 2.23606797749979
# compl...]]></summary>
        <author>
            <name>Scythercas</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GPT-2を理解したい]]></title>
        <id>https://zenn.dev/sunbluesome/articles/775ffd67fb7454</id>
        <link href="https://zenn.dev/sunbluesome/articles/775ffd67fb7454"/>
        <updated>2022-11-23T15:15:13.000Z</updated>
        <summary type="html"><![CDATA[GPT-2[1]を理解したい記事です。
GPT-2は一言でいえば超巨大なGPTです。論文タイトルにある通り、教師なしでマルチタスクが実行可能であることを示した論文になります。

 GPT-2モデルの凄いポイント

Webtextというデータセットを自分たちで作ってしまった。
モデルが巨大（ちなみに、GPT-3はさらに桁違いに巨大）
ゼロショット設定で様々なタスクをこなせることを示した。


 背景
GPTによって、モデルのアーキテクチャを変えることなく様々なタスクを実行できることが証明されました。
しかし、GPTはファインチューニングを必要とする点で完全な教師なし学習ではありませんでした...]]></summary>
        <author>
            <name>sunbluesome</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unity ml-agentsを動かす]]></title>
        <id>https://zenn.dev/naoji/articles/unity-ml-agents-0010</id>
        <link href="https://zenn.dev/naoji/articles/unity-ml-agents-0010"/>
        <updated>2022-11-23T13:13:47.000Z</updated>
        <summary type="html"><![CDATA[はじめに
プロフィールにUnity歴6年と書いておきながら、Unityネタがなかったのでml-agentsを題材に記事を書いてみました。m1 macだとインストールからつまづきましたので、そこまで備忘としてまとめます。最終的にはShqnDさんの記事のおかげで動くようになりました（ありがとうございました😆！）。
https://qiita.com/ShqnD/items/471d9950a0e072a4cb65

 ml-agentsとは
ゲームの敵キャラの動きなどをAIでチューニングする仕組みです。
https://unity.com/ja/products/machine-lear...]]></summary>
        <author>
            <name>naoji</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PythonデコレータのSyntactic Sugarなぜ便利かを理解した]]></title>
        <id>https://zenn.dev/jcc/articles/e19ecccec692ce</id>
        <link href="https://zenn.dev/jcc/articles/e19ecccec692ce"/>
        <updated>2022-11-23T11:28:12.000Z</updated>
        <summary type="html"><![CDATA[Pythonデコレータを利用する場合、@decoratorというSyntactic Sugarを関数やメソッドの先頭に付けるのが一般的ですが、なぜ便利なのかいまいち理解できていないので、調べてみました。
デコレータの詳細は公式ドキュメントあるいは他の方がすでに紹介されているので、本記事では割愛します。ちなみにおすすめの記事はこちらです。
https://rednafi.github.io/digressions/python/2020/05/13/python-decorators
まず適当に文字列の両側に<b>を追加してくれる簡単なデコレータを書きましょう。num_bは片方...]]></summary>
        <author>
            <name>jc</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[m1 macにTensorFlowをインストール]]></title>
        <id>https://zenn.dev/naoji/articles/m1-mac-setting-0010</id>
        <link href="https://zenn.dev/naoji/articles/m1-mac-setting-0010"/>
        <updated>2022-11-23T08:02:15.000Z</updated>
        <summary type="html"><![CDATA[はじめに
以下のリンクにあります通り、既に多くの方々がインストールに成功していますが、私の環境にインストールしたときに色々つまづきましたので備忘としてまとめます。
https://qiita.com/chipmunk-star/items/90931fb5180b8024adcb
https://www.mk-tech20.com/tensorflow/
https://storikai.hatenablog.com/entry/2022/05/24/010217

 インストールした環境
16インチ MacBook Pro 2021にインストールしました。スペックは以下になります。...]]></summary>
        <author>
            <name>naoji</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【GoogleColaboratory】Pythonファイルからplt.imshowするとき…]]></title>
        <id>https://zenn.dev/884naoki/articles/8afd5aa9630952</id>
        <link href="https://zenn.dev/884naoki/articles/8afd5aa9630952"/>
        <updated>2022-11-23T07:38:00.000Z</updated>
        <summary type="html"><![CDATA[経緯
GoogleDriveにあげたソースコードをGoogleColaboratoryにマウントして実行しようとした

src.py
# GoogleDriveにあるソースコード
import matplotlib.pyplot as plt

#省略

plt.imshow(image)


Colaboratory
# GoogleColaboratoryのセル
!python3 src.py

上のように記述したが、Colaboratoryの出力に画像は表示されず…

 ちなみに、Colaboratoryのセルに直接コードを書いた場合

期待通り、imshow　で　Colabo...]]></summary>
        <author>
            <name>Hayashi Naoki</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JupyterLabを動かすだけのDocker環境の構築例]]></title>
        <id>https://zenn.dev/nigimitama/articles/2022-11-23-docker-example-for-jupyterlab</id>
        <link href="https://zenn.dev/nigimitama/articles/2022-11-23-docker-example-for-jupyterlab"/>
        <updated>2022-11-23T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[データ分析環境をコンテナで管理したい事が多いのでメモ

 ファイル構成
入れたいライブラリはrequirements.txtに記入済みという想定
.
├── Dockerfile
├── docker-compose.yml
└── requirements.txt

 ファイルの中身

 Dockerfile

Dockerfile
FROM python:3
WORKDIR /workdir

# cmakeが必要なライブラリを入れる場合
# RUN apt update && apt install cmake -y

# ライブラリのインストール
RUN /usr...]]></summary>
        <author>
            <name>mitama</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[スロットルされていないかを全Lambdaに対して確認するboto3スクリプト]]></title>
        <id>https://zenn.dev/shimo_s3/articles/1b01290de0edfb</id>
        <link href="https://zenn.dev/shimo_s3/articles/1b01290de0edfb"/>
        <updated>2022-11-22T23:31:29.000Z</updated>
        <summary type="html"><![CDATA[他の検討でスロットルしてしまってLambdaが動かないことがあり、確認できるように作りました。

全リージョンをec2のdescribe_regionsで受け取る
リージョンごとに全関数をlist_functionsで取り出す

一度に50までしか表示できない。NextMarkerがある場合は続きがあるので追加でlist_functionsする


get_function_concurrencyでReservedConcurrentExecutionsがあるか調べる。設定なければNoneになっている。スロットルの場合はReservedConcurrentExecutions==0


...]]></summary>
        <author>
            <name>shimo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】pyenv-win+venvで環境構築したときPyQt5でエラーが出る問題]]></title>
        <id>https://zenn.dev/powerword/articles/c0c8441af25280</id>
        <link href="https://zenn.dev/powerword/articles/c0c8441af25280"/>
        <updated>2022-11-22T11:34:03.000Z</updated>
        <summary type="html"><![CDATA[環境
Windows10
Python3.10.1
pyenv + venvで仮想環境を構築し，PyQt5によるGUIアプリを実行しようとした

 エラー
<仮想環境名>/Scripts/Activate.ps1
で仮想環境に入り，
python main.py
で実行しようとしたところ以下のエラーが出た．
qt.qpa.plugin: Could not find the Qt platform plugin "windows" in ""
This application failed to start because no Qt platform plugin co...]]></summary>
        <author>
            <name>Powerword</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CodilityのLessonをやってみる（1-4）]]></title>
        <id>https://zenn.dev/paraches/articles/codility_lesson_1_4</id>
        <link href="https://zenn.dev/paraches/articles/codility_lesson_1_4"/>
        <updated>2022-11-22T10:18:03.000Z</updated>
        <summary type="html"><![CDATA[CodilityのLessonをやり始めたのでメモ。
今回は取り敢えずLesson 1〜4までのeasyで。

 リポジトリ
https://github.com/paraches/codility_lessons

 Lesson 1 Iterations
各レッスンに大枠の表題があるのだけど、微妙に理解できないものもある。
レッスン1はイテレーション。

 BinaryGap
https://app.codility.com/programmers/lessons/1-iterations/binary_gap/

 問題
与えられた整数Nを2進表記して1に挟まれた連続する0の数が一...]]></summary>
        <author>
            <name>paraches</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【教師なし学習】ガラスの成分でクラスタリングしてみよう！]]></title>
        <id>https://zenn.dev/ryuta_kojima/articles/948481c0ff6986</id>
        <link href="https://zenn.dev/ryuta_kojima/articles/948481c0ff6986"/>
        <updated>2022-11-22T10:02:51.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは、コジです！本日はガラスの成分数値を使って教師なし学習のクラスタリングを行なっていこうと思います！
クラスタリングはアルゴリズムを使って機械にグルーピングしてもらうことですね。ガラスの成分数値なんて見ても僕は違いがわからないので、機械に任せてしまおうと思います！
今回は実装して、結果の可視化を目標にやっていきます！よろしくお願いします！

 クラスタリングについて
データのレコードにはカラム（列）がありますよね。例えば100個カラムがあったとしたら、そのレコードは100次元の点の一つです。それぞれの点の距離が近いものを一つのグループとして扱う、また点、もしくはグル...]]></summary>
        <author>
            <name>コジ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[RaspberryPiのPython環境をPyenv+Poetryで作る]]></title>
        <id>https://zenn.dev/tatsu24/articles/e197dfab34f428</id>
        <link href="https://zenn.dev/tatsu24/articles/e197dfab34f428"/>
        <updated>2022-11-22T09:30:18.000Z</updated>
        <summary type="html"><![CDATA[はじめに
RaspberryPiのPython環境をPyenvとPoetryで作ったのでその備忘録的な記事です。
!
Pyenv、Poetryそれぞれに関する細かい説明はしていません。これらの詳しいコマンドは各自調べてください🙏


 環境

端末: Raspberry Pi　4

OS: Raspberry Pi OS


ラズパイOSは各自ググって入れましょう。

 Pyenvの環境構築

 Pyenvのインストール
Githubに従ってインストールします。
$ git clone https://github.com/pyenv/pyenv.git ~/.pyenv
$ cd ...]]></summary>
        <author>
            <name>Tatsu24</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonとplotlyを使ってローソク足チャートを表示する]]></title>
        <id>https://zenn.dev/arafipro/books/python-plotly-chart</id>
        <link href="https://zenn.dev/arafipro/books/python-plotly-chart"/>
        <updated>2022-11-22T06:33:49.000Z</updated>
        <summary type="html"><![CDATA[Pythonとplotlyを使ってチャートを表示する方法を説明します。
私は株式投資を行なっていてプログラミングを勉強するきっかけになりました。
主に取引している米国株を題材にプログラミングの例を作成しています。

また記事の更新も随時行って行きたいと思います。]]></summary>
        <author>
            <name>Hiroki Chiyoda</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github ActionsのWindows環境でtempfile.NamedTemporaryFileがパーミッションエラー]]></title>
        <id>https://zenn.dev/konboi/articles/aa1f05ba2fd2d9</id>
        <link href="https://zenn.dev/konboi/articles/aa1f05ba2fd2d9"/>
        <updated>2022-11-22T05:35:08.000Z</updated>
        <summary type="html"><![CDATA[表隊の通り以下のようなテストコードを書いた際に Github Actions の Windows 環境で Permission Error になってしまう。
with tempfile.NamedTemporaryFile() as f:
    ...
解決策としては削除処理を自前でしてあげると回避できる。
tmp = tempfile.NamedTemporaryFile()
...

tmp.close()
os.unlink(tmp.name) # os.removeでもおそらくOK
何回かハマったのでメモしておく。]]></summary>
        <author>
            <name>Konboi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Beam JavaからRunInterfaceでscikit-learnの処理を呼び出す]]></title>
        <id>https://zenn.dev/kn1kn1/articles/99f49946ea0f2c</id>
        <link href="https://zenn.dev/kn1kn1/articles/99f49946ea0f2c"/>
        <updated>2022-11-22T04:24:37.000Z</updated>
        <summary type="html"><![CDATA[概要
Apache Beam JavaからPythonの処理を呼び出す例について、以前に Apache Beam Java multi-language pipelines quickstart メモ - zennで試したが、scikit-learnの処理を呼び出す例がBeamのExampleに追加されていたので試してみた。https://github.com/kn1kn1/beam-example-multi-language-sklern に最終的に動作したプロジェクトを格納した。

 手順
基本的には、https://github.com/apache/beam/tree/ma...]]></summary>
        <author>
            <name>Kenichi Kanai</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Beam Java multi-language pipelines quickstart メモ]]></title>
        <id>https://zenn.dev/kn1kn1/articles/4aadd3bb4eeb14</id>
        <link href="https://zenn.dev/kn1kn1/articles/4aadd3bb4eeb14"/>
        <updated>2022-11-22T00:36:31.000Z</updated>
        <summary type="html"><![CDATA[概要
Apache BeamのJavaのパイプラインからPythonの処理を呼び出すことのできるJava multi-language pipelinesの簡単な例（ https://beam.apache.org/documentation/sdks/java-multi-language-pipelines/ ）を実行したのだが、環境を作るのに少々煩雑であったので、そのメモ。

 経緯
Apache Beamの2.40.0からRunInference transformが導入され、Apache Beam PythonではPyTorchとscikit-learnのモデルが直接サポー...]]></summary>
        <author>
            <name>Kenichi Kanai</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[seccon2022 easylfi]]></title>
        <id>https://zenn.dev/tmemo/articles/c4f72ed7520a81</id>
        <link href="https://zenn.dev/tmemo/articles/c4f72ed7520a81"/>
        <updated>2022-11-21T15:13:47.000Z</updated>
        <summary type="html"><![CDATA[SECCON2022 Easylfiの問題について取り組んだので、以下記録します。
CTF初心者なので内容に間違いがあるかもしれません。ご注意ください。
A. 問題の説明
B. 取り組んだ過程（結果解けず）
C. 答え（自力で解けなかったのでWriteup見た内容）
D. 深堀　追加の検討

 A．問題の説明
seccon 2022 easylfiの問題について記載します。
大会終了後の画面キャプチャ。
こう見てみると解けている人が多く簡単な問題だったようですね。

主催者側から提供されているdocker-composeを起動してアクセスした初期画面。
名前を入力してSubmitするだけ...]]></summary>
        <author>
            <name>tree</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vertex AIのworkbenchを使用した際、HuggingFaceのTrainer()が開始されない事象への対処法]]></title>
        <id>https://zenn.dev/nakamura196/articles/67fa0cee7b2b2a</id>
        <link href="https://zenn.dev/nakamura196/articles/67fa0cee7b2b2a"/>
        <updated>2022-11-21T13:32:03.000Z</updated>
        <summary type="html"><![CDATA[Google CloudのVertex AIのworkbenchを使用した際、HuggingFaceのTrainer()が開始されない事象に遭遇しました。
この件について、以下のページで同様の不具合が報告されていました。
https://stackoverflow.com/questions/73415068/huggingface-trainer-does-nothing-only-on-vertex-ai-workbench-works-on-colab
当初、以下のような「PyTorch」の環境を選んでいましたが、この環境で上記の不具合が生じました。

そこで、上記の記事にある通り...]]></summary>
        <author>
            <name>nakamura196</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pyautoguiでマウスを動かせなくて詰まったところ]]></title>
        <id>https://zenn.dev/ryuapp/articles/8a01d08518cff6</id>
        <link href="https://zenn.dev/ryuapp/articles/8a01d08518cff6"/>
        <updated>2022-11-21T06:58:56.000Z</updated>
        <summary type="html"><![CDATA[結論

根本的な解決ではないが、Anacondaで環境構築をやり直したら解消した。



 環境
Ubuntu Desktop 22.04.1 LTS
Python 3.10.6
JupyterNotebook 6.4.8

 どうなっていたか
下記のようなマウスカーソルに関わる関数が動かなかった。
pyautogui.moveTo(100, 100)
pyautogui.click()

 原因
突き止められていないが、今回は自力で環境構築を行おうとした結果このような不具合に遭遇した。特に理由が無ければAnacondaなどのプラットフォームに頼って、Pythonの実行環境は整えた方...]]></summary>
        <author>
            <name>ryu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ResourceSyncのPythonライブラリを試す]]></title>
        <id>https://zenn.dev/nakamura196/articles/e29624334e90bf</id>
        <link href="https://zenn.dev/nakamura196/articles/e29624334e90bf"/>
        <updated>2022-11-21T00:27:26.000Z</updated>
        <summary type="html"><![CDATA[概要
ResourceSyncのPythonライブラリである「py-resourcesync」を試したので、その備忘録です。
https://github.com/resourcesync/py-resourcesync

 セットアップ
git clone https://github.com/resourcesync/py-resourcesync
cd py-resourcesync
python setup install

 実行

 resourcelist
まず、出力用のresource_dirディレクトリを作成します。カレントディレクトリにex_resource_di...]]></summary>
        <author>
            <name>nakamura196</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Qiskit で遊んでみる (7) — Qiskit Aer GPU]]></title>
        <id>https://zenn.dev/derwind/articles/dwd-qiskit07</id>
        <link href="https://zenn.dev/derwind/articles/dwd-qiskit07"/>
        <updated>2022-11-20T15:57:07.000Z</updated>
        <summary type="html"><![CDATA[目的
WSL2 で cuQuantum (1) という大変素晴らしい記事があったので、内容を踏まえつつ Ubuntu 環境で Qiskit Aer の GPU 対応ビルド、とりわけ cuQuantum 対応をビルドしたい。
以下はすべて Turinig アーキテクチャの T4 で試した。本来は Volta や Ampere アーキテクチャでマルチ GPU などをすると本領を発揮するらしい。

 Docker を使う
流石にホスト環境を汚しながら実行する勇気もないので docker を使う。
FROM nvidia/cuda:11.8.0-devel-ubuntu20.04

ENV ...]]></summary>
        <author>
            <name>derwind</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[なぜ、Matplotlib については .pyplot をインポートするのか]]></title>
        <id>https://zenn.dev/ai_kody/articles/804797413007d1</id>
        <link href="https://zenn.dev/ai_kody/articles/804797413007d1"/>
        <updated>2022-11-20T14:38:23.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Pythonでの機械学習実装を学び始めています
まずは必要となるライブラリのインポートについて。
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
それぞれのライブラリの役割について、概ねこのように学びました

Numpy：数値の計算を行うライブラリ
Pandas： データの操作を行うライブラリ
Matplotlib： データの可視化を行うライブラリ

一方で、なぜ、numpyとpandasはそのままインポートしているのに Matplotlibは.pyplotをインポートしているのか...]]></summary>
        <author>
            <name>AI_LEARN_SENDAI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【個人開発】パズルゲームを作ってコスト0円で公開した話]]></title>
        <id>https://zenn.dev/shiro46/articles/b0b1fc8151ff36</id>
        <link href="https://zenn.dev/shiro46/articles/b0b1fc8151ff36"/>
        <updated>2022-11-20T09:59:44.000Z</updated>
        <summary type="html"><![CDATA[はじめに
10パズル迷路というパズルゲーム系のWebアプリを作成しました。
スタートからゴールまで迷路（ただのマス目？）をたどり、通ったマスの数字・記号をつなげて答えが10になる数式を作るというゲームです。
https://10puzzle.tk
ケチな性分なので、なるべくコストをかけずに作成・公開することを目指しています。
今回はコスト0円で公開までこぎつけましたので、その道のりを書き残しておきます。

 自己紹介
はじめまして、SHIROです。
非エンジニア職なので、休日だけコードを書いています。特技は「車のナンバーを見て四則演算で10を作る」ことです。
https://twit...]]></summary>
        <author>
            <name>SHIRO</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[会話の「間」を持たせる「おうむ返し」の実装]]></title>
        <id>https://zenn.dev/sadahiroyoshi/articles/6d9c6382ab70ea</id>
        <link href="https://zenn.dev/sadahiroyoshi/articles/6d9c6382ab70ea"/>
        <updated>2022-11-20T09:52:48.000Z</updated>
        <summary type="html"><![CDATA[この記事に書くこと

「おうむ返し」ライブラリの概要
実装のポイント


 モチベーション
現在、「今日のできごと」について話ができる音声対話システムについて
社会人大学院で研究しています。
そのうえで、研究の一環として、
音声対話を実装する際の「間」をつなぐ仕組みを作りたいと思っていました。
あと単純に、自然言語処理について深く知りたかったので、
いろいろと手段を調べながら「おうむ返し」を実装しました。

 「おうむ返し」ライブラリの概要
pythonライブラリを実装しました。
https://github.com/sadahry/dialog-reflection
ライブラリを利...]]></summary>
        <author>
            <name>よしかわ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[日本語の活用変形のライブラリ化を試みた]]></title>
        <id>https://zenn.dev/sadahiroyoshi/articles/20013737993b75</id>
        <link href="https://zenn.dev/sadahiroyoshi/articles/20013737993b75"/>
        <updated>2022-11-20T09:51:32.000Z</updated>
        <summary type="html"><![CDATA[この記事に書くこと
日本語の活用変形ライブラリを実装しました。
https://github.com/sadahry/katsuyo-text
この記事では、以下のことを書きます。

ライブラリの概要説明
活用変形のロジック化の困難


 モチベーション
対話システム研究の一環で「おうむ返し」を実装しました（詳細は別記事）
その実装を進めるなかで活用変形が必要だったのですが、
活用変形は決まったルールなのでロジックに落とし込めるのでは？ という仮説が浮かび、
活用変形をロジックに落とし込めるかどうか、ライブラリ化を試みました。

 ライブラリの概要説明
このライブラリでは活用形を含む...]]></summary>
        <author>
            <name>よしかわ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dev.toの記事をいいね数で並び替え一覧表示したいんじゃ]]></title>
        <id>https://zenn.dev/flathill404/articles/6942c1858163fa</id>
        <link href="https://zenn.dev/flathill404/articles/6942c1858163fa"/>
        <updated>2022-11-20T09:00:48.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさん技術記事はどこで読み漁っていますか？日本語のサイトだと今ならQiitaかZennといったところでしょうか？では英語のサイトなら？私は多くを知りませんが、DEVをよく巡回しています。
今日も暇つぶしにDEVを適当に見物していたら、ふと「最もいいね数が多い記事が読んでみたいんじゃ」という気持ちになりました。しかし、いいね数でソートする機能は提供されていないようでした（もしあったらごめんなさい🙇）。ないなら自分で作ろうということでこの記事に至ります。

 API
DEVではAPIが提供されています。ちなみに、DEVはOSSのForemによるサイトなので、「APIドキュメン...]]></summary>
        <author>
            <name>flathill404</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[誰も教えてくれない、SRE流マイクロサービスの開発方法：はじめに]]></title>
        <id>https://zenn.dev/kaz_t/articles/e0362f9a3bcfb3</id>
        <link href="https://zenn.dev/kaz_t/articles/e0362f9a3bcfb3"/>
        <updated>2022-11-19T14:18:46.000Z</updated>
        <summary type="html"><![CDATA[はじめに
みなさま、こんばんは
SREのKazです。
SREはSuper Rare Engineerの事です。
すいません、嘘です。
Site Reliability Engineeringのことです。
私は、これまでCI/CDに関する書籍の執筆や、大規模なマイクロサービスの開発に関与してきて、またそれらのプロジェクトをスピーディに変革し、達成してきました。
SREは、インフラエンジニアと同列に扱われることも多いのですが、実際はソフトウェアを書くシーンも多いです。
ソフトウェアの中身がわからないと、どの様にSite Reliabilityを担保すればよいのか？を考えることができないか...]]></summary>
        <author>
            <name>kaz-tk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[米国FF金利データを取得するPythonのコード]]></title>
        <id>https://zenn.dev/welliving/articles/88fa5cdf1488c2</id>
        <link href="https://zenn.dev/welliving/articles/88fa5cdf1488c2"/>
        <updated>2022-11-19T13:12:29.000Z</updated>
        <summary type="html"><![CDATA[この記事について
FREDから米国FF金利データをPythonで取得します。
Wikipediaによると、フェデラル・ファンド金利(federal funds rate)は、米国の銀行が中央銀行に預けている準備預金を貸し借りする市場(フェデラル・ファンド市場)の金利です。日本の無担保コール翌日物金利に相当します。
実効フェデラル・ファンド金利(effective federal funds rate)は、フェデラル・ファンド市場での金利を取引金額で重み付けした平均で、ニューヨーク連邦準備銀行が毎日9時頃に前日分を発表しています。
米国の中央銀行である連邦準備銀行の統括機関である連邦準...]]></summary>
        <author>
            <name>Ryo YOSHI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[二項分布の期待値と分散, 最尤推定, 可視化]]></title>
        <id>https://zenn.dev/shundeveloper/articles/e8c1049ca540db</id>
        <link href="https://zenn.dev/shundeveloper/articles/e8c1049ca540db"/>
        <updated>2022-11-19T11:00:01.000Z</updated>
        <summary type="html"><![CDATA[確率質量分布
ベルヌーイ試行をn 回行って成功する回数 X が従う確率分布として二項分布が知られている. 確率質量分布は以下である.

\begin{align*}
Bin(x | n, \mu) &= \binom{n}{x} \mu^x (1-\mu)^{1-x}
\\
\text{where} \; \binom{n}{x} &\equiv \frac{n!}{x!(n-x)!}\\
\end{align*}

ただし, 試行回数, 成功回数, 成功率は以下を満たす.

\begin{align*}
n &\in \R^+\\
x &\in \{...]]></summary>
        <author>
            <name>ShunDev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Streamlitのアプリケーションが検索可能になるらしいので試してみた話]]></title>
        <id>https://zenn.dev/shundeveloper/articles/f7f9069332a49e</id>
        <link href="https://zenn.dev/shundeveloper/articles/f7f9069332a49e"/>
        <updated>2022-11-19T08:36:10.000Z</updated>
        <summary type="html"><![CDATA[きっかけ
Shunです. StreamlitというPythonフレームワークを御存じでしょうか? Streamlitを使うと美しい表やグラフを使ったアプリケーションを簡単に構築できます. 私自身もユーザーとして利用させていただいています. 興味を持たれた方は是非公式ドキュメントを確認して見てください.
Streamlit
2022年11月18日にstreamlit公式から以下の発表がありました. 「詳しい情報は以下のリンクを見てね！」とのことだったので確認することにしました.


 何ができるようになったのか

 Community Cloudのアプリケーションが検索可能になった
参...]]></summary>
        <author>
            <name>ShunDev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Django】QuerySetのfilter()を使いこなす！]]></title>
        <id>https://zenn.dev/takunari_jp/articles/bebd36155a9191</id>
        <link href="https://zenn.dev/takunari_jp/articles/bebd36155a9191"/>
        <updated>2022-11-19T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[この記事では、Djangoがデフォルトで備えている「新しいQuerySetsを返すメソッド」のうち、「filter()」について解説します。

 公式ドキュメントを覗く 🫣
https://docs.djangoproject.com/en/4.0/ref/models/querysets/
公式ドキュメントにはこのように書かれています。

 filter(*args, **kwargs)

与えられた検索パラメータに一致するオブジェクトを含む新しいクエリセットを返します。ルックアップパラメータ（**kwargs）は、ここ（本記事の内容）で説明されている形式でなければなりません。
複数の...]]></summary>
        <author>
            <name>Omori Takuya</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【python】PDFをスクレイピングして中身をCSVへ出力する（後編）]]></title>
        <id>https://zenn.dev/subaru_hello/articles/570e9e990374a6</id>
        <link href="https://zenn.dev/subaru_hello/articles/570e9e990374a6"/>
        <updated>2022-11-19T01:56:39.000Z</updated>
        <summary type="html"><![CDATA[陸上競技場のサイトからPDFを取得してローカルに保存することを前編では取り扱いました。
本記事では、前編 で取得したPDFの中身をcsvへ出力するプログラムを作成していきたいと思います。
また、別途必要になる下記ライブラリのインストール方法については本記事では取り扱いません。

pandas
tabula


 本記事で作るプログラム
外部サイトからPDFを取得してcsvへ出力する際の戦略は下記の通りです。
1~2は前編で取り扱いました。今回は3~4に関して取り扱っていきたいと思います。

クローリング&スクレイピングでPDFのURLを取得
PDFをローカルにダウンロード
PDF...]]></summary>
        <author>
            <name>subaru-hello</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[夫婦で結婚式の余興用クイズアプリを作った話]]></title>
        <id>https://zenn.dev/yui/articles/dfab1b18c3f62e</id>
        <link href="https://zenn.dev/yui/articles/dfab1b18c3f62e"/>
        <updated>2022-11-19T01:30:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
私事ですが11月12日に結婚式をあげました。
私達夫婦はよく一緒にアプリを作っているので、今回もなにか一緒に作れないかと思い、余興のクイズアプリを作ることにしました。
ついでに席札もQRコードにして、webアプリ内でメッセージも入れれるようにしました。

 作ったもの
ユーザーに配布用のサイトと、披露宴会場で投影する用のサイトの２つを作りました。

 ユーザーに配布用のサイト
当日はこういう↓感じの席札を用意しました。

この席札は名刺サイズで印刷して一人ひとりラミネートしたのですが、地味に大変な作業でした。
QRコードを読み取ると、以下DEMO動画のようなサイトが現れます...]]></summary>
        <author>
            <name>yui</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[%timeitの測定結果を処理する]]></title>
        <id>https://zenn.dev/bilzard/articles/get-timeit-result</id>
        <link href="https://zenn.dev/bilzard/articles/get-timeit-result"/>
        <updated>2022-11-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[概要
ipython notebookで%timeitの測定結果を分析する際、結果をpythonの変数から参照したくなる。ドキュメント[1]によれば、-oオプションをつけると取得できる。この記事では結果の処理方法を計測例とともに説明する。

 TimeitResult オブジェクトの構造
result = %timeit -o [i ** 2 for i in range(10_000)]
resultはTimeitResultクラスのオブジェクト[2]。ドキュメントによると、以下のような属性を持つ[3]。

loops: 1回の計測における対象の処理の反復回数
repeat: 計測...]]></summary>
        <author>
            <name>bilzard</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【AtCoder】練習記録【2022/11/18】]]></title>
        <id>https://zenn.dev/siganai/articles/20221118_atcoder_practice</id>
        <link href="https://zenn.dev/siganai/articles/20221118_atcoder_practice"/>
        <updated>2022-11-18T14:35:52.000Z</updated>
        <summary type="html"><![CDATA[コンテスト名
AtCoder Beginner Contest 276

 記録

 問題C

提出記録

所要時間
一部RE（実行時エラー）になってしまった．
原因は分かっていない．
記事の最後にコードの最終版を掲載するので，有識者の意見を聞けたら嬉しい．

 反省点
ググったら配列の要素外参照を疑ったほうが良いらしいけど．．．どこだ？

 コード（2022/11/18版）

python
def first_input():
    N = input()
    return int(N)

def second_input(N):
    P_list = []
    p...]]></summary>
        <author>
            <name>SiganAI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【AtCoder】練習記録【2022/11/14】]]></title>
        <id>https://zenn.dev/siganai/articles/20221114_atcoder_practice</id>
        <link href="https://zenn.dev/siganai/articles/20221114_atcoder_practice"/>
        <updated>2022-11-18T14:35:51.000Z</updated>
        <summary type="html"><![CDATA[コンテスト名
AtCoder Beginner Contest 276

 記録

 問題B

提出記録

所要時間

 反省点
正解を求めることはできても処理時間超過になってしまった．
（原因は関数を分割して作りすぎたことで繰り返し処理を複製していたこと）
答えにたどり着くまでは割とスムーズにできた．]]></summary>
        <author>
            <name>SiganAI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【AtCoder】練習記録【2022/11/12】]]></title>
        <id>https://zenn.dev/siganai/articles/20221112_atcoder_practice</id>
        <link href="https://zenn.dev/siganai/articles/20221112_atcoder_practice"/>
        <updated>2022-11-18T14:35:51.000Z</updated>
        <summary type="html"><![CDATA[コンテスト名
AtCoder Beginner Contest 276

 記録

 問題A

提出記録

所要時間

 反省点
whie文を使ったら無限ループになってしまった．
（結局for文を使った）
関数を意識的に作ることで，デバッグはやりやすかったと思う．]]></summary>
        <author>
            <name>SiganAI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[マークダウンをlocalhostでみたい]]></title>
        <id>https://zenn.dev/ringotabetai/articles/bda567558daadd</id>
        <link href="https://zenn.dev/ringotabetai/articles/bda567558daadd"/>
        <updated>2022-11-18T09:34:09.000Z</updated>
        <summary type="html"><![CDATA[環境
Linux ubuntu 22.04.0

 Pythonのバージョン確認する
python3 -V

 マークダウンを保存してるディレクトリへ移動
cd ~/Projects/XXXX/XXXXX

 pip install
pip install mkdocs

 ディレクトリ確認
la -la

 mkdocs起動
mkdocs 

 server起動
mkdocs serve
https://localhost:8000  とか]]></summary>
        <author>
            <name>a</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FastAPI で None の値を null から undefined に変換する]]></title>
        <id>https://zenn.dev/todoker/articles/2022-fastapi-pydantic-null-to-undefined</id>
        <link href="https://zenn.dev/todoker/articles/2022-fastapi-pydantic-null-to-undefined"/>
        <updated>2022-11-18T05:17:32.000Z</updated>
        <summary type="html"><![CDATA[はじめに
こんにちは。@hayata-yamamotoです。
FastAPI をベースにしたバックエンドを運用開発していくにあたり None の使用を伴う API 定義を行うと、None で指定した値が OpenAPI 定義上では Optional の扱いを受けてしまい、TypeScript 側で見ると undefined と見做されるという問題がありました。
今回は、その OpenAPI 定義上の表記と、FastAPI の実際のレスポンスを整合させるために行った設定をご紹介します。

 解決方法
FastAPI で response_model_exclude_none を Tru...]]></summary>
        <author>
            <name>株式会社トドケール</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[TouchDesigner]PythonからGlobal Shortcutを参照]]></title>
        <id>https://zenn.dev/arkwknsk/articles/73650a926ce974</id>
        <link href="https://zenn.dev/arkwknsk/articles/73650a926ce974"/>
        <updated>2022-11-17T21:23:52.000Z</updated>
        <summary type="html"><![CDATA[Pythonから、動的にGlobal Shortcutを使ってオペレーターを参照する方法。OP名＋連番などのGlobal Shortcutなどを参照できるようになる。

 コード
getattr(op, opName)
targetOp = getattr(op, opName)
Pramaters
opName: 取得したいOPのGlobal Shortcutの文字列
Returns
targetOP: 取得されたOP

 サンプル


 ネットワークの解説
ネットワーク上の2つのBase OPにGlobal Shortcutでアクセスするサンプルです。
以下のBase OPに、Glo...]]></summary>
        <author>
            <name>ARAKAWA Kensuke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonで差分ファイルの抽出]]></title>
        <id>https://zenn.dev/mknc/articles/3485cace2d9e09</id>
        <link href="https://zenn.dev/mknc/articles/3485cace2d9e09"/>
        <updated>2022-11-17T15:42:50.000Z</updated>
        <summary type="html"><![CDATA[これ何？
2つのディレクトリから差分ファイルのパス一覧を生成するスクリプト

 作った経緯
"差分ファイル"と"追加ファイル"のみ"ディレクトリ構造を維持したまま"抽出したい。
しかしいい感じのツールが見つからない(需要はありそうだが)。
さて困った。
幸いにもPythonに良いモジュールが提供されていたのでスクリプトを自作することにした。
import filecmp
import sys

# e.g.
# python3 extract_diff_path.py bbb aaa |xargs -I{} cp --parents -r {} extract/
def extrac...]]></summary>
        <author>
            <name>mknc</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonでfitbitから心拍数を取得してみる]]></title>
        <id>https://zenn.dev/datech/articles/095e4a0f00ff40</id>
        <link href="https://zenn.dev/datech/articles/095e4a0f00ff40"/>
        <updated>2022-11-17T09:41:58.000Z</updated>
        <summary type="html"><![CDATA[はじめに
本記事では、Pythonを用いてFitbitのサーバから心拍数を取得する一連の流れを、OAuth 2.0 tutorial pageを経由させないで実装していく。また、FitbitのPython用のライブラリも今回は使っていない。今回実装するソースコードはgithub上に公開しているので、適宜確認してほしい。ただし、ソースコードは心拍数取得までの流れを主にしているので、実際に用いるためにアクセストークンの更新処理や、例外処理などのコードが足りていないことに注意する。

 全体の流れ
※この節のリンクはすべてFitbitの公式ドキュメント

Fitbitのアカウントを作成、ア...]]></summary>
        <author>
            <name>kushima</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[テラスタルを考慮したタイプの組み合わせの優秀さをPythonで計算する]]></title>
        <id>https://zenn.dev/shugo/articles/tera_type_combination</id>
        <link href="https://zenn.dev/shugo/articles/tera_type_combination"/>
        <updated>2022-11-17T06:59:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに
明日にポケモン最新作の『ポケットモンスタースカーレット/バイオレット』(以下「ポケモン SV」)が遂に発売されますね。
私はポケモンに向けて明日と週明けの21日に有給を取りました!!!
ポケモンSVで新しく導入される戦闘システムに「テラスタル」があります。これは全てのポケモンが本来持ってたタイプとは別にテラスタイプを持つことができ、任意のタイミングでテラスタイプに変更できるシステムです.


今回は今までの2タイプの組み合わせに加えて、テラスタイプを考慮した場合に優秀なタイプの組み合わせをPythonで計算していきたいと思います.

 計算方法の解説
今回はグラフ理論を用い...]]></summary>
        <author>
            <name>yb3</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonを用いた時間-周波数解析入門  ~フーリエ・ウェーブレット解析を中心に~]]></title>
        <id>https://zenn.dev/labcode/books/3v5y3msrej7vu9</id>
        <link href="https://zenn.dev/labcode/books/3v5y3msrej7vu9"/>
        <updated>2022-11-16T14:35:12.000Z</updated>
        <summary type="html"><![CDATA[「手持ちのデータで時間-周波数解析をやってみたいけど，どう実装すればいいかわからない」，「「ウェーブレット変換」や「フーリエ変換」を聞いたことはあるけど，どう使ったらいいかわからない」といった経験をお持ちではありませんか？

本書は，「使える時間-周波数解析の本」を目指して，時間-周波数解析で使用される「フーリエ変換」と「ウェーブレット変換」中心に簡単な理論的背景とその実装方法について解説したものです。

Pythonで実行できるコードとその解説をつけていますので，とりあえず動かしてみたい方にもおすすめです。

【販売価格】
期間限定で ¥2500→¥1000 (60% OFF!!)で販売しております！]]></summary>
        <author>
            <name>LabCode（ラボコード）</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GPTモデルを理解したい]]></title>
        <id>https://zenn.dev/sunbluesome/articles/31877b5a767e87</id>
        <link href="https://zenn.dev/sunbluesome/articles/31877b5a767e87"/>
        <updated>2022-11-16T13:53:29.000Z</updated>
        <summary type="html"><![CDATA[GPTモデルを理解したい記事です。
GPTモデルはtransformerを基礎としたモデルです。transformerの解説記事はこちら。
https://zenn.dev/sunbluesome/articles/078ac9a9afca6a
元論文「Improving Language Understanding by Generative Pre-Training」をベースにまとめていきます。

 凄いポイント

様々なタスクをモデルの構造をほとんど変えずに行える。しかも12タスク中9つでSOTA。


 GPTモデルの構造

 Transformer Decoder (T-D)
...]]></summary>
        <author>
            <name>sunbluesome</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[続・MeCabの分かち書きを並列処理で高速化する]]></title>
        <id>https://zenn.dev/hpp/articles/64466d9476fb2b</id>
        <link href="https://zenn.dev/hpp/articles/64466d9476fb2b"/>
        <updated>2022-11-16T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[まとめ

Pythonから巨大なテキストファイルを並列に読み込み・処理・書き込みする方法を紹介
読み込み: テキストファイルをバイト列として見て、プロセスごとにファイルの読み込み区間を割り振る
処理: multiprocessingを用いた並列処理
書き込み: プロセスごとにtmpファイルへ並列に書き込み & catによる結合


 はじめに
日本語形態素解析器であるMeCabを用いると、日本語のテキストに対する解析や処理が簡単に実行できます。
特に最近は、BERTをはじめとする深層学習モデルへの入力のための前処理として、MeCabなどを用いて文を単語単位に分割する「分かち書...]]></summary>
        <author>
            <name>hpp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[自然言語処理 ベクトル化の手法]]></title>
        <id>https://zenn.dev/yoshikawat64m/articles/c242b11d21be68</id>
        <link href="https://zenn.dev/yoshikawat64m/articles/c242b11d21be68"/>
        <updated>2022-11-16T04:36:08.000Z</updated>
        <summary type="html"><![CDATA[はじめに
文章を固定長ベクトルに変換する方法はないかなあと調べていたら、SentenseBertというものを見つけました.それ以外にもベクトル化にはいろいろな方法があるようで調べた内容を少しまとめてみようと思います.

 ベクトル化の用途
ベクトル化することによる応用の仕方はいろいろですが、文書ベクトルの応用としては以下のようなことが可能です.

類似文書の検索
文章間の類似度を測っておすすめの記事をレコメンド
画像検索エンジン(文章ベクトルと画像ベクトルの類似度を測る)


 さまざま手法
word2vecに始まり、自然言語の機械学習によるベクトル化のアルゴリズムは常に改良されてき...]]></summary>
        <author>
            <name>yoshikawat64m</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[データサイエンス100本ノック（構造化データ加工編）環境構築]]></title>
        <id>https://zenn.dev/kyami/articles/b9e58283908bee</id>
        <link href="https://zenn.dev/kyami/articles/b9e58283908bee"/>
        <updated>2022-11-16T00:11:00.000Z</updated>
        <summary type="html"><![CDATA[データサイエンス100本ノックの実行環境をOracle Linux 8 で構築してみました。

 データサイエンス100本ノック（構造化データ加工編）とは？？
https://github.com/The-Japan-DataScientist-Society/100knocks-preprocess
とても親切な方がSQL,Python,Rでデータサイエンスで必要な構造化データの操作を練習できるツールをご用意してくださり、しかもDockerで動かせるようです！
今回はその環境構築を実施してみました。

 母体マシンの用意
よくあるのはWindowsOSに仮想でホストOSを構築してその上...]]></summary>
        <author>
            <name>kyami</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WSL2+Docker DesktopでpytorchのGPU環境を構築する方法]]></title>
        <id>https://zenn.dev/takeguchi/articles/361e12a5321095</id>
        <link href="https://zenn.dev/takeguchi/articles/361e12a5321095"/>
        <updated>2022-11-15T21:00:01.000Z</updated>
        <summary type="html"><![CDATA[はじめに
今回は Docker Desktop を用いてGPU環境を構築します。
以前の Docker はCLIをメインに開発を行っていたと思うのですが、Docker Desktop を用いれば GUI からコンテナやイメージなどを操作することができるそうです。しかも、現在のバージョンは導入が爆速でできるのでめちゃくちゃ使いやすくなりました。
使用するもの

CUDA (前提）
Windows11 Home (前提)
Docker Desktop
WSL2
Nvidia-Container-Toolkit
jupyterlab


 WSL2 のインストール
管理者権限でコマンドプロ...]]></summary>
        <author>
            <name>HTake</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[けしからん画像分類器を作ってみる (10) 公開]]></title>
        <id>https://zenn.dev/kleamp1e/articles/202211-pornography-classifier-10</id>
        <link href="https://zenn.dev/kleamp1e/articles/202211-pornography-classifier-10"/>
        <updated>2022-11-15T17:18:16.000Z</updated>
        <summary type="html"><![CDATA[目次

けしからん画像分類器を作ってみる (1) 序章
けしからん画像分類器を作ってみる (2) データ収集 その1
けしからん画像分類器を作ってみる (3) データ収集 その2
けしからん画像分類器を作ってみる (4) データ収集 その3
けしからん画像分類器を作ってみる (5) データ管理 その1
けしからん画像分類器を作ってみる (6) データ管理 その2
けしからん画像分類器を作ってみる (7) 学習 その1
けしからん画像分類器を作ってみる (8) 学習 その2
けしからん画像分類器を作ってみる (9) 推論
けしからん画像分類器を作ってみる (10) 公開（本記事）
番外...]]></summary>
        <author>
            <name>kleamp1e</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ROS2: PyQt5+Qt Desingerでmsg可視化アプリを試作する]]></title>
        <id>https://zenn.dev/tasada038/articles/122531ae241c3c</id>
        <link href="https://zenn.dev/tasada038/articles/122531ae241c3c"/>
        <updated>2022-11-15T10:13:15.000Z</updated>
        <summary type="html"><![CDATA[海洋ロボコンをやっている人です。
今回は、PyQt5+Qt DesingerでGUIプログラムしたアプリをROS2対応させ、msg可視化アプリを作ったときのメモおよびプログラムたちを備忘録としてまとめました。
他にも、「ROSboard」や「JSK Visualization」といったROSの強力な可視化ツールがたくさん揃っているので、車輪の再発明な点もありますが、Qt「キュート」の勉強も兼ねています。

 本記事のプログラム
この記事で扱うプログラムのコードはGithubよりクローンしてご活用ください。
https://github.com/tasada038/pyqt_ros2_ap...]]></summary>
        <author>
            <name>Takumi Asada</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2つの pip freeze を比較するツール作った]]></title>
        <id>https://zenn.dev/hassaku63/articles/deb96896623639</id>
        <link href="https://zenn.dev/hassaku63/articles/deb96896623639"/>
        <updated>2022-11-14T16:16:07.000Z</updated>
        <summary type="html"><![CDATA[おことわり
この記事と背景的なものは同じです。
https://zenn.dev/hassaku63/articles/75bc1b56b94528

引き継いで以降ずっと塩漬けしてた古いプロジェクトの依存関係を更新しよう、という仕事が発生したのですが、依存関係の定義である requirements.txt が pip freeze の出力そのままリダイレクトしたような内容になっていて少々困りました。

requirements をダイエットしたい、という用事が上記の記事と同じで、今回は実際にダイエットさせてみた requirements と元のファイルでそれぞれ何がどのバージョンで...]]></summary>
        <author>
            <name>hassaku63</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Stable Diffusion Samplerの違いを比べてみた]]></title>
        <id>https://zenn.dev/mimitako/articles/stable_diffusion_sampler</id>
        <link href="https://zenn.dev/mimitako/articles/stable_diffusion_sampler"/>
        <updated>2022-11-14T13:25:05.000Z</updated>
        <summary type="html"><![CDATA[Stable Diffusion Samplerの違いを比べてみた
Stable diffusionにおけるSamplerってどれくらい影響がある？ぶっちゃけあまり知らずに使っていました。実際に使うといろいろ違いが出てきて面白いですね。
今回はSampler だけを変更し、Step数、Prompt、Seed値などはすべて固定しています。なお、GPUにはGTX1660Tiを利用しています。描画な時間は目安としてご利用ください。

 呪文
呪文は元素法典から引用しています。

masterpiece, best quality, super fine illustration,maste...]]></summary>
        <author>
            <name>mimitako</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】グラフのx軸目盛の位置を上部に変更する方法について【備忘録】]]></title>
        <id>https://zenn.dev/siganai/articles/20221114_python_xaxis_top</id>
        <link href="https://zenn.dev/siganai/articles/20221114_python_xaxis_top"/>
        <updated>2022-11-14T12:54:49.000Z</updated>
        <summary type="html"><![CDATA[matplotlibを使用してグラフを作成する際に，通常グラフ下部に表示されるx軸の目盛りをグラフ上部に変更する方法を備忘録としてまとめる．
使用言語はPython．
本記事中で例示するために使用したコードとデータは，ここからダウンロード可能．

 方法
matplotlibのAxes.xaxis.tick_top()を使用することでグラフ上部にx軸目盛を表示することが可能．
実際のコードを以下で示す．

 インストール方法

terminal
pip install matplotlib


 実際の使用例
ここでは例として，y=sin(x)をグラフにする．
xの範囲は0～3πとする．...]]></summary>
        <author>
            <name>SiganAI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[python便利なテクニック集]]></title>
        <id>https://zenn.dev/banananeko/articles/06ef908cd65383</id>
        <link href="https://zenn.dev/banananeko/articles/06ef908cd65383"/>
        <updated>2022-11-14T10:26:48.000Z</updated>
        <summary type="html"><![CDATA[今回紹介するテクニック
今回紹介するテクニックはこちらです

as(importの時)
sys.exit()
_ (アンダーバー)
input()


 as
asとは importの時に使える便利なコードです。これを使うことによって importするモジュール名を自分なりの呼び方にすることができます

 使い方
import モジュール名　as 自分なりの言い方
という感じで使えます

 例文
 import sys as s
 # こうすることでsysをsと呼ぶことができる
 print('hello')
 s.exit()
 print('world')
!
s.exit()を...]]></summary>
        <author>
            <name>banananeko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[レコメンドのオフライン評価でRecall@kの方がPrecision@kより用いられる理由]]></title>
        <id>https://zenn.dev/yuya_sato/articles/f1a9aebe9a2e0d</id>
        <link href="https://zenn.dev/yuya_sato/articles/f1a9aebe9a2e0d"/>
        <updated>2022-11-14T10:21:39.000Z</updated>
        <summary type="html"><![CDATA[概要
一般にRecallとPrecisionの違いなどは記事がありますが、Recall@kとPrecision@kの違い、そしてレコメンドエンジンを評価する現場ではRecall@kが評価指標としてよく用いられる理由については解説している専門書、記事が英語、日本語とも見当たらなかったので自分なりに考えてみました。

 一般的なRecallとPrecisionの定義
Recallの定義は、

Recall := \frac{TP}  {TP + FN} \\ \quad \\
        = \frac {正解だと思って正解だったアイテム数} {正解だと思って正解だったアイテム数 +...]]></summary>
        <author>
            <name>Yuya Sato / 佐藤優矢</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【TypeHint】list[SubClass]がlist[SuperClass]に受け付けられない【Python】]]></title>
        <id>https://zenn.dev/yosemat/articles/df389eb19bb178</id>
        <link href="https://zenn.dev/yosemat/articles/df389eb19bb178"/>
        <updated>2022-11-14T09:55:38.000Z</updated>
        <summary type="html"><![CDATA[SubClassのlistはSuperClassのlistには代入できない
class SuperClass:
    pass


class ChildClass(SuperClass):
    pass


def process_children(children: list[SuperClass]):
    pass


def process_child(child: ChildClass):
    pass


child = ChildClass()
children = [child]
process_child(child)  # works
process...]]></summary>
        <author>
            <name>Yosemat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Annictの記録したアニメ数をGitHubのプロフィールに載せるサービスを作りました]]></title>
        <id>https://zenn.dev/penguincabinet/articles/762e7e201fd86a</id>
        <link href="https://zenn.dev/penguincabinet/articles/762e7e201fd86a"/>
        <updated>2022-11-14T09:52:14.000Z</updated>
        <summary type="html"><![CDATA[はじめに
Githubプロフィール用のバッジを生成するサービスがあります。
例えば、
Qiitaのコントリビューション数や記事数をバッジにするサービス。
https://qiita.com/mikkame/items/f2c60d9caf8a8e38ec50
Zennの記事数をバッジにするサービス。
https://github.com/nikaera/zenn-badge
偉大な先人たちに感謝…！！
僕のREADMEに使わせていただくと、こんな感じになります。

僕も何かバッジ化するサービスを作りたい。

 Annictとは
アニメ視聴を記録し感想を投稿できるサービスです。
htt...]]></summary>
        <author>
            <name>PenguinCabinet</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[有価証券報告書をベクトル化して散布図にプロット]]></title>
        <id>https://zenn.dev/jnxjez/articles/75a6d77b624a4f</id>
        <link href="https://zenn.dev/jnxjez/articles/75a6d77b624a4f"/>
        <updated>2022-11-13T23:30:43.000Z</updated>
        <summary type="html"><![CDATA[概要
有価証券報告書から作成されたデータセットchABSA-datasetを使用して、文書をベクトル化します。
ベクトルをUMAPで次元圧縮し、Plotlyで可視化します。
可視化する内容は文章を単純にベクトル化したものと、tf-idfで特徴的な単語を抜き出した文章をベクトル化したものの２種類を使用し、tf-idfを使用した場合の方が業種区分ごとにまとまって出力されるかを確認します。
結果は目視でなんとなく確認し、どれぐらいの精度が出ているか定量的な評価はしていません。

 環境
Google Colabを使用します。

 データセット
以下で紹介されていたchABSA-datase...]]></summary>
        <author>
            <name>ジェイ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[最近よく使うようになったPython ライブラリとツール]]></title>
        <id>https://zenn.dev/otwn/articles/c41685c8e4866e</id>
        <link href="https://zenn.dev/otwn/articles/c41685c8e4866e"/>
        <updated>2022-11-13T22:35:56.000Z</updated>
        <summary type="html"><![CDATA[コードのやり取りをする中で新しいライブラリやツールを知ることがあります。またMedium.comのToward Data Scienceで書かれている記事で得た情報を含めて、今年に入ってよく使うようになったと思う４つのツールを紹介したいと思います。

 1. icecream
https://github.com/gruns/icecream
まずはicecream。なぜ知らなかったのかと思ったくらい、これは本当に頻繁に使うようになりました。
if a == b:
    print("if")
    return something
else:
    print("else")
 ...]]></summary>
        <author>
            <name>otwn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django REST frameworkで戦術的DDDを実装してみた]]></title>
        <id>https://zenn.dev/takeojapan/articles/c77cdea47f69de</id>
        <link href="https://zenn.dev/takeojapan/articles/c77cdea47f69de"/>
        <updated>2022-11-13T19:06:44.000Z</updated>
        <summary type="html"><![CDATA[初めに
Django REST framework(DRF)は、Djangoを利用してWeb APIを簡単に実装できるライブラリです。
主な目的は個人的な勉強のためですが、少しでも誰かの参考になればと思ったのでDRFを用いて戦術的DDDパターンを実装したものをまとめました。
DDDについて解説をすることを目的としていないため、もしDDDを知らない方や勉強したい人は先に他の記事をご覧になった方が良いかと思います。

 概要
今回はDjangoのチュートリアルの投票アプリをベースに一部処理を追加したシステムを作成しました。

 ディレクトリ構成
先に今回作成したシステムのディレクトリ構成...]]></summary>
        <author>
            <name>kenta takeuchi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【PyTorch】TorchEval を使って精度評価しよう]]></title>
        <id>https://zenn.dev/a5chin/articles/torchevaluation</id>
        <link href="https://zenn.dev/a5chin/articles/torchevaluation"/>
        <updated>2022-11-13T15:40:19.000Z</updated>
        <summary type="html"><![CDATA[はじめに
今回は PyTorch で Deep Learning (深層学習，機械学習) を行う際に用いる，評価指標の計算方法について記述していきます．
本記事では，TorchEval という Facebook 社が開発を主導している PyTorch と同時に使われることを想定している，2022/10/30 にリリースされたばかりの精度評価用のライブラリです．
ドキュメントを以下に貼っておきます．


 この記事を読むメリット

複雑な評価計算を 1 行で実装できる
PyTorch が公式で出しているライブラリのためコードが綺麗になる

といった 2 点のメリットがあります．
これを...]]></summary>
        <author>
            <name>a5chin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pythonどうでもいい知識集]]></title>
        <id>https://zenn.dev/banananeko/articles/c4df31aea5ae89</id>
        <link href="https://zenn.dev/banananeko/articles/c4df31aea5ae89"/>
        <updated>2022-11-13T13:51:30.000Z</updated>
        <summary type="html"><![CDATA[今回紹介する知識

python1
rpython
コンパイラ
pyopencv
IDLE


 python1
pythonと聞くとpython2とpython3が思いつくと思いますが実はpython1があったのです
https://www.python.org/download/releases/
これが python1のリンクです
あるにはありますが古いので使うのはおすすめしません

 rpython
rpythonと聞くと少し詳しい人なら

pythonはc言語で書かれてcpythonだから
rpythonはr言語で書かれているんだ

と思うかもしれませんが実は
rpytho...]]></summary>
        <author>
            <name>banananeko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SQLAlchemyでmaster/slaveの切り替え]]></title>
        <id>https://zenn.dev/shimakaze_soft/articles/aa6eb5a2097ede</id>
        <link href="https://zenn.dev/shimakaze_soft/articles/aa6eb5a2097ede"/>
        <updated>2022-11-13T12:10:30.000Z</updated>
        <summary type="html"><![CDATA[RDBを使用していて、アクセス数が増えて負荷がかかった際の対処法としては、更新用と参照用でRDBを分けるレプリケーションというものがあります。
PythonのORMであるSQLAlchemyを使用していて、ORMからRDBにアクセスする際には、参照用と更新用に分けたいという状況もあると思います。
RDBのレプリケーションを実施した際に、SQLAlchemyに更新用と参照用を切り替えるための処理の追加方法を紹介します。

 レプリケーションとは
ここでレプリケーションを知らない方のために簡単に解説します。
MySQL/PostgresqlといったRDBを運用していて、アクセス数などが増大し...]]></summary>
        <author>
            <name>shimakaze_soft</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[消費者物価指数データを取得するPythonのコード]]></title>
        <id>https://zenn.dev/welliving/articles/5a0a9636915e29</id>
        <link href="https://zenn.dev/welliving/articles/5a0a9636915e29"/>
        <updated>2022-11-13T10:01:26.000Z</updated>
        <summary type="html"><![CDATA[この記事について
e-Statから消費者物価指数データをPythonで取得します。

 Pythonのコード
jpy-datareaderを使います。
from jpy_datareader import estat
消費者物価指数のデータ数を確認します。
metainfo = estat.MetaInfoReader(api_key, statsDataId="0003427113", name_or_id="name")
meta = metainfo.read()
metainfo.OVERALL_TOTAL_NUMBER
12486296
データ数が多いため、条件で絞ります。...]]></summary>
        <author>
            <name>Ryo YOSHI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python仕事で使うことになりました]]></title>
        <id>https://zenn.dev/joo_hashi/articles/0fcfdf93b63a59</id>
        <link href="https://zenn.dev/joo_hashi/articles/0fcfdf93b63a59"/>
        <updated>2022-11-13T09:52:53.000Z</updated>
        <summary type="html"><![CDATA[まさか使う機会が来るとは!
こんにちは、Jboyです。最近転職して企業さんでPythonを使うことになりました...
「Pythonって仕事ないよ」と昔聞いたことがある😅
でも、求人はいっぱいある?、機械学習ばっかりですけどね...
プログラミングを学ぶならPHP、Javaだと聞きますが、もう初心者のための求人はないと思いますね😭
プログラミングスクールでは、PHP、Ruby、Javaを教えているところがありますが、最近はPythonを教えているところもある。
でも、初心者でPythonの仕事につくのって難しいんですよね😅
やってる僕って結構レアだなと思った🤫

 なぜPython?...]]></summary>
        <author>
            <name>JboyHashimoto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonのstrとrepr]]></title>
        <id>https://zenn.dev/apple_pie1974/articles/ebde81ff587452</id>
        <link href="https://zenn.dev/apple_pie1974/articles/ebde81ff587452"/>
        <updated>2022-11-13T09:19:29.000Z</updated>
        <summary type="html"><![CDATA[自分用メモ

 strとrepr
公式リファレンスによると、
https://docs.python.org/ja/3/reference/datamodel.html?highlight=repr#object.__str__
https://docs.python.org/ja/3/reference/datamodel.html?highlight=repr#object.__repr__
strは

オブジェクトの「非公式の (informal)」あるいは表示に適した文字列表現を計算するために、 str(object) と組み込み関数 format(), print() によって...]]></summary>
        <author>
            <name>ApplePie</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[日本国債金利データを取得するPythonのコード]]></title>
        <id>https://zenn.dev/welliving/articles/7f9354195efb18</id>
        <link href="https://zenn.dev/welliving/articles/7f9354195efb18"/>
        <updated>2022-11-13T08:45:26.000Z</updated>
        <summary type="html"><![CDATA[この記事について
財務省のページから国債金利データを取得します。

 Pythonのコード
import numpy as np
import pandas as pd

jgbcm = pd.read_csv("https://www.mof.go.jp/jgbs/reference/interest_rate/jgbcm.csv", skiprows=1, encoding="shift-jis")
jgbcm_all = pd.read_csv("https://www.mof.go.jp/jgbs/reference/interest_rate/data/jgbcm_all....]]></summary>
        <author>
            <name>Ryo YOSHI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows コマンドプロンプトのデフォルト文字コード取得]]></title>
        <id>https://zenn.dev/mtmatma/articles/c5caf790c13d70</id>
        <link href="https://zenn.dev/mtmatma/articles/c5caf790c13d70"/>
        <updated>2022-11-13T08:31:00.000Z</updated>
        <summary type="html"><![CDATA[Windows コマンドプロンプトのデフォルト文字コード取得
>python
Python 3.10.8 (tags/v3.10.8:aaaf517, Oct 11 2022, 16:50:30) [MSC v.1933 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import _locale
>>> _locale._getdefaultlocale()
('ja_JP', 'cp932')...]]></summary>
        <author>
            <name>masaru tsuchiyama</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】【初心者】numpyで乱数を発生させるメソッドの整理]]></title>
        <id>https://zenn.dev/robes/articles/d9d636e47057e8</id>
        <link href="https://zenn.dev/robes/articles/d9d636e47057e8"/>
        <updated>2022-11-13T06:36:20.000Z</updated>
        <summary type="html"><![CDATA[numpyで乱数を発生させるメソッド
特によく使うrand(),random_sample(),randint(),randn() について整理しました。
ざっくりまとめると、以下の通りです。

ひとつひとつ実際の動きを見ていきましょう

 rand()
引数に何も指定しない場合、0以上1未満の乱数がスカラーで返ってきます。
np.random.rand()
出力値
0.11687868813774382
引数xを指定すると、乱数がx次元のベクトルで返ってきます。
np.random.rand(5)
出力値
array([0.42817233, 0.06407754, 0.5981927...]]></summary>
        <author>
            <name>osn_Lofi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[勾配ブースティングで「幅を持たせた予測」を行う]]></title>
        <id>https://zenn.dev/joanofarc/articles/gradient-boosting-interval-prediction</id>
        <link href="https://zenn.dev/joanofarc/articles/gradient-boosting-interval-prediction"/>
        <updated>2022-11-13T05:57:54.000Z</updated>
        <summary type="html"><![CDATA[背景と目的
ビジネスにおいて機械学習による回帰モデルを構築する際に、単に「予測値（点予測）」が知りたいというよりも、「予測値が（どれくらいの確率で）どれくらいの範囲に収まりそうか（区間予測）」を知りたい場面があります。例えば天気予報を眺めてみると台風の進路予測には予報円が出ており、ある程度幅を持たせて進路を予測するといったことが行われています。あるいは需要予測を行う場合に「95%の確率で40個~60個の間に入りそうだ」という幅を持たせた予測をすることができれば、「売れ残りがでると損失が大きいので、明日の仕入れ量は40個にしよう」といった意思決定に繋げることができるかおしれません。
そ...]]></summary>
        <author>
            <name>JoanOfArc</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでデザインパターンを学ぶ(Adapterパターン)]]></title>
        <id>https://zenn.dev/satoshi256kbyte/articles/a4fa95984e2974</id>
        <link href="https://zenn.dev/satoshi256kbyte/articles/a4fa95984e2974"/>
        <updated>2022-11-13T04:21:25.000Z</updated>
        <summary type="html"><![CDATA[こんにちは。深緑です。
チーム内で改めてデザインパターンを学び始めました。
記録のために記事に残しておこうと思います。

 はじめに
GoFのデザインパターンを一つずつ学んでいきます。
今回はAdapterパターンです。
Wikipedia - Adapter パターン
言語はPythonを使用します。

 サンプルコードのシチュエーション
学校において、現在生徒を特定するコードを和暦＋学部＋学科＋数字４桁で管理しています。
令和５年度から西暦＋学部＋学科＋数字４桁で管理するとします。



年度
コードのフォーマット
例




令和４年度まで
和暦＋学部＋学科＋数字４桁
04TEIT...]]></summary>
        <author>
            <name>深緑　聡</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[円周率とわし]]></title>
        <id>https://zenn.dev/taroh/articles/c965946e457059</id>
        <link href="https://zenn.dev/taroh/articles/c965946e457059"/>
        <updated>2022-11-13T03:39:41.000Z</updated>
        <summary type="html"><![CDATA[円周率40億桁求めた。
たった40億桁でこんなこと言うと円周率ガチ勢には笑われるかもしれないが、今生で自作プログラム (Python3で60行ほど、ラップトップでわずか7時間) で円周率をこんなに求められるとは思わなかったなー。
2022年現在のテクノロジでちょちょっと計算して円周率が計算できた、のを、ハマって多桁・高速化した、2022年11月の1週間くらいの記録。
!
追記: 公開してからふと右をみてみると、この駄文、ちょうど1文字1byteのテキスト化した\piでいったら2万桁分くらいらしい。2万桁の\piを計算するのは下記のように10msec程度になったのだが、そのうちTransf...]]></summary>
        <author>
            <name>taroh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythonでリストの組合せを作成する]]></title>
        <id>https://zenn.dev/mimitako/articles/python_list_combination_gen</id>
        <link href="https://zenn.dev/mimitako/articles/python_list_combination_gen"/>
        <updated>2022-11-12T23:47:00.000Z</updated>
        <summary type="html"><![CDATA[Python でリストの組合せを作成する
大した技術ではありませんが、地味に使っているので公開します。

 モチベーション
Stable Diffusion で Prompt の組合せ評価を行っているとき、いろいろ組合せがあると面倒だからなんとかならんかなぁ？と考えていました。
調べれば itertools というライブラリで目的は達成できるのですが、ベースを Json にしていたので、辞書キー:リストの形でうまく使えるようにしたかったです。

 使い方
コードは下記の通り簡単です。

key:list の形で形成された辞書を作成します。
各 key のリストを大きいリストでネストし...]]></summary>
        <author>
            <name>mimitako</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Python】EDINET APIから取得した有価証券報告書のテキストデータと財務データを保存【Google Colab】]]></title>
        <id>https://zenn.dev/neomocha/articles/2bc426bf067ef1</id>
        <link href="https://zenn.dev/neomocha/articles/2bc426bf067ef1"/>
        <updated>2022-11-12T16:06:22.000Z</updated>
        <summary type="html"><![CDATA[まとめると
!
有価証券報告書からのテキスト分析&財務分析をする準備として、EDINET APIから取得した有価証券報告書のテキストデータと財務データをGoogle Driveへ保存します🐱

!
Google Colabで動かしています。

つぎの流れでやっていきます。

ライブラリのインポート
有価証券報告書のdocIDを取得
有価証券報告書が入ったzipファイルを取得
zipファイルを解凍
XBRLファイルからテキストデータと財務データを取得
取得したデータをGoogle Driveに保存

作成にあたっては次の記事を参考にしました。とても役立つ内容をありがとうございま...]]></summary>
        <author>
            <name>mocha</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Excelにまとめて画像ファイルを挿入する方法 Python編]]></title>
        <id>https://zenn.dev/kokopi/articles/fd4ebe665b157b</id>
        <link href="https://zenn.dev/kokopi/articles/fd4ebe665b157b"/>
        <updated>2022-11-12T15:57:56.000Z</updated>
        <summary type="html"><![CDATA[解決したい問題
通常、ExcelのSheet内に画像を取り込みたいときは、メニューの挿入から画像を選択します。
しかし、それが何枚もとなると面倒臭いですよね？
さらに、業務などで日常的にとなると費やす時間は計り知れません。
今回はそんな方に向けた記事を紹介していきます。


 対象となる人
プログラミングって何？なんか英語でつらつらと書くやつ？？
そんなのさっぱりわからないしやりたくない、できない。というノンプログラマーの方に向けて丁寧に説明していきます。


 解決策
Python(パイソン)というプログラム言語を使って、Excelへの画像貼り付けを自動化します。
待て待て、さっき...]]></summary>
        <author>
            <name>ここぴのパパ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[画像からテキストを生成してみた]]></title>
        <id>https://zenn.dev/mimitako/articles/img2text_trial1</id>
        <link href="https://zenn.dev/mimitako/articles/img2text_trial1"/>
        <updated>2022-11-12T14:34:56.000Z</updated>
        <summary type="html"><![CDATA[画像からテキストを生成してみた
さて、今回は画像からテキストを生成してみようと思います。画像には CC0 のものとそうでないものが混在したため、ここに貼付けせず、リンクで表記しています。

 モチベーション
この作業を行ったモチベーションは Stable Diffusion で遊ぶのは良いが、逆生成(img to prompt)はできないものかと思い実行しました。結果は散々なものです。ここには画像ありませんが、気になった方は読み進めてもらえると嬉しいです。

 img2text の中身
ほぼ Hugging Face にあったコードを利用させていただいています。Link
修正したとこ...]]></summary>
        <author>
            <name>mimitako</name>
        </author>
    </entry>
</feed>